
;; Function bound (bound_, funcdef_no=0, decl_uid=3768, cgraph_uid=0, symbol_order=0)

(note 1 0 10 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
(note 10 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 10 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [3 fld+0 S8 A64])
        (reg:DI 5 di [ fld ])) "BOUND.f":1 85 {*movdi_internal}
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [4 fmin+0 S8 A64])
        (reg:DI 4 si [ fmin ])) "BOUND.f":1 85 {*movdi_internal}
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [4 fmax+0 S8 A64])
        (reg:DI 1 dx [ fmax ])) "BOUND.f":1 85 {*movdi_internal}
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [5 im+0 S8 A64])
        (reg:DI 2 cx [ im ])) "BOUND.f":1 85 {*movdi_internal}
     (nil))
(insn 6 5 7 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [5 jm+0 S8 A64])
        (reg:DI 37 r8 [ jm ])) "BOUND.f":1 85 {*movdi_internal}
     (nil))
(note 7 6 12 2 NOTE_INSN_FUNCTION_BEG)
(insn 12 7 13 2 (set (reg/f:DI 135)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [5 im+0 S8 A64])) "BOUND.f":1 85 {*movdi_internal}
     (nil))
(insn 13 12 14 2 (set (reg:SI 87 [ _1 ])
        (mem:SI (reg/f:DI 135) [1 *im_41(D)+0 S4 A32])) "BOUND.f":1 86 {*movsi_internal}
     (nil))
(insn 14 13 15 2 (set (reg:DI 136)
        (sign_extend:DI (reg:SI 87 [ _1 ]))) "BOUND.f":1 149 {*extendsidi2_rex64}
     (nil))
(insn 15 14 16 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 ubound.0+0 S8 A64])
        (reg:DI 136)) "BOUND.f":1 85 {*movdi_internal}
     (nil))
(insn 16 15 18 2 (set (reg:DI 121 [ stride.2_43 ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 ubound.0+0 S8 A64])) "BOUND.f":1 85 {*movdi_internal}
     (nil))
(insn 18 16 17 2 (set (reg:DI 137)
        (const_int 0 [0])) "BOUND.f":1 85 {*movdi_internal}
     (nil))
(insn 17 18 19 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 121 [ stride.2_43 ])
            (const_int 0 [0]))) "BOUND.f":1 8 {*cmpdi_ccno_1}
     (nil))
(insn 19 17 20 2 (set (reg:DI 122 [ stride.2_44 ])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 121 [ stride.2_43 ])
            (reg:DI 137))) "BOUND.f":1 1003 {*movdicc_noc}
     (nil))
(insn 20 19 21 2 (set (reg/f:DI 138)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [5 jm+0 S8 A64])) "BOUND.f":1 85 {*movdi_internal}
     (nil))
(insn 21 20 22 2 (set (reg:SI 88 [ _2 ])
        (mem:SI (reg/f:DI 138) [1 *jm_45(D)+0 S4 A32])) "BOUND.f":1 86 {*movsi_internal}
     (nil))
(insn 22 21 23 2 (set (reg:DI 139)
        (sign_extend:DI (reg:SI 88 [ _2 ]))) "BOUND.f":1 149 {*extendsidi2_rex64}
     (nil))
(insn 23 22 24 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [2 ubound.1+0 S8 A64])
        (reg:DI 139)) "BOUND.f":1 85 {*movdi_internal}
     (nil))
(insn 24 23 26 2 (parallel [
            (set (reg:DI 123 [ size.4_47 ])
                (mult:DI (reg:DI 122 [ stride.2_44 ])
                    (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -24 [0xffffffffffffffe8])) [2 ubound.1+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) "BOUND.f":1 349 {*muldi3_1}
     (nil))
(insn 26 24 25 2 (set (reg:DI 140)
        (const_int 0 [0])) "BOUND.f":1 85 {*movdi_internal}
     (nil))
(insn 25 26 27 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 123 [ size.4_47 ])
            (const_int 0 [0]))) "BOUND.f":1 8 {*cmpdi_ccno_1}
     (nil))
(insn 27 25 28 2 (set (reg:DI 124 [ size.4_48 ])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 123 [ size.4_47 ])
            (reg:DI 140))) "BOUND.f":1 1003 {*movdicc_noc}
     (nil))
(insn 28 27 29 2 (parallel [
            (set (reg:DI 125 [ _49 ])
                (plus:DI (reg:DI 124 [ size.4_48 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "BOUND.f":1 222 {*adddi_1}
     (nil))
(insn 29 28 30 2 (set (reg:DI 89 [ size.7_3 ])
        (reg:DI 124 [ size.4_48 ])) "BOUND.f":1 85 {*movdi_internal}
     (nil))
(insn 30 29 31 2 (set (subreg:DI (reg:TI 90 [ _4 ]) 0)
        (reg:DI 89 [ size.7_3 ])) "BOUND.f":1 85 {*movdi_internal}
     (nil))
(insn 31 30 32 2 (set (subreg:DI (reg:TI 90 [ _4 ]) 8)
        (const_int 0 [0])) "BOUND.f":1 85 {*movdi_internal}
     (nil))
(insn 32 31 33 2 (parallel [
            (set (reg:TI 126 [ _50 ])
                (ashift:TI (reg:TI 90 [ _4 ])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) "BOUND.f":1 541 {*ashlti3_doubleword}
     (nil))
(insn 33 32 34 2 (set (reg:DI 91 [ size.8_5 ])
        (reg:DI 124 [ size.4_48 ])) "BOUND.f":1 85 {*movdi_internal}
     (nil))
(insn 34 33 35 2 (parallel [
            (set (reg:DI 127 [ _51 ])
                (ashift:DI (reg:DI 91 [ size.8_5 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "BOUND.f":1 551 {*ashldi3_1}
     (nil))
(insn 35 34 36 2 (set (reg:DI 128 [ offset.3_52 ])
        (not:DI (reg:DI 122 [ stride.2_44 ]))) "BOUND.f":1 532 {*one_cmpldi2_1}
     (nil))
(insn 36 35 37 2 (set (reg:SI 92 [ _6 ])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f4161f76870 parallel>)
                    (const_int 4 [0x4]))) [1 parallel.me+0 S4 A32])) "BOUND.f":1 86 {*movsi_internal}
     (nil))
(insn 37 36 38 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 92 [ _6 ])
            (const_int 0 [0]))) "BOUND.f":56 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 38 37 39 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 140)
            (pc))) "BOUND.f":56 682 {*jcc}
     (nil)
 -> 140)
;;  succ:       4 (FALLTHRU)
;;              17

;; basic block 4, loop depth 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
(note 39 38 40 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 41 4 (set (reg/f:DI 141)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [5 jm+0 S8 A64])) "BOUND.f":58 85 {*movdi_internal}
     (nil))
(insn 41 40 42 4 (set (reg:SI 129 [ _53 ])
        (mem:SI (reg/f:DI 141) [1 *jm_45(D)+0 S4 A32])) "BOUND.f":58 86 {*movsi_internal}
     (nil))
(insn 42 41 131 4 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
        (const_int 1 [0x1])) "BOUND.f":58 86 {*movsi_internal}
     (nil))
;;  succ:       5 (FALLTHRU)

;; basic block 5, loop depth 1, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;;              13 (DFS_BACK)
(code_label 131 42 43 5 8 (nil) [1 uses])
(note 43 131 44 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 45 5 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (reg:SI 129 [ _53 ]))) "BOUND.f":58 11 {*cmpsi_1}
     (nil))
(insn 45 44 46 5 (set (reg:QI 142)
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "BOUND.f":58 678 {*setcc_qi}
     (nil))
(insn 46 45 47 5 (set (reg:SI 130 [ _55 ])
        (zero_extend:SI (reg:QI 142))) "BOUND.f":58 140 {*zero_extendqisi2}
     (nil))
(insn 47 46 48 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 130 [ _55 ])
            (const_int 0 [0]))) "BOUND.f":58 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 48 47 49 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 136)
            (pc))) "BOUND.f":58 682 {*jcc}
     (nil)
 -> 136)
;;  succ:       15
;;              6 (FALLTHRU)

;; basic block 6, loop depth 1, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       5 (FALLTHRU)
(note 49 48 50 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 50 49 51 6 (set (reg/f:DI 143)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [5 im+0 S8 A64])) "BOUND.f":59 85 {*movdi_internal}
     (nil))
(insn 51 50 52 6 (set (reg:SI 131 [ _56 ])
        (mem:SI (reg/f:DI 143) [1 *im_41(D)+0 S4 A32])) "BOUND.f":59 86 {*movsi_internal}
     (nil))
(insn 52 51 125 6 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
        (const_int 1 [0x1])) "BOUND.f":59 86 {*movsi_internal}
     (nil))
;;  succ:       7 (FALLTHRU)

;; basic block 7, loop depth 2, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       6 (FALLTHRU)
;;              12 (DFS_BACK)
(code_label 125 52 53 7 7 (nil) [1 uses])
(note 53 125 54 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 54 53 55 7 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
            (reg:SI 131 [ _56 ]))) "BOUND.f":59 11 {*cmpsi_1}
     (nil))
(insn 55 54 56 7 (set (reg:QI 144)
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "BOUND.f":59 678 {*setcc_qi}
     (nil))
(insn 56 55 57 7 (set (reg:SI 132 [ _58 ])
        (zero_extend:SI (reg:QI 144))) "BOUND.f":59 140 {*zero_extendqisi2}
     (nil))
(insn 57 56 58 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 132 [ _58 ])
            (const_int 0 [0]))) "BOUND.f":59 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 58 57 59 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 128)
            (pc))) "BOUND.f":59 682 {*jcc}
     (nil)
 -> 128)
;;  succ:       13
;;              8 (FALLTHRU)

;; basic block 8, loop depth 2, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       7 (FALLTHRU)
(note 59 58 60 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 60 59 61 8 (set (reg/f:DI 145)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [4 fmin+0 S8 A64])) "BOUND.f":60 85 {*movdi_internal}
     (nil))
(insn 61 60 62 8 (set (reg:SF 119 [ M.5_35 ])
        (mem:SF (reg/f:DI 145) [7 *fmin_59(D)+0 S4 A32])) "BOUND.f":60 131 {*movsf_internal}
     (nil))
(insn 62 61 63 8 (set (reg:SI 146)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "BOUND.f":60 86 {*movsi_internal}
     (nil))
(insn 63 62 64 8 (set (reg:DI 93 [ _7 ])
        (sign_extend:DI (reg:SI 146))) "BOUND.f":60 149 {*extendsidi2_rex64}
     (nil))
(insn 64 63 65 8 (parallel [
            (set (reg:DI 94 [ _8 ])
                (mult:DI (reg:DI 122 [ stride.2_44 ])
                    (reg:DI 93 [ _7 ])))
            (clobber (reg:CC 17 flags))
        ]) "BOUND.f":60 349 {*muldi3_1}
     (nil))
(insn 65 64 66 8 (parallel [
            (set (reg:DI 95 [ _9 ])
                (plus:DI (reg:DI 128 [ offset.3_52 ])
                    (reg:DI 94 [ _8 ])))
            (clobber (reg:CC 17 flags))
        ]) "BOUND.f":60 222 {*adddi_1}
     (nil))
(insn 66 65 67 8 (set (reg:SI 147)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "BOUND.f":60 86 {*movsi_internal}
     (nil))
(insn 67 66 68 8 (set (reg:DI 96 [ _10 ])
        (sign_extend:DI (reg:SI 147))) "BOUND.f":60 149 {*extendsidi2_rex64}
     (nil))
(insn 68 67 69 8 (parallel [
            (set (reg:DI 97 [ _11 ])
                (plus:DI (reg:DI 95 [ _9 ])
                    (reg:DI 96 [ _10 ])))
            (clobber (reg:CC 17 flags))
        ]) "BOUND.f":60 222 {*adddi_1}
     (nil))
(insn 69 68 70 8 (set (reg/f:DI 148)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [3 fld+0 S8 A64])) "BOUND.f":60 85 {*movdi_internal}
     (nil))
(insn 70 69 71 8 (set (reg:SF 133 [ _63 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 97 [ _11 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 148)) [7 *fld_62(D) S4 A32])) "BOUND.f":60 131 {*movsf_internal}
     (nil))
(insn 71 70 72 8 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 133 [ _63 ])
            (reg:SF 119 [ M.5_35 ]))) "BOUND.f":60 53 {*cmpisf}
     (nil))
(insn 72 71 73 8 (set (reg:QI 149)
        (gt:QI (reg:CCFP 17 flags)
            (const_int 0 [0]))) "BOUND.f":60 678 {*setcc_qi}
     (nil))
(insn 73 72 74 8 (set (reg:SI 98 [ _12 ])
        (zero_extend:SI (reg:QI 149))) "BOUND.f":60 140 {*zero_extendqisi2}
     (nil))
(insn 74 73 75 8 (set (reg:CCFP 17 flags)
        (unspec:CCFP [
                (compare:CCFP (reg:SF 119 [ M.5_35 ])
                    (reg:SF 119 [ M.5_35 ]))
            ] UNSPEC_NOTRAP)) "BOUND.f":60 54 {*cmpiusf}
     (nil))
(insn 75 74 76 8 (set (reg:QI 150)
        (unordered:QI (reg:CCFP 17 flags)
            (const_int 0 [0]))) "BOUND.f":60 678 {*setcc_qi}
     (nil))
(insn 76 75 77 8 (set (reg:SI 99 [ _13 ])
        (zero_extend:SI (reg:QI 150))) "BOUND.f":60 140 {*zero_extendqisi2}
     (nil))
(insn 77 76 78 8 (parallel [
            (set (reg:SI 100 [ _14 ])
                (ior:SI (reg:SI 98 [ _12 ])
                    (reg:SI 99 [ _13 ])))
            (clobber (reg:CC 17 flags))
        ]) "BOUND.f":60 450 {*iorsi_1}
     (nil))
(insn 78 77 79 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 100 [ _14 ])
            (const_int 0 [0]))) "BOUND.f":60 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 79 78 80 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 81)
            (pc))) "BOUND.f":60 682 {*jcc}
     (nil)
 -> 81)
;;  succ:       9 (FALLTHRU)
;;              10

;; basic block 9, loop depth 2, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
(note 80 79 8 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 8 80 81 9 (set (reg:SF 119 [ M.5_35 ])
        (reg:SF 133 [ _63 ])) "BOUND.f":60 131 {*movsf_internal}
     (nil))
;;  succ:       10 (FALLTHRU)

;; basic block 10, loop depth 2, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL)
;;  pred:       8
;;              9 (FALLTHRU)
(code_label 81 8 82 10 5 (nil) [1 uses])
(note 82 81 83 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 83 82 84 10 (set (reg:SI 151)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "BOUND.f":60 86 {*movsi_internal}
     (nil))
(insn 84 83 85 10 (set (reg:DI 101 [ _15 ])
        (sign_extend:DI (reg:SI 151))) "BOUND.f":60 149 {*extendsidi2_rex64}
     (nil))
(insn 85 84 86 10 (parallel [
            (set (reg:DI 102 [ _16 ])
                (mult:DI (reg:DI 122 [ stride.2_44 ])
                    (reg:DI 101 [ _15 ])))
            (clobber (reg:CC 17 flags))
        ]) "BOUND.f":60 349 {*muldi3_1}
     (nil))
(insn 86 85 87 10 (parallel [
            (set (reg:DI 103 [ _17 ])
                (plus:DI (reg:DI 128 [ offset.3_52 ])
                    (reg:DI 102 [ _16 ])))
            (clobber (reg:CC 17 flags))
        ]) "BOUND.f":60 222 {*adddi_1}
     (nil))
(insn 87 86 88 10 (set (reg:SI 152)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "BOUND.f":60 86 {*movsi_internal}
     (nil))
(insn 88 87 89 10 (set (reg:DI 104 [ _18 ])
        (sign_extend:DI (reg:SI 152))) "BOUND.f":60 149 {*extendsidi2_rex64}
     (nil))
(insn 89 88 90 10 (parallel [
            (set (reg:DI 105 [ _19 ])
                (plus:DI (reg:DI 103 [ _17 ])
                    (reg:DI 104 [ _18 ])))
            (clobber (reg:CC 17 flags))
        ]) "BOUND.f":60 222 {*adddi_1}
     (nil))
(insn 90 89 91 10 (set (reg/f:DI 153)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [3 fld+0 S8 A64])) "BOUND.f":60 85 {*movdi_internal}
     (nil))
(insn 91 90 92 10 (set (mem:SF (plus:DI (mult:DI (reg:DI 105 [ _19 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 153)) [7 *fld_62(D) S4 A32])
        (reg:SF 119 [ M.5_35 ])) "BOUND.f":60 131 {*movsf_internal}
     (nil))
(insn 92 91 93 10 (set (reg:SI 154)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "BOUND.f":61 86 {*movsi_internal}
     (nil))
(insn 93 92 94 10 (set (reg:DI 106 [ _20 ])
        (sign_extend:DI (reg:SI 154))) "BOUND.f":61 149 {*extendsidi2_rex64}
     (nil))
(insn 94 93 95 10 (parallel [
            (set (reg:DI 107 [ _21 ])
                (mult:DI (reg:DI 122 [ stride.2_44 ])
                    (reg:DI 106 [ _20 ])))
            (clobber (reg:CC 17 flags))
        ]) "BOUND.f":61 349 {*muldi3_1}
     (nil))
(insn 95 94 96 10 (parallel [
            (set (reg:DI 108 [ _22 ])
                (plus:DI (reg:DI 128 [ offset.3_52 ])
                    (reg:DI 107 [ _21 ])))
            (clobber (reg:CC 17 flags))
        ]) "BOUND.f":61 222 {*adddi_1}
     (nil))
(insn 96 95 97 10 (set (reg:SI 155)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "BOUND.f":61 86 {*movsi_internal}
     (nil))
(insn 97 96 98 10 (set (reg:DI 109 [ _23 ])
        (sign_extend:DI (reg:SI 155))) "BOUND.f":61 149 {*extendsidi2_rex64}
     (nil))
(insn 98 97 99 10 (parallel [
            (set (reg:DI 110 [ _24 ])
                (plus:DI (reg:DI 108 [ _22 ])
                    (reg:DI 109 [ _23 ])))
            (clobber (reg:CC 17 flags))
        ]) "BOUND.f":61 222 {*adddi_1}
     (nil))
(insn 99 98 100 10 (set (reg/f:DI 156)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [3 fld+0 S8 A64])) "BOUND.f":61 85 {*movdi_internal}
     (nil))
(insn 100 99 101 10 (set (reg:SF 120 [ M.6_36 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 110 [ _24 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 156)) [7 *fld_62(D) S4 A32])) "BOUND.f":61 131 {*movsf_internal}
     (nil))
(insn 101 100 102 10 (set (reg/f:DI 157)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [4 fmax+0 S8 A64])) "BOUND.f":61 85 {*movdi_internal}
     (nil))
(insn 102 101 103 10 (set (reg:SF 134 [ _69 ])
        (mem:SF (reg/f:DI 157) [7 *fmax_68(D)+0 S4 A32])) "BOUND.f":61 131 {*movsf_internal}
     (nil))
(insn 103 102 104 10 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 120 [ M.6_36 ])
            (reg:SF 134 [ _69 ]))) "BOUND.f":61 53 {*cmpisf}
     (nil))
(insn 104 103 105 10 (set (reg:QI 159)
        (gt:QI (reg:CCFP 17 flags)
            (const_int 0 [0]))) "BOUND.f":61 678 {*setcc_qi}
     (nil))
(insn 105 104 106 10 (set (reg:SI 111 [ _25 ])
        (zero_extend:SI (reg:QI 159))) "BOUND.f":61 140 {*zero_extendqisi2}
     (nil))
(insn 106 105 107 10 (set (reg:CCFP 17 flags)
        (unspec:CCFP [
                (compare:CCFP (reg:SF 120 [ M.6_36 ])
                    (reg:SF 120 [ M.6_36 ]))
            ] UNSPEC_NOTRAP)) "BOUND.f":61 54 {*cmpiusf}
     (nil))
(insn 107 106 108 10 (set (reg:QI 160)
        (unordered:QI (reg:CCFP 17 flags)
            (const_int 0 [0]))) "BOUND.f":61 678 {*setcc_qi}
     (nil))
(insn 108 107 109 10 (set (reg:SI 112 [ _26 ])
        (zero_extend:SI (reg:QI 160))) "BOUND.f":61 140 {*zero_extendqisi2}
     (nil))
(insn 109 108 110 10 (parallel [
            (set (reg:SI 113 [ _27 ])
                (ior:SI (reg:SI 111 [ _25 ])
                    (reg:SI 112 [ _26 ])))
            (clobber (reg:CC 17 flags))
        ]) "BOUND.f":61 450 {*iorsi_1}
     (nil))
(insn 110 109 111 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 113 [ _27 ])
            (const_int 0 [0]))) "BOUND.f":61 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 111 110 112 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 113)
            (pc))) "BOUND.f":61 682 {*jcc}
     (nil)
 -> 113)
;;  succ:       11 (FALLTHRU)
;;              12

;; basic block 11, loop depth 2, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10 (FALLTHRU)
(note 112 111 9 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 9 112 113 11 (set (reg:SF 120 [ M.6_36 ])
        (reg:SF 134 [ _69 ])) "BOUND.f":61 131 {*movsf_internal}
     (nil))
;;  succ:       12 (FALLTHRU)

;; basic block 12, loop depth 2, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL)
;;  pred:       10
;;              11 (FALLTHRU)
(code_label 113 9 114 12 6 (nil) [1 uses])
(note 114 113 115 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 115 114 116 12 (set (reg:SI 161)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "BOUND.f":61 86 {*movsi_internal}
     (nil))
(insn 116 115 117 12 (set (reg:DI 114 [ _28 ])
        (sign_extend:DI (reg:SI 161))) "BOUND.f":61 149 {*extendsidi2_rex64}
     (nil))
(insn 117 116 118 12 (parallel [
            (set (reg:DI 115 [ _29 ])
                (mult:DI (reg:DI 122 [ stride.2_44 ])
                    (reg:DI 114 [ _28 ])))
            (clobber (reg:CC 17 flags))
        ]) "BOUND.f":61 349 {*muldi3_1}
     (nil))
(insn 118 117 119 12 (parallel [
            (set (reg:DI 116 [ _30 ])
                (plus:DI (reg:DI 128 [ offset.3_52 ])
                    (reg:DI 115 [ _29 ])))
            (clobber (reg:CC 17 flags))
        ]) "BOUND.f":61 222 {*adddi_1}
     (nil))
(insn 119 118 120 12 (set (reg:SI 162)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "BOUND.f":61 86 {*movsi_internal}
     (nil))
(insn 120 119 121 12 (set (reg:DI 117 [ _31 ])
        (sign_extend:DI (reg:SI 162))) "BOUND.f":61 149 {*extendsidi2_rex64}
     (nil))
(insn 121 120 122 12 (parallel [
            (set (reg:DI 118 [ _32 ])
                (plus:DI (reg:DI 116 [ _30 ])
                    (reg:DI 117 [ _31 ])))
            (clobber (reg:CC 17 flags))
        ]) "BOUND.f":61 222 {*adddi_1}
     (nil))
(insn 122 121 123 12 (set (reg/f:DI 163)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [3 fld+0 S8 A64])) "BOUND.f":61 85 {*movdi_internal}
     (nil))
(insn 123 122 124 12 (set (mem:SF (plus:DI (mult:DI (reg:DI 118 [ _32 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 163)) [7 *fld_62(D) S4 A32])
        (reg:SF 120 [ M.6_36 ])) "BOUND.f":61 131 {*movsf_internal}
     (nil))
(insn 124 123 126 12 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "BOUND.f":59 221 {*addsi_1}
     (nil))
(jump_insn 126 124 127 12 (set (pc)
        (label_ref 125)) "BOUND.f":59 683 {jump}
     (nil)
 -> 125)
;;  succ:       7 (DFS_BACK)

(barrier 127 126 128)
;; basic block 13, loop depth 1, maybe hot
;;  prev block 12, next block 15, flags: (NEW, REACHABLE, RTL)
;;  pred:       7
(code_label 128 127 129 13 4 (nil) [1 uses])
(note 129 128 130 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 130 129 132 13 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "BOUND.f":58 221 {*addsi_1}
     (nil))
(jump_insn 132 130 133 13 (set (pc)
        (label_ref 131)) "BOUND.f":58 683 {jump}
     (nil)
 -> 131)
;;  succ:       5 (DFS_BACK)

(barrier 133 132 136)
;; basic block 15, loop depth 0, maybe hot
;;  prev block 13, next block 17, flags: (NEW, REACHABLE, RTL)
;;  pred:       5
(code_label 136 133 137 15 2 (nil) [1 uses])
(note 137 136 142 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 142 137 140 15 (const_int 0 [0]) "BOUND.f":69 718 {nop}
     (nil))
;;  succ:       17 (FALLTHRU)

;; basic block 17, loop depth 0, maybe hot
;;  prev block 15, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       15 (FALLTHRU)
;;              2
(code_label 140 142 141 17 1 (nil) [1 uses])
(note 141 140 0 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [always]  (FALLTHRU)

