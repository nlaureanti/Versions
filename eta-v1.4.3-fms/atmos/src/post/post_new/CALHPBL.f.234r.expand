
;; Function calhpbl (calhpbl_, funcdef_no=0, decl_uid=3769, cgraph_uid=0, symbol_order=0)

calhpbl (real(kind=4)[29631] * restrict hpbl)
{
  real(kind=4) D.4024;
  real(kind=4) M.0;
  logical(kind=4) D.4018;
  integer(kind=4) D.4015;
  integer(kind=4) D.4014;
  logical(kind=4) D.4013;
  logical(kind=4) D.4010;
  integer(kind=4) nepsq2;
  integer(kind=4) lpbl;
  integer(kind=4) lmhk;
  integer(kind=4) l;
  integer(kind=4) j;
  integer(kind=4) i;
  static real(kind=4) q2[1125978] [value-expr: pvrbls.q2];
  static real(kind=4) cuprec[29631] [value-expr: pvrbls.cuprec];
  static real(kind=4) accliq[29631] [value-expr: pvrbls.accliq];
  static real(kind=4) acprec[29631] [value-expr: pvrbls.acprec];
  static real(kind=4) prec[29631] [value-expr: pvrbls.prec];
  static real(kind=4) cldefi[29631] [value-expr: pvrbls.cldefi];
  static real(kind=4) si[29631] [value-expr: pvrbls.si];
  static real(kind=4) sno[29631] [value-expr: pvrbls.sno];
  static real(kind=4) qwbs[29631] [value-expr: pvrbls.qwbs];
  static real(kind=4) twbs[29631] [value-expr: pvrbls.twbs];
  static real(kind=4) rf[29631] [value-expr: pvrbls.rf];
  static real(kind=4) qz0[29631] [value-expr: pvrbls.qz0];
  static real(kind=4) thz0[29631] [value-expr: pvrbls.thz0];
  static real(kind=4) vz0[29631] [value-expr: pvrbls.vz0];
  static real(kind=4) uz0[29631] [value-expr: pvrbls.uz0];
  static real(kind=4) qs[29631] [value-expr: pvrbls.qs];
  static real(kind=4) ths[29631] [value-expr: pvrbls.ths];
  static real(kind=4) akhs[29631] [value-expr: pvrbls.akhs];
  static real(kind=4) akms[29631] [value-expr: pvrbls.akms];
  static real(kind=4) z0[29631] [value-expr: pvrbls.z0];
  static integer(kind=4) jend_2u [value-expr: parallel.jend_2u];
  static integer(kind=4) jsta_2l [value-expr: parallel.jsta_2l];
  static integer(kind=4) idsp[1024] [value-expr: parallel.idsp];
  static integer(kind=4) icnt[1024] [value-expr: parallel.icnt];
  static integer(kind=4) idn [value-expr: parallel.idn];
  static integer(kind=4) iup [value-expr: parallel.iup];
  static integer(kind=4) jend_m2 [value-expr: parallel.jend_m2];
  static integer(kind=4) jsta_m2 [value-expr: parallel.jsta_m2];
  static integer(kind=4) jend_m [value-expr: parallel.jend_m];
  static integer(kind=4) jsta_m [value-expr: parallel.jsta_m];
  static integer(kind=4) jend [value-expr: parallel.jend];
  static integer(kind=4) jsta [value-expr: parallel.jsta];
  static integer(kind=4) me [value-expr: parallel.me];
  static integer(kind=4) num_procs [value-expr: parallel.num_procs];
  static integer(kind=4) lmv[29631] [value-expr: loops.lmv];
  static integer(kind=4) lmh[29631] [value-expr: loops.lmh];
  static integer(kind=4) jra[484] [value-expr: loops.jra];
  static integer(kind=4) ivha[484] [value-expr: loops.ivha];
  static integer(kind=4) ivla[484] [value-expr: loops.ivla];
  static integer(kind=4) ihha[484] [value-expr: loops.ihha];
  static integer(kind=4) ihla[484] [value-expr: loops.ihla];
  static integer(kind=4) maxwv[29631] [value-expr: extra.maxwv];
  static integer(kind=4) maxwu[29631] [value-expr: extra.maxwu];
  static real(kind=4) tlmax[29631] [value-expr: extra.tlmax];
  static real(kind=4) tlmin[29631] [value-expr: extra.tlmin];
  static real(kind=4) stdrd [value-expr: extra.stdrd];
  static real(kind=4) oldrd [value-expr: extra.oldrd];
  static real(kind=4) z1000[29631] [value-expr: extra.z1000];
  static real(kind=4) qsl[29631] [value-expr: extra.qsl];
  static real(kind=4) fsl[29631] [value-expr: extra.fsl];
  static real(kind=4) ttv[29631] [value-expr: extra.ttv];
  static real(kind=4) tsl[29631] [value-expr: extra.tsl];
  static real(kind=4) pfsl[29631] [value-expr: extra.pfsl];
  static real(kind=4) ptsl[29631] [value-expr: extra.ptsl];
  static real(kind=4) pslp[29631] [value-expr: extra.pslp];
  static real(kind=4) pdvp1[29631] [value-expr: extra.pdvp1];
  static real(kind=4) pdsl[29631] [value-expr: extra.pdsl];
  static real(kind=4) t500[29631] [value-expr: extra.t500];
  static real(kind=4) slp[29631] [value-expr: extra.slp];
  static integer(kind=4) kmnt[1121266] [value-expr: extra.kmnt];
  static integer(kind=4) kmntm[38] [value-expr: extra.kmntm];
  static real(kind=4) zint[1155609] [value-expr: extra.zint];
  static real(kind=4) alpint[1155609] [value-expr: extra.alpint];
  static real(kind=4) pint[1155609] [value-expr: extra.pint];
  static logical(kind=4) spline [value-expr: ctlblk.spline];
  static integer(kind=4) nradl [value-expr: ctlblk.nradl];
  static integer(kind=4) nrads [value-expr: ctlblk.nrads];
  static integer(kind=4) nphs [value-expr: ctlblk.nphs];
  static integer(kind=4) ncp [value-expr: ctlblk.ncp];
  static integer(kind=4) nshde [value-expr: ctlblk.nshde];
  static integer(kind=4) nboco [value-expr: ctlblk.nboco];
  static integer(kind=4) idtad [value-expr: ctlblk.idtad];
  static integer(kind=4) nprec [value-expr: ctlblk.nprec];
  static integer(kind=4) nddamp [value-expr: ctlblk.nddamp];
  static integer(kind=4) ntstm [value-expr: ctlblk.ntstm];
  static integer(kind=4) ntsd [value-expr: ctlblk.ntsd];
  static real(kind=4) dt [value-expr: ctlblk.dt];
  static integer(kind=4) iout [value-expr: ctlblk.iout];
  static integer(kind=4) list [value-expr: ctlblk.list];
  static integer(kind=4) nbc [value-expr: ctlblk.nbc];
  static integer(kind=4) nfcst [value-expr: ctlblk.nfcst];
  static real(kind=4) restrt [value-expr: ctlblk.restrt];
  static real(kind=4) first [value-expr: ctlblk.first];
  static integer(kind=4) ihrst [value-expr: ctlblk.ihrst];
  static integer(kind=4) idat[3] [value-expr: ctlblk.idat];
  static real(kind=4) run [value-expr: ctlblk.run];
  static real(kind=4) sigma [value-expr: ctlblk.sigma];
  integer(kind=8) _1;
  integer(kind=8) _2;
  integer(kind=8) _3;
  integer(kind=8) _4;
  integer(kind=8) _5;
  integer(kind=8) _6;
  integer(kind=8) _7;
  integer(kind=8) _8;
  integer(kind=8) _9;
  integer(kind=8) _10;
  integer(kind=8) _11;
  integer(kind=8) _12;
  integer(kind=8) _13;
  real(kind=4) _14;
  integer(kind=8) _15;
  integer(kind=8) _16;
  integer(kind=8) _17;
  integer(kind=8) _18;
  integer(kind=8) _19;
  integer(kind=8) _20;
  integer(kind=8) _21;
  integer(kind=8) _22;
  real(kind=4) _23;
  integer(kind=4) _24;
  integer(kind=8) _25;
  integer(kind=8) _26;
  integer(kind=8) _27;
  integer(kind=8) _28;
  integer(kind=8) _29;
  integer(kind=8) _30;
  integer(kind=8) _31;
  integer(kind=8) _32;
  real(kind=4) _33;
  integer(kind=8) _34;
  integer(kind=8) _35;
  integer(kind=8) _36;
  integer(kind=8) _37;
  integer(kind=8) _38;
  integer(kind=8) _39;
  integer(kind=8) _40;
  integer(kind=8) _41;
  real(kind=4) _42;
  integer(kind=4) _43;
  integer(kind=8) _44;
  integer(kind=8) _45;
  integer(kind=8) _46;
  integer(kind=8) _47;
  integer(kind=8) _48;
  integer(kind=8) _49;
  integer(kind=8) _50;
  integer(kind=8) _51;
  real(kind=4) _52;
  integer(kind=8) _53;
  integer(kind=8) _54;
  integer(kind=8) _55;
  integer(kind=8) _56;
  integer(kind=8) _57;
  real(kind=4) _58;
  integer(kind=8) _59;
  integer(kind=8) _60;
  integer(kind=8) _61;
  integer(kind=8) _62;
  integer(kind=8) _63;
  logical(kind=4) _64;
  logical(kind=4) _65;
  logical(kind=4) _66;
  integer(kind=8) _67;
  integer(kind=8) _68;
  integer(kind=8) _69;
  integer(kind=8) _70;
  integer(kind=8) _71;
  real(kind=4) M.0_80;
  logical(kind=4) _85;
  logical(kind=4) _87;
  integer(kind=4) _91;
  integer(kind=4) _92;
  logical(kind=4) _94;
  real(kind=4) M.0_102;
  real(kind=4) _103;
  real(kind=4) M.0_104;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  j_83 = 1;
;;    succ:       3

;;   basic block 3, loop depth 1
;;    pred:       2
;;                21
  # j_73 = PHI <j_83(2), j_107(21)>
  _85 = j_73 > 249;
  if (_85 != 0)
    goto <bb 22>; [INV]
  else
    goto <bb 4>; [INV]
;;    succ:       22
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  i_86 = 1;
;;    succ:       5

;;   basic block 5, loop depth 2
;;    pred:       4
;;                20
  # i_72 = PHI <i_86(4), i_106(20)>
  _87 = i_72 > 119;
  if (_87 != 0)
    goto <bb 21>; [INV]
  else
    goto <bb 6>; [INV]
;;    succ:       21
;;                6

;;   basic block 6, loop depth 2
;;    pred:       5
  _1 = (integer(kind=8)) j_73;
  _2 = _1 * 119;
  _3 = (integer(kind=8)) i_72;
  _4 = _2 + _3;
  _5 = _4 + -120;
  lmhk_88 = loops.lmh[_5];
  lpbl_89 = lmhk_88;
  nepsq2_90 = 0;
  _91 = lmhk_88;
  _92 = lmhk_88 / 2;
  l_93 = _91;
;;    succ:       7

;;   basic block 7, loop depth 3
;;    pred:       6
;;                15
  # l_74 = PHI <l_93(6), l_98(15)>
  # lpbl_75 = PHI <lpbl_89(6), lpbl_76(15)>
  # nepsq2_78 = PHI <nepsq2_90(6), nepsq2_79(15)>
  _94 = l_74 < _92;
  if (_94 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 8>; [INV]
;;    succ:       16
;;                8

;;   basic block 8, loop depth 3
;;    pred:       7
  _6 = (integer(kind=8)) l_74;
  _7 = _6 * 29631;
  _8 = (integer(kind=8)) j_73;
  _9 = _8 * 119;
  _10 = _7 + _9;
  _11 = (integer(kind=8)) i_72;
  _12 = _10 + _11;
  _13 = _12 + -29751;
  _14 = pvrbls.q2[_13];
  if (_14 < 1.211999952793121337890625e-1)
    goto <bb 9>; [INV]
  else
    goto <bb 11>; [INV]
;;    succ:       9
;;                11

;;   basic block 9, loop depth 3
;;    pred:       8
  if (nepsq2_78 <= 1)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]
;;    succ:       10
;;                11

;;   basic block 10, loop depth 3
;;    pred:       9
  nepsq2_95 = nepsq2_78 + 1;
  goto <bb 15>; [INV]
;;    succ:       15

;;   basic block 11, loop depth 3
;;    pred:       8
;;                9
  _15 = (integer(kind=8)) l_74;
  _16 = _15 * 29631;
  _17 = (integer(kind=8)) j_73;
  _18 = _17 * 119;
  _19 = _16 + _18;
  _20 = (integer(kind=8)) i_72;
  _21 = _19 + _20;
  _22 = _21 + -29751;
  _23 = pvrbls.q2[_22];
  if (_23 >= 1.211999952793121337890625e-1)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]
;;    succ:       12
;;                13

;;   basic block 12, loop depth 3
;;    pred:       11
  lpbl_96 = l_74;
  nepsq2_97 = 0;
  goto <bb 15>; [INV]
;;    succ:       15

;;   basic block 13, loop depth 3
;;    pred:       11
  if (nepsq2_78 > 1)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]
;;    succ:       14
;;                15

;;   basic block 14, loop depth 2
;;    pred:       13
  goto <bb 16>; [INV]
;;    succ:       16

;;   basic block 15, loop depth 3
;;    pred:       10
;;                12
;;                13
  # lpbl_76 = PHI <lpbl_75(10), lpbl_96(12), lpbl_75(13)>
  # nepsq2_79 = PHI <nepsq2_95(10), nepsq2_97(12), nepsq2_78(13)>
  l_98 = l_74 + -1;
  goto <bb 7>; [INV]
;;    succ:       7

;;   basic block 16, loop depth 2
;;    pred:       7
;;                14
  _24 = lmhk_88 + 1;
  _25 = (integer(kind=8)) _24;
  _26 = _25 * 29631;
  _27 = (integer(kind=8)) j_73;
  _28 = _27 * 119;
  _29 = _26 + _28;
  _30 = (integer(kind=8)) i_72;
  _31 = _29 + _30;
  _32 = _31 + -29751;
  _33 = extra.zint[_32];
  if (_33 < 2.5e+3)
    goto <bb 17>; [INV]
  else
    goto <bb 18>; [INV]
;;    succ:       17
;;                18

;;   basic block 17, loop depth 2
;;    pred:       16
  lpbl_99 = lpbl_75 + -1;
;;    succ:       18

;;   basic block 18, loop depth 2
;;    pred:       16
;;                17
  # lpbl_77 = PHI <lpbl_75(16), lpbl_99(17)>
  _34 = (integer(kind=8)) lpbl_77;
  _35 = _34 * 29631;
  _36 = (integer(kind=8)) j_73;
  _37 = _36 * 119;
  _38 = _35 + _37;
  _39 = (integer(kind=8)) i_72;
  _40 = _38 + _39;
  _41 = _40 + -29751;
  _42 = extra.zint[_41];
  _43 = lmhk_88 + 1;
  _44 = (integer(kind=8)) _43;
  _45 = _44 * 29631;
  _46 = (integer(kind=8)) j_73;
  _47 = _46 * 119;
  _48 = _45 + _47;
  _49 = (integer(kind=8)) i_72;
  _50 = _48 + _49;
  _51 = _50 + -29751;
  _52 = extra.zint[_51];
  _53 = (integer(kind=8)) j_73;
  _54 = _53 * 119;
  _55 = (integer(kind=8)) i_72;
  _56 = _54 + _55;
  _57 = _56 + -120;
  _58 = _42 - _52;
  *hpbl_100(D)[_57] = _58;
  M.0_102 = 3.0e+2;
  _59 = (integer(kind=8)) j_73;
  _60 = _59 * 119;
  _61 = (integer(kind=8)) i_72;
  _62 = _60 + _61;
  _63 = _62 + -120;
  _103 = *hpbl_100(D)[_63];
  _64 = _103 > M.0_102;
  _65 = M.0_102 unord M.0_102;
  _66 = _64 | _65;
  if (_66 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]
;;    succ:       19
;;                20

;;   basic block 19, loop depth 2
;;    pred:       18
  M.0_104 = _103;
;;    succ:       20

;;   basic block 20, loop depth 2
;;    pred:       18
;;                19
  # M.0_80 = PHI <M.0_102(18), M.0_104(19)>
  _67 = (integer(kind=8)) j_73;
  _68 = _67 * 119;
  _69 = (integer(kind=8)) i_72;
  _70 = _68 + _69;
  _71 = _70 + -120;
  *hpbl_100(D)[_71] = M.0_80;
  i_106 = i_72 + 1;
  goto <bb 5>; [INV]
;;    succ:       5

;;   basic block 21, loop depth 1
;;    pred:       5
  j_107 = j_73 + 1;
  goto <bb 3>; [INV]
;;    succ:       3

;;   basic block 22, loop depth 0
;;    pred:       3
;;    succ:       23

;;   basic block 23, loop depth 0
;;    pred:       22
<L30>:
  return;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 2 (_2 - 2 )
Partition 3 (_3 - 3 )
Partition 4 (_4 - 4 )
Partition 5 (_5 - 5 )
Partition 6 (_6 - 6 )
Partition 7 (_7 - 7 )
Partition 8 (_8 - 8 )
Partition 9 (_9 - 9 )
Partition 10 (_10 - 10 )
Partition 11 (_11 - 11 )
Partition 12 (_12 - 12 )
Partition 13 (_13 - 13 )
Partition 14 (_14 - 14 )
Partition 15 (_15 - 15 )
Partition 16 (_16 - 16 )
Partition 17 (_17 - 17 )
Partition 18 (_18 - 18 )
Partition 19 (_19 - 19 )
Partition 20 (_20 - 20 )
Partition 21 (_21 - 21 )
Partition 22 (_22 - 22 )
Partition 23 (_23 - 23 )
Partition 24 (_24 - 24 )
Partition 25 (_25 - 25 )
Partition 26 (_26 - 26 )
Partition 27 (_27 - 27 )
Partition 28 (_28 - 28 )
Partition 29 (_29 - 29 )
Partition 30 (_30 - 30 )
Partition 31 (_31 - 31 )
Partition 32 (_32 - 32 )
Partition 33 (_33 - 33 )
Partition 34 (_34 - 34 )
Partition 35 (_35 - 35 )
Partition 36 (_36 - 36 )
Partition 37 (_37 - 37 )
Partition 38 (_38 - 38 )
Partition 39 (_39 - 39 )
Partition 40 (_40 - 40 )
Partition 41 (_41 - 41 )
Partition 42 (_42 - 42 )
Partition 43 (_43 - 43 )
Partition 44 (_44 - 44 )
Partition 45 (_45 - 45 )
Partition 46 (_46 - 46 )
Partition 47 (_47 - 47 )
Partition 48 (_48 - 48 )
Partition 49 (_49 - 49 )
Partition 50 (_50 - 50 )
Partition 51 (_51 - 51 )
Partition 52 (_52 - 52 )
Partition 53 (_53 - 53 )
Partition 54 (_54 - 54 )
Partition 55 (_55 - 55 )
Partition 56 (_56 - 56 )
Partition 57 (_57 - 57 )
Partition 58 (_58 - 58 )
Partition 59 (_59 - 59 )
Partition 60 (_60 - 60 )
Partition 61 (_61 - 61 )
Partition 62 (_62 - 62 )
Partition 63 (_63 - 63 )
Partition 64 (_64 - 64 )
Partition 65 (_65 - 65 )
Partition 66 (_66 - 66 )
Partition 67 (_67 - 67 )
Partition 68 (_68 - 68 )
Partition 69 (_69 - 69 )
Partition 70 (_70 - 70 )
Partition 71 (_71 - 71 )
Partition 72 (i_72 - 72 )
Partition 73 (j_73 - 73 )
Partition 74 (l_74 - 74 )
Partition 75 (lpbl_75 - 75 )
Partition 76 (lpbl_76 - 76 )
Partition 77 (lpbl_77 - 77 )
Partition 78 (nepsq2_78 - 78 )
Partition 79 (nepsq2_79 - 79 )
Partition 80 (M.0_80 - 80 )
Partition 83 (j_83 - 83 )
Partition 85 (_85 - 85 )
Partition 86 (i_86 - 86 )
Partition 87 (_87 - 87 )
Partition 88 (lmhk_88 - 88 )
Partition 89 (lpbl_89 - 89 )
Partition 90 (nepsq2_90 - 90 )
Partition 91 (_91 - 91 )
Partition 92 (_92 - 92 )
Partition 93 (l_93 - 93 )
Partition 94 (_94 - 94 )
Partition 95 (nepsq2_95 - 95 )
Partition 96 (lpbl_96 - 96 )
Partition 97 (nepsq2_97 - 97 )
Partition 98 (l_98 - 98 )
Partition 99 (lpbl_99 - 99 )
Partition 100 (hpbl_100(D) - 100 )
Partition 102 (M.0_102 - 102 )
Partition 103 (_103 - 103 )
Partition 104 (M.0_104 - 104 )
Partition 106 (i_106 - 106 )
Partition 107 (j_107 - 107 )


Coalescible Partition map 

Partition 0, base 0 (i_72 - 72 86 106 )
Partition 1, base 1 (j_73 - 73 83 107 )
Partition 2, base 2 (l_74 - 74 93 98 )
Partition 3, base 3 (lpbl_75 - 75 76 77 89 96 99 )
Partition 6, base 4 (nepsq2_78 - 78 79 90 95 97 )
Partition 8, base 5 (M.0_80 - 80 102 103 104 )
Partition 19, base 6 (hpbl_100(D) - 100 )


Partition map 

Partition 0 (i_72 - 72 )
Partition 1 (j_73 - 73 )
Partition 2 (l_74 - 74 )
Partition 3 (lpbl_75 - 75 )
Partition 4 (lpbl_76 - 76 )
Partition 5 (lpbl_77 - 77 )
Partition 6 (nepsq2_78 - 78 )
Partition 7 (nepsq2_79 - 79 )
Partition 8 (M.0_80 - 80 )
Partition 9 (j_83 - 83 )
Partition 10 (i_86 - 86 )
Partition 11 (lpbl_89 - 89 )
Partition 12 (nepsq2_90 - 90 )
Partition 13 (l_93 - 93 )
Partition 14 (nepsq2_95 - 95 )
Partition 15 (lpbl_96 - 96 )
Partition 16 (nepsq2_97 - 97 )
Partition 17 (l_98 - 98 )
Partition 18 (lpbl_99 - 99 )
Partition 19 (hpbl_100(D) - 100 )
Partition 20 (M.0_102 - 102 )
Partition 21 (_103 - 103 )
Partition 22 (M.0_104 - 104 )
Partition 23 (i_106 - 106 )
Partition 24 (j_107 - 107 )


Conflict graph:
20: 21
21: 20

After sorting:
Sorted Coalesce list:
(2147483646, 0) j_73 <-> j_83
(2147483646, 0) j_73 <-> j_107
(2147483646, 0) i_72 <-> i_86
(2147483646, 0) i_72 <-> i_106
(2147483646, 0) l_74 <-> l_93
(2147483646, 0) l_74 <-> l_98
(2147483646, 0) lpbl_75 <-> lpbl_89
(2147483646, 0) lpbl_75 <-> lpbl_76
(2147483646, 0) nepsq2_78 <-> nepsq2_90
(2147483646, 0) nepsq2_78 <-> nepsq2_79
(2147483646, 0) lpbl_75 <-> lpbl_77
(2147483646, 0) nepsq2_78 <-> nepsq2_95
(2147483646, 0) lpbl_75 <-> lpbl_96
(2147483646, 0) nepsq2_78 <-> nepsq2_97
(2147483646, 0) lpbl_75 <-> lpbl_99
(20000, 0) M.0_80 <-> M.0_102
(10000, 0) lpbl_76 <-> lpbl_96
(10000, 0) nepsq2_79 <-> nepsq2_95
(10000, 0) nepsq2_79 <-> nepsq2_97
(10000, 0) lpbl_77 <-> lpbl_99
(10000, 0) _103 <-> M.0_104
(10000, 0) M.0_80 <-> M.0_104

Partition map 

Partition 0 (i_72 - 72 )
Partition 1 (j_73 - 73 )
Partition 2 (l_74 - 74 )
Partition 3 (lpbl_75 - 75 )
Partition 4 (lpbl_76 - 76 )
Partition 5 (lpbl_77 - 77 )
Partition 6 (nepsq2_78 - 78 )
Partition 7 (nepsq2_79 - 79 )
Partition 8 (M.0_80 - 80 )
Partition 9 (j_83 - 83 )
Partition 10 (i_86 - 86 )
Partition 11 (lpbl_89 - 89 )
Partition 12 (nepsq2_90 - 90 )
Partition 13 (l_93 - 93 )
Partition 14 (nepsq2_95 - 95 )
Partition 15 (lpbl_96 - 96 )
Partition 16 (nepsq2_97 - 97 )
Partition 17 (l_98 - 98 )
Partition 18 (lpbl_99 - 99 )
Partition 19 (hpbl_100(D) - 100 )
Partition 20 (M.0_102 - 102 )
Partition 21 (_103 - 103 )
Partition 22 (M.0_104 - 104 )
Partition 23 (i_106 - 106 )
Partition 24 (j_107 - 107 )

Coalesce list: (73)j_73 & (83)j_83 [map: 1, 9] : Success -> 1
Coalesce list: (73)j_73 & (107)j_107 [map: 1, 24] : Success -> 1
Coalesce list: (72)i_72 & (86)i_86 [map: 0, 10] : Success -> 0
Coalesce list: (72)i_72 & (106)i_106 [map: 0, 23] : Success -> 0
Coalesce list: (74)l_74 & (93)l_93 [map: 2, 13] : Success -> 2
Coalesce list: (74)l_74 & (98)l_98 [map: 2, 17] : Success -> 2
Coalesce list: (75)lpbl_75 & (89)lpbl_89 [map: 3, 11] : Success -> 3
Coalesce list: (75)lpbl_75 & (76)lpbl_76 [map: 3, 4] : Success -> 3
Coalesce list: (78)nepsq2_78 & (90)nepsq2_90 [map: 6, 12] : Success -> 6
Coalesce list: (78)nepsq2_78 & (79)nepsq2_79 [map: 6, 7] : Success -> 6
Coalesce list: (75)lpbl_75 & (77)lpbl_77 [map: 3, 5] : Success -> 3
Coalesce list: (78)nepsq2_78 & (95)nepsq2_95 [map: 6, 14] : Success -> 6
Coalesce list: (75)lpbl_75 & (96)lpbl_96 [map: 3, 15] : Success -> 3
Coalesce list: (78)nepsq2_78 & (97)nepsq2_97 [map: 6, 16] : Success -> 6
Coalesce list: (75)lpbl_75 & (99)lpbl_99 [map: 3, 18] : Success -> 3
Coalesce list: (80)M.0_80 & (102)M.0_102 [map: 8, 20] : Success -> 8
Coalesce list: (76)lpbl_75 & (96)lpbl_75: Already Coalesced.
Coalesce list: (79)nepsq2_78 & (95)nepsq2_78: Already Coalesced.
Coalesce list: (79)nepsq2_78 & (97)nepsq2_78: Already Coalesced.
Coalesce list: (77)lpbl_75 & (99)lpbl_75: Already Coalesced.
Coalesce list: (103)_103 & (104)M.0_104 [map: 21, 22] : Success -> 21
Coalesce list: (80)M.0_80 & (104)_103 [map: 8, 21] : Fail due to conflict
After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (_2 - 2 )
Partition 2 (_3 - 3 )
Partition 3 (_4 - 4 )
Partition 4 (_5 - 5 )
Partition 5 (_6 - 6 )
Partition 6 (_7 - 7 )
Partition 7 (_8 - 8 )
Partition 8 (_9 - 9 )
Partition 9 (_10 - 10 )
Partition 10 (_11 - 11 )
Partition 11 (_12 - 12 )
Partition 12 (_13 - 13 )
Partition 13 (_14 - 14 )
Partition 14 (_15 - 15 )
Partition 15 (_16 - 16 )
Partition 16 (_17 - 17 )
Partition 17 (_18 - 18 )
Partition 18 (_19 - 19 )
Partition 19 (_20 - 20 )
Partition 20 (_21 - 21 )
Partition 21 (_22 - 22 )
Partition 22 (_23 - 23 )
Partition 23 (_24 - 24 )
Partition 24 (_25 - 25 )
Partition 25 (_26 - 26 )
Partition 26 (_27 - 27 )
Partition 27 (_28 - 28 )
Partition 28 (_29 - 29 )
Partition 29 (_30 - 30 )
Partition 30 (_31 - 31 )
Partition 31 (_32 - 32 )
Partition 32 (_33 - 33 )
Partition 33 (_34 - 34 )
Partition 34 (_35 - 35 )
Partition 35 (_36 - 36 )
Partition 36 (_37 - 37 )
Partition 37 (_38 - 38 )
Partition 38 (_39 - 39 )
Partition 39 (_40 - 40 )
Partition 40 (_41 - 41 )
Partition 41 (_42 - 42 )
Partition 42 (_43 - 43 )
Partition 43 (_44 - 44 )
Partition 44 (_45 - 45 )
Partition 45 (_46 - 46 )
Partition 46 (_47 - 47 )
Partition 47 (_48 - 48 )
Partition 48 (_49 - 49 )
Partition 49 (_50 - 50 )
Partition 50 (_51 - 51 )
Partition 51 (_52 - 52 )
Partition 52 (_53 - 53 )
Partition 53 (_54 - 54 )
Partition 54 (_55 - 55 )
Partition 55 (_56 - 56 )
Partition 56 (_57 - 57 )
Partition 57 (_58 - 58 )
Partition 58 (_59 - 59 )
Partition 59 (_60 - 60 )
Partition 60 (_61 - 61 )
Partition 61 (_62 - 62 )
Partition 62 (_63 - 63 )
Partition 63 (_64 - 64 )
Partition 64 (_65 - 65 )
Partition 65 (_66 - 66 )
Partition 66 (_67 - 67 )
Partition 67 (_68 - 68 )
Partition 68 (_69 - 69 )
Partition 69 (_70 - 70 )
Partition 70 (_71 - 71 )
Partition 71 (i_72 - 72 86 106 )
Partition 72 (j_73 - 73 83 107 )
Partition 73 (l_74 - 74 93 98 )
Partition 74 (lpbl_75 - 75 76 77 89 96 99 )
Partition 75 (nepsq2_78 - 78 79 90 95 97 )
Partition 76 (M.0_80 - 80 102 )
Partition 77 (_85 - 85 )
Partition 78 (_87 - 87 )
Partition 79 (lmhk_88 - 88 )
Partition 80 (_91 - 91 )
Partition 81 (_92 - 92 )
Partition 82 (_94 - 94 )
Partition 83 (hpbl_100(D) - 100 )
Partition 84 (_103 - 103 104 )

calhpbl (real(kind=4)[29631] * restrict hpbl)
{
  real(kind=4) D.4024;
  real(kind=4) M.0;
  logical(kind=4) D.4018;
  integer(kind=4) D.4015;
  integer(kind=4) D.4014;
  logical(kind=4) D.4013;
  logical(kind=4) D.4010;
  integer(kind=4) nepsq2;
  integer(kind=4) lpbl;
  integer(kind=4) lmhk;
  integer(kind=4) l;
  integer(kind=4) j;
  integer(kind=4) i;
  static real(kind=4) q2[1125978] [value-expr: pvrbls.q2];
  static real(kind=4) cuprec[29631] [value-expr: pvrbls.cuprec];
  static real(kind=4) accliq[29631] [value-expr: pvrbls.accliq];
  static real(kind=4) acprec[29631] [value-expr: pvrbls.acprec];
  static real(kind=4) prec[29631] [value-expr: pvrbls.prec];
  static real(kind=4) cldefi[29631] [value-expr: pvrbls.cldefi];
  static real(kind=4) si[29631] [value-expr: pvrbls.si];
  static real(kind=4) sno[29631] [value-expr: pvrbls.sno];
  static real(kind=4) qwbs[29631] [value-expr: pvrbls.qwbs];
  static real(kind=4) twbs[29631] [value-expr: pvrbls.twbs];
  static real(kind=4) rf[29631] [value-expr: pvrbls.rf];
  static real(kind=4) qz0[29631] [value-expr: pvrbls.qz0];
  static real(kind=4) thz0[29631] [value-expr: pvrbls.thz0];
  static real(kind=4) vz0[29631] [value-expr: pvrbls.vz0];
  static real(kind=4) uz0[29631] [value-expr: pvrbls.uz0];
  static real(kind=4) qs[29631] [value-expr: pvrbls.qs];
  static real(kind=4) ths[29631] [value-expr: pvrbls.ths];
  static real(kind=4) akhs[29631] [value-expr: pvrbls.akhs];
  static real(kind=4) akms[29631] [value-expr: pvrbls.akms];
  static real(kind=4) z0[29631] [value-expr: pvrbls.z0];
  static integer(kind=4) jend_2u [value-expr: parallel.jend_2u];
  static integer(kind=4) jsta_2l [value-expr: parallel.jsta_2l];
  static integer(kind=4) idsp[1024] [value-expr: parallel.idsp];
  static integer(kind=4) icnt[1024] [value-expr: parallel.icnt];
  static integer(kind=4) idn [value-expr: parallel.idn];
  static integer(kind=4) iup [value-expr: parallel.iup];
  static integer(kind=4) jend_m2 [value-expr: parallel.jend_m2];
  static integer(kind=4) jsta_m2 [value-expr: parallel.jsta_m2];
  static integer(kind=4) jend_m [value-expr: parallel.jend_m];
  static integer(kind=4) jsta_m [value-expr: parallel.jsta_m];
  static integer(kind=4) jend [value-expr: parallel.jend];
  static integer(kind=4) jsta [value-expr: parallel.jsta];
  static integer(kind=4) me [value-expr: parallel.me];
  static integer(kind=4) num_procs [value-expr: parallel.num_procs];
  static integer(kind=4) lmv[29631] [value-expr: loops.lmv];
  static integer(kind=4) lmh[29631] [value-expr: loops.lmh];
  static integer(kind=4) jra[484] [value-expr: loops.jra];
  static integer(kind=4) ivha[484] [value-expr: loops.ivha];
  static integer(kind=4) ivla[484] [value-expr: loops.ivla];
  static integer(kind=4) ihha[484] [value-expr: loops.ihha];
  static integer(kind=4) ihla[484] [value-expr: loops.ihla];
  static integer(kind=4) maxwv[29631] [value-expr: extra.maxwv];
  static integer(kind=4) maxwu[29631] [value-expr: extra.maxwu];
  static real(kind=4) tlmax[29631] [value-expr: extra.tlmax];
  static real(kind=4) tlmin[29631] [value-expr: extra.tlmin];
  static real(kind=4) stdrd [value-expr: extra.stdrd];
  static real(kind=4) oldrd [value-expr: extra.oldrd];
  static real(kind=4) z1000[29631] [value-expr: extra.z1000];
  static real(kind=4) qsl[29631] [value-expr: extra.qsl];
  static real(kind=4) fsl[29631] [value-expr: extra.fsl];
  static real(kind=4) ttv[29631] [value-expr: extra.ttv];
  static real(kind=4) tsl[29631] [value-expr: extra.tsl];
  static real(kind=4) pfsl[29631] [value-expr: extra.pfsl];
  static real(kind=4) ptsl[29631] [value-expr: extra.ptsl];
  static real(kind=4) pslp[29631] [value-expr: extra.pslp];
  static real(kind=4) pdvp1[29631] [value-expr: extra.pdvp1];
  static real(kind=4) pdsl[29631] [value-expr: extra.pdsl];
  static real(kind=4) t500[29631] [value-expr: extra.t500];
  static real(kind=4) slp[29631] [value-expr: extra.slp];
  static integer(kind=4) kmnt[1121266] [value-expr: extra.kmnt];
  static integer(kind=4) kmntm[38] [value-expr: extra.kmntm];
  static real(kind=4) zint[1155609] [value-expr: extra.zint];
  static real(kind=4) alpint[1155609] [value-expr: extra.alpint];
  static real(kind=4) pint[1155609] [value-expr: extra.pint];
  static logical(kind=4) spline [value-expr: ctlblk.spline];
  static integer(kind=4) nradl [value-expr: ctlblk.nradl];
  static integer(kind=4) nrads [value-expr: ctlblk.nrads];
  static integer(kind=4) nphs [value-expr: ctlblk.nphs];
  static integer(kind=4) ncp [value-expr: ctlblk.ncp];
  static integer(kind=4) nshde [value-expr: ctlblk.nshde];
  static integer(kind=4) nboco [value-expr: ctlblk.nboco];
  static integer(kind=4) idtad [value-expr: ctlblk.idtad];
  static integer(kind=4) nprec [value-expr: ctlblk.nprec];
  static integer(kind=4) nddamp [value-expr: ctlblk.nddamp];
  static integer(kind=4) ntstm [value-expr: ctlblk.ntstm];
  static integer(kind=4) ntsd [value-expr: ctlblk.ntsd];
  static real(kind=4) dt [value-expr: ctlblk.dt];
  static integer(kind=4) iout [value-expr: ctlblk.iout];
  static integer(kind=4) list [value-expr: ctlblk.list];
  static integer(kind=4) nbc [value-expr: ctlblk.nbc];
  static integer(kind=4) nfcst [value-expr: ctlblk.nfcst];
  static real(kind=4) restrt [value-expr: ctlblk.restrt];
  static real(kind=4) first [value-expr: ctlblk.first];
  static integer(kind=4) ihrst [value-expr: ctlblk.ihrst];
  static integer(kind=4) idat[3] [value-expr: ctlblk.idat];
  static real(kind=4) run [value-expr: ctlblk.run];
  static real(kind=4) sigma [value-expr: ctlblk.sigma];
  integer(kind=8) _1;
  integer(kind=8) _2;
  integer(kind=8) _3;
  integer(kind=8) _4;
  integer(kind=8) _5;
  integer(kind=8) _6;
  integer(kind=8) _7;
  integer(kind=8) _8;
  integer(kind=8) _9;
  integer(kind=8) _10;
  integer(kind=8) _11;
  integer(kind=8) _12;
  integer(kind=8) _13;
  real(kind=4) _14;
  integer(kind=8) _15;
  integer(kind=8) _16;
  integer(kind=8) _17;
  integer(kind=8) _18;
  integer(kind=8) _19;
  integer(kind=8) _20;
  integer(kind=8) _21;
  integer(kind=8) _22;
  real(kind=4) _23;
  integer(kind=4) _24;
  integer(kind=8) _25;
  integer(kind=8) _26;
  integer(kind=8) _27;
  integer(kind=8) _28;
  integer(kind=8) _29;
  integer(kind=8) _30;
  integer(kind=8) _31;
  integer(kind=8) _32;
  real(kind=4) _33;
  integer(kind=8) _34;
  integer(kind=8) _35;
  integer(kind=8) _36;
  integer(kind=8) _37;
  integer(kind=8) _38;
  integer(kind=8) _39;
  integer(kind=8) _40;
  integer(kind=8) _41;
  real(kind=4) _42;
  integer(kind=4) _43;
  integer(kind=8) _44;
  integer(kind=8) _45;
  integer(kind=8) _46;
  integer(kind=8) _47;
  integer(kind=8) _48;
  integer(kind=8) _49;
  integer(kind=8) _50;
  integer(kind=8) _51;
  real(kind=4) _52;
  integer(kind=8) _53;
  integer(kind=8) _54;
  integer(kind=8) _55;
  integer(kind=8) _56;
  integer(kind=8) _57;
  real(kind=4) _58;
  integer(kind=8) _59;
  integer(kind=8) _60;
  integer(kind=8) _61;
  integer(kind=8) _62;
  integer(kind=8) _63;
  logical(kind=4) _64;
  logical(kind=4) _65;
  logical(kind=4) _66;
  integer(kind=8) _67;
  integer(kind=8) _68;
  integer(kind=8) _69;
  integer(kind=8) _70;
  integer(kind=8) _71;
  real(kind=4) M.0_80;
  logical(kind=4) _85;
  logical(kind=4) _87;
  integer(kind=4) _91;
  integer(kind=4) _92;
  logical(kind=4) _94;
  real(kind=4) M.0_102;
  real(kind=4) _103;
  real(kind=4) M.0_104;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  j_83 = 1;
;;    succ:       3

;;   basic block 3, loop depth 1
;;    pred:       2
;;                21
  # j_73 = PHI <j_83(2), j_107(21)>
  _85 = j_73 > 249;
  if (_85 != 0)
    goto <bb 22>; [INV]
  else
    goto <bb 4>; [INV]
;;    succ:       22
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  i_86 = 1;
;;    succ:       5

;;   basic block 5, loop depth 2
;;    pred:       4
;;                20
  # i_72 = PHI <i_86(4), i_106(20)>
  _87 = i_72 > 119;
  if (_87 != 0)
    goto <bb 21>; [INV]
  else
    goto <bb 6>; [INV]
;;    succ:       21
;;                6

;;   basic block 6, loop depth 2
;;    pred:       5
  _1 = (integer(kind=8)) j_73;
  _2 = _1 * 119;
  _3 = (integer(kind=8)) i_72;
  _4 = _2 + _3;
  _5 = _4 + -120;
  lmhk_88 = loops.lmh[_5];
  lpbl_89 = lmhk_88;
  nepsq2_90 = 0;
  _91 = lmhk_88;
  _92 = lmhk_88 / 2;
  l_93 = _91;
;;    succ:       7

;;   basic block 7, loop depth 3
;;    pred:       6
;;                15
  # l_74 = PHI <l_93(6), l_98(15)>
  # lpbl_75 = PHI <lpbl_89(6), lpbl_76(15)>
  # nepsq2_78 = PHI <nepsq2_90(6), nepsq2_79(15)>
  _94 = l_74 < _92;
  if (_94 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 8>; [INV]
;;    succ:       16
;;                8

;;   basic block 8, loop depth 3
;;    pred:       7
  _6 = (integer(kind=8)) l_74;
  _7 = _6 * 29631;
  _8 = (integer(kind=8)) j_73;
  _9 = _8 * 119;
  _10 = _7 + _9;
  _11 = (integer(kind=8)) i_72;
  _12 = _10 + _11;
  _13 = _12 + -29751;
  _14 = pvrbls.q2[_13];
  if (_14 < 1.211999952793121337890625e-1)
    goto <bb 9>; [INV]
  else
    goto <bb 11>; [INV]
;;    succ:       9
;;                11

;;   basic block 9, loop depth 3
;;    pred:       8
  if (nepsq2_78 <= 1)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]
;;    succ:       10
;;                11

;;   basic block 10, loop depth 3
;;    pred:       9
  nepsq2_95 = nepsq2_78 + 1;
  goto <bb 15>; [INV]
;;    succ:       15

;;   basic block 11, loop depth 3
;;    pred:       8
;;                9
  _15 = (integer(kind=8)) l_74;
  _16 = _15 * 29631;
  _17 = (integer(kind=8)) j_73;
  _18 = _17 * 119;
  _19 = _16 + _18;
  _20 = (integer(kind=8)) i_72;
  _21 = _19 + _20;
  _22 = _21 + -29751;
  _23 = pvrbls.q2[_22];
  if (_23 >= 1.211999952793121337890625e-1)
    goto <bb 12>; [INV]
  else
    goto <bb 13>; [INV]
;;    succ:       12
;;                13

;;   basic block 12, loop depth 3
;;    pred:       11
  lpbl_96 = l_74;
  nepsq2_97 = 0;
  goto <bb 15>; [INV]
;;    succ:       15

;;   basic block 13, loop depth 3
;;    pred:       11
  if (nepsq2_78 > 1)
    goto <bb 14>; [INV]
  else
    goto <bb 15>; [INV]
;;    succ:       14
;;                15

;;   basic block 14, loop depth 2
;;    pred:       13
  goto <bb 16>; [INV]
;;    succ:       16

;;   basic block 15, loop depth 3
;;    pred:       10
;;                12
;;                13
  # lpbl_76 = PHI <lpbl_75(10), lpbl_96(12), lpbl_75(13)>
  # nepsq2_79 = PHI <nepsq2_95(10), nepsq2_97(12), nepsq2_78(13)>
  l_98 = l_74 + -1;
  goto <bb 7>; [INV]
;;    succ:       7

;;   basic block 16, loop depth 2
;;    pred:       7
;;                14
  _24 = lmhk_88 + 1;
  _25 = (integer(kind=8)) _24;
  _26 = _25 * 29631;
  _27 = (integer(kind=8)) j_73;
  _28 = _27 * 119;
  _29 = _26 + _28;
  _30 = (integer(kind=8)) i_72;
  _31 = _29 + _30;
  _32 = _31 + -29751;
  _33 = extra.zint[_32];
  if (_33 < 2.5e+3)
    goto <bb 17>; [INV]
  else
    goto <bb 18>; [INV]
;;    succ:       17
;;                18

;;   basic block 17, loop depth 2
;;    pred:       16
  lpbl_99 = lpbl_75 + -1;
;;    succ:       18

;;   basic block 18, loop depth 2
;;    pred:       16
;;                17
  # lpbl_77 = PHI <lpbl_75(16), lpbl_99(17)>
  _34 = (integer(kind=8)) lpbl_77;
  _35 = _34 * 29631;
  _36 = (integer(kind=8)) j_73;
  _37 = _36 * 119;
  _38 = _35 + _37;
  _39 = (integer(kind=8)) i_72;
  _40 = _38 + _39;
  _41 = _40 + -29751;
  _42 = extra.zint[_41];
  _43 = lmhk_88 + 1;
  _44 = (integer(kind=8)) _43;
  _45 = _44 * 29631;
  _46 = (integer(kind=8)) j_73;
  _47 = _46 * 119;
  _48 = _45 + _47;
  _49 = (integer(kind=8)) i_72;
  _50 = _48 + _49;
  _51 = _50 + -29751;
  _52 = extra.zint[_51];
  _53 = (integer(kind=8)) j_73;
  _54 = _53 * 119;
  _55 = (integer(kind=8)) i_72;
  _56 = _54 + _55;
  _57 = _56 + -120;
  _58 = _42 - _52;
  *hpbl_100(D)[_57] = _58;
  M.0_102 = 3.0e+2;
  _59 = (integer(kind=8)) j_73;
  _60 = _59 * 119;
  _61 = (integer(kind=8)) i_72;
  _62 = _60 + _61;
  _63 = _62 + -120;
  _103 = *hpbl_100(D)[_63];
  _64 = _103 > M.0_102;
  _65 = M.0_102 unord M.0_102;
  _66 = _64 | _65;
  if (_66 != 0)
    goto <bb 19>; [INV]
  else
    goto <bb 20>; [INV]
;;    succ:       19
;;                20

;;   basic block 19, loop depth 2
;;    pred:       18
  M.0_104 = _103;
;;    succ:       20

;;   basic block 20, loop depth 2
;;    pred:       18
;;                19
  # M.0_80 = PHI <M.0_102(18), M.0_104(19)>
  _67 = (integer(kind=8)) j_73;
  _68 = _67 * 119;
  _69 = (integer(kind=8)) i_72;
  _70 = _68 + _69;
  _71 = _70 + -120;
  *hpbl_100(D)[_71] = M.0_80;
  i_106 = i_72 + 1;
  goto <bb 5>; [INV]
;;    succ:       5

;;   basic block 21, loop depth 1
;;    pred:       5
  j_107 = j_73 + 1;
  goto <bb 3>; [INV]
;;    succ:       3

;;   basic block 22, loop depth 0
;;    pred:       3
;;    succ:       23

;;   basic block 23, loop depth 0
;;    pred:       22
<L30>:
  return;
;;    succ:       EXIT

}


Inserting a partition copy on edge BB19->BB20 : PART.76 = PART.84

;; Generating RTL for gimple basic block 2

;; j_83 = 1;

(insn 7 6 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
        (const_int 1 [0x1])) "CALHPBL.f":40 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; _85 = j_73 > 249;

(insn 9 8 10 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int 249 [0xf9]))) "CALHPBL.f":40 -1
     (nil))

(insn 10 9 11 (set (reg:QI 165)
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALHPBL.f":40 -1
     (nil))

(insn 11 10 0 (set (reg:SI 159 [ _85 ])
        (zero_extend:SI (reg:QI 165))) "CALHPBL.f":40 -1
     (nil))

;; if (_85 != 0)

(insn 12 11 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 159 [ _85 ])
            (const_int 0 [0]))) "CALHPBL.f":40 -1
     (nil))

(jump_insn 13 12 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "CALHPBL.f":40 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; i_86 = 1;

(insn 15 14 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
        (const_int 1 [0x1])) "CALHPBL.f":41 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; _87 = i_72 > 119;

(insn 17 16 18 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
            (const_int 119 [0x77]))) "CALHPBL.f":41 -1
     (nil))

(insn 18 17 19 (set (reg:QI 166)
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALHPBL.f":41 -1
     (nil))

(insn 19 18 0 (set (reg:SI 160 [ _87 ])
        (zero_extend:SI (reg:QI 166))) "CALHPBL.f":41 -1
     (nil))

;; if (_87 != 0)

(insn 20 19 21 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 160 [ _87 ])
            (const_int 0 [0]))) "CALHPBL.f":41 -1
     (nil))

(jump_insn 21 20 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "CALHPBL.f":41 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; _1 = (integer(kind=8)) j_73;

(insn 23 22 24 (set (reg:SI 167)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALHPBL.f":43 -1
     (nil))

(insn 24 23 0 (set (reg:DI 87 [ _1 ])
        (sign_extend:DI (reg:SI 167))) "CALHPBL.f":43 -1
     (nil))

;; _2 = _1 * 119;

(insn 25 24 0 (parallel [
            (set (reg:DI 88 [ _2 ])
                (mult:DI (reg:DI 87 [ _1 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALHPBL.f":43 -1
     (nil))

;; _3 = (integer(kind=8)) i_72;

(insn 26 25 27 (set (reg:SI 168)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALHPBL.f":43 -1
     (nil))

(insn 27 26 0 (set (reg:DI 89 [ _3 ])
        (sign_extend:DI (reg:SI 168))) "CALHPBL.f":43 -1
     (nil))

;; _4 = _2 + _3;

(insn 28 27 0 (parallel [
            (set (reg:DI 90 [ _4 ])
                (plus:DI (reg:DI 88 [ _2 ])
                    (reg:DI 89 [ _3 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALHPBL.f":43 -1
     (nil))

;; _5 = _4 + -120;

(insn 29 28 0 (parallel [
            (set (reg:DI 91 [ _5 ])
                (plus:DI (reg:DI 90 [ _4 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALHPBL.f":43 -1
     (nil))

;; lmhk_88 = loops.lmh[_5];

(insn 30 29 31 (set (reg/f:DI 169)
        (symbol_ref:DI ("loops_") [flags 0x202]  <var_decl 0x7f59e6831630 loops>)) "CALHPBL.f":43 -1
     (nil))

(insn 31 30 32 (parallel [
            (set (reg:DI 170)
                (plus:DI (reg:DI 91 [ _5 ])
                    (const_int 2420 [0x974])))
            (clobber (reg:CC 17 flags))
        ]) "CALHPBL.f":43 -1
     (nil))

(insn 32 31 33 (set (reg:SI 171)
        (mem:SI (plus:DI (mult:DI (reg:DI 170)
                    (const_int 4 [0x4]))
                (reg/f:DI 169)) [1 loops.lmh S4 A32])) "CALHPBL.f":43 -1
     (nil))

(insn 33 32 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [1 lmhk+0 S4 A32])
        (reg:SI 171)) "CALHPBL.f":43 -1
     (nil))

;; lpbl_89 = lmhk_88;

(insn 34 33 35 (set (reg:SI 172)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [1 lmhk+0 S4 A32])) "CALHPBL.f":44 -1
     (nil))

(insn 35 34 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [1 lpbl+0 S4 A32])
        (reg:SI 172)) "CALHPBL.f":44 -1
     (nil))

;; nepsq2_90 = 0;

(insn 36 35 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 nepsq2+0 S4 A32])
        (const_int 0 [0])) "CALHPBL.f":47 -1
     (nil))

;; _91 = lmhk_88;

(insn 37 36 0 (set (reg:SI 161 [ _91 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [1 lmhk+0 S4 A32])) "CALHPBL.f":48 -1
     (nil))

;; _92 = lmhk_88 / 2;

(insn 38 37 39 (set (reg:SI 173)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [1 lmhk+0 S4 A32])) "CALHPBL.f":48 -1
     (nil))

(insn 39 38 40 (parallel [
            (set (reg:SI 174)
                (lshiftrt:SI (reg:SI 173)
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "CALHPBL.f":48 -1
     (nil))

(insn 40 39 41 (parallel [
            (set (reg:SI 175)
                (plus:SI (reg:SI 174)
                    (reg:SI 173)))
            (clobber (reg:CC 17 flags))
        ]) "CALHPBL.f":48 -1
     (nil))

(insn 41 40 42 (parallel [
            (set (reg:SI 176)
                (ashiftrt:SI (reg:SI 175)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALHPBL.f":48 -1
     (expr_list:REG_EQUAL (div:SI (reg:SI 173)
            (const_int 2 [0x2]))
        (nil)))

(insn 42 41 0 (set (reg:SI 162 [ _92 ])
        (reg:SI 176)) "CALHPBL.f":48 -1
     (nil))

;; l_93 = _91;

(insn 43 42 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
        (reg:SI 161 [ _91 ])) "CALHPBL.f":48 -1
     (nil))

;; Generating RTL for gimple basic block 7

;; _94 = l_74 < _92;

(insn 45 44 46 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
            (reg:SI 162 [ _92 ]))) "CALHPBL.f":48 -1
     (nil))

(insn 46 45 47 (set (reg:QI 177)
        (lt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALHPBL.f":48 -1
     (nil))

(insn 47 46 0 (set (reg:SI 163 [ _94 ])
        (zero_extend:SI (reg:QI 177))) "CALHPBL.f":48 -1
     (nil))

;; if (_94 != 0)

(insn 48 47 49 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 163 [ _94 ])
            (const_int 0 [0]))) "CALHPBL.f":48 -1
     (nil))

(jump_insn 49 48 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "CALHPBL.f":48 -1
     (nil))

;; Generating RTL for gimple basic block 8

;; _6 = (integer(kind=8)) l_74;

(insn 51 50 52 (set (reg:SI 178)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALHPBL.f":49 -1
     (nil))

(insn 52 51 0 (set (reg:DI 92 [ _6 ])
        (sign_extend:DI (reg:SI 178))) "CALHPBL.f":49 -1
     (nil))

;; _7 = _6 * 29631;

(insn 53 52 0 (parallel [
            (set (reg:DI 93 [ _7 ])
                (mult:DI (reg:DI 92 [ _6 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALHPBL.f":49 -1
     (nil))

;; _8 = (integer(kind=8)) j_73;

(insn 54 53 55 (set (reg:SI 179)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALHPBL.f":49 -1
     (nil))

(insn 55 54 0 (set (reg:DI 94 [ _8 ])
        (sign_extend:DI (reg:SI 179))) "CALHPBL.f":49 -1
     (nil))

;; _9 = _8 * 119;

(insn 56 55 0 (parallel [
            (set (reg:DI 95 [ _9 ])
                (mult:DI (reg:DI 94 [ _8 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALHPBL.f":49 -1
     (nil))

;; _10 = _7 + _9;

(insn 57 56 0 (parallel [
            (set (reg:DI 96 [ _10 ])
                (plus:DI (reg:DI 93 [ _7 ])
                    (reg:DI 95 [ _9 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALHPBL.f":49 -1
     (nil))

;; _11 = (integer(kind=8)) i_72;

(insn 58 57 59 (set (reg:SI 180)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALHPBL.f":49 -1
     (nil))

(insn 59 58 0 (set (reg:DI 97 [ _11 ])
        (sign_extend:DI (reg:SI 180))) "CALHPBL.f":49 -1
     (nil))

;; _12 = _10 + _11;

(insn 60 59 0 (parallel [
            (set (reg:DI 98 [ _12 ])
                (plus:DI (reg:DI 96 [ _10 ])
                    (reg:DI 97 [ _11 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALHPBL.f":49 -1
     (nil))

;; _13 = _12 + -29751;

(insn 61 60 0 (parallel [
            (set (reg:DI 99 [ _13 ])
                (plus:DI (reg:DI 98 [ _12 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALHPBL.f":49 -1
     (nil))

;; _14 = pvrbls.q2[_13];

(insn 62 61 63 (set (reg/f:DI 181)
        (symbol_ref:DI ("pvrbls_") [flags 0x202]  <var_decl 0x7f59e6835360 pvrbls>)) "CALHPBL.f":49 -1
     (nil))

(insn 63 62 64 (parallel [
            (set (reg:DI 182)
                (plus:DI (reg:DI 99 [ _13 ])
                    (const_int 562989 [0x8972d])))
            (clobber (reg:CC 17 flags))
        ]) "CALHPBL.f":49 -1
     (nil))

(insn 64 63 0 (set (reg:SF 100 [ _14 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 182)
                    (const_int 4 [0x4]))
                (reg/f:DI 181)) [5 pvrbls.q2 S4 A32])) "CALHPBL.f":49 -1
     (nil))

;; if (_14 < 1.211999952793121337890625e-1)

(insn 65 64 66 (set (reg:SF 183)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) "CALHPBL.f":49 -1
     (expr_list:REG_EQUAL (const_double:SF 1.211999952793121337890625e-1 [0x0.f837b4p-3])
        (nil)))

(insn 66 65 67 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 183)
            (reg:SF 100 [ _14 ]))) "CALHPBL.f":49 -1
     (nil))

(jump_insn 67 66 68 (set (pc)
        (if_then_else (gt (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref 70)
            (pc))) "CALHPBL.f":49 -1
     (nil))

(jump_insn 68 67 69 (set (pc)
        (label_ref 0)) "CALHPBL.f":49 -1
     (nil))

(barrier 69 68 70)

(code_label 70 69 0 6 (nil) [0 uses])

;; Generating RTL for gimple basic block 9

;; if (nepsq2_78 <= 1)

(insn 72 71 73 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [1 nepsq2+0 S4 A32])
            (const_int 1 [0x1]))) "CALHPBL.f":49 -1
     (nil))

(jump_insn 73 72 0 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "CALHPBL.f":49 -1
     (nil))

;; Generating RTL for gimple basic block 10

;; nepsq2_95 = nepsq2_78 + 1;

(insn 75 74 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -20 [0xffffffffffffffec])) [1 nepsq2+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -20 [0xffffffffffffffec])) [1 nepsq2+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALHPBL.f":50 -1
     (nil))

;; Generating RTL for gimple basic block 11

;; 

(code_label 78 77 79 5 (nil) [0 uses])

(note 79 78 0 NOTE_INSN_BASIC_BLOCK)

;; _15 = (integer(kind=8)) l_74;

(insn 80 79 81 (set (reg:SI 184)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALHPBL.f":53 -1
     (nil))

(insn 81 80 0 (set (reg:DI 101 [ _15 ])
        (sign_extend:DI (reg:SI 184))) "CALHPBL.f":53 -1
     (nil))

;; _16 = _15 * 29631;

(insn 82 81 0 (parallel [
            (set (reg:DI 102 [ _16 ])
                (mult:DI (reg:DI 101 [ _15 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALHPBL.f":53 -1
     (nil))

;; _17 = (integer(kind=8)) j_73;

(insn 83 82 84 (set (reg:SI 185)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALHPBL.f":53 -1
     (nil))

(insn 84 83 0 (set (reg:DI 103 [ _17 ])
        (sign_extend:DI (reg:SI 185))) "CALHPBL.f":53 -1
     (nil))

;; _18 = _17 * 119;

(insn 85 84 0 (parallel [
            (set (reg:DI 104 [ _18 ])
                (mult:DI (reg:DI 103 [ _17 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALHPBL.f":53 -1
     (nil))

;; _19 = _16 + _18;

(insn 86 85 0 (parallel [
            (set (reg:DI 105 [ _19 ])
                (plus:DI (reg:DI 102 [ _16 ])
                    (reg:DI 104 [ _18 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALHPBL.f":53 -1
     (nil))

;; _20 = (integer(kind=8)) i_72;

(insn 87 86 88 (set (reg:SI 186)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALHPBL.f":53 -1
     (nil))

(insn 88 87 0 (set (reg:DI 106 [ _20 ])
        (sign_extend:DI (reg:SI 186))) "CALHPBL.f":53 -1
     (nil))

;; _21 = _19 + _20;

(insn 89 88 0 (parallel [
            (set (reg:DI 107 [ _21 ])
                (plus:DI (reg:DI 105 [ _19 ])
                    (reg:DI 106 [ _20 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALHPBL.f":53 -1
     (nil))

;; _22 = _21 + -29751;

(insn 90 89 0 (parallel [
            (set (reg:DI 108 [ _22 ])
                (plus:DI (reg:DI 107 [ _21 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALHPBL.f":53 -1
     (nil))

;; _23 = pvrbls.q2[_22];

(insn 91 90 92 (set (reg/f:DI 187)
        (symbol_ref:DI ("pvrbls_") [flags 0x202]  <var_decl 0x7f59e6835360 pvrbls>)) "CALHPBL.f":53 -1
     (nil))

(insn 92 91 93 (parallel [
            (set (reg:DI 188)
                (plus:DI (reg:DI 108 [ _22 ])
                    (const_int 562989 [0x8972d])))
            (clobber (reg:CC 17 flags))
        ]) "CALHPBL.f":53 -1
     (nil))

(insn 93 92 0 (set (reg:SF 109 [ _23 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 188)
                    (const_int 4 [0x4]))
                (reg/f:DI 187)) [5 pvrbls.q2 S4 A32])) "CALHPBL.f":53 -1
     (nil))

;; if (_23 >= 1.211999952793121337890625e-1)

(insn 94 93 95 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 109 [ _23 ])
            (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32]))) "CALHPBL.f":53 -1
     (nil))

(jump_insn 95 94 96 (set (pc)
        (if_then_else (ge (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref 98)
            (pc))) "CALHPBL.f":53 -1
     (nil))

(jump_insn 96 95 97 (set (pc)
        (label_ref 0)) "CALHPBL.f":53 -1
     (nil))

(barrier 97 96 98)

(code_label 98 97 0 9 (nil) [0 uses])

;; Generating RTL for gimple basic block 12

;; lpbl_96 = l_74;

(insn 100 99 101 (set (reg:SI 189)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALHPBL.f":54 -1
     (nil))

(insn 101 100 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [1 lpbl+0 S4 A32])
        (reg:SI 189)) "CALHPBL.f":54 -1
     (nil))

;; nepsq2_97 = 0;

(insn 102 101 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 nepsq2+0 S4 A32])
        (const_int 0 [0])) "CALHPBL.f":55 -1
     (nil))

;; Generating RTL for gimple basic block 13

;; 

(code_label 105 104 106 8 (nil) [0 uses])

(note 106 105 0 NOTE_INSN_BASIC_BLOCK)

;; if (nepsq2_78 > 1)

(insn 107 106 108 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [1 nepsq2+0 S4 A32])
            (const_int 1 [0x1]))) "CALHPBL.f":57 -1
     (nil))

(jump_insn 108 107 0 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "CALHPBL.f":57 -1
     (nil))

;; Generating RTL for gimple basic block 14

;; Generating RTL for gimple basic block 15

;; 

(code_label 112 111 113 7 (nil) [0 uses])

(note 113 112 0 NOTE_INSN_BASIC_BLOCK)

;; l_98 = l_74 + -1;

(insn 114 113 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALHPBL.f":48 -1
     (nil))

;; Generating RTL for gimple basic block 16

;; 

(code_label 118 117 119 4 (nil) [0 uses])

(note 119 118 0 NOTE_INSN_BASIC_BLOCK)

;; _24 = lmhk_88 + 1;

(insn 120 119 121 (set (reg:SI 190)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [1 lmhk+0 S4 A32])) "CALHPBL.f":61 -1
     (nil))

(insn 121 120 0 (parallel [
            (set (reg:SI 110 [ _24 ])
                (plus:SI (reg:SI 190)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALHPBL.f":61 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [1 lmhk+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))

;; _25 = (integer(kind=8)) _24;

(insn 122 121 0 (set (reg:DI 111 [ _25 ])
        (sign_extend:DI (reg:SI 110 [ _24 ]))) "CALHPBL.f":61 -1
     (nil))

;; _26 = _25 * 29631;

(insn 123 122 0 (parallel [
            (set (reg:DI 112 [ _26 ])
                (mult:DI (reg:DI 111 [ _25 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALHPBL.f":61 -1
     (nil))

;; _27 = (integer(kind=8)) j_73;

(insn 124 123 125 (set (reg:SI 191)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALHPBL.f":61 -1
     (nil))

(insn 125 124 0 (set (reg:DI 113 [ _27 ])
        (sign_extend:DI (reg:SI 191))) "CALHPBL.f":61 -1
     (nil))

;; _28 = _27 * 119;

(insn 126 125 0 (parallel [
            (set (reg:DI 114 [ _28 ])
                (mult:DI (reg:DI 113 [ _27 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALHPBL.f":61 -1
     (nil))

;; _29 = _26 + _28;

(insn 127 126 0 (parallel [
            (set (reg:DI 115 [ _29 ])
                (plus:DI (reg:DI 112 [ _26 ])
                    (reg:DI 114 [ _28 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALHPBL.f":61 -1
     (nil))

;; _30 = (integer(kind=8)) i_72;

(insn 128 127 129 (set (reg:SI 192)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALHPBL.f":61 -1
     (nil))

(insn 129 128 0 (set (reg:DI 116 [ _30 ])
        (sign_extend:DI (reg:SI 192))) "CALHPBL.f":61 -1
     (nil))

;; _31 = _29 + _30;

(insn 130 129 0 (parallel [
            (set (reg:DI 117 [ _31 ])
                (plus:DI (reg:DI 115 [ _29 ])
                    (reg:DI 116 [ _30 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALHPBL.f":61 -1
     (nil))

;; _32 = _31 + -29751;

(insn 131 130 0 (parallel [
            (set (reg:DI 118 [ _32 ])
                (plus:DI (reg:DI 117 [ _31 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALHPBL.f":61 -1
     (nil))

;; _33 = extra.zint[_32];

(insn 132 131 133 (set (reg/f:DI 193)
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f59e6829870 extra>)) "CALHPBL.f":61 -1
     (nil))

(insn 133 132 134 (parallel [
            (set (reg:DI 194)
                (plus:DI (reg:DI 118 [ _32 ])
                    (const_int 2311218 [0x234432])))
            (clobber (reg:CC 17 flags))
        ]) "CALHPBL.f":61 -1
     (nil))

(insn 134 133 0 (set (reg:SF 119 [ _33 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 194)
                    (const_int 4 [0x4]))
                (reg/f:DI 193)) [5 extra.zint S4 A32])) "CALHPBL.f":61 -1
     (nil))

;; if (_33 < 2.5e+3)

(insn 135 134 136 (set (reg:SF 195)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S4 A32])) "CALHPBL.f":61 -1
     (expr_list:REG_EQUAL (const_double:SF 2.5e+3 [0x0.9c4p+12])
        (nil)))

(insn 136 135 137 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 195)
            (reg:SF 119 [ _33 ]))) "CALHPBL.f":61 -1
     (nil))

(jump_insn 137 136 138 (set (pc)
        (if_then_else (gt (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref 140)
            (pc))) "CALHPBL.f":61 -1
     (nil))

(jump_insn 138 137 139 (set (pc)
        (label_ref 0)) "CALHPBL.f":61 -1
     (nil))

(barrier 139 138 140)

(code_label 140 139 0 12 (nil) [0 uses])

;; Generating RTL for gimple basic block 17

;; lpbl_99 = lpbl_75 + -1;

(insn 142 141 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -16 [0xfffffffffffffff0])) [1 lpbl+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -16 [0xfffffffffffffff0])) [1 lpbl+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALHPBL.f":61 -1
     (nil))

;; Generating RTL for gimple basic block 18

;; 

(code_label 143 142 144 11 (nil) [0 uses])

(note 144 143 0 NOTE_INSN_BASIC_BLOCK)

;; _34 = (integer(kind=8)) lpbl_77;

(insn 145 144 146 (set (reg:SI 196)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [1 lpbl+0 S4 A32])) "CALHPBL.f":66 -1
     (nil))

(insn 146 145 0 (set (reg:DI 120 [ _34 ])
        (sign_extend:DI (reg:SI 196))) "CALHPBL.f":66 -1
     (nil))

;; _35 = _34 * 29631;

(insn 147 146 0 (parallel [
            (set (reg:DI 121 [ _35 ])
                (mult:DI (reg:DI 120 [ _34 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALHPBL.f":66 -1
     (nil))

;; _36 = (integer(kind=8)) j_73;

(insn 148 147 149 (set (reg:SI 197)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALHPBL.f":66 -1
     (nil))

(insn 149 148 0 (set (reg:DI 122 [ _36 ])
        (sign_extend:DI (reg:SI 197))) "CALHPBL.f":66 -1
     (nil))

;; _37 = _36 * 119;

(insn 150 149 0 (parallel [
            (set (reg:DI 123 [ _37 ])
                (mult:DI (reg:DI 122 [ _36 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALHPBL.f":66 -1
     (nil))

;; _38 = _35 + _37;

(insn 151 150 0 (parallel [
            (set (reg:DI 124 [ _38 ])
                (plus:DI (reg:DI 121 [ _35 ])
                    (reg:DI 123 [ _37 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALHPBL.f":66 -1
     (nil))

;; _39 = (integer(kind=8)) i_72;

(insn 152 151 153 (set (reg:SI 198)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALHPBL.f":66 -1
     (nil))

(insn 153 152 0 (set (reg:DI 125 [ _39 ])
        (sign_extend:DI (reg:SI 198))) "CALHPBL.f":66 -1
     (nil))

;; _40 = _38 + _39;

(insn 154 153 0 (parallel [
            (set (reg:DI 126 [ _40 ])
                (plus:DI (reg:DI 124 [ _38 ])
                    (reg:DI 125 [ _39 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALHPBL.f":66 -1
     (nil))

;; _41 = _40 + -29751;

(insn 155 154 0 (parallel [
            (set (reg:DI 127 [ _41 ])
                (plus:DI (reg:DI 126 [ _40 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALHPBL.f":66 -1
     (nil))

;; _42 = extra.zint[_41];

(insn 156 155 157 (set (reg/f:DI 199)
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f59e6829870 extra>)) "CALHPBL.f":66 -1
     (nil))

(insn 157 156 158 (parallel [
            (set (reg:DI 200)
                (plus:DI (reg:DI 127 [ _41 ])
                    (const_int 2311218 [0x234432])))
            (clobber (reg:CC 17 flags))
        ]) "CALHPBL.f":66 -1
     (nil))

(insn 158 157 0 (set (reg:SF 128 [ _42 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 200)
                    (const_int 4 [0x4]))
                (reg/f:DI 199)) [5 extra.zint S4 A32])) "CALHPBL.f":66 -1
     (nil))

;; _43 = lmhk_88 + 1;

(insn 159 158 160 (set (reg:SI 201)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [1 lmhk+0 S4 A32])) "CALHPBL.f":66 -1
     (nil))

(insn 160 159 0 (parallel [
            (set (reg:SI 129 [ _43 ])
                (plus:SI (reg:SI 201)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALHPBL.f":66 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [1 lmhk+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))

;; _44 = (integer(kind=8)) _43;

(insn 161 160 0 (set (reg:DI 130 [ _44 ])
        (sign_extend:DI (reg:SI 129 [ _43 ]))) "CALHPBL.f":66 -1
     (nil))

;; _45 = _44 * 29631;

(insn 162 161 0 (parallel [
            (set (reg:DI 131 [ _45 ])
                (mult:DI (reg:DI 130 [ _44 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALHPBL.f":66 -1
     (nil))

;; _46 = (integer(kind=8)) j_73;

(insn 163 162 164 (set (reg:SI 202)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALHPBL.f":66 -1
     (nil))

(insn 164 163 0 (set (reg:DI 132 [ _46 ])
        (sign_extend:DI (reg:SI 202))) "CALHPBL.f":66 -1
     (nil))

;; _47 = _46 * 119;

(insn 165 164 0 (parallel [
            (set (reg:DI 133 [ _47 ])
                (mult:DI (reg:DI 132 [ _46 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALHPBL.f":66 -1
     (nil))

;; _48 = _45 + _47;

(insn 166 165 0 (parallel [
            (set (reg:DI 134 [ _48 ])
                (plus:DI (reg:DI 131 [ _45 ])
                    (reg:DI 133 [ _47 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALHPBL.f":66 -1
     (nil))

;; _49 = (integer(kind=8)) i_72;

(insn 167 166 168 (set (reg:SI 203)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALHPBL.f":66 -1
     (nil))

(insn 168 167 0 (set (reg:DI 135 [ _49 ])
        (sign_extend:DI (reg:SI 203))) "CALHPBL.f":66 -1
     (nil))

;; _50 = _48 + _49;

(insn 169 168 0 (parallel [
            (set (reg:DI 136 [ _50 ])
                (plus:DI (reg:DI 134 [ _48 ])
                    (reg:DI 135 [ _49 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALHPBL.f":66 -1
     (nil))

;; _51 = _50 + -29751;

(insn 170 169 0 (parallel [
            (set (reg:DI 137 [ _51 ])
                (plus:DI (reg:DI 136 [ _50 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALHPBL.f":66 -1
     (nil))

;; _52 = extra.zint[_51];

(insn 171 170 172 (set (reg/f:DI 204)
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f59e6829870 extra>)) "CALHPBL.f":66 -1
     (nil))

(insn 172 171 173 (parallel [
            (set (reg:DI 205)
                (plus:DI (reg:DI 137 [ _51 ])
                    (const_int 2311218 [0x234432])))
            (clobber (reg:CC 17 flags))
        ]) "CALHPBL.f":66 -1
     (nil))

(insn 173 172 0 (set (reg:SF 138 [ _52 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 205)
                    (const_int 4 [0x4]))
                (reg/f:DI 204)) [5 extra.zint S4 A32])) "CALHPBL.f":66 -1
     (nil))

;; _53 = (integer(kind=8)) j_73;

(insn 174 173 175 (set (reg:SI 206)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALHPBL.f":66 -1
     (nil))

(insn 175 174 0 (set (reg:DI 139 [ _53 ])
        (sign_extend:DI (reg:SI 206))) "CALHPBL.f":66 -1
     (nil))

;; _54 = _53 * 119;

(insn 176 175 0 (parallel [
            (set (reg:DI 140 [ _54 ])
                (mult:DI (reg:DI 139 [ _53 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALHPBL.f":66 -1
     (nil))

;; _55 = (integer(kind=8)) i_72;

(insn 177 176 178 (set (reg:SI 207)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALHPBL.f":66 -1
     (nil))

(insn 178 177 0 (set (reg:DI 141 [ _55 ])
        (sign_extend:DI (reg:SI 207))) "CALHPBL.f":66 -1
     (nil))

;; _56 = _54 + _55;

(insn 179 178 0 (parallel [
            (set (reg:DI 142 [ _56 ])
                (plus:DI (reg:DI 140 [ _54 ])
                    (reg:DI 141 [ _55 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALHPBL.f":66 -1
     (nil))

;; _57 = _56 + -120;

(insn 180 179 0 (parallel [
            (set (reg:DI 143 [ _57 ])
                (plus:DI (reg:DI 142 [ _56 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALHPBL.f":66 -1
     (nil))

;; _58 = _42 - _52;

(insn 181 180 0 (set (reg:SF 144 [ _58 ])
        (minus:SF (reg:SF 128 [ _42 ])
            (reg:SF 138 [ _52 ]))) "CALHPBL.f":66 -1
     (nil))

;; *hpbl_100(D)[_57] = _58;

(insn 182 181 183 (set (reg/f:DI 208)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [2 hpbl+0 S8 A64])) "CALHPBL.f":66 -1
     (nil))

(insn 183 182 0 (set (mem:SF (plus:DI (mult:DI (reg:DI 143 [ _57 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 208)) [5 *hpbl_100(D) S4 A32])
        (reg:SF 144 [ _58 ])) "CALHPBL.f":66 -1
     (nil))

;; M.0_102 = 3.0e+2;

(insn 184 183 0 (set (reg:SF 158 [ M.0_80 ])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0  S4 A32])) "CALHPBL.f":67 -1
     (expr_list:REG_EQUAL (const_double:SF 3.0e+2 [0x0.96p+9])
        (nil)))

;; _59 = (integer(kind=8)) j_73;

(insn 185 184 186 (set (reg:SI 209)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALHPBL.f":67 -1
     (nil))

(insn 186 185 0 (set (reg:DI 145 [ _59 ])
        (sign_extend:DI (reg:SI 209))) "CALHPBL.f":67 -1
     (nil))

;; _60 = _59 * 119;

(insn 187 186 0 (parallel [
            (set (reg:DI 146 [ _60 ])
                (mult:DI (reg:DI 145 [ _59 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALHPBL.f":67 -1
     (nil))

;; _61 = (integer(kind=8)) i_72;

(insn 188 187 189 (set (reg:SI 210)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALHPBL.f":67 -1
     (nil))

(insn 189 188 0 (set (reg:DI 147 [ _61 ])
        (sign_extend:DI (reg:SI 210))) "CALHPBL.f":67 -1
     (nil))

;; _62 = _60 + _61;

(insn 190 189 0 (parallel [
            (set (reg:DI 148 [ _62 ])
                (plus:DI (reg:DI 146 [ _60 ])
                    (reg:DI 147 [ _61 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALHPBL.f":67 -1
     (nil))

;; _63 = _62 + -120;

(insn 191 190 0 (parallel [
            (set (reg:DI 149 [ _63 ])
                (plus:DI (reg:DI 148 [ _62 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALHPBL.f":67 -1
     (nil))

;; _103 = *hpbl_100(D)[_63];

(insn 192 191 193 (set (reg/f:DI 211)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [2 hpbl+0 S8 A64])) "CALHPBL.f":67 -1
     (nil))

(insn 193 192 0 (set (reg:SF 164 [ _103 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 149 [ _63 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 211)) [5 *hpbl_100(D) S4 A32])) "CALHPBL.f":67 -1
     (nil))

;; _64 = _103 > M.0_102;

(insn 194 193 195 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 164 [ _103 ])
            (reg:SF 158 [ M.0_80 ]))) "CALHPBL.f":67 -1
     (nil))

(insn 195 194 196 (set (reg:QI 212)
        (gt:QI (reg:CCFP 17 flags)
            (const_int 0 [0]))) "CALHPBL.f":67 -1
     (nil))

(insn 196 195 0 (set (reg:SI 150 [ _64 ])
        (zero_extend:SI (reg:QI 212))) "CALHPBL.f":67 -1
     (nil))

;; _65 = M.0_102 unord M.0_102;

(insn 197 196 198 (set (reg:CCFP 17 flags)
        (unspec:CCFP [
                (compare:CCFP (reg:SF 158 [ M.0_80 ])
                    (reg:SF 158 [ M.0_80 ]))
            ] UNSPEC_NOTRAP)) "CALHPBL.f":67 -1
     (nil))

(insn 198 197 199 (set (reg:QI 213)
        (unordered:QI (reg:CCFP 17 flags)
            (const_int 0 [0]))) "CALHPBL.f":67 -1
     (nil))

(insn 199 198 0 (set (reg:SI 151 [ _65 ])
        (zero_extend:SI (reg:QI 213))) "CALHPBL.f":67 -1
     (nil))

;; _66 = _64 | _65;

(insn 200 199 0 (parallel [
            (set (reg:SI 152 [ _66 ])
                (ior:SI (reg:SI 150 [ _64 ])
                    (reg:SI 151 [ _65 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALHPBL.f":67 -1
     (nil))

;; if (_66 != 0)

(insn 201 200 202 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 152 [ _66 ])
            (const_int 0 [0]))) "CALHPBL.f":67 -1
     (nil))

(jump_insn 202 201 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "CALHPBL.f":67 -1
     (nil))

;; Generating RTL for gimple basic block 19

;; M.0_104 = _103;

(nil)

;; Generating RTL for gimple basic block 20

;; 

(code_label 204 203 205 13 (nil) [0 uses])

(note 205 204 0 NOTE_INSN_BASIC_BLOCK)

;; _67 = (integer(kind=8)) j_73;

(insn 206 205 207 (set (reg:SI 214)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALHPBL.f":67 -1
     (nil))

(insn 207 206 0 (set (reg:DI 153 [ _67 ])
        (sign_extend:DI (reg:SI 214))) "CALHPBL.f":67 -1
     (nil))

;; _68 = _67 * 119;

(insn 208 207 0 (parallel [
            (set (reg:DI 154 [ _68 ])
                (mult:DI (reg:DI 153 [ _67 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALHPBL.f":67 -1
     (nil))

;; _69 = (integer(kind=8)) i_72;

(insn 209 208 210 (set (reg:SI 215)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALHPBL.f":67 -1
     (nil))

(insn 210 209 0 (set (reg:DI 155 [ _69 ])
        (sign_extend:DI (reg:SI 215))) "CALHPBL.f":67 -1
     (nil))

;; _70 = _68 + _69;

(insn 211 210 0 (parallel [
            (set (reg:DI 156 [ _70 ])
                (plus:DI (reg:DI 154 [ _68 ])
                    (reg:DI 155 [ _69 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALHPBL.f":67 -1
     (nil))

;; _71 = _70 + -120;

(insn 212 211 0 (parallel [
            (set (reg:DI 157 [ _71 ])
                (plus:DI (reg:DI 156 [ _70 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALHPBL.f":67 -1
     (nil))

;; *hpbl_100(D)[_71] = M.0_80;

(insn 213 212 214 (set (reg/f:DI 216)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [2 hpbl+0 S8 A64])) "CALHPBL.f":67 -1
     (nil))

(insn 214 213 0 (set (mem:SF (plus:DI (mult:DI (reg:DI 157 [ _71 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 216)) [5 *hpbl_100(D) S4 A32])
        (reg:SF 158 [ M.0_80 ])) "CALHPBL.f":67 -1
     (nil))

;; i_106 = i_72 + 1;

(insn 215 214 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALHPBL.f":41 -1
     (nil))

;; Generating RTL for gimple basic block 21

;; 

(code_label 219 218 220 3 (nil) [0 uses])

(note 220 219 0 NOTE_INSN_BASIC_BLOCK)

;; j_107 = j_73 + 1;

(insn 221 220 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALHPBL.f":40 -1
     (nil))

;; Generating RTL for gimple basic block 22

;; 

(code_label 225 224 226 2 (nil) [0 uses])

(note 226 225 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 23

;; <L30>:

(code_label 227 226 228 16 (nil) [0 uses])

(note 228 227 0 NOTE_INSN_BASIC_BLOCK)
Purged non-fallthru edges from bb 27
Purged non-fallthru edges from bb 29
Purged non-fallthru edges from bb 31


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Edge 9->11 redirected to 12
Forwarding edge 9->10 to 14 failed.
Forwarding edge 9->10 to 14 failed.
deleting block 11
Edge 14->16 redirected to 17
Forwarding edge 14->15 to 18 failed.
Forwarding edge 14->15 to 18 failed.
deleting block 16
Forwarding edge 18->19 to 21 failed.
Edge 21->23 redirected to 24
Forwarding edge 21->22 to 25 failed.
Forwarding edge 21->22 to 25 failed.
deleting block 23
Merging block 30 into block 29...
Merged blocks 29 and 30.
Merged 29 and 30 without moving.
Merging block 31 into block 29...
Merged blocks 29 and 31.
Merged 29 and 31 without moving.


try_optimize_cfg iteration 2

Forwarding edge 9->10 to 14 failed.
Forwarding edge 14->15 to 18 failed.
Forwarding edge 18->19 to 21 failed.
Forwarding edge 21->22 to 25 failed.
fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [2 hpbl+0 S8 A64])
        (reg:DI 5 di [ hpbl ])) "CALHPBL.f":1 -1
     (nil))
(note 3 2 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 3 222 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
        (const_int 1 [0x1])) "CALHPBL.f":40 -1
     (nil))
;;  succ:       4 (FALLTHRU)

;; basic block 4, loop depth 1, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
;;              28 (DFS_BACK)
(code_label 222 7 8 4 15 (nil) [1 uses])
(note 8 222 9 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 9 8 10 4 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int 249 [0xf9]))) "CALHPBL.f":40 -1
     (nil))
(insn 10 9 11 4 (set (reg:QI 165)
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALHPBL.f":40 -1
     (nil))
(insn 11 10 12 4 (set (reg:SI 159 [ _85 ])
        (zero_extend:SI (reg:QI 165))) "CALHPBL.f":40 -1
     (nil))
(insn 12 11 13 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 159 [ _85 ])
            (const_int 0 [0]))) "CALHPBL.f":40 -1
     (nil))
(jump_insn 13 12 14 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 225)
            (pc))) "CALHPBL.f":40 -1
     (nil)
 -> 225)
;;  succ:       29
;;              5 (FALLTHRU)

;; basic block 5, loop depth 1, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       4 (FALLTHRU)
(note 14 13 15 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 216 5 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
        (const_int 1 [0x1])) "CALHPBL.f":41 -1
     (nil))
;;  succ:       6 (FALLTHRU)

;; basic block 6, loop depth 2, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       5 (FALLTHRU)
;;              27 (DFS_BACK)
(code_label 216 15 16 6 14 (nil) [1 uses])
(note 16 216 17 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 6 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
            (const_int 119 [0x77]))) "CALHPBL.f":41 -1
     (nil))
(insn 18 17 19 6 (set (reg:QI 166)
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALHPBL.f":41 -1
     (nil))
(insn 19 18 20 6 (set (reg:SI 160 [ _87 ])
        (zero_extend:SI (reg:QI 166))) "CALHPBL.f":41 -1
     (nil))
(insn 20 19 21 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 160 [ _87 ])
            (const_int 0 [0]))) "CALHPBL.f":41 -1
     (nil))
(jump_insn 21 20 22 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 219)
            (pc))) "CALHPBL.f":41 -1
     (nil)
 -> 219)
;;  succ:       28
;;              7 (FALLTHRU)

;; basic block 7, loop depth 2, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       6 (FALLTHRU)
(note 22 21 23 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 24 7 (set (reg:SI 167)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALHPBL.f":43 -1
     (nil))
(insn 24 23 25 7 (set (reg:DI 87 [ _1 ])
        (sign_extend:DI (reg:SI 167))) "CALHPBL.f":43 -1
     (nil))
(insn 25 24 26 7 (parallel [
            (set (reg:DI 88 [ _2 ])
                (mult:DI (reg:DI 87 [ _1 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALHPBL.f":43 -1
     (nil))
(insn 26 25 27 7 (set (reg:SI 168)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALHPBL.f":43 -1
     (nil))
(insn 27 26 28 7 (set (reg:DI 89 [ _3 ])
        (sign_extend:DI (reg:SI 168))) "CALHPBL.f":43 -1
     (nil))
(insn 28 27 29 7 (parallel [
            (set (reg:DI 90 [ _4 ])
                (plus:DI (reg:DI 88 [ _2 ])
                    (reg:DI 89 [ _3 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALHPBL.f":43 -1
     (nil))
(insn 29 28 30 7 (parallel [
            (set (reg:DI 91 [ _5 ])
                (plus:DI (reg:DI 90 [ _4 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALHPBL.f":43 -1
     (nil))
(insn 30 29 31 7 (set (reg/f:DI 169)
        (symbol_ref:DI ("loops_") [flags 0x202]  <var_decl 0x7f59e6831630 loops>)) "CALHPBL.f":43 -1
     (nil))
(insn 31 30 32 7 (parallel [
            (set (reg:DI 170)
                (plus:DI (reg:DI 91 [ _5 ])
                    (const_int 2420 [0x974])))
            (clobber (reg:CC 17 flags))
        ]) "CALHPBL.f":43 -1
     (nil))
(insn 32 31 33 7 (set (reg:SI 171)
        (mem:SI (plus:DI (mult:DI (reg:DI 170)
                    (const_int 4 [0x4]))
                (reg/f:DI 169)) [1 loops.lmh S4 A32])) "CALHPBL.f":43 -1
     (nil))
(insn 33 32 34 7 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [1 lmhk+0 S4 A32])
        (reg:SI 171)) "CALHPBL.f":43 -1
     (nil))
(insn 34 33 35 7 (set (reg:SI 172)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [1 lmhk+0 S4 A32])) "CALHPBL.f":44 -1
     (nil))
(insn 35 34 36 7 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [1 lpbl+0 S4 A32])
        (reg:SI 172)) "CALHPBL.f":44 -1
     (nil))
(insn 36 35 37 7 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 nepsq2+0 S4 A32])
        (const_int 0 [0])) "CALHPBL.f":47 -1
     (nil))
(insn 37 36 38 7 (set (reg:SI 161 [ _91 ])
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [1 lmhk+0 S4 A32])) "CALHPBL.f":48 -1
     (nil))
(insn 38 37 39 7 (set (reg:SI 173)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [1 lmhk+0 S4 A32])) "CALHPBL.f":48 -1
     (nil))
(insn 39 38 40 7 (parallel [
            (set (reg:SI 174)
                (lshiftrt:SI (reg:SI 173)
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "CALHPBL.f":48 -1
     (nil))
(insn 40 39 41 7 (parallel [
            (set (reg:SI 175)
                (plus:SI (reg:SI 174)
                    (reg:SI 173)))
            (clobber (reg:CC 17 flags))
        ]) "CALHPBL.f":48 -1
     (nil))
(insn 41 40 42 7 (parallel [
            (set (reg:SI 176)
                (ashiftrt:SI (reg:SI 175)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALHPBL.f":48 -1
     (expr_list:REG_EQUAL (div:SI (reg:SI 173)
            (const_int 2 [0x2]))
        (nil)))
(insn 42 41 43 7 (set (reg:SI 162 [ _92 ])
        (reg:SI 176)) "CALHPBL.f":48 -1
     (nil))
(insn 43 42 115 7 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
        (reg:SI 161 [ _91 ])) "CALHPBL.f":48 -1
     (nil))
;;  succ:       8 (FALLTHRU)

;; basic block 8, loop depth 3, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       7 (FALLTHRU)
;;              20 (DFS_BACK)
(code_label 115 43 44 8 10 (nil) [1 uses])
(note 44 115 45 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 45 44 46 8 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
            (reg:SI 162 [ _92 ]))) "CALHPBL.f":48 -1
     (nil))
(insn 46 45 47 8 (set (reg:QI 177)
        (lt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALHPBL.f":48 -1
     (nil))
(insn 47 46 48 8 (set (reg:SI 163 [ _94 ])
        (zero_extend:SI (reg:QI 177))) "CALHPBL.f":48 -1
     (nil))
(insn 48 47 49 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 163 [ _94 ])
            (const_int 0 [0]))) "CALHPBL.f":48 -1
     (nil))
(jump_insn 49 48 50 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 118)
            (pc))) "CALHPBL.f":48 -1
     (nil)
 -> 118)
;;  succ:       21
;;              9 (FALLTHRU)

;; basic block 9, loop depth 3, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
(note 50 49 51 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 51 50 52 9 (set (reg:SI 178)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALHPBL.f":49 -1
     (nil))
(insn 52 51 53 9 (set (reg:DI 92 [ _6 ])
        (sign_extend:DI (reg:SI 178))) "CALHPBL.f":49 -1
     (nil))
(insn 53 52 54 9 (parallel [
            (set (reg:DI 93 [ _7 ])
                (mult:DI (reg:DI 92 [ _6 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALHPBL.f":49 -1
     (nil))
(insn 54 53 55 9 (set (reg:SI 179)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALHPBL.f":49 -1
     (nil))
(insn 55 54 56 9 (set (reg:DI 94 [ _8 ])
        (sign_extend:DI (reg:SI 179))) "CALHPBL.f":49 -1
     (nil))
(insn 56 55 57 9 (parallel [
            (set (reg:DI 95 [ _9 ])
                (mult:DI (reg:DI 94 [ _8 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALHPBL.f":49 -1
     (nil))
(insn 57 56 58 9 (parallel [
            (set (reg:DI 96 [ _10 ])
                (plus:DI (reg:DI 93 [ _7 ])
                    (reg:DI 95 [ _9 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALHPBL.f":49 -1
     (nil))
(insn 58 57 59 9 (set (reg:SI 180)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALHPBL.f":49 -1
     (nil))
(insn 59 58 60 9 (set (reg:DI 97 [ _11 ])
        (sign_extend:DI (reg:SI 180))) "CALHPBL.f":49 -1
     (nil))
(insn 60 59 61 9 (parallel [
            (set (reg:DI 98 [ _12 ])
                (plus:DI (reg:DI 96 [ _10 ])
                    (reg:DI 97 [ _11 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALHPBL.f":49 -1
     (nil))
(insn 61 60 62 9 (parallel [
            (set (reg:DI 99 [ _13 ])
                (plus:DI (reg:DI 98 [ _12 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALHPBL.f":49 -1
     (nil))
(insn 62 61 63 9 (set (reg/f:DI 181)
        (symbol_ref:DI ("pvrbls_") [flags 0x202]  <var_decl 0x7f59e6835360 pvrbls>)) "CALHPBL.f":49 -1
     (nil))
(insn 63 62 64 9 (parallel [
            (set (reg:DI 182)
                (plus:DI (reg:DI 99 [ _13 ])
                    (const_int 562989 [0x8972d])))
            (clobber (reg:CC 17 flags))
        ]) "CALHPBL.f":49 -1
     (nil))
(insn 64 63 65 9 (set (reg:SF 100 [ _14 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 182)
                    (const_int 4 [0x4]))
                (reg/f:DI 181)) [5 pvrbls.q2 S4 A32])) "CALHPBL.f":49 -1
     (nil))
(insn 65 64 66 9 (set (reg:SF 183)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) "CALHPBL.f":49 -1
     (expr_list:REG_EQUAL (const_double:SF 1.211999952793121337890625e-1 [0x0.f837b4p-3])
        (nil)))
(insn 66 65 67 9 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 183)
            (reg:SF 100 [ _14 ]))) "CALHPBL.f":49 -1
     (nil))
(jump_insn 67 66 231 9 (set (pc)
        (if_then_else (gt (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 237)
            (pc))) "CALHPBL.f":49 682 {*jcc}
     (nil)
 -> 237)
;;  succ:       12
;;              10 (FALLTHRU)

;; basic block 10, loop depth 3, maybe hot
;;  prev block 9, next block 12, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       9 (FALLTHRU)
(note 231 67 68 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(jump_insn 68 231 69 10 (set (pc)
        (label_ref 78)) "CALHPBL.f":49 -1
     (nil)
 -> 78)
;;  succ:       14

(barrier 69 68 237)
;; basic block 12, loop depth 3, maybe hot
;;  prev block 10, next block 13, flags: (NEW, REACHABLE, RTL)
;;  pred:       9
(code_label 237 69 71 12 17 (nil) [1 uses])
(note 71 237 72 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 72 71 73 12 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [1 nepsq2+0 S4 A32])
            (const_int 1 [0x1]))) "CALHPBL.f":49 -1
     (nil))
(jump_insn 73 72 74 12 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 78)
            (pc))) "CALHPBL.f":49 -1
     (nil)
 -> 78)
;;  succ:       13 (FALLTHRU)
;;              14

;; basic block 13, loop depth 3, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL)
;;  pred:       12 (FALLTHRU)
(note 74 73 75 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 75 74 76 13 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -20 [0xffffffffffffffec])) [1 nepsq2+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -20 [0xffffffffffffffec])) [1 nepsq2+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALHPBL.f":50 -1
     (nil))
(jump_insn 76 75 77 13 (set (pc)
        (label_ref 112)) "CALHPBL.f":51 -1
     (nil)
 -> 112)
;;  succ:       20

(barrier 77 76 78)
;; basic block 14, loop depth 3, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       12
;;              10
(code_label 78 77 79 14 5 (nil) [2 uses])
(note 79 78 80 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 80 79 81 14 (set (reg:SI 184)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALHPBL.f":53 -1
     (nil))
(insn 81 80 82 14 (set (reg:DI 101 [ _15 ])
        (sign_extend:DI (reg:SI 184))) "CALHPBL.f":53 -1
     (nil))
(insn 82 81 83 14 (parallel [
            (set (reg:DI 102 [ _16 ])
                (mult:DI (reg:DI 101 [ _15 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALHPBL.f":53 -1
     (nil))
(insn 83 82 84 14 (set (reg:SI 185)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALHPBL.f":53 -1
     (nil))
(insn 84 83 85 14 (set (reg:DI 103 [ _17 ])
        (sign_extend:DI (reg:SI 185))) "CALHPBL.f":53 -1
     (nil))
(insn 85 84 86 14 (parallel [
            (set (reg:DI 104 [ _18 ])
                (mult:DI (reg:DI 103 [ _17 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALHPBL.f":53 -1
     (nil))
(insn 86 85 87 14 (parallel [
            (set (reg:DI 105 [ _19 ])
                (plus:DI (reg:DI 102 [ _16 ])
                    (reg:DI 104 [ _18 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALHPBL.f":53 -1
     (nil))
(insn 87 86 88 14 (set (reg:SI 186)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALHPBL.f":53 -1
     (nil))
(insn 88 87 89 14 (set (reg:DI 106 [ _20 ])
        (sign_extend:DI (reg:SI 186))) "CALHPBL.f":53 -1
     (nil))
(insn 89 88 90 14 (parallel [
            (set (reg:DI 107 [ _21 ])
                (plus:DI (reg:DI 105 [ _19 ])
                    (reg:DI 106 [ _20 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALHPBL.f":53 -1
     (nil))
(insn 90 89 91 14 (parallel [
            (set (reg:DI 108 [ _22 ])
                (plus:DI (reg:DI 107 [ _21 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALHPBL.f":53 -1
     (nil))
(insn 91 90 92 14 (set (reg/f:DI 187)
        (symbol_ref:DI ("pvrbls_") [flags 0x202]  <var_decl 0x7f59e6835360 pvrbls>)) "CALHPBL.f":53 -1
     (nil))
(insn 92 91 93 14 (parallel [
            (set (reg:DI 188)
                (plus:DI (reg:DI 108 [ _22 ])
                    (const_int 562989 [0x8972d])))
            (clobber (reg:CC 17 flags))
        ]) "CALHPBL.f":53 -1
     (nil))
(insn 93 92 94 14 (set (reg:SF 109 [ _23 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 188)
                    (const_int 4 [0x4]))
                (reg/f:DI 187)) [5 pvrbls.q2 S4 A32])) "CALHPBL.f":53 -1
     (nil))
(insn 94 93 95 14 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 109 [ _23 ])
            (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32]))) "CALHPBL.f":53 -1
     (nil))
(jump_insn 95 94 233 14 (set (pc)
        (if_then_else (ge (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 238)
            (pc))) "CALHPBL.f":53 682 {*jcc}
     (nil)
 -> 238)
;;  succ:       17
;;              15 (FALLTHRU)

;; basic block 15, loop depth 3, maybe hot
;;  prev block 14, next block 17, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       14 (FALLTHRU)
(note 233 95 96 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(jump_insn 96 233 97 15 (set (pc)
        (label_ref 105)) "CALHPBL.f":53 -1
     (nil)
 -> 105)
;;  succ:       18

(barrier 97 96 238)
;; basic block 17, loop depth 3, maybe hot
;;  prev block 15, next block 18, flags: (NEW, REACHABLE, RTL)
;;  pred:       14
(code_label 238 97 99 17 18 (nil) [1 uses])
(note 99 238 100 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 100 99 101 17 (set (reg:SI 189)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALHPBL.f":54 -1
     (nil))
(insn 101 100 102 17 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [1 lpbl+0 S4 A32])
        (reg:SI 189)) "CALHPBL.f":54 -1
     (nil))
(insn 102 101 103 17 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -20 [0xffffffffffffffec])) [1 nepsq2+0 S4 A32])
        (const_int 0 [0])) "CALHPBL.f":55 -1
     (nil))
(jump_insn 103 102 104 17 (set (pc)
        (label_ref 112)) "CALHPBL.f":56 -1
     (nil)
 -> 112)
;;  succ:       20

(barrier 104 103 105)
;; basic block 18, loop depth 3, maybe hot
;;  prev block 17, next block 19, flags: (NEW, REACHABLE, RTL)
;;  pred:       15
(code_label 105 104 106 18 8 (nil) [1 uses])
(note 106 105 107 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 107 106 108 18 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -20 [0xffffffffffffffec])) [1 nepsq2+0 S4 A32])
            (const_int 1 [0x1]))) "CALHPBL.f":57 -1
     (nil))
(jump_insn 108 107 109 18 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 112)
            (pc))) "CALHPBL.f":57 -1
     (nil)
 -> 112)
;;  succ:       19 (FALLTHRU)
;;              20

;; basic block 19, loop depth 2, maybe hot
;;  prev block 18, next block 20, flags: (NEW, REACHABLE, RTL)
;;  pred:       18 (FALLTHRU)
(note 109 108 110 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(jump_insn 110 109 111 19 (set (pc)
        (label_ref 118)) "CALHPBL.f":58 -1
     (nil)
 -> 118)
;;  succ:       21

(barrier 111 110 112)
;; basic block 20, loop depth 3, maybe hot
;;  prev block 19, next block 21, flags: (NEW, REACHABLE, RTL)
;;  pred:       13
;;              17
;;              18
(code_label 112 111 113 20 7 (nil) [3 uses])
(note 113 112 114 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 114 113 116 20 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALHPBL.f":48 -1
     (nil))
(jump_insn 116 114 117 20 (set (pc)
        (label_ref 115)) "CALHPBL.f":48 -1
     (nil)
 -> 115)
;;  succ:       8 (DFS_BACK)

(barrier 117 116 118)
;; basic block 21, loop depth 2, maybe hot
;;  prev block 20, next block 22, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8
;;              19
(code_label 118 117 119 21 4 (nil) [2 uses])
(note 119 118 120 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 120 119 121 21 (set (reg:SI 190)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [1 lmhk+0 S4 A32])) "CALHPBL.f":61 -1
     (nil))
(insn 121 120 122 21 (parallel [
            (set (reg:SI 110 [ _24 ])
                (plus:SI (reg:SI 190)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALHPBL.f":61 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [1 lmhk+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 122 121 123 21 (set (reg:DI 111 [ _25 ])
        (sign_extend:DI (reg:SI 110 [ _24 ]))) "CALHPBL.f":61 -1
     (nil))
(insn 123 122 124 21 (parallel [
            (set (reg:DI 112 [ _26 ])
                (mult:DI (reg:DI 111 [ _25 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALHPBL.f":61 -1
     (nil))
(insn 124 123 125 21 (set (reg:SI 191)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALHPBL.f":61 -1
     (nil))
(insn 125 124 126 21 (set (reg:DI 113 [ _27 ])
        (sign_extend:DI (reg:SI 191))) "CALHPBL.f":61 -1
     (nil))
(insn 126 125 127 21 (parallel [
            (set (reg:DI 114 [ _28 ])
                (mult:DI (reg:DI 113 [ _27 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALHPBL.f":61 -1
     (nil))
(insn 127 126 128 21 (parallel [
            (set (reg:DI 115 [ _29 ])
                (plus:DI (reg:DI 112 [ _26 ])
                    (reg:DI 114 [ _28 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALHPBL.f":61 -1
     (nil))
(insn 128 127 129 21 (set (reg:SI 192)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALHPBL.f":61 -1
     (nil))
(insn 129 128 130 21 (set (reg:DI 116 [ _30 ])
        (sign_extend:DI (reg:SI 192))) "CALHPBL.f":61 -1
     (nil))
(insn 130 129 131 21 (parallel [
            (set (reg:DI 117 [ _31 ])
                (plus:DI (reg:DI 115 [ _29 ])
                    (reg:DI 116 [ _30 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALHPBL.f":61 -1
     (nil))
(insn 131 130 132 21 (parallel [
            (set (reg:DI 118 [ _32 ])
                (plus:DI (reg:DI 117 [ _31 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALHPBL.f":61 -1
     (nil))
(insn 132 131 133 21 (set (reg/f:DI 193)
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f59e6829870 extra>)) "CALHPBL.f":61 -1
     (nil))
(insn 133 132 134 21 (parallel [
            (set (reg:DI 194)
                (plus:DI (reg:DI 118 [ _32 ])
                    (const_int 2311218 [0x234432])))
            (clobber (reg:CC 17 flags))
        ]) "CALHPBL.f":61 -1
     (nil))
(insn 134 133 135 21 (set (reg:SF 119 [ _33 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 194)
                    (const_int 4 [0x4]))
                (reg/f:DI 193)) [5 extra.zint S4 A32])) "CALHPBL.f":61 -1
     (nil))
(insn 135 134 136 21 (set (reg:SF 195)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S4 A32])) "CALHPBL.f":61 -1
     (expr_list:REG_EQUAL (const_double:SF 2.5e+3 [0x0.9c4p+12])
        (nil)))
(insn 136 135 137 21 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 195)
            (reg:SF 119 [ _33 ]))) "CALHPBL.f":61 -1
     (nil))
(jump_insn 137 136 235 21 (set (pc)
        (if_then_else (gt (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 239)
            (pc))) "CALHPBL.f":61 682 {*jcc}
     (nil)
 -> 239)
;;  succ:       24
;;              22 (FALLTHRU)

;; basic block 22, loop depth 2, maybe hot
;;  prev block 21, next block 24, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       21 (FALLTHRU)
(note 235 137 138 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(jump_insn 138 235 139 22 (set (pc)
        (label_ref 143)) "CALHPBL.f":61 -1
     (nil)
 -> 143)
;;  succ:       25

(barrier 139 138 239)
;; basic block 24, loop depth 2, maybe hot
;;  prev block 22, next block 25, flags: (NEW, REACHABLE, RTL)
;;  pred:       21
(code_label 239 139 141 24 19 (nil) [1 uses])
(note 141 239 142 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 142 141 143 24 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -16 [0xfffffffffffffff0])) [1 lpbl+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -16 [0xfffffffffffffff0])) [1 lpbl+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALHPBL.f":61 -1
     (nil))
;;  succ:       25 (FALLTHRU)

;; basic block 25, loop depth 2, maybe hot
;;  prev block 24, next block 26, flags: (NEW, REACHABLE, RTL)
;;  pred:       24 (FALLTHRU)
;;              22
(code_label 143 142 144 25 11 (nil) [1 uses])
(note 144 143 145 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 145 144 146 25 (set (reg:SI 196)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [1 lpbl+0 S4 A32])) "CALHPBL.f":66 -1
     (nil))
(insn 146 145 147 25 (set (reg:DI 120 [ _34 ])
        (sign_extend:DI (reg:SI 196))) "CALHPBL.f":66 -1
     (nil))
(insn 147 146 148 25 (parallel [
            (set (reg:DI 121 [ _35 ])
                (mult:DI (reg:DI 120 [ _34 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALHPBL.f":66 -1
     (nil))
(insn 148 147 149 25 (set (reg:SI 197)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALHPBL.f":66 -1
     (nil))
(insn 149 148 150 25 (set (reg:DI 122 [ _36 ])
        (sign_extend:DI (reg:SI 197))) "CALHPBL.f":66 -1
     (nil))
(insn 150 149 151 25 (parallel [
            (set (reg:DI 123 [ _37 ])
                (mult:DI (reg:DI 122 [ _36 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALHPBL.f":66 -1
     (nil))
(insn 151 150 152 25 (parallel [
            (set (reg:DI 124 [ _38 ])
                (plus:DI (reg:DI 121 [ _35 ])
                    (reg:DI 123 [ _37 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALHPBL.f":66 -1
     (nil))
(insn 152 151 153 25 (set (reg:SI 198)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALHPBL.f":66 -1
     (nil))
(insn 153 152 154 25 (set (reg:DI 125 [ _39 ])
        (sign_extend:DI (reg:SI 198))) "CALHPBL.f":66 -1
     (nil))
(insn 154 153 155 25 (parallel [
            (set (reg:DI 126 [ _40 ])
                (plus:DI (reg:DI 124 [ _38 ])
                    (reg:DI 125 [ _39 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALHPBL.f":66 -1
     (nil))
(insn 155 154 156 25 (parallel [
            (set (reg:DI 127 [ _41 ])
                (plus:DI (reg:DI 126 [ _40 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALHPBL.f":66 -1
     (nil))
(insn 156 155 157 25 (set (reg/f:DI 199)
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f59e6829870 extra>)) "CALHPBL.f":66 -1
     (nil))
(insn 157 156 158 25 (parallel [
            (set (reg:DI 200)
                (plus:DI (reg:DI 127 [ _41 ])
                    (const_int 2311218 [0x234432])))
            (clobber (reg:CC 17 flags))
        ]) "CALHPBL.f":66 -1
     (nil))
(insn 158 157 159 25 (set (reg:SF 128 [ _42 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 200)
                    (const_int 4 [0x4]))
                (reg/f:DI 199)) [5 extra.zint S4 A32])) "CALHPBL.f":66 -1
     (nil))
(insn 159 158 160 25 (set (reg:SI 201)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [1 lmhk+0 S4 A32])) "CALHPBL.f":66 -1
     (nil))
(insn 160 159 161 25 (parallel [
            (set (reg:SI 129 [ _43 ])
                (plus:SI (reg:SI 201)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALHPBL.f":66 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -24 [0xffffffffffffffe8])) [1 lmhk+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 161 160 162 25 (set (reg:DI 130 [ _44 ])
        (sign_extend:DI (reg:SI 129 [ _43 ]))) "CALHPBL.f":66 -1
     (nil))
(insn 162 161 163 25 (parallel [
            (set (reg:DI 131 [ _45 ])
                (mult:DI (reg:DI 130 [ _44 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALHPBL.f":66 -1
     (nil))
(insn 163 162 164 25 (set (reg:SI 202)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALHPBL.f":66 -1
     (nil))
(insn 164 163 165 25 (set (reg:DI 132 [ _46 ])
        (sign_extend:DI (reg:SI 202))) "CALHPBL.f":66 -1
     (nil))
(insn 165 164 166 25 (parallel [
            (set (reg:DI 133 [ _47 ])
                (mult:DI (reg:DI 132 [ _46 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALHPBL.f":66 -1
     (nil))
(insn 166 165 167 25 (parallel [
            (set (reg:DI 134 [ _48 ])
                (plus:DI (reg:DI 131 [ _45 ])
                    (reg:DI 133 [ _47 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALHPBL.f":66 -1
     (nil))
(insn 167 166 168 25 (set (reg:SI 203)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALHPBL.f":66 -1
     (nil))
(insn 168 167 169 25 (set (reg:DI 135 [ _49 ])
        (sign_extend:DI (reg:SI 203))) "CALHPBL.f":66 -1
     (nil))
(insn 169 168 170 25 (parallel [
            (set (reg:DI 136 [ _50 ])
                (plus:DI (reg:DI 134 [ _48 ])
                    (reg:DI 135 [ _49 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALHPBL.f":66 -1
     (nil))
(insn 170 169 171 25 (parallel [
            (set (reg:DI 137 [ _51 ])
                (plus:DI (reg:DI 136 [ _50 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALHPBL.f":66 -1
     (nil))
(insn 171 170 172 25 (set (reg/f:DI 204)
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f59e6829870 extra>)) "CALHPBL.f":66 -1
     (nil))
(insn 172 171 173 25 (parallel [
            (set (reg:DI 205)
                (plus:DI (reg:DI 137 [ _51 ])
                    (const_int 2311218 [0x234432])))
            (clobber (reg:CC 17 flags))
        ]) "CALHPBL.f":66 -1
     (nil))
(insn 173 172 174 25 (set (reg:SF 138 [ _52 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 205)
                    (const_int 4 [0x4]))
                (reg/f:DI 204)) [5 extra.zint S4 A32])) "CALHPBL.f":66 -1
     (nil))
(insn 174 173 175 25 (set (reg:SI 206)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALHPBL.f":66 -1
     (nil))
(insn 175 174 176 25 (set (reg:DI 139 [ _53 ])
        (sign_extend:DI (reg:SI 206))) "CALHPBL.f":66 -1
     (nil))
(insn 176 175 177 25 (parallel [
            (set (reg:DI 140 [ _54 ])
                (mult:DI (reg:DI 139 [ _53 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALHPBL.f":66 -1
     (nil))
(insn 177 176 178 25 (set (reg:SI 207)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALHPBL.f":66 -1
     (nil))
(insn 178 177 179 25 (set (reg:DI 141 [ _55 ])
        (sign_extend:DI (reg:SI 207))) "CALHPBL.f":66 -1
     (nil))
(insn 179 178 180 25 (parallel [
            (set (reg:DI 142 [ _56 ])
                (plus:DI (reg:DI 140 [ _54 ])
                    (reg:DI 141 [ _55 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALHPBL.f":66 -1
     (nil))
(insn 180 179 181 25 (parallel [
            (set (reg:DI 143 [ _57 ])
                (plus:DI (reg:DI 142 [ _56 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALHPBL.f":66 -1
     (nil))
(insn 181 180 182 25 (set (reg:SF 144 [ _58 ])
        (minus:SF (reg:SF 128 [ _42 ])
            (reg:SF 138 [ _52 ]))) "CALHPBL.f":66 -1
     (nil))
(insn 182 181 183 25 (set (reg/f:DI 208)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [2 hpbl+0 S8 A64])) "CALHPBL.f":66 -1
     (nil))
(insn 183 182 184 25 (set (mem:SF (plus:DI (mult:DI (reg:DI 143 [ _57 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 208)) [5 *hpbl_100(D) S4 A32])
        (reg:SF 144 [ _58 ])) "CALHPBL.f":66 -1
     (nil))
(insn 184 183 185 25 (set (reg:SF 158 [ M.0_80 ])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0  S4 A32])) "CALHPBL.f":67 -1
     (expr_list:REG_EQUAL (const_double:SF 3.0e+2 [0x0.96p+9])
        (nil)))
(insn 185 184 186 25 (set (reg:SI 209)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALHPBL.f":67 -1
     (nil))
(insn 186 185 187 25 (set (reg:DI 145 [ _59 ])
        (sign_extend:DI (reg:SI 209))) "CALHPBL.f":67 -1
     (nil))
(insn 187 186 188 25 (parallel [
            (set (reg:DI 146 [ _60 ])
                (mult:DI (reg:DI 145 [ _59 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALHPBL.f":67 -1
     (nil))
(insn 188 187 189 25 (set (reg:SI 210)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALHPBL.f":67 -1
     (nil))
(insn 189 188 190 25 (set (reg:DI 147 [ _61 ])
        (sign_extend:DI (reg:SI 210))) "CALHPBL.f":67 -1
     (nil))
(insn 190 189 191 25 (parallel [
            (set (reg:DI 148 [ _62 ])
                (plus:DI (reg:DI 146 [ _60 ])
                    (reg:DI 147 [ _61 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALHPBL.f":67 -1
     (nil))
(insn 191 190 192 25 (parallel [
            (set (reg:DI 149 [ _63 ])
                (plus:DI (reg:DI 148 [ _62 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALHPBL.f":67 -1
     (nil))
(insn 192 191 193 25 (set (reg/f:DI 211)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [2 hpbl+0 S8 A64])) "CALHPBL.f":67 -1
     (nil))
(insn 193 192 194 25 (set (reg:SF 164 [ _103 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 149 [ _63 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 211)) [5 *hpbl_100(D) S4 A32])) "CALHPBL.f":67 -1
     (nil))
(insn 194 193 195 25 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 164 [ _103 ])
            (reg:SF 158 [ M.0_80 ]))) "CALHPBL.f":67 -1
     (nil))
(insn 195 194 196 25 (set (reg:QI 212)
        (gt:QI (reg:CCFP 17 flags)
            (const_int 0 [0]))) "CALHPBL.f":67 -1
     (nil))
(insn 196 195 197 25 (set (reg:SI 150 [ _64 ])
        (zero_extend:SI (reg:QI 212))) "CALHPBL.f":67 -1
     (nil))
(insn 197 196 198 25 (set (reg:CCFP 17 flags)
        (unspec:CCFP [
                (compare:CCFP (reg:SF 158 [ M.0_80 ])
                    (reg:SF 158 [ M.0_80 ]))
            ] UNSPEC_NOTRAP)) "CALHPBL.f":67 -1
     (nil))
(insn 198 197 199 25 (set (reg:QI 213)
        (unordered:QI (reg:CCFP 17 flags)
            (const_int 0 [0]))) "CALHPBL.f":67 -1
     (nil))
(insn 199 198 200 25 (set (reg:SI 151 [ _65 ])
        (zero_extend:SI (reg:QI 213))) "CALHPBL.f":67 -1
     (nil))
(insn 200 199 201 25 (parallel [
            (set (reg:SI 152 [ _66 ])
                (ior:SI (reg:SI 150 [ _64 ])
                    (reg:SI 151 [ _65 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALHPBL.f":67 -1
     (nil))
(insn 201 200 202 25 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 152 [ _66 ])
            (const_int 0 [0]))) "CALHPBL.f":67 -1
     (nil))
(jump_insn 202 201 203 25 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 204)
            (pc))) "CALHPBL.f":67 -1
     (nil)
 -> 204)
;;  succ:       26 (FALLTHRU)
;;              27

;; basic block 26, loop depth 2, maybe hot
;;  prev block 25, next block 27, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       25 (FALLTHRU)
(note 203 202 4 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 4 203 204 26 (set (reg:SF 158 [ M.0_80 ])
        (reg:SF 164 [ _103 ])) "CALHPBL.f":67 -1
     (nil))
;;  succ:       27 (FALLTHRU)

;; basic block 27, loop depth 2, maybe hot
;;  prev block 26, next block 28, flags: (NEW, REACHABLE, RTL)
;;  pred:       25
;;              26 (FALLTHRU)
(code_label 204 4 205 27 13 (nil) [1 uses])
(note 205 204 206 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 206 205 207 27 (set (reg:SI 214)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALHPBL.f":67 -1
     (nil))
(insn 207 206 208 27 (set (reg:DI 153 [ _67 ])
        (sign_extend:DI (reg:SI 214))) "CALHPBL.f":67 -1
     (nil))
(insn 208 207 209 27 (parallel [
            (set (reg:DI 154 [ _68 ])
                (mult:DI (reg:DI 153 [ _67 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALHPBL.f":67 -1
     (nil))
(insn 209 208 210 27 (set (reg:SI 215)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALHPBL.f":67 -1
     (nil))
(insn 210 209 211 27 (set (reg:DI 155 [ _69 ])
        (sign_extend:DI (reg:SI 215))) "CALHPBL.f":67 -1
     (nil))
(insn 211 210 212 27 (parallel [
            (set (reg:DI 156 [ _70 ])
                (plus:DI (reg:DI 154 [ _68 ])
                    (reg:DI 155 [ _69 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALHPBL.f":67 -1
     (nil))
(insn 212 211 213 27 (parallel [
            (set (reg:DI 157 [ _71 ])
                (plus:DI (reg:DI 156 [ _70 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALHPBL.f":67 -1
     (nil))
(insn 213 212 214 27 (set (reg/f:DI 216)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [2 hpbl+0 S8 A64])) "CALHPBL.f":67 -1
     (nil))
(insn 214 213 215 27 (set (mem:SF (plus:DI (mult:DI (reg:DI 157 [ _71 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 216)) [5 *hpbl_100(D) S4 A32])
        (reg:SF 158 [ M.0_80 ])) "CALHPBL.f":67 -1
     (nil))
(insn 215 214 217 27 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALHPBL.f":41 -1
     (nil))
(jump_insn 217 215 218 27 (set (pc)
        (label_ref 216)) "CALHPBL.f":41 -1
     (nil)
 -> 216)
;;  succ:       6 (DFS_BACK)

(barrier 218 217 219)
;; basic block 28, loop depth 1, maybe hot
;;  prev block 27, next block 29, flags: (NEW, REACHABLE, RTL)
;;  pred:       6
(code_label 219 218 220 28 3 (nil) [1 uses])
(note 220 219 221 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 221 220 223 28 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALHPBL.f":40 -1
     (nil))
(jump_insn 223 221 224 28 (set (pc)
        (label_ref 222)) "CALHPBL.f":40 -1
     (nil)
 -> 222)
;;  succ:       4 (DFS_BACK)

(barrier 224 223 225)
;; basic block 29, loop depth 0, maybe hot
;;  prev block 28, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       4
(code_label 225 224 226 29 2 (nil) [1 uses])
(note 226 225 240 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 240 226 0 29 (const_int 0 [0]) "CALHPBL.f":71 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)

