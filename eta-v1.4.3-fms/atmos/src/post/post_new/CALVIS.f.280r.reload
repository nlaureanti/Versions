
;; Function calvis (calvis_, funcdef_no=0, decl_uid=3776, cgraph_uid=0, symbol_order=0)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=208, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 20 to 7 (offset=176, prev_offset=0)
Can eliminate 20 to 6 (offset=-16, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 3:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 4:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 5:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 6:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 7:  (0) m  (1) re {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 12:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 13:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 14:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 15:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 16:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 17:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 18:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 19:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 20:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 21:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 22:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 23:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 24:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 25:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 26:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 27:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 28:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 29:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 30:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 31:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 32:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 33:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 34:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 35:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 36:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 37:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 38:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 39:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 40:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 41:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 42:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 44:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 45:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 46:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 47:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 50:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 52:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 53:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 54:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 55:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 58:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 59:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 60:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 61:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 62:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 63
	 Choosing alt 0 in insn 63:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 64:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 65:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 66:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 67:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 68:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 69:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 70:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 71:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 72
	 Choosing alt 0 in insn 72:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 73:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 74:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 75:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 76
	 Choosing alt 1 in insn 76:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 77:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 78:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 79:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 80:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 81:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 82:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 83
	 Choosing alt 0 in insn 83:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 84:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 85:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 86:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 87:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 88:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 89:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 90:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 91:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 92
	 Choosing alt 0 in insn 92:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 93:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 94:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 95:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 96
	 Choosing alt 1 in insn 96:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 97:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 98:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 99:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 100:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 101:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 102:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 103
	 Choosing alt 0 in insn 103:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 104:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 105:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 106:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 107:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 108:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 109:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 110:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 111:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 112:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 113
	 Choosing alt 0 in insn 113:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 114:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 115:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 116:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 117:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 118:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 119:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 120:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 121:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 122:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 123
	 Choosing alt 0 in insn 123:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 124:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 125:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 126:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 127:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 128:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 129:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 130:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 131:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 132:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 133
	 Choosing alt 0 in insn 133:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 134:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 135:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 136:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 137:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 138:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 139:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 140:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 141:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 142:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 143
	 Choosing alt 0 in insn 143:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 144:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 145:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 146:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 147:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 148:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 149:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 150:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 151:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 152
	 Choosing alt 0 in insn 152:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 153:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 154:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 155:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 156:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 157:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 158:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 159
	 Choosing alt 1 in insn 159:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 161:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 162:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 163:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 164:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 165:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 166:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 167:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 168
	 Choosing alt 0 in insn 168:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 169:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 170:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 171:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 172:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 173:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 174
	 Choosing alt 1 in insn 174:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 176:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 177:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 178:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 179:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 180:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 181:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 182:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 183
	 Choosing alt 0 in insn 183:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 184:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 185:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 186:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 187:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 188
	 Choosing alt 1 in insn 188:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=2,overall=6,losers=1,rld_nregs=1
	 Choosing alt 2 in insn 190:  (0) x  (1) 0  (2) xm {*fop_sf_1}
      Creating newreg=299 from oldreg=161, assigning class SSE_REGS to r299
  190: r299:SF=r299:SF/[frame:DI-0x6c]
      REG_DEAD r161:SF
    Inserting insn reload before:
  310: r299:SF=r161:SF
    Inserting insn reload after:
  311: r162:SF=r299:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 191:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 192:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 194:  (0) x  (1) 0  (2) xm {*fop_sf_1}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 195:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 196:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 197:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 199:  (0) x  (1) 0  (2) xm {*fop_sf_1}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 200
	 Choosing alt 1 in insn 200:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 201:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 202:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=6,losers=1,rld_nregs=1
	 Choosing alt 2 in insn 203:  (0) x  (1) 0  (2) xm {*fop_sf_1}
      Creating newreg=300 from oldreg=273, assigning class SSE_REGS to r300
  203: r300:SF=r300:SF/[frame:DI-0x70]
      REG_DEAD r273:SF
    Inserting insn reload before:
  312: r300:SF=r273:SF
    Inserting insn reload after:
  313: r170:SF=r300:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 204:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 205
	 Choosing alt 1 in insn 205:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 206:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 207:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=6,losers=1,rld_nregs=1
	 Choosing alt 2 in insn 208:  (0) x  (1) 0  (2) xm {*fop_sf_1}
      Creating newreg=301 from oldreg=276, assigning class SSE_REGS to r301
  208: r301:SF=r301:SF/[frame:DI-0x70]
      REG_DEAD r276:SF
    Inserting insn reload before:
  314: r301:SF=r276:SF
    Inserting insn reload after:
  315: r171:SF=r301:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 209:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 210
	 Choosing alt 1 in insn 210:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 211:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 212:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=6,losers=1,rld_nregs=1
	 Choosing alt 2 in insn 213:  (0) x  (1) 0  (2) xm {*fop_sf_1}
      Creating newreg=302 from oldreg=279, assigning class SSE_REGS to r302
  213: r302:SF=r302:SF/[frame:DI-0x70]
      REG_DEAD r279:SF
    Inserting insn reload before:
  316: r302:SF=r279:SF
    Inserting insn reload after:
  317: r172:SF=r302:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 214:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 215
	 Choosing alt 1 in insn 215:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 216:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 217:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=6,losers=1,rld_nregs=1
	 Choosing alt 2 in insn 218:  (0) x  (1) 0  (2) xm {*fop_sf_1}
      Creating newreg=303 from oldreg=282, assigning class SSE_REGS to r303
  218: r303:SF=r303:SF/[frame:DI-0x70]
      REG_DEAD r282:SF
    Inserting insn reload before:
  318: r303:SF=r282:SF
    Inserting insn reload after:
  319: r173:SF=r303:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 219:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 220
	 Choosing alt 1 in insn 220:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 221:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 222:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=608,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=611,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=613,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Non pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=616,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=6,overall=16,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
          alt=7,overall=7,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=10,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=9,overall=613,losers=1 -- refuse
            Staticly defined alt reject+=6
            alt=10: Bad operand -- refuse
            Staticly defined alt reject+=600
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=11,overall=1208,losers=1 -- refuse
            Staticly defined alt reject+=600
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=12,overall=1208,losers=1 -- refuse
            Staticly defined alt reject+=600
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=1211,losers=1 -- refuse
            Staticly defined alt reject+=600
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=14,overall=1207,losers=1 -- refuse
            Staticly defined alt reject+=600
            alt=15: Bad operand -- refuse
	 Choosing alt 7 in insn 223:  (0) v  (1) m {*movsf_internal}
      Creating newreg=304 from oldreg=200, assigning class ALL_SSE_REGS to r304
  223: r304:SF=[frame:DI-0x80]
    Inserting insn reload after:
  320: r200:SF=r304:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1221,losers=3,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=614,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=3,overall=1219,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non pseudo reload: reject++
            1 Non-prefered reload: reject+=600
          alt=4,overall=613,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=7,overall=616,losers=2,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=8,overall=2,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 320:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=608,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=611,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=613,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Non pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=616,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=6,overall=16,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
          alt=7,overall=7,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=10,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=9,overall=613,losers=1 -- refuse
            Staticly defined alt reject+=6
            alt=10: Bad operand -- refuse
            Staticly defined alt reject+=600
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=11,overall=1208,losers=1 -- refuse
            Staticly defined alt reject+=600
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=12,overall=1208,losers=1 -- refuse
            Staticly defined alt reject+=600
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=1211,losers=1 -- refuse
            Staticly defined alt reject+=600
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=14,overall=1207,losers=1 -- refuse
            Staticly defined alt reject+=600
            alt=15: Bad operand -- refuse
	 Choosing alt 7 in insn 224:  (0) v  (1) m {*movsf_internal}
      Creating newreg=305 from oldreg=201, assigning class ALL_SSE_REGS to r305
  224: r305:SF=[frame:DI-0x74]
    Inserting insn reload after:
  321: r201:SF=r305:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1221,losers=3,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=614,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=3,overall=1219,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non pseudo reload: reject++
            1 Non-prefered reload: reject+=600
          alt=4,overall=613,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=7,overall=616,losers=2,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=8,overall=2,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 321:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=608,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=611,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=613,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Non pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=616,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=6,overall=16,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
          alt=7,overall=7,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=10,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=9,overall=613,losers=1 -- refuse
            Staticly defined alt reject+=6
            alt=10: Bad operand -- refuse
            Staticly defined alt reject+=600
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=11,overall=1208,losers=1 -- refuse
            Staticly defined alt reject+=600
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=12,overall=1208,losers=1 -- refuse
            Staticly defined alt reject+=600
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=1211,losers=1 -- refuse
            Staticly defined alt reject+=600
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=14,overall=1207,losers=1 -- refuse
            Staticly defined alt reject+=600
            alt=15: Bad operand -- refuse
	 Choosing alt 7 in insn 225:  (0) v  (1) m {*movsf_internal}
      Creating newreg=306 from oldreg=202, assigning class ALL_SSE_REGS to r306
  225: r306:SF=[frame:DI-0x78]
    Inserting insn reload after:
  322: r202:SF=r306:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1221,losers=3,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=614,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=3,overall=1219,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non pseudo reload: reject++
            1 Non-prefered reload: reject+=600
          alt=4,overall=613,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=7,overall=616,losers=2,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=8,overall=2,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 322:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 226:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 229:  (1) rBwBz {*call_value}
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
          alt=1,overall=8,losers=1,rld_nregs=2
            0 Non input pseudo reload: reject++
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=18,losers=2 -- refuse
	 Choosing alt 1 in insn 231:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=307 from oldreg=174, assigning class SSE_REGS to r307
  231: r307:SF=r307:SF*[frame:DI-0x2c]
      REG_DEAD r174:SF
    Inserting insn reload before:
  323: r307:SF=r174:SF
    Inserting insn reload after:
  324: r175:SF=r307:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1221,losers=3,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=614,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=3,overall=1219,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non pseudo reload: reject++
            1 Non-prefered reload: reject+=600
          alt=4,overall=613,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=7,overall=616,losers=2,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=8,overall=2,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 324:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 232:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=617,losers=2,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            alt=1,overall=622,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=621,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=4,overall=627,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=606,losers=1,rld_nregs=1
            1 Non pseudo reload: reject++
          alt=7,overall=1,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 234:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 235:  (1) rBwBz {*call_value}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 237:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Non input pseudo reload: reject++
          alt=1,overall=13,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            2 Non pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=2
  Commutative operand exchange in insn 238
	 Choosing alt 1 in insn 238:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=308 from oldreg=177, assigning class SSE_REGS to r308
      Creating newreg=309 from oldreg=175, assigning class SSE_REGS to r309
      Making reload reg 309 for reg 175 optional
  238: r308:SF=r308:SF+r309:SF
      REG_DEAD r177:SF
      REG_DEAD r175:SF
    Inserting insn reload before:
  325: r308:SF=r177:SF
  327: r309:SF=r175:SF
    Inserting insn reload after:
  326: r178:SF=r308:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1221,losers=3,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=614,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=3,overall=1219,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non pseudo reload: reject++
            1 Non-prefered reload: reject+=600
          alt=4,overall=613,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=7,overall=616,losers=2,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=8,overall=2,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 326:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=615,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            alt=1,overall=617,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=4,overall=622,losers=2 -- refuse
            0 Non pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=7,overall=2,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 327:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 239:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=617,losers=2,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            alt=1,overall=622,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=621,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=4,overall=627,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=606,losers=1,rld_nregs=1
            1 Non pseudo reload: reject++
          alt=7,overall=1,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 241:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 242:  (1) rBwBz {*call_value}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 244:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Non input pseudo reload: reject++
          alt=1,overall=13,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            2 Non pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=2
  Commutative operand exchange in insn 245
	 Choosing alt 1 in insn 245:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=310 from oldreg=180, assigning class SSE_REGS to r310
      Creating newreg=311 from oldreg=178, assigning class SSE_REGS to r311
      Making reload reg 311 for reg 178 optional
  245: r310:SF=r310:SF+r311:SF
      REG_DEAD r180:SF
      REG_DEAD r178:SF
    Inserting insn reload before:
  328: r310:SF=r180:SF
  330: r311:SF=r178:SF
    Inserting insn reload after:
  329: r181:SF=r310:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1221,losers=3,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=614,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=3,overall=1219,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non pseudo reload: reject++
            1 Non-prefered reload: reject+=600
          alt=4,overall=613,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=7,overall=616,losers=2,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=8,overall=2,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 329:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=615,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            alt=1,overall=617,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=4,overall=622,losers=2 -- refuse
            0 Non pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=7,overall=2,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 330:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 246:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=617,losers=2,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            alt=1,overall=622,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=621,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=4,overall=627,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=606,losers=1,rld_nregs=1
            1 Non pseudo reload: reject++
          alt=7,overall=1,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 248:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 249:  (1) rBwBz {*call_value}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 251:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Non pseudo reload: reject++
            alt=1,overall=7,losers=1 -- refuse
	 Choosing alt 1 in insn 252:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=312 from oldreg=181, assigning class SSE_REGS to r312
  252: r312:SF=r312:SF+r183:SF
      REG_DEAD r183:SF
      REG_DEAD r181:SF
    Inserting insn reload before:
  331: r312:SF=r181:SF
    Inserting insn reload after:
  332: r184:SF=r312:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=615,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            alt=1,overall=617,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=4,overall=622,losers=2 -- refuse
            0 Non pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=7,overall=2,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 331:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 253:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 254
	 Choosing alt 1 in insn 254:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 255:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 256:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 257:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 258:  (0) x  (1) 0  (2) xm {*fop_sf_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 259:  (0) v  (1) vm {*cmpisf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 260:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 261:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 262:  (0) v  (1) vm {*cmpiusf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 263:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 264:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 265
	 Choosing alt 0 in insn 265:  (0) =r  (1) %0  (2) rme {*iorsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 266:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 271:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 272:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 273:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 274:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 275:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 276
	 Choosing alt 0 in insn 276:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 277:  (0) r  (1) r  (2) le {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 278:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 279:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 280:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 281:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 282:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 288:  (0) rm  (1) 0  (2) re {*addsi_1}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #1: **********

EBB 2
EBB 3 4
EBB 5 6 7
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=313 from oldreg=181, assigning class SSE_REGS to inheritance r313
    Original reg change 181->313 (bb6):
  329: r313:SF=r310:SF
    Add original<-inheritance after:
  333: r181:SF=r313:SF

    Inheritance reuse change 181->313 (bb6):
  331: r312:SF=r313:SF
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=314 from oldreg=178, assigning class SSE_REGS to inheritance r314
    Original reg change 178->314 (bb6):
  326: r314:SF=r308:SF
    Add original<-inheritance after:
  334: r178:SF=r314:SF

    Inheritance reuse change 178->314 (bb6):
  330: r311:SF=r314:SF
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=315 from oldreg=175, assigning class SSE_REGS to inheritance r315
    Original reg change 175->315 (bb6):
  324: r315:SF=r307:SF
    Add original<-inheritance after:
  335: r175:SF=r315:SF

    Inheritance reuse change 175->315 (bb6):
  327: r309:SF=r315:SF
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
    Use smallest class of ALL_SSE_REGS and SSE_REGS
      Creating newreg=316 from oldreg=202, assigning class ALL_SSE_REGS to inheritance r316
    Original reg change 202->316 (bb6):
  322: r316:SF=r306:SF
    Add original<-inheritance after:
  336: r202:SF=r316:SF

    Inheritance reuse change 202->316 (bb6):
  248: xmm0:SF=r316:SF
      REG_DEAD r316:SF
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
    Use smallest class of ALL_SSE_REGS and SSE_REGS
      Creating newreg=317 from oldreg=201, assigning class ALL_SSE_REGS to inheritance r317
    Original reg change 201->317 (bb6):
  321: r317:SF=r305:SF
    Add original<-inheritance after:
  337: r201:SF=r317:SF

    Inheritance reuse change 201->317 (bb6):
  241: xmm0:SF=r317:SF
      REG_DEAD r317:SF
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
    Use smallest class of ALL_SSE_REGS and SSE_REGS
      Creating newreg=318 from oldreg=200, assigning class ALL_SSE_REGS to inheritance r318
    Original reg change 200->318 (bb6):
  320: r318:SF=r304:SF
    Add original<-inheritance after:
  338: r200:SF=r318:SF

    Inheritance reuse change 200->318 (bb6):
  234: xmm0:SF=r318:SF
      REG_DEAD r318:SF
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
	    Removing dead insn:
   333: r181:SF=r313:SF
deleting insn with uid = 333.
	    Removing dead insn:
   334: r178:SF=r314:SF
deleting insn with uid = 334.
	    Removing dead insn:
   335: r175:SF=r315:SF
deleting insn with uid = 335.
	    Removing dead insn:
   336: r202:SF=r316:SF
deleting insn with uid = 336.
	    Removing dead insn:
   337: r201:SF=r317:SF
deleting insn with uid = 337.
	    Removing dead insn:
   338: r200:SF=r318:SF
deleting insn with uid = 338.
EBB 8
EBB 12
EBB 9
EBB 11
EBB 10

********** Pseudo live ranges #1: **********

  BB 10
   Insn 298: point = 0, n_alt = -1
  BB 11
   Insn 305: point = 0, n_alt = -1
  BB 3
   Insn 48: point = 0, n_alt = -1
   Insn 47: point = 0, n_alt = 0
   Insn 46: point = 1, n_alt = 0
   Insn 45: point = 3, n_alt = 0
   Insn 44: point = 4, n_alt = 0
  BB 9
   Insn 301: point = 5, n_alt = -1
   Insn 288: point = 5, n_alt = 1
  BB 12
   Insn 308: point = 6, n_alt = -1
  BB 5
   Insn 56: point = 7, n_alt = -1
   Insn 55: point = 7, n_alt = 0
   Insn 54: point = 8, n_alt = 0
   Insn 53: point = 10, n_alt = 0
   Insn 52: point = 11, n_alt = 0
  BB 8
   Insn 299: point = 12, n_alt = -1
   Insn 282: point = 12, n_alt = 1
   Insn 281: point = 12, n_alt = 8
   Insn 280: point = 13, n_alt = 3
   Insn 279: point = 14, n_alt = 1
   Insn 278: point = 16, n_alt = 7
   Insn 277: point = 17, n_alt = 3
   Insn 276: point = 19, n_alt = 0
   Insn 275: point = 21, n_alt = 0
   Insn 274: point = 23, n_alt = 0
   Insn 273: point = 24, n_alt = 0
   Insn 272: point = 26, n_alt = 0
   Insn 271: point = 28, n_alt = 0
  BB 7
   Insn 9: point = 30, n_alt = -2
  BB 6
   Insn 267: point = 33, n_alt = -1
   Insn 266: point = 33, n_alt = 0
   Insn 265: point = 34, n_alt = 0
   Insn 264: point = 36, n_alt = 0
   Insn 263: point = 38, n_alt = 0
   Insn 262: point = 39, n_alt = 1
   Insn 261: point = 39, n_alt = 0
   Insn 260: point = 41, n_alt = 0
   Insn 259: point = 42, n_alt = 1
   Insn 258: point = 42, n_alt = 2
   Insn 257: point = 44, n_alt = 7
   Insn 256: point = 45, n_alt = 7
   Insn 255: point = 46, n_alt = 8
   Insn 254: point = 47, n_alt = 1
   Insn 253: point = 49, n_alt = 7
   Insn 332: point = 50, n_alt = -2
	Hard reg 22 is preferable by r312 with profit 1000
   Insn 252: point = 52, n_alt = 1
   Insn 331: point = 53, n_alt = 7
	   Creating copy r312<-r313@1000
   Insn 251: point = 55, n_alt = 1
   Insn 250: point = 57, n_alt = -2
   Insn 249: point = 58, n_alt = 0
   Insn 248: point = 58, n_alt = 7
	Hard reg 21 is preferable by r316 with profit 1000
   Insn 247: point = 59, n_alt = -2
   Insn 246: point = 60, n_alt = 7
   Insn 329: point = 61, n_alt = 8
	   Creating copy r310->r313@1000
   Insn 245: point = 63, n_alt = 1
   Insn 330: point = 64, n_alt = 7
	   Creating copy r311<-r314@1000
   Insn 328: point = 66, n_alt = -2
	Hard reg 21 is preferable by r310 with profit 1000
   Insn 244: point = 68, n_alt = 1
   Insn 243: point = 70, n_alt = -2
   Insn 242: point = 71, n_alt = 0
   Insn 241: point = 71, n_alt = 7
	Hard reg 21 is preferable by r317 with profit 1000
   Insn 240: point = 72, n_alt = -2
   Insn 239: point = 73, n_alt = 7
   Insn 326: point = 74, n_alt = 8
	   Creating copy r308->r314@1000
   Insn 238: point = 76, n_alt = 1
   Insn 327: point = 77, n_alt = 7
	   Creating copy r309<-r315@1000
   Insn 325: point = 79, n_alt = -2
	Hard reg 21 is preferable by r308 with profit 1000
   Insn 237: point = 81, n_alt = 1
   Insn 236: point = 83, n_alt = -2
   Insn 235: point = 84, n_alt = 0
   Insn 234: point = 84, n_alt = 7
	Hard reg 21 is preferable by r318 with profit 1000
   Insn 233: point = 85, n_alt = -2
   Insn 232: point = 86, n_alt = 7
   Insn 324: point = 87, n_alt = 8
	   Creating copy r307->r315@1000
   Insn 231: point = 89, n_alt = 1
   Insn 323: point = 89, n_alt = -2
	Hard reg 21 is preferable by r307 with profit 1000
   Insn 230: point = 91, n_alt = -2
   Insn 229: point = 92, n_alt = 0
   Insn 228: point = 92, n_alt = -2
   Insn 227: point = 93, n_alt = -2
   Insn 226: point = 94, n_alt = 7
   Insn 322: point = 95, n_alt = 8
	   Creating copy r306->r316@1000
   Insn 225: point = 97, n_alt = 7
   Insn 321: point = 98, n_alt = 8
	   Creating copy r305->r317@1000
   Insn 224: point = 100, n_alt = 7
   Insn 320: point = 101, n_alt = 8
	   Creating copy r304->r318@1000
   Insn 223: point = 103, n_alt = 7
   Insn 222: point = 104, n_alt = 7
   Insn 221: point = 105, n_alt = 8
   Insn 220: point = 106, n_alt = 1
   Insn 219: point = 108, n_alt = 7
   Insn 319: point = 109, n_alt = -2
	Hard reg 22 is preferable by r303 with profit 1000
   Insn 218: point = 111, n_alt = 2
   Insn 318: point = 111, n_alt = -2
	Hard reg 22 is preferable by r303 with profit 1000
	Hard reg 21 is preferable by r303 with profit 1000
   Insn 217: point = 113, n_alt = 7
   Insn 216: point = 114, n_alt = 8
   Insn 215: point = 115, n_alt = 1
   Insn 214: point = 117, n_alt = 7
   Insn 317: point = 118, n_alt = -2
	Hard reg 22 is preferable by r302 with profit 1000
   Insn 213: point = 120, n_alt = 2
   Insn 316: point = 120, n_alt = -2
	Hard reg 22 is preferable by r302 with profit 1000
	Hard reg 21 is preferable by r302 with profit 1000
   Insn 212: point = 122, n_alt = 7
   Insn 211: point = 123, n_alt = 8
   Insn 210: point = 124, n_alt = 1
   Insn 209: point = 126, n_alt = 7
   Insn 315: point = 127, n_alt = -2
	Hard reg 22 is preferable by r301 with profit 1000
   Insn 208: point = 129, n_alt = 2
   Insn 314: point = 129, n_alt = -2
	Hard reg 22 is preferable by r301 with profit 1000
	Hard reg 21 is preferable by r301 with profit 1000
   Insn 207: point = 131, n_alt = 7
   Insn 206: point = 132, n_alt = 8
   Insn 205: point = 133, n_alt = 1
   Insn 204: point = 135, n_alt = 7
   Insn 313: point = 136, n_alt = -2
	Hard reg 22 is preferable by r300 with profit 1000
   Insn 203: point = 138, n_alt = 2
   Insn 312: point = 138, n_alt = -2
	Hard reg 22 is preferable by r300 with profit 1000
	Hard reg 21 is preferable by r300 with profit 1000
   Insn 202: point = 140, n_alt = 7
   Insn 201: point = 141, n_alt = 8
   Insn 200: point = 142, n_alt = 1
   Insn 199: point = 144, n_alt = 2
   Insn 198: point = 146, n_alt = -2
   Insn 197: point = 148, n_alt = 1
   Insn 196: point = 150, n_alt = 7
   Insn 195: point = 151, n_alt = 1
   Insn 194: point = 153, n_alt = 2
   Insn 193: point = 155, n_alt = -2
   Insn 192: point = 157, n_alt = 1
   Insn 191: point = 159, n_alt = 7
   Insn 311: point = 160, n_alt = -2
	Hard reg 22 is preferable by r299 with profit 1000
   Insn 190: point = 162, n_alt = 2
   Insn 310: point = 162, n_alt = -2
	Hard reg 22 is preferable by r299 with profit 1000
	Hard reg 21 is preferable by r299 with profit 1000
   Insn 189: point = 164, n_alt = -2
   Insn 188: point = 166, n_alt = 1
   Insn 187: point = 168, n_alt = 7
   Insn 186: point = 169, n_alt = 7
   Insn 185: point = 171, n_alt = 3
   Insn 184: point = 172, n_alt = 3
   Insn 183: point = 174, n_alt = 0
   Insn 182: point = 176, n_alt = 0
   Insn 181: point = 178, n_alt = 0
   Insn 180: point = 179, n_alt = 0
   Insn 179: point = 181, n_alt = 0
   Insn 178: point = 183, n_alt = 0
   Insn 177: point = 184, n_alt = 8
   Insn 176: point = 185, n_alt = 2
   Insn 175: point = 187, n_alt = -2
   Insn 174: point = 189, n_alt = 1
   Insn 173: point = 191, n_alt = 7
   Insn 172: point = 192, n_alt = 7
   Insn 171: point = 193, n_alt = 7
   Insn 170: point = 195, n_alt = 3
   Insn 169: point = 196, n_alt = 3
   Insn 168: point = 198, n_alt = 0
   Insn 167: point = 200, n_alt = 0
   Insn 166: point = 202, n_alt = 0
   Insn 165: point = 203, n_alt = 0
   Insn 164: point = 205, n_alt = 0
   Insn 163: point = 207, n_alt = 0
   Insn 162: point = 208, n_alt = 8
   Insn 161: point = 209, n_alt = 1
   Insn 160: point = 211, n_alt = -2
   Insn 159: point = 213, n_alt = 1
   Insn 158: point = 215, n_alt = 7
   Insn 157: point = 216, n_alt = 1
   Insn 156: point = 218, n_alt = 7
   Insn 155: point = 219, n_alt = 7
   Insn 154: point = 221, n_alt = 3
   Insn 153: point = 222, n_alt = 3
   Insn 152: point = 224, n_alt = 0
   Insn 151: point = 226, n_alt = 0
   Insn 150: point = 228, n_alt = 0
   Insn 149: point = 229, n_alt = 0
   Insn 148: point = 231, n_alt = 0
   Insn 147: point = 233, n_alt = 0
   Insn 146: point = 234, n_alt = 7
   Insn 145: point = 236, n_alt = 3
   Insn 144: point = 237, n_alt = 3
   Insn 143: point = 239, n_alt = 0
   Insn 142: point = 241, n_alt = 0
   Insn 141: point = 243, n_alt = 0
   Insn 140: point = 244, n_alt = 0
   Insn 139: point = 246, n_alt = 0
   Insn 138: point = 248, n_alt = 0
   Insn 137: point = 249, n_alt = 8
   Insn 136: point = 250, n_alt = 7
   Insn 135: point = 252, n_alt = 3
   Insn 134: point = 253, n_alt = 3
   Insn 133: point = 255, n_alt = 0
   Insn 132: point = 257, n_alt = 0
   Insn 131: point = 259, n_alt = 0
   Insn 130: point = 260, n_alt = 0
   Insn 129: point = 262, n_alt = 0
   Insn 128: point = 264, n_alt = 0
   Insn 127: point = 265, n_alt = 8
   Insn 126: point = 266, n_alt = 7
   Insn 125: point = 268, n_alt = 3
   Insn 124: point = 269, n_alt = 3
   Insn 123: point = 271, n_alt = 0
   Insn 122: point = 273, n_alt = 0
   Insn 121: point = 275, n_alt = 0
   Insn 120: point = 276, n_alt = 0
   Insn 119: point = 278, n_alt = 0
   Insn 118: point = 280, n_alt = 0
   Insn 117: point = 281, n_alt = 8
   Insn 116: point = 282, n_alt = 7
   Insn 115: point = 284, n_alt = 3
   Insn 114: point = 285, n_alt = 3
   Insn 113: point = 287, n_alt = 0
   Insn 112: point = 289, n_alt = 0
   Insn 111: point = 291, n_alt = 0
   Insn 110: point = 292, n_alt = 0
   Insn 109: point = 294, n_alt = 0
   Insn 108: point = 296, n_alt = 0
   Insn 107: point = 297, n_alt = 8
   Insn 106: point = 298, n_alt = 7
   Insn 105: point = 300, n_alt = 3
   Insn 104: point = 301, n_alt = 3
   Insn 103: point = 303, n_alt = 0
   Insn 102: point = 305, n_alt = 0
   Insn 101: point = 307, n_alt = 0
   Insn 100: point = 308, n_alt = 0
   Insn 99: point = 310, n_alt = 0
   Insn 98: point = 312, n_alt = 0
   Insn 97: point = 313, n_alt = 8
   Insn 96: point = 314, n_alt = 1
   Insn 95: point = 316, n_alt = 7
   Insn 94: point = 318, n_alt = 3
   Insn 93: point = 319, n_alt = 3
   Insn 92: point = 321, n_alt = 0
   Insn 91: point = 323, n_alt = 0
   Insn 90: point = 325, n_alt = 0
   Insn 89: point = 326, n_alt = 0
   Insn 88: point = 328, n_alt = 0
   Insn 87: point = 330, n_alt = 0
   Insn 86: point = 331, n_alt = 7
   Insn 85: point = 333, n_alt = 3
   Insn 84: point = 334, n_alt = 3
   Insn 83: point = 336, n_alt = 0
   Insn 82: point = 338, n_alt = 0
   Insn 81: point = 340, n_alt = 0
   Insn 80: point = 341, n_alt = 0
   Insn 79: point = 343, n_alt = 0
   Insn 78: point = 345, n_alt = 0
   Insn 77: point = 346, n_alt = 8
   Insn 76: point = 347, n_alt = 1
   Insn 75: point = 349, n_alt = 7
   Insn 74: point = 351, n_alt = 3
   Insn 73: point = 352, n_alt = 3
   Insn 72: point = 354, n_alt = 0
   Insn 71: point = 356, n_alt = 0
   Insn 70: point = 358, n_alt = 0
   Insn 69: point = 359, n_alt = 0
   Insn 68: point = 361, n_alt = 0
   Insn 67: point = 363, n_alt = 0
   Insn 66: point = 364, n_alt = 7
   Insn 65: point = 366, n_alt = 3
   Insn 64: point = 367, n_alt = 3
   Insn 63: point = 369, n_alt = 0
   Insn 62: point = 371, n_alt = 0
   Insn 61: point = 373, n_alt = 0
   Insn 60: point = 374, n_alt = 0
   Insn 59: point = 376, n_alt = 0
   Insn 58: point = 378, n_alt = 0
  BB 4
   Insn 50: point = 380, n_alt = 1
  BB 2
   Insn 42: point = 381, n_alt = 1
   Insn 41: point = 382, n_alt = 0
   Insn 40: point = 383, n_alt = 0
   Insn 39: point = 384, n_alt = 8
   Insn 38: point = 385, n_alt = 7
   Insn 37: point = 386, n_alt = 8
   Insn 36: point = 387, n_alt = 7
   Insn 35: point = 388, n_alt = 8
   Insn 34: point = 389, n_alt = 7
   Insn 33: point = 390, n_alt = 8
   Insn 32: point = 391, n_alt = 7
   Insn 31: point = 392, n_alt = 8
   Insn 30: point = 393, n_alt = 7
   Insn 29: point = 394, n_alt = 8
   Insn 28: point = 395, n_alt = 7
   Insn 27: point = 396, n_alt = 8
   Insn 26: point = 397, n_alt = 7
   Insn 25: point = 398, n_alt = 8
   Insn 24: point = 399, n_alt = 7
   Insn 23: point = 400, n_alt = 8
   Insn 22: point = 401, n_alt = 7
   Insn 21: point = 402, n_alt = 8
   Insn 20: point = 403, n_alt = 7
   Insn 19: point = 404, n_alt = 8
   Insn 18: point = 405, n_alt = 7
   Insn 17: point = 406, n_alt = 8
   Insn 16: point = 407, n_alt = 2
   Insn 15: point = 409, n_alt = 7
   Insn 14: point = 410, n_alt = 7
   Insn 13: point = 411, n_alt = 8
   Insn 12: point = 412, n_alt = 7
   Insn 7: point = 413, n_alt = 5
   Insn 6: point = 413, n_alt = 5
   Insn 5: point = 413, n_alt = 5
   Insn 4: point = 413, n_alt = 5
   Insn 3: point = 413, n_alt = 5
   Insn 2: point = 413, n_alt = 5
 r87: [375..376]
 r88: [370..374]
 r89: [370..371]
 r90: [368..369]
 r91: [365..367]
 r92: [348..364]
 r93: [360..361]
 r94: [355..359]
 r95: [355..356]
 r96: [353..354]
 r97: [350..352]
 r98: [348..349]
 r99: [342..343]
 r100: [337..341]
 r101: [337..338]
 r102: [335..336]
 r103: [332..334]
 r104: [315..331]
 r105: [327..328]
 r106: [322..326]
 r107: [322..323]
 r108: [320..321]
 r109: [317..319]
 r110: [315..316]
 r111: [309..310]
 r112: [304..308]
 r113: [304..305]
 r114: [302..303]
 r115: [299..301]
 r116: [293..294]
 r117: [288..292]
 r118: [288..289]
 r119: [286..287]
 r120: [283..285]
 r121: [277..278]
 r122: [272..276]
 r123: [272..273]
 r124: [270..271]
 r125: [267..269]
 r126: [261..262]
 r127: [256..260]
 r128: [256..257]
 r129: [254..255]
 r130: [251..253]
 r131: [245..246]
 r132: [240..244]
 r133: [240..241]
 r134: [238..239]
 r135: [235..237]
 r136: [210..234]
 r137: [230..231]
 r138: [225..229]
 r139: [225..226]
 r140: [223..224]
 r141: [220..222]
 r142: [217..219]
 r143: [214..216]
 r144: [212..213]
 r145: [210..211]
 r146: [204..205]
 r147: [199..203]
 r148: [199..200]
 r149: [197..198]
 r150: [194..196]
 r151: [186..193]
 r152: [188..189]
 r153: [186..187]
 r154: [180..181]
 r155: [175..179]
 r156: [175..176]
 r157: [173..174]
 r158: [170..172]
 r159: [167..169]
 r160: [165..166]
 r161: [163..164]
 r162: [152..160]
 r163: [156..157]
 r164: [154..155]
 r165: [152..153]
 r166: [143..151]
 r167: [147..148]
 r168: [145..146]
 r169: [143..144]
 r170: [134..136]
 r171: [125..127]
 r172: [116..118]
 r173: [107..109]
 r174: [90..91]
 r176: [82..83]
 r177: [80..81]
 r179: [69..70]
 r180: [67..68]
 r182: [56..57]
 r183: [52..55]
 r184: [48..50]
 r185: [35..39]
 r186: [35..36]
 r187: [33..34]
 r188: [25..26]
 r189: [20..24]
 r190: [20..21]
 r191: [18..19]
 r192: [12..17]
 r193: [12..14]
 r194: [33..45] [15..30]
 r195: [381..383]
 r196: [0..382]
 r197: [0..1]
 r198: [7..8]
 r199: [92..104]
 r203: [31..42]
 r204: [411..412]
 r205: [406..407]
 r206: [408..410]
 r207: [408..409]
 r208: [404..405]
 r209: [402..403]
 r210: [400..401]
 r211: [398..399]
 r212: [396..397]
 r213: [394..395]
 r214: [392..393]
 r215: [390..391]
 r216: [388..389]
 r217: [386..387]
 r218: [384..385]
 r219: [2..3]
 r220: [9..10]
 r221: [377..378]
 r222: [372..373]
 r223: [365..366]
 r224: [362..363]
 r225: [357..358]
 r226: [350..351]
 r227: [346..347]
 r228: [344..345]
 r229: [339..340]
 r230: [332..333]
 r231: [329..330]
 r232: [324..325]
 r233: [317..318]
 r234: [313..314]
 r235: [311..312]
 r236: [306..307]
 r237: [299..300]
 r238: [297..298]
 r239: [295..296]
 r240: [290..291]
 r241: [283..284]
 r242: [281..282]
 r243: [279..280]
 r244: [274..275]
 r245: [267..268]
 r246: [265..266]
 r247: [263..264]
 r248: [258..259]
 r249: [251..252]
 r250: [249..250]
 r251: [247..248]
 r252: [242..243]
 r253: [235..236]
 r254: [232..233]
 r255: [227..228]
 r256: [220..221]
 r257: [217..218]
 r258: [214..215]
 r259: [208..209]
 r260: [206..207]
 r261: [201..202]
 r262: [194..195]
 r263: [190..192]
 r264: [190..191]
 r265: [184..185]
 r266: [182..183]
 r267: [177..178]
 r268: [170..171]
 r269: [167..168]
 r270: [158..159]
 r271: [149..150]
 r272: [141..142]
 r273: [139..140]
 r274: [132..133]
 r275: [134..135]
 r276: [130..131]
 r277: [123..124]
 r278: [125..126]
 r279: [121..122]
 r280: [114..115]
 r281: [116..117]
 r282: [112..113]
 r283: [105..106]
 r284: [107..108]
 r285: [93..94]
 r286: [85..86]
 r287: [72..73]
 r288: [59..60]
 r289: [46..47]
 r290: [48..49]
 r291: [43..44]
 r293: [40..41]
 r294: [37..38]
 r295: [27..28]
 r296: [22..23]
 r297: [15..16]
 r298: [12..13]
 r299: [161..162]
 r300: [137..138]
 r301: [128..129]
 r302: [119..120]
 r303: [110..111]
 r304: [102..103]
 r305: [99..100]
 r306: [96..97]
 r307: [88..89]
 r308: [75..79]
 r309: [76..77]
 r310: [62..66]
 r311: [63..64]
 r312: [51..53]
 r313: [54..61]
 r314: [65..74]
 r315: [78..87]
 r316: [58..95]
 r317: [71..98]
 r318: [84..101]
Compressing live ranges: from 413 to 342 - 82%
Ranges after the compression:
 r87: [308..309]
 r88: [304..307]
 r89: [304..305]
 r90: [302..303]
 r91: [300..301]
 r92: [286..299]
 r93: [296..297]
 r94: [292..295]
 r95: [292..293]
 r96: [290..291]
 r97: [288..289]
 r98: [286..287]
 r99: [280..281]
 r100: [276..279]
 r101: [276..277]
 r102: [274..275]
 r103: [272..273]
 r104: [258..271]
 r105: [268..269]
 r106: [264..267]
 r107: [264..265]
 r108: [262..263]
 r109: [260..261]
 r110: [258..259]
 r111: [252..253]
 r112: [248..251]
 r113: [248..249]
 r114: [246..247]
 r115: [244..245]
 r116: [238..239]
 r117: [234..237]
 r118: [234..235]
 r119: [232..233]
 r120: [230..231]
 r121: [224..225]
 r122: [220..223]
 r123: [220..221]
 r124: [218..219]
 r125: [216..217]
 r126: [210..211]
 r127: [206..209]
 r128: [206..207]
 r129: [204..205]
 r130: [202..203]
 r131: [196..197]
 r132: [192..195]
 r133: [192..193]
 r134: [190..191]
 r135: [188..189]
 r136: [168..187]
 r137: [184..185]
 r138: [180..183]
 r139: [180..181]
 r140: [178..179]
 r141: [176..177]
 r142: [174..175]
 r143: [172..173]
 r144: [170..171]
 r145: [168..169]
 r146: [162..163]
 r147: [158..161]
 r148: [158..159]
 r149: [156..157]
 r150: [154..155]
 r151: [148..153]
 r152: [150..151]
 r153: [148..149]
 r154: [142..143]
 r155: [138..141]
 r156: [138..139]
 r157: [136..137]
 r158: [134..135]
 r159: [132..133]
 r160: [130..131]
 r161: [128..129]
 r162: [118..125]
 r163: [122..123]
 r164: [120..121]
 r165: [118..119]
 r166: [110..117]
 r167: [114..115]
 r168: [112..113]
 r169: [110..111]
 r170: [102..103]
 r171: [94..95]
 r172: [86..87]
 r173: [78..79]
 r174: [66..67]
 r176: [60..61]
 r177: [58..59]
 r179: [50..51]
 r180: [48..49]
 r182: [40..41]
 r183: [36..39]
 r184: [34..35]
 r185: [24..27]
 r186: [24..25]
 r187: [22..23]
 r188: [18..19]
 r189: [14..17]
 r190: [14..15]
 r191: [12..13]
 r192: [8..11]
 r193: [8..9]
 r194: [10..31]
 r195: [312..313]
 r196: [0..313]
 r197: [0..1]
 r198: [4..5]
 r199: [68..75]
 r203: [22..29]
 r204: [340..341]
 r205: [336..337]
 r206: [338..339]
 r207: [338..339]
 r208: [334..335]
 r209: [332..333]
 r210: [330..331]
 r211: [328..329]
 r212: [326..327]
 r213: [324..325]
 r214: [322..323]
 r215: [320..321]
 r216: [318..319]
 r217: [316..317]
 r218: [314..315]
 r219: [2..3]
 r220: [6..7]
 r221: [310..311]
 r222: [306..307]
 r223: [300..301]
 r224: [298..299]
 r225: [294..295]
 r226: [288..289]
 r227: [284..285]
 r228: [282..283]
 r229: [278..279]
 r230: [272..273]
 r231: [270..271]
 r232: [266..267]
 r233: [260..261]
 r234: [256..257]
 r235: [254..255]
 r236: [250..251]
 r237: [244..245]
 r238: [242..243]
 r239: [240..241]
 r240: [236..237]
 r241: [230..231]
 r242: [228..229]
 r243: [226..227]
 r244: [222..223]
 r245: [216..217]
 r246: [214..215]
 r247: [212..213]
 r248: [208..209]
 r249: [202..203]
 r250: [200..201]
 r251: [198..199]
 r252: [194..195]
 r253: [188..189]
 r254: [186..187]
 r255: [182..183]
 r256: [176..177]
 r257: [174..175]
 r258: [172..173]
 r259: [166..167]
 r260: [164..165]
 r261: [160..161]
 r262: [154..155]
 r263: [152..153]
 r264: [152..153]
 r265: [146..147]
 r266: [144..145]
 r267: [140..141]
 r268: [134..135]
 r269: [132..133]
 r270: [124..125]
 r271: [116..117]
 r272: [108..109]
 r273: [106..107]
 r274: [100..101]
 r275: [102..103]
 r276: [98..99]
 r277: [92..93]
 r278: [94..95]
 r279: [90..91]
 r280: [84..85]
 r281: [86..87]
 r282: [82..83]
 r283: [76..77]
 r284: [78..79]
 r285: [68..69]
 r286: [62..63]
 r287: [52..53]
 r288: [42..43]
 r289: [32..33]
 r290: [34..35]
 r291: [30..31]
 r293: [28..29]
 r294: [26..27]
 r295: [20..21]
 r296: [16..17]
 r297: [10..11]
 r298: [8..9]
 r299: [126..127]
 r300: [104..105]
 r301: [96..97]
 r302: [88..89]
 r303: [80..81]
 r304: [74..75]
 r305: [72..73]
 r306: [70..71]
 r307: [64..65]
 r308: [54..57]
 r309: [54..55]
 r310: [44..47]
 r311: [44..45]
 r312: [36..37]
 r313: [38..43]
 r314: [46..53]
 r315: [56..63]
 r316: [42..69]
 r317: [52..71]
 r318: [62..73]

********** Assignment #1: **********

	 Assigning to 313 (cl=SSE_REGS, orig=181, freq=2000, tfirst=310, tfreq=4000)...
	 Assigning to 310 (cl=SSE_REGS, orig=180, freq=3000, tfirst=310, tfreq=4000)...
	   Assign 24 to reload r310 (freq=3000)
	Hard reg 24 is preferable by r313 with profit 1000
	Hard reg 22 is preferable by r312 with profit 1000
	Hard reg 24 is preferable by r312 with profit 500
	 Assigning to 312 (cl=SSE_REGS, orig=181, freq=3000, tfirst=310, tfreq=4000)...
	   Assign 22 to reload r312 (freq=3000)
	Hard reg 24 is preferable by r313 with profit 1000
	Hard reg 22 is preferable by r313 with profit 1000
	 Assigning to 299 (cl=SSE_REGS, orig=161, freq=3000, tfirst=299, tfreq=3000)...
	   Assign 22 to reload r299 (freq=3000)
	 Assigning to 300 (cl=SSE_REGS, orig=273, freq=3000, tfirst=300, tfreq=3000)...
	   Assign 22 to reload r300 (freq=3000)
	 Assigning to 301 (cl=SSE_REGS, orig=276, freq=3000, tfirst=301, tfreq=3000)...
	   Assign 22 to reload r301 (freq=3000)
	 Assigning to 302 (cl=SSE_REGS, orig=279, freq=3000, tfirst=302, tfreq=3000)...
	   Assign 22 to reload r302 (freq=3000)
	 Assigning to 303 (cl=SSE_REGS, orig=282, freq=3000, tfirst=303, tfreq=3000)...
	   Assign 22 to reload r303 (freq=3000)
	 Assigning to 315 (cl=SSE_REGS, orig=175, freq=2000, tfirst=307, tfreq=3000)...
	 Assigning to 307 (cl=SSE_REGS, orig=174, freq=3000, tfirst=307, tfreq=3000)...
	   Assign 25 to reload r307 (freq=3000)
	Hard reg 25 is preferable by r315 with profit 1000
	Hard reg 25 is preferable by r309 with profit 500
	 Assigning to 309 (cl=SSE_REGS, orig=175, freq=2000, tfirst=307, tfreq=3000)...
	   Assign 25 to optional reload r309 (freq=2000)
	Hard reg 25 is preferable by r315 with profit 2000
	 Assigning to 314 (cl=SSE_REGS, orig=178, freq=2000, tfirst=308, tfreq=3000)...
	 Assigning to 308 (cl=SSE_REGS, orig=177, freq=3000, tfirst=308, tfreq=3000)...
	   Assign 26 to reload r308 (freq=3000)
	Hard reg 26 is preferable by r314 with profit 1000
	Hard reg 26 is preferable by r311 with profit 500
	 Assigning to 311 (cl=SSE_REGS, orig=178, freq=2000, tfirst=308, tfreq=3000)...
	   Assign 26 to optional reload r311 (freq=2000)
	Hard reg 26 is preferable by r314 with profit 2000
	 Assigning to 318 (cl=ALL_SSE_REGS, orig=200, freq=2000, tfirst=304, tfreq=2000)...
	 Assigning to 304 (cl=ALL_SSE_REGS, orig=200, freq=2000, tfirst=304, tfreq=2000)...
	   Assign 27 to reload r304 (freq=2000)
	Hard reg 21 is preferable by r318 with profit 1000
	Hard reg 27 is preferable by r318 with profit 1000
	 Assigning to 317 (cl=ALL_SSE_REGS, orig=201, freq=2000, tfirst=305, tfreq=2000)...
	 Assigning to 305 (cl=ALL_SSE_REGS, orig=201, freq=2000, tfirst=305, tfreq=2000)...
	   Assign 28 to reload r305 (freq=2000)
	Hard reg 21 is preferable by r317 with profit 1000
	Hard reg 28 is preferable by r317 with profit 1000
	 Assigning to 316 (cl=ALL_SSE_REGS, orig=202, freq=2000, tfirst=306, tfreq=2000)...
	 Assigning to 306 (cl=ALL_SSE_REGS, orig=202, freq=2000, tfirst=306, tfreq=2000)...
	   Assign 24 to reload r306 (freq=2000)
	Hard reg 21 is preferable by r316 with profit 1000
	Hard reg 24 is preferable by r316 with profit 1000
  Reassigning non-reload pseudos

********** Undoing inheritance #1: **********

Inherit 0 out of 6 (0.00%)
   Insn after restoring regs:
  331: r312:SF=r181:SF
      REG_DEAD r181:SF
   Insn after restoring regs:
  248: xmm0:SF=r202:SF
      REG_DEAD r202:SF
   Insn after restoring regs:
  329: r181:SF=r310:SF
      REG_DEAD r310:SF
   Insn after restoring regs:
  330: r311:SF=r178:SF
      REG_DEAD r178:SF
   Insn after restoring regs:
  241: xmm0:SF=r201:SF
      REG_DEAD r201:SF
   Insn after restoring regs:
  326: r178:SF=r308:SF
      REG_DEAD r308:SF
   Insn after restoring regs:
  327: r309:SF=r175:SF
      REG_DEAD r175:SF
   Insn after restoring regs:
  234: xmm0:SF=r200:SF
      REG_DEAD r200:SF
   Insn after restoring regs:
  324: r175:SF=r307:SF
      REG_DEAD r307:SF
   Insn after restoring regs:
  322: r202:SF=r306:SF
      REG_DEAD r306:SF
   Insn after restoring regs:
  321: r201:SF=r305:SF
      REG_DEAD r305:SF
   Insn after restoring regs:
  320: r200:SF=r304:SF
      REG_DEAD r304:SF
Remove optional reload reg 309
  Restoring original insn:
  238: r308:SF=r308:SF+r175:SF
      REG_DEAD r175:SF
  Deleting move 327
  327: r309:SF=r175:SF
      REG_DEAD r175:SF
deleting insn with uid = 327.
Remove optional reload reg 311
  Restoring original insn:
  245: r310:SF=r310:SF+r178:SF
      REG_DEAD r178:SF
  Deleting move 330
  330: r311:SF=r178:SF
      REG_DEAD r178:SF
deleting insn with uid = 330.

********** Local #2: **********

	   Spilling non-eliminable hard regs: 6
            2 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 245:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=319 from oldreg=178, assigning class SSE_REGS to r319
      Making reload reg 319 for reg 178 optional
  245: r310:SF=r310:SF+r319:SF
      REG_DEAD r178:SF
    Inserting insn reload before:
  339: r319:SF=r178:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=615,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            alt=1,overall=617,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=4,overall=622,losers=2 -- refuse
            0 Non pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=7,overall=2,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 339:  (0) v  (1) m {*movsf_internal}
            2 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 238:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=320 from oldreg=175, assigning class SSE_REGS to r320
      Making reload reg 320 for reg 175 optional
  238: r308:SF=r308:SF+r320:SF
      REG_DEAD r175:SF
    Inserting insn reload before:
  340: r320:SF=r175:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=615,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            alt=1,overall=617,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=4,overall=622,losers=2 -- refuse
            0 Non pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=7,overall=2,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 340:  (0) v  (1) m {*movsf_internal}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #2: **********

EBB 2
EBB 3 4
EBB 5 6 7
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=321 from oldreg=181, assigning class SSE_REGS to inheritance r321
    Original reg change 181->321 (bb6):
  329: r321:SF=r310:SF
      REG_DEAD r310:SF
    Add original<-inheritance after:
  341: r181:SF=r321:SF

    Inheritance reuse change 181->321 (bb6):
  331: r312:SF=r321:SF
      REG_DEAD r321:SF
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=322 from oldreg=178, assigning class SSE_REGS to inheritance r322
    Original reg change 178->322 (bb6):
  326: r322:SF=r308:SF
      REG_DEAD r308:SF
    Add original<-inheritance after:
  342: r178:SF=r322:SF

    Inheritance reuse change 178->322 (bb6):
  339: r319:SF=r322:SF
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=323 from oldreg=175, assigning class SSE_REGS to inheritance r323
    Original reg change 175->323 (bb6):
  324: r323:SF=r307:SF
      REG_DEAD r307:SF
    Add original<-inheritance after:
  343: r175:SF=r323:SF

    Inheritance reuse change 175->323 (bb6):
  340: r320:SF=r323:SF
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
    Use smallest class of ALL_SSE_REGS and SSE_REGS
      Creating newreg=324 from oldreg=202, assigning class ALL_SSE_REGS to inheritance r324
    Original reg change 202->324 (bb6):
  322: r324:SF=r306:SF
      REG_DEAD r306:SF
    Add original<-inheritance after:
  344: r202:SF=r324:SF

    Inheritance reuse change 202->324 (bb6):
  248: xmm0:SF=r324:SF
      REG_DEAD r324:SF
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
    Use smallest class of ALL_SSE_REGS and SSE_REGS
      Creating newreg=325 from oldreg=201, assigning class ALL_SSE_REGS to inheritance r325
    Original reg change 201->325 (bb6):
  321: r325:SF=r305:SF
      REG_DEAD r305:SF
    Add original<-inheritance after:
  345: r201:SF=r325:SF

    Inheritance reuse change 201->325 (bb6):
  241: xmm0:SF=r325:SF
      REG_DEAD r325:SF
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
    Use smallest class of ALL_SSE_REGS and SSE_REGS
      Creating newreg=326 from oldreg=200, assigning class ALL_SSE_REGS to inheritance r326
    Original reg change 200->326 (bb6):
  320: r326:SF=r304:SF
      REG_DEAD r304:SF
    Add original<-inheritance after:
  346: r200:SF=r326:SF

    Inheritance reuse change 200->326 (bb6):
  234: xmm0:SF=r326:SF
      REG_DEAD r326:SF
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
	    Removing dead insn:
   341: r181:SF=r321:SF
deleting insn with uid = 341.
	    Removing dead insn:
   342: r178:SF=r322:SF
deleting insn with uid = 342.
	    Removing dead insn:
   343: r175:SF=r323:SF
deleting insn with uid = 343.
	    Removing dead insn:
   344: r202:SF=r324:SF
deleting insn with uid = 344.
	    Removing dead insn:
   345: r201:SF=r325:SF
deleting insn with uid = 345.
	    Removing dead insn:
   346: r200:SF=r326:SF
deleting insn with uid = 346.
EBB 8
EBB 12
EBB 9
EBB 11
EBB 10

********** Pseudo live ranges #2: **********

  BB 10
   Insn 298: point = 0, n_alt = -1
  BB 11
   Insn 305: point = 0, n_alt = -1
  BB 3
   Insn 48: point = 0, n_alt = -1
   Insn 47: point = 0, n_alt = 0
   Insn 46: point = 1, n_alt = 0
   Insn 45: point = 3, n_alt = 0
   Insn 44: point = 4, n_alt = 0
  BB 9
   Insn 301: point = 5, n_alt = -1
   Insn 288: point = 5, n_alt = 1
  BB 12
   Insn 308: point = 6, n_alt = -1
  BB 5
   Insn 56: point = 7, n_alt = -1
   Insn 55: point = 7, n_alt = 0
   Insn 54: point = 8, n_alt = 0
   Insn 53: point = 10, n_alt = 0
   Insn 52: point = 11, n_alt = 0
  BB 8
   Insn 299: point = 12, n_alt = -1
   Insn 282: point = 12, n_alt = 1
   Insn 281: point = 12, n_alt = 8
   Insn 280: point = 13, n_alt = 3
   Insn 279: point = 14, n_alt = 1
   Insn 278: point = 16, n_alt = 7
   Insn 277: point = 17, n_alt = 3
   Insn 276: point = 19, n_alt = 0
   Insn 275: point = 21, n_alt = 0
   Insn 274: point = 23, n_alt = 0
   Insn 273: point = 24, n_alt = 0
   Insn 272: point = 26, n_alt = 0
   Insn 271: point = 28, n_alt = 0
  BB 7
   Insn 9: point = 30, n_alt = -2
  BB 6
   Insn 267: point = 33, n_alt = -1
   Insn 266: point = 33, n_alt = 0
   Insn 265: point = 34, n_alt = 0
   Insn 264: point = 36, n_alt = 0
   Insn 263: point = 38, n_alt = 0
   Insn 262: point = 39, n_alt = 1
   Insn 261: point = 39, n_alt = 0
   Insn 260: point = 41, n_alt = 0
   Insn 259: point = 42, n_alt = 1
   Insn 258: point = 42, n_alt = 2
   Insn 257: point = 44, n_alt = 7
   Insn 256: point = 45, n_alt = 7
   Insn 255: point = 46, n_alt = 8
   Insn 254: point = 47, n_alt = 1
   Insn 253: point = 49, n_alt = 7
   Insn 332: point = 50, n_alt = -2
	Hard reg 22 is preferable by r312 with profit 1000
   Insn 252: point = 52, n_alt = 1
   Insn 331: point = 53, n_alt = 7
	   Creating copy r312<-r321@1000
   Insn 251: point = 55, n_alt = 1
   Insn 250: point = 57, n_alt = -2
   Insn 249: point = 58, n_alt = 0
   Insn 248: point = 58, n_alt = 7
	Hard reg 21 is preferable by r324 with profit 1000
   Insn 247: point = 59, n_alt = -2
   Insn 246: point = 60, n_alt = 7
   Insn 329: point = 61, n_alt = 8
	   Creating copy r310->r321@1000
   Insn 245: point = 63, n_alt = 1
   Insn 339: point = 64, n_alt = 7
	   Creating copy r319<-r322@1000
   Insn 328: point = 66, n_alt = -2
	Hard reg 21 is preferable by r310 with profit 1000
   Insn 244: point = 68, n_alt = 1
   Insn 243: point = 70, n_alt = -2
   Insn 242: point = 71, n_alt = 0
   Insn 241: point = 71, n_alt = 7
	Hard reg 21 is preferable by r325 with profit 1000
   Insn 240: point = 72, n_alt = -2
   Insn 239: point = 73, n_alt = 7
   Insn 326: point = 74, n_alt = 8
	   Creating copy r308->r322@1000
   Insn 238: point = 76, n_alt = 1
   Insn 340: point = 77, n_alt = 7
	   Creating copy r320<-r323@1000
   Insn 325: point = 79, n_alt = -2
	Hard reg 21 is preferable by r308 with profit 1000
   Insn 237: point = 81, n_alt = 1
   Insn 236: point = 83, n_alt = -2
   Insn 235: point = 84, n_alt = 0
   Insn 234: point = 84, n_alt = 7
	Hard reg 21 is preferable by r326 with profit 1000
   Insn 233: point = 85, n_alt = -2
   Insn 232: point = 86, n_alt = 7
   Insn 324: point = 87, n_alt = 8
	   Creating copy r307->r323@1000
   Insn 231: point = 89, n_alt = 1
   Insn 323: point = 89, n_alt = -2
	Hard reg 21 is preferable by r307 with profit 1000
   Insn 230: point = 91, n_alt = -2
   Insn 229: point = 92, n_alt = 0
   Insn 228: point = 92, n_alt = -2
   Insn 227: point = 93, n_alt = -2
   Insn 226: point = 94, n_alt = 7
   Insn 322: point = 95, n_alt = 8
	   Creating copy r306->r324@1000
   Insn 225: point = 97, n_alt = 7
   Insn 321: point = 98, n_alt = 8
	   Creating copy r305->r325@1000
   Insn 224: point = 100, n_alt = 7
   Insn 320: point = 101, n_alt = 8
	   Creating copy r304->r326@1000
   Insn 223: point = 103, n_alt = 7
   Insn 222: point = 104, n_alt = 7
   Insn 221: point = 105, n_alt = 8
   Insn 220: point = 106, n_alt = 1
   Insn 219: point = 108, n_alt = 7
   Insn 319: point = 109, n_alt = -2
	Hard reg 22 is preferable by r303 with profit 1000
   Insn 218: point = 111, n_alt = 2
   Insn 318: point = 111, n_alt = -2
	Hard reg 22 is preferable by r303 with profit 1000
	Hard reg 21 is preferable by r303 with profit 1000
   Insn 217: point = 113, n_alt = 7
   Insn 216: point = 114, n_alt = 8
   Insn 215: point = 115, n_alt = 1
   Insn 214: point = 117, n_alt = 7
   Insn 317: point = 118, n_alt = -2
	Hard reg 22 is preferable by r302 with profit 1000
   Insn 213: point = 120, n_alt = 2
   Insn 316: point = 120, n_alt = -2
	Hard reg 22 is preferable by r302 with profit 1000
	Hard reg 21 is preferable by r302 with profit 1000
   Insn 212: point = 122, n_alt = 7
   Insn 211: point = 123, n_alt = 8
   Insn 210: point = 124, n_alt = 1
   Insn 209: point = 126, n_alt = 7
   Insn 315: point = 127, n_alt = -2
	Hard reg 22 is preferable by r301 with profit 1000
   Insn 208: point = 129, n_alt = 2
   Insn 314: point = 129, n_alt = -2
	Hard reg 22 is preferable by r301 with profit 1000
	Hard reg 21 is preferable by r301 with profit 1000
   Insn 207: point = 131, n_alt = 7
   Insn 206: point = 132, n_alt = 8
   Insn 205: point = 133, n_alt = 1
   Insn 204: point = 135, n_alt = 7
   Insn 313: point = 136, n_alt = -2
	Hard reg 22 is preferable by r300 with profit 1000
   Insn 203: point = 138, n_alt = 2
   Insn 312: point = 138, n_alt = -2
	Hard reg 22 is preferable by r300 with profit 1000
	Hard reg 21 is preferable by r300 with profit 1000
   Insn 202: point = 140, n_alt = 7
   Insn 201: point = 141, n_alt = 8
   Insn 200: point = 142, n_alt = 1
   Insn 199: point = 144, n_alt = 2
   Insn 198: point = 146, n_alt = -2
   Insn 197: point = 148, n_alt = 1
   Insn 196: point = 150, n_alt = 7
   Insn 195: point = 151, n_alt = 1
   Insn 194: point = 153, n_alt = 2
   Insn 193: point = 155, n_alt = -2
   Insn 192: point = 157, n_alt = 1
   Insn 191: point = 159, n_alt = 7
   Insn 311: point = 160, n_alt = -2
	Hard reg 22 is preferable by r299 with profit 1000
   Insn 190: point = 162, n_alt = 2
   Insn 310: point = 162, n_alt = -2
	Hard reg 22 is preferable by r299 with profit 1000
	Hard reg 21 is preferable by r299 with profit 1000
   Insn 189: point = 164, n_alt = -2
   Insn 188: point = 166, n_alt = 1
   Insn 187: point = 168, n_alt = 7
   Insn 186: point = 169, n_alt = 7
   Insn 185: point = 171, n_alt = 3
   Insn 184: point = 172, n_alt = 3
   Insn 183: point = 174, n_alt = 0
   Insn 182: point = 176, n_alt = 0
   Insn 181: point = 178, n_alt = 0
   Insn 180: point = 179, n_alt = 0
   Insn 179: point = 181, n_alt = 0
   Insn 178: point = 183, n_alt = 0
   Insn 177: point = 184, n_alt = 8
   Insn 176: point = 185, n_alt = 2
   Insn 175: point = 187, n_alt = -2
   Insn 174: point = 189, n_alt = 1
   Insn 173: point = 191, n_alt = 7
   Insn 172: point = 192, n_alt = 7
   Insn 171: point = 193, n_alt = 7
   Insn 170: point = 195, n_alt = 3
   Insn 169: point = 196, n_alt = 3
   Insn 168: point = 198, n_alt = 0
   Insn 167: point = 200, n_alt = 0
   Insn 166: point = 202, n_alt = 0
   Insn 165: point = 203, n_alt = 0
   Insn 164: point = 205, n_alt = 0
   Insn 163: point = 207, n_alt = 0
   Insn 162: point = 208, n_alt = 8
   Insn 161: point = 209, n_alt = 1
   Insn 160: point = 211, n_alt = -2
   Insn 159: point = 213, n_alt = 1
   Insn 158: point = 215, n_alt = 7
   Insn 157: point = 216, n_alt = 1
   Insn 156: point = 218, n_alt = 7
   Insn 155: point = 219, n_alt = 7
   Insn 154: point = 221, n_alt = 3
   Insn 153: point = 222, n_alt = 3
   Insn 152: point = 224, n_alt = 0
   Insn 151: point = 226, n_alt = 0
   Insn 150: point = 228, n_alt = 0
   Insn 149: point = 229, n_alt = 0
   Insn 148: point = 231, n_alt = 0
   Insn 147: point = 233, n_alt = 0
   Insn 146: point = 234, n_alt = 7
   Insn 145: point = 236, n_alt = 3
   Insn 144: point = 237, n_alt = 3
   Insn 143: point = 239, n_alt = 0
   Insn 142: point = 241, n_alt = 0
   Insn 141: point = 243, n_alt = 0
   Insn 140: point = 244, n_alt = 0
   Insn 139: point = 246, n_alt = 0
   Insn 138: point = 248, n_alt = 0
   Insn 137: point = 249, n_alt = 8
   Insn 136: point = 250, n_alt = 7
   Insn 135: point = 252, n_alt = 3
   Insn 134: point = 253, n_alt = 3
   Insn 133: point = 255, n_alt = 0
   Insn 132: point = 257, n_alt = 0
   Insn 131: point = 259, n_alt = 0
   Insn 130: point = 260, n_alt = 0
   Insn 129: point = 262, n_alt = 0
   Insn 128: point = 264, n_alt = 0
   Insn 127: point = 265, n_alt = 8
   Insn 126: point = 266, n_alt = 7
   Insn 125: point = 268, n_alt = 3
   Insn 124: point = 269, n_alt = 3
   Insn 123: point = 271, n_alt = 0
   Insn 122: point = 273, n_alt = 0
   Insn 121: point = 275, n_alt = 0
   Insn 120: point = 276, n_alt = 0
   Insn 119: point = 278, n_alt = 0
   Insn 118: point = 280, n_alt = 0
   Insn 117: point = 281, n_alt = 8
   Insn 116: point = 282, n_alt = 7
   Insn 115: point = 284, n_alt = 3
   Insn 114: point = 285, n_alt = 3
   Insn 113: point = 287, n_alt = 0
   Insn 112: point = 289, n_alt = 0
   Insn 111: point = 291, n_alt = 0
   Insn 110: point = 292, n_alt = 0
   Insn 109: point = 294, n_alt = 0
   Insn 108: point = 296, n_alt = 0
   Insn 107: point = 297, n_alt = 8
   Insn 106: point = 298, n_alt = 7
   Insn 105: point = 300, n_alt = 3
   Insn 104: point = 301, n_alt = 3
   Insn 103: point = 303, n_alt = 0
   Insn 102: point = 305, n_alt = 0
   Insn 101: point = 307, n_alt = 0
   Insn 100: point = 308, n_alt = 0
   Insn 99: point = 310, n_alt = 0
   Insn 98: point = 312, n_alt = 0
   Insn 97: point = 313, n_alt = 8
   Insn 96: point = 314, n_alt = 1
   Insn 95: point = 316, n_alt = 7
   Insn 94: point = 318, n_alt = 3
   Insn 93: point = 319, n_alt = 3
   Insn 92: point = 321, n_alt = 0
   Insn 91: point = 323, n_alt = 0
   Insn 90: point = 325, n_alt = 0
   Insn 89: point = 326, n_alt = 0
   Insn 88: point = 328, n_alt = 0
   Insn 87: point = 330, n_alt = 0
   Insn 86: point = 331, n_alt = 7
   Insn 85: point = 333, n_alt = 3
   Insn 84: point = 334, n_alt = 3
   Insn 83: point = 336, n_alt = 0
   Insn 82: point = 338, n_alt = 0
   Insn 81: point = 340, n_alt = 0
   Insn 80: point = 341, n_alt = 0
   Insn 79: point = 343, n_alt = 0
   Insn 78: point = 345, n_alt = 0
   Insn 77: point = 346, n_alt = 8
   Insn 76: point = 347, n_alt = 1
   Insn 75: point = 349, n_alt = 7
   Insn 74: point = 351, n_alt = 3
   Insn 73: point = 352, n_alt = 3
   Insn 72: point = 354, n_alt = 0
   Insn 71: point = 356, n_alt = 0
   Insn 70: point = 358, n_alt = 0
   Insn 69: point = 359, n_alt = 0
   Insn 68: point = 361, n_alt = 0
   Insn 67: point = 363, n_alt = 0
   Insn 66: point = 364, n_alt = 7
   Insn 65: point = 366, n_alt = 3
   Insn 64: point = 367, n_alt = 3
   Insn 63: point = 369, n_alt = 0
   Insn 62: point = 371, n_alt = 0
   Insn 61: point = 373, n_alt = 0
   Insn 60: point = 374, n_alt = 0
   Insn 59: point = 376, n_alt = 0
   Insn 58: point = 378, n_alt = 0
  BB 4
   Insn 50: point = 380, n_alt = 1
  BB 2
   Insn 42: point = 381, n_alt = 1
   Insn 41: point = 382, n_alt = 0
   Insn 40: point = 383, n_alt = 0
   Insn 39: point = 384, n_alt = 8
   Insn 38: point = 385, n_alt = 7
   Insn 37: point = 386, n_alt = 8
   Insn 36: point = 387, n_alt = 7
   Insn 35: point = 388, n_alt = 8
   Insn 34: point = 389, n_alt = 7
   Insn 33: point = 390, n_alt = 8
   Insn 32: point = 391, n_alt = 7
   Insn 31: point = 392, n_alt = 8
   Insn 30: point = 393, n_alt = 7
   Insn 29: point = 394, n_alt = 8
   Insn 28: point = 395, n_alt = 7
   Insn 27: point = 396, n_alt = 8
   Insn 26: point = 397, n_alt = 7
   Insn 25: point = 398, n_alt = 8
   Insn 24: point = 399, n_alt = 7
   Insn 23: point = 400, n_alt = 8
   Insn 22: point = 401, n_alt = 7
   Insn 21: point = 402, n_alt = 8
   Insn 20: point = 403, n_alt = 7
   Insn 19: point = 404, n_alt = 8
   Insn 18: point = 405, n_alt = 7
   Insn 17: point = 406, n_alt = 8
   Insn 16: point = 407, n_alt = 2
   Insn 15: point = 409, n_alt = 7
   Insn 14: point = 410, n_alt = 7
   Insn 13: point = 411, n_alt = 8
   Insn 12: point = 412, n_alt = 7
   Insn 7: point = 413, n_alt = 5
   Insn 6: point = 413, n_alt = 5
   Insn 5: point = 413, n_alt = 5
   Insn 4: point = 413, n_alt = 5
   Insn 3: point = 413, n_alt = 5
   Insn 2: point = 413, n_alt = 5
 r87: [375..376]
 r88: [370..374]
 r89: [370..371]
 r90: [368..369]
 r91: [365..367]
 r92: [348..364]
 r93: [360..361]
 r94: [355..359]
 r95: [355..356]
 r96: [353..354]
 r97: [350..352]
 r98: [348..349]
 r99: [342..343]
 r100: [337..341]
 r101: [337..338]
 r102: [335..336]
 r103: [332..334]
 r104: [315..331]
 r105: [327..328]
 r106: [322..326]
 r107: [322..323]
 r108: [320..321]
 r109: [317..319]
 r110: [315..316]
 r111: [309..310]
 r112: [304..308]
 r113: [304..305]
 r114: [302..303]
 r115: [299..301]
 r116: [293..294]
 r117: [288..292]
 r118: [288..289]
 r119: [286..287]
 r120: [283..285]
 r121: [277..278]
 r122: [272..276]
 r123: [272..273]
 r124: [270..271]
 r125: [267..269]
 r126: [261..262]
 r127: [256..260]
 r128: [256..257]
 r129: [254..255]
 r130: [251..253]
 r131: [245..246]
 r132: [240..244]
 r133: [240..241]
 r134: [238..239]
 r135: [235..237]
 r136: [210..234]
 r137: [230..231]
 r138: [225..229]
 r139: [225..226]
 r140: [223..224]
 r141: [220..222]
 r142: [217..219]
 r143: [214..216]
 r144: [212..213]
 r145: [210..211]
 r146: [204..205]
 r147: [199..203]
 r148: [199..200]
 r149: [197..198]
 r150: [194..196]
 r151: [186..193]
 r152: [188..189]
 r153: [186..187]
 r154: [180..181]
 r155: [175..179]
 r156: [175..176]
 r157: [173..174]
 r158: [170..172]
 r159: [167..169]
 r160: [165..166]
 r161: [163..164]
 r162: [152..160]
 r163: [156..157]
 r164: [154..155]
 r165: [152..153]
 r166: [143..151]
 r167: [147..148]
 r168: [145..146]
 r169: [143..144]
 r170: [134..136]
 r171: [125..127]
 r172: [116..118]
 r173: [107..109]
 r174: [90..91]
 r176: [82..83]
 r177: [80..81]
 r179: [69..70]
 r180: [67..68]
 r182: [56..57]
 r183: [52..55]
 r184: [48..50]
 r185: [35..39]
 r186: [35..36]
 r187: [33..34]
 r188: [25..26]
 r189: [20..24]
 r190: [20..21]
 r191: [18..19]
 r192: [12..17]
 r193: [12..14]
 r194: [33..45] [15..30]
 r195: [381..383]
 r196: [0..382]
 r197: [0..1]
 r198: [7..8]
 r199: [92..104]
 r203: [31..42]
 r204: [411..412]
 r205: [406..407]
 r206: [408..410]
 r207: [408..409]
 r208: [404..405]
 r209: [402..403]
 r210: [400..401]
 r211: [398..399]
 r212: [396..397]
 r213: [394..395]
 r214: [392..393]
 r215: [390..391]
 r216: [388..389]
 r217: [386..387]
 r218: [384..385]
 r219: [2..3]
 r220: [9..10]
 r221: [377..378]
 r222: [372..373]
 r223: [365..366]
 r224: [362..363]
 r225: [357..358]
 r226: [350..351]
 r227: [346..347]
 r228: [344..345]
 r229: [339..340]
 r230: [332..333]
 r231: [329..330]
 r232: [324..325]
 r233: [317..318]
 r234: [313..314]
 r235: [311..312]
 r236: [306..307]
 r237: [299..300]
 r238: [297..298]
 r239: [295..296]
 r240: [290..291]
 r241: [283..284]
 r242: [281..282]
 r243: [279..280]
 r244: [274..275]
 r245: [267..268]
 r246: [265..266]
 r247: [263..264]
 r248: [258..259]
 r249: [251..252]
 r250: [249..250]
 r251: [247..248]
 r252: [242..243]
 r253: [235..236]
 r254: [232..233]
 r255: [227..228]
 r256: [220..221]
 r257: [217..218]
 r258: [214..215]
 r259: [208..209]
 r260: [206..207]
 r261: [201..202]
 r262: [194..195]
 r263: [190..192]
 r264: [190..191]
 r265: [184..185]
 r266: [182..183]
 r267: [177..178]
 r268: [170..171]
 r269: [167..168]
 r270: [158..159]
 r271: [149..150]
 r272: [141..142]
 r273: [139..140]
 r274: [132..133]
 r275: [134..135]
 r276: [130..131]
 r277: [123..124]
 r278: [125..126]
 r279: [121..122]
 r280: [114..115]
 r281: [116..117]
 r282: [112..113]
 r283: [105..106]
 r284: [107..108]
 r285: [93..94]
 r286: [85..86]
 r287: [72..73]
 r288: [59..60]
 r289: [46..47]
 r290: [48..49]
 r291: [43..44]
 r293: [40..41]
 r294: [37..38]
 r295: [27..28]
 r296: [22..23]
 r297: [15..16]
 r298: [12..13]
 r299: [161..162]
 r300: [137..138]
 r301: [128..129]
 r302: [119..120]
 r303: [110..111]
 r304: [102..103]
 r305: [99..100]
 r306: [96..97]
 r307: [88..89]
 r308: [75..79]
 r310: [62..66]
 r312: [51..53]
 r319: [63..64]
 r320: [76..77]
 r321: [54..61]
 r322: [65..74]
 r323: [78..87]
 r324: [58..95]
 r325: [71..98]
 r326: [84..101]
Compressing live ranges: from 413 to 342 - 82%
Ranges after the compression:
 r87: [308..309]
 r88: [304..307]
 r89: [304..305]
 r90: [302..303]
 r91: [300..301]
 r92: [286..299]
 r93: [296..297]
 r94: [292..295]
 r95: [292..293]
 r96: [290..291]
 r97: [288..289]
 r98: [286..287]
 r99: [280..281]
 r100: [276..279]
 r101: [276..277]
 r102: [274..275]
 r103: [272..273]
 r104: [258..271]
 r105: [268..269]
 r106: [264..267]
 r107: [264..265]
 r108: [262..263]
 r109: [260..261]
 r110: [258..259]
 r111: [252..253]
 r112: [248..251]
 r113: [248..249]
 r114: [246..247]
 r115: [244..245]
 r116: [238..239]
 r117: [234..237]
 r118: [234..235]
 r119: [232..233]
 r120: [230..231]
 r121: [224..225]
 r122: [220..223]
 r123: [220..221]
 r124: [218..219]
 r125: [216..217]
 r126: [210..211]
 r127: [206..209]
 r128: [206..207]
 r129: [204..205]
 r130: [202..203]
 r131: [196..197]
 r132: [192..195]
 r133: [192..193]
 r134: [190..191]
 r135: [188..189]
 r136: [168..187]
 r137: [184..185]
 r138: [180..183]
 r139: [180..181]
 r140: [178..179]
 r141: [176..177]
 r142: [174..175]
 r143: [172..173]
 r144: [170..171]
 r145: [168..169]
 r146: [162..163]
 r147: [158..161]
 r148: [158..159]
 r149: [156..157]
 r150: [154..155]
 r151: [148..153]
 r152: [150..151]
 r153: [148..149]
 r154: [142..143]
 r155: [138..141]
 r156: [138..139]
 r157: [136..137]
 r158: [134..135]
 r159: [132..133]
 r160: [130..131]
 r161: [128..129]
 r162: [118..125]
 r163: [122..123]
 r164: [120..121]
 r165: [118..119]
 r166: [110..117]
 r167: [114..115]
 r168: [112..113]
 r169: [110..111]
 r170: [102..103]
 r171: [94..95]
 r172: [86..87]
 r173: [78..79]
 r174: [66..67]
 r176: [60..61]
 r177: [58..59]
 r179: [50..51]
 r180: [48..49]
 r182: [40..41]
 r183: [36..39]
 r184: [34..35]
 r185: [24..27]
 r186: [24..25]
 r187: [22..23]
 r188: [18..19]
 r189: [14..17]
 r190: [14..15]
 r191: [12..13]
 r192: [8..11]
 r193: [8..9]
 r194: [10..31]
 r195: [312..313]
 r196: [0..313]
 r197: [0..1]
 r198: [4..5]
 r199: [68..75]
 r203: [22..29]
 r204: [340..341]
 r205: [336..337]
 r206: [338..339]
 r207: [338..339]
 r208: [334..335]
 r209: [332..333]
 r210: [330..331]
 r211: [328..329]
 r212: [326..327]
 r213: [324..325]
 r214: [322..323]
 r215: [320..321]
 r216: [318..319]
 r217: [316..317]
 r218: [314..315]
 r219: [2..3]
 r220: [6..7]
 r221: [310..311]
 r222: [306..307]
 r223: [300..301]
 r224: [298..299]
 r225: [294..295]
 r226: [288..289]
 r227: [284..285]
 r228: [282..283]
 r229: [278..279]
 r230: [272..273]
 r231: [270..271]
 r232: [266..267]
 r233: [260..261]
 r234: [256..257]
 r235: [254..255]
 r236: [250..251]
 r237: [244..245]
 r238: [242..243]
 r239: [240..241]
 r240: [236..237]
 r241: [230..231]
 r242: [228..229]
 r243: [226..227]
 r244: [222..223]
 r245: [216..217]
 r246: [214..215]
 r247: [212..213]
 r248: [208..209]
 r249: [202..203]
 r250: [200..201]
 r251: [198..199]
 r252: [194..195]
 r253: [188..189]
 r254: [186..187]
 r255: [182..183]
 r256: [176..177]
 r257: [174..175]
 r258: [172..173]
 r259: [166..167]
 r260: [164..165]
 r261: [160..161]
 r262: [154..155]
 r263: [152..153]
 r264: [152..153]
 r265: [146..147]
 r266: [144..145]
 r267: [140..141]
 r268: [134..135]
 r269: [132..133]
 r270: [124..125]
 r271: [116..117]
 r272: [108..109]
 r273: [106..107]
 r274: [100..101]
 r275: [102..103]
 r276: [98..99]
 r277: [92..93]
 r278: [94..95]
 r279: [90..91]
 r280: [84..85]
 r281: [86..87]
 r282: [82..83]
 r283: [76..77]
 r284: [78..79]
 r285: [68..69]
 r286: [62..63]
 r287: [52..53]
 r288: [42..43]
 r289: [32..33]
 r290: [34..35]
 r291: [30..31]
 r293: [28..29]
 r294: [26..27]
 r295: [20..21]
 r296: [16..17]
 r297: [10..11]
 r298: [8..9]
 r299: [126..127]
 r300: [104..105]
 r301: [96..97]
 r302: [88..89]
 r303: [80..81]
 r304: [74..75]
 r305: [72..73]
 r306: [70..71]
 r307: [64..65]
 r308: [54..57]
 r310: [44..47]
 r312: [36..37]
 r319: [44..45]
 r320: [54..55]
 r321: [38..43]
 r322: [46..53]
 r323: [56..63]
 r324: [42..69]
 r325: [52..71]
 r326: [62..73]

********** Assignment #2: **********

	 Assigning to 322 (cl=SSE_REGS, orig=178, freq=2000, tfirst=319, tfreq=2000)...
	 Assigning to 319 (cl=SSE_REGS, orig=178, freq=2000, tfirst=319, tfreq=2000)...
	   Assign 27 to optional reload r319 (freq=2000)
	Hard reg 27 is preferable by r322 with profit 1000
	 Assigning to 323 (cl=SSE_REGS, orig=175, freq=2000, tfirst=320, tfreq=2000)...
	 Assigning to 320 (cl=SSE_REGS, orig=175, freq=2000, tfirst=320, tfreq=2000)...
	   Assign 28 to optional reload r320 (freq=2000)
	Hard reg 28 is preferable by r323 with profit 1000
	 Assigning to 321 (cl=SSE_REGS, orig=181, freq=2000, tfirst=321, tfreq=2000)...
	 Assigning to 324 (cl=ALL_SSE_REGS, orig=202, freq=2000, tfirst=324, tfreq=2000)...
	 Assigning to 325 (cl=ALL_SSE_REGS, orig=201, freq=2000, tfirst=325, tfreq=2000)...
	 Assigning to 326 (cl=ALL_SSE_REGS, orig=200, freq=2000, tfirst=326, tfreq=2000)...
  Reassigning non-reload pseudos

********** Undoing inheritance #2: **********

Inherit 0 out of 6 (0.00%)
   Insn after restoring regs:
  331: r312:SF=r181:SF
      REG_DEAD r181:SF
   Insn after restoring regs:
  248: xmm0:SF=r202:SF
      REG_DEAD r202:SF
   Insn after restoring regs:
  329: r181:SF=r310:SF
      REG_DEAD r310:SF
   Insn after restoring regs:
  339: r319:SF=r178:SF
      REG_DEAD r178:SF
   Insn after restoring regs:
  241: xmm0:SF=r201:SF
      REG_DEAD r201:SF
   Insn after restoring regs:
  326: r178:SF=r308:SF
      REG_DEAD r308:SF
   Insn after restoring regs:
  340: r320:SF=r175:SF
      REG_DEAD r175:SF
   Insn after restoring regs:
  234: xmm0:SF=r200:SF
      REG_DEAD r200:SF
   Insn after restoring regs:
  324: r175:SF=r307:SF
      REG_DEAD r307:SF
   Insn after restoring regs:
  322: r202:SF=r306:SF
      REG_DEAD r306:SF
   Insn after restoring regs:
  321: r201:SF=r305:SF
      REG_DEAD r305:SF
   Insn after restoring regs:
  320: r200:SF=r304:SF
      REG_DEAD r304:SF
Keep optional reload reg 309
Keep optional reload reg 311
Remove optional reload reg 319
  Restoring original insn:
  245: r310:SF=r310:SF+r178:SF
      REG_DEAD r178:SF
  Deleting move 339
  339: r319:SF=r178:SF
      REG_DEAD r178:SF
deleting insn with uid = 339.
Remove optional reload reg 320
  Restoring original insn:
  238: r308:SF=r308:SF+r175:SF
      REG_DEAD r175:SF
  Deleting move 340
  340: r320:SF=r175:SF
      REG_DEAD r175:SF
deleting insn with uid = 340.

********** Local #3: **********

	   Spilling non-eliminable hard regs: 6
            2 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 245:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            2 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 238:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
	   Spilling non-eliminable hard regs: 6

********** Pseudo live ranges #3: **********

  BB 10
   Insn 298: point = 0, n_alt = -1
  BB 11
   Insn 305: point = 0, n_alt = -1
  BB 3
   Insn 48: point = 0, n_alt = -1
   Insn 47: point = 0, n_alt = 0
   Insn 46: point = 1, n_alt = 0
   Insn 45: point = 3, n_alt = 0
   Insn 44: point = 4, n_alt = 0
  BB 9
   Insn 301: point = 5, n_alt = -1
   Insn 288: point = 5, n_alt = 1
  BB 12
   Insn 308: point = 6, n_alt = -1
  BB 5
   Insn 56: point = 7, n_alt = -1
   Insn 55: point = 7, n_alt = 0
   Insn 54: point = 8, n_alt = 0
   Insn 53: point = 10, n_alt = 0
   Insn 52: point = 11, n_alt = 0
  BB 8
   Insn 299: point = 12, n_alt = -1
   Insn 282: point = 12, n_alt = 1
   Insn 281: point = 12, n_alt = 8
   Insn 280: point = 13, n_alt = 3
   Insn 279: point = 14, n_alt = 1
   Insn 278: point = 16, n_alt = 7
   Insn 277: point = 17, n_alt = 3
   Insn 276: point = 19, n_alt = 0
   Insn 275: point = 21, n_alt = 0
   Insn 274: point = 23, n_alt = 0
   Insn 273: point = 24, n_alt = 0
   Insn 272: point = 26, n_alt = 0
   Insn 271: point = 28, n_alt = 0
  BB 7
   Insn 9: point = 30, n_alt = -2
  BB 6
   Insn 267: point = 33, n_alt = -1
   Insn 266: point = 33, n_alt = 0
   Insn 265: point = 34, n_alt = 0
   Insn 264: point = 36, n_alt = 0
   Insn 263: point = 38, n_alt = 0
   Insn 262: point = 39, n_alt = 1
   Insn 261: point = 39, n_alt = 0
   Insn 260: point = 41, n_alt = 0
   Insn 259: point = 42, n_alt = 1
   Insn 258: point = 42, n_alt = 2
   Insn 257: point = 44, n_alt = 7
   Insn 256: point = 45, n_alt = 7
   Insn 255: point = 46, n_alt = 8
   Insn 254: point = 47, n_alt = 1
   Insn 253: point = 49, n_alt = 7
   Insn 332: point = 50, n_alt = -2
   Insn 252: point = 52, n_alt = 1
   Insn 331: point = 53, n_alt = 7
   Insn 251: point = 55, n_alt = 1
   Insn 250: point = 57, n_alt = -2
   Insn 249: point = 58, n_alt = 0
   Insn 248: point = 58, n_alt = 7
   Insn 247: point = 59, n_alt = -2
   Insn 246: point = 60, n_alt = 7
   Insn 329: point = 61, n_alt = 8
   Insn 245: point = 63, n_alt = 1
   Insn 328: point = 64, n_alt = -2
   Insn 244: point = 66, n_alt = 1
   Insn 243: point = 68, n_alt = -2
   Insn 242: point = 69, n_alt = 0
   Insn 241: point = 69, n_alt = 7
   Insn 240: point = 70, n_alt = -2
   Insn 239: point = 71, n_alt = 7
   Insn 326: point = 72, n_alt = 8
   Insn 238: point = 74, n_alt = 1
   Insn 325: point = 75, n_alt = -2
   Insn 237: point = 77, n_alt = 1
   Insn 236: point = 79, n_alt = -2
   Insn 235: point = 80, n_alt = 0
   Insn 234: point = 80, n_alt = 7
   Insn 233: point = 81, n_alt = -2
   Insn 232: point = 82, n_alt = 7
   Insn 324: point = 83, n_alt = 8
   Insn 231: point = 85, n_alt = 1
   Insn 323: point = 85, n_alt = -2
   Insn 230: point = 87, n_alt = -2
   Insn 229: point = 88, n_alt = 0
   Insn 228: point = 88, n_alt = -2
   Insn 227: point = 89, n_alt = -2
   Insn 226: point = 90, n_alt = 7
   Insn 322: point = 91, n_alt = 8
   Insn 225: point = 93, n_alt = 7
   Insn 321: point = 94, n_alt = 8
   Insn 224: point = 96, n_alt = 7
   Insn 320: point = 97, n_alt = 8
   Insn 223: point = 99, n_alt = 7
   Insn 222: point = 100, n_alt = 7
   Insn 221: point = 101, n_alt = 8
   Insn 220: point = 102, n_alt = 1
   Insn 219: point = 104, n_alt = 7
   Insn 319: point = 105, n_alt = -2
   Insn 218: point = 107, n_alt = 2
   Insn 318: point = 107, n_alt = -2
   Insn 217: point = 109, n_alt = 7
   Insn 216: point = 110, n_alt = 8
   Insn 215: point = 111, n_alt = 1
   Insn 214: point = 113, n_alt = 7
   Insn 317: point = 114, n_alt = -2
   Insn 213: point = 116, n_alt = 2
   Insn 316: point = 116, n_alt = -2
   Insn 212: point = 118, n_alt = 7
   Insn 211: point = 119, n_alt = 8
   Insn 210: point = 120, n_alt = 1
   Insn 209: point = 122, n_alt = 7
   Insn 315: point = 123, n_alt = -2
   Insn 208: point = 125, n_alt = 2
   Insn 314: point = 125, n_alt = -2
   Insn 207: point = 127, n_alt = 7
   Insn 206: point = 128, n_alt = 8
   Insn 205: point = 129, n_alt = 1
   Insn 204: point = 131, n_alt = 7
   Insn 313: point = 132, n_alt = -2
   Insn 203: point = 134, n_alt = 2
   Insn 312: point = 134, n_alt = -2
   Insn 202: point = 136, n_alt = 7
   Insn 201: point = 137, n_alt = 8
   Insn 200: point = 138, n_alt = 1
   Insn 199: point = 140, n_alt = 2
   Insn 198: point = 142, n_alt = -2
   Insn 197: point = 144, n_alt = 1
   Insn 196: point = 146, n_alt = 7
   Insn 195: point = 147, n_alt = 1
   Insn 194: point = 149, n_alt = 2
   Insn 193: point = 151, n_alt = -2
   Insn 192: point = 153, n_alt = 1
   Insn 191: point = 155, n_alt = 7
   Insn 311: point = 156, n_alt = -2
   Insn 190: point = 158, n_alt = 2
   Insn 310: point = 158, n_alt = -2
   Insn 189: point = 160, n_alt = -2
   Insn 188: point = 162, n_alt = 1
   Insn 187: point = 164, n_alt = 7
   Insn 186: point = 165, n_alt = 7
   Insn 185: point = 167, n_alt = 3
   Insn 184: point = 168, n_alt = 3
   Insn 183: point = 170, n_alt = 0
   Insn 182: point = 172, n_alt = 0
   Insn 181: point = 174, n_alt = 0
   Insn 180: point = 175, n_alt = 0
   Insn 179: point = 177, n_alt = 0
   Insn 178: point = 179, n_alt = 0
   Insn 177: point = 180, n_alt = 8
   Insn 176: point = 181, n_alt = 2
   Insn 175: point = 183, n_alt = -2
   Insn 174: point = 185, n_alt = 1
   Insn 173: point = 187, n_alt = 7
   Insn 172: point = 188, n_alt = 7
   Insn 171: point = 189, n_alt = 7
   Insn 170: point = 191, n_alt = 3
   Insn 169: point = 192, n_alt = 3
   Insn 168: point = 194, n_alt = 0
   Insn 167: point = 196, n_alt = 0
   Insn 166: point = 198, n_alt = 0
   Insn 165: point = 199, n_alt = 0
   Insn 164: point = 201, n_alt = 0
   Insn 163: point = 203, n_alt = 0
   Insn 162: point = 204, n_alt = 8
   Insn 161: point = 205, n_alt = 1
   Insn 160: point = 207, n_alt = -2
   Insn 159: point = 209, n_alt = 1
   Insn 158: point = 211, n_alt = 7
   Insn 157: point = 212, n_alt = 1
   Insn 156: point = 214, n_alt = 7
   Insn 155: point = 215, n_alt = 7
   Insn 154: point = 217, n_alt = 3
   Insn 153: point = 218, n_alt = 3
   Insn 152: point = 220, n_alt = 0
   Insn 151: point = 222, n_alt = 0
   Insn 150: point = 224, n_alt = 0
   Insn 149: point = 225, n_alt = 0
   Insn 148: point = 227, n_alt = 0
   Insn 147: point = 229, n_alt = 0
   Insn 146: point = 230, n_alt = 7
   Insn 145: point = 232, n_alt = 3
   Insn 144: point = 233, n_alt = 3
   Insn 143: point = 235, n_alt = 0
   Insn 142: point = 237, n_alt = 0
   Insn 141: point = 239, n_alt = 0
   Insn 140: point = 240, n_alt = 0
   Insn 139: point = 242, n_alt = 0
   Insn 138: point = 244, n_alt = 0
   Insn 137: point = 245, n_alt = 8
   Insn 136: point = 246, n_alt = 7
   Insn 135: point = 248, n_alt = 3
   Insn 134: point = 249, n_alt = 3
   Insn 133: point = 251, n_alt = 0
   Insn 132: point = 253, n_alt = 0
   Insn 131: point = 255, n_alt = 0
   Insn 130: point = 256, n_alt = 0
   Insn 129: point = 258, n_alt = 0
   Insn 128: point = 260, n_alt = 0
   Insn 127: point = 261, n_alt = 8
   Insn 126: point = 262, n_alt = 7
   Insn 125: point = 264, n_alt = 3
   Insn 124: point = 265, n_alt = 3
   Insn 123: point = 267, n_alt = 0
   Insn 122: point = 269, n_alt = 0
   Insn 121: point = 271, n_alt = 0
   Insn 120: point = 272, n_alt = 0
   Insn 119: point = 274, n_alt = 0
   Insn 118: point = 276, n_alt = 0
   Insn 117: point = 277, n_alt = 8
   Insn 116: point = 278, n_alt = 7
   Insn 115: point = 280, n_alt = 3
   Insn 114: point = 281, n_alt = 3
   Insn 113: point = 283, n_alt = 0
   Insn 112: point = 285, n_alt = 0
   Insn 111: point = 287, n_alt = 0
   Insn 110: point = 288, n_alt = 0
   Insn 109: point = 290, n_alt = 0
   Insn 108: point = 292, n_alt = 0
   Insn 107: point = 293, n_alt = 8
   Insn 106: point = 294, n_alt = 7
   Insn 105: point = 296, n_alt = 3
   Insn 104: point = 297, n_alt = 3
   Insn 103: point = 299, n_alt = 0
   Insn 102: point = 301, n_alt = 0
   Insn 101: point = 303, n_alt = 0
   Insn 100: point = 304, n_alt = 0
   Insn 99: point = 306, n_alt = 0
   Insn 98: point = 308, n_alt = 0
   Insn 97: point = 309, n_alt = 8
   Insn 96: point = 310, n_alt = 1
   Insn 95: point = 312, n_alt = 7
   Insn 94: point = 314, n_alt = 3
   Insn 93: point = 315, n_alt = 3
   Insn 92: point = 317, n_alt = 0
   Insn 91: point = 319, n_alt = 0
   Insn 90: point = 321, n_alt = 0
   Insn 89: point = 322, n_alt = 0
   Insn 88: point = 324, n_alt = 0
   Insn 87: point = 326, n_alt = 0
   Insn 86: point = 327, n_alt = 7
   Insn 85: point = 329, n_alt = 3
   Insn 84: point = 330, n_alt = 3
   Insn 83: point = 332, n_alt = 0
   Insn 82: point = 334, n_alt = 0
   Insn 81: point = 336, n_alt = 0
   Insn 80: point = 337, n_alt = 0
   Insn 79: point = 339, n_alt = 0
   Insn 78: point = 341, n_alt = 0
   Insn 77: point = 342, n_alt = 8
   Insn 76: point = 343, n_alt = 1
   Insn 75: point = 345, n_alt = 7
   Insn 74: point = 347, n_alt = 3
   Insn 73: point = 348, n_alt = 3
   Insn 72: point = 350, n_alt = 0
   Insn 71: point = 352, n_alt = 0
   Insn 70: point = 354, n_alt = 0
   Insn 69: point = 355, n_alt = 0
   Insn 68: point = 357, n_alt = 0
   Insn 67: point = 359, n_alt = 0
   Insn 66: point = 360, n_alt = 7
   Insn 65: point = 362, n_alt = 3
   Insn 64: point = 363, n_alt = 3
   Insn 63: point = 365, n_alt = 0
   Insn 62: point = 367, n_alt = 0
   Insn 61: point = 369, n_alt = 0
   Insn 60: point = 370, n_alt = 0
   Insn 59: point = 372, n_alt = 0
   Insn 58: point = 374, n_alt = 0
  BB 4
   Insn 50: point = 376, n_alt = 1
  BB 2
   Insn 42: point = 377, n_alt = 1
   Insn 41: point = 378, n_alt = 0
   Insn 40: point = 379, n_alt = 0
   Insn 39: point = 380, n_alt = 8
   Insn 38: point = 381, n_alt = 7
   Insn 37: point = 382, n_alt = 8
   Insn 36: point = 383, n_alt = 7
   Insn 35: point = 384, n_alt = 8
   Insn 34: point = 385, n_alt = 7
   Insn 33: point = 386, n_alt = 8
   Insn 32: point = 387, n_alt = 7
   Insn 31: point = 388, n_alt = 8
   Insn 30: point = 389, n_alt = 7
   Insn 29: point = 390, n_alt = 8
   Insn 28: point = 391, n_alt = 7
   Insn 27: point = 392, n_alt = 8
   Insn 26: point = 393, n_alt = 7
   Insn 25: point = 394, n_alt = 8
   Insn 24: point = 395, n_alt = 7
   Insn 23: point = 396, n_alt = 8
   Insn 22: point = 397, n_alt = 7
   Insn 21: point = 398, n_alt = 8
   Insn 20: point = 399, n_alt = 7
   Insn 19: point = 400, n_alt = 8
   Insn 18: point = 401, n_alt = 7
   Insn 17: point = 402, n_alt = 8
   Insn 16: point = 403, n_alt = 2
   Insn 15: point = 405, n_alt = 7
   Insn 14: point = 406, n_alt = 7
   Insn 13: point = 407, n_alt = 8
   Insn 12: point = 408, n_alt = 7
   Insn 7: point = 409, n_alt = 5
   Insn 6: point = 409, n_alt = 5
   Insn 5: point = 409, n_alt = 5
   Insn 4: point = 409, n_alt = 5
   Insn 3: point = 409, n_alt = 5
   Insn 2: point = 409, n_alt = 5
 r175: [74..83]
 r178: [63..72]
 r181: [54..61]
 r200: [80..97]
 r201: [69..94]
 r202: [58..91]
Compressing live ranges: from 409 to 6 - 1%
Ranges after the compression:
 r175: [4..5]
 r178: [2..3]
 r181: [0..1]
 r200: [4..5]
 r201: [2..5]
 r202: [0..5]
  Slot 0 regnos (width = 0):	 175	 181	 178
  Slot 1 regnos (width = 0):	 200
  Slot 2 regnos (width = 0):	 201
  Slot 3 regnos (width = 0):	 202
Changing spilled pseudos to memory in insn #320
Changing spilled pseudos to memory in insn #321
Changing spilled pseudos to memory in insn #322
Changing spilled pseudos to memory in insn #324
Changing spilled pseudos to memory in insn #234
Changing spilled pseudos to memory in insn #238
Changing spilled pseudos to memory in insn #326
Changing spilled pseudos to memory in insn #241
Changing spilled pseudos to memory in insn #245
Changing spilled pseudos to memory in insn #329
Changing spilled pseudos to memory in insn #248
Changing spilled pseudos to memory in insn #331
	   Spilling non-eliminable hard regs: 6

********** Local #4: **********

	   Spilling non-eliminable hard regs: 6
Reusing alternative 7 for insn #331
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 331:  (0) v  (1) m {*movsf_internal}
Reusing alternative 7 for insn #248
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 248:  (0) v  (1) m {*movsf_internal}
Reusing alternative 8 for insn #329
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 329:  (0) m  (1) v {*movsf_internal}
Reusing alternative 1 for insn #245
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 245:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
Reusing alternative 7 for insn #241
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 241:  (0) v  (1) m {*movsf_internal}
Reusing alternative 8 for insn #326
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 326:  (0) m  (1) v {*movsf_internal}
Reusing alternative 1 for insn #238
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 238:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
Reusing alternative 7 for insn #234
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 234:  (0) v  (1) m {*movsf_internal}
Reusing alternative 8 for insn #324
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 324:  (0) m  (1) v {*movsf_internal}
Reusing alternative 8 for insn #322
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 322:  (0) m  (1) v {*movsf_internal}
Reusing alternative 8 for insn #321
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 321:  (0) m  (1) v {*movsf_internal}
Reusing alternative 8 for insn #320
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 320:  (0) m  (1) v {*movsf_internal}
	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=224, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 20 to 7 (offset=192, prev_offset=0)
Can eliminate 20 to 6 (offset=-16, prev_offset=-16)
changing reg in insn 59
changing reg in insn 60
changing reg in insn 60
changing reg in insn 62
changing reg in insn 63
changing reg in insn 64
changing reg in insn 64
changing reg in insn 66
changing reg in insn 66
changing reg in insn 68
changing reg in insn 69
changing reg in insn 69
changing reg in insn 71
changing reg in insn 72
changing reg in insn 73
changing reg in insn 73
changing reg in insn 75
changing reg in insn 75
changing reg in insn 79
changing reg in insn 80
changing reg in insn 80
changing reg in insn 82
changing reg in insn 83
changing reg in insn 84
changing reg in insn 84
changing reg in insn 86
changing reg in insn 86
changing reg in insn 88
changing reg in insn 89
changing reg in insn 89
changing reg in insn 91
changing reg in insn 92
changing reg in insn 93
changing reg in insn 93
changing reg in insn 95
changing reg in insn 95
changing reg in insn 99
changing reg in insn 100
changing reg in insn 100
changing reg in insn 102
changing reg in insn 103
changing reg in insn 104
changing reg in insn 104
changing reg in insn 106
changing reg in insn 109
changing reg in insn 110
changing reg in insn 110
changing reg in insn 112
changing reg in insn 113
changing reg in insn 114
changing reg in insn 114
changing reg in insn 116
changing reg in insn 119
changing reg in insn 120
changing reg in insn 120
changing reg in insn 122
changing reg in insn 123
changing reg in insn 124
changing reg in insn 124
changing reg in insn 126
changing reg in insn 129
changing reg in insn 130
changing reg in insn 130
changing reg in insn 132
changing reg in insn 133
changing reg in insn 134
changing reg in insn 134
changing reg in insn 136
changing reg in insn 139
changing reg in insn 140
changing reg in insn 140
changing reg in insn 142
changing reg in insn 143
changing reg in insn 144
changing reg in insn 144
changing reg in insn 146
changing reg in insn 146
changing reg in insn 161
changing reg in insn 148
changing reg in insn 149
changing reg in insn 149
changing reg in insn 151
changing reg in insn 152
changing reg in insn 153
changing reg in insn 153
changing reg in insn 155
changing reg in insn 155
changing reg in insn 157
changing reg in insn 157
changing reg in insn 159
changing reg in insn 160
changing reg in insn 160
changing reg in insn 161
changing reg in insn 164
changing reg in insn 165
changing reg in insn 165
changing reg in insn 167
changing reg in insn 168
changing reg in insn 169
changing reg in insn 169
changing reg in insn 171
changing reg in insn 171
changing reg in insn 176
changing reg in insn 174
changing reg in insn 175
changing reg in insn 175
changing reg in insn 176
changing reg in insn 179
changing reg in insn 180
changing reg in insn 180
changing reg in insn 182
changing reg in insn 183
changing reg in insn 184
changing reg in insn 184
changing reg in insn 186
changing reg in insn 186
changing reg in insn 188
changing reg in insn 189
changing reg in insn 189
changing reg in insn 195
changing reg in insn 192
changing reg in insn 193
changing reg in insn 193
changing reg in insn 194
changing reg in insn 194
changing reg in insn 195
changing reg in insn 195
changing reg in insn 197
changing reg in insn 198
changing reg in insn 198
changing reg in insn 199
changing reg in insn 199
changing reg in insn 230
changing reg in insn 236
changing reg in insn 237
changing reg in insn 237
changing reg in insn 243
changing reg in insn 244
changing reg in insn 244
changing reg in insn 250
changing reg in insn 251
changing reg in insn 251
changing reg in insn 252
changing reg in insn 261
changing reg in insn 264
changing reg in insn 265
changing reg in insn 266
changing reg in insn 272
changing reg in insn 273
changing reg in insn 273
changing reg in insn 275
changing reg in insn 276
changing reg in insn 277
changing reg in insn 277
changing reg in insn 281
changing reg in insn 279
changing reg in insn 281
changing reg in insn 9
changing reg in insn 256
changing reg in insn 279
changing reg in insn 262
changing reg in insn 262
changing reg in insn 259
changing reg in insn 40
changing reg in insn 42
changing reg in insn 41
changing reg in insn 44
changing reg in insn 46
changing reg in insn 47
changing reg in insn 54
changing reg in insn 55
changing reg in insn 222
changing reg in insn 228
changing reg in insn 258
changing reg in insn 9
changing reg in insn 259
changing reg in insn 12
changing reg in insn 13
changing reg in insn 16
changing reg in insn 17
changing reg in insn 14
changing reg in insn 16
changing reg in insn 15
changing reg in insn 16
changing reg in insn 18
changing reg in insn 19
changing reg in insn 20
changing reg in insn 21
changing reg in insn 22
changing reg in insn 23
changing reg in insn 24
changing reg in insn 25
changing reg in insn 26
changing reg in insn 27
changing reg in insn 28
changing reg in insn 29
changing reg in insn 30
changing reg in insn 31
changing reg in insn 32
changing reg in insn 33
changing reg in insn 34
changing reg in insn 35
changing reg in insn 36
changing reg in insn 37
changing reg in insn 38
changing reg in insn 39
changing reg in insn 45
changing reg in insn 46
changing reg in insn 53
changing reg in insn 54
changing reg in insn 58
changing reg in insn 59
changing reg in insn 61
changing reg in insn 62
changing reg in insn 65
changing reg in insn 66
changing reg in insn 67
changing reg in insn 68
changing reg in insn 70
changing reg in insn 71
changing reg in insn 74
changing reg in insn 75
changing reg in insn 76
changing reg in insn 77
changing reg in insn 78
changing reg in insn 79
changing reg in insn 81
changing reg in insn 82
changing reg in insn 85
changing reg in insn 86
changing reg in insn 87
changing reg in insn 88
changing reg in insn 90
changing reg in insn 91
changing reg in insn 94
changing reg in insn 95
changing reg in insn 96
changing reg in insn 97
changing reg in insn 98
changing reg in insn 99
changing reg in insn 101
changing reg in insn 102
changing reg in insn 105
changing reg in insn 106
changing reg in insn 106
changing reg in insn 107
changing reg in insn 108
changing reg in insn 109
changing reg in insn 111
changing reg in insn 112
changing reg in insn 115
changing reg in insn 116
changing reg in insn 116
changing reg in insn 117
changing reg in insn 118
changing reg in insn 119
changing reg in insn 121
changing reg in insn 122
changing reg in insn 125
changing reg in insn 126
changing reg in insn 126
changing reg in insn 127
changing reg in insn 128
changing reg in insn 129
changing reg in insn 131
changing reg in insn 132
changing reg in insn 135
changing reg in insn 136
changing reg in insn 136
changing reg in insn 137
changing reg in insn 138
changing reg in insn 139
changing reg in insn 141
changing reg in insn 142
changing reg in insn 145
changing reg in insn 146
changing reg in insn 147
changing reg in insn 148
changing reg in insn 150
changing reg in insn 151
changing reg in insn 154
changing reg in insn 155
changing reg in insn 156
changing reg in insn 157
changing reg in insn 158
changing reg in insn 161
changing reg in insn 162
changing reg in insn 163
changing reg in insn 164
changing reg in insn 166
changing reg in insn 167
changing reg in insn 170
changing reg in insn 171
changing reg in insn 172
changing reg in insn 173
changing reg in insn 176
changing reg in insn 177
changing reg in insn 178
changing reg in insn 179
changing reg in insn 181
changing reg in insn 182
changing reg in insn 185
changing reg in insn 186
changing reg in insn 187
changing reg in insn 191
changing reg in insn 192
changing reg in insn 196
changing reg in insn 197
changing reg in insn 200
changing reg in insn 201
changing reg in insn 202
changing reg in insn 205
changing reg in insn 206
changing reg in insn 204
changing reg in insn 207
changing reg in insn 210
changing reg in insn 211
changing reg in insn 209
changing reg in insn 212
changing reg in insn 215
changing reg in insn 216
changing reg in insn 214
changing reg in insn 217
changing reg in insn 220
changing reg in insn 221
changing reg in insn 219
changing reg in insn 226
changing reg in insn 227
changing reg in insn 232
changing reg in insn 233
changing reg in insn 239
changing reg in insn 240
changing reg in insn 246
changing reg in insn 247
changing reg in insn 254
changing reg in insn 255
changing reg in insn 253
changing reg in insn 257
changing reg in insn 258
changing reg in insn 260
changing reg in insn 261
changing reg in insn 263
changing reg in insn 264
changing reg in insn 271
changing reg in insn 272
changing reg in insn 274
changing reg in insn 275
changing reg in insn 278
changing reg in insn 279
changing reg in insn 280
changing reg in insn 281
deleting insn with uid = 160.
deleting insn with uid = 175.
deleting insn with uid = 189.
deleting insn with uid = 311.
deleting insn with uid = 193.
deleting insn with uid = 198.
deleting insn with uid = 313.
deleting insn with uid = 315.
deleting insn with uid = 317.
deleting insn with uid = 319.
deleting insn with uid = 227.
deleting insn with uid = 228.
deleting insn with uid = 230.
deleting insn with uid = 236.
deleting insn with uid = 243.
deleting insn with uid = 250.
deleting insn with uid = 332.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 229.
verify found no changes in insn with uid = 235.
verify found no changes in insn with uid = 242.
verify found no changes in insn with uid = 249.


calvis

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  ref usage 	r0={92d,87u} r1={32d,28u} r2={5d,1u} r3={1d,1u} r4={5d,1u} r5={5d,1u} r6={1d,135u} r7={1d,16u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r17={53d,7u} r18={4d} r19={4d} r20={1d,1u} r21={67d,68u} r22={34d,30u} r23={8d,3u} r24={8d,3u} r25={7d,2u} r26={7d,2u} r27={6d,1u} r28={6d,1u} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={5d,1u} r38={5d,1u} r39={4d} r40={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} 
;;    total ref usage 963{573d,390u,0e} in 281{277 regular + 4 call} insns.
(note 1 0 10 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  def 	 195 196 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218
(note 10 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 10 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -152 [0xffffffffffffff68])) [3 qv+0 S8 A64])
        (reg:DI 5 di [ qv ])) "CALVIS.f":2 85 {*movdi_internal}
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -160 [0xffffffffffffff60])) [3 qc+0 S8 A64])
        (reg:DI 4 si [ qc ])) "CALVIS.f":2 85 {*movdi_internal}
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [3 qr+0 S8 A64])
        (reg:DI 1 dx [ qr ])) "CALVIS.f":2 85 {*movdi_internal}
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -176 [0xffffffffffffff50])) [3 qi+0 S8 A64])
        (reg:DI 2 cx [ qi ])) "CALVIS.f":2 85 {*movdi_internal}
     (nil))
(insn 6 5 7 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [3 qs+0 S8 A64])
        (reg:DI 37 r8 [ qs ])) "CALVIS.f":2 85 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [3 tt+0 S8 A64])
        (reg:DI 38 r9 [ tt ])) "CALVIS.f":2 85 {*movdi_internal}
     (nil))
(note 8 7 12 2 NOTE_INSN_FUNCTION_BEG)
(insn 12 8 13 2 (set (reg:SF 21 xmm0 [204])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) "CALVIS.f":68 131 {*movsf_internal}
     (nil))
(insn 13 12 14 2 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 celkel+0 S4 A32])
        (reg:SF 21 xmm0 [204])) "CALVIS.f":68 131 {*movsf_internal}
     (nil))
(insn 14 13 15 2 (set (reg:SF 21 xmm0 [206])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 celkel+0 S4 A32])) "CALVIS.f":69 131 {*movsf_internal}
     (nil))
(insn 15 14 16 2 (set (reg:SF 22 xmm1 [207])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S4 A32])) "CALVIS.f":69 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+1 [0x0.ap+4])
        (nil)))
(insn 16 15 17 2 (set (reg:SF 21 xmm0 [205])
        (minus:SF (reg:SF 21 xmm0 [206])
            (reg:SF 22 xmm1 [207]))) "CALVIS.f":69 841 {*fop_sf_1}
     (nil))
(insn 17 16 18 2 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 tice+0 S4 A32])
        (reg:SF 21 xmm0 [205])) "CALVIS.f":69 131 {*movsf_internal}
     (nil))
(insn 18 17 19 2 (set (reg:SF 21 xmm0 [208])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0  S4 A32])) "CALVIS.f":70 131 {*movsf_internal}
     (nil))
(insn 19 18 20 2 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 coeflc+0 S4 A32])
        (reg:SF 21 xmm0 [208])) "CALVIS.f":70 131 {*movsf_internal}
     (nil))
(insn 20 19 21 2 (set (reg:SF 21 xmm0 [209])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC3") [flags 0x2]) [0  S4 A32])) "CALVIS.f":71 131 {*movsf_internal}
     (nil))
(insn 21 20 22 2 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 coeflp+0 S4 A32])
        (reg:SF 21 xmm0 [209])) "CALVIS.f":71 131 {*movsf_internal}
     (nil))
(insn 22 21 23 2 (set (reg:SF 21 xmm0 [210])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC4") [flags 0x2]) [0  S4 A32])) "CALVIS.f":72 131 {*movsf_internal}
     (nil))
(insn 23 22 24 2 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [2 coeffc+0 S4 A32])
        (reg:SF 21 xmm0 [210])) "CALVIS.f":72 131 {*movsf_internal}
     (nil))
(insn 24 23 25 2 (set (reg:SF 21 xmm0 [211])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [0  S4 A32])) "CALVIS.f":73 131 {*movsf_internal}
     (nil))
(insn 25 24 26 2 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [2 coeffp+0 S4 A32])
        (reg:SF 21 xmm0 [211])) "CALVIS.f":73 131 {*movsf_internal}
     (nil))
(insn 26 25 27 2 (set (reg:SF 21 xmm0 [212])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC6") [flags 0x2]) [0  S4 A32])) "CALVIS.f":74 131 {*movsf_internal}
     (nil))
(insn 27 26 28 2 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 exponlc+0 S4 A32])
        (reg:SF 21 xmm0 [212])) "CALVIS.f":74 131 {*movsf_internal}
     (nil))
(insn 28 27 29 2 (set (reg:SF 21 xmm0 [213])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC7") [flags 0x2]) [0  S4 A32])) "CALVIS.f":75 131 {*movsf_internal}
     (nil))
(insn 29 28 30 2 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 exponlp+0 S4 A32])
        (reg:SF 21 xmm0 [213])) "CALVIS.f":75 131 {*movsf_internal}
     (nil))
(insn 30 29 31 2 (set (reg:SF 21 xmm0 [214])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC8") [flags 0x2]) [0  S4 A32])) "CALVIS.f":76 131 {*movsf_internal}
     (nil))
(insn 31 30 32 2 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [2 exponfc+0 S4 A32])
        (reg:SF 21 xmm0 [214])) "CALVIS.f":76 131 {*movsf_internal}
     (nil))
(insn 32 31 33 2 (set (reg:SF 21 xmm0 [215])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC9") [flags 0x2]) [0  S4 A32])) "CALVIS.f":77 131 {*movsf_internal}
     (nil))
(insn 33 32 34 2 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [2 exponfp+0 S4 A32])
        (reg:SF 21 xmm0 [215])) "CALVIS.f":77 131 {*movsf_internal}
     (nil))
(insn 34 33 35 2 (set (reg:SF 21 xmm0 [216])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC10") [flags 0x2]) [0  S4 A32])) "CALVIS.f":78 131 {*movsf_internal}
     (nil))
(insn 35 34 36 2 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -68 [0xffffffffffffffbc])) [2 const1+0 S4 A32])
        (reg:SF 21 xmm0 [216])) "CALVIS.f":78 131 {*movsf_internal}
     (nil))
(insn 36 35 37 2 (set (reg:SF 21 xmm0 [217])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC11") [flags 0x2]) [0  S4 A32])) "CALVIS.f":79 131 {*movsf_internal}
     (nil))
(insn 37 36 38 2 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [2 rhoice+0 S4 A32])
        (reg:SF 21 xmm0 [217])) "CALVIS.f":79 131 {*movsf_internal}
     (nil))
(insn 38 37 39 2 (set (reg:SF 21 xmm0 [218])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC12") [flags 0x2]) [0  S4 A32])) "CALVIS.f":80 131 {*movsf_internal}
     (nil))
(insn 39 38 40 2 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -76 [0xffffffffffffffb4])) [2 rhowat+0 S4 A32])
        (reg:SF 21 xmm0 [218])) "CALVIS.f":80 131 {*movsf_internal}
     (nil))
(insn 40 39 41 2 (set (reg:SI 0 ax [orig:195 _127 ] [195])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f0ebdd53870 parallel>)
                    (const_int 8 [0x8]))) [1 parallel.jsta+0 S4 A64])) "CALVIS.f":82 86 {*movsi_internal}
     (nil))
(insn 41 40 42 2 (set (reg:SI 3 bx [orig:196 _128 ] [196])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f0ebdd53870 parallel>)
                    (const_int 12 [0xc]))) [1 parallel.jend+0 S4 A32])) "CALVIS.f":82 86 {*movsi_internal}
     (nil))
(insn 42 41 289 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])
        (reg:SI 0 ax [orig:195 _127 ] [195])) "CALVIS.f":82 86 {*movsi_internal}
     (nil))
;;  succ:       3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 196

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;;              9 [always] 
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 196
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 196
;; lr  def 	 17 [flags] 197 219
(code_label 289 42 43 3 6 (nil) [1 uses])
(note 43 289 44 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 45 3 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])
            (reg:SI 3 bx [orig:196 _128 ] [196]))) "CALVIS.f":82 11 {*cmpsi_1}
     (nil))
(insn 45 44 46 3 (set (reg:QI 0 ax [219])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALVIS.f":82 678 {*setcc_qi}
     (nil))
(insn 46 45 47 3 (set (reg:SI 0 ax [orig:197 _130 ] [197])
        (zero_extend:SI (reg:QI 0 ax [219]))) "CALVIS.f":82 140 {*zero_extendqisi2}
     (nil))
(insn 47 46 48 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:197 _130 ] [197])
            (const_int 0 [0]))) "CALVIS.f":82 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 48 47 49 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 304)
            (pc))) "CALVIS.f":82 682 {*jcc}
     (nil)
 -> 304)
;;  succ:       11
;;              4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 196

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 196
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 49 48 50 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 50 49 283 4 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
        (const_int 1 [0x1])) "CALVIS.f":83 86 {*movsi_internal}
     (nil))
;;  succ:       5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 196

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;;              8 [always] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 196
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 198 220
(code_label 283 50 51 5 5 (nil) [1 uses])
(note 51 283 52 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 52 51 53 5 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
            (const_int 119 [0x77]))) "CALVIS.f":83 11 {*cmpsi_1}
     (nil))
(insn 53 52 54 5 (set (reg:QI 0 ax [220])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALVIS.f":83 678 {*setcc_qi}
     (nil))
(insn 54 53 55 5 (set (reg:SI 0 ax [orig:198 _132 ] [198])
        (zero_extend:SI (reg:QI 0 ax [220]))) "CALVIS.f":83 140 {*zero_extendqisi2}
     (nil))
(insn 55 54 56 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:198 _132 ] [198])
            (const_int 0 [0]))) "CALVIS.f":83 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 56 55 57 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 307)
            (pc))) "CALVIS.f":83 682 {*jcc}
     (nil)
 -> 307)
;;  succ:       12
;;              6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 196

;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 7, flags: (RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 196
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 194 199 200 201 202 203 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 293 294
(note 57 56 58 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 58 57 59 6 (set (reg:SI 0 ax [221])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALVIS.f":99 86 {*movsi_internal}
     (nil))
(insn 59 58 60 6 (set (reg:DI 0 ax [orig:87 _1 ] [87])
        (sign_extend:DI (reg:SI 0 ax [221]))) "CALVIS.f":99 149 {*extendsidi2_rex64}
     (nil))
(insn 60 59 61 6 (parallel [
            (set (reg:DI 1 dx [orig:88 _2 ] [88])
                (mult:DI (reg:DI 0 ax [orig:87 _1 ] [87])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":99 349 {*muldi3_1}
     (nil))
(insn 61 60 62 6 (set (reg:SI 0 ax [222])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALVIS.f":99 86 {*movsi_internal}
     (nil))
(insn 62 61 63 6 (set (reg:DI 0 ax [orig:89 _3 ] [89])
        (sign_extend:DI (reg:SI 0 ax [222]))) "CALVIS.f":99 149 {*extendsidi2_rex64}
     (nil))
(insn 63 62 64 6 (parallel [
            (set (reg:DI 0 ax [orig:90 _4 ] [90])
                (plus:DI (reg:DI 0 ax [orig:89 _3 ] [89])
                    (reg:DI 1 dx [orig:88 _2 ] [88])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":99 222 {*adddi_1}
     (nil))
(insn 64 63 65 6 (parallel [
            (set (reg:DI 1 dx [orig:91 _5 ] [91])
                (plus:DI (reg:DI 0 ax [orig:90 _4 ] [90])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":99 222 {*adddi_1}
     (nil))
(insn 65 64 66 6 (set (reg/f:DI 0 ax [223])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [3 qr+0 S8 A64])) "CALVIS.f":99 85 {*movdi_internal}
     (nil))
(insn 66 65 67 6 (set (reg:SF 22 xmm1 [orig:92 _6 ] [92])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:91 _5 ] [91])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [223])) [2 *qr_133(D) S4 A32])) "CALVIS.f":99 131 {*movsf_internal}
     (nil))
(insn 67 66 68 6 (set (reg:SI 0 ax [224])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALVIS.f":99 86 {*movsi_internal}
     (nil))
(insn 68 67 69 6 (set (reg:DI 0 ax [orig:93 _7 ] [93])
        (sign_extend:DI (reg:SI 0 ax [224]))) "CALVIS.f":99 149 {*extendsidi2_rex64}
     (nil))
(insn 69 68 70 6 (parallel [
            (set (reg:DI 1 dx [orig:94 _8 ] [94])
                (mult:DI (reg:DI 0 ax [orig:93 _7 ] [93])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":99 349 {*muldi3_1}
     (nil))
(insn 70 69 71 6 (set (reg:SI 0 ax [225])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALVIS.f":99 86 {*movsi_internal}
     (nil))
(insn 71 70 72 6 (set (reg:DI 0 ax [orig:95 _9 ] [95])
        (sign_extend:DI (reg:SI 0 ax [225]))) "CALVIS.f":99 149 {*extendsidi2_rex64}
     (nil))
(insn 72 71 73 6 (parallel [
            (set (reg:DI 0 ax [orig:96 _10 ] [96])
                (plus:DI (reg:DI 0 ax [orig:95 _9 ] [95])
                    (reg:DI 1 dx [orig:94 _8 ] [94])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":99 222 {*adddi_1}
     (nil))
(insn 73 72 74 6 (parallel [
            (set (reg:DI 1 dx [orig:97 _11 ] [97])
                (plus:DI (reg:DI 0 ax [orig:96 _10 ] [96])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":99 222 {*adddi_1}
     (nil))
(insn 74 73 75 6 (set (reg/f:DI 0 ax [226])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [3 qs+0 S8 A64])) "CALVIS.f":99 85 {*movdi_internal}
     (nil))
(insn 75 74 76 6 (set (reg:SF 21 xmm0 [orig:98 _12 ] [98])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:97 _11 ] [97])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [226])) [2 *qs_134(D) S4 A32])) "CALVIS.f":99 131 {*movsf_internal}
     (nil))
(insn 76 75 77 6 (set (reg:SF 21 xmm0 [227])
        (plus:SF (reg:SF 21 xmm0 [orig:98 _12 ] [98])
            (reg:SF 22 xmm1 [orig:92 _6 ] [92]))) "CALVIS.f":99 838 {*fop_sf_comm}
     (nil))
(insn 77 76 78 6 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -80 [0xffffffffffffffb0])) [2 qprc+0 S4 A32])
        (reg:SF 21 xmm0 [227])) "CALVIS.f":99 131 {*movsf_internal}
     (nil))
(insn 78 77 79 6 (set (reg:SI 0 ax [228])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALVIS.f":100 86 {*movsi_internal}
     (nil))
(insn 79 78 80 6 (set (reg:DI 0 ax [orig:99 _13 ] [99])
        (sign_extend:DI (reg:SI 0 ax [228]))) "CALVIS.f":100 149 {*extendsidi2_rex64}
     (nil))
(insn 80 79 81 6 (parallel [
            (set (reg:DI 1 dx [orig:100 _14 ] [100])
                (mult:DI (reg:DI 0 ax [orig:99 _13 ] [99])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":100 349 {*muldi3_1}
     (nil))
(insn 81 80 82 6 (set (reg:SI 0 ax [229])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALVIS.f":100 86 {*movsi_internal}
     (nil))
(insn 82 81 83 6 (set (reg:DI 0 ax [orig:101 _15 ] [101])
        (sign_extend:DI (reg:SI 0 ax [229]))) "CALVIS.f":100 149 {*extendsidi2_rex64}
     (nil))
(insn 83 82 84 6 (parallel [
            (set (reg:DI 0 ax [orig:102 _16 ] [102])
                (plus:DI (reg:DI 0 ax [orig:101 _15 ] [101])
                    (reg:DI 1 dx [orig:100 _14 ] [100])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":100 222 {*adddi_1}
     (nil))
(insn 84 83 85 6 (parallel [
            (set (reg:DI 1 dx [orig:103 _17 ] [103])
                (plus:DI (reg:DI 0 ax [orig:102 _16 ] [102])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":100 222 {*adddi_1}
     (nil))
(insn 85 84 86 6 (set (reg/f:DI 0 ax [230])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -160 [0xffffffffffffff60])) [3 qc+0 S8 A64])) "CALVIS.f":100 85 {*movdi_internal}
     (nil))
(insn 86 85 87 6 (set (reg:SF 22 xmm1 [orig:104 _18 ] [104])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:103 _17 ] [103])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [230])) [2 *qc_136(D) S4 A32])) "CALVIS.f":100 131 {*movsf_internal}
     (nil))
(insn 87 86 88 6 (set (reg:SI 0 ax [231])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALVIS.f":100 86 {*movsi_internal}
     (nil))
(insn 88 87 89 6 (set (reg:DI 0 ax [orig:105 _19 ] [105])
        (sign_extend:DI (reg:SI 0 ax [231]))) "CALVIS.f":100 149 {*extendsidi2_rex64}
     (nil))
(insn 89 88 90 6 (parallel [
            (set (reg:DI 1 dx [orig:106 _20 ] [106])
                (mult:DI (reg:DI 0 ax [orig:105 _19 ] [105])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":100 349 {*muldi3_1}
     (nil))
(insn 90 89 91 6 (set (reg:SI 0 ax [232])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALVIS.f":100 86 {*movsi_internal}
     (nil))
(insn 91 90 92 6 (set (reg:DI 0 ax [orig:107 _21 ] [107])
        (sign_extend:DI (reg:SI 0 ax [232]))) "CALVIS.f":100 149 {*extendsidi2_rex64}
     (nil))
(insn 92 91 93 6 (parallel [
            (set (reg:DI 0 ax [orig:108 _22 ] [108])
                (plus:DI (reg:DI 0 ax [orig:107 _21 ] [107])
                    (reg:DI 1 dx [orig:106 _20 ] [106])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":100 222 {*adddi_1}
     (nil))
(insn 93 92 94 6 (parallel [
            (set (reg:DI 1 dx [orig:109 _23 ] [109])
                (plus:DI (reg:DI 0 ax [orig:108 _22 ] [108])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":100 222 {*adddi_1}
     (nil))
(insn 94 93 95 6 (set (reg/f:DI 0 ax [233])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -176 [0xffffffffffffff50])) [3 qi+0 S8 A64])) "CALVIS.f":100 85 {*movdi_internal}
     (nil))
(insn 95 94 96 6 (set (reg:SF 21 xmm0 [orig:110 _24 ] [110])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:109 _23 ] [109])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [233])) [2 *qi_137(D) S4 A32])) "CALVIS.f":100 131 {*movsf_internal}
     (nil))
(insn 96 95 97 6 (set (reg:SF 21 xmm0 [234])
        (plus:SF (reg:SF 21 xmm0 [orig:110 _24 ] [110])
            (reg:SF 22 xmm1 [orig:104 _18 ] [104]))) "CALVIS.f":100 838 {*fop_sf_comm}
     (nil))
(insn 97 96 98 6 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -84 [0xffffffffffffffac])) [2 qcld+0 S4 A32])
        (reg:SF 21 xmm0 [234])) "CALVIS.f":100 131 {*movsf_internal}
     (nil))
(insn 98 97 99 6 (set (reg:SI 0 ax [235])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALVIS.f":101 86 {*movsi_internal}
     (nil))
(insn 99 98 100 6 (set (reg:DI 0 ax [orig:111 _25 ] [111])
        (sign_extend:DI (reg:SI 0 ax [235]))) "CALVIS.f":101 149 {*extendsidi2_rex64}
     (nil))
(insn 100 99 101 6 (parallel [
            (set (reg:DI 1 dx [orig:112 _26 ] [112])
                (mult:DI (reg:DI 0 ax [orig:111 _25 ] [111])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":101 349 {*muldi3_1}
     (nil))
(insn 101 100 102 6 (set (reg:SI 0 ax [236])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALVIS.f":101 86 {*movsi_internal}
     (nil))
(insn 102 101 103 6 (set (reg:DI 0 ax [orig:113 _27 ] [113])
        (sign_extend:DI (reg:SI 0 ax [236]))) "CALVIS.f":101 149 {*extendsidi2_rex64}
     (nil))
(insn 103 102 104 6 (parallel [
            (set (reg:DI 0 ax [orig:114 _28 ] [114])
                (plus:DI (reg:DI 0 ax [orig:113 _27 ] [113])
                    (reg:DI 1 dx [orig:112 _26 ] [112])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":101 222 {*adddi_1}
     (nil))
(insn 104 103 105 6 (parallel [
            (set (reg:DI 1 dx [orig:115 _29 ] [115])
                (plus:DI (reg:DI 0 ax [orig:114 _28 ] [114])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":101 222 {*adddi_1}
     (nil))
(insn 105 104 106 6 (set (reg/f:DI 0 ax [237])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [3 qr+0 S8 A64])) "CALVIS.f":101 85 {*movdi_internal}
     (nil))
(insn 106 105 107 6 (set (reg:SF 21 xmm0 [238])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:115 _29 ] [115])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [237])) [2 *qr_133(D) S4 A32])) "CALVIS.f":101 131 {*movsf_internal}
     (nil))
(insn 107 106 108 6 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [2 qrain+0 S4 A32])
        (reg:SF 21 xmm0 [238])) "CALVIS.f":101 131 {*movsf_internal}
     (nil))
(insn 108 107 109 6 (set (reg:SI 0 ax [239])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALVIS.f":102 86 {*movsi_internal}
     (nil))
(insn 109 108 110 6 (set (reg:DI 0 ax [orig:116 _30 ] [116])
        (sign_extend:DI (reg:SI 0 ax [239]))) "CALVIS.f":102 149 {*extendsidi2_rex64}
     (nil))
(insn 110 109 111 6 (parallel [
            (set (reg:DI 1 dx [orig:117 _31 ] [117])
                (mult:DI (reg:DI 0 ax [orig:116 _30 ] [116])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":102 349 {*muldi3_1}
     (nil))
(insn 111 110 112 6 (set (reg:SI 0 ax [240])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALVIS.f":102 86 {*movsi_internal}
     (nil))
(insn 112 111 113 6 (set (reg:DI 0 ax [orig:118 _32 ] [118])
        (sign_extend:DI (reg:SI 0 ax [240]))) "CALVIS.f":102 149 {*extendsidi2_rex64}
     (nil))
(insn 113 112 114 6 (parallel [
            (set (reg:DI 0 ax [orig:119 _33 ] [119])
                (plus:DI (reg:DI 0 ax [orig:118 _32 ] [118])
                    (reg:DI 1 dx [orig:117 _31 ] [117])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":102 222 {*adddi_1}
     (nil))
(insn 114 113 115 6 (parallel [
            (set (reg:DI 1 dx [orig:120 _34 ] [120])
                (plus:DI (reg:DI 0 ax [orig:119 _33 ] [119])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":102 222 {*adddi_1}
     (nil))
(insn 115 114 116 6 (set (reg/f:DI 0 ax [241])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [3 qs+0 S8 A64])) "CALVIS.f":102 85 {*movdi_internal}
     (nil))
(insn 116 115 117 6 (set (reg:SF 21 xmm0 [242])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:120 _34 ] [120])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [241])) [2 *qs_134(D) S4 A32])) "CALVIS.f":102 131 {*movsf_internal}
     (nil))
(insn 117 116 118 6 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -92 [0xffffffffffffffa4])) [2 qsnow+0 S4 A32])
        (reg:SF 21 xmm0 [242])) "CALVIS.f":102 131 {*movsf_internal}
     (nil))
(insn 118 117 119 6 (set (reg:SI 0 ax [243])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALVIS.f":103 86 {*movsi_internal}
     (nil))
(insn 119 118 120 6 (set (reg:DI 0 ax [orig:121 _35 ] [121])
        (sign_extend:DI (reg:SI 0 ax [243]))) "CALVIS.f":103 149 {*extendsidi2_rex64}
     (nil))
(insn 120 119 121 6 (parallel [
            (set (reg:DI 1 dx [orig:122 _36 ] [122])
                (mult:DI (reg:DI 0 ax [orig:121 _35 ] [121])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":103 349 {*muldi3_1}
     (nil))
(insn 121 120 122 6 (set (reg:SI 0 ax [244])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALVIS.f":103 86 {*movsi_internal}
     (nil))
(insn 122 121 123 6 (set (reg:DI 0 ax [orig:123 _37 ] [123])
        (sign_extend:DI (reg:SI 0 ax [244]))) "CALVIS.f":103 149 {*extendsidi2_rex64}
     (nil))
(insn 123 122 124 6 (parallel [
            (set (reg:DI 0 ax [orig:124 _38 ] [124])
                (plus:DI (reg:DI 0 ax [orig:123 _37 ] [123])
                    (reg:DI 1 dx [orig:122 _36 ] [122])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":103 222 {*adddi_1}
     (nil))
(insn 124 123 125 6 (parallel [
            (set (reg:DI 1 dx [orig:125 _39 ] [125])
                (plus:DI (reg:DI 0 ax [orig:124 _38 ] [124])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":103 222 {*adddi_1}
     (nil))
(insn 125 124 126 6 (set (reg/f:DI 0 ax [245])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -160 [0xffffffffffffff60])) [3 qc+0 S8 A64])) "CALVIS.f":103 85 {*movdi_internal}
     (nil))
(insn 126 125 127 6 (set (reg:SF 21 xmm0 [246])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:125 _39 ] [125])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [245])) [2 *qc_136(D) S4 A32])) "CALVIS.f":103 131 {*movsf_internal}
     (nil))
(insn 127 126 128 6 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [2 qclw+0 S4 A32])
        (reg:SF 21 xmm0 [246])) "CALVIS.f":103 131 {*movsf_internal}
     (nil))
(insn 128 127 129 6 (set (reg:SI 0 ax [247])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALVIS.f":104 86 {*movsi_internal}
     (nil))
(insn 129 128 130 6 (set (reg:DI 0 ax [orig:126 _40 ] [126])
        (sign_extend:DI (reg:SI 0 ax [247]))) "CALVIS.f":104 149 {*extendsidi2_rex64}
     (nil))
(insn 130 129 131 6 (parallel [
            (set (reg:DI 1 dx [orig:127 _41 ] [127])
                (mult:DI (reg:DI 0 ax [orig:126 _40 ] [126])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":104 349 {*muldi3_1}
     (nil))
(insn 131 130 132 6 (set (reg:SI 0 ax [248])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALVIS.f":104 86 {*movsi_internal}
     (nil))
(insn 132 131 133 6 (set (reg:DI 0 ax [orig:128 _42 ] [128])
        (sign_extend:DI (reg:SI 0 ax [248]))) "CALVIS.f":104 149 {*extendsidi2_rex64}
     (nil))
(insn 133 132 134 6 (parallel [
            (set (reg:DI 0 ax [orig:129 _43 ] [129])
                (plus:DI (reg:DI 0 ax [orig:128 _42 ] [128])
                    (reg:DI 1 dx [orig:127 _41 ] [127])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":104 222 {*adddi_1}
     (nil))
(insn 134 133 135 6 (parallel [
            (set (reg:DI 1 dx [orig:130 _44 ] [130])
                (plus:DI (reg:DI 0 ax [orig:129 _43 ] [129])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":104 222 {*adddi_1}
     (nil))
(insn 135 134 136 6 (set (reg/f:DI 0 ax [249])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -176 [0xffffffffffffff50])) [3 qi+0 S8 A64])) "CALVIS.f":104 85 {*movdi_internal}
     (nil))
(insn 136 135 137 6 (set (reg:SF 21 xmm0 [250])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:130 _44 ] [130])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [249])) [2 *qi_137(D) S4 A32])) "CALVIS.f":104 131 {*movsf_internal}
     (nil))
(insn 137 136 138 6 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -100 [0xffffffffffffff9c])) [2 qclice+0 S4 A32])
        (reg:SF 21 xmm0 [250])) "CALVIS.f":104 131 {*movsf_internal}
     (nil))
(insn 138 137 139 6 (set (reg:SI 0 ax [251])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALVIS.f":107 86 {*movsi_internal}
     (nil))
(insn 139 138 140 6 (set (reg:DI 0 ax [orig:131 _45 ] [131])
        (sign_extend:DI (reg:SI 0 ax [251]))) "CALVIS.f":107 149 {*extendsidi2_rex64}
     (nil))
(insn 140 139 141 6 (parallel [
            (set (reg:DI 1 dx [orig:132 _46 ] [132])
                (mult:DI (reg:DI 0 ax [orig:131 _45 ] [131])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":107 349 {*muldi3_1}
     (nil))
(insn 141 140 142 6 (set (reg:SI 0 ax [252])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALVIS.f":107 86 {*movsi_internal}
     (nil))
(insn 142 141 143 6 (set (reg:DI 0 ax [orig:133 _47 ] [133])
        (sign_extend:DI (reg:SI 0 ax [252]))) "CALVIS.f":107 149 {*extendsidi2_rex64}
     (nil))
(insn 143 142 144 6 (parallel [
            (set (reg:DI 0 ax [orig:134 _48 ] [134])
                (plus:DI (reg:DI 0 ax [orig:133 _47 ] [133])
                    (reg:DI 1 dx [orig:132 _46 ] [132])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":107 222 {*adddi_1}
     (nil))
(insn 144 143 145 6 (parallel [
            (set (reg:DI 1 dx [orig:135 _49 ] [135])
                (plus:DI (reg:DI 0 ax [orig:134 _48 ] [134])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":107 222 {*adddi_1}
     (nil))
(insn 145 144 146 6 (set (reg/f:DI 0 ax [253])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [3 tt+0 S8 A64])) "CALVIS.f":107 85 {*movdi_internal}
     (nil))
(insn 146 145 147 6 (set (reg:SF 21 xmm0 [orig:136 _50 ] [136])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:135 _49 ] [135])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [253])) [2 *tt_143(D) S4 A32])) "CALVIS.f":107 131 {*movsf_internal}
     (nil))
(insn 147 146 148 6 (set (reg:SI 0 ax [254])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALVIS.f":107 86 {*movsi_internal}
     (nil))
(insn 148 147 149 6 (set (reg:DI 0 ax [orig:137 _51 ] [137])
        (sign_extend:DI (reg:SI 0 ax [254]))) "CALVIS.f":107 149 {*extendsidi2_rex64}
     (nil))
(insn 149 148 150 6 (parallel [
            (set (reg:DI 1 dx [orig:138 _52 ] [138])
                (mult:DI (reg:DI 0 ax [orig:137 _51 ] [137])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":107 349 {*muldi3_1}
     (nil))
(insn 150 149 151 6 (set (reg:SI 0 ax [255])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALVIS.f":107 86 {*movsi_internal}
     (nil))
(insn 151 150 152 6 (set (reg:DI 0 ax [orig:139 _53 ] [139])
        (sign_extend:DI (reg:SI 0 ax [255]))) "CALVIS.f":107 149 {*extendsidi2_rex64}
     (nil))
(insn 152 151 153 6 (parallel [
            (set (reg:DI 0 ax [orig:140 _54 ] [140])
                (plus:DI (reg:DI 0 ax [orig:139 _53 ] [139])
                    (reg:DI 1 dx [orig:138 _52 ] [138])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":107 222 {*adddi_1}
     (nil))
(insn 153 152 154 6 (parallel [
            (set (reg:DI 1 dx [orig:141 _55 ] [141])
                (plus:DI (reg:DI 0 ax [orig:140 _54 ] [140])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":107 222 {*adddi_1}
     (nil))
(insn 154 153 155 6 (set (reg/f:DI 0 ax [256])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -152 [0xffffffffffffff68])) [3 qv+0 S8 A64])) "CALVIS.f":107 85 {*movdi_internal}
     (nil))
(insn 155 154 156 6 (set (reg:SF 23 xmm2 [orig:142 _56 ] [142])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:141 _55 ] [141])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [256])) [2 *qv_144(D) S4 A32])) "CALVIS.f":107 131 {*movsf_internal}
     (nil))
(insn 156 155 157 6 (set (reg:SF 22 xmm1 [257])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC13") [flags 0x2]) [0  S4 A32])) "CALVIS.f":107 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 6.07999980449676513671875e-1 [0x0.9ba5e3p+0])
        (nil)))
(insn 157 156 158 6 (set (reg:SF 23 xmm2 [orig:143 _57 ] [143])
        (mult:SF (reg:SF 23 xmm2 [orig:142 _56 ] [142])
            (reg:SF 22 xmm1 [257]))) "CALVIS.f":107 838 {*fop_sf_comm}
     (nil))
(insn 158 157 159 6 (set (reg:SF 22 xmm1 [258])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC8") [flags 0x2]) [0  S4 A32])) "CALVIS.f":107 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 159 158 161 6 (set (reg:SF 22 xmm1 [orig:144 _58 ] [144])
        (plus:SF (reg:SF 22 xmm1 [258])
            (reg:SF 23 xmm2 [orig:143 _57 ] [143]))) "CALVIS.f":107 838 {*fop_sf_comm}
     (nil))
(insn 161 159 162 6 (set (reg:SF 21 xmm0 [259])
        (mult:SF (reg:SF 21 xmm0 [orig:136 _50 ] [136])
            (reg:SF 22 xmm1 [orig:145 _59 ] [145]))) "CALVIS.f":107 838 {*fop_sf_comm}
     (nil))
(insn 162 161 163 6 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [2 tv+0 S4 A32])
        (reg:SF 21 xmm0 [259])) "CALVIS.f":107 131 {*movsf_internal}
     (nil))
(insn 163 162 164 6 (set (reg:SI 0 ax [260])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALVIS.f":108 86 {*movsi_internal}
     (nil))
(insn 164 163 165 6 (set (reg:DI 0 ax [orig:146 _60 ] [146])
        (sign_extend:DI (reg:SI 0 ax [260]))) "CALVIS.f":108 149 {*extendsidi2_rex64}
     (nil))
(insn 165 164 166 6 (parallel [
            (set (reg:DI 1 dx [orig:147 _61 ] [147])
                (mult:DI (reg:DI 0 ax [orig:146 _60 ] [146])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":108 349 {*muldi3_1}
     (nil))
(insn 166 165 167 6 (set (reg:SI 0 ax [261])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALVIS.f":108 86 {*movsi_internal}
     (nil))
(insn 167 166 168 6 (set (reg:DI 0 ax [orig:148 _62 ] [148])
        (sign_extend:DI (reg:SI 0 ax [261]))) "CALVIS.f":108 149 {*extendsidi2_rex64}
     (nil))
(insn 168 167 169 6 (parallel [
            (set (reg:DI 0 ax [orig:149 _63 ] [149])
                (plus:DI (reg:DI 0 ax [orig:148 _62 ] [148])
                    (reg:DI 1 dx [orig:147 _61 ] [147])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":108 222 {*adddi_1}
     (nil))
(insn 169 168 170 6 (parallel [
            (set (reg:DI 1 dx [orig:150 _64 ] [150])
                (plus:DI (reg:DI 0 ax [orig:149 _63 ] [149])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":108 222 {*adddi_1}
     (nil))
(insn 170 169 171 6 (set (reg/f:DI 0 ax [262])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 16 [0x10])) [3 pp+0 S8 A64])) "CALVIS.f":108 85 {*movdi_internal}
     (nil))
(insn 171 170 172 6 (set (reg:SF 21 xmm0 [orig:151 _65 ] [151])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:150 _64 ] [150])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [262])) [2 *pp_146(D) S4 A32])) "CALVIS.f":108 131 {*movsf_internal}
     (nil))
(insn 172 171 173 6 (set (reg:SF 23 xmm2 [263])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [2 tv+0 S4 A32])) "CALVIS.f":108 131 {*movsf_internal}
     (nil))
(insn 173 172 174 6 (set (reg:SF 22 xmm1 [264])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC14") [flags 0x2]) [0  S4 A32])) "CALVIS.f":108 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 2.87040008544921875e+2 [0x0.8f851fp+9])
        (nil)))
(insn 174 173 176 6 (set (reg:SF 22 xmm1 [orig:152 _66 ] [152])
        (mult:SF (reg:SF 22 xmm1 [264])
            (reg:SF 23 xmm2 [263]))) "CALVIS.f":108 838 {*fop_sf_comm}
     (nil))
(insn 176 174 177 6 (set (reg:SF 21 xmm0 [265])
        (div:SF (reg:SF 21 xmm0 [orig:151 _65 ] [151])
            (reg:SF 22 xmm1 [orig:153 _67 ] [153]))) "CALVIS.f":108 841 {*fop_sf_1}
     (nil))
(insn 177 176 178 6 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -108 [0xffffffffffffff94])) [2 rhoair+0 S4 A32])
        (reg:SF 21 xmm0 [265])) "CALVIS.f":108 131 {*movsf_internal}
     (nil))
(insn 178 177 179 6 (set (reg:SI 0 ax [266])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALVIS.f":145 86 {*movsi_internal}
     (nil))
(insn 179 178 180 6 (set (reg:DI 0 ax [orig:154 _68 ] [154])
        (sign_extend:DI (reg:SI 0 ax [266]))) "CALVIS.f":145 149 {*extendsidi2_rex64}
     (nil))
(insn 180 179 181 6 (parallel [
            (set (reg:DI 1 dx [orig:155 _69 ] [155])
                (mult:DI (reg:DI 0 ax [orig:154 _68 ] [154])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":145 349 {*muldi3_1}
     (nil))
(insn 181 180 182 6 (set (reg:SI 0 ax [267])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALVIS.f":145 86 {*movsi_internal}
     (nil))
(insn 182 181 183 6 (set (reg:DI 0 ax [orig:156 _70 ] [156])
        (sign_extend:DI (reg:SI 0 ax [267]))) "CALVIS.f":145 149 {*extendsidi2_rex64}
     (nil))
(insn 183 182 184 6 (parallel [
            (set (reg:DI 0 ax [orig:157 _71 ] [157])
                (plus:DI (reg:DI 0 ax [orig:156 _70 ] [156])
                    (reg:DI 1 dx [orig:155 _69 ] [155])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":145 222 {*adddi_1}
     (nil))
(insn 184 183 185 6 (parallel [
            (set (reg:DI 1 dx [orig:158 _72 ] [158])
                (plus:DI (reg:DI 0 ax [orig:157 _71 ] [157])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":145 222 {*adddi_1}
     (nil))
(insn 185 184 186 6 (set (reg/f:DI 0 ax [268])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -152 [0xffffffffffffff68])) [3 qv+0 S8 A64])) "CALVIS.f":145 85 {*movdi_internal}
     (nil))
(insn 186 185 187 6 (set (reg:SF 22 xmm1 [orig:159 _73 ] [159])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:158 _72 ] [158])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [268])) [2 *qv_144(D) S4 A32])) "CALVIS.f":145 131 {*movsf_internal}
     (nil))
(insn 187 186 188 6 (set (reg:SF 21 xmm0 [269])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC8") [flags 0x2]) [0  S4 A32])) "CALVIS.f":145 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 188 187 310 6 (set (reg:SF 21 xmm0 [orig:160 _74 ] [160])
        (plus:SF (reg:SF 21 xmm0 [269])
            (reg:SF 22 xmm1 [orig:159 _73 ] [159]))) "CALVIS.f":145 838 {*fop_sf_comm}
     (nil))
(insn 310 188 190 6 (set (reg:SF 22 xmm1 [orig:161 _75 ] [161])
        (reg:SF 21 xmm0 [orig:161 _75 ] [161])) "CALVIS.f":145 131 {*movsf_internal}
     (nil))
(insn 190 310 191 6 (set (reg:SF 22 xmm1 [orig:161 _75 ] [161])
        (div:SF (reg:SF 22 xmm1 [orig:161 _75 ] [161])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -108 [0xffffffffffffff94])) [2 rhoair+0 S4 A32]))) "CALVIS.f":145 841 {*fop_sf_1}
     (nil))
(insn 191 190 192 6 (set (reg:SF 21 xmm0 [270])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [2 qclw+0 S4 A32])) "CALVIS.f":145 131 {*movsf_internal}
     (nil))
(insn 192 191 194 6 (set (reg:SF 21 xmm0 [orig:163 _77 ] [163])
        (plus:SF (reg:SF 21 xmm0 [270])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -88 [0xffffffffffffffa8])) [2 qrain+0 S4 A32]))) "CALVIS.f":145 838 {*fop_sf_comm}
     (nil))
(insn 194 192 195 6 (set (reg:SF 21 xmm0 [orig:165 _79 ] [165])
        (div:SF (reg:SF 21 xmm0 [orig:164 _78 ] [164])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -76 [0xffffffffffffffb4])) [2 rhowat+0 S4 A32]))) "CALVIS.f":145 841 {*fop_sf_1}
     (nil))
(insn 195 194 196 6 (set (reg:SF 22 xmm1 [orig:166 _80 ] [166])
        (plus:SF (reg:SF 22 xmm1 [orig:162 _76 ] [162])
            (reg:SF 21 xmm0 [orig:165 _79 ] [165]))) "CALVIS.f":145 838 {*fop_sf_comm}
     (nil))
(insn 196 195 197 6 (set (reg:SF 21 xmm0 [271])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -100 [0xffffffffffffff9c])) [2 qclice+0 S4 A32])) "CALVIS.f":145 131 {*movsf_internal}
     (nil))
(insn 197 196 199 6 (set (reg:SF 21 xmm0 [orig:167 _81 ] [167])
        (plus:SF (reg:SF 21 xmm0 [271])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -92 [0xffffffffffffffa4])) [2 qsnow+0 S4 A32]))) "CALVIS.f":145 838 {*fop_sf_comm}
     (nil))
(insn 199 197 200 6 (set (reg:SF 21 xmm0 [orig:169 _83 ] [169])
        (div:SF (reg:SF 21 xmm0 [orig:168 _82 ] [168])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -72 [0xffffffffffffffb8])) [2 rhoice+0 S4 A32]))) "CALVIS.f":145 841 {*fop_sf_1}
     (nil))
(insn 200 199 201 6 (set (reg:SF 21 xmm0 [272])
        (plus:SF (reg:SF 21 xmm0 [orig:169 _83 ] [169])
            (reg:SF 22 xmm1 [orig:166 _80 ] [166]))) "CALVIS.f":145 838 {*fop_sf_comm}
     (nil))
(insn 201 200 202 6 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [2 vovermd+0 S4 A32])
        (reg:SF 21 xmm0 [272])) "CALVIS.f":145 131 {*movsf_internal}
     (nil))
(insn 202 201 312 6 (set (reg:SF 21 xmm0 [273])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [2 qclw+0 S4 A32])) "CALVIS.f":146 131 {*movsf_internal}
     (nil))
(insn 312 202 203 6 (set (reg:SF 22 xmm1 [273])
        (reg:SF 21 xmm0 [273])) "CALVIS.f":146 131 {*movsf_internal}
     (nil))
(insn 203 312 204 6 (set (reg:SF 22 xmm1 [273])
        (div:SF (reg:SF 22 xmm1 [273])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -112 [0xffffffffffffff90])) [2 vovermd+0 S4 A32]))) "CALVIS.f":146 841 {*fop_sf_1}
     (nil))
(insn 204 203 205 6 (set (reg:SF 21 xmm0 [275])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC12") [flags 0x2]) [0  S4 A32])) "CALVIS.f":146 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+3 [0x0.fap+10])
        (nil)))
(insn 205 204 206 6 (set (reg:SF 21 xmm0 [274])
        (mult:SF (reg:SF 21 xmm0 [275])
            (reg:SF 22 xmm1 [orig:170 _84 ] [170]))) "CALVIS.f":146 838 {*fop_sf_comm}
     (nil))
(insn 206 205 207 6 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -116 [0xffffffffffffff8c])) [2 conclc+0 S4 A32])
        (reg:SF 21 xmm0 [274])) "CALVIS.f":146 131 {*movsf_internal}
     (nil))
(insn 207 206 314 6 (set (reg:SF 21 xmm0 [276])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [2 qrain+0 S4 A32])) "CALVIS.f":147 131 {*movsf_internal}
     (nil))
(insn 314 207 208 6 (set (reg:SF 22 xmm1 [276])
        (reg:SF 21 xmm0 [276])) "CALVIS.f":147 131 {*movsf_internal}
     (nil))
(insn 208 314 209 6 (set (reg:SF 22 xmm1 [276])
        (div:SF (reg:SF 22 xmm1 [276])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -112 [0xffffffffffffff90])) [2 vovermd+0 S4 A32]))) "CALVIS.f":147 841 {*fop_sf_1}
     (nil))
(insn 209 208 210 6 (set (reg:SF 21 xmm0 [278])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC12") [flags 0x2]) [0  S4 A32])) "CALVIS.f":147 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+3 [0x0.fap+10])
        (nil)))
(insn 210 209 211 6 (set (reg:SF 21 xmm0 [277])
        (mult:SF (reg:SF 21 xmm0 [278])
            (reg:SF 22 xmm1 [orig:171 _85 ] [171]))) "CALVIS.f":147 838 {*fop_sf_comm}
     (nil))
(insn 211 210 212 6 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 conclp+0 S4 A32])
        (reg:SF 21 xmm0 [277])) "CALVIS.f":147 131 {*movsf_internal}
     (nil))
(insn 212 211 316 6 (set (reg:SF 21 xmm0 [279])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -100 [0xffffffffffffff9c])) [2 qclice+0 S4 A32])) "CALVIS.f":148 131 {*movsf_internal}
     (nil))
(insn 316 212 213 6 (set (reg:SF 22 xmm1 [279])
        (reg:SF 21 xmm0 [279])) "CALVIS.f":148 131 {*movsf_internal}
     (nil))
(insn 213 316 214 6 (set (reg:SF 22 xmm1 [279])
        (div:SF (reg:SF 22 xmm1 [279])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -112 [0xffffffffffffff90])) [2 vovermd+0 S4 A32]))) "CALVIS.f":148 841 {*fop_sf_1}
     (nil))
(insn 214 213 215 6 (set (reg:SF 21 xmm0 [281])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC12") [flags 0x2]) [0  S4 A32])) "CALVIS.f":148 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+3 [0x0.fap+10])
        (nil)))
(insn 215 214 216 6 (set (reg:SF 21 xmm0 [280])
        (mult:SF (reg:SF 21 xmm0 [281])
            (reg:SF 22 xmm1 [orig:172 _86 ] [172]))) "CALVIS.f":148 838 {*fop_sf_comm}
     (nil))
(insn 216 215 217 6 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -124 [0xffffffffffffff84])) [2 concfc+0 S4 A32])
        (reg:SF 21 xmm0 [280])) "CALVIS.f":148 131 {*movsf_internal}
     (nil))
(insn 217 216 318 6 (set (reg:SF 21 xmm0 [282])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -92 [0xffffffffffffffa4])) [2 qsnow+0 S4 A32])) "CALVIS.f":149 131 {*movsf_internal}
     (nil))
(insn 318 217 218 6 (set (reg:SF 22 xmm1 [282])
        (reg:SF 21 xmm0 [282])) "CALVIS.f":149 131 {*movsf_internal}
     (nil))
(insn 218 318 219 6 (set (reg:SF 22 xmm1 [282])
        (div:SF (reg:SF 22 xmm1 [282])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -112 [0xffffffffffffff90])) [2 vovermd+0 S4 A32]))) "CALVIS.f":149 841 {*fop_sf_1}
     (nil))
(insn 219 218 220 6 (set (reg:SF 21 xmm0 [284])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC12") [flags 0x2]) [0  S4 A32])) "CALVIS.f":149 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+3 [0x0.fap+10])
        (nil)))
(insn 220 219 221 6 (set (reg:SF 21 xmm0 [283])
        (mult:SF (reg:SF 21 xmm0 [284])
            (reg:SF 22 xmm1 [orig:173 _87 ] [173]))) "CALVIS.f":149 838 {*fop_sf_comm}
     (nil))
(insn 221 220 222 6 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -128 [0xffffffffffffff80])) [2 concfp+0 S4 A32])
        (reg:SF 21 xmm0 [283])) "CALVIS.f":149 131 {*movsf_internal}
     (nil))
(insn 222 221 223 6 (set (reg:SF 21 xmm0 [orig:199 _153 ] [199])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -124 [0xffffffffffffff84])) [2 concfc+0 S4 A32])) "CALVIS.f":153 131 {*movsf_internal}
     (nil))
(insn 223 222 320 6 (set (reg:SF 27 xmm6 [orig:200 _154 ] [200])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -128 [0xffffffffffffff80])) [2 concfp+0 S4 A32])) "CALVIS.f":153 131 {*movsf_internal}
     (nil))
(insn 320 223 346 6 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [5 %sfp+-184 S4 A32])
        (reg:SF 27 xmm6 [orig:200 _154 ] [200])) "CALVIS.f":153 131 {*movsf_internal}
     (nil))
(note 346 320 338 6 NOTE_INSN_DELETED)
(note 338 346 224 6 NOTE_INSN_DELETED)
(insn 224 338 321 6 (set (reg:SF 28 xmm7 [orig:201 _155 ] [201])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -116 [0xffffffffffffff8c])) [2 conclc+0 S4 A32])) "CALVIS.f":153 131 {*movsf_internal}
     (nil))
(insn 321 224 345 6 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -204 [0xffffffffffffff34])) [5 %sfp+-188 S4 A32])
        (reg:SF 28 xmm7 [orig:201 _155 ] [201])) "CALVIS.f":153 131 {*movsf_internal}
     (nil))
(note 345 321 337 6 NOTE_INSN_DELETED)
(note 337 345 225 6 NOTE_INSN_DELETED)
(insn 225 337 322 6 (set (reg:SF 24 xmm3 [orig:202 _156 ] [202])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 conclp+0 S4 A32])) "CALVIS.f":153 131 {*movsf_internal}
     (nil))
(insn 322 225 344 6 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -208 [0xffffffffffffff30])) [5 %sfp+-192 S4 A32])
        (reg:SF 24 xmm3 [orig:202 _156 ] [202])) "CALVIS.f":153 131 {*movsf_internal}
     (nil))
(note 344 322 336 6 NOTE_INSN_DELETED)
(note 336 344 226 6 NOTE_INSN_DELETED)
(insn 226 336 229 6 (set (reg:SF 22 xmm1 [285])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [2 exponfc+0 S4 A32])) "CALVIS.f":153 131 {*movsf_internal}
     (nil))
(call_insn/u 229 226 323 6 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("powf") [flags 0x41]  <function_decl 0x7f0ebdbcf100 __builtin_powf>) [0 __builtin_powf S1 A8])
            (const_int 0 [0]))) "CALVIS.f":153 700 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (expr_list:SF (use (reg:SF 22 xmm1))
            (nil))))
(insn 323 229 231 6 (set (reg:SF 25 xmm4 [orig:174 _88 ] [174])
        (reg:SF 21 xmm0 [orig:174 _88 ] [174])) "CALVIS.f":153 131 {*movsf_internal}
     (nil))
(insn 231 323 324 6 (set (reg:SF 25 xmm4 [orig:174 _88 ] [174])
        (mult:SF (reg:SF 25 xmm4 [orig:174 _88 ] [174])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -44 [0xffffffffffffffd4])) [2 coeffc+0 S4 A32]))) "CALVIS.f":153 838 {*fop_sf_comm}
     (nil))
(insn 324 231 343 6 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -196 [0xffffffffffffff3c])) [5 %sfp+-180 S4 A32])
        (reg:SF 25 xmm4 [orig:174 _88 ] [174])) "CALVIS.f":153 131 {*movsf_internal}
     (nil))
(note 343 324 335 6 NOTE_INSN_DELETED)
(note 335 343 232 6 NOTE_INSN_DELETED)
(insn 232 335 233 6 (set (reg:SF 21 xmm0 [286])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [2 exponfp+0 S4 A32])) "CALVIS.f":153 131 {*movsf_internal}
     (nil))
(insn 233 232 234 6 (set (reg:SF 22 xmm1)
        (reg:SF 21 xmm0 [286])) "CALVIS.f":153 131 {*movsf_internal}
     (nil))
(insn 234 233 235 6 (set (reg:SF 21 xmm0)
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [5 %sfp+-184 S4 A32])) "CALVIS.f":153 131 {*movsf_internal}
     (nil))
(call_insn/u 235 234 237 6 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("powf") [flags 0x41]  <function_decl 0x7f0ebdbcf100 __builtin_powf>) [0 __builtin_powf S1 A8])
            (const_int 0 [0]))) "CALVIS.f":153 700 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (expr_list:SF (use (reg:SF 22 xmm1))
            (nil))))
(insn 237 235 325 6 (set (reg:SF 21 xmm0 [orig:177 _91 ] [177])
        (mult:SF (reg:SF 21 xmm0 [orig:176 _90 ] [176])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -48 [0xffffffffffffffd0])) [2 coeffp+0 S4 A32]))) "CALVIS.f":153 838 {*fop_sf_comm}
     (nil))
(insn 325 237 327 6 (set (reg:SF 26 xmm5 [orig:177 _91 ] [177])
        (reg:SF 21 xmm0 [orig:177 _91 ] [177])) "CALVIS.f":153 131 {*movsf_internal}
     (nil))
(note 327 325 340 6 NOTE_INSN_DELETED)
(note 340 327 238 6 NOTE_INSN_DELETED)
(insn 238 340 326 6 (set (reg:SF 26 xmm5 [orig:177 _91 ] [177])
        (plus:SF (reg:SF 26 xmm5 [orig:177 _91 ] [177])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -196 [0xffffffffffffff3c])) [5 %sfp+-180 S4 A32]))) "CALVIS.f":153 838 {*fop_sf_comm}
     (nil))
(insn 326 238 342 6 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -196 [0xffffffffffffff3c])) [5 %sfp+-180 S4 A32])
        (reg:SF 26 xmm5 [orig:177 _91 ] [177])) "CALVIS.f":153 131 {*movsf_internal}
     (nil))
(note 342 326 334 6 NOTE_INSN_DELETED)
(note 334 342 239 6 NOTE_INSN_DELETED)
(insn 239 334 240 6 (set (reg:SF 21 xmm0 [287])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 exponlc+0 S4 A32])) "CALVIS.f":153 131 {*movsf_internal}
     (nil))
(insn 240 239 241 6 (set (reg:SF 22 xmm1)
        (reg:SF 21 xmm0 [287])) "CALVIS.f":153 131 {*movsf_internal}
     (nil))
(insn 241 240 242 6 (set (reg:SF 21 xmm0)
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -204 [0xffffffffffffff34])) [5 %sfp+-188 S4 A32])) "CALVIS.f":153 131 {*movsf_internal}
     (nil))
(call_insn/u 242 241 244 6 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("powf") [flags 0x41]  <function_decl 0x7f0ebdbcf100 __builtin_powf>) [0 __builtin_powf S1 A8])
            (const_int 0 [0]))) "CALVIS.f":153 700 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (expr_list:SF (use (reg:SF 22 xmm1))
            (nil))))
(insn 244 242 328 6 (set (reg:SF 21 xmm0 [orig:180 _94 ] [180])
        (mult:SF (reg:SF 21 xmm0 [orig:179 _93 ] [179])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -36 [0xffffffffffffffdc])) [2 coeflc+0 S4 A32]))) "CALVIS.f":153 838 {*fop_sf_comm}
     (nil))
(insn 328 244 330 6 (set (reg:SF 24 xmm3 [orig:180 _94 ] [180])
        (reg:SF 21 xmm0 [orig:180 _94 ] [180])) "CALVIS.f":153 131 {*movsf_internal}
     (nil))
(note 330 328 339 6 NOTE_INSN_DELETED)
(note 339 330 245 6 NOTE_INSN_DELETED)
(insn 245 339 329 6 (set (reg:SF 24 xmm3 [orig:180 _94 ] [180])
        (plus:SF (reg:SF 24 xmm3 [orig:180 _94 ] [180])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -196 [0xffffffffffffff3c])) [5 %sfp+-180 S4 A32]))) "CALVIS.f":153 838 {*fop_sf_comm}
     (nil))
(insn 329 245 341 6 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -196 [0xffffffffffffff3c])) [5 %sfp+-180 S4 A32])
        (reg:SF 24 xmm3 [orig:180 _94 ] [180])) "CALVIS.f":153 131 {*movsf_internal}
     (nil))
(note 341 329 333 6 NOTE_INSN_DELETED)
(note 333 341 246 6 NOTE_INSN_DELETED)
(insn 246 333 247 6 (set (reg:SF 21 xmm0 [288])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 exponlp+0 S4 A32])) "CALVIS.f":153 131 {*movsf_internal}
     (nil))
(insn 247 246 248 6 (set (reg:SF 22 xmm1)
        (reg:SF 21 xmm0 [288])) "CALVIS.f":153 131 {*movsf_internal}
     (nil))
(insn 248 247 249 6 (set (reg:SF 21 xmm0)
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -208 [0xffffffffffffff30])) [5 %sfp+-192 S4 A32])) "CALVIS.f":153 131 {*movsf_internal}
     (nil))
(call_insn/u 249 248 251 6 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("powf") [flags 0x41]  <function_decl 0x7f0ebdbcf100 __builtin_powf>) [0 __builtin_powf S1 A8])
            (const_int 0 [0]))) "CALVIS.f":153 700 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (expr_list:SF (use (reg:SF 22 xmm1))
            (nil))))
(insn 251 249 331 6 (set (reg:SF 21 xmm0 [orig:183 _97 ] [183])
        (mult:SF (reg:SF 21 xmm0 [orig:182 _96 ] [182])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -40 [0xffffffffffffffd8])) [2 coeflp+0 S4 A32]))) "CALVIS.f":153 838 {*fop_sf_comm}
     (nil))
(insn 331 251 252 6 (set (reg:SF 22 xmm1 [orig:181 _95 ] [181])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -196 [0xffffffffffffff3c])) [5 %sfp+-180 S4 A32])) "CALVIS.f":153 131 {*movsf_internal}
     (nil))
(insn 252 331 253 6 (set (reg:SF 22 xmm1 [orig:181 _95 ] [181])
        (plus:SF (reg:SF 22 xmm1 [orig:181 _95 ] [181])
            (reg:SF 21 xmm0 [orig:183 _97 ] [183]))) "CALVIS.f":153 838 {*fop_sf_comm}
     (nil))
(insn 253 252 254 6 (set (reg:SF 21 xmm0 [290])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC15") [flags 0x2]) [0  S4 A32])) "CALVIS.f":153 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.00000001335143196001808973960578441619873046875e-10 [0x0.dbe6ffp-33])
        (nil)))
(insn 254 253 255 6 (set (reg:SF 21 xmm0 [289])
        (plus:SF (reg:SF 21 xmm0 [290])
            (reg:SF 22 xmm1 [orig:184 _98 ] [184]))) "CALVIS.f":153 838 {*fop_sf_comm}
     (nil))
(insn 255 254 256 6 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -132 [0xffffffffffffff7c])) [2 betav+0 S4 A32])
        (reg:SF 21 xmm0 [289])) "CALVIS.f":153 131 {*movsf_internal}
     (nil))
(insn 256 255 257 6 (set (reg:SF 21 xmm0 [orig:194 M.0_110 ] [194])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC16") [flags 0x2]) [0  S4 A32])) "CALVIS.f":154 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 8.0e+1 [0x0.ap+7])
        (nil)))
(insn 257 256 258 6 (set (reg:SF 22 xmm1 [291])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -68 [0xffffffffffffffbc])) [2 const1+0 S4 A32])) "CALVIS.f":154 131 {*movsf_internal}
     (nil))
(insn 258 257 259 6 (set (reg:SF 22 xmm1 [orig:203 _159 ] [203])
        (div:SF (reg:SF 22 xmm1 [291])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -132 [0xffffffffffffff7c])) [2 betav+0 S4 A32]))) "CALVIS.f":154 841 {*fop_sf_1}
     (nil))
(insn 259 258 260 6 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [orig:194 M.0_110 ] [194])
            (reg:SF 22 xmm1 [orig:203 _159 ] [203]))) "CALVIS.f":154 53 {*cmpisf}
     (nil))
(insn 260 259 261 6 (set (reg:QI 0 ax [293])
        (gt:QI (reg:CCFP 17 flags)
            (const_int 0 [0]))) "CALVIS.f":154 678 {*setcc_qi}
     (nil))
(insn 261 260 262 6 (set (reg:SI 1 dx [orig:185 _99 ] [185])
        (zero_extend:SI (reg:QI 0 ax [293]))) "CALVIS.f":154 140 {*zero_extendqisi2}
     (nil))
(insn 262 261 263 6 (set (reg:CCFP 17 flags)
        (unspec:CCFP [
                (compare:CCFP (reg:SF 21 xmm0 [orig:194 M.0_110 ] [194])
                    (reg:SF 21 xmm0 [orig:194 M.0_110 ] [194]))
            ] UNSPEC_NOTRAP)) "CALVIS.f":154 54 {*cmpiusf}
     (nil))
(insn 263 262 264 6 (set (reg:QI 0 ax [294])
        (unordered:QI (reg:CCFP 17 flags)
            (const_int 0 [0]))) "CALVIS.f":154 678 {*setcc_qi}
     (nil))
(insn 264 263 265 6 (set (reg:SI 0 ax [orig:186 _100 ] [186])
        (zero_extend:SI (reg:QI 0 ax [294]))) "CALVIS.f":154 140 {*zero_extendqisi2}
     (nil))
(insn 265 264 266 6 (parallel [
            (set (reg:SI 0 ax [orig:187 _101 ] [187])
                (ior:SI (reg:SI 0 ax [orig:186 _100 ] [186])
                    (reg:SI 1 dx [orig:185 _99 ] [185])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":154 450 {*iorsi_1}
     (nil))
(insn 266 265 267 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:187 _101 ] [187])
            (const_int 0 [0]))) "CALVIS.f":154 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 267 266 268 6 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 269)
            (pc))) "CALVIS.f":154 682 {*jcc}
     (nil)
 -> 269)
;;  succ:       7 (FALLTHRU)
;;              8
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 194 196 203

;; basic block 7, loop depth 0, maybe hot
;;  prev block 6, next block 8, flags: (RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 196 203
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 203
;; lr  def 	 194
(note 268 267 9 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 9 268 269 7 (set (reg:SF 21 xmm0 [orig:194 M.0_110 ] [194])
        (reg:SF 22 xmm1 [orig:203 _159 ] [203])) "CALVIS.f":154 131 {*movsf_internal}
     (nil))
;;  succ:       8 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 194 196

;; basic block 8, loop depth 0, maybe hot
;;  prev block 7, next block 12, flags: (RTL, MODIFIED)
;;  pred:       6
;;              7 (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 194 196
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 194
;; lr  def 	 17 [flags] 188 189 190 191 192 193 295 296 297 298
(code_label 269 9 270 8 4 (nil) [1 uses])
(note 270 269 271 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 271 270 272 8 (set (reg:SI 0 ax [295])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALVIS.f":154 86 {*movsi_internal}
     (nil))
(insn 272 271 273 8 (set (reg:DI 0 ax [orig:188 _102 ] [188])
        (sign_extend:DI (reg:SI 0 ax [295]))) "CALVIS.f":154 149 {*extendsidi2_rex64}
     (nil))
(insn 273 272 274 8 (parallel [
            (set (reg:DI 1 dx [orig:189 _103 ] [189])
                (mult:DI (reg:DI 0 ax [orig:188 _102 ] [188])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":154 349 {*muldi3_1}
     (nil))
(insn 274 273 275 8 (set (reg:SI 0 ax [296])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALVIS.f":154 86 {*movsi_internal}
     (nil))
(insn 275 274 276 8 (set (reg:DI 0 ax [orig:190 _104 ] [190])
        (sign_extend:DI (reg:SI 0 ax [296]))) "CALVIS.f":154 149 {*extendsidi2_rex64}
     (nil))
(insn 276 275 277 8 (parallel [
            (set (reg:DI 0 ax [orig:191 _105 ] [191])
                (plus:DI (reg:DI 0 ax [orig:190 _104 ] [190])
                    (reg:DI 1 dx [orig:189 _103 ] [189])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":154 222 {*adddi_1}
     (nil))
(insn 277 276 278 8 (parallel [
            (set (reg:DI 1 dx [orig:192 _106 ] [192])
                (plus:DI (reg:DI 0 ax [orig:191 _105 ] [191])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":154 222 {*adddi_1}
     (nil))
(insn 278 277 279 8 (set (reg:SF 22 xmm1 [297])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC12") [flags 0x2]) [0  S4 A32])) "CALVIS.f":154 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+3 [0x0.fap+10])
        (nil)))
(insn 279 278 280 8 (set (reg:SF 21 xmm0 [orig:193 _107 ] [193])
        (mult:SF (reg:SF 21 xmm0 [orig:194 M.0_110 ] [194])
            (reg:SF 22 xmm1 [297]))) "CALVIS.f":154 838 {*fop_sf_comm}
     (nil))
(insn 280 279 281 8 (set (reg/f:DI 0 ax [298])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 24 [0x18])) [3 vis+0 S8 A64])) "CALVIS.f":154 85 {*movdi_internal}
     (nil))
(insn 281 280 282 8 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:192 _106 ] [192])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [298])) [2 *vis_161(D) S4 A32])
        (reg:SF 21 xmm0 [orig:193 _107 ] [193])) "CALVIS.f":154 131 {*movsf_internal}
     (nil))
(insn 282 281 299 8 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":83 221 {*addsi_1}
     (nil))
(jump_insn 299 282 300 8 (set (pc)
        (label_ref 283)) "CALVIS.f":83 683 {jump}
     (nil)
 -> 283)
;;  succ:       5 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 196

(barrier 300 299 307)
;; basic block 12, loop depth 0, maybe hot
;;  prev block 8, next block 9, flags: (RTL, MODIFIED)
;;  pred:       5
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 196
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 307 300 306 12 9 (nil) [1 uses])
(note 306 307 308 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 308 306 286 12 (const_int 0 [0]) "CALVIS.f":154 718 {nop}
     (nil))
;;  succ:       9 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 196

;; basic block 9, loop depth 0, maybe hot
;;  prev block 12, next block 11, flags: (RTL, MODIFIED)
;;  pred:       12 [always]  (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 196
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 286 308 287 9 3 (nil) [0 uses])
(note 287 286 288 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 288 287 301 9 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALVIS.f":82 221 {*addsi_1}
     (nil))
(jump_insn 301 288 302 9 (set (pc)
        (label_ref 289)) "CALVIS.f":82 683 {jump}
     (nil)
 -> 289)
;;  succ:       3 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 196

(barrier 302 301 304)
;; basic block 11, loop depth 0, maybe hot
;;  prev block 9, next block 10, flags: (RTL, MODIFIED)
;;  pred:       3
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 304 302 303 11 8 (nil) [1 uses])
(note 303 304 305 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 305 303 292 11 (const_int 0 [0]) "CALVIS.f":83 718 {nop}
     (nil))
;;  succ:       10 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 10, loop depth 0, maybe hot
;;  prev block 11, next block 1, flags: (RTL, MODIFIED)
;;  pred:       11 [always]  (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 292 305 293 10 2 (nil) [0 uses])
(note 293 292 298 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 298 293 309 10 (const_int 0 [0]) "CALVIS.f":158 718 {nop}
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(note 309 298 0 NOTE_INSN_DELETED)
