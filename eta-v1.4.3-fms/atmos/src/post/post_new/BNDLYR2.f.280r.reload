
;; Function bndlyr2 (bndlyr2_, funcdef_no=0, decl_uid=3777, cgraph_uid=0, symbol_order=0)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=208, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 20 to 7 (offset=176, prev_offset=0)
Can eliminate 20 to 6 (offset=-16, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 3:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 4:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 5:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 6:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 7:  (0) m  (1) re {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 11:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 12:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 14:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 15:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 17:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 18:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 19:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 20:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 23:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 25:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 27:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 28:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 31:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 32:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 33:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 34:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 35:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 36
	 Choosing alt 0 in insn 36:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 37:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 38:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 39:  (0) v  (1) m {*movsf_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 40:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 41:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 42:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 43:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 44:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 45:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 46:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 47
	 Choosing alt 0 in insn 47:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 48:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 49
	 Choosing alt 1 in insn 49:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 50:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 51:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 52:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 58:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 64:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 66:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 67:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 68:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 69:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 72:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 73:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 74:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 76:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 77:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 78:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 79:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 82:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 84:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 85:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 86:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 87:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 90:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 91:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 92:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 93:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 94:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 95:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 96:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 97:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 98:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 99:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 100
	 Choosing alt 0 in insn 100:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 101:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 102:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 103:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 104:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 105:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 106:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 107:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 108:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 109:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 110:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 111:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 112:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 113
	 Choosing alt 0 in insn 113:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 114:  (0) r  (1) r  (2) le {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 115:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 116:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 117:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 118:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 119:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 125:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 131:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 137:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 139:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 140:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 141:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 142:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 145:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 146:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 147:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 149:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 150:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 151:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 152:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 155:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 157:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 158:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 159:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 160:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 163:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 164:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 165:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 166:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 167:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 168:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 169:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 170:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 171:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 172
	 Choosing alt 0 in insn 172:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 173:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 174:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 175:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 176:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 177:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 178:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 179:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 180:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 181:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 182:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 183:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 184:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 185:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 186
	 Choosing alt 0 in insn 186:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 187:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 188:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 189:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 190:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 191:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 192:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 193:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 194:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 195:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 196:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 197:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 198:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 199:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 200
	 Choosing alt 0 in insn 200:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 201:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 202:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 203:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 204:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 205:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 206:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 207:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 208:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 209:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 210:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 211:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 212:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 213:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 214
	 Choosing alt 0 in insn 214:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 215:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 216:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 217:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 218:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 219:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 220:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 221:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 222:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 223:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 224:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 225:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 226:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 227:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 228
	 Choosing alt 0 in insn 228:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 229:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 230:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 231:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 232:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 233:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 234:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 235:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 236:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 237:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 238:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 239:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 240:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 241:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 242
	 Choosing alt 0 in insn 242:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 243:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 244:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 245:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 246:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 247:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 248:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 249:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 250:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 251:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 252:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 253:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 254:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 255:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 256
	 Choosing alt 0 in insn 256:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 257:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 258:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 259:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 260:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 261:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 262:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 263:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 264:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 265:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 266:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 267:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 268:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 269:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 270
	 Choosing alt 0 in insn 270:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 271:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 272:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 273:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 274:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 275:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 276:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 277:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 278:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 279:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 280:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 281:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 282:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 283:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 284
	 Choosing alt 0 in insn 284:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 285:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 286:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 287:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 288:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 289:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 290:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 291:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 292:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 293:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 294:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 295:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 296:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 297
	 Choosing alt 0 in insn 297:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 298:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 299:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 300:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 301:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 302:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 303:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 304:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 305:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 306:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 307:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 308:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 309:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 310:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 311
	 Choosing alt 0 in insn 311:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 312:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 313:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 314:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 315:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 316:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 317:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 318:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 319:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 320:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 321:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 322:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 323:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 324:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 325
	 Choosing alt 0 in insn 325:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 326:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 327:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 328:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 329:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 330:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 331:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 332:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 333:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 334:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 335:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 336:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 337:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 338:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 339
	 Choosing alt 0 in insn 339:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 340:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 341:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 342:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 343:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 344:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 350:  (0) rm  (1) 0  (2) re {*addsi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 356:  (0) r  (1) i {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 358:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 360:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 362:  (1) rBwBz {*call_value}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 365:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 367:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 368:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 369:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 370:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 373:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 374:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 375:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 377:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 378:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 379:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 380:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 383:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 385:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 386:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 387:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 388:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 391:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 392:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 393:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 394:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 395:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 396
	 Choosing alt 0 in insn 396:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 397:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 398:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 399:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 400:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 401:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 404:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 405:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 406:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 407:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 408:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 409
	 Choosing alt 0 in insn 409:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 410:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 411:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 412:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 413:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 414:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 415:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 416:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 417:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 418:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 419:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 420:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 421:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 422:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 423
	 Choosing alt 0 in insn 423:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 424:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 425:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 426:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 427:  (0) v  (1) vm {*cmpisf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 433:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 434:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 435:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 436:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 437:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 438:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 439:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 440:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 441:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 442
	 Choosing alt 0 in insn 442:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 443:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 444:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 445:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 446:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 447:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 448:  (0) v  (1) vm {*cmpisf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 454:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 455:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 456:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 457:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 458:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 459
	 Choosing alt 0 in insn 459:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 460:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 461:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 462:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 463:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 468:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 469:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 470:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 471:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 472:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 473:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 474:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 475:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 476:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 477
	 Choosing alt 0 in insn 477:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 478:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 479:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 480:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 481:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 482:  (0) v  (1) vm {*cmpisf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 488:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 489:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 490:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 491:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 492:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 493
	 Choosing alt 0 in insn 493:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 494:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 495:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 496:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 497:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 502:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 503:  (0) v  (1) vm {*cmpiusf}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 505:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 506:  (0) v  (1) vm {*cmpiusf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 512:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 513:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 514:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 515:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 516:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 517
	 Choosing alt 0 in insn 517:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 518:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 519:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 520:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 521:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 526:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 527:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 528:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 529:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 530:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 531
	 Choosing alt 0 in insn 531:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 532:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 533:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 534:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 535:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 540:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 541:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 542:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 543:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 544:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 545:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 546:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 547:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 548:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 549
	 Choosing alt 0 in insn 549:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 550:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 551:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 552:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 553:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 554:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 555:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 556:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 557:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 558:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 559:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 560:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 561:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 562:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 563
	 Choosing alt 0 in insn 563:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 564:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 565:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 566:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 567
	 Choosing alt 1 in insn 567:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 569:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 570
	 Choosing alt 1 in insn 570:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 571:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 572:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 573:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 574:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 575:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 576:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 577:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 578:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 579:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 580:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 581
	 Choosing alt 0 in insn 581:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 582:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 583:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 584:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 585:  (0) v  (1) vm {*cmpisf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 591:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 592:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 593:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 594:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 595:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 596:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 597:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 598:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 599:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 600:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 601
	 Choosing alt 0 in insn 601:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 602:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 603:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 604:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 605:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 606:  (0) v  (1) vm {*cmpisf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 612:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 613:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 614:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 615:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 616:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 617:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 618:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 619:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 620:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 621:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 622
	 Choosing alt 0 in insn 622:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 623:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 624:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 625:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 626:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 627:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 628:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 629:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 630:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 631:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 632:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 633:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 634:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 635
	 Choosing alt 0 in insn 635:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 636:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 637:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 638:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 639:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 640:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 641:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 642:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 643:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 644:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 645:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 646:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 647:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 648:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 649:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 650
	 Choosing alt 0 in insn 650:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 651:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 652:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 653:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 654:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 655:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 656:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 657:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 658:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 659:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 660:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 661:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 662:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 663
	 Choosing alt 0 in insn 663:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 664:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 665:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 666:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 667:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 668:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 669:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 670:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 671:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 672:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 673:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 674:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 675:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 676:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 677
	 Choosing alt 0 in insn 677:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 678:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 679:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 680:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 681:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 682:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 683:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 684:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 685:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 686:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 687:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 688:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 689:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 690
	 Choosing alt 0 in insn 690:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 691:  (0) r  (1) r  (2) le {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 692:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 693
	 Choosing alt 1 in insn 693:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 694:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 695:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 696:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 697:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 698:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 699:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 700:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 701:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 702:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 703:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 704:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 705
	 Choosing alt 0 in insn 705:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 706:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 707:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 708:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 709:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 710:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 711:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 712:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 713:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 714:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 715:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 716:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 717:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 718
	 Choosing alt 0 in insn 718:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 719:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 720:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 721:  (0) =r  (1) %0  (2) rme {*addsi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 722:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 723:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 724:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 725:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 726:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 727:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 728:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 729:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 730:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 731:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 732:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 733
	 Choosing alt 0 in insn 733:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 734:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 735:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 736:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 737:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 738:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 739:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 740:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 741:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 742:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 743:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 744:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 745:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 746
	 Choosing alt 0 in insn 746:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 747:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 748:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 749:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 750:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 751:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 752:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 753:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 754:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 755:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 756:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 757:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 758:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 759:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 760:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 761
	 Choosing alt 0 in insn 761:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 762:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 763
	 Choosing alt 1 in insn 763:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 764:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 765:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 766:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 767:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 768:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 769:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 770:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 771:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 772:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 773:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 774:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 775
	 Choosing alt 0 in insn 775:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 776:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 777:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 778:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 779:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 780:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 781:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 782:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 783:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 784:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 785:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 786:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 787:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 788
	 Choosing alt 0 in insn 788:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 789:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 790:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 791:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 792:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 793:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 794:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 795:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 796:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 797:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 798:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 799:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 800:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 801:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 802:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 803
	 Choosing alt 0 in insn 803:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 804:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 805
	 Choosing alt 1 in insn 805:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 806:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 807:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 808:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 809:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 810:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 811:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 812:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 813:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 814:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 815:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 816:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 817
	 Choosing alt 0 in insn 817:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 818:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 819:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 820:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 821:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 822:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 823:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 824:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 825:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 826:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 827:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 828:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 829:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 830
	 Choosing alt 0 in insn 830:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 831:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 832:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 833:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 834:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 835:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 836:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 837:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 838:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 839:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 840:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 841:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 842:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 843:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 844
	 Choosing alt 0 in insn 844:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 845:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 846
	 Choosing alt 1 in insn 846:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 847:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 848:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 849:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 850:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 851:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 852:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 853:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 854:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 855:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 856:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 857:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 858
	 Choosing alt 0 in insn 858:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 859:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 860:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 861:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 862:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 863:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 864:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 865:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 866:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 867:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 868:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 869:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 870:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 871
	 Choosing alt 0 in insn 871:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 872:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 873:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 874:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 875:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 876:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 877:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 878:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 879:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 880:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 881:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 882:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 883:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 884:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 885
	 Choosing alt 0 in insn 885:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 886:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 887:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 888:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 889
	 Choosing alt 1 in insn 889:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=6,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 891:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=2384 from oldreg=506, assigning class SSE_REGS to r2384
  891: r2384:SF=r2384:SF*[frame:DI-0x48]
      REG_DEAD r506:SF
    Inserting insn reload before:
 3257: r2384:SF=r506:SF
    Inserting insn reload after:
 3258: r507:SF=r2384:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 892:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 893
	 Choosing alt 1 in insn 893:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 894:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 895:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 896:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 897:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 898:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 899:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 900:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 901:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 902:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 903
	 Choosing alt 0 in insn 903:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 904:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 905
	 Choosing alt 1 in insn 905:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 906:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 907:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 908:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 909:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 910:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 911:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 912:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 913:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 914:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 915:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 916:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 917
	 Choosing alt 0 in insn 917:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 918:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 919:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 920:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 921:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 922:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 923:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 924:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 925:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 926:  (0) v  (1) vm {*cmpisf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 927:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 928:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 929:  (0) v  (1) vm {*cmpiusf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 930:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 931:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 932
	 Choosing alt 0 in insn 932:  (0) =r  (1) %0  (2) rme {*iorsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 933:  (0) r {*cmpsi_ccno_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 936:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 939:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 940:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 941:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 942:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 943:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 944:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 945:  (0) v  (1) vm {*cmpisf}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 951:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 952:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 953:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 954:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 957:  (0) v  (1) m {*movsf_internal}
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
          alt=2,overall=8,losers=1,rld_nregs=2
	 Choosing alt 2 in insn 958:  (0) x  (1) 0  (2) xm {*fop_sf_1}
      Creating newreg=2385 from oldreg=1825, assigning class SSE_REGS to r2385
  958: r2385:SF=r2385:SF/[frame:DI-0x44]
      REG_DEAD r1825:SF
    Inserting insn reload before:
 3259: r2385:SF=r1825:SF
    Inserting insn reload after:
 3260: r530:SF=r2385:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1221,losers=3,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=614,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=3,overall=1219,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non pseudo reload: reject++
            1 Non-prefered reload: reject+=600
          alt=4,overall=613,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=7,overall=616,losers=2,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=8,overall=2,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 3260:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 959:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 960:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 961:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 962:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 963:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 964:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 965:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 966:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 967:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 968
	 Choosing alt 0 in insn 968:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 969:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 970:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 971:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 972:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 973:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 974:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 976:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 977
	 Choosing alt 1 in insn 977:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 978:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 979:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 980:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 981:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 982:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 983:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 984:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 985:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 986:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 987
	 Choosing alt 0 in insn 987:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 988:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 989:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 990:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 991:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 992:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 993:  (0) x  (1) 0  (2) xm {*fop_sf_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 995:  (0) x  (1) 0  (2) xm {*fop_sf_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 997:  (1) rBwBz {*call_value}
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
  Commutative operand exchange in insn 999
	 Choosing alt 1 in insn 999:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=2386 from oldreg=530, assigning class SSE_REGS to r2386
      Making reload reg 2386 for reg 530 optional
  999: r1839:SF=r555:SF*r2386:SF
      REG_DEAD r555:SF
      REG_DEAD r530:SF
    Inserting insn reload before:
 3261: r2386:SF=r530:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=615,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            alt=1,overall=617,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=4,overall=622,losers=2 -- refuse
            0 Non pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=7,overall=2,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3261:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1000:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1001:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1002:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1003:  (0) v  (1) vm {*cmpisf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1004:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1005:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1006:  (0) v  (1) vm {*cmpiusf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1007:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1008:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1009
	 Choosing alt 0 in insn 1009:  (0) =r  (1) %0  (2) rme {*iorsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1010:  (0) r {*cmpsi_ccno_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1013:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1016:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1017:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1019:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 1020:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1021:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1022:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1023:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1024
	 Choosing alt 1 in insn 1024:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1025:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1026:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1027
	 Choosing alt 1 in insn 1027:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1029
	 Choosing alt 1 in insn 1029:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1030:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1031:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1033:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 1034:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1035:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1036:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1037:  (0) v  (1) vm {*cmpisf}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1043:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1044:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1049:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1050:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1051:  (0) v  (1) vm {*cmpisf}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1057:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1058:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1063:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1064:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1065:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1066:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1067:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1068
	 Choosing alt 0 in insn 1068:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1069:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1070:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1071:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1072:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1073:  (0) v  (1) vm {*cmpisf}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1079:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1080:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1085:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1086:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1089:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1090:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1091:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1092:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1093:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1094:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1095:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1096:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1097:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1098:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1099:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1100
	 Choosing alt 0 in insn 1100:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1101:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1102:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1103:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1104:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1105:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1106:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1107:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1108:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1109:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1110:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1111:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1112:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1113:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1114:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1115
	 Choosing alt 0 in insn 1115:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1116:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1117
	 Choosing alt 1 in insn 1117:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1118:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1119:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 1122:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 1128:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 1134:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1140:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1142:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1143:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1144:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1145:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1148:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1149:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1150:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1151:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1152:  (0) r  (1) l  (2) M {*ashldi3_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1153:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1154
	 Choosing alt 0 in insn 1154:  (0) =r  (1) %0  (2) rme {*adddi_1}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1156:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1157:  (0) rBwBz {*call}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 1158:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1164:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1166:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1167:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1168:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1169:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1172:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1173:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1174:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1176:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1177:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1178:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1179:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1182:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1184:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1185:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1186:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1187:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1190:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1191:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1192:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1193:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1194:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1198:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1199
	 Choosing alt 0 in insn 1199:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1200:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1201:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1202:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1203:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1204:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1205:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1209:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1210
	 Choosing alt 0 in insn 1210:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1211:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1212:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1213:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1214:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1215:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1216:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1217:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1218:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1219:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1220:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1221
	 Choosing alt 0 in insn 1221:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1222:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1223:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1224:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1225:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1226:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1227:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1228:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1229:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1230:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1231:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1232:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1233:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1234
	 Choosing alt 0 in insn 1234:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1235:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1236:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1237:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 1238:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1239:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1240:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1241:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1242:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1243:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1244:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1245:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1246:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1247:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1248:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1249
	 Choosing alt 0 in insn 1249:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1250:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1251:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1252:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 1253:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1254:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1255:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1256:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1257:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1258:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1259:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1260:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1261:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1262:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1263:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1264
	 Choosing alt 0 in insn 1264:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1265:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1266:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1267:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1268
	 Choosing alt 1 in insn 1268:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1270:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1271
	 Choosing alt 1 in insn 1271:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1272:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1273:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1274:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1275:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1276:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1277:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1278:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1279:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1280:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1281:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1282:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1283
	 Choosing alt 0 in insn 1283:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1284:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1285:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1286:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1287:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1288:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1289:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1290:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1291:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1292:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1293:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1294:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1295:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1296:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1297
	 Choosing alt 0 in insn 1297:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1298:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1299:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1300:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 1301:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1302:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1303:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1304:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1305:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1306:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1307:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1308:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1309:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1310:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1311:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1312:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1313
	 Choosing alt 0 in insn 1313:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1314:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1315:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1316:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 1317:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1318:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1319:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1320:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1321:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1322:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1323:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1324:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1325:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1326:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1327:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1328:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1329
	 Choosing alt 0 in insn 1329:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1330:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1331:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1332:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1333
	 Choosing alt 1 in insn 1333:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1335:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1336
	 Choosing alt 1 in insn 1336:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1337:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1338:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1339:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1340:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1341:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1342:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1344:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1345
	 Choosing alt 1 in insn 1345:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1346:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1347:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1348:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1349:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1350:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1351:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1352:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1353:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1354:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1355:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1356
	 Choosing alt 0 in insn 1356:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1357:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1358:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1359:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1360:  (0) v  (1) vm {*cmpisf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1366:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1367:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1368:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1369:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1370:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1371:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1372:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1373:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1374:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1375:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1376
	 Choosing alt 0 in insn 1376:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1377:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1378:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1379:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1380:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1381:  (0) v  (1) vm {*cmpisf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1387:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1388:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1389:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1390:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1391:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1392:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1393:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1394:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1395:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1396
	 Choosing alt 0 in insn 1396:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1397:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1398:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1399:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1400:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1401:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1402:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1403:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1404:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1405:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1406:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1407:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1408:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1409
	 Choosing alt 0 in insn 1409:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1410:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1411:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1412:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1413:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1414:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1415:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1416:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1417:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1418:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1419:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1420:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1421:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1422:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1423
	 Choosing alt 0 in insn 1423:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1424:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1425:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1426:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1427:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1428:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1429:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1430:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1431:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1432:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1433:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1434:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1435:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1436
	 Choosing alt 0 in insn 1436:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1437:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1438:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1439:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1440:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1441:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1442:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1443:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1444:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1445:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1446:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1447:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1448:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1449:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1450:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1451
	 Choosing alt 0 in insn 1451:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1452:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1453
	 Choosing alt 1 in insn 1453:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1454:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1455:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1456:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1457:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1458:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1459:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1460:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1461:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1462:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1463:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1464:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1465
	 Choosing alt 0 in insn 1465:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1466:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1467:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1468:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1469:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1470:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1471:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1472:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1473:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1474:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1475:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1476:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1477:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1478
	 Choosing alt 0 in insn 1478:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1479:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1480:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1481:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1482:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1483:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1484:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1485:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1486:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1487:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1488:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1489:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1490:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1491:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1492:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1493
	 Choosing alt 0 in insn 1493:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1494:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1495
	 Choosing alt 1 in insn 1495:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1496:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1497:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 1500:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 1506:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 1512:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 1518:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1524:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1526:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1527:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1528:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1529:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1532:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1533:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1534:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1536:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1537:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1538:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1539:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1542:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1544:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1545:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1546:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1547:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1550:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1551:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1552:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1553:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1554:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1555:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1556:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1557:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1558:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1559
	 Choosing alt 0 in insn 1559:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1560:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1561:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1562:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1563:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1564:  (0) v  (1) vm {*cmpiusf}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1566:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1567:  (0) v  (1) vm {*cmpiusf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1573:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1574:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1575:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1576:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1577:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1578:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1579:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1580:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1581:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1582
	 Choosing alt 0 in insn 1582:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1583:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1584:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1585:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1586:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1587:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1588:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1589:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1590:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1591:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1592:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1593:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1594:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1595:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1596:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1597:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1598
	 Choosing alt 0 in insn 1598:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1599:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1600:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1601:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1602:  (0) v  (1) r {*floatsisf2_mixed}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1603:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1604:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1605:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1606:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1607:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1608:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1609:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1610:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1611:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1612
	 Choosing alt 0 in insn 1612:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1613:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1614:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1615:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1616:  (0) x  (1) 0  (2) xm {*fop_sf_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1617:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1618:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1619:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1620:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1621:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1622:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1623:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1624:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1625:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1626
	 Choosing alt 0 in insn 1626:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1627:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1628:  (0) =r  (1) v {fix_truncsfsi_sse}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1629:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1630:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1631:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1632:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1633:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1634:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1635:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1636:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1637:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1638:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1639:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1640
	 Choosing alt 0 in insn 1640:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1641:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1642:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1643:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1644:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1645:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1646:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1647:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1648:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1649:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1650:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1651:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1652:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1653:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1654
	 Choosing alt 0 in insn 1654:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1655:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1656:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1657:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1658
	 Choosing alt 1 in insn 1658:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1660:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1661:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1662:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1663:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1664:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1665:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1666:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1667:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1668:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1669
	 Choosing alt 0 in insn 1669:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1670:  (0) r  (1) r  (2) le {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1671:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1672
	 Choosing alt 1 in insn 1672:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1673:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1674:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1675:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1676:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1677:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1678:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1679:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1680:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1681:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1682:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1683:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1684
	 Choosing alt 0 in insn 1684:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1685:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1686:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1687:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1688:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1689:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1690:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1691:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1692:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1693:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1694:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1695:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1696:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1697
	 Choosing alt 0 in insn 1697:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1698:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1699:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1700:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1701:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1702:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1703:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1704:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1705:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1706:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1707:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1708:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1709:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1710:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1711
	 Choosing alt 0 in insn 1711:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1712:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1713:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1714:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1715:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1716:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1717:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1718:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1719:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1720:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1721:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1722:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1723:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1724
	 Choosing alt 0 in insn 1724:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1725:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1726:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1727:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1728:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1729:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1730:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1731:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1732:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1733:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1734:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1735:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1736:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1737:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1738
	 Choosing alt 0 in insn 1738:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1739:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1740:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1741:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1742:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1743:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1744:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1745:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1746:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1747:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1748:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1749:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1750:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1751
	 Choosing alt 0 in insn 1751:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1752:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1753:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1754:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1755:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1756:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1757:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1758:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1759:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1760:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1761:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1762:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1763:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1764:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1765
	 Choosing alt 0 in insn 1765:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1766:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1767:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1768:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1769:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1770:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1771:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1772:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1773:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1774:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1775:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1776:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1777:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1778
	 Choosing alt 0 in insn 1778:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1779:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1780:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1781:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1782:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 1785:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 1791:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1797:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1798:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1799:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1801:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1802:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1803:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1804:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1807:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1809:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1810:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1811:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1812:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1815:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1816:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1817:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1818:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1819:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1820:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1821:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1822:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1823:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1824
	 Choosing alt 0 in insn 1824:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1825:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1826:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1827:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1828:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1829:  (0) v  (1) vm {*cmpiusf}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1831:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1832:  (0) v  (1) vm {*cmpiusf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1838:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1839:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1840:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1841:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1842:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1843:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1844:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1845:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1846:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1847
	 Choosing alt 0 in insn 1847:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1848:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1849:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1850:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1851:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1852:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1853:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1854:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1855:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1856:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1857:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1858:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1859:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1860:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1861:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1862:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1863
	 Choosing alt 0 in insn 1863:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1864:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1865:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1866:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1867:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1868:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1869:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1870:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1871:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1872:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1873:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1874:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1875:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1876
	 Choosing alt 0 in insn 1876:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1877:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1878:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1879:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1880:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1881:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1882:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1883:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1884:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1885:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1886:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1887:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1888:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1889:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1890
	 Choosing alt 0 in insn 1890:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1891:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1892:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1893:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1894:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1895:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1896:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1897:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1898:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1899:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1900:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1901:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1902:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1903
	 Choosing alt 0 in insn 1903:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1904:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1905:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1906:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1907:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 1910:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 1916:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 1922:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1928:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1930:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1931:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1932:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1933:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1936:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1937:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1938:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1940:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1941:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1942:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1943:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1946:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1948:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1949:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1950:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1951:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1954:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1955:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1956:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1957:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1958:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1959:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1960:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1961:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1962:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1963
	 Choosing alt 0 in insn 1963:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1964:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1965:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1966:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1967:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1968:  (0) v  (1) vm {*cmpiusf}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1970:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1971:  (0) v  (1) vm {*cmpiusf}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1977:  (0) m  (1) re {*movsi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1978:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1979:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1980:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1981:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1982:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1983:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1984:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1985:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1986:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1987:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1988:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1989
	 Choosing alt 0 in insn 1989:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1990:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1991:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1992:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1993:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1994:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1995:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1996:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1997:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1998:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1999:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2000:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2001:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2002:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2003
	 Choosing alt 0 in insn 2003:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2004:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2005:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2006:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2007
	 Choosing alt 1 in insn 2007:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2009:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2010:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 2011:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2012:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2013:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 2014:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2015:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2016:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2017:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2018
	 Choosing alt 0 in insn 2018:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2019:  (0) r  (1) r  (2) le {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2020:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2021
	 Choosing alt 1 in insn 2021:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2022:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 2023:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2024:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2026:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2027:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2028:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2029:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2032:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2033:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 2034:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2035:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2036:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 2037:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2038:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2039:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2040:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2041
	 Choosing alt 0 in insn 2041:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2042:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2043:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2044:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2045:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 2046:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2047:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 2048:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2049:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2050:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 2051:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2052:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2053:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2054:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2055
	 Choosing alt 0 in insn 2055:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2056:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2057:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2058:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2059
	 Choosing alt 1 in insn 2059:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2061:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2062
	 Choosing alt 1 in insn 2062:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 2063:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2064:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2065:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 2066:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2067:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2068:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 2069:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2070:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2071:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2072:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2073
	 Choosing alt 0 in insn 2073:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2074:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2075:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2076:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2077:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 2078:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 2079:  (0) v  (1) vm {movv4sf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2080:  (0) =Yv  (1) 0  (2) Yvm {*absnegsf2}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 2081:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2082:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2083:  (0) v  (1) vm {*cmpisf}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2089:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 2090:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2091:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2092:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 2095:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2101:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 2102:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2103:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 2104:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2105:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2106:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 2107:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2108:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2109:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2110:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2111
	 Choosing alt 0 in insn 2111:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2112:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2113:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2114:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2115:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2116:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 2117:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2118:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2119:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 2120:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2121:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2122:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2123:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2124
	 Choosing alt 0 in insn 2124:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2125:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2126:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2127:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 2128:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 2129:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2130:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2131:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 2132:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2133:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2134:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 2135:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2136:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2137:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2138:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2139
	 Choosing alt 0 in insn 2139:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2140:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2141:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2142:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2143:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 2144:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2145:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 2146:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2147:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2148:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 2149:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2150:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2151:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2152:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2153
	 Choosing alt 0 in insn 2153:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2154:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2155:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2156:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2157
	 Choosing alt 1 in insn 2157:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2159:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2160
	 Choosing alt 1 in insn 2160:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 2161:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2162:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2163:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 2164:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2165:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2166:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 2167:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2168:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2169:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2170:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2171
	 Choosing alt 0 in insn 2171:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2172:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2173:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2174:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2175:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2176:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2177:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 2178:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2179:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2180:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 2181:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2182:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2183:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2184:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2185
	 Choosing alt 0 in insn 2185:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2186:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2187:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2188:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 2189:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2190:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2191:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 2192:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2193:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2194:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2195:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2196
	 Choosing alt 0 in insn 2196:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2197:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2198:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 2199:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2200:  (0) v  (1) m {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2201:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 2202:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2203:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2204:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 2205:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2206:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2207:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 2208:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2209:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2210:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2211:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2212
	 Choosing alt 0 in insn 2212:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2213:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2214:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2215:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 2216:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2217:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2218:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 2219:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2220:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2221:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2222:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2223
	 Choosing alt 0 in insn 2223:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2224:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2225:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 2226:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2227:  (0) v  (1) m {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2228:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 2229:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2230:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2231:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 2232:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2233:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2234:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 2235:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2236:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2237:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2238:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2239
	 Choosing alt 0 in insn 2239:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2240:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2241:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 2242:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2243:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2244:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 2245:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 2246:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2247:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2248:  (0) v  (1) vm {*cmpisf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2249:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2250:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2251:  (0) v  (1) vm {*cmpiusf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2252:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2253:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2254
	 Choosing alt 0 in insn 2254:  (0) =r  (1) %0  (2) rme {*iorsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2255:  (0) r {*cmpsi_ccno_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2258:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 2261:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2262:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 2263:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2264:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 2265:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2266:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2267:  (0) v  (1) vm {*cmpisf}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2273:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 2274:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2275:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 2276:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2279:  (0) v  (1) m {*movsf_internal}
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
          alt=2,overall=8,losers=1,rld_nregs=2
	 Choosing alt 2 in insn 2280:  (0) x  (1) 0  (2) xm {*fop_sf_1}
      Creating newreg=2387 from oldreg=2178, assigning class SSE_REGS to r2387
 2280: r2387:SF=r2387:SF/[frame:DI-0x44]
      REG_DEAD r2178:SF
    Inserting insn reload before:
 3262: r2387:SF=r2178:SF
    Inserting insn reload after:
 3263: r1153:SF=r2387:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1221,losers=3,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=614,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=3,overall=1219,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non pseudo reload: reject++
            1 Non-prefered reload: reject+=600
          alt=4,overall=613,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=7,overall=616,losers=2,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=8,overall=2,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 3263:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2281:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2282:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 2283:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2284:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2285:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 2286:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2287:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2288:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2289:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2290
	 Choosing alt 0 in insn 2290:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2291:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2292:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 2293:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2294:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2295:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 2296:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2298:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2299
	 Choosing alt 1 in insn 2299:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2300:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2301:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 2302:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2303:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2304:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 2305:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2306:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2307:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2308:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2309
	 Choosing alt 0 in insn 2309:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2310:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2311:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 2312:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2313:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2314:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 2315:  (0) x  (1) 0  (2) xm {*fop_sf_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 2317:  (0) x  (1) 0  (2) xm {*fop_sf_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2319:  (1) rBwBz {*call_value}
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2321
	 Choosing alt 1 in insn 2321:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=2388 from oldreg=1153, assigning class SSE_REGS to r2388
      Making reload reg 2388 for reg 1153 optional
 2321: r2192:SF=r1178:SF*r2388:SF
      REG_DEAD r1178:SF
      REG_DEAD r1153:SF
    Inserting insn reload before:
 3264: r2388:SF=r1153:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=615,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            alt=1,overall=617,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=4,overall=622,losers=2 -- refuse
            0 Non pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=7,overall=2,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3264:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 2322:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2323:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2324:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2325:  (0) v  (1) vm {*cmpisf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2326:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2327:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2328:  (0) v  (1) vm {*cmpiusf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2329:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2330:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2331
	 Choosing alt 0 in insn 2331:  (0) =r  (1) %0  (2) rme {*iorsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2332:  (0) r {*cmpsi_ccno_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2335:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 2338:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 2339:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2341:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 2342:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 2343:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2344:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2345:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2346
	 Choosing alt 1 in insn 2346:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2347:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2348:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2349
	 Choosing alt 1 in insn 2349:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2351
	 Choosing alt 1 in insn 2351:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2352:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 2353:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2355:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 2356:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 2357:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2358:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2359:  (0) v  (1) vm {*cmpisf}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2365:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 2366:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2371:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2372:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2373:  (0) v  (1) vm {*cmpisf}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2379:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 2380:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2385:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2386:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 2387:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2388:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2389:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2390
	 Choosing alt 0 in insn 2390:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2391:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2392:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2393:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2394:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2395:  (0) v  (1) vm {*cmpisf}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2401:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 2402:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2407:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 2408:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2411:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 2412:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2413:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2414:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 2415:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2416:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2417:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 2418:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2419:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2420:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2421:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2422
	 Choosing alt 0 in insn 2422:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2423:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2424:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2425:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 2426:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2427:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2428:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 2429:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2430:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2431:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 2432:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2433:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2434:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2435:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2436
	 Choosing alt 0 in insn 2436:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2437:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2438:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2439:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 2440:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2441:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2442:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 2443:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2444:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2445:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2446:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2447
	 Choosing alt 0 in insn 2447:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2448:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2449:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2450:  (0) v  (1) m {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2451:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 2452:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2453:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2454:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 2455:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2456:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2457:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 2458:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2459:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2460:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2461:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2462
	 Choosing alt 0 in insn 2462:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2463:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2464:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 2465:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2466:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2467:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2468:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 2469:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2470:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2471:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 2472:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2473:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2474:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2475:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2476
	 Choosing alt 0 in insn 2476:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2477:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2478:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2479:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2480
	 Choosing alt 1 in insn 2480:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=6,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 2482:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=2389 from oldreg=1241, assigning class SSE_REGS to r2389
 2482: r2389:SF=r2389:SF*[frame:DI-0x48]
      REG_DEAD r1241:SF
    Inserting insn reload before:
 3265: r2389:SF=r1241:SF
    Inserting insn reload after:
 3266: r1242:SF=r2389:SF

          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2483:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2484:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 2485:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2486:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2487:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 2488:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2489:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2490:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2491:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2492
	 Choosing alt 0 in insn 2492:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2493:  (0) r  (1) r  (2) le {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2494:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2495
	 Choosing alt 1 in insn 2495:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2496:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 2497:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2500:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2501:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 2502:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2503:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2504:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 2505:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2506:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2507:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2508:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2509
	 Choosing alt 0 in insn 2509:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2510:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2511:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2512:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2513:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2514:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 2515:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2516:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2517:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 2518:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2519:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2520:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2521:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2522
	 Choosing alt 0 in insn 2522:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2523:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2524:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2525:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2526:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2527:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 2528:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2529:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2530:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 2531:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2532:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2533:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2534:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2535
	 Choosing alt 0 in insn 2535:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2536:  (0) r  (1) r  (2) le {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 2537:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2538:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 2539:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2540:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2541:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 2542:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2543:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2544:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 2545:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2546:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2547:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2548:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2549
	 Choosing alt 0 in insn 2549:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2550:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2551:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2552:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2553:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2554:  (0) v  (1) vm {*cmpisf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2560:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2561:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 2562:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2563:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2564:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 2565:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2566:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2567:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2568:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2569
	 Choosing alt 0 in insn 2569:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2570:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2571:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2572:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 2573:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2574:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2575:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 2576:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2577:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2578:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 2579:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2580:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2581:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2582:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2583
	 Choosing alt 0 in insn 2583:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2584:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2585:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2586:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2587:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2588:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 2589:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2590:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2591:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 2592:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2593:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2594:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2595:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2596
	 Choosing alt 0 in insn 2596:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2597:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2598:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2599:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2600:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2601:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 2602:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2603:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2604:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 2605:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2606:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2607:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2608:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2609
	 Choosing alt 0 in insn 2609:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2610:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2611
	 Choosing alt 1 in insn 2611:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2612:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 2613:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2616:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2617:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 2618:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2619:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2620:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 2621:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2622:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2623:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2624:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2625
	 Choosing alt 0 in insn 2625:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2626:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2627:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2628:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2629:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2630:  (0) v  (1) vm {*cmpisf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2636:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2637:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 2638:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2639:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2640:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 2641:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2642:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2643:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2644:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2645
	 Choosing alt 0 in insn 2645:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2646:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2647:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2648:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 2649:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2650:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2651:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 2652:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2653:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2654:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 2655:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2656:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2657:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2658:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2659
	 Choosing alt 0 in insn 2659:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2660:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2661:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2662:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2663:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2664:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 2665:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2666:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2667:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 2668:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2669:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2670:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2671:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2672
	 Choosing alt 0 in insn 2672:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2673:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2674:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2675:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2676:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2677:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 2678:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2679:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2680:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 2681:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2682:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2683:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2684:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2685
	 Choosing alt 0 in insn 2685:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2686:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2687
	 Choosing alt 1 in insn 2687:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2688:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 2689:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 2692:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 2698:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2704:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2705:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2706:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2708:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2709:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2710:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2711:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2714:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2716:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2717:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2718:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2719:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2722:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2723:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 2724:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2725:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2726:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 2727:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2728:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2729:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2730:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2731
	 Choosing alt 0 in insn 2731:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2732:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2733:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2734:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2735:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2736:  (0) v  (1) vm {*cmpiusf}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2738:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2739:  (0) v  (1) vm {*cmpiusf}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2745:  (0) m  (1) re {*movsi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2746:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 2747:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2748:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2749:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 2750:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 2751:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2752:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2756:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2757
	 Choosing alt 0 in insn 2757:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2758:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2759:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2760:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 2761:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 2762:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2763:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2767:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2768
	 Choosing alt 0 in insn 2768:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2769:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2770:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2772:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2773:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2774:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2775:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2778:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2779:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 2780:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2781:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2782:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 2783:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2784:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2785:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2786:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2787
	 Choosing alt 0 in insn 2787:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2788:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2789:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2790:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2791:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2792:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 2793:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2794:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2795:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 2796:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2797:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2798:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2799:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2800
	 Choosing alt 0 in insn 2800:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2801:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2802:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2803:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 2804:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2805:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2806:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 2807:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2808:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 2809:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2810:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 2811:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2812:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2813:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2814:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2815
	 Choosing alt 0 in insn 2815:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2816:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2817:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2818:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 2819:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2820:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2821:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 2822:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2823:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 2824:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2825:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 2826:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2827:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2828:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2829:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2830
	 Choosing alt 0 in insn 2830:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2831:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2832:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2833:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 2834:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2835:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 2836:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2837:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 2838:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2839:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2840:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 2841:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2842:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2843:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2844:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2845
	 Choosing alt 0 in insn 2845:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2846:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2847:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2848:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 2849:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2850:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 2851:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2852:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 2853:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2854:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2855:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 2856:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2857:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2858:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2859:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2860
	 Choosing alt 0 in insn 2860:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2861:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2862:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2863:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 2864:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2865:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 2866:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2867:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 2868:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2869:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 2870:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2871:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 2872:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2873:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2874:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2875:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2876
	 Choosing alt 0 in insn 2876:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2877:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2878:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2879:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 2880:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2881:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 2882:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2883:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 2884:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2885:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 2886:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2887:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 2888:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2889:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2890:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2891:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2892
	 Choosing alt 0 in insn 2892:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2893:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2894:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2895:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2896
	 Choosing alt 1 in insn 2896:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2898:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2899
	 Choosing alt 1 in insn 2899:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 2900:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2901:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2902:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 2903:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2904:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2905:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 2906:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2907:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2908:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2909:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2910
	 Choosing alt 0 in insn 2910:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2911:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2912:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2913:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2914:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 2915:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 2916:  (0) v  (1) vm {movv4sf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2917:  (0) =Yv  (1) 0  (2) Yvm {*absnegsf2}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 2918:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2919:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2920:  (0) v  (1) vm {*cmpisf}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2926:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 2927:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2928:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2929:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 2932:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2938:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2939:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 2940:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2941:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2942:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 2943:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2944:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2945:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2946:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2947
	 Choosing alt 0 in insn 2947:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2948:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2949:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2950:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 2951:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2952:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2953:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 2954:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2955:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2956:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2957:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2958
	 Choosing alt 0 in insn 2958:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2959:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2960:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 2961:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2962:  (0) v  (1) m {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2963:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 2964:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2965:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2966:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 2967:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2968:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2969:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 2970:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2971:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2972:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2973:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2974
	 Choosing alt 0 in insn 2974:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2975:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2976:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2977:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 2978:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2979:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2980:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 2981:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2982:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2983:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2984:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2985
	 Choosing alt 0 in insn 2985:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2986:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2987:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 2988:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2989:  (0) v  (1) m {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2990:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 2991:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 2994:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 3000:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 3006:  (0) rm  (1) 0  (2) re {*addsi_1}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #1: **********

EBB 2
EBB 3 4
EBB 5 6
EBB 147
EBB 7
EBB 146
EBB 8
EBB 9 10
EBB 11 12
EBB 13 14
EBB 150
EBB 15
EBB 149
EBB 16
EBB 148
EBB 17
EBB 18 19
EBB 20 21
EBB 22 23
EBB 153
EBB 24
EBB 152
EBB 25
EBB 26 27
EBB 28 29
EBB 30 31 32 33 34
EBB 35 36
EBB 37 38 39
EBB 40
EBB 41 42 43 44
EBB 45 46
EBB 47 48
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=2390 from oldreg=530, assigning class SSE_REGS to inheritance r2390
    Original reg change 530->2390 (bb47):
 3260: r2390:SF=r2385:SF
    Add original<-inheritance after:
 3267: r530:SF=r2390:SF

    Inheritance reuse change 530->2390 (bb47):
 3261: r2386:SF=r2390:SF
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
	    Removing dead insn:
  3267: r530:SF=r2390:SF
deleting insn with uid = 3267.
EBB 49 50
EBB 51 52
EBB 53 54
EBB 55
EBB 56
EBB 57
EBB 156
EBB 58
EBB 155
EBB 59
EBB 154
EBB 60
EBB 61 62
EBB 157
EBB 63
EBB 64 65
EBB 66 67
EBB 68 69 70 71
EBB 72
EBB 160
EBB 73
EBB 159
EBB 74
EBB 158
EBB 75
EBB 151
EBB 76
EBB 77 78
EBB 79 80
EBB 81 82 83
EBB 84
EBB 85
EBB 163
EBB 86
EBB 162
EBB 87
EBB 88 89
EBB 90 91 92
EBB 93
EBB 94
EBB 165
EBB 95
EBB 164
EBB 96
EBB 161
EBB 97
EBB 98 99
EBB 100 101
EBB 102 103 104 105
EBB 106 107 108
EBB 109
EBB 169
EBB 110 111
EBB 112 113
EBB 114 115
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=2391 from oldreg=1153, assigning class SSE_REGS to inheritance r2391
    Original reg change 1153->2391 (bb114):
 3263: r2391:SF=r2387:SF
    Add original<-inheritance after:
 3268: r1153:SF=r2391:SF

    Inheritance reuse change 1153->2391 (bb114):
 3264: r2388:SF=r2391:SF
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
	    Removing dead insn:
  3268: r1153:SF=r2391:SF
deleting insn with uid = 3268.
EBB 116 117
EBB 118 119
EBB 120 121
EBB 122
EBB 123
EBB 124 125
EBB 126 127
EBB 128
EBB 168
EBB 129
EBB 167
EBB 130
EBB 131 132
EBB 133 134 135 136
EBB 137 138 139
EBB 140
EBB 172
EBB 141
EBB 142
EBB 171
EBB 143
EBB 170
EBB 144
EBB 166
EBB 145

********** Pseudo live ranges #1: **********

  BB 145
   Insn 3093: point = 0, n_alt = -1
  BB 166
   Insn 3237: point = 0, n_alt = -1
  BB 98
   Insn 1934: point = 0, n_alt = -1
   Insn 1933: point = 0, n_alt = 0
   Insn 1932: point = 1, n_alt = 0
   Insn 1931: point = 3, n_alt = 0
   Insn 1930: point = 4, n_alt = 0
  BB 144
   Insn 3173: point = 4, n_alt = -1
   Insn 3006: point = 4, n_alt = 1
  BB 170
   Insn 3249: point = 4, n_alt = -1
  BB 131
   Insn 2712: point = 4, n_alt = -1
   Insn 2711: point = 4, n_alt = 0
   Insn 2710: point = 5, n_alt = 0
   Insn 2709: point = 7, n_alt = 0
   Insn 2708: point = 8, n_alt = 0
  BB 143
   Insn 3171: point = 9, n_alt = -1
   Insn 3000: point = 9, n_alt = 1
  BB 171
   Insn 3252: point = 10, n_alt = -1
  BB 133
   Insn 2720: point = 11, n_alt = -1
   Insn 2719: point = 11, n_alt = 0
   Insn 2718: point = 12, n_alt = 0
   Insn 2717: point = 14, n_alt = 0
   Insn 2716: point = 15, n_alt = 0
  BB 142
   Insn 3169: point = 16, n_alt = -1
   Insn 2994: point = 16, n_alt = 1
  BB 141
   Insn 2991: point = 17, n_alt = 8
   Insn 2990: point = 18, n_alt = 3
   Insn 2989: point = 19, n_alt = 7
   Insn 2988: point = 21, n_alt = 0
   Insn 2987: point = 23, n_alt = 4
   Insn 2986: point = 24, n_alt = 3
   Insn 2985: point = 26, n_alt = 0
   Insn 2984: point = 28, n_alt = 1
   Insn 2983: point = 30, n_alt = 0
   Insn 2982: point = 31, n_alt = 0
   Insn 2981: point = 33, n_alt = 0
   Insn 2980: point = 35, n_alt = 1
   Insn 2979: point = 37, n_alt = 0
   Insn 2978: point = 38, n_alt = 1
   Insn 2977: point = 40, n_alt = 1
   Insn 2976: point = 42, n_alt = 0
   Insn 2975: point = 43, n_alt = 3
   Insn 2974: point = 45, n_alt = 0
   Insn 2973: point = 47, n_alt = 1
   Insn 2972: point = 49, n_alt = 0
   Insn 2971: point = 50, n_alt = 0
   Insn 2970: point = 52, n_alt = 0
   Insn 2969: point = 54, n_alt = 1
   Insn 2968: point = 56, n_alt = 0
   Insn 2967: point = 57, n_alt = 1
   Insn 2966: point = 59, n_alt = 1
   Insn 2965: point = 61, n_alt = 0
   Insn 2964: point = 62, n_alt = 8
   Insn 2963: point = 63, n_alt = 3
   Insn 2962: point = 64, n_alt = 7
   Insn 2961: point = 66, n_alt = 0
   Insn 2960: point = 68, n_alt = 4
   Insn 2959: point = 69, n_alt = 3
   Insn 2958: point = 71, n_alt = 0
   Insn 2957: point = 73, n_alt = 1
   Insn 2956: point = 75, n_alt = 0
   Insn 2955: point = 76, n_alt = 0
   Insn 2954: point = 78, n_alt = 0
   Insn 2953: point = 80, n_alt = 1
   Insn 2952: point = 82, n_alt = 0
   Insn 2951: point = 83, n_alt = 1
   Insn 2950: point = 85, n_alt = 1
   Insn 2949: point = 87, n_alt = 0
   Insn 2948: point = 88, n_alt = 3
   Insn 2947: point = 90, n_alt = 0
   Insn 2946: point = 92, n_alt = 1
   Insn 2945: point = 94, n_alt = 0
   Insn 2944: point = 95, n_alt = 0
   Insn 2943: point = 97, n_alt = 0
   Insn 2942: point = 99, n_alt = 1
   Insn 2941: point = 101, n_alt = 0
   Insn 2940: point = 102, n_alt = 1
   Insn 2939: point = 104, n_alt = 1
   Insn 2938: point = 106, n_alt = 0
  BB 172
   Insn 3255: point = 108, n_alt = -1
  BB 137
   Insn 2776: point = 109, n_alt = -1
   Insn 2775: point = 109, n_alt = 0
   Insn 2774: point = 110, n_alt = 0
   Insn 2773: point = 112, n_alt = 0
   Insn 2772: point = 113, n_alt = 0
  BB 140
   Insn 3167: point = 114, n_alt = -1
   Insn 2932: point = 114, n_alt = 1
  BB 139
   Insn 2929: point = 115, n_alt = 1
   Insn 2928: point = 116, n_alt = 0
   Insn 2927: point = 117, n_alt = 8
   Insn 2926: point = 118, n_alt = 7
  BB 138
   Insn 2921: point = 120, n_alt = -1
   Insn 2920: point = 120, n_alt = 1
   Insn 2919: point = 121, n_alt = 7
   Insn 2918: point = 122, n_alt = 8
   Insn 2917: point = 123, n_alt = 0
   Insn 2916: point = 125, n_alt = 2
   Insn 2915: point = 126, n_alt = 2
   Insn 2914: point = 128, n_alt = 7
   Insn 2913: point = 129, n_alt = 7
   Insn 2912: point = 131, n_alt = 3
   Insn 2911: point = 132, n_alt = 3
   Insn 2910: point = 134, n_alt = 0
   Insn 2909: point = 136, n_alt = 1
   Insn 2908: point = 138, n_alt = 0
   Insn 2907: point = 139, n_alt = 0
   Insn 2906: point = 141, n_alt = 0
   Insn 2905: point = 143, n_alt = 1
   Insn 2904: point = 145, n_alt = 0
   Insn 2903: point = 146, n_alt = 1
   Insn 2902: point = 148, n_alt = 1
   Insn 2901: point = 150, n_alt = 0
   Insn 2900: point = 151, n_alt = 8
   Insn 2899: point = 152, n_alt = 1
   Insn 2898: point = 154, n_alt = 7
   Insn 2897: point = 155, n_alt = -2
   Insn 2896: point = 157, n_alt = 1
   Insn 2895: point = 159, n_alt = 7
   Insn 2894: point = 161, n_alt = 4
   Insn 2893: point = 162, n_alt = 3
   Insn 2892: point = 164, n_alt = 0
   Insn 2891: point = 166, n_alt = 1
   Insn 2890: point = 168, n_alt = 0
   Insn 2889: point = 169, n_alt = 0
   Insn 2888: point = 171, n_alt = 0
   Insn 2887: point = 173, n_alt = 1
   Insn 2886: point = 175, n_alt = 0
   Insn 2885: point = 177, n_alt = 0
   Insn 2884: point = 178, n_alt = 1
   Insn 2883: point = 180, n_alt = 1
   Insn 2882: point = 182, n_alt = 0
   Insn 2881: point = 184, n_alt = 0
   Insn 2880: point = 185, n_alt = 1
   Insn 2879: point = 187, n_alt = 7
   Insn 2878: point = 189, n_alt = 4
   Insn 2877: point = 190, n_alt = 3
   Insn 2876: point = 192, n_alt = 0
   Insn 2875: point = 194, n_alt = 1
   Insn 2874: point = 196, n_alt = 0
   Insn 2873: point = 197, n_alt = 0
   Insn 2872: point = 199, n_alt = 0
   Insn 2871: point = 201, n_alt = 1
   Insn 2870: point = 203, n_alt = 0
   Insn 2869: point = 205, n_alt = 0
   Insn 2868: point = 206, n_alt = 1
   Insn 2867: point = 208, n_alt = 1
   Insn 2866: point = 210, n_alt = 0
   Insn 2865: point = 212, n_alt = 0
   Insn 2864: point = 213, n_alt = 1
   Insn 2863: point = 215, n_alt = 7
   Insn 2862: point = 217, n_alt = 4
   Insn 2861: point = 218, n_alt = 3
   Insn 2860: point = 220, n_alt = 0
   Insn 2859: point = 222, n_alt = 1
   Insn 2858: point = 224, n_alt = 0
   Insn 2857: point = 225, n_alt = 0
   Insn 2856: point = 227, n_alt = 0
   Insn 2855: point = 229, n_alt = 1
   Insn 2854: point = 231, n_alt = 0
   Insn 2853: point = 232, n_alt = 1
   Insn 2852: point = 234, n_alt = 1
   Insn 2851: point = 236, n_alt = 0
   Insn 2850: point = 238, n_alt = 0
   Insn 2849: point = 239, n_alt = 1
   Insn 2848: point = 241, n_alt = 7
   Insn 2847: point = 243, n_alt = 4
   Insn 2846: point = 244, n_alt = 3
   Insn 2845: point = 246, n_alt = 0
   Insn 2844: point = 248, n_alt = 1
   Insn 2843: point = 250, n_alt = 0
   Insn 2842: point = 251, n_alt = 0
   Insn 2841: point = 253, n_alt = 0
   Insn 2840: point = 255, n_alt = 1
   Insn 2839: point = 257, n_alt = 0
   Insn 2838: point = 258, n_alt = 1
   Insn 2837: point = 260, n_alt = 1
   Insn 2836: point = 262, n_alt = 0
   Insn 2835: point = 264, n_alt = 0
   Insn 2834: point = 265, n_alt = 1
   Insn 2833: point = 267, n_alt = 7
   Insn 2832: point = 269, n_alt = 4
   Insn 2831: point = 270, n_alt = 3
   Insn 2830: point = 272, n_alt = 0
   Insn 2829: point = 274, n_alt = 1
   Insn 2828: point = 276, n_alt = 0
   Insn 2827: point = 277, n_alt = 0
   Insn 2826: point = 279, n_alt = 0
   Insn 2825: point = 281, n_alt = 1
   Insn 2824: point = 283, n_alt = 0
   Insn 2823: point = 285, n_alt = 0
   Insn 2822: point = 286, n_alt = 1
   Insn 2821: point = 288, n_alt = 1
   Insn 2820: point = 290, n_alt = 0
   Insn 2819: point = 291, n_alt = 1
   Insn 2818: point = 293, n_alt = 7
   Insn 2817: point = 295, n_alt = 4
   Insn 2816: point = 296, n_alt = 3
   Insn 2815: point = 298, n_alt = 0
   Insn 2814: point = 300, n_alt = 1
   Insn 2813: point = 302, n_alt = 0
   Insn 2812: point = 303, n_alt = 0
   Insn 2811: point = 305, n_alt = 0
   Insn 2810: point = 307, n_alt = 1
   Insn 2809: point = 309, n_alt = 0
   Insn 2808: point = 311, n_alt = 0
   Insn 2807: point = 312, n_alt = 1
   Insn 2806: point = 314, n_alt = 1
   Insn 2805: point = 316, n_alt = 0
   Insn 2804: point = 317, n_alt = 1
   Insn 2803: point = 319, n_alt = 7
   Insn 2802: point = 321, n_alt = 4
   Insn 2801: point = 322, n_alt = 3
   Insn 2800: point = 324, n_alt = 0
   Insn 2799: point = 326, n_alt = 1
   Insn 2798: point = 328, n_alt = 0
   Insn 2797: point = 329, n_alt = 0
   Insn 2796: point = 331, n_alt = 0
   Insn 2795: point = 333, n_alt = 1
   Insn 2794: point = 335, n_alt = 0
   Insn 2793: point = 336, n_alt = 1
   Insn 2792: point = 338, n_alt = 1
   Insn 2791: point = 340, n_alt = 0
   Insn 2790: point = 341, n_alt = 7
   Insn 2789: point = 343, n_alt = 4
   Insn 2788: point = 344, n_alt = 3
   Insn 2787: point = 346, n_alt = 0
   Insn 2786: point = 348, n_alt = 1
   Insn 2785: point = 350, n_alt = 0
   Insn 2784: point = 351, n_alt = 0
   Insn 2783: point = 353, n_alt = 0
   Insn 2782: point = 355, n_alt = 1
   Insn 2781: point = 357, n_alt = 0
   Insn 2780: point = 358, n_alt = 1
   Insn 2779: point = 360, n_alt = 1
   Insn 2778: point = 362, n_alt = 0
  BB 136
   Insn 2770: point = 364, n_alt = 1
   Insn 2769: point = 364, n_alt = 1
   Insn 2768: point = 365, n_alt = 0
   Insn 2767: point = 367, n_alt = 0
   Insn 2763: point = 368, n_alt = 0
   Insn 2762: point = 370, n_alt = 0
   Insn 2761: point = 372, n_alt = 0
   Insn 2760: point = 374, n_alt = 1
   Insn 2759: point = 376, n_alt = 0
   Insn 2758: point = 377, n_alt = 1
   Insn 2757: point = 378, n_alt = 0
   Insn 2756: point = 380, n_alt = 0
   Insn 2752: point = 381, n_alt = 0
   Insn 2751: point = 383, n_alt = 0
   Insn 2750: point = 385, n_alt = 0
   Insn 2749: point = 387, n_alt = 1
   Insn 2748: point = 389, n_alt = 0
   Insn 2747: point = 390, n_alt = 8
   Insn 2746: point = 391, n_alt = 7
   Insn 2745: point = 392, n_alt = 1
  BB 135
   Insn 2740: point = 393, n_alt = -1
   Insn 2739: point = 393, n_alt = 1
   Insn 2738: point = 394, n_alt = 7
  BB 134
   Insn 2737: point = 396, n_alt = -1
   Insn 2736: point = 396, n_alt = 1
   Insn 2735: point = 397, n_alt = 7
   Insn 2734: point = 398, n_alt = 7
   Insn 2733: point = 400, n_alt = 4
   Insn 2732: point = 401, n_alt = 3
   Insn 2731: point = 403, n_alt = 0
   Insn 2730: point = 405, n_alt = 1
   Insn 2729: point = 407, n_alt = 0
   Insn 2728: point = 408, n_alt = 0
   Insn 2727: point = 410, n_alt = 0
   Insn 2726: point = 412, n_alt = 1
   Insn 2725: point = 414, n_alt = 0
   Insn 2724: point = 415, n_alt = 1
   Insn 2723: point = 417, n_alt = 1
   Insn 2722: point = 419, n_alt = 0
  BB 132
   Insn 2714: point = 421, n_alt = 1
  BB 130
   Insn 2706: point = 422, n_alt = 1
   Insn 2705: point = 423, n_alt = 0
   Insn 2704: point = 424, n_alt = 0
  BB 167
   Insn 3240: point = 425, n_alt = -1
  BB 100
   Insn 1944: point = 425, n_alt = -1
   Insn 1943: point = 425, n_alt = 0
   Insn 1942: point = 426, n_alt = 0
   Insn 1941: point = 428, n_alt = 0
   Insn 1940: point = 429, n_alt = 0
  BB 129
   Insn 3165: point = 430, n_alt = -1
   Insn 2698: point = 430, n_alt = 1
  BB 168
   Insn 3243: point = 431, n_alt = -1
  BB 102
   Insn 1952: point = 432, n_alt = -1
   Insn 1951: point = 432, n_alt = 0
   Insn 1950: point = 433, n_alt = 0
   Insn 1949: point = 435, n_alt = 0
   Insn 1948: point = 436, n_alt = 0
  BB 128
   Insn 3163: point = 437, n_alt = -1
   Insn 2692: point = 437, n_alt = 1
  BB 127
   Insn 2689: point = 438, n_alt = 8
   Insn 2688: point = 439, n_alt = 3
   Insn 2687: point = 440, n_alt = 1
   Insn 2686: point = 442, n_alt = 3
   Insn 2685: point = 444, n_alt = 0
   Insn 2684: point = 446, n_alt = 0
   Insn 2683: point = 448, n_alt = 0
   Insn 2682: point = 449, n_alt = 0
   Insn 2681: point = 451, n_alt = 0
   Insn 2680: point = 453, n_alt = 0
   Insn 2679: point = 455, n_alt = 0
   Insn 2678: point = 456, n_alt = 1
   Insn 2677: point = 458, n_alt = 0
   Insn 2676: point = 460, n_alt = 0
   Insn 2675: point = 461, n_alt = 7
   Insn 2674: point = 463, n_alt = 4
   Insn 2673: point = 464, n_alt = 3
   Insn 2672: point = 466, n_alt = 0
   Insn 2671: point = 468, n_alt = 0
   Insn 2670: point = 470, n_alt = 0
   Insn 2669: point = 471, n_alt = 0
   Insn 2668: point = 473, n_alt = 0
   Insn 2667: point = 475, n_alt = 0
   Insn 2666: point = 477, n_alt = 0
   Insn 2665: point = 478, n_alt = 1
   Insn 2664: point = 480, n_alt = 0
   Insn 2663: point = 482, n_alt = 0
   Insn 2662: point = 483, n_alt = 7
   Insn 2661: point = 485, n_alt = 3
   Insn 2660: point = 486, n_alt = 3
   Insn 2659: point = 488, n_alt = 0
   Insn 2658: point = 490, n_alt = 0
   Insn 2657: point = 492, n_alt = 0
   Insn 2656: point = 493, n_alt = 0
   Insn 2655: point = 495, n_alt = 0
   Insn 2654: point = 497, n_alt = 0
   Insn 2653: point = 499, n_alt = 0
   Insn 2652: point = 500, n_alt = 1
   Insn 2651: point = 502, n_alt = 0
   Insn 2650: point = 504, n_alt = 0
   Insn 2649: point = 505, n_alt = 8
   Insn 2648: point = 506, n_alt = 7
   Insn 2647: point = 507, n_alt = 3
   Insn 2646: point = 508, n_alt = 3
   Insn 2645: point = 510, n_alt = 0
   Insn 2644: point = 512, n_alt = 0
   Insn 2643: point = 514, n_alt = 0
   Insn 2642: point = 515, n_alt = 0
   Insn 2641: point = 517, n_alt = 0
   Insn 2640: point = 519, n_alt = 0
   Insn 2639: point = 521, n_alt = 0
   Insn 2638: point = 522, n_alt = 1
   Insn 2637: point = 524, n_alt = 0
   Insn 2636: point = 526, n_alt = 0
  BB 126
   Insn 2631: point = 528, n_alt = -1
   Insn 2630: point = 528, n_alt = 1
   Insn 2629: point = 529, n_alt = 7
   Insn 2628: point = 530, n_alt = 7
   Insn 2627: point = 532, n_alt = 3
   Insn 2626: point = 533, n_alt = 3
   Insn 2625: point = 535, n_alt = 0
   Insn 2624: point = 537, n_alt = 0
   Insn 2623: point = 539, n_alt = 0
   Insn 2622: point = 540, n_alt = 0
   Insn 2621: point = 542, n_alt = 0
   Insn 2620: point = 544, n_alt = 0
   Insn 2619: point = 546, n_alt = 0
   Insn 2618: point = 547, n_alt = 1
   Insn 2617: point = 549, n_alt = 0
   Insn 2616: point = 551, n_alt = 0
  BB 125
   Insn 2613: point = 553, n_alt = 8
   Insn 2612: point = 554, n_alt = 3
   Insn 2611: point = 555, n_alt = 1
   Insn 2610: point = 557, n_alt = 3
   Insn 2609: point = 559, n_alt = 0
   Insn 2608: point = 561, n_alt = 0
   Insn 2607: point = 563, n_alt = 0
   Insn 2606: point = 564, n_alt = 0
   Insn 2605: point = 566, n_alt = 0
   Insn 2604: point = 568, n_alt = 0
   Insn 2603: point = 570, n_alt = 0
   Insn 2602: point = 571, n_alt = 1
   Insn 2601: point = 573, n_alt = 0
   Insn 2600: point = 575, n_alt = 0
   Insn 2599: point = 576, n_alt = 7
   Insn 2598: point = 578, n_alt = 4
   Insn 2597: point = 579, n_alt = 3
   Insn 2596: point = 581, n_alt = 0
   Insn 2595: point = 583, n_alt = 0
   Insn 2594: point = 585, n_alt = 0
   Insn 2593: point = 586, n_alt = 0
   Insn 2592: point = 588, n_alt = 0
   Insn 2591: point = 590, n_alt = 0
   Insn 2590: point = 592, n_alt = 0
   Insn 2589: point = 593, n_alt = 1
   Insn 2588: point = 595, n_alt = 0
   Insn 2587: point = 597, n_alt = 0
   Insn 2586: point = 598, n_alt = 7
   Insn 2585: point = 600, n_alt = 3
   Insn 2584: point = 601, n_alt = 3
   Insn 2583: point = 603, n_alt = 0
   Insn 2582: point = 605, n_alt = 0
   Insn 2581: point = 607, n_alt = 0
   Insn 2580: point = 608, n_alt = 0
   Insn 2579: point = 610, n_alt = 0
   Insn 2578: point = 612, n_alt = 0
   Insn 2577: point = 614, n_alt = 0
   Insn 2576: point = 615, n_alt = 1
   Insn 2575: point = 617, n_alt = 0
   Insn 2574: point = 619, n_alt = 0
   Insn 2573: point = 620, n_alt = 8
   Insn 2572: point = 621, n_alt = 7
   Insn 2571: point = 622, n_alt = 3
   Insn 2570: point = 623, n_alt = 3
   Insn 2569: point = 625, n_alt = 0
   Insn 2568: point = 627, n_alt = 0
   Insn 2567: point = 629, n_alt = 0
   Insn 2566: point = 630, n_alt = 0
   Insn 2565: point = 632, n_alt = 0
   Insn 2564: point = 634, n_alt = 0
   Insn 2563: point = 636, n_alt = 0
   Insn 2562: point = 637, n_alt = 1
   Insn 2561: point = 639, n_alt = 0
   Insn 2560: point = 641, n_alt = 0
  BB 124
   Insn 2555: point = 643, n_alt = -1
   Insn 2554: point = 643, n_alt = 1
   Insn 2553: point = 644, n_alt = 7
   Insn 2552: point = 645, n_alt = 7
   Insn 2551: point = 647, n_alt = 3
   Insn 2550: point = 648, n_alt = 3
   Insn 2549: point = 650, n_alt = 0
   Insn 2548: point = 652, n_alt = 0
   Insn 2547: point = 654, n_alt = 0
   Insn 2546: point = 655, n_alt = 0
   Insn 2545: point = 657, n_alt = 0
   Insn 2544: point = 659, n_alt = 0
   Insn 2543: point = 661, n_alt = 0
   Insn 2542: point = 662, n_alt = 1
   Insn 2541: point = 664, n_alt = 0
   Insn 2540: point = 666, n_alt = 0
   Insn 2539: point = 667, n_alt = 8
   Insn 2538: point = 668, n_alt = 3
   Insn 2537: point = 669, n_alt = 2
   Insn 2536: point = 671, n_alt = 3
   Insn 2535: point = 673, n_alt = 0
   Insn 2534: point = 675, n_alt = 0
   Insn 2533: point = 677, n_alt = 0
   Insn 2532: point = 678, n_alt = 0
   Insn 2531: point = 680, n_alt = 0
   Insn 2530: point = 682, n_alt = 0
   Insn 2529: point = 684, n_alt = 0
   Insn 2528: point = 685, n_alt = 1
   Insn 2527: point = 687, n_alt = 0
   Insn 2526: point = 689, n_alt = 0
   Insn 2525: point = 690, n_alt = 7
   Insn 2524: point = 692, n_alt = 4
   Insn 2523: point = 693, n_alt = 3
   Insn 2522: point = 695, n_alt = 0
   Insn 2521: point = 697, n_alt = 0
   Insn 2520: point = 699, n_alt = 0
   Insn 2519: point = 700, n_alt = 0
   Insn 2518: point = 702, n_alt = 0
   Insn 2517: point = 704, n_alt = 0
   Insn 2516: point = 706, n_alt = 0
   Insn 2515: point = 707, n_alt = 1
   Insn 2514: point = 709, n_alt = 0
   Insn 2513: point = 711, n_alt = 0
   Insn 2512: point = 712, n_alt = 7
   Insn 2511: point = 714, n_alt = 3
   Insn 2510: point = 715, n_alt = 3
   Insn 2509: point = 717, n_alt = 0
   Insn 2508: point = 719, n_alt = 0
   Insn 2507: point = 721, n_alt = 0
   Insn 2506: point = 722, n_alt = 0
   Insn 2505: point = 724, n_alt = 0
   Insn 2504: point = 726, n_alt = 0
   Insn 2503: point = 728, n_alt = 0
   Insn 2502: point = 729, n_alt = 1
   Insn 2501: point = 731, n_alt = 0
   Insn 2500: point = 733, n_alt = 0
  BB 123
   Insn 2497: point = 735, n_alt = 8
   Insn 2496: point = 736, n_alt = 3
   Insn 2495: point = 737, n_alt = 1
   Insn 2494: point = 739, n_alt = 7
   Insn 2493: point = 740, n_alt = 3
   Insn 2492: point = 742, n_alt = 0
   Insn 2491: point = 744, n_alt = 0
   Insn 2490: point = 746, n_alt = 0
   Insn 2489: point = 747, n_alt = 0
   Insn 2488: point = 749, n_alt = 0
   Insn 2487: point = 751, n_alt = 0
   Insn 2486: point = 753, n_alt = 0
   Insn 2485: point = 754, n_alt = 1
   Insn 2484: point = 756, n_alt = 0
   Insn 2483: point = 758, n_alt = 0
   Insn 3266: point = 759, n_alt = -2
	Hard reg 22 is preferable by r2389 with profit 1000
   Insn 2482: point = 761, n_alt = 1
   Insn 3265: point = 761, n_alt = -2
	Hard reg 22 is preferable by r2389 with profit 1000
	Hard reg 21 is preferable by r2389 with profit 1000
   Insn 2481: point = 763, n_alt = -2
   Insn 2480: point = 765, n_alt = 1
   Insn 2479: point = 767, n_alt = 7
   Insn 2478: point = 769, n_alt = 4
   Insn 2477: point = 770, n_alt = 3
   Insn 2476: point = 772, n_alt = 0
   Insn 2475: point = 774, n_alt = 0
   Insn 2474: point = 776, n_alt = 0
   Insn 2473: point = 777, n_alt = 0
   Insn 2472: point = 779, n_alt = 0
   Insn 2471: point = 781, n_alt = 0
   Insn 2470: point = 783, n_alt = 0
   Insn 2469: point = 784, n_alt = 1
   Insn 2468: point = 786, n_alt = 0
   Insn 2467: point = 788, n_alt = 0
   Insn 2466: point = 789, n_alt = 7
   Insn 2465: point = 791, n_alt = 0
   Insn 2464: point = 793, n_alt = 4
   Insn 2463: point = 794, n_alt = 3
   Insn 2462: point = 796, n_alt = 0
   Insn 2461: point = 798, n_alt = 0
   Insn 2460: point = 800, n_alt = 0
   Insn 2459: point = 801, n_alt = 0
   Insn 2458: point = 803, n_alt = 0
   Insn 2457: point = 805, n_alt = 0
   Insn 2456: point = 807, n_alt = 0
   Insn 2455: point = 808, n_alt = 1
   Insn 2454: point = 810, n_alt = 0
   Insn 2453: point = 812, n_alt = 0
   Insn 2452: point = 813, n_alt = 8
   Insn 2451: point = 814, n_alt = 3
   Insn 2450: point = 815, n_alt = 7
   Insn 2449: point = 817, n_alt = 4
   Insn 2448: point = 818, n_alt = 3
   Insn 2447: point = 820, n_alt = 0
   Insn 2446: point = 822, n_alt = 0
   Insn 2445: point = 824, n_alt = 0
   Insn 2444: point = 825, n_alt = 0
   Insn 2443: point = 827, n_alt = 0
   Insn 2442: point = 829, n_alt = 0
   Insn 2441: point = 831, n_alt = 0
   Insn 2440: point = 832, n_alt = 1
   Insn 2439: point = 834, n_alt = 0
   Insn 2438: point = 836, n_alt = 0
   Insn 2437: point = 837, n_alt = 3
   Insn 2436: point = 839, n_alt = 0
   Insn 2435: point = 841, n_alt = 0
   Insn 2434: point = 843, n_alt = 0
   Insn 2433: point = 844, n_alt = 0
   Insn 2432: point = 846, n_alt = 0
   Insn 2431: point = 848, n_alt = 0
   Insn 2430: point = 850, n_alt = 0
   Insn 2429: point = 851, n_alt = 1
   Insn 2428: point = 853, n_alt = 0
   Insn 2427: point = 855, n_alt = 0
   Insn 2426: point = 856, n_alt = 8
   Insn 2425: point = 857, n_alt = 7
   Insn 2424: point = 858, n_alt = 4
   Insn 2423: point = 859, n_alt = 3
   Insn 2422: point = 861, n_alt = 0
   Insn 2421: point = 863, n_alt = 0
   Insn 2420: point = 865, n_alt = 0
   Insn 2419: point = 866, n_alt = 0
   Insn 2418: point = 868, n_alt = 0
   Insn 2417: point = 870, n_alt = 0
   Insn 2416: point = 872, n_alt = 0
   Insn 2415: point = 873, n_alt = 1
   Insn 2414: point = 875, n_alt = 0
   Insn 2413: point = 877, n_alt = 0
   Insn 2412: point = 878, n_alt = 8
   Insn 2411: point = 879, n_alt = 7
  BB 121
   Insn 3161: point = 881, n_alt = -1
   Insn 2402: point = 881, n_alt = 8
   Insn 2401: point = 882, n_alt = 7
  BB 119
   Insn 3158: point = 884, n_alt = -1
   Insn 2380: point = 884, n_alt = 8
   Insn 2379: point = 885, n_alt = 7
  BB 117
   Insn 3155: point = 887, n_alt = -1
   Insn 2366: point = 887, n_alt = 8
   Insn 2365: point = 888, n_alt = 7
  BB 122
   Insn 2408: point = 890, n_alt = 8
   Insn 2407: point = 891, n_alt = 7
  BB 120
   Insn 2396: point = 893, n_alt = -1
   Insn 2395: point = 893, n_alt = 1
   Insn 2394: point = 894, n_alt = 7
   Insn 2393: point = 895, n_alt = 7
   Insn 2392: point = 897, n_alt = 4
   Insn 2391: point = 898, n_alt = 3
   Insn 2390: point = 900, n_alt = 0
   Insn 2389: point = 902, n_alt = 0
   Insn 2388: point = 904, n_alt = 0
   Insn 2387: point = 905, n_alt = 0
   Insn 2386: point = 907, n_alt = 0
   Insn 2385: point = 909, n_alt = 0
  BB 118
   Insn 2374: point = 911, n_alt = -1
   Insn 2373: point = 911, n_alt = 1
   Insn 2372: point = 912, n_alt = 7
   Insn 2371: point = 913, n_alt = 7
  BB 116
   Insn 2360: point = 915, n_alt = -1
   Insn 2359: point = 915, n_alt = 1
   Insn 2358: point = 916, n_alt = 7
   Insn 2357: point = 917, n_alt = 8
   Insn 2356: point = 918, n_alt = 1
   Insn 2355: point = 920, n_alt = 7
   Insn 2354: point = 921, n_alt = -2
   Insn 2353: point = 923, n_alt = 2
   Insn 2352: point = 925, n_alt = 7
   Insn 2351: point = 926, n_alt = 1
   Insn 2350: point = 928, n_alt = -2
   Insn 2349: point = 930, n_alt = 1
   Insn 2348: point = 932, n_alt = 7
   Insn 2347: point = 933, n_alt = 7
   Insn 2346: point = 934, n_alt = 1
   Insn 2345: point = 936, n_alt = 7
   Insn 2344: point = 937, n_alt = 7
   Insn 2343: point = 938, n_alt = 8
   Insn 2342: point = 939, n_alt = 1
   Insn 2341: point = 941, n_alt = 7
   Insn 2340: point = 942, n_alt = -2
   Insn 2339: point = 944, n_alt = 1
   Insn 2338: point = 946, n_alt = 1
  BB 115
   Insn 2335: point = 949, n_alt = 7
  BB 114
   Insn 2333: point = 951, n_alt = -1
   Insn 2332: point = 951, n_alt = 0
   Insn 2331: point = 952, n_alt = 0
   Insn 2330: point = 954, n_alt = 0
   Insn 2329: point = 956, n_alt = 0
   Insn 2328: point = 957, n_alt = 1
   Insn 2327: point = 957, n_alt = 0
   Insn 2326: point = 959, n_alt = 0
   Insn 2325: point = 960, n_alt = 1
   Insn 2324: point = 961, n_alt = 7
   Insn 2323: point = 962, n_alt = 7
   Insn 2322: point = 963, n_alt = 8
   Insn 2321: point = 964, n_alt = 1
   Insn 3264: point = 966, n_alt = 7
	   Creating copy r2388<-r2391@1000
   Insn 2320: point = 968, n_alt = -2
   Insn 2319: point = 969, n_alt = 0
   Insn 2318: point = 969, n_alt = -2
   Insn 2317: point = 970, n_alt = 2
   Insn 2316: point = 972, n_alt = -2
   Insn 2315: point = 974, n_alt = 2
   Insn 2314: point = 976, n_alt = 7
   Insn 2313: point = 977, n_alt = 7
   Insn 2312: point = 979, n_alt = 0
   Insn 2311: point = 981, n_alt = 4
   Insn 2310: point = 982, n_alt = 3
   Insn 2309: point = 984, n_alt = 0
   Insn 2308: point = 986, n_alt = 0
   Insn 2307: point = 988, n_alt = 0
   Insn 2306: point = 989, n_alt = 0
   Insn 2305: point = 991, n_alt = 0
   Insn 2304: point = 993, n_alt = 0
   Insn 2303: point = 995, n_alt = 0
   Insn 2302: point = 996, n_alt = 1
   Insn 2301: point = 998, n_alt = 0
   Insn 2300: point = 1000, n_alt = 0
   Insn 2299: point = 1001, n_alt = 1
   Insn 2298: point = 1003, n_alt = 7
   Insn 2297: point = 1004, n_alt = -2
   Insn 2296: point = 1006, n_alt = 2
   Insn 2295: point = 1008, n_alt = 7
   Insn 2294: point = 1009, n_alt = 7
   Insn 2293: point = 1011, n_alt = 0
   Insn 2292: point = 1013, n_alt = 4
   Insn 2291: point = 1014, n_alt = 3
   Insn 2290: point = 1016, n_alt = 0
   Insn 2289: point = 1018, n_alt = 0
   Insn 2288: point = 1020, n_alt = 0
   Insn 2287: point = 1021, n_alt = 0
   Insn 2286: point = 1023, n_alt = 0
   Insn 2285: point = 1025, n_alt = 0
   Insn 2284: point = 1027, n_alt = 0
   Insn 2283: point = 1028, n_alt = 1
   Insn 2282: point = 1030, n_alt = 0
   Insn 2281: point = 1032, n_alt = 0
   Insn 3263: point = 1033, n_alt = 8
	   Creating copy r2387->r2391@1000
   Insn 2280: point = 1035, n_alt = 2
   Insn 3262: point = 1035, n_alt = -2
	Hard reg 21 is preferable by r2387 with profit 1000
   Insn 2279: point = 1037, n_alt = 7
  BB 113
   Insn 2276: point = 1039, n_alt = 8
   Insn 2275: point = 1040, n_alt = 7
   Insn 2274: point = 1041, n_alt = 8
   Insn 2273: point = 1042, n_alt = 7
  BB 112
   Insn 2268: point = 1044, n_alt = -1
   Insn 2267: point = 1044, n_alt = 1
   Insn 2266: point = 1045, n_alt = 7
   Insn 2265: point = 1046, n_alt = 8
   Insn 2264: point = 1047, n_alt = 7
   Insn 2263: point = 1048, n_alt = 8
   Insn 2262: point = 1049, n_alt = 7
   Insn 2261: point = 1050, n_alt = 8
  BB 111
   Insn 2258: point = 1052, n_alt = 7
  BB 110
   Insn 2256: point = 1054, n_alt = -1
   Insn 2255: point = 1054, n_alt = 0
   Insn 2254: point = 1055, n_alt = 0
   Insn 2253: point = 1057, n_alt = 0
   Insn 2252: point = 1059, n_alt = 0
   Insn 2251: point = 1060, n_alt = 1
   Insn 2250: point = 1060, n_alt = 0
   Insn 2249: point = 1062, n_alt = 0
   Insn 2248: point = 1063, n_alt = 1
   Insn 2247: point = 1063, n_alt = 7
   Insn 2246: point = 1064, n_alt = 8
   Insn 2245: point = 1065, n_alt = 2
   Insn 2244: point = 1067, n_alt = 7
   Insn 2243: point = 1068, n_alt = 7
   Insn 2242: point = 1070, n_alt = 0
   Insn 2241: point = 1072, n_alt = 4
   Insn 2240: point = 1073, n_alt = 3
   Insn 2239: point = 1075, n_alt = 0
   Insn 2238: point = 1077, n_alt = 0
   Insn 2237: point = 1079, n_alt = 0
   Insn 2236: point = 1080, n_alt = 0
   Insn 2235: point = 1082, n_alt = 0
   Insn 2234: point = 1084, n_alt = 0
   Insn 2233: point = 1086, n_alt = 0
   Insn 2232: point = 1087, n_alt = 1
   Insn 2231: point = 1089, n_alt = 0
   Insn 2230: point = 1091, n_alt = 0
   Insn 2229: point = 1092, n_alt = 8
   Insn 2228: point = 1093, n_alt = 3
   Insn 2227: point = 1094, n_alt = 7
   Insn 2226: point = 1096, n_alt = 0
   Insn 2225: point = 1098, n_alt = 4
   Insn 2224: point = 1099, n_alt = 3
   Insn 2223: point = 1101, n_alt = 0
   Insn 2222: point = 1103, n_alt = 0
   Insn 2221: point = 1105, n_alt = 0
   Insn 2220: point = 1106, n_alt = 0
   Insn 2219: point = 1108, n_alt = 0
   Insn 2218: point = 1110, n_alt = 0
   Insn 2217: point = 1112, n_alt = 0
   Insn 2216: point = 1113, n_alt = 1
   Insn 2215: point = 1115, n_alt = 0
   Insn 2214: point = 1117, n_alt = 0
   Insn 2213: point = 1118, n_alt = 3
   Insn 2212: point = 1120, n_alt = 0
   Insn 2211: point = 1122, n_alt = 0
   Insn 2210: point = 1124, n_alt = 0
   Insn 2209: point = 1125, n_alt = 0
   Insn 2208: point = 1127, n_alt = 0
   Insn 2207: point = 1129, n_alt = 0
   Insn 2206: point = 1131, n_alt = 0
   Insn 2205: point = 1132, n_alt = 1
   Insn 2204: point = 1134, n_alt = 0
   Insn 2203: point = 1136, n_alt = 0
   Insn 2202: point = 1137, n_alt = 8
   Insn 2201: point = 1138, n_alt = 3
   Insn 2200: point = 1139, n_alt = 7
   Insn 2199: point = 1141, n_alt = 0
   Insn 2198: point = 1143, n_alt = 4
   Insn 2197: point = 1144, n_alt = 3
   Insn 2196: point = 1146, n_alt = 0
   Insn 2195: point = 1148, n_alt = 0
   Insn 2194: point = 1150, n_alt = 0
   Insn 2193: point = 1151, n_alt = 0
   Insn 2192: point = 1153, n_alt = 0
   Insn 2191: point = 1155, n_alt = 0
   Insn 2190: point = 1157, n_alt = 0
   Insn 2189: point = 1158, n_alt = 1
   Insn 2188: point = 1160, n_alt = 0
   Insn 2187: point = 1162, n_alt = 0
   Insn 2186: point = 1163, n_alt = 3
   Insn 2185: point = 1165, n_alt = 0
   Insn 2184: point = 1167, n_alt = 0
   Insn 2183: point = 1169, n_alt = 0
   Insn 2182: point = 1170, n_alt = 0
   Insn 2181: point = 1172, n_alt = 0
   Insn 2180: point = 1174, n_alt = 0
   Insn 2179: point = 1176, n_alt = 0
   Insn 2178: point = 1177, n_alt = 1
   Insn 2177: point = 1179, n_alt = 0
   Insn 2176: point = 1181, n_alt = 0
   Insn 2175: point = 1182, n_alt = 1
   Insn 2174: point = 1183, n_alt = 0
   Insn 2173: point = 1184, n_alt = 3
   Insn 2172: point = 1185, n_alt = 3
   Insn 2171: point = 1187, n_alt = 0
   Insn 2170: point = 1189, n_alt = 0
   Insn 2169: point = 1191, n_alt = 0
   Insn 2168: point = 1192, n_alt = 0
   Insn 2167: point = 1194, n_alt = 0
   Insn 2166: point = 1196, n_alt = 0
   Insn 2165: point = 1198, n_alt = 0
   Insn 2164: point = 1199, n_alt = 1
   Insn 2163: point = 1201, n_alt = 0
   Insn 2162: point = 1203, n_alt = 0
   Insn 2161: point = 1204, n_alt = 8
   Insn 2160: point = 1205, n_alt = 1
   Insn 2159: point = 1207, n_alt = 7
   Insn 2158: point = 1208, n_alt = -2
   Insn 2157: point = 1210, n_alt = 1
   Insn 2156: point = 1212, n_alt = 7
   Insn 2155: point = 1214, n_alt = 4
   Insn 2154: point = 1215, n_alt = 3
   Insn 2153: point = 1217, n_alt = 0
   Insn 2152: point = 1219, n_alt = 0
   Insn 2151: point = 1221, n_alt = 0
   Insn 2150: point = 1222, n_alt = 0
   Insn 2149: point = 1224, n_alt = 0
   Insn 2148: point = 1226, n_alt = 0
   Insn 2147: point = 1228, n_alt = 0
   Insn 2146: point = 1229, n_alt = 1
   Insn 2145: point = 1231, n_alt = 0
   Insn 2144: point = 1233, n_alt = 0
   Insn 2143: point = 1235, n_alt = 0
   Insn 2142: point = 1236, n_alt = 7
   Insn 2141: point = 1238, n_alt = 4
   Insn 2140: point = 1239, n_alt = 3
   Insn 2139: point = 1241, n_alt = 0
   Insn 2138: point = 1243, n_alt = 0
   Insn 2137: point = 1245, n_alt = 0
   Insn 2136: point = 1246, n_alt = 0
   Insn 2135: point = 1248, n_alt = 0
   Insn 2134: point = 1250, n_alt = 0
   Insn 2133: point = 1252, n_alt = 0
   Insn 2132: point = 1253, n_alt = 1
   Insn 2131: point = 1255, n_alt = 0
   Insn 2130: point = 1257, n_alt = 0
   Insn 2129: point = 1258, n_alt = 8
   Insn 2128: point = 1259, n_alt = 2
   Insn 2127: point = 1261, n_alt = 7
   Insn 2126: point = 1263, n_alt = 4
   Insn 2125: point = 1264, n_alt = 3
   Insn 2124: point = 1266, n_alt = 0
   Insn 2123: point = 1268, n_alt = 0
   Insn 2122: point = 1270, n_alt = 0
   Insn 2121: point = 1271, n_alt = 0
   Insn 2120: point = 1273, n_alt = 0
   Insn 2119: point = 1275, n_alt = 0
   Insn 2118: point = 1277, n_alt = 0
   Insn 2117: point = 1278, n_alt = 1
   Insn 2116: point = 1280, n_alt = 0
   Insn 2115: point = 1282, n_alt = 0
   Insn 2114: point = 1283, n_alt = 7
   Insn 2113: point = 1285, n_alt = 4
   Insn 2112: point = 1286, n_alt = 3
   Insn 2111: point = 1288, n_alt = 0
   Insn 2110: point = 1290, n_alt = 0
   Insn 2109: point = 1292, n_alt = 0
   Insn 2108: point = 1293, n_alt = 0
   Insn 2107: point = 1295, n_alt = 0
   Insn 2106: point = 1297, n_alt = 0
   Insn 2105: point = 1299, n_alt = 0
   Insn 2104: point = 1300, n_alt = 1
   Insn 2103: point = 1302, n_alt = 0
   Insn 2102: point = 1304, n_alt = 0
   Insn 2101: point = 1306, n_alt = 0
  BB 169
   Insn 3246: point = 1308, n_alt = -1
  BB 106
   Insn 2030: point = 1309, n_alt = -1
   Insn 2029: point = 1309, n_alt = 0
   Insn 2028: point = 1310, n_alt = 0
   Insn 2027: point = 1312, n_alt = 0
   Insn 2026: point = 1313, n_alt = 0
  BB 109
   Insn 3152: point = 1314, n_alt = -1
   Insn 2095: point = 1314, n_alt = 1
  BB 108
   Insn 2092: point = 1315, n_alt = 1
   Insn 2091: point = 1316, n_alt = 0
   Insn 2090: point = 1317, n_alt = 8
   Insn 2089: point = 1318, n_alt = 7
  BB 107
   Insn 2084: point = 1320, n_alt = -1
   Insn 2083: point = 1320, n_alt = 1
   Insn 2082: point = 1321, n_alt = 7
   Insn 2081: point = 1322, n_alt = 8
   Insn 2080: point = 1323, n_alt = 0
   Insn 2079: point = 1325, n_alt = 2
   Insn 2078: point = 1326, n_alt = 2
   Insn 2077: point = 1328, n_alt = 7
   Insn 2076: point = 1329, n_alt = 7
   Insn 2075: point = 1331, n_alt = 3
   Insn 2074: point = 1332, n_alt = 3
   Insn 2073: point = 1334, n_alt = 0
   Insn 2072: point = 1336, n_alt = 0
   Insn 2071: point = 1338, n_alt = 0
   Insn 2070: point = 1339, n_alt = 0
   Insn 2069: point = 1341, n_alt = 0
   Insn 2068: point = 1343, n_alt = 0
   Insn 2067: point = 1345, n_alt = 0
   Insn 2066: point = 1346, n_alt = 1
   Insn 2065: point = 1348, n_alt = 0
   Insn 2064: point = 1350, n_alt = 0
   Insn 2063: point = 1351, n_alt = 8
   Insn 2062: point = 1352, n_alt = 1
   Insn 2061: point = 1354, n_alt = 7
   Insn 2060: point = 1355, n_alt = -2
   Insn 2059: point = 1357, n_alt = 1
   Insn 2058: point = 1359, n_alt = 7
   Insn 2057: point = 1361, n_alt = 4
   Insn 2056: point = 1362, n_alt = 3
   Insn 2055: point = 1364, n_alt = 0
   Insn 2054: point = 1366, n_alt = 0
   Insn 2053: point = 1368, n_alt = 0
   Insn 2052: point = 1369, n_alt = 0
   Insn 2051: point = 1371, n_alt = 0
   Insn 2050: point = 1373, n_alt = 0
   Insn 2049: point = 1375, n_alt = 0
   Insn 2048: point = 1376, n_alt = 1
   Insn 2047: point = 1378, n_alt = 0
   Insn 2046: point = 1380, n_alt = 0
   Insn 2045: point = 1382, n_alt = 0
   Insn 2044: point = 1383, n_alt = 7
   Insn 2043: point = 1385, n_alt = 4
   Insn 2042: point = 1386, n_alt = 3
   Insn 2041: point = 1388, n_alt = 0
   Insn 2040: point = 1390, n_alt = 0
   Insn 2039: point = 1392, n_alt = 0
   Insn 2038: point = 1393, n_alt = 0
   Insn 2037: point = 1395, n_alt = 0
   Insn 2036: point = 1397, n_alt = 0
   Insn 2035: point = 1399, n_alt = 0
   Insn 2034: point = 1400, n_alt = 1
   Insn 2033: point = 1402, n_alt = 0
   Insn 2032: point = 1404, n_alt = 0
  BB 105
   Insn 2024: point = 1406, n_alt = 1
   Insn 2023: point = 1406, n_alt = 8
   Insn 2022: point = 1407, n_alt = 3
   Insn 2021: point = 1408, n_alt = 1
   Insn 2020: point = 1410, n_alt = 7
   Insn 2019: point = 1411, n_alt = 3
   Insn 2018: point = 1413, n_alt = 0
   Insn 2017: point = 1415, n_alt = 0
   Insn 2016: point = 1417, n_alt = 0
   Insn 2015: point = 1418, n_alt = 0
   Insn 2014: point = 1420, n_alt = 0
   Insn 2013: point = 1422, n_alt = 0
   Insn 2012: point = 1424, n_alt = 0
   Insn 2011: point = 1425, n_alt = 1
   Insn 2010: point = 1427, n_alt = 0
   Insn 2009: point = 1429, n_alt = 0
   Insn 2008: point = 1430, n_alt = -2
   Insn 2007: point = 1432, n_alt = 1
   Insn 2006: point = 1434, n_alt = 7
   Insn 2005: point = 1436, n_alt = 4
   Insn 2004: point = 1437, n_alt = 3
   Insn 2003: point = 1439, n_alt = 0
   Insn 2002: point = 1441, n_alt = 0
   Insn 2001: point = 1443, n_alt = 0
   Insn 2000: point = 1444, n_alt = 0
   Insn 1999: point = 1446, n_alt = 0
   Insn 1998: point = 1448, n_alt = 0
   Insn 1997: point = 1450, n_alt = 0
   Insn 1996: point = 1451, n_alt = 1
   Insn 1995: point = 1453, n_alt = 0
   Insn 1994: point = 1455, n_alt = 0
   Insn 1993: point = 1457, n_alt = 0
   Insn 1992: point = 1458, n_alt = 7
   Insn 1991: point = 1460, n_alt = 4
   Insn 1990: point = 1461, n_alt = 3
   Insn 1989: point = 1463, n_alt = 0
   Insn 1988: point = 1465, n_alt = 0
   Insn 1987: point = 1467, n_alt = 0
   Insn 1986: point = 1468, n_alt = 0
   Insn 1985: point = 1470, n_alt = 0
   Insn 1984: point = 1472, n_alt = 0
   Insn 1983: point = 1474, n_alt = 0
   Insn 1982: point = 1475, n_alt = 1
   Insn 1981: point = 1477, n_alt = 0
   Insn 1980: point = 1479, n_alt = 0
   Insn 1979: point = 1480, n_alt = 8
   Insn 1978: point = 1481, n_alt = 7
   Insn 1977: point = 1482, n_alt = 1
  BB 104
   Insn 1972: point = 1483, n_alt = -1
   Insn 1971: point = 1483, n_alt = 1
   Insn 1970: point = 1484, n_alt = 7
  BB 103
   Insn 1969: point = 1486, n_alt = -1
   Insn 1968: point = 1486, n_alt = 1
   Insn 1967: point = 1487, n_alt = 7
   Insn 1966: point = 1488, n_alt = 7
   Insn 1965: point = 1490, n_alt = 4
   Insn 1964: point = 1491, n_alt = 3
   Insn 1963: point = 1493, n_alt = 0
   Insn 1962: point = 1495, n_alt = 0
   Insn 1961: point = 1497, n_alt = 0
   Insn 1960: point = 1498, n_alt = 0
   Insn 1959: point = 1500, n_alt = 0
   Insn 1958: point = 1502, n_alt = 0
   Insn 1957: point = 1504, n_alt = 0
   Insn 1956: point = 1505, n_alt = 1
   Insn 1955: point = 1507, n_alt = 0
   Insn 1954: point = 1509, n_alt = 0
  BB 101
   Insn 1946: point = 1511, n_alt = 1
  BB 99
   Insn 1938: point = 1512, n_alt = 1
   Insn 1937: point = 1513, n_alt = 0
   Insn 1936: point = 1514, n_alt = 0
  BB 97
   Insn 1928: point = 1515, n_alt = 1
  BB 161
   Insn 3222: point = 1515, n_alt = -1
  BB 77
   Insn 1530: point = 1515, n_alt = -1
   Insn 1529: point = 1515, n_alt = 0
   Insn 1528: point = 1516, n_alt = 0
   Insn 1527: point = 1518, n_alt = 0
   Insn 1526: point = 1519, n_alt = 0
  BB 96
   Insn 3150: point = 1519, n_alt = -1
   Insn 1922: point = 1519, n_alt = 1
  BB 164
   Insn 3231: point = 1519, n_alt = -1
  BB 88
   Insn 1805: point = 1519, n_alt = -1
   Insn 1804: point = 1519, n_alt = 0
   Insn 1803: point = 1520, n_alt = 0
   Insn 1802: point = 1522, n_alt = 0
   Insn 1801: point = 1523, n_alt = 0
  BB 95
   Insn 3148: point = 1524, n_alt = -1
   Insn 1916: point = 1524, n_alt = 1
  BB 165
   Insn 3234: point = 1525, n_alt = -1
  BB 90
   Insn 1813: point = 1526, n_alt = -1
   Insn 1812: point = 1526, n_alt = 0
   Insn 1811: point = 1527, n_alt = 0
   Insn 1810: point = 1529, n_alt = 0
   Insn 1809: point = 1530, n_alt = 0
  BB 94
   Insn 3146: point = 1531, n_alt = -1
   Insn 1910: point = 1531, n_alt = 1
  BB 93
   Insn 1907: point = 1532, n_alt = 8
   Insn 1906: point = 1533, n_alt = 3
   Insn 1905: point = 1534, n_alt = 1
   Insn 1904: point = 1536, n_alt = 3
   Insn 1903: point = 1538, n_alt = 0
   Insn 1902: point = 1540, n_alt = 1
   Insn 1901: point = 1542, n_alt = 0
   Insn 1900: point = 1543, n_alt = 0
   Insn 1899: point = 1545, n_alt = 0
   Insn 1898: point = 1547, n_alt = 1
   Insn 1897: point = 1549, n_alt = 0
   Insn 1896: point = 1550, n_alt = 1
   Insn 1895: point = 1552, n_alt = 1
   Insn 1894: point = 1554, n_alt = 0
   Insn 1893: point = 1555, n_alt = 7
   Insn 1892: point = 1557, n_alt = 3
   Insn 1891: point = 1558, n_alt = 3
   Insn 1890: point = 1560, n_alt = 0
   Insn 1889: point = 1562, n_alt = 1
   Insn 1888: point = 1564, n_alt = 0
   Insn 1887: point = 1565, n_alt = 0
   Insn 1886: point = 1567, n_alt = 0
   Insn 1885: point = 1569, n_alt = 1
   Insn 1884: point = 1571, n_alt = 0
   Insn 1883: point = 1572, n_alt = 1
   Insn 1882: point = 1574, n_alt = 1
   Insn 1881: point = 1576, n_alt = 0
   Insn 1880: point = 1577, n_alt = 8
   Insn 1879: point = 1578, n_alt = 3
   Insn 1878: point = 1579, n_alt = 1
   Insn 1877: point = 1581, n_alt = 3
   Insn 1876: point = 1583, n_alt = 0
   Insn 1875: point = 1585, n_alt = 1
   Insn 1874: point = 1587, n_alt = 0
   Insn 1873: point = 1588, n_alt = 0
   Insn 1872: point = 1590, n_alt = 0
   Insn 1871: point = 1592, n_alt = 1
   Insn 1870: point = 1594, n_alt = 0
   Insn 1869: point = 1595, n_alt = 1
   Insn 1868: point = 1597, n_alt = 1
   Insn 1867: point = 1599, n_alt = 0
   Insn 1866: point = 1600, n_alt = 7
   Insn 1865: point = 1602, n_alt = 3
   Insn 1864: point = 1603, n_alt = 3
   Insn 1863: point = 1605, n_alt = 0
   Insn 1862: point = 1607, n_alt = 1
   Insn 1861: point = 1609, n_alt = 0
   Insn 1860: point = 1610, n_alt = 0
   Insn 1859: point = 1612, n_alt = 0
   Insn 1858: point = 1614, n_alt = 1
   Insn 1857: point = 1616, n_alt = 0
   Insn 1856: point = 1617, n_alt = 1
   Insn 1855: point = 1619, n_alt = 1
   Insn 1854: point = 1621, n_alt = 0
   Insn 1853: point = 1622, n_alt = 8
   Insn 1852: point = 1623, n_alt = 2
   Insn 1851: point = 1625, n_alt = 7
   Insn 1850: point = 1626, n_alt = 7
   Insn 1849: point = 1628, n_alt = 4
   Insn 1848: point = 1629, n_alt = 3
   Insn 1847: point = 1631, n_alt = 0
   Insn 1846: point = 1633, n_alt = 1
   Insn 1845: point = 1635, n_alt = 0
   Insn 1844: point = 1636, n_alt = 0
   Insn 1843: point = 1638, n_alt = 0
   Insn 1842: point = 1640, n_alt = 1
   Insn 1841: point = 1642, n_alt = 0
   Insn 1840: point = 1643, n_alt = 1
   Insn 1839: point = 1645, n_alt = 1
   Insn 1838: point = 1647, n_alt = 0
  BB 92
   Insn 1833: point = 1649, n_alt = -1
   Insn 1832: point = 1649, n_alt = 1
   Insn 1831: point = 1650, n_alt = 7
  BB 91
   Insn 1830: point = 1652, n_alt = -1
   Insn 1829: point = 1652, n_alt = 1
   Insn 1828: point = 1653, n_alt = 7
   Insn 1827: point = 1654, n_alt = 7
   Insn 1826: point = 1656, n_alt = 4
   Insn 1825: point = 1657, n_alt = 3
   Insn 1824: point = 1659, n_alt = 0
   Insn 1823: point = 1661, n_alt = 1
   Insn 1822: point = 1663, n_alt = 0
   Insn 1821: point = 1664, n_alt = 0
   Insn 1820: point = 1666, n_alt = 0
   Insn 1819: point = 1668, n_alt = 1
   Insn 1818: point = 1670, n_alt = 0
   Insn 1817: point = 1671, n_alt = 1
   Insn 1816: point = 1673, n_alt = 1
   Insn 1815: point = 1675, n_alt = 0
  BB 89
   Insn 1807: point = 1677, n_alt = 1
  BB 87
   Insn 1799: point = 1678, n_alt = 1
   Insn 1798: point = 1679, n_alt = 0
   Insn 1797: point = 1680, n_alt = 0
  BB 162
   Insn 3225: point = 1681, n_alt = -1
  BB 79
   Insn 1540: point = 1681, n_alt = -1
   Insn 1539: point = 1681, n_alt = 0
   Insn 1538: point = 1682, n_alt = 0
   Insn 1537: point = 1684, n_alt = 0
   Insn 1536: point = 1685, n_alt = 0
  BB 86
   Insn 3144: point = 1686, n_alt = -1
   Insn 1791: point = 1686, n_alt = 1
  BB 163
   Insn 3228: point = 1687, n_alt = -1
  BB 81
   Insn 1548: point = 1688, n_alt = -1
   Insn 1547: point = 1688, n_alt = 0
   Insn 1546: point = 1689, n_alt = 0
   Insn 1545: point = 1691, n_alt = 0
   Insn 1544: point = 1692, n_alt = 0
  BB 85
   Insn 3142: point = 1693, n_alt = -1
   Insn 1785: point = 1693, n_alt = 1
  BB 84
   Insn 1782: point = 1694, n_alt = 8
   Insn 1781: point = 1695, n_alt = 3
   Insn 1780: point = 1696, n_alt = 1
   Insn 1779: point = 1698, n_alt = 3
   Insn 1778: point = 1700, n_alt = 0
   Insn 1777: point = 1702, n_alt = 1
   Insn 1776: point = 1704, n_alt = 0
   Insn 1775: point = 1705, n_alt = 0
   Insn 1774: point = 1707, n_alt = 0
   Insn 1773: point = 1709, n_alt = 1
   Insn 1772: point = 1711, n_alt = 0
   Insn 1771: point = 1712, n_alt = 1
   Insn 1770: point = 1714, n_alt = 1
   Insn 1769: point = 1716, n_alt = 0
   Insn 1768: point = 1717, n_alt = 7
   Insn 1767: point = 1719, n_alt = 3
   Insn 1766: point = 1720, n_alt = 3
   Insn 1765: point = 1722, n_alt = 0
   Insn 1764: point = 1724, n_alt = 1
   Insn 1763: point = 1726, n_alt = 0
   Insn 1762: point = 1727, n_alt = 0
   Insn 1761: point = 1729, n_alt = 0
   Insn 1760: point = 1731, n_alt = 1
   Insn 1759: point = 1733, n_alt = 0
   Insn 1758: point = 1734, n_alt = 1
   Insn 1757: point = 1736, n_alt = 1
   Insn 1756: point = 1738, n_alt = 0
   Insn 1755: point = 1739, n_alt = 8
   Insn 1754: point = 1740, n_alt = 4
   Insn 1753: point = 1741, n_alt = 1
   Insn 1752: point = 1743, n_alt = 3
   Insn 1751: point = 1745, n_alt = 0
   Insn 1750: point = 1747, n_alt = 1
   Insn 1749: point = 1749, n_alt = 0
   Insn 1748: point = 1750, n_alt = 0
   Insn 1747: point = 1752, n_alt = 0
   Insn 1746: point = 1754, n_alt = 1
   Insn 1745: point = 1756, n_alt = 0
   Insn 1744: point = 1757, n_alt = 1
   Insn 1743: point = 1759, n_alt = 1
   Insn 1742: point = 1761, n_alt = 0
   Insn 1741: point = 1762, n_alt = 7
   Insn 1740: point = 1764, n_alt = 4
   Insn 1739: point = 1765, n_alt = 3
   Insn 1738: point = 1767, n_alt = 0
   Insn 1737: point = 1769, n_alt = 1
   Insn 1736: point = 1771, n_alt = 0
   Insn 1735: point = 1772, n_alt = 0
   Insn 1734: point = 1774, n_alt = 0
   Insn 1733: point = 1776, n_alt = 1
   Insn 1732: point = 1778, n_alt = 0
   Insn 1731: point = 1779, n_alt = 1
   Insn 1730: point = 1781, n_alt = 1
   Insn 1729: point = 1783, n_alt = 0
   Insn 1728: point = 1784, n_alt = 8
   Insn 1727: point = 1785, n_alt = 3
   Insn 1726: point = 1786, n_alt = 1
   Insn 1725: point = 1788, n_alt = 3
   Insn 1724: point = 1790, n_alt = 0
   Insn 1723: point = 1792, n_alt = 1
   Insn 1722: point = 1794, n_alt = 0
   Insn 1721: point = 1795, n_alt = 0
   Insn 1720: point = 1797, n_alt = 0
   Insn 1719: point = 1799, n_alt = 1
   Insn 1718: point = 1801, n_alt = 0
   Insn 1717: point = 1802, n_alt = 1
   Insn 1716: point = 1804, n_alt = 1
   Insn 1715: point = 1806, n_alt = 0
   Insn 1714: point = 1807, n_alt = 7
   Insn 1713: point = 1809, n_alt = 3
   Insn 1712: point = 1810, n_alt = 3
   Insn 1711: point = 1812, n_alt = 0
   Insn 1710: point = 1814, n_alt = 1
   Insn 1709: point = 1816, n_alt = 0
   Insn 1708: point = 1817, n_alt = 0
   Insn 1707: point = 1819, n_alt = 0
   Insn 1706: point = 1821, n_alt = 1
   Insn 1705: point = 1823, n_alt = 0
   Insn 1704: point = 1824, n_alt = 1
   Insn 1703: point = 1826, n_alt = 1
   Insn 1702: point = 1828, n_alt = 0
   Insn 1701: point = 1829, n_alt = 8
   Insn 1700: point = 1830, n_alt = 3
   Insn 1699: point = 1831, n_alt = 1
   Insn 1698: point = 1833, n_alt = 3
   Insn 1697: point = 1835, n_alt = 0
   Insn 1696: point = 1837, n_alt = 1
   Insn 1695: point = 1839, n_alt = 0
   Insn 1694: point = 1840, n_alt = 0
   Insn 1693: point = 1842, n_alt = 0
   Insn 1692: point = 1844, n_alt = 1
   Insn 1691: point = 1846, n_alt = 0
   Insn 1690: point = 1847, n_alt = 1
   Insn 1689: point = 1849, n_alt = 1
   Insn 1688: point = 1851, n_alt = 0
   Insn 1687: point = 1852, n_alt = 7
   Insn 1686: point = 1854, n_alt = 3
   Insn 1685: point = 1855, n_alt = 3
   Insn 1684: point = 1857, n_alt = 0
   Insn 1683: point = 1859, n_alt = 1
   Insn 1682: point = 1861, n_alt = 0
   Insn 1681: point = 1862, n_alt = 0
   Insn 1680: point = 1864, n_alt = 0
   Insn 1679: point = 1866, n_alt = 1
   Insn 1678: point = 1868, n_alt = 0
   Insn 1677: point = 1869, n_alt = 1
   Insn 1676: point = 1871, n_alt = 1
   Insn 1675: point = 1873, n_alt = 0
   Insn 1674: point = 1874, n_alt = 8
   Insn 1673: point = 1875, n_alt = 3
   Insn 1672: point = 1876, n_alt = 1
   Insn 1671: point = 1878, n_alt = 7
   Insn 1670: point = 1879, n_alt = 3
   Insn 1669: point = 1881, n_alt = 0
   Insn 1668: point = 1883, n_alt = 1
   Insn 1667: point = 1885, n_alt = 0
   Insn 1666: point = 1886, n_alt = 0
   Insn 1665: point = 1888, n_alt = 0
   Insn 1664: point = 1890, n_alt = 1
   Insn 1663: point = 1892, n_alt = 0
   Insn 1662: point = 1893, n_alt = 1
   Insn 1661: point = 1895, n_alt = 1
   Insn 1660: point = 1897, n_alt = 0
   Insn 1659: point = 1898, n_alt = -2
   Insn 1658: point = 1900, n_alt = 1
   Insn 1657: point = 1902, n_alt = 7
   Insn 1656: point = 1904, n_alt = 4
   Insn 1655: point = 1905, n_alt = 3
   Insn 1654: point = 1907, n_alt = 0
   Insn 1653: point = 1909, n_alt = 1
   Insn 1652: point = 1911, n_alt = 0
   Insn 1651: point = 1912, n_alt = 0
   Insn 1650: point = 1914, n_alt = 0
   Insn 1649: point = 1916, n_alt = 1
   Insn 1648: point = 1918, n_alt = 0
   Insn 1647: point = 1919, n_alt = 1
   Insn 1646: point = 1921, n_alt = 1
   Insn 1645: point = 1923, n_alt = 0
   Insn 1644: point = 1925, n_alt = 0
   Insn 1643: point = 1926, n_alt = 7
   Insn 1642: point = 1928, n_alt = 4
   Insn 1641: point = 1929, n_alt = 3
   Insn 1640: point = 1931, n_alt = 0
   Insn 1639: point = 1933, n_alt = 1
   Insn 1638: point = 1935, n_alt = 0
   Insn 1637: point = 1936, n_alt = 0
   Insn 1636: point = 1938, n_alt = 0
   Insn 1635: point = 1940, n_alt = 1
   Insn 1634: point = 1942, n_alt = 0
   Insn 1633: point = 1943, n_alt = 1
   Insn 1632: point = 1945, n_alt = 1
   Insn 1631: point = 1947, n_alt = 0
   Insn 1630: point = 1948, n_alt = 1
   Insn 1629: point = 1949, n_alt = 3
   Insn 1628: point = 1950, n_alt = 0
   Insn 1627: point = 1952, n_alt = 3
   Insn 1626: point = 1954, n_alt = 0
   Insn 1625: point = 1956, n_alt = 1
   Insn 1624: point = 1958, n_alt = 0
   Insn 1623: point = 1959, n_alt = 0
   Insn 1622: point = 1961, n_alt = 0
   Insn 1621: point = 1963, n_alt = 1
   Insn 1620: point = 1965, n_alt = 0
   Insn 1619: point = 1966, n_alt = 1
   Insn 1618: point = 1968, n_alt = 1
   Insn 1617: point = 1970, n_alt = 0
   Insn 1616: point = 1971, n_alt = 2
   Insn 1615: point = 1973, n_alt = 7
   Insn 1614: point = 1975, n_alt = 4
   Insn 1613: point = 1976, n_alt = 3
   Insn 1612: point = 1978, n_alt = 0
   Insn 1611: point = 1980, n_alt = 1
   Insn 1610: point = 1982, n_alt = 0
   Insn 1609: point = 1983, n_alt = 0
   Insn 1608: point = 1985, n_alt = 0
   Insn 1607: point = 1987, n_alt = 1
   Insn 1606: point = 1989, n_alt = 0
   Insn 1605: point = 1990, n_alt = 1
   Insn 1604: point = 1992, n_alt = 1
   Insn 1603: point = 1994, n_alt = 0
   Insn 1602: point = 1995, n_alt = 1
   Insn 1601: point = 1997, n_alt = 0
   Insn 1600: point = 1999, n_alt = 3
   Insn 1599: point = 2000, n_alt = 3
   Insn 1598: point = 2002, n_alt = 0
   Insn 1597: point = 2004, n_alt = 1
   Insn 1596: point = 2006, n_alt = 0
   Insn 1595: point = 2007, n_alt = 0
   Insn 1594: point = 2009, n_alt = 0
   Insn 1593: point = 2011, n_alt = 1
   Insn 1592: point = 2013, n_alt = 0
   Insn 1591: point = 2014, n_alt = 1
   Insn 1590: point = 2016, n_alt = 1
   Insn 1589: point = 2018, n_alt = 0
   Insn 1588: point = 2019, n_alt = 8
   Insn 1587: point = 2020, n_alt = 2
   Insn 1586: point = 2022, n_alt = 7
   Insn 1585: point = 2023, n_alt = 7
   Insn 1584: point = 2025, n_alt = 4
   Insn 1583: point = 2026, n_alt = 3
   Insn 1582: point = 2028, n_alt = 0
   Insn 1581: point = 2030, n_alt = 1
   Insn 1580: point = 2032, n_alt = 0
   Insn 1579: point = 2033, n_alt = 0
   Insn 1578: point = 2035, n_alt = 0
   Insn 1577: point = 2037, n_alt = 1
   Insn 1576: point = 2039, n_alt = 0
   Insn 1575: point = 2040, n_alt = 1
   Insn 1574: point = 2042, n_alt = 1
   Insn 1573: point = 2044, n_alt = 0
  BB 83
   Insn 1568: point = 2046, n_alt = -1
   Insn 1567: point = 2046, n_alt = 1
   Insn 1566: point = 2047, n_alt = 7
  BB 82
   Insn 1565: point = 2049, n_alt = -1
   Insn 1564: point = 2049, n_alt = 1
   Insn 1563: point = 2050, n_alt = 7
   Insn 1562: point = 2051, n_alt = 7
   Insn 1561: point = 2053, n_alt = 4
   Insn 1560: point = 2054, n_alt = 3
   Insn 1559: point = 2056, n_alt = 0
   Insn 1558: point = 2058, n_alt = 1
   Insn 1557: point = 2060, n_alt = 0
   Insn 1556: point = 2061, n_alt = 0
   Insn 1555: point = 2063, n_alt = 0
   Insn 1554: point = 2065, n_alt = 1
   Insn 1553: point = 2067, n_alt = 0
   Insn 1552: point = 2068, n_alt = 1
   Insn 1551: point = 2070, n_alt = 1
   Insn 1550: point = 2072, n_alt = 0
  BB 80
   Insn 1542: point = 2074, n_alt = 1
  BB 78
   Insn 1534: point = 2075, n_alt = 1
   Insn 1533: point = 2076, n_alt = 0
   Insn 1532: point = 2077, n_alt = 0
  BB 76
   Insn 1524: point = 2078, n_alt = 1
  BB 151
   Insn 3192: point = 2078, n_alt = -1
  BB 18
   Insn 143: point = 2078, n_alt = -1
   Insn 142: point = 2078, n_alt = 0
   Insn 141: point = 2079, n_alt = 0
   Insn 140: point = 2081, n_alt = 0
   Insn 139: point = 2082, n_alt = 0
  BB 75
   Insn 3140: point = 2082, n_alt = -1
   Insn 1518: point = 2082, n_alt = 1
  BB 158
   Insn 3213: point = 2082, n_alt = -1
  BB 64
   Insn 1170: point = 2082, n_alt = -1
   Insn 1169: point = 2082, n_alt = 0
   Insn 1168: point = 2083, n_alt = 0
   Insn 1167: point = 2085, n_alt = 0
   Insn 1166: point = 2086, n_alt = 0
  BB 74
   Insn 3138: point = 2086, n_alt = -1
   Insn 1512: point = 2086, n_alt = 1
  BB 159
   Insn 3216: point = 2086, n_alt = -1
  BB 66
   Insn 1180: point = 2086, n_alt = -1
   Insn 1179: point = 2086, n_alt = 0
   Insn 1178: point = 2087, n_alt = 0
   Insn 1177: point = 2089, n_alt = 0
   Insn 1176: point = 2090, n_alt = 0
  BB 73
   Insn 3136: point = 2091, n_alt = -1
   Insn 1506: point = 2091, n_alt = 1
  BB 160
   Insn 3219: point = 2092, n_alt = -1
  BB 68
   Insn 1188: point = 2093, n_alt = -1
   Insn 1187: point = 2093, n_alt = 0
   Insn 1186: point = 2094, n_alt = 0
   Insn 1185: point = 2096, n_alt = 0
   Insn 1184: point = 2097, n_alt = 0
  BB 72
   Insn 3134: point = 2098, n_alt = -1
   Insn 1500: point = 2098, n_alt = 1
  BB 71
   Insn 1497: point = 2099, n_alt = 8
   Insn 1496: point = 2100, n_alt = 3
   Insn 1495: point = 2101, n_alt = 1
   Insn 1494: point = 2103, n_alt = 3
   Insn 1493: point = 2105, n_alt = 0
   Insn 1492: point = 2107, n_alt = 1
   Insn 1491: point = 2109, n_alt = 0
   Insn 1490: point = 2110, n_alt = 0
   Insn 1489: point = 2112, n_alt = 0
   Insn 1488: point = 2114, n_alt = 1
   Insn 1487: point = 2116, n_alt = 0
   Insn 1486: point = 2117, n_alt = 1
   Insn 1485: point = 2119, n_alt = 1
   Insn 1484: point = 2121, n_alt = 0
   Insn 1483: point = 2122, n_alt = 1
   Insn 1482: point = 2124, n_alt = 7
   Insn 1481: point = 2126, n_alt = 0
   Insn 1480: point = 2128, n_alt = 4
   Insn 1479: point = 2129, n_alt = 3
   Insn 1478: point = 2131, n_alt = 0
   Insn 1477: point = 2133, n_alt = 1
   Insn 1476: point = 2135, n_alt = 0
   Insn 1475: point = 2136, n_alt = 0
   Insn 1474: point = 2138, n_alt = 0
   Insn 1473: point = 2140, n_alt = 1
   Insn 1472: point = 2142, n_alt = 0
   Insn 1471: point = 2143, n_alt = 1
   Insn 1470: point = 2145, n_alt = 1
   Insn 1469: point = 2147, n_alt = 0
   Insn 1468: point = 2148, n_alt = 7
   Insn 1467: point = 2150, n_alt = 3
   Insn 1466: point = 2151, n_alt = 3
   Insn 1465: point = 2153, n_alt = 0
   Insn 1464: point = 2155, n_alt = 1
   Insn 1463: point = 2157, n_alt = 0
   Insn 1462: point = 2158, n_alt = 0
   Insn 1461: point = 2160, n_alt = 0
   Insn 1460: point = 2162, n_alt = 1
   Insn 1459: point = 2164, n_alt = 0
   Insn 1458: point = 2165, n_alt = 1
   Insn 1457: point = 2167, n_alt = 1
   Insn 1456: point = 2169, n_alt = 0
   Insn 1455: point = 2170, n_alt = 8
   Insn 1454: point = 2171, n_alt = 3
   Insn 1453: point = 2172, n_alt = 1
   Insn 1452: point = 2174, n_alt = 3
   Insn 1451: point = 2176, n_alt = 0
   Insn 1450: point = 2178, n_alt = 1
   Insn 1449: point = 2180, n_alt = 0
   Insn 1448: point = 2181, n_alt = 0
   Insn 1447: point = 2183, n_alt = 0
   Insn 1446: point = 2185, n_alt = 1
   Insn 1445: point = 2187, n_alt = 0
   Insn 1444: point = 2188, n_alt = 1
   Insn 1443: point = 2190, n_alt = 1
   Insn 1442: point = 2192, n_alt = 0
   Insn 1441: point = 2193, n_alt = 1
   Insn 1440: point = 2195, n_alt = 7
   Insn 1439: point = 2197, n_alt = 0
   Insn 1438: point = 2199, n_alt = 4
   Insn 1437: point = 2200, n_alt = 3
   Insn 1436: point = 2202, n_alt = 0
   Insn 1435: point = 2204, n_alt = 1
   Insn 1434: point = 2206, n_alt = 0
   Insn 1433: point = 2207, n_alt = 0
   Insn 1432: point = 2209, n_alt = 0
   Insn 1431: point = 2211, n_alt = 1
   Insn 1430: point = 2213, n_alt = 0
   Insn 1429: point = 2214, n_alt = 1
   Insn 1428: point = 2216, n_alt = 1
   Insn 1427: point = 2218, n_alt = 0
   Insn 1426: point = 2219, n_alt = 7
   Insn 1425: point = 2221, n_alt = 3
   Insn 1424: point = 2222, n_alt = 3
   Insn 1423: point = 2224, n_alt = 0
   Insn 1422: point = 2226, n_alt = 1
   Insn 1421: point = 2228, n_alt = 0
   Insn 1420: point = 2229, n_alt = 0
   Insn 1419: point = 2231, n_alt = 0
   Insn 1418: point = 2233, n_alt = 1
   Insn 1417: point = 2235, n_alt = 0
   Insn 1416: point = 2236, n_alt = 1
   Insn 1415: point = 2238, n_alt = 1
   Insn 1414: point = 2240, n_alt = 0
   Insn 1413: point = 2241, n_alt = 8
   Insn 1412: point = 2242, n_alt = 4
   Insn 1411: point = 2243, n_alt = 1
   Insn 1410: point = 2245, n_alt = 3
   Insn 1409: point = 2247, n_alt = 0
   Insn 1408: point = 2249, n_alt = 1
   Insn 1407: point = 2251, n_alt = 0
   Insn 1406: point = 2252, n_alt = 0
   Insn 1405: point = 2254, n_alt = 0
   Insn 1404: point = 2256, n_alt = 1
   Insn 1403: point = 2258, n_alt = 0
   Insn 1402: point = 2259, n_alt = 1
   Insn 1401: point = 2261, n_alt = 1
   Insn 1400: point = 2263, n_alt = 0
   Insn 1399: point = 2264, n_alt = 7
   Insn 1398: point = 2266, n_alt = 4
   Insn 1397: point = 2267, n_alt = 3
   Insn 1396: point = 2269, n_alt = 0
   Insn 1395: point = 2271, n_alt = 1
   Insn 1394: point = 2273, n_alt = 0
   Insn 1393: point = 2274, n_alt = 0
   Insn 1392: point = 2276, n_alt = 0
   Insn 1391: point = 2278, n_alt = 1
   Insn 1390: point = 2280, n_alt = 0
   Insn 1389: point = 2281, n_alt = 1
   Insn 1388: point = 2283, n_alt = 1
   Insn 1387: point = 2285, n_alt = 0
  BB 70
   Insn 1382: point = 2287, n_alt = -1
   Insn 1381: point = 2287, n_alt = 1
   Insn 1380: point = 2288, n_alt = 7
   Insn 1379: point = 2289, n_alt = 7
   Insn 1378: point = 2291, n_alt = 4
   Insn 1377: point = 2292, n_alt = 3
   Insn 1376: point = 2294, n_alt = 0
   Insn 1375: point = 2296, n_alt = 1
   Insn 1374: point = 2298, n_alt = 0
   Insn 1373: point = 2299, n_alt = 0
   Insn 1372: point = 2301, n_alt = 0
   Insn 1371: point = 2303, n_alt = 1
   Insn 1370: point = 2305, n_alt = 0
   Insn 1369: point = 2306, n_alt = 1
   Insn 1368: point = 2308, n_alt = 1
   Insn 1367: point = 2310, n_alt = 0
   Insn 1366: point = 2312, n_alt = 0
  BB 69
   Insn 1361: point = 2314, n_alt = -1
   Insn 1360: point = 2314, n_alt = 1
   Insn 1359: point = 2315, n_alt = 7
   Insn 1358: point = 2317, n_alt = 4
   Insn 1357: point = 2318, n_alt = 3
   Insn 1356: point = 2320, n_alt = 0
   Insn 1355: point = 2322, n_alt = 1
   Insn 1354: point = 2324, n_alt = 0
   Insn 1353: point = 2325, n_alt = 0
   Insn 1352: point = 2327, n_alt = 0
   Insn 1351: point = 2329, n_alt = 1
   Insn 1350: point = 2331, n_alt = 0
   Insn 1349: point = 2332, n_alt = 1
   Insn 1348: point = 2334, n_alt = 1
   Insn 1347: point = 2336, n_alt = 0
   Insn 1346: point = 2337, n_alt = 8
   Insn 1345: point = 2338, n_alt = 1
   Insn 1344: point = 2340, n_alt = 7
   Insn 1343: point = 2341, n_alt = -2
   Insn 1342: point = 2343, n_alt = 1
   Insn 1341: point = 2345, n_alt = 7
   Insn 1340: point = 2346, n_alt = 8
   Insn 1339: point = 2347, n_alt = 2
   Insn 1338: point = 2349, n_alt = 7
   Insn 1337: point = 2350, n_alt = 8
   Insn 1336: point = 2351, n_alt = 1
   Insn 1335: point = 2353, n_alt = 7
   Insn 1334: point = 2354, n_alt = -2
   Insn 1333: point = 2356, n_alt = 1
   Insn 1332: point = 2358, n_alt = 7
   Insn 1331: point = 2360, n_alt = 4
   Insn 1330: point = 2361, n_alt = 3
   Insn 1329: point = 2363, n_alt = 0
   Insn 1328: point = 2365, n_alt = 1
   Insn 1327: point = 2367, n_alt = 0
   Insn 1326: point = 2368, n_alt = 0
   Insn 1325: point = 2370, n_alt = 0
   Insn 1324: point = 2372, n_alt = 1
   Insn 1323: point = 2374, n_alt = 0
   Insn 1322: point = 2376, n_alt = 0
   Insn 1321: point = 2377, n_alt = 1
   Insn 1320: point = 2379, n_alt = 1
   Insn 1319: point = 2381, n_alt = 0
   Insn 1318: point = 2383, n_alt = 0
   Insn 1317: point = 2384, n_alt = 1
   Insn 1316: point = 2386, n_alt = 7
   Insn 1315: point = 2388, n_alt = 4
   Insn 1314: point = 2389, n_alt = 3
   Insn 1313: point = 2391, n_alt = 0
   Insn 1312: point = 2393, n_alt = 1
   Insn 1311: point = 2395, n_alt = 0
   Insn 1310: point = 2396, n_alt = 0
   Insn 1309: point = 2398, n_alt = 0
   Insn 1308: point = 2400, n_alt = 1
   Insn 1307: point = 2402, n_alt = 0
   Insn 1306: point = 2404, n_alt = 0
   Insn 1305: point = 2405, n_alt = 1
   Insn 1304: point = 2407, n_alt = 1
   Insn 1303: point = 2409, n_alt = 0
   Insn 1302: point = 2411, n_alt = 0
   Insn 1301: point = 2412, n_alt = 1
   Insn 1300: point = 2414, n_alt = 7
   Insn 1299: point = 2416, n_alt = 4
   Insn 1298: point = 2417, n_alt = 3
   Insn 1297: point = 2419, n_alt = 0
   Insn 1296: point = 2421, n_alt = 1
   Insn 1295: point = 2423, n_alt = 0
   Insn 1294: point = 2424, n_alt = 0
   Insn 1293: point = 2426, n_alt = 0
   Insn 1292: point = 2428, n_alt = 1
   Insn 1291: point = 2430, n_alt = 0
   Insn 1290: point = 2431, n_alt = 1
   Insn 1289: point = 2433, n_alt = 1
   Insn 1288: point = 2435, n_alt = 0
   Insn 1287: point = 2437, n_alt = 0
   Insn 1286: point = 2438, n_alt = 7
   Insn 1285: point = 2440, n_alt = 4
   Insn 1284: point = 2441, n_alt = 3
   Insn 1283: point = 2443, n_alt = 0
   Insn 1282: point = 2445, n_alt = 1
   Insn 1281: point = 2447, n_alt = 0
   Insn 1280: point = 2448, n_alt = 0
   Insn 1279: point = 2450, n_alt = 0
   Insn 1278: point = 2452, n_alt = 1
   Insn 1277: point = 2454, n_alt = 0
   Insn 1276: point = 2455, n_alt = 1
   Insn 1275: point = 2457, n_alt = 1
   Insn 1274: point = 2459, n_alt = 0
   Insn 1273: point = 2461, n_alt = 0
   Insn 1272: point = 2462, n_alt = 8
   Insn 1271: point = 2463, n_alt = 1
   Insn 1270: point = 2465, n_alt = 7
   Insn 1269: point = 2466, n_alt = -2
   Insn 1268: point = 2468, n_alt = 1
   Insn 1267: point = 2470, n_alt = 7
   Insn 1266: point = 2472, n_alt = 4
   Insn 1265: point = 2473, n_alt = 3
   Insn 1264: point = 2475, n_alt = 0
   Insn 1263: point = 2477, n_alt = 1
   Insn 1262: point = 2479, n_alt = 0
   Insn 1261: point = 2480, n_alt = 0
   Insn 1260: point = 2482, n_alt = 0
   Insn 1259: point = 2484, n_alt = 1
   Insn 1258: point = 2486, n_alt = 0
   Insn 1257: point = 2488, n_alt = 0
   Insn 1256: point = 2489, n_alt = 1
   Insn 1255: point = 2491, n_alt = 1
   Insn 1254: point = 2493, n_alt = 0
   Insn 1253: point = 2494, n_alt = 1
   Insn 1252: point = 2496, n_alt = 7
   Insn 1251: point = 2498, n_alt = 4
   Insn 1250: point = 2499, n_alt = 3
   Insn 1249: point = 2501, n_alt = 0
   Insn 1248: point = 2503, n_alt = 1
   Insn 1247: point = 2505, n_alt = 0
   Insn 1246: point = 2506, n_alt = 0
   Insn 1245: point = 2508, n_alt = 0
   Insn 1244: point = 2510, n_alt = 1
   Insn 1243: point = 2512, n_alt = 0
   Insn 1242: point = 2514, n_alt = 0
   Insn 1241: point = 2515, n_alt = 1
   Insn 1240: point = 2517, n_alt = 1
   Insn 1239: point = 2519, n_alt = 0
   Insn 1238: point = 2520, n_alt = 1
   Insn 1237: point = 2522, n_alt = 7
   Insn 1236: point = 2524, n_alt = 4
   Insn 1235: point = 2525, n_alt = 3
   Insn 1234: point = 2527, n_alt = 0
   Insn 1233: point = 2529, n_alt = 1
   Insn 1232: point = 2531, n_alt = 0
   Insn 1231: point = 2532, n_alt = 0
   Insn 1230: point = 2534, n_alt = 0
   Insn 1229: point = 2536, n_alt = 1
   Insn 1228: point = 2538, n_alt = 0
   Insn 1227: point = 2539, n_alt = 1
   Insn 1226: point = 2541, n_alt = 1
   Insn 1225: point = 2543, n_alt = 0
   Insn 1224: point = 2544, n_alt = 7
   Insn 1223: point = 2546, n_alt = 4
   Insn 1222: point = 2547, n_alt = 3
   Insn 1221: point = 2549, n_alt = 0
   Insn 1220: point = 2551, n_alt = 1
   Insn 1219: point = 2553, n_alt = 0
   Insn 1218: point = 2554, n_alt = 0
   Insn 1217: point = 2556, n_alt = 0
   Insn 1216: point = 2558, n_alt = 1
   Insn 1215: point = 2560, n_alt = 0
   Insn 1214: point = 2561, n_alt = 1
   Insn 1213: point = 2563, n_alt = 1
   Insn 1212: point = 2565, n_alt = 0
   Insn 1211: point = 2566, n_alt = 1
   Insn 1210: point = 2567, n_alt = 0
   Insn 1209: point = 2569, n_alt = 0
   Insn 1205: point = 2570, n_alt = 0
   Insn 1204: point = 2572, n_alt = 0
   Insn 1203: point = 2574, n_alt = 0
   Insn 1202: point = 2576, n_alt = 1
   Insn 1201: point = 2578, n_alt = 0
   Insn 1200: point = 2579, n_alt = 1
   Insn 1199: point = 2580, n_alt = 0
   Insn 1198: point = 2582, n_alt = 0
   Insn 1194: point = 2583, n_alt = 0
   Insn 1193: point = 2585, n_alt = 0
   Insn 1192: point = 2587, n_alt = 0
   Insn 1191: point = 2589, n_alt = 1
   Insn 1190: point = 2591, n_alt = 0
  BB 67
   Insn 1182: point = 2593, n_alt = 1
  BB 65
   Insn 1174: point = 2594, n_alt = 1
   Insn 1173: point = 2595, n_alt = 0
   Insn 1172: point = 2596, n_alt = 0
  BB 63
   Insn 1164: point = 2597, n_alt = 1
  BB 157
   Insn 3210: point = 2597, n_alt = -1
  BB 61
   Insn 1146: point = 2597, n_alt = -1
   Insn 1145: point = 2597, n_alt = 0
   Insn 1144: point = 2598, n_alt = 0
   Insn 1143: point = 2600, n_alt = 0
   Insn 1142: point = 2601, n_alt = 0
  BB 62
   Insn 3132: point = 2601, n_alt = -1
   Insn 1158: point = 2601, n_alt = 1
   Insn 1157: point = 2601, n_alt = 0
   Insn 1156: point = 2601, n_alt = 3
   Insn 1155: point = 2601, n_alt = -2
   Insn 1154: point = 2602, n_alt = 0
   Insn 1153: point = 2604, n_alt = 4
   Insn 1152: point = 2605, n_alt = 1
   Insn 1151: point = 2607, n_alt = 1
   Insn 1150: point = 2609, n_alt = 0
   Insn 1149: point = 2611, n_alt = 0
   Insn 1148: point = 2613, n_alt = 0
  BB 60
   Insn 1140: point = 2614, n_alt = 1
  BB 154
   Insn 3201: point = 2614, n_alt = -1
  BB 26
   Insn 371: point = 2614, n_alt = -1
   Insn 370: point = 2614, n_alt = 0
   Insn 369: point = 2615, n_alt = 0
   Insn 368: point = 2617, n_alt = 0
   Insn 367: point = 2618, n_alt = 0
  BB 59
   Insn 3130: point = 2618, n_alt = -1
   Insn 1134: point = 2618, n_alt = 1
  BB 155
   Insn 3204: point = 2618, n_alt = -1
  BB 28
   Insn 381: point = 2618, n_alt = -1
   Insn 380: point = 2618, n_alt = 0
   Insn 379: point = 2619, n_alt = 0
   Insn 378: point = 2621, n_alt = 0
   Insn 377: point = 2622, n_alt = 0
  BB 58
   Insn 3128: point = 2623, n_alt = -1
   Insn 1128: point = 2623, n_alt = 1
  BB 156
   Insn 3207: point = 2624, n_alt = -1
  BB 30
   Insn 389: point = 2625, n_alt = -1
   Insn 388: point = 2625, n_alt = 0
   Insn 387: point = 2626, n_alt = 0
   Insn 386: point = 2628, n_alt = 0
   Insn 385: point = 2629, n_alt = 0
  BB 57
   Insn 3126: point = 2630, n_alt = -1
   Insn 1122: point = 2630, n_alt = 1
  BB 56
   Insn 1119: point = 2631, n_alt = 8
   Insn 1118: point = 2632, n_alt = 4
   Insn 1117: point = 2633, n_alt = 1
   Insn 1116: point = 2635, n_alt = 3
   Insn 1115: point = 2637, n_alt = 0
   Insn 1114: point = 2639, n_alt = 0
   Insn 1113: point = 2641, n_alt = 0
   Insn 1112: point = 2642, n_alt = 0
   Insn 1111: point = 2644, n_alt = 0
   Insn 1110: point = 2646, n_alt = 0
   Insn 1109: point = 2648, n_alt = 0
   Insn 1108: point = 2649, n_alt = 1
   Insn 1107: point = 2651, n_alt = 0
   Insn 1106: point = 2653, n_alt = 0
   Insn 1105: point = 2654, n_alt = 1
   Insn 1104: point = 2656, n_alt = 7
   Insn 1103: point = 2657, n_alt = 7
   Insn 1102: point = 2659, n_alt = 4
   Insn 1101: point = 2660, n_alt = 3
   Insn 1100: point = 2662, n_alt = 0
   Insn 1099: point = 2664, n_alt = 0
   Insn 1098: point = 2666, n_alt = 0
   Insn 1097: point = 2667, n_alt = 0
   Insn 1096: point = 2669, n_alt = 0
   Insn 1095: point = 2671, n_alt = 0
   Insn 1094: point = 2673, n_alt = 0
   Insn 1093: point = 2674, n_alt = 1
   Insn 1092: point = 2676, n_alt = 0
   Insn 1091: point = 2678, n_alt = 0
   Insn 1090: point = 2679, n_alt = 8
   Insn 1089: point = 2680, n_alt = 7
  BB 54
   Insn 3124: point = 2682, n_alt = -1
   Insn 1080: point = 2682, n_alt = 8
   Insn 1079: point = 2683, n_alt = 7
  BB 52
   Insn 3121: point = 2685, n_alt = -1
   Insn 1058: point = 2685, n_alt = 8
   Insn 1057: point = 2686, n_alt = 7
  BB 50
   Insn 3118: point = 2688, n_alt = -1
   Insn 1044: point = 2688, n_alt = 8
   Insn 1043: point = 2689, n_alt = 7
  BB 55
   Insn 1086: point = 2691, n_alt = 8
   Insn 1085: point = 2692, n_alt = 7
  BB 53
   Insn 1074: point = 2694, n_alt = -1
   Insn 1073: point = 2694, n_alt = 1
   Insn 1072: point = 2695, n_alt = 7
   Insn 1071: point = 2696, n_alt = 7
   Insn 1070: point = 2698, n_alt = 4
   Insn 1069: point = 2699, n_alt = 3
   Insn 1068: point = 2701, n_alt = 0
   Insn 1067: point = 2703, n_alt = 0
   Insn 1066: point = 2705, n_alt = 0
   Insn 1065: point = 2706, n_alt = 0
   Insn 1064: point = 2708, n_alt = 0
   Insn 1063: point = 2710, n_alt = 0
  BB 51
   Insn 1052: point = 2712, n_alt = -1
   Insn 1051: point = 2712, n_alt = 1
   Insn 1050: point = 2713, n_alt = 7
   Insn 1049: point = 2714, n_alt = 7
  BB 49
   Insn 1038: point = 2716, n_alt = -1
   Insn 1037: point = 2716, n_alt = 1
   Insn 1036: point = 2717, n_alt = 7
   Insn 1035: point = 2718, n_alt = 8
   Insn 1034: point = 2719, n_alt = 1
   Insn 1033: point = 2721, n_alt = 7
   Insn 1032: point = 2722, n_alt = -2
   Insn 1031: point = 2724, n_alt = 2
   Insn 1030: point = 2726, n_alt = 7
   Insn 1029: point = 2727, n_alt = 1
   Insn 1028: point = 2729, n_alt = -2
   Insn 1027: point = 2731, n_alt = 1
   Insn 1026: point = 2733, n_alt = 7
   Insn 1025: point = 2734, n_alt = 7
   Insn 1024: point = 2735, n_alt = 1
   Insn 1023: point = 2737, n_alt = 7
   Insn 1022: point = 2738, n_alt = 7
   Insn 1021: point = 2739, n_alt = 8
   Insn 1020: point = 2740, n_alt = 1
   Insn 1019: point = 2742, n_alt = 7
   Insn 1018: point = 2743, n_alt = -2
   Insn 1017: point = 2745, n_alt = 1
   Insn 1016: point = 2747, n_alt = 1
  BB 48
   Insn 1013: point = 2750, n_alt = 7
  BB 47
   Insn 1011: point = 2752, n_alt = -1
   Insn 1010: point = 2752, n_alt = 0
   Insn 1009: point = 2753, n_alt = 0
   Insn 1008: point = 2755, n_alt = 0
   Insn 1007: point = 2757, n_alt = 0
   Insn 1006: point = 2758, n_alt = 1
   Insn 1005: point = 2758, n_alt = 0
   Insn 1004: point = 2760, n_alt = 0
   Insn 1003: point = 2761, n_alt = 1
   Insn 1002: point = 2762, n_alt = 7
   Insn 1001: point = 2763, n_alt = 7
   Insn 1000: point = 2764, n_alt = 8
   Insn 999: point = 2765, n_alt = 1
   Insn 3261: point = 2767, n_alt = 7
	   Creating copy r2386<-r2390@1000
   Insn 998: point = 2769, n_alt = -2
   Insn 997: point = 2770, n_alt = 0
   Insn 996: point = 2770, n_alt = -2
   Insn 995: point = 2771, n_alt = 2
   Insn 994: point = 2773, n_alt = -2
   Insn 993: point = 2775, n_alt = 2
   Insn 992: point = 2777, n_alt = 7
   Insn 991: point = 2778, n_alt = 7
   Insn 990: point = 2780, n_alt = 0
   Insn 989: point = 2782, n_alt = 4
   Insn 988: point = 2783, n_alt = 3
   Insn 987: point = 2785, n_alt = 0
   Insn 986: point = 2787, n_alt = 0
   Insn 985: point = 2789, n_alt = 0
   Insn 984: point = 2790, n_alt = 0
   Insn 983: point = 2792, n_alt = 0
   Insn 982: point = 2794, n_alt = 0
   Insn 981: point = 2796, n_alt = 0
   Insn 980: point = 2797, n_alt = 1
   Insn 979: point = 2799, n_alt = 0
   Insn 978: point = 2801, n_alt = 0
   Insn 977: point = 2802, n_alt = 1
   Insn 976: point = 2804, n_alt = 7
   Insn 975: point = 2805, n_alt = -2
   Insn 974: point = 2807, n_alt = 2
   Insn 973: point = 2809, n_alt = 7
   Insn 972: point = 2810, n_alt = 7
   Insn 971: point = 2812, n_alt = 0
   Insn 970: point = 2814, n_alt = 4
   Insn 969: point = 2815, n_alt = 3
   Insn 968: point = 2817, n_alt = 0
   Insn 967: point = 2819, n_alt = 0
   Insn 966: point = 2821, n_alt = 0
   Insn 965: point = 2822, n_alt = 0
   Insn 964: point = 2824, n_alt = 0
   Insn 963: point = 2826, n_alt = 0
   Insn 962: point = 2828, n_alt = 0
   Insn 961: point = 2829, n_alt = 1
   Insn 960: point = 2831, n_alt = 0
   Insn 959: point = 2833, n_alt = 0
   Insn 3260: point = 2834, n_alt = 8
	   Creating copy r2385->r2390@1000
   Insn 958: point = 2836, n_alt = 2
   Insn 3259: point = 2836, n_alt = -2
	Hard reg 21 is preferable by r2385 with profit 1000
   Insn 957: point = 2838, n_alt = 7
  BB 46
   Insn 954: point = 2840, n_alt = 8
   Insn 953: point = 2841, n_alt = 7
   Insn 952: point = 2842, n_alt = 8
   Insn 951: point = 2843, n_alt = 7
  BB 45
   Insn 946: point = 2845, n_alt = -1
   Insn 945: point = 2845, n_alt = 1
   Insn 944: point = 2846, n_alt = 7
   Insn 943: point = 2847, n_alt = 8
   Insn 942: point = 2848, n_alt = 7
   Insn 941: point = 2849, n_alt = 8
   Insn 940: point = 2850, n_alt = 7
   Insn 939: point = 2851, n_alt = 8
  BB 44
   Insn 936: point = 2853, n_alt = 7
  BB 43
   Insn 934: point = 2855, n_alt = -1
   Insn 933: point = 2855, n_alt = 0
   Insn 932: point = 2856, n_alt = 0
   Insn 931: point = 2858, n_alt = 0
   Insn 930: point = 2860, n_alt = 0
   Insn 929: point = 2861, n_alt = 1
   Insn 928: point = 2861, n_alt = 0
   Insn 927: point = 2863, n_alt = 0
   Insn 926: point = 2864, n_alt = 1
   Insn 925: point = 2864, n_alt = 7
   Insn 924: point = 2865, n_alt = 8
   Insn 923: point = 2866, n_alt = 2
   Insn 922: point = 2868, n_alt = 7
   Insn 921: point = 2869, n_alt = 7
   Insn 920: point = 2871, n_alt = 0
   Insn 919: point = 2873, n_alt = 4
   Insn 918: point = 2874, n_alt = 3
   Insn 917: point = 2876, n_alt = 0
   Insn 916: point = 2878, n_alt = 0
   Insn 915: point = 2880, n_alt = 0
   Insn 914: point = 2881, n_alt = 0
   Insn 913: point = 2883, n_alt = 0
   Insn 912: point = 2885, n_alt = 0
   Insn 911: point = 2887, n_alt = 0
   Insn 910: point = 2888, n_alt = 1
   Insn 909: point = 2890, n_alt = 0
   Insn 908: point = 2892, n_alt = 0
   Insn 907: point = 2893, n_alt = 8
   Insn 906: point = 2894, n_alt = 3
   Insn 905: point = 2895, n_alt = 1
   Insn 904: point = 2897, n_alt = 3
   Insn 903: point = 2899, n_alt = 0
   Insn 902: point = 2901, n_alt = 0
   Insn 901: point = 2903, n_alt = 0
   Insn 900: point = 2904, n_alt = 0
   Insn 899: point = 2906, n_alt = 0
   Insn 898: point = 2908, n_alt = 0
   Insn 897: point = 2910, n_alt = 0
   Insn 896: point = 2911, n_alt = 1
   Insn 895: point = 2913, n_alt = 0
   Insn 894: point = 2915, n_alt = 0
   Insn 893: point = 2916, n_alt = 1
   Insn 892: point = 2918, n_alt = 7
   Insn 3258: point = 2919, n_alt = -2
	Hard reg 23 is preferable by r2384 with profit 1000
   Insn 891: point = 2921, n_alt = 1
   Insn 3257: point = 2921, n_alt = -2
	Hard reg 23 is preferable by r2384 with profit 1000
	Hard reg 21 is preferable by r2384 with profit 1000
   Insn 890: point = 2923, n_alt = -2
   Insn 889: point = 2925, n_alt = 1
   Insn 888: point = 2927, n_alt = 7
   Insn 887: point = 2929, n_alt = 4
   Insn 886: point = 2930, n_alt = 3
   Insn 885: point = 2932, n_alt = 0
   Insn 884: point = 2934, n_alt = 0
   Insn 883: point = 2936, n_alt = 0
   Insn 882: point = 2937, n_alt = 0
   Insn 881: point = 2939, n_alt = 0
   Insn 880: point = 2941, n_alt = 0
   Insn 879: point = 2943, n_alt = 0
   Insn 878: point = 2944, n_alt = 1
   Insn 877: point = 2946, n_alt = 0
   Insn 876: point = 2948, n_alt = 0
   Insn 875: point = 2949, n_alt = 7
   Insn 874: point = 2951, n_alt = 0
   Insn 873: point = 2953, n_alt = 4
   Insn 872: point = 2954, n_alt = 3
   Insn 871: point = 2956, n_alt = 0
   Insn 870: point = 2958, n_alt = 0
   Insn 869: point = 2960, n_alt = 0
   Insn 868: point = 2961, n_alt = 0
   Insn 867: point = 2963, n_alt = 0
   Insn 866: point = 2965, n_alt = 0
   Insn 865: point = 2967, n_alt = 0
   Insn 864: point = 2968, n_alt = 1
   Insn 863: point = 2970, n_alt = 0
   Insn 862: point = 2972, n_alt = 0
   Insn 861: point = 2973, n_alt = 7
   Insn 860: point = 2975, n_alt = 3
   Insn 859: point = 2976, n_alt = 3
   Insn 858: point = 2978, n_alt = 0
   Insn 857: point = 2980, n_alt = 0
   Insn 856: point = 2982, n_alt = 0
   Insn 855: point = 2983, n_alt = 0
   Insn 854: point = 2985, n_alt = 0
   Insn 853: point = 2987, n_alt = 0
   Insn 852: point = 2989, n_alt = 0
   Insn 851: point = 2990, n_alt = 1
   Insn 850: point = 2992, n_alt = 0
   Insn 849: point = 2994, n_alt = 0
   Insn 848: point = 2995, n_alt = 8
   Insn 847: point = 2996, n_alt = 3
   Insn 846: point = 2997, n_alt = 1
   Insn 845: point = 2999, n_alt = 3
   Insn 844: point = 3001, n_alt = 0
   Insn 843: point = 3003, n_alt = 0
   Insn 842: point = 3005, n_alt = 0
   Insn 841: point = 3006, n_alt = 0
   Insn 840: point = 3008, n_alt = 0
   Insn 839: point = 3010, n_alt = 0
   Insn 838: point = 3012, n_alt = 0
   Insn 837: point = 3013, n_alt = 1
   Insn 836: point = 3015, n_alt = 0
   Insn 835: point = 3017, n_alt = 0
   Insn 834: point = 3018, n_alt = 1
   Insn 833: point = 3020, n_alt = 7
   Insn 832: point = 3022, n_alt = 4
   Insn 831: point = 3023, n_alt = 3
   Insn 830: point = 3025, n_alt = 0
   Insn 829: point = 3027, n_alt = 0
   Insn 828: point = 3029, n_alt = 0
   Insn 827: point = 3030, n_alt = 0
   Insn 826: point = 3032, n_alt = 0
   Insn 825: point = 3034, n_alt = 0
   Insn 824: point = 3036, n_alt = 0
   Insn 823: point = 3037, n_alt = 1
   Insn 822: point = 3039, n_alt = 0
   Insn 821: point = 3041, n_alt = 0
   Insn 820: point = 3042, n_alt = 7
   Insn 819: point = 3044, n_alt = 3
   Insn 818: point = 3045, n_alt = 3
   Insn 817: point = 3047, n_alt = 0
   Insn 816: point = 3049, n_alt = 0
   Insn 815: point = 3051, n_alt = 0
   Insn 814: point = 3052, n_alt = 0
   Insn 813: point = 3054, n_alt = 0
   Insn 812: point = 3056, n_alt = 0
   Insn 811: point = 3058, n_alt = 0
   Insn 810: point = 3059, n_alt = 1
   Insn 809: point = 3061, n_alt = 0
   Insn 808: point = 3063, n_alt = 0
   Insn 807: point = 3064, n_alt = 8
   Insn 806: point = 3065, n_alt = 3
   Insn 805: point = 3066, n_alt = 1
   Insn 804: point = 3068, n_alt = 3
   Insn 803: point = 3070, n_alt = 0
   Insn 802: point = 3072, n_alt = 0
   Insn 801: point = 3074, n_alt = 0
   Insn 800: point = 3075, n_alt = 0
   Insn 799: point = 3077, n_alt = 0
   Insn 798: point = 3079, n_alt = 0
   Insn 797: point = 3081, n_alt = 0
   Insn 796: point = 3082, n_alt = 1
   Insn 795: point = 3084, n_alt = 0
   Insn 794: point = 3086, n_alt = 0
   Insn 793: point = 3087, n_alt = 1
   Insn 792: point = 3089, n_alt = 7
   Insn 791: point = 3091, n_alt = 0
   Insn 790: point = 3093, n_alt = 4
   Insn 789: point = 3094, n_alt = 3
   Insn 788: point = 3096, n_alt = 0
   Insn 787: point = 3098, n_alt = 0
   Insn 786: point = 3100, n_alt = 0
   Insn 785: point = 3101, n_alt = 0
   Insn 784: point = 3103, n_alt = 0
   Insn 783: point = 3105, n_alt = 0
   Insn 782: point = 3107, n_alt = 0
   Insn 781: point = 3108, n_alt = 1
   Insn 780: point = 3110, n_alt = 0
   Insn 779: point = 3112, n_alt = 0
   Insn 778: point = 3113, n_alt = 7
   Insn 777: point = 3115, n_alt = 3
   Insn 776: point = 3116, n_alt = 3
   Insn 775: point = 3118, n_alt = 0
   Insn 774: point = 3120, n_alt = 0
   Insn 773: point = 3122, n_alt = 0
   Insn 772: point = 3123, n_alt = 0
   Insn 771: point = 3125, n_alt = 0
   Insn 770: point = 3127, n_alt = 0
   Insn 769: point = 3129, n_alt = 0
   Insn 768: point = 3130, n_alt = 1
   Insn 767: point = 3132, n_alt = 0
   Insn 766: point = 3134, n_alt = 0
   Insn 765: point = 3135, n_alt = 8
   Insn 764: point = 3136, n_alt = 3
   Insn 763: point = 3137, n_alt = 1
   Insn 762: point = 3139, n_alt = 3
   Insn 761: point = 3141, n_alt = 0
   Insn 760: point = 3143, n_alt = 0
   Insn 759: point = 3145, n_alt = 0
   Insn 758: point = 3146, n_alt = 0
   Insn 757: point = 3148, n_alt = 0
   Insn 756: point = 3150, n_alt = 0
   Insn 755: point = 3152, n_alt = 0
   Insn 754: point = 3153, n_alt = 1
   Insn 753: point = 3155, n_alt = 0
   Insn 752: point = 3157, n_alt = 0
   Insn 751: point = 3158, n_alt = 1
   Insn 750: point = 3160, n_alt = 7
   Insn 749: point = 3162, n_alt = 0
   Insn 748: point = 3164, n_alt = 4
   Insn 747: point = 3165, n_alt = 3
   Insn 746: point = 3167, n_alt = 0
   Insn 745: point = 3169, n_alt = 0
   Insn 744: point = 3171, n_alt = 0
   Insn 743: point = 3172, n_alt = 0
   Insn 742: point = 3174, n_alt = 0
   Insn 741: point = 3176, n_alt = 0
   Insn 740: point = 3178, n_alt = 0
   Insn 739: point = 3179, n_alt = 1
   Insn 738: point = 3181, n_alt = 0
   Insn 737: point = 3183, n_alt = 0
   Insn 736: point = 3184, n_alt = 7
   Insn 735: point = 3186, n_alt = 3
   Insn 734: point = 3187, n_alt = 3
   Insn 733: point = 3189, n_alt = 0
   Insn 732: point = 3191, n_alt = 0
   Insn 731: point = 3193, n_alt = 0
   Insn 730: point = 3194, n_alt = 0
   Insn 729: point = 3196, n_alt = 0
   Insn 728: point = 3198, n_alt = 0
   Insn 727: point = 3200, n_alt = 0
   Insn 726: point = 3201, n_alt = 1
   Insn 725: point = 3203, n_alt = 0
   Insn 724: point = 3205, n_alt = 0
   Insn 723: point = 3206, n_alt = 1
   Insn 722: point = 3207, n_alt = 3
   Insn 721: point = 3208, n_alt = 0
   Insn 720: point = 3210, n_alt = 0
   Insn 719: point = 3211, n_alt = 3
   Insn 718: point = 3213, n_alt = 0
   Insn 717: point = 3215, n_alt = 0
   Insn 716: point = 3217, n_alt = 0
   Insn 715: point = 3218, n_alt = 0
   Insn 714: point = 3220, n_alt = 0
   Insn 713: point = 3222, n_alt = 0
   Insn 712: point = 3224, n_alt = 0
   Insn 711: point = 3225, n_alt = 1
   Insn 710: point = 3227, n_alt = 0
   Insn 709: point = 3229, n_alt = 0
   Insn 708: point = 3230, n_alt = 0
   Insn 707: point = 3232, n_alt = 3
   Insn 706: point = 3233, n_alt = 3
   Insn 705: point = 3235, n_alt = 0
   Insn 704: point = 3237, n_alt = 0
   Insn 703: point = 3239, n_alt = 0
   Insn 702: point = 3240, n_alt = 0
   Insn 701: point = 3242, n_alt = 0
   Insn 700: point = 3244, n_alt = 0
   Insn 699: point = 3246, n_alt = 0
   Insn 698: point = 3247, n_alt = 1
   Insn 697: point = 3249, n_alt = 0
   Insn 696: point = 3251, n_alt = 0
   Insn 695: point = 3252, n_alt = 8
   Insn 694: point = 3253, n_alt = 4
   Insn 693: point = 3254, n_alt = 1
   Insn 692: point = 3256, n_alt = 7
   Insn 691: point = 3257, n_alt = 3
   Insn 690: point = 3259, n_alt = 0
   Insn 689: point = 3261, n_alt = 0
   Insn 688: point = 3263, n_alt = 0
   Insn 687: point = 3264, n_alt = 0
   Insn 686: point = 3266, n_alt = 0
   Insn 685: point = 3268, n_alt = 0
   Insn 684: point = 3270, n_alt = 0
   Insn 683: point = 3271, n_alt = 1
   Insn 682: point = 3273, n_alt = 0
   Insn 681: point = 3275, n_alt = 0
   Insn 680: point = 3276, n_alt = 7
   Insn 679: point = 3278, n_alt = 4
   Insn 678: point = 3279, n_alt = 3
   Insn 677: point = 3281, n_alt = 0
   Insn 676: point = 3283, n_alt = 0
   Insn 675: point = 3285, n_alt = 0
   Insn 674: point = 3286, n_alt = 0
   Insn 673: point = 3288, n_alt = 0
   Insn 672: point = 3290, n_alt = 0
   Insn 671: point = 3292, n_alt = 0
   Insn 670: point = 3293, n_alt = 1
   Insn 669: point = 3295, n_alt = 0
   Insn 668: point = 3297, n_alt = 0
   Insn 667: point = 3298, n_alt = 8
   Insn 666: point = 3299, n_alt = 4
   Insn 665: point = 3300, n_alt = 1
   Insn 664: point = 3302, n_alt = 3
   Insn 663: point = 3304, n_alt = 0
   Insn 662: point = 3306, n_alt = 0
   Insn 661: point = 3308, n_alt = 0
   Insn 660: point = 3309, n_alt = 0
   Insn 659: point = 3311, n_alt = 0
   Insn 658: point = 3313, n_alt = 0
   Insn 657: point = 3315, n_alt = 0
   Insn 656: point = 3316, n_alt = 1
   Insn 655: point = 3318, n_alt = 0
   Insn 654: point = 3320, n_alt = 0
   Insn 653: point = 3321, n_alt = 7
   Insn 652: point = 3323, n_alt = 4
   Insn 651: point = 3324, n_alt = 3
   Insn 650: point = 3326, n_alt = 0
   Insn 649: point = 3328, n_alt = 0
   Insn 648: point = 3330, n_alt = 0
   Insn 647: point = 3331, n_alt = 0
   Insn 646: point = 3333, n_alt = 0
   Insn 645: point = 3335, n_alt = 0
   Insn 644: point = 3337, n_alt = 0
   Insn 643: point = 3338, n_alt = 1
   Insn 642: point = 3340, n_alt = 0
   Insn 641: point = 3342, n_alt = 0
   Insn 640: point = 3343, n_alt = 8
   Insn 639: point = 3344, n_alt = 2
   Insn 638: point = 3346, n_alt = 7
   Insn 637: point = 3348, n_alt = 4
   Insn 636: point = 3349, n_alt = 3
   Insn 635: point = 3351, n_alt = 0
   Insn 634: point = 3353, n_alt = 0
   Insn 633: point = 3355, n_alt = 0
   Insn 632: point = 3356, n_alt = 0
   Insn 631: point = 3358, n_alt = 0
   Insn 630: point = 3360, n_alt = 0
   Insn 629: point = 3362, n_alt = 0
   Insn 628: point = 3363, n_alt = 1
   Insn 627: point = 3365, n_alt = 0
   Insn 626: point = 3367, n_alt = 0
   Insn 625: point = 3368, n_alt = 7
   Insn 624: point = 3370, n_alt = 4
   Insn 623: point = 3371, n_alt = 3
   Insn 622: point = 3373, n_alt = 0
   Insn 621: point = 3375, n_alt = 0
   Insn 620: point = 3377, n_alt = 0
   Insn 619: point = 3378, n_alt = 0
   Insn 618: point = 3380, n_alt = 0
   Insn 617: point = 3382, n_alt = 0
   Insn 616: point = 3384, n_alt = 0
   Insn 615: point = 3385, n_alt = 1
   Insn 614: point = 3387, n_alt = 0
   Insn 613: point = 3389, n_alt = 0
   Insn 612: point = 3391, n_alt = 0
  BB 42
   Insn 607: point = 3393, n_alt = -1
   Insn 606: point = 3393, n_alt = 1
   Insn 605: point = 3394, n_alt = 7
   Insn 604: point = 3395, n_alt = 7
   Insn 603: point = 3397, n_alt = 4
   Insn 602: point = 3398, n_alt = 3
   Insn 601: point = 3400, n_alt = 0
   Insn 600: point = 3402, n_alt = 0
   Insn 599: point = 3404, n_alt = 0
   Insn 598: point = 3405, n_alt = 0
   Insn 597: point = 3407, n_alt = 0
   Insn 596: point = 3409, n_alt = 0
   Insn 595: point = 3411, n_alt = 0
   Insn 594: point = 3412, n_alt = 1
   Insn 593: point = 3414, n_alt = 0
   Insn 592: point = 3416, n_alt = 0
   Insn 591: point = 3418, n_alt = 0
  BB 41
   Insn 586: point = 3420, n_alt = -1
   Insn 585: point = 3420, n_alt = 1
   Insn 584: point = 3421, n_alt = 7
   Insn 583: point = 3423, n_alt = 4
   Insn 582: point = 3424, n_alt = 3
   Insn 581: point = 3426, n_alt = 0
   Insn 580: point = 3428, n_alt = 0
   Insn 579: point = 3430, n_alt = 0
   Insn 578: point = 3431, n_alt = 0
   Insn 577: point = 3433, n_alt = 0
   Insn 576: point = 3435, n_alt = 0
   Insn 575: point = 3437, n_alt = 0
   Insn 574: point = 3438, n_alt = 1
   Insn 573: point = 3440, n_alt = 0
   Insn 572: point = 3442, n_alt = 0
   Insn 571: point = 3443, n_alt = 8
   Insn 570: point = 3444, n_alt = 1
   Insn 569: point = 3446, n_alt = 7
   Insn 568: point = 3447, n_alt = -2
   Insn 567: point = 3449, n_alt = 1
   Insn 566: point = 3451, n_alt = 7
   Insn 565: point = 3453, n_alt = 4
   Insn 564: point = 3454, n_alt = 3
   Insn 563: point = 3456, n_alt = 0
   Insn 562: point = 3458, n_alt = 0
   Insn 561: point = 3460, n_alt = 0
   Insn 560: point = 3461, n_alt = 0
   Insn 559: point = 3463, n_alt = 0
   Insn 558: point = 3465, n_alt = 0
   Insn 557: point = 3467, n_alt = 0
   Insn 556: point = 3468, n_alt = 1
   Insn 555: point = 3470, n_alt = 0
   Insn 554: point = 3472, n_alt = 0
   Insn 553: point = 3474, n_alt = 0
   Insn 552: point = 3475, n_alt = 7
   Insn 551: point = 3477, n_alt = 4
   Insn 550: point = 3478, n_alt = 3
   Insn 549: point = 3480, n_alt = 0
   Insn 548: point = 3482, n_alt = 0
   Insn 547: point = 3484, n_alt = 0
   Insn 546: point = 3485, n_alt = 0
   Insn 545: point = 3487, n_alt = 0
   Insn 544: point = 3489, n_alt = 0
   Insn 543: point = 3491, n_alt = 0
   Insn 542: point = 3492, n_alt = 1
   Insn 541: point = 3494, n_alt = 0
   Insn 540: point = 3496, n_alt = 0
  BB 39
   Insn 3115: point = 3498, n_alt = -1
   Insn 521: point = 3498, n_alt = 8
   Insn 520: point = 3499, n_alt = 7
   Insn 519: point = 3500, n_alt = 4
   Insn 518: point = 3501, n_alt = 3
   Insn 517: point = 3503, n_alt = 0
   Insn 516: point = 3505, n_alt = 0
   Insn 515: point = 3507, n_alt = 0
   Insn 514: point = 3508, n_alt = 0
   Insn 513: point = 3510, n_alt = 0
   Insn 512: point = 3512, n_alt = 0
  BB 38
   Insn 507: point = 3514, n_alt = -1
   Insn 506: point = 3514, n_alt = 1
   Insn 505: point = 3515, n_alt = 7
  BB 37
   Insn 504: point = 3517, n_alt = -1
   Insn 503: point = 3517, n_alt = 1
   Insn 502: point = 3518, n_alt = 7
  BB 34
   Insn 3110: point = 3520, n_alt = -1
   Insn 463: point = 3520, n_alt = 8
   Insn 462: point = 3521, n_alt = 7
   Insn 461: point = 3522, n_alt = 4
   Insn 460: point = 3523, n_alt = 3
   Insn 459: point = 3525, n_alt = 0
   Insn 458: point = 3527, n_alt = 0
   Insn 457: point = 3529, n_alt = 0
   Insn 456: point = 3530, n_alt = 0
   Insn 455: point = 3532, n_alt = 0
   Insn 454: point = 3534, n_alt = 0
  BB 36
   Insn 3113: point = 3536, n_alt = -1
   Insn 497: point = 3536, n_alt = 8
   Insn 496: point = 3537, n_alt = 7
   Insn 495: point = 3538, n_alt = 4
   Insn 494: point = 3539, n_alt = 3
   Insn 493: point = 3541, n_alt = 0
   Insn 492: point = 3543, n_alt = 0
   Insn 491: point = 3545, n_alt = 0
   Insn 490: point = 3546, n_alt = 0
   Insn 489: point = 3548, n_alt = 0
   Insn 488: point = 3550, n_alt = 0
  BB 35
   Insn 483: point = 3552, n_alt = -1
   Insn 482: point = 3552, n_alt = 1
   Insn 481: point = 3553, n_alt = 7
   Insn 480: point = 3555, n_alt = 0
   Insn 479: point = 3557, n_alt = 4
   Insn 478: point = 3558, n_alt = 3
   Insn 477: point = 3560, n_alt = 0
   Insn 476: point = 3562, n_alt = 0
   Insn 475: point = 3564, n_alt = 0
   Insn 474: point = 3565, n_alt = 0
   Insn 473: point = 3567, n_alt = 0
   Insn 472: point = 3569, n_alt = 0
   Insn 471: point = 3571, n_alt = 0
   Insn 470: point = 3572, n_alt = 1
   Insn 469: point = 3574, n_alt = 0
   Insn 468: point = 3576, n_alt = 0
  BB 33
   Insn 449: point = 3578, n_alt = -1
   Insn 448: point = 3578, n_alt = 1
   Insn 447: point = 3579, n_alt = 7
   Insn 446: point = 3580, n_alt = 7
   Insn 445: point = 3582, n_alt = 0
   Insn 444: point = 3584, n_alt = 4
   Insn 443: point = 3585, n_alt = 3
   Insn 442: point = 3587, n_alt = 0
   Insn 441: point = 3589, n_alt = 0
   Insn 440: point = 3591, n_alt = 0
   Insn 439: point = 3592, n_alt = 0
   Insn 438: point = 3594, n_alt = 0
   Insn 437: point = 3596, n_alt = 0
   Insn 436: point = 3598, n_alt = 0
   Insn 435: point = 3599, n_alt = 1
   Insn 434: point = 3601, n_alt = 0
   Insn 433: point = 3603, n_alt = 0
  BB 40
   Insn 535: point = 3605, n_alt = 8
   Insn 534: point = 3606, n_alt = 7
   Insn 533: point = 3607, n_alt = 4
   Insn 532: point = 3608, n_alt = 3
   Insn 531: point = 3610, n_alt = 0
   Insn 530: point = 3612, n_alt = 0
   Insn 529: point = 3614, n_alt = 0
   Insn 528: point = 3615, n_alt = 0
   Insn 527: point = 3617, n_alt = 0
   Insn 526: point = 3619, n_alt = 0
  BB 32
   Insn 428: point = 3621, n_alt = -1
   Insn 427: point = 3621, n_alt = 1
   Insn 426: point = 3622, n_alt = 7
   Insn 425: point = 3624, n_alt = 4
   Insn 424: point = 3625, n_alt = 3
   Insn 423: point = 3627, n_alt = 0
   Insn 422: point = 3629, n_alt = 0
   Insn 421: point = 3631, n_alt = 0
   Insn 420: point = 3632, n_alt = 0
   Insn 419: point = 3634, n_alt = 0
   Insn 418: point = 3636, n_alt = 0
   Insn 417: point = 3638, n_alt = 0
   Insn 416: point = 3639, n_alt = 1
   Insn 415: point = 3641, n_alt = 0
   Insn 414: point = 3643, n_alt = 0
   Insn 413: point = 3644, n_alt = 8
   Insn 412: point = 3645, n_alt = 7
   Insn 411: point = 3647, n_alt = 4
   Insn 410: point = 3648, n_alt = 3
   Insn 409: point = 3650, n_alt = 0
   Insn 408: point = 3652, n_alt = 0
   Insn 407: point = 3654, n_alt = 0
   Insn 406: point = 3655, n_alt = 0
   Insn 405: point = 3657, n_alt = 0
   Insn 404: point = 3659, n_alt = 0
  BB 31
   Insn 402: point = 3661, n_alt = -1
   Insn 401: point = 3661, n_alt = 0
   Insn 400: point = 3662, n_alt = 0
   Insn 399: point = 3664, n_alt = 0
   Insn 398: point = 3666, n_alt = 4
   Insn 397: point = 3667, n_alt = 3
   Insn 396: point = 3669, n_alt = 0
   Insn 395: point = 3671, n_alt = 0
   Insn 394: point = 3673, n_alt = 0
   Insn 393: point = 3674, n_alt = 0
   Insn 392: point = 3676, n_alt = 0
   Insn 391: point = 3678, n_alt = 0
  BB 29
   Insn 383: point = 3680, n_alt = 1
  BB 27
   Insn 375: point = 3681, n_alt = 1
   Insn 374: point = 3682, n_alt = 0
   Insn 373: point = 3683, n_alt = 0
  BB 25
   Insn 365: point = 3684, n_alt = 1
   Insn 362: point = 3684, n_alt = 0
   Insn 361: point = 3684, n_alt = -2
   Insn 360: point = 3685, n_alt = 0
   Insn 359: point = 3685, n_alt = -2
   Insn 358: point = 3686, n_alt = 2
   Insn 357: point = 3687, n_alt = -2
   Insn 356: point = 3689, n_alt = 4
  BB 152
   Insn 3195: point = 3690, n_alt = -1
  BB 20
   Insn 153: point = 3690, n_alt = -1
   Insn 152: point = 3690, n_alt = 0
   Insn 151: point = 3691, n_alt = 0
   Insn 150: point = 3693, n_alt = 0
   Insn 149: point = 3694, n_alt = 0
  BB 24
   Insn 3106: point = 3695, n_alt = -1
   Insn 350: point = 3695, n_alt = 1
  BB 153
   Insn 3198: point = 3696, n_alt = -1
  BB 22
   Insn 161: point = 3697, n_alt = -1
   Insn 160: point = 3697, n_alt = 0
   Insn 159: point = 3698, n_alt = 0
   Insn 158: point = 3700, n_alt = 0
   Insn 157: point = 3701, n_alt = 0
  BB 23
   Insn 3104: point = 3702, n_alt = -1
   Insn 344: point = 3702, n_alt = 1
   Insn 343: point = 3702, n_alt = 8
   Insn 342: point = 3703, n_alt = 7
   Insn 341: point = 3704, n_alt = 3
   Insn 340: point = 3705, n_alt = 3
   Insn 339: point = 3707, n_alt = 0
   Insn 338: point = 3709, n_alt = 1
   Insn 337: point = 3711, n_alt = 0
   Insn 336: point = 3712, n_alt = 0
   Insn 335: point = 3714, n_alt = 0
   Insn 334: point = 3716, n_alt = 1
   Insn 333: point = 3718, n_alt = 0
   Insn 332: point = 3719, n_alt = 1
   Insn 331: point = 3721, n_alt = 1
   Insn 330: point = 3723, n_alt = 0
   Insn 329: point = 3724, n_alt = 8
   Insn 328: point = 3725, n_alt = 7
   Insn 327: point = 3726, n_alt = 4
   Insn 326: point = 3727, n_alt = 3
   Insn 325: point = 3729, n_alt = 0
   Insn 324: point = 3731, n_alt = 1
   Insn 323: point = 3733, n_alt = 0
   Insn 322: point = 3734, n_alt = 0
   Insn 321: point = 3736, n_alt = 0
   Insn 320: point = 3738, n_alt = 1
   Insn 319: point = 3740, n_alt = 0
   Insn 318: point = 3741, n_alt = 1
   Insn 317: point = 3743, n_alt = 1
   Insn 316: point = 3745, n_alt = 0
   Insn 315: point = 3746, n_alt = 8
   Insn 314: point = 3747, n_alt = 7
   Insn 313: point = 3748, n_alt = 4
   Insn 312: point = 3749, n_alt = 3
   Insn 311: point = 3751, n_alt = 0
   Insn 310: point = 3753, n_alt = 1
   Insn 309: point = 3755, n_alt = 0
   Insn 308: point = 3756, n_alt = 0
   Insn 307: point = 3758, n_alt = 0
   Insn 306: point = 3760, n_alt = 1
   Insn 305: point = 3762, n_alt = 0
   Insn 304: point = 3763, n_alt = 1
   Insn 303: point = 3765, n_alt = 1
   Insn 302: point = 3767, n_alt = 0
   Insn 301: point = 3768, n_alt = 8
   Insn 300: point = 3769, n_alt = 7
   Insn 299: point = 3770, n_alt = 4
   Insn 298: point = 3771, n_alt = 3
   Insn 297: point = 3773, n_alt = 0
   Insn 296: point = 3775, n_alt = 1
   Insn 295: point = 3777, n_alt = 0
   Insn 294: point = 3778, n_alt = 0
   Insn 293: point = 3780, n_alt = 0
   Insn 292: point = 3782, n_alt = 1
   Insn 291: point = 3784, n_alt = 0
   Insn 290: point = 3785, n_alt = 1
   Insn 289: point = 3787, n_alt = 1
   Insn 288: point = 3789, n_alt = 0
   Insn 287: point = 3790, n_alt = 1
   Insn 286: point = 3791, n_alt = 3
   Insn 285: point = 3792, n_alt = 3
   Insn 284: point = 3794, n_alt = 0
   Insn 283: point = 3796, n_alt = 1
   Insn 282: point = 3798, n_alt = 0
   Insn 281: point = 3799, n_alt = 0
   Insn 280: point = 3801, n_alt = 0
   Insn 279: point = 3803, n_alt = 1
   Insn 278: point = 3805, n_alt = 0
   Insn 277: point = 3806, n_alt = 1
   Insn 276: point = 3808, n_alt = 1
   Insn 275: point = 3810, n_alt = 0
   Insn 274: point = 3811, n_alt = 8
   Insn 273: point = 3812, n_alt = 7
   Insn 272: point = 3813, n_alt = 3
   Insn 271: point = 3814, n_alt = 3
   Insn 270: point = 3816, n_alt = 0
   Insn 269: point = 3818, n_alt = 1
   Insn 268: point = 3820, n_alt = 0
   Insn 267: point = 3821, n_alt = 0
   Insn 266: point = 3823, n_alt = 0
   Insn 265: point = 3825, n_alt = 1
   Insn 264: point = 3827, n_alt = 0
   Insn 263: point = 3828, n_alt = 1
   Insn 262: point = 3830, n_alt = 1
   Insn 261: point = 3832, n_alt = 0
   Insn 260: point = 3833, n_alt = 8
   Insn 259: point = 3834, n_alt = 7
   Insn 258: point = 3835, n_alt = 3
   Insn 257: point = 3836, n_alt = 3
   Insn 256: point = 3838, n_alt = 0
   Insn 255: point = 3840, n_alt = 1
   Insn 254: point = 3842, n_alt = 0
   Insn 253: point = 3843, n_alt = 0
   Insn 252: point = 3845, n_alt = 0
   Insn 251: point = 3847, n_alt = 1
   Insn 250: point = 3849, n_alt = 0
   Insn 249: point = 3850, n_alt = 1
   Insn 248: point = 3852, n_alt = 1
   Insn 247: point = 3854, n_alt = 0
   Insn 246: point = 3855, n_alt = 8
   Insn 245: point = 3856, n_alt = 7
   Insn 244: point = 3857, n_alt = 3
   Insn 243: point = 3858, n_alt = 3
   Insn 242: point = 3860, n_alt = 0
   Insn 241: point = 3862, n_alt = 1
   Insn 240: point = 3864, n_alt = 0
   Insn 239: point = 3865, n_alt = 0
   Insn 238: point = 3867, n_alt = 0
   Insn 237: point = 3869, n_alt = 1
   Insn 236: point = 3871, n_alt = 0
   Insn 235: point = 3872, n_alt = 1
   Insn 234: point = 3874, n_alt = 1
   Insn 233: point = 3876, n_alt = 0
   Insn 232: point = 3877, n_alt = 8
   Insn 231: point = 3878, n_alt = 7
   Insn 230: point = 3879, n_alt = 3
   Insn 229: point = 3880, n_alt = 3
   Insn 228: point = 3882, n_alt = 0
   Insn 227: point = 3884, n_alt = 1
   Insn 226: point = 3886, n_alt = 0
   Insn 225: point = 3887, n_alt = 0
   Insn 224: point = 3889, n_alt = 0
   Insn 223: point = 3891, n_alt = 1
   Insn 222: point = 3893, n_alt = 0
   Insn 221: point = 3894, n_alt = 1
   Insn 220: point = 3896, n_alt = 1
   Insn 219: point = 3898, n_alt = 0
   Insn 218: point = 3899, n_alt = 8
   Insn 217: point = 3900, n_alt = 7
   Insn 216: point = 3901, n_alt = 4
   Insn 215: point = 3902, n_alt = 3
   Insn 214: point = 3904, n_alt = 0
   Insn 213: point = 3906, n_alt = 1
   Insn 212: point = 3908, n_alt = 0
   Insn 211: point = 3909, n_alt = 0
   Insn 210: point = 3911, n_alt = 0
   Insn 209: point = 3913, n_alt = 1
   Insn 208: point = 3915, n_alt = 0
   Insn 207: point = 3916, n_alt = 1
   Insn 206: point = 3918, n_alt = 1
   Insn 205: point = 3920, n_alt = 0
   Insn 204: point = 3921, n_alt = 8
   Insn 203: point = 3922, n_alt = 7
   Insn 202: point = 3923, n_alt = 3
   Insn 201: point = 3924, n_alt = 3
   Insn 200: point = 3926, n_alt = 0
   Insn 199: point = 3928, n_alt = 1
   Insn 198: point = 3930, n_alt = 0
   Insn 197: point = 3931, n_alt = 0
   Insn 196: point = 3933, n_alt = 0
   Insn 195: point = 3935, n_alt = 1
   Insn 194: point = 3937, n_alt = 0
   Insn 193: point = 3938, n_alt = 1
   Insn 192: point = 3940, n_alt = 1
   Insn 191: point = 3942, n_alt = 0
   Insn 190: point = 3943, n_alt = 8
   Insn 189: point = 3944, n_alt = 7
   Insn 188: point = 3945, n_alt = 3
   Insn 187: point = 3946, n_alt = 3
   Insn 186: point = 3948, n_alt = 0
   Insn 185: point = 3950, n_alt = 1
   Insn 184: point = 3952, n_alt = 0
   Insn 183: point = 3953, n_alt = 0
   Insn 182: point = 3955, n_alt = 0
   Insn 181: point = 3957, n_alt = 1
   Insn 180: point = 3959, n_alt = 0
   Insn 179: point = 3960, n_alt = 1
   Insn 178: point = 3962, n_alt = 1
   Insn 177: point = 3964, n_alt = 0
   Insn 176: point = 3965, n_alt = 8
   Insn 175: point = 3966, n_alt = 7
   Insn 174: point = 3967, n_alt = 3
   Insn 173: point = 3968, n_alt = 3
   Insn 172: point = 3970, n_alt = 0
   Insn 171: point = 3972, n_alt = 1
   Insn 170: point = 3974, n_alt = 0
   Insn 169: point = 3975, n_alt = 0
   Insn 168: point = 3977, n_alt = 0
   Insn 167: point = 3979, n_alt = 1
   Insn 166: point = 3981, n_alt = 0
   Insn 165: point = 3982, n_alt = 1
   Insn 164: point = 3984, n_alt = 1
   Insn 163: point = 3986, n_alt = 0
  BB 21
   Insn 155: point = 3988, n_alt = 1
  BB 19
   Insn 147: point = 3989, n_alt = 1
   Insn 146: point = 3990, n_alt = 0
   Insn 145: point = 3991, n_alt = 0
  BB 17
   Insn 137: point = 3992, n_alt = 1
  BB 148
   Insn 3183: point = 3992, n_alt = -1
  BB 9
   Insn 70: point = 3992, n_alt = -1
   Insn 69: point = 3992, n_alt = 0
   Insn 68: point = 3993, n_alt = 0
   Insn 67: point = 3995, n_alt = 0
   Insn 66: point = 3996, n_alt = 0
  BB 16
   Insn 3102: point = 3996, n_alt = -1
   Insn 131: point = 3996, n_alt = 1
  BB 149
   Insn 3186: point = 3996, n_alt = -1
  BB 11
   Insn 80: point = 3996, n_alt = -1
   Insn 79: point = 3996, n_alt = 0
   Insn 78: point = 3997, n_alt = 0
   Insn 77: point = 3999, n_alt = 0
   Insn 76: point = 4000, n_alt = 0
  BB 15
   Insn 3100: point = 4001, n_alt = -1
   Insn 125: point = 4001, n_alt = 1
  BB 150
   Insn 3189: point = 4002, n_alt = -1
  BB 13
   Insn 88: point = 4003, n_alt = -1
   Insn 87: point = 4003, n_alt = 0
   Insn 86: point = 4004, n_alt = 0
   Insn 85: point = 4006, n_alt = 0
   Insn 84: point = 4007, n_alt = 0
  BB 14
   Insn 3098: point = 4008, n_alt = -1
   Insn 119: point = 4008, n_alt = 1
   Insn 118: point = 4008, n_alt = 8
   Insn 117: point = 4009, n_alt = 4
   Insn 116: point = 4010, n_alt = 2
   Insn 115: point = 4012, n_alt = 7
   Insn 114: point = 4013, n_alt = 3
   Insn 113: point = 4015, n_alt = 0
   Insn 112: point = 4017, n_alt = 1
   Insn 111: point = 4019, n_alt = 0
   Insn 110: point = 4020, n_alt = 0
   Insn 109: point = 4022, n_alt = 0
   Insn 108: point = 4024, n_alt = 1
   Insn 107: point = 4026, n_alt = 0
   Insn 106: point = 4027, n_alt = 1
   Insn 105: point = 4029, n_alt = 1
   Insn 104: point = 4031, n_alt = 0
   Insn 103: point = 4032, n_alt = 7
   Insn 102: point = 4034, n_alt = 4
   Insn 101: point = 4035, n_alt = 3
   Insn 100: point = 4037, n_alt = 0
   Insn 99: point = 4039, n_alt = 1
   Insn 98: point = 4041, n_alt = 0
   Insn 97: point = 4042, n_alt = 0
   Insn 96: point = 4044, n_alt = 0
   Insn 95: point = 4046, n_alt = 1
   Insn 94: point = 4048, n_alt = 0
   Insn 93: point = 4049, n_alt = 1
   Insn 92: point = 4051, n_alt = 1
   Insn 91: point = 4053, n_alt = 0
   Insn 90: point = 4055, n_alt = 0
  BB 12
   Insn 82: point = 4057, n_alt = 1
  BB 10
   Insn 74: point = 4058, n_alt = 1
   Insn 73: point = 4059, n_alt = 0
   Insn 72: point = 4060, n_alt = 0
  BB 8
   Insn 64: point = 4061, n_alt = 1
  BB 146
   Insn 3177: point = 4061, n_alt = -1
  BB 3
   Insn 21: point = 4061, n_alt = -1
   Insn 20: point = 4061, n_alt = 0
   Insn 19: point = 4062, n_alt = 0
   Insn 18: point = 4064, n_alt = 0
   Insn 17: point = 4065, n_alt = 0
  BB 7
   Insn 3096: point = 4066, n_alt = -1
   Insn 58: point = 4066, n_alt = 1
  BB 147
   Insn 3180: point = 4067, n_alt = -1
  BB 5
   Insn 29: point = 4068, n_alt = -1
   Insn 28: point = 4068, n_alt = 0
   Insn 27: point = 4069, n_alt = 0
   Insn 26: point = 4071, n_alt = 0
   Insn 25: point = 4072, n_alt = 0
  BB 6
   Insn 3094: point = 4073, n_alt = -1
   Insn 52: point = 4073, n_alt = 1
   Insn 51: point = 4073, n_alt = 8
   Insn 50: point = 4074, n_alt = 4
   Insn 49: point = 4075, n_alt = 1
   Insn 48: point = 4077, n_alt = 3
   Insn 47: point = 4079, n_alt = 0
   Insn 46: point = 4081, n_alt = 1
   Insn 45: point = 4083, n_alt = 0
   Insn 44: point = 4084, n_alt = 0
   Insn 43: point = 4086, n_alt = 1
   Insn 42: point = 4088, n_alt = 0
   Insn 41: point = 4089, n_alt = 7
   Insn 40: point = 4091, n_alt = 4
   Insn 39: point = 4092, n_alt = 7
   Insn 38: point = 4094, n_alt = 4
   Insn 37: point = 4095, n_alt = 3
   Insn 36: point = 4097, n_alt = 0
   Insn 35: point = 4099, n_alt = 1
   Insn 34: point = 4101, n_alt = 0
   Insn 33: point = 4102, n_alt = 0
   Insn 32: point = 4104, n_alt = 1
   Insn 31: point = 4106, n_alt = 0
  BB 4
   Insn 23: point = 4108, n_alt = 1
  BB 2
   Insn 15: point = 4109, n_alt = 1
   Insn 14: point = 4110, n_alt = 0
   Insn 13: point = 4111, n_alt = 0
   Insn 12: point = 4112, n_alt = 8
   Insn 11: point = 4113, n_alt = 7
   Insn 7: point = 4114, n_alt = 5
   Insn 6: point = 4114, n_alt = 5
   Insn 5: point = 4114, n_alt = 5
   Insn 4: point = 4114, n_alt = 5
   Insn 3: point = 4114, n_alt = 5
   Insn 2: point = 4114, n_alt = 5
 r87: [4103..4104]
 r88: [4098..4102]
 r89: [4098..4099]
 r90: [4096..4097]
 r91: [4093..4095]
 r92: [4076..4092]
 r93: [4076..4089]
 r94: [4085..4086]
 r95: [4080..4084]
 r96: [4080..4081]
 r97: [4078..4079]
 r98: [4073..4077]
 r99: [4073..4075]
 r100: [4052..4053]
 r101: [4050..4051]
 r102: [4043..4049]
 r103: [4045..4046]
 r104: [4043..4044]
 r105: [4038..4042]
 r106: [4038..4039]
 r107: [4036..4037]
 r108: [4033..4035]
 r109: [4011..4032]
 r110: [4028..4029]
 r111: [4021..4027]
 r112: [4023..4024]
 r113: [4021..4022]
 r114: [4016..4020]
 r115: [4016..4017]
 r116: [4014..4015]
 r117: [4008..4013]
 r118: [4008..4010]
 r119: [3983..3984]
 r120: [3976..3982]
 r121: [3978..3979]
 r122: [3976..3977]
 r123: [3971..3975]
 r124: [3971..3972]
 r125: [3969..3970]
 r126: [3965..3968]
 r127: [3961..3962]
 r128: [3954..3960]
 r129: [3956..3957]
 r130: [3954..3955]
 r131: [3949..3953]
 r132: [3949..3950]
 r133: [3947..3948]
 r134: [3943..3946]
 r135: [3939..3940]
 r136: [3932..3938]
 r137: [3934..3935]
 r138: [3932..3933]
 r139: [3927..3931]
 r140: [3927..3928]
 r141: [3925..3926]
 r142: [3921..3924]
 r143: [3917..3918]
 r144: [3910..3916]
 r145: [3912..3913]
 r146: [3910..3911]
 r147: [3905..3909]
 r148: [3905..3906]
 r149: [3903..3904]
 r150: [3899..3902]
 r151: [3895..3896]
 r152: [3888..3894]
 r153: [3890..3891]
 r154: [3888..3889]
 r155: [3883..3887]
 r156: [3883..3884]
 r157: [3881..3882]
 r158: [3877..3880]
 r159: [3873..3874]
 r160: [3866..3872]
 r161: [3868..3869]
 r162: [3866..3867]
 r163: [3861..3865]
 r164: [3861..3862]
 r165: [3859..3860]
 r166: [3855..3858]
 r167: [3851..3852]
 r168: [3844..3850]
 r169: [3846..3847]
 r170: [3844..3845]
 r171: [3839..3843]
 r172: [3839..3840]
 r173: [3837..3838]
 r174: [3833..3836]
 r175: [3829..3830]
 r176: [3822..3828]
 r177: [3824..3825]
 r178: [3822..3823]
 r179: [3817..3821]
 r180: [3817..3818]
 r181: [3815..3816]
 r182: [3811..3814]
 r183: [3807..3808]
 r184: [3800..3806]
 r185: [3802..3803]
 r186: [3800..3801]
 r187: [3795..3799]
 r188: [3795..3796]
 r189: [3793..3794]
 r190: [3790..3792]
 r191: [3786..3787]
 r192: [3779..3785]
 r193: [3781..3782]
 r194: [3779..3780]
 r195: [3774..3778]
 r196: [3774..3775]
 r197: [3772..3773]
 r198: [3768..3771]
 r199: [3764..3765]
 r200: [3757..3763]
 r201: [3759..3760]
 r202: [3757..3758]
 r203: [3752..3756]
 r204: [3752..3753]
 r205: [3750..3751]
 r206: [3746..3749]
 r207: [3742..3743]
 r208: [3735..3741]
 r209: [3737..3738]
 r210: [3735..3736]
 r211: [3730..3734]
 r212: [3730..3731]
 r213: [3728..3729]
 r214: [3724..3727]
 r215: [3720..3721]
 r216: [3713..3719]
 r217: [3715..3716]
 r218: [3713..3714]
 r219: [3708..3712]
 r220: [3708..3709]
 r221: [3706..3707]
 r222: [3702..3705]
 r223: [3675..3676]
 r224: [3670..3674]
 r225: [3670..3671]
 r226: [3668..3669]
 r227: [3665..3667]
 r228: [3661..3662]
 r229: [3656..3657]
 r230: [3651..3655]
 r231: [3651..3652]
 r232: [3649..3650]
 r233: [3646..3648]
 r234: [3640..3641]
 r235: [3633..3639]
 r236: [3635..3636]
 r237: [3633..3634]
 r238: [3628..3632]
 r239: [3628..3629]
 r240: [3626..3627]
 r241: [3623..3625]
 r242: [3621..3622]
 r243: [3600..3601]
 r244: [3593..3599]
 r245: [3595..3596]
 r246: [3593..3594]
 r247: [3588..3592]
 r248: [3588..3589]
 r249: [3586..3587]
 r250: [3583..3585]
 r251: [3578..3580]
 r252: [3531..3532]
 r253: [3526..3530]
 r254: [3526..3527]
 r255: [3524..3525]
 r256: [3520..3523]
 r257: [3573..3574]
 r258: [3566..3572]
 r259: [3568..3569]
 r260: [3566..3567]
 r261: [3561..3565]
 r262: [3561..3562]
 r263: [3559..3560]
 r264: [3556..3558]
 r265: [3552..3553]
 r266: [3547..3548]
 r267: [3542..3546]
 r268: [3542..3543]
 r269: [3540..3541]
 r270: [3536..3539]
 r271: [3509..3510]
 r272: [3504..3508]
 r273: [3504..3505]
 r274: [3502..3503]
 r275: [3498..3501]
 r276: [3616..3617]
 r277: [3611..3615]
 r278: [3611..3612]
 r279: [3609..3610]
 r280: [3605..3608]
 r281: [3493..3494]
 r282: [3486..3492]
 r283: [3488..3489]
 r284: [3486..3487]
 r285: [3481..3485]
 r286: [3481..3482]
 r287: [3479..3480]
 r288: [3476..3478]
 r289: [3450..3475]
 r290: [3471..3472]
 r291: [3469..3470]
 r292: [3462..3468]
 r293: [3464..3465]
 r294: [3462..3463]
 r295: [3457..3461]
 r296: [3457..3458]
 r297: [3455..3456]
 r298: [3452..3454]
 r299: [3450..3451]
 r300: [3448..3449]
 r301: [3445..3447]
 r302: [3439..3440]
 r303: [3432..3438]
 r304: [3434..3435]
 r305: [3432..3433]
 r306: [3427..3431]
 r307: [3427..3428]
 r308: [3425..3426]
 r309: [3422..3424]
 r310: [3420..3421]
 r311: [3415..3416]
 r312: [3413..3414]
 r313: [3406..3412]
 r314: [3408..3409]
 r315: [3406..3407]
 r316: [3401..3405]
 r317: [3401..3402]
 r318: [3399..3400]
 r319: [3396..3398]
 r320: [3393..3395]
 r321: [3388..3389]
 r322: [3386..3387]
 r323: [3379..3385]
 r324: [3381..3382]
 r325: [3379..3380]
 r326: [3374..3378]
 r327: [3374..3375]
 r328: [3372..3373]
 r329: [3369..3371]
 r330: [3345..3368]
 r331: [3364..3365]
 r332: [3357..3363]
 r333: [3359..3360]
 r334: [3357..3358]
 r335: [3352..3356]
 r336: [3352..3353]
 r337: [3350..3351]
 r338: [3347..3349]
 r339: [3345..3346]
 r340: [3339..3340]
 r341: [3332..3338]
 r342: [3334..3335]
 r343: [3332..3333]
 r344: [3327..3331]
 r345: [3327..3328]
 r346: [3325..3326]
 r347: [3322..3324]
 r348: [3301..3321]
 r349: [3317..3318]
 r350: [3310..3316]
 r351: [3312..3313]
 r352: [3310..3311]
 r353: [3305..3309]
 r354: [3305..3306]
 r355: [3303..3304]
 r356: [3298..3302]
 r357: [3298..3300]
 r358: [3294..3295]
 r359: [3287..3293]
 r360: [3289..3290]
 r361: [3287..3288]
 r362: [3282..3286]
 r363: [3282..3283]
 r364: [3280..3281]
 r365: [3277..3279]
 r366: [3255..3276]
 r367: [3272..3273]
 r368: [3265..3271]
 r369: [3267..3268]
 r370: [3265..3266]
 r371: [3260..3264]
 r372: [3260..3261]
 r373: [3258..3259]
 r374: [3252..3257]
 r375: [3252..3254]
 r376: [3248..3249]
 r377: [3241..3247]
 r378: [3243..3244]
 r379: [3241..3242]
 r380: [3236..3240]
 r381: [3236..3237]
 r382: [3234..3235]
 r383: [3231..3233]
 r384: [3209..3230]
 r385: [3226..3227]
 r386: [3219..3225]
 r387: [3221..3222]
 r388: [3219..3220]
 r389: [3214..3218]
 r390: [3214..3215]
 r391: [3212..3213]
 r392: [3206..3211]
 r393: [3206..3208]
 r394: [3202..3203]
 r395: [3195..3201]
 r396: [3197..3198]
 r397: [3195..3196]
 r398: [3190..3194]
 r399: [3190..3191]
 r400: [3188..3189]
 r401: [3185..3187]
 r402: [3138..3184]
 r403: [3180..3181]
 r404: [3173..3179]
 r405: [3175..3176]
 r406: [3173..3174]
 r407: [3168..3172]
 r408: [3168..3169]
 r409: [3166..3167]
 r410: [3163..3165]
 r411: [3159..3160]
 r412: [3138..3158]
 r413: [3154..3155]
 r414: [3147..3153]
 r415: [3149..3150]
 r416: [3147..3148]
 r417: [3142..3146]
 r418: [3142..3143]
 r419: [3140..3141]
 r420: [3135..3139]
 r421: [3135..3137]
 r422: [3131..3132]
 r423: [3124..3130]
 r424: [3126..3127]
 r425: [3124..3125]
 r426: [3119..3123]
 r427: [3119..3120]
 r428: [3117..3118]
 r429: [3114..3116]
 r430: [3067..3113]
 r431: [3109..3110]
 r432: [3102..3108]
 r433: [3104..3105]
 r434: [3102..3103]
 r435: [3097..3101]
 r436: [3097..3098]
 r437: [3095..3096]
 r438: [3092..3094]
 r439: [3088..3089]
 r440: [3067..3087]
 r441: [3083..3084]
 r442: [3076..3082]
 r443: [3078..3079]
 r444: [3076..3077]
 r445: [3071..3075]
 r446: [3071..3072]
 r447: [3069..3070]
 r448: [3064..3068]
 r449: [3064..3066]
 r450: [3060..3061]
 r451: [3053..3059]
 r452: [3055..3056]
 r453: [3053..3054]
 r454: [3048..3052]
 r455: [3048..3049]
 r456: [3046..3047]
 r457: [3043..3045]
 r458: [2998..3042]
 r459: [3038..3039]
 r460: [3031..3037]
 r461: [3033..3034]
 r462: [3031..3032]
 r463: [3026..3030]
 r464: [3026..3027]
 r465: [3024..3025]
 r466: [3021..3023]
 r467: [3019..3020]
 r468: [2998..3018]
 r469: [3014..3015]
 r470: [3007..3013]
 r471: [3009..3010]
 r472: [3007..3008]
 r473: [3002..3006]
 r474: [3002..3003]
 r475: [3000..3001]
 r476: [2995..2999]
 r477: [2995..2997]
 r478: [2991..2992]
 r479: [2984..2990]
 r480: [2986..2987]
 r481: [2984..2985]
 r482: [2979..2983]
 r483: [2979..2980]
 r484: [2977..2978]
 r485: [2974..2976]
 r486: [2896..2973]
 r487: [2969..2970]
 r488: [2962..2968]
 r489: [2964..2965]
 r490: [2962..2963]
 r491: [2957..2961]
 r492: [2957..2958]
 r493: [2955..2956]
 r494: [2952..2954]
 r495: [2926..2949]
 r496: [2945..2946]
 r497: [2938..2944]
 r498: [2940..2941]
 r499: [2938..2939]
 r500: [2933..2937]
 r501: [2933..2934]
 r502: [2931..2932]
 r503: [2928..2930]
 r504: [2926..2927]
 r505: [2924..2925]
 r506: [2922..2923]
 r507: [2917..2919]
 r508: [2896..2916]
 r509: [2912..2913]
 r510: [2905..2911]
 r511: [2907..2908]
 r512: [2905..2906]
 r513: [2900..2904]
 r514: [2900..2901]
 r515: [2898..2899]
 r516: [2893..2897]
 r517: [2893..2895]
 r518: [2889..2890]
 r519: [2882..2888]
 r520: [2884..2885]
 r521: [2882..2883]
 r522: [2877..2881]
 r523: [2877..2878]
 r524: [2875..2876]
 r525: [2872..2874]
 r526: [2867..2869]
 r527: [2857..2861]
 r528: [2857..2858]
 r529: [2855..2856]
 r531: [2830..2831]
 r532: [2823..2829]
 r533: [2825..2826]
 r534: [2823..2824]
 r535: [2818..2822]
 r536: [2818..2819]
 r537: [2816..2817]
 r538: [2813..2815]
 r539: [2808..2810]
 r540: [2806..2807]
 r541: [2803..2805]
 r542: [2772..2802]
 r543: [2798..2799]
 r544: [2791..2797]
 r545: [2793..2794]
 r546: [2791..2792]
 r547: [2786..2790]
 r548: [2786..2787]
 r549: [2784..2785]
 r550: [2781..2783]
 r551: [2776..2778]
 r552: [2774..2775]
 r553: [2772..2773]
 r554: [2770..2771]
 r555: [2766..2769]
 r556: [2754..2758]
 r557: [2754..2755]
 r558: [2752..2753]
 r559: [2746..2747]
 r560: [2744..2745]
 r561: [2741..2743]
 r562: [2728..2735]
 r563: [2730..2731]
 r564: [2728..2729]
 r565: [2725..2727]
 r566: [2723..2724]
 r567: [2720..2722]
 r568: [2707..2708]
 r569: [2702..2706]
 r570: [2702..2703]
 r571: [2700..2701]
 r572: [2697..2699]
 r573: [2694..2696]
 r574: [2675..2676]
 r575: [2668..2674]
 r576: [2670..2671]
 r577: [2668..2669]
 r578: [2663..2667]
 r579: [2663..2664]
 r580: [2661..2662]
 r581: [2658..2660]
 r582: [2634..2657]
 r583: [2634..2654]
 r584: [2650..2651]
 r585: [2643..2649]
 r586: [2645..2646]
 r587: [2643..2644]
 r588: [2638..2642]
 r589: [2638..2639]
 r590: [2636..2637]
 r591: [2631..2635]
 r592: [2631..2633]
 r593: [2610..2611]
 r594: [2608..2609]
 r595: [2606..2607]
 r596: [2601..2602]
 r597: [2588..2589]
 r598: [2586..2587]
 r599: [2581..2583]
 r600: [2575..2576]
 r601: [2573..2574]
 r602: [2568..2570]
 r603: [2562..2563]
 r604: [2555..2561]
 r605: [2557..2558]
 r606: [2555..2556]
 r607: [2550..2554]
 r608: [2550..2551]
 r609: [2548..2549]
 r610: [2545..2547]
 r611: [2521..2544]
 r612: [2540..2541]
 r613: [2533..2539]
 r614: [2535..2536]
 r615: [2533..2534]
 r616: [2528..2532]
 r617: [2528..2529]
 r618: [2526..2527]
 r619: [2523..2525]
 r620: [2521..2522]
 r621: [2495..2520]
 r622: [2516..2517]
 r623: [2507..2515]
 r624: [2511..2512]
 r625: [2509..2510]
 r626: [2507..2508]
 r627: [2502..2506]
 r628: [2502..2503]
 r629: [2500..2501]
 r630: [2497..2499]
 r631: [2495..2496]
 r632: [2469..2494]
 r633: [2490..2491]
 r634: [2481..2489]
 r635: [2485..2486]
 r636: [2483..2484]
 r637: [2481..2482]
 r638: [2476..2480]
 r639: [2476..2477]
 r640: [2474..2475]
 r641: [2471..2473]
 r642: [2469..2470]
 r643: [2467..2468]
 r644: [2464..2466]
 r645: [2458..2459]
 r646: [2456..2457]
 r647: [2449..2455]
 r648: [2451..2452]
 r649: [2449..2450]
 r650: [2444..2448]
 r651: [2444..2445]
 r652: [2442..2443]
 r653: [2439..2441]
 r654: [2413..2438]
 r655: [2434..2435]
 r656: [2432..2433]
 r657: [2425..2431]
 r658: [2427..2428]
 r659: [2425..2426]
 r660: [2420..2424]
 r661: [2420..2421]
 r662: [2418..2419]
 r663: [2415..2417]
 r664: [2413..2414]
 r665: [2385..2412]
 r666: [2408..2409]
 r667: [2406..2407]
 r668: [2397..2405]
 r669: [2401..2402]
 r670: [2399..2400]
 r671: [2397..2398]
 r672: [2392..2396]
 r673: [2392..2393]
 r674: [2390..2391]
 r675: [2387..2389]
 r676: [2385..2386]
 r677: [2357..2384]
 r678: [2380..2381]
 r679: [2378..2379]
 r680: [2369..2377]
 r681: [2373..2374]
 r682: [2371..2372]
 r683: [2369..2370]
 r684: [2364..2368]
 r685: [2364..2365]
 r686: [2362..2363]
 r687: [2359..2361]
 r688: [2357..2358]
 r689: [2355..2356]
 r690: [2352..2354]
 r691: [2342..2343]
 r692: [2339..2341]
 r693: [2333..2334]
 r694: [2326..2332]
 r695: [2328..2329]
 r696: [2326..2327]
 r697: [2321..2325]
 r698: [2321..2322]
 r699: [2319..2320]
 r700: [2316..2318]
 r701: [2314..2315]
 r702: [2309..2310]
 r703: [2307..2308]
 r704: [2300..2306]
 r705: [2302..2303]
 r706: [2300..2301]
 r707: [2295..2299]
 r708: [2295..2296]
 r709: [2293..2294]
 r710: [2290..2292]
 r711: [2287..2289]
 r712: [2282..2283]
 r713: [2275..2281]
 r714: [2277..2278]
 r715: [2275..2276]
 r716: [2270..2274]
 r717: [2270..2271]
 r718: [2268..2269]
 r719: [2265..2267]
 r720: [2244..2264]
 r721: [2260..2261]
 r722: [2253..2259]
 r723: [2255..2256]
 r724: [2253..2254]
 r725: [2248..2252]
 r726: [2248..2249]
 r727: [2246..2247]
 r728: [2241..2245]
 r729: [2241..2243]
 r730: [2237..2238]
 r731: [2230..2236]
 r732: [2232..2233]
 r733: [2230..2231]
 r734: [2225..2229]
 r735: [2225..2226]
 r736: [2223..2224]
 r737: [2220..2222]
 r738: [2173..2219]
 r739: [2215..2216]
 r740: [2208..2214]
 r741: [2210..2211]
 r742: [2208..2209]
 r743: [2203..2207]
 r744: [2203..2204]
 r745: [2201..2202]
 r746: [2198..2200]
 r747: [2194..2195]
 r748: [2173..2193]
 r749: [2189..2190]
 r750: [2182..2188]
 r751: [2184..2185]
 r752: [2182..2183]
 r753: [2177..2181]
 r754: [2177..2178]
 r755: [2175..2176]
 r756: [2170..2174]
 r757: [2170..2172]
 r758: [2166..2167]
 r759: [2159..2165]
 r760: [2161..2162]
 r761: [2159..2160]
 r762: [2154..2158]
 r763: [2154..2155]
 r764: [2152..2153]
 r765: [2149..2151]
 r766: [2102..2148]
 r767: [2144..2145]
 r768: [2137..2143]
 r769: [2139..2140]
 r770: [2137..2138]
 r771: [2132..2136]
 r772: [2132..2133]
 r773: [2130..2131]
 r774: [2127..2129]
 r775: [2123..2124]
 r776: [2102..2122]
 r777: [2118..2119]
 r778: [2111..2117]
 r779: [2113..2114]
 r780: [2111..2112]
 r781: [2106..2110]
 r782: [2106..2107]
 r783: [2104..2105]
 r784: [2099..2103]
 r785: [2099..2101]
 r786: [2069..2070]
 r787: [2062..2068]
 r788: [2064..2065]
 r789: [2062..2063]
 r790: [2057..2061]
 r791: [2057..2058]
 r792: [2055..2056]
 r793: [2052..2054]
 r794: [2046..2051]
 r795: [2041..2042]
 r796: [2034..2040]
 r797: [2036..2037]
 r798: [2034..2035]
 r799: [2029..2033]
 r800: [2029..2030]
 r801: [2027..2028]
 r802: [2024..2026]
 r803: [2021..2023]
 r804: [2015..2016]
 r805: [2008..2014]
 r806: [2010..2011]
 r807: [2008..2009]
 r808: [2003..2007]
 r809: [2003..2004]
 r810: [2001..2002]
 r811: [1998..2000]
 r812: [1996..1997]
 r813: [1972..1995]
 r814: [1991..1992]
 r815: [1984..1990]
 r816: [1986..1987]
 r817: [1984..1985]
 r818: [1979..1983]
 r819: [1979..1980]
 r820: [1977..1978]
 r821: [1974..1976]
 r822: [1972..1973]
 r823: [1951..1971]
 r824: [1967..1968]
 r825: [1960..1966]
 r826: [1962..1963]
 r827: [1960..1961]
 r828: [1955..1959]
 r829: [1955..1956]
 r830: [1953..1954]
 r831: [1948..1952]
 r832: [1948..1950]
 r833: [1944..1945]
 r834: [1937..1943]
 r835: [1939..1940]
 r836: [1937..1938]
 r837: [1932..1936]
 r838: [1932..1933]
 r839: [1930..1931]
 r840: [1927..1929]
 r841: [1901..1926]
 r842: [1922..1923]
 r843: [1920..1921]
 r844: [1913..1919]
 r845: [1915..1916]
 r846: [1913..1914]
 r847: [1908..1912]
 r848: [1908..1909]
 r849: [1906..1907]
 r850: [1903..1905]
 r851: [1901..1902]
 r852: [1899..1900]
 r853: [1877..1898]
 r854: [1894..1895]
 r855: [1887..1893]
 r856: [1889..1890]
 r857: [1887..1888]
 r858: [1882..1886]
 r859: [1882..1883]
 r860: [1880..1881]
 r861: [1874..1879]
 r862: [1874..1876]
 r863: [1870..1871]
 r864: [1863..1869]
 r865: [1865..1866]
 r866: [1863..1864]
 r867: [1858..1862]
 r868: [1858..1859]
 r869: [1856..1857]
 r870: [1853..1855]
 r871: [1832..1852]
 r872: [1848..1849]
 r873: [1841..1847]
 r874: [1843..1844]
 r875: [1841..1842]
 r876: [1836..1840]
 r877: [1836..1837]
 r878: [1834..1835]
 r879: [1829..1833]
 r880: [1829..1831]
 r881: [1825..1826]
 r882: [1818..1824]
 r883: [1820..1821]
 r884: [1818..1819]
 r885: [1813..1817]
 r886: [1813..1814]
 r887: [1811..1812]
 r888: [1808..1810]
 r889: [1787..1807]
 r890: [1803..1804]
 r891: [1796..1802]
 r892: [1798..1799]
 r893: [1796..1797]
 r894: [1791..1795]
 r895: [1791..1792]
 r896: [1789..1790]
 r897: [1784..1788]
 r898: [1784..1786]
 r899: [1780..1781]
 r900: [1773..1779]
 r901: [1775..1776]
 r902: [1773..1774]
 r903: [1768..1772]
 r904: [1768..1769]
 r905: [1766..1767]
 r906: [1763..1765]
 r907: [1742..1762]
 r908: [1758..1759]
 r909: [1751..1757]
 r910: [1753..1754]
 r911: [1751..1752]
 r912: [1746..1750]
 r913: [1746..1747]
 r914: [1744..1745]
 r915: [1739..1743]
 r916: [1739..1741]
 r917: [1735..1736]
 r918: [1728..1734]
 r919: [1730..1731]
 r920: [1728..1729]
 r921: [1723..1727]
 r922: [1723..1724]
 r923: [1721..1722]
 r924: [1718..1720]
 r925: [1697..1717]
 r926: [1713..1714]
 r927: [1706..1712]
 r928: [1708..1709]
 r929: [1706..1707]
 r930: [1701..1705]
 r931: [1701..1702]
 r932: [1699..1700]
 r933: [1694..1698]
 r934: [1694..1696]
 r935: [1672..1673]
 r936: [1665..1671]
 r937: [1667..1668]
 r938: [1665..1666]
 r939: [1660..1664]
 r940: [1660..1661]
 r941: [1658..1659]
 r942: [1655..1657]
 r943: [1649..1654]
 r944: [1644..1645]
 r945: [1637..1643]
 r946: [1639..1640]
 r947: [1637..1638]
 r948: [1632..1636]
 r949: [1632..1633]
 r950: [1630..1631]
 r951: [1627..1629]
 r952: [1624..1626]
 r953: [1618..1619]
 r954: [1611..1617]
 r955: [1613..1614]
 r956: [1611..1612]
 r957: [1606..1610]
 r958: [1606..1607]
 r959: [1604..1605]
 r960: [1601..1603]
 r961: [1580..1600]
 r962: [1596..1597]
 r963: [1589..1595]
 r964: [1591..1592]
 r965: [1589..1590]
 r966: [1584..1588]
 r967: [1584..1585]
 r968: [1582..1583]
 r969: [1577..1581]
 r970: [1577..1579]
 r971: [1573..1574]
 r972: [1566..1572]
 r973: [1568..1569]
 r974: [1566..1567]
 r975: [1561..1565]
 r976: [1561..1562]
 r977: [1559..1560]
 r978: [1556..1558]
 r979: [1535..1555]
 r980: [1551..1552]
 r981: [1544..1550]
 r982: [1546..1547]
 r983: [1544..1545]
 r984: [1539..1543]
 r985: [1539..1540]
 r986: [1537..1538]
 r987: [1532..1536]
 r988: [1532..1534]
 r989: [1506..1507]
 r990: [1499..1505]
 r991: [1501..1502]
 r992: [1499..1500]
 r993: [1494..1498]
 r994: [1494..1495]
 r995: [1492..1493]
 r996: [1489..1491]
 r997: [1483..1488]
 r998: [1476..1477]
 r999: [1469..1475]
 r1000: [1471..1472]
 r1001: [1469..1470]
 r1002: [1464..1468]
 r1003: [1464..1465]
 r1004: [1462..1463]
 r1005: [1459..1461]
 r1006: [1433..1458]
 r1007: [1454..1455]
 r1008: [1452..1453]
 r1009: [1445..1451]
 r1010: [1447..1448]
 r1011: [1445..1446]
 r1012: [1440..1444]
 r1013: [1440..1441]
 r1014: [1438..1439]
 r1015: [1435..1437]
 r1016: [1433..1434]
 r1017: [1431..1432]
 r1018: [1409..1430]
 r1019: [1426..1427]
 r1020: [1419..1425]
 r1021: [1421..1422]
 r1022: [1419..1420]
 r1023: [1414..1418]
 r1024: [1414..1415]
 r1025: [1412..1413]
 r1026: [1406..1411]
 r1027: [1406..1408]
 r1028: [1401..1402]
 r1029: [1394..1400]
 r1030: [1396..1397]
 r1031: [1394..1395]
 r1032: [1389..1393]
 r1033: [1389..1390]
 r1034: [1387..1388]
 r1035: [1384..1386]
 r1036: [1358..1383]
 r1037: [1379..1380]
 r1038: [1377..1378]
 r1039: [1370..1376]
 r1040: [1372..1373]
 r1041: [1370..1371]
 r1042: [1365..1369]
 r1043: [1365..1366]
 r1044: [1363..1364]
 r1045: [1360..1362]
 r1046: [1358..1359]
 r1047: [1356..1357]
 r1048: [1353..1355]
 r1049: [1347..1348]
 r1050: [1340..1346]
 r1051: [1342..1343]
 r1052: [1340..1341]
 r1053: [1335..1339]
 r1054: [1335..1336]
 r1055: [1333..1334]
 r1056: [1330..1332]
 r1057: [1327..1329]
 r1058: [1324..1326]
 r1059: [1303..1304]
 r1060: [1301..1302]
 r1061: [1294..1300]
 r1062: [1296..1297]
 r1063: [1294..1295]
 r1064: [1289..1293]
 r1065: [1289..1290]
 r1066: [1287..1288]
 r1067: [1284..1286]
 r1068: [1260..1283]
 r1069: [1279..1280]
 r1070: [1272..1278]
 r1071: [1274..1275]
 r1072: [1272..1273]
 r1073: [1267..1271]
 r1074: [1267..1268]
 r1075: [1265..1266]
 r1076: [1262..1264]
 r1077: [1260..1261]
 r1078: [1254..1255]
 r1079: [1247..1253]
 r1080: [1249..1250]
 r1081: [1247..1248]
 r1082: [1242..1246]
 r1083: [1242..1243]
 r1084: [1240..1241]
 r1085: [1237..1239]
 r1086: [1211..1236]
 r1087: [1232..1233]
 r1088: [1230..1231]
 r1089: [1223..1229]
 r1090: [1225..1226]
 r1091: [1223..1224]
 r1092: [1218..1222]
 r1093: [1218..1219]
 r1094: [1216..1217]
 r1095: [1213..1215]
 r1096: [1211..1212]
 r1097: [1209..1210]
 r1098: [1206..1208]
 r1099: [1200..1201]
 r1100: [1193..1199]
 r1101: [1195..1196]
 r1102: [1193..1194]
 r1103: [1188..1192]
 r1104: [1188..1189]
 r1105: [1186..1187]
 r1106: [1182..1185]
 r1107: [1178..1179]
 r1108: [1171..1177]
 r1109: [1173..1174]
 r1110: [1171..1172]
 r1111: [1166..1170]
 r1112: [1166..1167]
 r1113: [1164..1165]
 r1114: [1142..1163]
 r1115: [1159..1160]
 r1116: [1152..1158]
 r1117: [1154..1155]
 r1118: [1152..1153]
 r1119: [1147..1151]
 r1120: [1147..1148]
 r1121: [1145..1146]
 r1122: [1137..1144]
 r1123: [1137..1139]
 r1124: [1133..1134]
 r1125: [1126..1132]
 r1126: [1128..1129]
 r1127: [1126..1127]
 r1128: [1121..1125]
 r1129: [1121..1122]
 r1130: [1119..1120]
 r1131: [1097..1118]
 r1132: [1114..1115]
 r1133: [1107..1113]
 r1134: [1109..1110]
 r1135: [1107..1108]
 r1136: [1102..1106]
 r1137: [1102..1103]
 r1138: [1100..1101]
 r1139: [1092..1099]
 r1140: [1092..1094]
 r1141: [1088..1089]
 r1142: [1081..1087]
 r1143: [1083..1084]
 r1144: [1081..1082]
 r1145: [1076..1080]
 r1146: [1076..1077]
 r1147: [1074..1075]
 r1148: [1071..1073]
 r1149: [1066..1068]
 r1150: [1056..1060]
 r1151: [1056..1057]
 r1152: [1054..1055]
 r1154: [1029..1030]
 r1155: [1022..1028]
 r1156: [1024..1025]
 r1157: [1022..1023]
 r1158: [1017..1021]
 r1159: [1017..1018]
 r1160: [1015..1016]
 r1161: [1012..1014]
 r1162: [1007..1009]
 r1163: [1005..1006]
 r1164: [1002..1004]
 r1165: [971..1001]
 r1166: [997..998]
 r1167: [990..996]
 r1168: [992..993]
 r1169: [990..991]
 r1170: [985..989]
 r1171: [985..986]
 r1172: [983..984]
 r1173: [980..982]
 r1174: [975..977]
 r1175: [973..974]
 r1176: [971..972]
 r1177: [969..970]
 r1178: [965..968]
 r1179: [953..957]
 r1180: [953..954]
 r1181: [951..952]
 r1182: [945..946]
 r1183: [943..944]
 r1184: [940..942]
 r1185: [927..934]
 r1186: [929..930]
 r1187: [927..928]
 r1188: [924..926]
 r1189: [922..923]
 r1190: [919..921]
 r1191: [906..907]
 r1192: [901..905]
 r1193: [901..902]
 r1194: [899..900]
 r1195: [896..898]
 r1196: [893..895]
 r1197: [874..875]
 r1198: [867..873]
 r1199: [869..870]
 r1200: [867..868]
 r1201: [862..866]
 r1202: [862..863]
 r1203: [860..861]
 r1204: [856..859]
 r1205: [852..853]
 r1206: [845..851]
 r1207: [847..848]
 r1208: [845..846]
 r1209: [840..844]
 r1210: [840..841]
 r1211: [838..839]
 r1212: [816..837]
 r1213: [833..834]
 r1214: [826..832]
 r1215: [828..829]
 r1216: [826..827]
 r1217: [821..825]
 r1218: [821..822]
 r1219: [819..820]
 r1220: [813..818]
 r1221: [813..815]
 r1222: [809..810]
 r1223: [802..808]
 r1224: [804..805]
 r1225: [802..803]
 r1226: [797..801]
 r1227: [797..798]
 r1228: [795..796]
 r1229: [792..794]
 r1230: [766..789]
 r1231: [785..786]
 r1232: [778..784]
 r1233: [780..781]
 r1234: [778..779]
 r1235: [773..777]
 r1236: [773..774]
 r1237: [771..772]
 r1238: [768..770]
 r1239: [766..767]
 r1240: [764..765]
 r1241: [762..763]
 r1242: [738..759]
 r1243: [755..756]
 r1244: [748..754]
 r1245: [750..751]
 r1246: [748..749]
 r1247: [743..747]
 r1248: [743..744]
 r1249: [741..742]
 r1250: [735..740]
 r1251: [735..737]
 r1252: [730..731]
 r1253: [723..729]
 r1254: [725..726]
 r1255: [723..724]
 r1256: [718..722]
 r1257: [718..719]
 r1258: [716..717]
 r1259: [713..715]
 r1260: [670..712]
 r1261: [708..709]
 r1262: [701..707]
 r1263: [703..704]
 r1264: [701..702]
 r1265: [696..700]
 r1266: [696..697]
 r1267: [694..695]
 r1268: [691..693]
 r1269: [670..690]
 r1270: [686..687]
 r1271: [679..685]
 r1272: [681..682]
 r1273: [679..680]
 r1274: [674..678]
 r1275: [674..675]
 r1276: [672..673]
 r1277: [667..671]
 r1278: [667..669]
 r1279: [663..664]
 r1280: [656..662]
 r1281: [658..659]
 r1282: [656..657]
 r1283: [651..655]
 r1284: [651..652]
 r1285: [649..650]
 r1286: [646..648]
 r1287: [643..645]
 r1288: [638..639]
 r1289: [631..637]
 r1290: [633..634]
 r1291: [631..632]
 r1292: [626..630]
 r1293: [626..627]
 r1294: [624..625]
 r1295: [620..623]
 r1296: [616..617]
 r1297: [609..615]
 r1298: [611..612]
 r1299: [609..610]
 r1300: [604..608]
 r1301: [604..605]
 r1302: [602..603]
 r1303: [599..601]
 r1304: [556..598]
 r1305: [594..595]
 r1306: [587..593]
 r1307: [589..590]
 r1308: [587..588]
 r1309: [582..586]
 r1310: [582..583]
 r1311: [580..581]
 r1312: [577..579]
 r1313: [556..576]
 r1314: [572..573]
 r1315: [565..571]
 r1316: [567..568]
 r1317: [565..566]
 r1318: [560..564]
 r1319: [560..561]
 r1320: [558..559]
 r1321: [553..557]
 r1322: [553..555]
 r1323: [548..549]
 r1324: [541..547]
 r1325: [543..544]
 r1326: [541..542]
 r1327: [536..540]
 r1328: [536..537]
 r1329: [534..535]
 r1330: [531..533]
 r1331: [528..530]
 r1332: [523..524]
 r1333: [516..522]
 r1334: [518..519]
 r1335: [516..517]
 r1336: [511..515]
 r1337: [511..512]
 r1338: [509..510]
 r1339: [505..508]
 r1340: [501..502]
 r1341: [494..500]
 r1342: [496..497]
 r1343: [494..495]
 r1344: [489..493]
 r1345: [489..490]
 r1346: [487..488]
 r1347: [484..486]
 r1348: [441..483]
 r1349: [479..480]
 r1350: [472..478]
 r1351: [474..475]
 r1352: [472..473]
 r1353: [467..471]
 r1354: [467..468]
 r1355: [465..466]
 r1356: [462..464]
 r1357: [441..461]
 r1358: [457..458]
 r1359: [450..456]
 r1360: [452..453]
 r1361: [450..451]
 r1362: [445..449]
 r1363: [445..446]
 r1364: [443..444]
 r1365: [438..442]
 r1366: [438..440]
 r1367: [416..417]
 r1368: [409..415]
 r1369: [411..412]
 r1370: [409..410]
 r1371: [404..408]
 r1372: [404..405]
 r1373: [402..403]
 r1374: [399..401]
 r1375: [393..398]
 r1376: [386..387]
 r1377: [384..385]
 r1378: [379..381]
 r1379: [373..374]
 r1380: [371..372]
 r1381: [366..368]
 r1382: [359..360]
 r1383: [352..358]
 r1384: [354..355]
 r1385: [352..353]
 r1386: [347..351]
 r1387: [347..348]
 r1388: [345..346]
 r1389: [342..344]
 r1390: [318..341]
 r1391: [337..338]
 r1392: [330..336]
 r1393: [332..333]
 r1394: [330..331]
 r1395: [325..329]
 r1396: [325..326]
 r1397: [323..324]
 r1398: [320..322]
 r1399: [318..319]
 r1400: [292..317]
 r1401: [313..314]
 r1402: [304..312]
 r1403: [308..309]
 r1404: [306..307]
 r1405: [304..305]
 r1406: [299..303]
 r1407: [299..300]
 r1408: [297..298]
 r1409: [294..296]
 r1410: [292..293]
 r1411: [266..291]
 r1412: [287..288]
 r1413: [278..286]
 r1414: [282..283]
 r1415: [280..281]
 r1416: [278..279]
 r1417: [273..277]
 r1418: [273..274]
 r1419: [271..272]
 r1420: [268..270]
 r1421: [266..267]
 r1422: [240..265]
 r1423: [261..262]
 r1424: [259..260]
 r1425: [252..258]
 r1426: [254..255]
 r1427: [252..253]
 r1428: [247..251]
 r1429: [247..248]
 r1430: [245..246]
 r1431: [242..244]
 r1432: [240..241]
 r1433: [214..239]
 r1434: [235..236]
 r1435: [233..234]
 r1436: [226..232]
 r1437: [228..229]
 r1438: [226..227]
 r1439: [221..225]
 r1440: [221..222]
 r1441: [219..220]
 r1442: [216..218]
 r1443: [214..215]
 r1444: [186..213]
 r1445: [209..210]
 r1446: [207..208]
 r1447: [198..206]
 r1448: [202..203]
 r1449: [200..201]
 r1450: [198..199]
 r1451: [193..197]
 r1452: [193..194]
 r1453: [191..192]
 r1454: [188..190]
 r1455: [186..187]
 r1456: [158..185]
 r1457: [181..182]
 r1458: [179..180]
 r1459: [170..178]
 r1460: [174..175]
 r1461: [172..173]
 r1462: [170..171]
 r1463: [165..169]
 r1464: [165..166]
 r1465: [163..164]
 r1466: [160..162]
 r1467: [158..159]
 r1468: [156..157]
 r1469: [153..155]
 r1470: [147..148]
 r1471: [140..146]
 r1472: [142..143]
 r1473: [140..141]
 r1474: [135..139]
 r1475: [135..136]
 r1476: [133..134]
 r1477: [130..132]
 r1478: [127..129]
 r1479: [124..126]
 r1480: [103..104]
 r1481: [96..102]
 r1482: [98..99]
 r1483: [96..97]
 r1484: [91..95]
 r1485: [91..92]
 r1486: [89..90]
 r1487: [67..88]
 r1488: [84..85]
 r1489: [77..83]
 r1490: [79..80]
 r1491: [77..78]
 r1492: [72..76]
 r1493: [72..73]
 r1494: [70..71]
 r1495: [62..69]
 r1496: [62..64]
 r1497: [58..59]
 r1498: [51..57]
 r1499: [53..54]
 r1500: [51..52]
 r1501: [46..50]
 r1502: [46..47]
 r1503: [44..45]
 r1504: [22..43]
 r1505: [39..40]
 r1506: [32..38]
 r1507: [34..35]
 r1508: [32..33]
 r1509: [27..31]
 r1510: [27..28]
 r1511: [25..26]
 r1512: [17..24]
 r1513: [17..19]
 r1514: [2855..2864] [2851..2853]
 r1515: [2752..2763] [2748..2750]
 r1516: [1054..1063] [1050..1052]
 r1517: [951..962] [947..949]
 r1518: [4109..4111]
 r1519: [4061..4110]
 r1520: [4061..4062]
 r1521: [4068..4069]
 r1522: [3992..3993]
 r1523: [4058..4060]
 r1524: [3996..4059]
 r1525: [3996..3997]
 r1526: [4003..4004]
 r1527: [2078..2079]
 r1528: [3989..3991]
 r1529: [3690..3990]
 r1530: [3690..3691]
 r1531: [3697..3698]
 r1532: [2614..2615]
 r1533: [3681..3683]
 r1534: [2618..3682]
 r1535: [2618..2619]
 r1536: [2625..2626]
 r1537: [2597..2598]
 r1538: [2082..2083]
 r1539: [2594..2596]
 r1540: [2086..2595]
 r1541: [2086..2087]
 r1542: [2093..2094]
 r1543: [1515..1516]
 r1544: [2075..2077]
 r1545: [1681..2076]
 r1546: [1681..1682]
 r1547: [1688..1689]
 r1548: [1678..1680]
 r1549: [1519..1679]
 r1550: [1519..1520]
 r1551: [1526..1527]
 r1552: [0..1]
 r1553: [1512..1514]
 r1554: [425..1513]
 r1555: [425..426]
 r1556: [432..433]
 r1557: [1309..1310]
 r1558: [422..424]
 r1559: [4..423]
 r1560: [4..5]
 r1561: [11..12]
 r1562: [109..110]
 r1563: [4112..4113]
 r1564: [4063..4064]
 r1565: [4070..4071]
 r1566: [4105..4106]
 r1567: [4100..4101]
 r1568: [4093..4094]
 r1569: [4090..4091]
 r1570: [4087..4088]
 r1571: [4082..4083]
 r1572: [4073..4074]
 r1573: [3994..3995]
 r1574: [3998..3999]
 r1575: [4005..4006]
 r1576: [4054..4055]
 r1577: [4047..4048]
 r1578: [4040..4041]
 r1579: [4033..4034]
 r1580: [4030..4031]
 r1581: [4025..4026]
 r1582: [4018..4019]
 r1583: [4011..4012]
 r1584: [4008..4009]
 r1585: [2080..2081]
 r1586: [3692..3693]
 r1587: [3699..3700]
 r1588: [3985..3986]
 r1589: [3980..3981]
 r1590: [3973..3974]
 r1591: [3965..3967]
 r1592: [3965..3966]
 r1593: [3963..3964]
 r1594: [3958..3959]
 r1595: [3951..3952]
 r1596: [3943..3945]
 r1597: [3943..3944]
 r1598: [3941..3942]
 r1599: [3936..3937]
 r1600: [3929..3930]
 r1601: [3921..3923]
 r1602: [3921..3922]
 r1603: [3919..3920]
 r1604: [3914..3915]
 r1605: [3907..3908]
 r1606: [3899..3901]
 r1607: [3899..3900]
 r1608: [3897..3898]
 r1609: [3892..3893]
 r1610: [3885..3886]
 r1611: [3877..3879]
 r1612: [3877..3878]
 r1613: [3875..3876]
 r1614: [3870..3871]
 r1615: [3863..3864]
 r1616: [3855..3857]
 r1617: [3855..3856]
 r1618: [3853..3854]
 r1619: [3848..3849]
 r1620: [3841..3842]
 r1621: [3833..3835]
 r1622: [3833..3834]
 r1623: [3831..3832]
 r1624: [3826..3827]
 r1625: [3819..3820]
 r1626: [3811..3813]
 r1627: [3811..3812]
 r1628: [3809..3810]
 r1629: [3804..3805]
 r1630: [3797..3798]
 r1631: [3790..3791]
 r1632: [3788..3789]
 r1633: [3783..3784]
 r1634: [3776..3777]
 r1635: [3768..3770]
 r1636: [3768..3769]
 r1637: [3766..3767]
 r1638: [3761..3762]
 r1639: [3754..3755]
 r1640: [3746..3748]
 r1641: [3746..3747]
 r1642: [3744..3745]
 r1643: [3739..3740]
 r1644: [3732..3733]
 r1645: [3724..3726]
 r1646: [3724..3725]
 r1647: [3722..3723]
 r1648: [3717..3718]
 r1649: [3710..3711]
 r1650: [3702..3704]
 r1651: [3702..3703]
 r1652: [3688..3689]
 r1653: [3684..3687]
 r1654: [3685..3686]
 r1657: [2616..2617]
 r1658: [2620..2621]
 r1659: [2627..2628]
 r1660: [3677..3678]
 r1661: [3672..3673]
 r1662: [3663..3666]
 r1663: [3663..3664]
 r1664: [3658..3659]
 r1665: [3653..3654]
 r1666: [3646..3647]
 r1667: [3644..3645]
 r1668: [3642..3643]
 r1669: [3637..3638]
 r1670: [3630..3631]
 r1671: [3623..3624]
 r1672: [3602..3603]
 r1673: [3597..3598]
 r1674: [3590..3591]
 r1675: [3581..3584]
 r1676: [3581..3582]
 r1677: [3578..3579]
 r1678: [3533..3534]
 r1679: [3528..3529]
 r1680: [3520..3522]
 r1681: [3520..3521]
 r1682: [3575..3576]
 r1683: [3570..3571]
 r1684: [3563..3564]
 r1685: [3554..3557]
 r1686: [3554..3555]
 r1687: [3549..3550]
 r1688: [3544..3545]
 r1689: [3536..3538]
 r1690: [3536..3537]
 r1691: [3517..3518]
 r1692: [3514..3515]
 r1693: [3511..3512]
 r1694: [3506..3507]
 r1695: [3498..3500]
 r1696: [3498..3499]
 r1697: [3618..3619]
 r1698: [3613..3614]
 r1699: [3605..3607]
 r1700: [3605..3606]
 r1701: [3495..3496]
 r1702: [3490..3491]
 r1703: [3483..3484]
 r1704: [3476..3477]
 r1705: [3473..3474]
 r1706: [3466..3467]
 r1707: [3459..3460]
 r1708: [3452..3453]
 r1709: [3443..3444]
 r1710: [3445..3446]
 r1711: [3441..3442]
 r1712: [3436..3437]
 r1713: [3429..3430]
 r1714: [3422..3423]
 r1715: [3417..3418]
 r1716: [3410..3411]
 r1717: [3403..3404]
 r1718: [3396..3397]
 r1719: [3393..3394]
 r1720: [3390..3391]
 r1721: [3383..3384]
 r1722: [3376..3377]
 r1723: [3369..3370]
 r1724: [3366..3367]
 r1725: [3361..3362]
 r1726: [3354..3355]
 r1727: [3347..3348]
 r1728: [3343..3344]
 r1729: [3341..3342]
 r1730: [3336..3337]
 r1731: [3329..3330]
 r1732: [3322..3323]
 r1733: [3319..3320]
 r1734: [3314..3315]
 r1735: [3307..3308]
 r1736: [3298..3299]
 r1737: [3296..3297]
 r1738: [3291..3292]
 r1739: [3284..3285]
 r1740: [3277..3278]
 r1741: [3274..3275]
 r1742: [3269..3270]
 r1743: [3262..3263]
 r1744: [3255..3256]
 r1745: [3252..3253]
 r1746: [3250..3251]
 r1747: [3245..3246]
 r1748: [3238..3239]
 r1749: [3231..3232]
 r1750: [3228..3229]
 r1751: [3223..3224]
 r1752: [3216..3217]
 r1753: [3209..3210]
 r1754: [3206..3207]
 r1755: [3204..3205]
 r1756: [3199..3200]
 r1757: [3192..3193]
 r1758: [3185..3186]
 r1759: [3182..3183]
 r1760: [3177..3178]
 r1761: [3170..3171]
 r1762: [3161..3164]
 r1763: [3161..3162]
 r1764: [3156..3157]
 r1765: [3151..3152]
 r1766: [3144..3145]
 r1767: [3135..3136]
 r1768: [3133..3134]
 r1769: [3128..3129]
 r1770: [3121..3122]
 r1771: [3114..3115]
 r1772: [3111..3112]
 r1773: [3106..3107]
 r1774: [3099..3100]
 r1775: [3090..3093]
 r1776: [3090..3091]
 r1777: [3085..3086]
 r1778: [3080..3081]
 r1779: [3073..3074]
 r1780: [3064..3065]
 r1781: [3062..3063]
 r1782: [3057..3058]
 r1783: [3050..3051]
 r1784: [3043..3044]
 r1785: [3040..3041]
 r1786: [3035..3036]
 r1787: [3028..3029]
 r1788: [3021..3022]
 r1789: [3016..3017]
 r1790: [3011..3012]
 r1791: [3004..3005]
 r1792: [2995..2996]
 r1793: [2993..2994]
 r1794: [2988..2989]
 r1795: [2981..2982]
 r1796: [2974..2975]
 r1797: [2971..2972]
 r1798: [2966..2967]
 r1799: [2959..2960]
 r1800: [2950..2953]
 r1801: [2950..2951]
 r1802: [2947..2948]
 r1803: [2942..2943]
 r1804: [2935..2936]
 r1805: [2928..2929]
 r1806: [2917..2918]
 r1807: [2914..2915]
 r1808: [2909..2910]
 r1809: [2902..2903]
 r1810: [2893..2894]
 r1811: [2891..2892]
 r1812: [2886..2887]
 r1813: [2879..2880]
 r1814: [2870..2873]
 r1815: [2870..2871]
 r1816: [2865..2866]
 r1817: [2867..2868]
 r1818: [2862..2863]
 r1819: [2859..2860]
 r1820: [2849..2850]
 r1821: [2847..2848]
 r1822: [2845..2846]
 r1823: [2842..2843]
 r1824: [2840..2841]
 r1825: [2837..2838]
 r1826: [2832..2833]
 r1827: [2827..2828]
 r1828: [2820..2821]
 r1829: [2811..2814]
 r1830: [2811..2812]
 r1831: [2808..2809]
 r1832: [2803..2804]
 r1833: [2800..2801]
 r1834: [2795..2796]
 r1835: [2788..2789]
 r1836: [2779..2782]
 r1837: [2779..2780]
 r1838: [2776..2777]
 r1839: [2764..2765]
 r1840: [2759..2760]
 r1841: [2761..2762]
 r1842: [2756..2757]
 r1843: [2739..2740]
 r1844: [2741..2742]
 r1845: [2736..2738]
 r1846: [2736..2737]
 r1847: [2732..2734]
 r1848: [2732..2733]
 r1849: [2725..2726]
 r1850: [2718..2719]
 r1851: [2720..2721]
 r1852: [2716..2717]
 r1853: [2688..2689]
 r1854: [2712..2714]
 r1855: [2712..2713]
 r1856: [2685..2686]
 r1857: [2709..2710]
 r1858: [2704..2705]
 r1859: [2697..2698]
 r1860: [2694..2695]
 r1861: [2682..2683]
 r1862: [2691..2692]
 r1863: [2679..2680]
 r1864: [2677..2678]
 r1865: [2672..2673]
 r1866: [2665..2666]
 r1867: [2658..2659]
 r1868: [2655..2656]
 r1869: [2652..2653]
 r1870: [2647..2648]
 r1871: [2640..2641]
 r1872: [2631..2632]
 r1873: [2599..2600]
 r1874: [2612..2613]
 r1875: [2603..2605]
 r1876: [2603..2604]
 r1877: [2084..2085]
 r1878: [2088..2089]
 r1879: [2095..2096]
 r1880: [2590..2591]
 r1881: [2584..2585]
 r1884: [2579..2580]
 r1885: [2581..2582]
 r1886: [2577..2578]
 r1887: [2571..2572]
 r1890: [2566..2567]
 r1891: [2568..2569]
 r1892: [2564..2565]
 r1893: [2559..2560]
 r1894: [2552..2553]
 r1895: [2545..2546]
 r1896: [2542..2543]
 r1897: [2537..2538]
 r1898: [2530..2531]
 r1899: [2523..2524]
 r1900: [2518..2519]
 r1901: [2513..2514]
 r1902: [2504..2505]
 r1903: [2497..2498]
 r1904: [2492..2493]
 r1905: [2487..2488]
 r1906: [2478..2479]
 r1907: [2471..2472]
 r1908: [2462..2463]
 r1909: [2464..2465]
 r1910: [2460..2461]
 r1911: [2453..2454]
 r1912: [2446..2447]
 r1913: [2439..2440]
 r1914: [2436..2437]
 r1915: [2429..2430]
 r1916: [2422..2423]
 r1917: [2415..2416]
 r1918: [2410..2411]
 r1919: [2403..2404]
 r1920: [2394..2395]
 r1921: [2387..2388]
 r1922: [2382..2383]
 r1923: [2375..2376]
 r1924: [2366..2367]
 r1925: [2359..2360]
 r1926: [2350..2351]
 r1927: [2352..2353]
 r1928: [2346..2347]
 r1929: [2348..2349]
 r1930: [2344..2345]
 r1931: [2337..2338]
 r1932: [2339..2340]
 r1933: [2335..2336]
 r1934: [2330..2331]
 r1935: [2323..2324]
 r1936: [2316..2317]
 r1937: [2311..2312]
 r1938: [2304..2305]
 r1939: [2297..2298]
 r1940: [2290..2291]
 r1941: [2287..2288]
 r1942: [2284..2285]
 r1943: [2279..2280]
 r1944: [2272..2273]
 r1945: [2265..2266]
 r1946: [2262..2263]
 r1947: [2257..2258]
 r1948: [2250..2251]
 r1949: [2241..2242]
 r1950: [2239..2240]
 r1951: [2234..2235]
 r1952: [2227..2228]
 r1953: [2220..2221]
 r1954: [2217..2218]
 r1955: [2212..2213]
 r1956: [2205..2206]
 r1957: [2196..2199]
 r1958: [2196..2197]
 r1959: [2191..2192]
 r1960: [2186..2187]
 r1961: [2179..2180]
 r1962: [2170..2171]
 r1963: [2168..2169]
 r1964: [2163..2164]
 r1965: [2156..2157]
 r1966: [2149..2150]
 r1967: [2146..2147]
 r1968: [2141..2142]
 r1969: [2134..2135]
 r1970: [2125..2128]
 r1971: [2125..2126]
 r1972: [2120..2121]
 r1973: [2115..2116]
 r1974: [2108..2109]
 r1975: [2099..2100]
 r1976: [1517..1518]
 r1977: [1683..1684]
 r1978: [1690..1691]
 r1979: [2071..2072]
 r1980: [2066..2067]
 r1981: [2059..2060]
 r1982: [2052..2053]
 r1983: [2049..2050]
 r1984: [2046..2047]
 r1985: [2043..2044]
 r1986: [2038..2039]
 r1987: [2031..2032]
 r1988: [2024..2025]
 r1989: [2019..2020]
 r1990: [2021..2022]
 r1991: [2017..2018]
 r1992: [2012..2013]
 r1993: [2005..2006]
 r1994: [1998..1999]
 r1995: [1993..1994]
 r1996: [1988..1989]
 r1997: [1981..1982]
 r1998: [1974..1975]
 r1999: [1969..1970]
 r2000: [1964..1965]
 r2001: [1957..1958]
 r2002: [1948..1949]
 r2003: [1946..1947]
 r2004: [1941..1942]
 r2005: [1934..1935]
 r2006: [1927..1928]
 r2007: [1924..1925]
 r2008: [1917..1918]
 r2009: [1910..1911]
 r2010: [1903..1904]
 r2011: [1896..1897]
 r2012: [1891..1892]
 r2013: [1884..1885]
 r2014: [1877..1878]
 r2015: [1874..1875]
 r2016: [1872..1873]
 r2017: [1867..1868]
 r2018: [1860..1861]
 r2019: [1853..1854]
 r2020: [1850..1851]
 r2021: [1845..1846]
 r2022: [1838..1839]
 r2023: [1829..1830]
 r2024: [1827..1828]
 r2025: [1822..1823]
 r2026: [1815..1816]
 r2027: [1808..1809]
 r2028: [1805..1806]
 r2029: [1800..1801]
 r2030: [1793..1794]
 r2031: [1784..1785]
 r2032: [1782..1783]
 r2033: [1777..1778]
 r2034: [1770..1771]
 r2035: [1763..1764]
 r2036: [1760..1761]
 r2037: [1755..1756]
 r2038: [1748..1749]
 r2039: [1739..1740]
 r2040: [1737..1738]
 r2041: [1732..1733]
 r2042: [1725..1726]
 r2043: [1718..1719]
 r2044: [1715..1716]
 r2045: [1710..1711]
 r2046: [1703..1704]
 r2047: [1694..1695]
 r2048: [1521..1522]
 r2049: [1528..1529]
 r2050: [1674..1675]
 r2051: [1669..1670]
 r2052: [1662..1663]
 r2053: [1655..1656]
 r2054: [1652..1653]
 r2055: [1649..1650]
 r2056: [1646..1647]
 r2057: [1641..1642]
 r2058: [1634..1635]
 r2059: [1627..1628]
 r2060: [1622..1623]
 r2061: [1624..1625]
 r2062: [1620..1621]
 r2063: [1615..1616]
 r2064: [1608..1609]
 r2065: [1601..1602]
 r2066: [1598..1599]
 r2067: [1593..1594]
 r2068: [1586..1587]
 r2069: [1577..1578]
 r2070: [1575..1576]
 r2071: [1570..1571]
 r2072: [1563..1564]
 r2073: [1556..1557]
 r2074: [1553..1554]
 r2075: [1548..1549]
 r2076: [1541..1542]
 r2077: [1532..1533]
 r2078: [2..3]
 r2079: [427..428]
 r2080: [434..435]
 r2081: [1508..1509]
 r2082: [1503..1504]
 r2083: [1496..1497]
 r2084: [1489..1490]
 r2085: [1486..1487]
 r2086: [1483..1484]
 r2087: [1480..1481]
 r2088: [1478..1479]
 r2089: [1473..1474]
 r2090: [1466..1467]
 r2091: [1459..1460]
 r2092: [1456..1457]
 r2093: [1449..1450]
 r2094: [1442..1443]
 r2095: [1435..1436]
 r2096: [1428..1429]
 r2097: [1423..1424]
 r2098: [1416..1417]
 r2099: [1409..1410]
 r2100: [1406..1407]
 r2101: [1311..1312]
 r2102: [1403..1404]
 r2103: [1398..1399]
 r2104: [1391..1392]
 r2105: [1384..1385]
 r2106: [1381..1382]
 r2107: [1374..1375]
 r2108: [1367..1368]
 r2109: [1360..1361]
 r2110: [1351..1352]
 r2111: [1353..1354]
 r2112: [1349..1350]
 r2113: [1344..1345]
 r2114: [1337..1338]
 r2115: [1330..1331]
 r2116: [1327..1328]
 r2117: [1322..1323]
 r2118: [1324..1325]
 r2119: [1320..1321]
 r2120: [1317..1318]
 r2121: [1315..1316]
 r2122: [1305..1306]
 r2123: [1298..1299]
 r2124: [1291..1292]
 r2125: [1284..1285]
 r2126: [1281..1282]
 r2127: [1276..1277]
 r2128: [1269..1270]
 r2129: [1262..1263]
 r2130: [1258..1259]
 r2131: [1256..1257]
 r2132: [1251..1252]
 r2133: [1244..1245]
 r2134: [1237..1238]
 r2135: [1234..1235]
 r2136: [1227..1228]
 r2137: [1220..1221]
 r2138: [1213..1214]
 r2139: [1204..1205]
 r2140: [1206..1207]
 r2141: [1202..1203]
 r2142: [1197..1198]
 r2143: [1190..1191]
 r2144: [1182..1184]
 r2145: [1182..1183]
 r2146: [1180..1181]
 r2147: [1175..1176]
 r2148: [1168..1169]
 r2149: [1161..1162]
 r2150: [1156..1157]
 r2151: [1149..1150]
 r2152: [1140..1143]
 r2153: [1140..1141]
 r2154: [1137..1138]
 r2155: [1135..1136]
 r2156: [1130..1131]
 r2157: [1123..1124]
 r2158: [1116..1117]
 r2159: [1111..1112]
 r2160: [1104..1105]
 r2161: [1095..1098]
 r2162: [1095..1096]
 r2163: [1092..1093]
 r2164: [1090..1091]
 r2165: [1085..1086]
 r2166: [1078..1079]
 r2167: [1069..1072]
 r2168: [1069..1070]
 r2169: [1064..1065]
 r2170: [1066..1067]
 r2171: [1061..1062]
 r2172: [1058..1059]
 r2173: [1048..1049]
 r2174: [1046..1047]
 r2175: [1044..1045]
 r2176: [1041..1042]
 r2177: [1039..1040]
 r2178: [1036..1037]
 r2179: [1031..1032]
 r2180: [1026..1027]
 r2181: [1019..1020]
 r2182: [1010..1013]
 r2183: [1010..1011]
 r2184: [1007..1008]
 r2185: [1002..1003]
 r2186: [999..1000]
 r2187: [994..995]
 r2188: [987..988]
 r2189: [978..981]
 r2190: [978..979]
 r2191: [975..976]
 r2192: [963..964]
 r2193: [958..959]
 r2194: [960..961]
 r2195: [955..956]
 r2196: [938..939]
 r2197: [940..941]
 r2198: [935..937]
 r2199: [935..936]
 r2200: [931..933]
 r2201: [931..932]
 r2202: [924..925]
 r2203: [917..918]
 r2204: [919..920]
 r2205: [915..916]
 r2206: [887..888]
 r2207: [911..913]
 r2208: [911..912]
 r2209: [884..885]
 r2210: [908..909]
 r2211: [903..904]
 r2212: [896..897]
 r2213: [893..894]
 r2214: [881..882]
 r2215: [890..891]
 r2216: [878..879]
 r2217: [876..877]
 r2218: [871..872]
 r2219: [864..865]
 r2220: [856..858]
 r2221: [856..857]
 r2222: [854..855]
 r2223: [849..850]
 r2224: [842..843]
 r2225: [835..836]
 r2226: [830..831]
 r2227: [823..824]
 r2228: [816..817]
 r2229: [813..814]
 r2230: [811..812]
 r2231: [806..807]
 r2232: [799..800]
 r2233: [790..793]
 r2234: [790..791]
 r2235: [787..788]
 r2236: [782..783]
 r2237: [775..776]
 r2238: [768..769]
 r2239: [757..758]
 r2240: [752..753]
 r2241: [745..746]
 r2242: [738..739]
 r2243: [735..736]
 r2244: [732..733]
 r2245: [727..728]
 r2246: [720..721]
 r2247: [713..714]
 r2248: [710..711]
 r2249: [705..706]
 r2250: [698..699]
 r2251: [691..692]
 r2252: [688..689]
 r2253: [683..684]
 r2254: [676..677]
 r2255: [667..668]
 r2256: [665..666]
 r2257: [660..661]
 r2258: [653..654]
 r2259: [646..647]
 r2260: [643..644]
 r2261: [640..641]
 r2262: [635..636]
 r2263: [628..629]
 r2264: [620..622]
 r2265: [620..621]
 r2266: [618..619]
 r2267: [613..614]
 r2268: [606..607]
 r2269: [599..600]
 r2270: [596..597]
 r2271: [591..592]
 r2272: [584..585]
 r2273: [577..578]
 r2274: [574..575]
 r2275: [569..570]
 r2276: [562..563]
 r2277: [553..554]
 r2278: [550..551]
 r2279: [545..546]
 r2280: [538..539]
 r2281: [531..532]
 r2282: [528..529]
 r2283: [525..526]
 r2284: [520..521]
 r2285: [513..514]
 r2286: [505..507]
 r2287: [505..506]
 r2288: [503..504]
 r2289: [498..499]
 r2290: [491..492]
 r2291: [484..485]
 r2292: [481..482]
 r2293: [476..477]
 r2294: [469..470]
 r2295: [462..463]
 r2296: [459..460]
 r2297: [454..455]
 r2298: [447..448]
 r2299: [438..439]
 r2300: [6..7]
 r2301: [13..14]
 r2302: [418..419]
 r2303: [413..414]
 r2304: [406..407]
 r2305: [399..400]
 r2306: [396..397]
 r2307: [393..394]
 r2308: [390..391]
 r2309: [388..389]
 r2310: [382..383]
 r2313: [377..378]
 r2314: [379..380]
 r2315: [375..376]
 r2316: [369..370]
 r2319: [364..365]
 r2320: [366..367]
 r2321: [111..112]
 r2322: [361..362]
 r2323: [356..357]
 r2324: [349..350]
 r2325: [342..343]
 r2326: [339..340]
 r2327: [334..335]
 r2328: [327..328]
 r2329: [320..321]
 r2330: [315..316]
 r2331: [310..311]
 r2332: [301..302]
 r2333: [294..295]
 r2334: [289..290]
 r2335: [284..285]
 r2336: [275..276]
 r2337: [268..269]
 r2338: [263..264]
 r2339: [256..257]
 r2340: [249..250]
 r2341: [242..243]
 r2342: [237..238]
 r2343: [230..231]
 r2344: [223..224]
 r2345: [216..217]
 r2346: [211..212]
 r2347: [204..205]
 r2348: [195..196]
 r2349: [188..189]
 r2350: [183..184]
 r2351: [176..177]
 r2352: [167..168]
 r2353: [160..161]
 r2354: [151..152]
 r2355: [153..154]
 r2356: [149..150]
 r2357: [144..145]
 r2358: [137..138]
 r2359: [130..131]
 r2360: [127..128]
 r2361: [122..123]
 r2362: [124..125]
 r2363: [120..121]
 r2364: [117..118]
 r2365: [115..116]
 r2366: [105..106]
 r2367: [100..101]
 r2368: [93..94]
 r2369: [86..87]
 r2370: [81..82]
 r2371: [74..75]
 r2372: [65..68]
 r2373: [65..66]
 r2374: [62..63]
 r2375: [60..61]
 r2376: [55..56]
 r2377: [48..49]
 r2378: [41..42]
 r2379: [36..37]
 r2380: [29..30]
 r2381: [20..23]
 r2382: [20..21]
 r2383: [17..18]
 r2384: [2920..2921]
 r2385: [2835..2836]
 r2386: [2766..2767]
 r2387: [1034..1035]
 r2388: [965..966]
 r2389: [760..761]
 r2390: [2768..2834]
 r2391: [967..1033]
Compressing live ranges: from 4114 to 3384 - 82%
Ranges after the compression:
 r87: [3376..3377]
 r88: [3372..3375]
 r89: [3372..3373]
 r90: [3370..3371]
 r91: [3368..3369]
 r92: [3354..3367]
 r93: [3354..3365]
 r94: [3362..3363]
 r95: [3358..3361]
 r96: [3358..3359]
 r97: [3356..3357]
 r98: [3352..3355]
 r99: [3352..3353]
 r100: [3338..3339]
 r101: [3336..3337]
 r102: [3330..3335]
 r103: [3332..3333]
 r104: [3330..3331]
 r105: [3326..3329]
 r106: [3326..3327]
 r107: [3324..3325]
 r108: [3322..3323]
 r109: [3304..3321]
 r110: [3318..3319]
 r111: [3312..3317]
 r112: [3314..3315]
 r113: [3312..3313]
 r114: [3308..3311]
 r115: [3308..3309]
 r116: [3306..3307]
 r117: [3302..3305]
 r118: [3302..3303]
 r119: [3284..3285]
 r120: [3278..3283]
 r121: [3280..3281]
 r122: [3278..3279]
 r123: [3274..3277]
 r124: [3274..3275]
 r125: [3272..3273]
 r126: [3270..3271]
 r127: [3266..3267]
 r128: [3260..3265]
 r129: [3262..3263]
 r130: [3260..3261]
 r131: [3256..3259]
 r132: [3256..3257]
 r133: [3254..3255]
 r134: [3252..3253]
 r135: [3248..3249]
 r136: [3242..3247]
 r137: [3244..3245]
 r138: [3242..3243]
 r139: [3238..3241]
 r140: [3238..3239]
 r141: [3236..3237]
 r142: [3234..3235]
 r143: [3230..3231]
 r144: [3224..3229]
 r145: [3226..3227]
 r146: [3224..3225]
 r147: [3220..3223]
 r148: [3220..3221]
 r149: [3218..3219]
 r150: [3216..3217]
 r151: [3212..3213]
 r152: [3206..3211]
 r153: [3208..3209]
 r154: [3206..3207]
 r155: [3202..3205]
 r156: [3202..3203]
 r157: [3200..3201]
 r158: [3198..3199]
 r159: [3194..3195]
 r160: [3188..3193]
 r161: [3190..3191]
 r162: [3188..3189]
 r163: [3184..3187]
 r164: [3184..3185]
 r165: [3182..3183]
 r166: [3180..3181]
 r167: [3176..3177]
 r168: [3170..3175]
 r169: [3172..3173]
 r170: [3170..3171]
 r171: [3166..3169]
 r172: [3166..3167]
 r173: [3164..3165]
 r174: [3162..3163]
 r175: [3158..3159]
 r176: [3152..3157]
 r177: [3154..3155]
 r178: [3152..3153]
 r179: [3148..3151]
 r180: [3148..3149]
 r181: [3146..3147]
 r182: [3144..3145]
 r183: [3140..3141]
 r184: [3134..3139]
 r185: [3136..3137]
 r186: [3134..3135]
 r187: [3130..3133]
 r188: [3130..3131]
 r189: [3128..3129]
 r190: [3126..3127]
 r191: [3122..3123]
 r192: [3116..3121]
 r193: [3118..3119]
 r194: [3116..3117]
 r195: [3112..3115]
 r196: [3112..3113]
 r197: [3110..3111]
 r198: [3108..3109]
 r199: [3104..3105]
 r200: [3098..3103]
 r201: [3100..3101]
 r202: [3098..3099]
 r203: [3094..3097]
 r204: [3094..3095]
 r205: [3092..3093]
 r206: [3090..3091]
 r207: [3086..3087]
 r208: [3080..3085]
 r209: [3082..3083]
 r210: [3080..3081]
 r211: [3076..3079]
 r212: [3076..3077]
 r213: [3074..3075]
 r214: [3072..3073]
 r215: [3068..3069]
 r216: [3062..3067]
 r217: [3064..3065]
 r218: [3062..3063]
 r219: [3058..3061]
 r220: [3058..3059]
 r221: [3056..3057]
 r222: [3054..3055]
 r223: [3036..3037]
 r224: [3032..3035]
 r225: [3032..3033]
 r226: [3030..3031]
 r227: [3028..3029]
 r228: [3024..3025]
 r229: [3020..3021]
 r230: [3016..3019]
 r231: [3016..3017]
 r232: [3014..3015]
 r233: [3012..3013]
 r234: [3006..3007]
 r235: [3000..3005]
 r236: [3002..3003]
 r237: [3000..3001]
 r238: [2996..2999]
 r239: [2996..2997]
 r240: [2994..2995]
 r241: [2992..2993]
 r242: [2990..2991]
 r243: [2974..2975]
 r244: [2968..2973]
 r245: [2970..2971]
 r246: [2968..2969]
 r247: [2964..2967]
 r248: [2964..2965]
 r249: [2962..2963]
 r250: [2960..2961]
 r251: [2956..2957]
 r252: [2918..2919]
 r253: [2914..2917]
 r254: [2914..2915]
 r255: [2912..2913]
 r256: [2910..2911]
 r257: [2952..2953]
 r258: [2946..2951]
 r259: [2948..2949]
 r260: [2946..2947]
 r261: [2942..2945]
 r262: [2942..2943]
 r263: [2940..2941]
 r264: [2938..2939]
 r265: [2934..2935]
 r266: [2930..2931]
 r267: [2926..2929]
 r268: [2926..2927]
 r269: [2924..2925]
 r270: [2922..2923]
 r271: [2902..2903]
 r272: [2898..2901]
 r273: [2898..2899]
 r274: [2896..2897]
 r275: [2894..2895]
 r276: [2986..2987]
 r277: [2982..2985]
 r278: [2982..2983]
 r279: [2980..2981]
 r280: [2978..2979]
 r281: [2890..2891]
 r282: [2884..2889]
 r283: [2886..2887]
 r284: [2884..2885]
 r285: [2880..2883]
 r286: [2880..2881]
 r287: [2878..2879]
 r288: [2876..2877]
 r289: [2854..2875]
 r290: [2872..2873]
 r291: [2870..2871]
 r292: [2864..2869]
 r293: [2866..2867]
 r294: [2864..2865]
 r295: [2860..2863]
 r296: [2860..2861]
 r297: [2858..2859]
 r298: [2856..2857]
 r299: [2854..2855]
 r300: [2852..2853]
 r301: [2850..2851]
 r302: [2844..2845]
 r303: [2838..2843]
 r304: [2840..2841]
 r305: [2838..2839]
 r306: [2834..2837]
 r307: [2834..2835]
 r308: [2832..2833]
 r309: [2830..2831]
 r310: [2828..2829]
 r311: [2824..2825]
 r312: [2822..2823]
 r313: [2816..2821]
 r314: [2818..2819]
 r315: [2816..2817]
 r316: [2812..2815]
 r317: [2812..2813]
 r318: [2810..2811]
 r319: [2808..2809]
 r320: [2806..2807]
 r321: [2802..2803]
 r322: [2800..2801]
 r323: [2794..2799]
 r324: [2796..2797]
 r325: [2794..2795]
 r326: [2790..2793]
 r327: [2790..2791]
 r328: [2788..2789]
 r329: [2786..2787]
 r330: [2766..2785]
 r331: [2782..2783]
 r332: [2776..2781]
 r333: [2778..2779]
 r334: [2776..2777]
 r335: [2772..2775]
 r336: [2772..2773]
 r337: [2770..2771]
 r338: [2768..2769]
 r339: [2766..2767]
 r340: [2760..2761]
 r341: [2754..2759]
 r342: [2756..2757]
 r343: [2754..2755]
 r344: [2750..2753]
 r345: [2750..2751]
 r346: [2748..2749]
 r347: [2746..2747]
 r348: [2728..2745]
 r349: [2742..2743]
 r350: [2736..2741]
 r351: [2738..2739]
 r352: [2736..2737]
 r353: [2732..2735]
 r354: [2732..2733]
 r355: [2730..2731]
 r356: [2726..2729]
 r357: [2726..2727]
 r358: [2722..2723]
 r359: [2716..2721]
 r360: [2718..2719]
 r361: [2716..2717]
 r362: [2712..2715]
 r363: [2712..2713]
 r364: [2710..2711]
 r365: [2708..2709]
 r366: [2690..2707]
 r367: [2704..2705]
 r368: [2698..2703]
 r369: [2700..2701]
 r370: [2698..2699]
 r371: [2694..2697]
 r372: [2694..2695]
 r373: [2692..2693]
 r374: [2688..2691]
 r375: [2688..2689]
 r376: [2684..2685]
 r377: [2678..2683]
 r378: [2680..2681]
 r379: [2678..2679]
 r380: [2674..2677]
 r381: [2674..2675]
 r382: [2672..2673]
 r383: [2670..2671]
 r384: [2652..2669]
 r385: [2666..2667]
 r386: [2660..2665]
 r387: [2662..2663]
 r388: [2660..2661]
 r389: [2656..2659]
 r390: [2656..2657]
 r391: [2654..2655]
 r392: [2650..2653]
 r393: [2650..2651]
 r394: [2646..2647]
 r395: [2640..2645]
 r396: [2642..2643]
 r397: [2640..2641]
 r398: [2636..2639]
 r399: [2636..2637]
 r400: [2634..2635]
 r401: [2632..2633]
 r402: [2592..2631]
 r403: [2628..2629]
 r404: [2622..2627]
 r405: [2624..2625]
 r406: [2622..2623]
 r407: [2618..2621]
 r408: [2618..2619]
 r409: [2616..2617]
 r410: [2614..2615]
 r411: [2610..2611]
 r412: [2592..2609]
 r413: [2606..2607]
 r414: [2600..2605]
 r415: [2602..2603]
 r416: [2600..2601]
 r417: [2596..2599]
 r418: [2596..2597]
 r419: [2594..2595]
 r420: [2590..2593]
 r421: [2590..2591]
 r422: [2586..2587]
 r423: [2580..2585]
 r424: [2582..2583]
 r425: [2580..2581]
 r426: [2576..2579]
 r427: [2576..2577]
 r428: [2574..2575]
 r429: [2572..2573]
 r430: [2532..2571]
 r431: [2568..2569]
 r432: [2562..2567]
 r433: [2564..2565]
 r434: [2562..2563]
 r435: [2558..2561]
 r436: [2558..2559]
 r437: [2556..2557]
 r438: [2554..2555]
 r439: [2550..2551]
 r440: [2532..2549]
 r441: [2546..2547]
 r442: [2540..2545]
 r443: [2542..2543]
 r444: [2540..2541]
 r445: [2536..2539]
 r446: [2536..2537]
 r447: [2534..2535]
 r448: [2530..2533]
 r449: [2530..2531]
 r450: [2526..2527]
 r451: [2520..2525]
 r452: [2522..2523]
 r453: [2520..2521]
 r454: [2516..2519]
 r455: [2516..2517]
 r456: [2514..2515]
 r457: [2512..2513]
 r458: [2474..2511]
 r459: [2508..2509]
 r460: [2502..2507]
 r461: [2504..2505]
 r462: [2502..2503]
 r463: [2498..2501]
 r464: [2498..2499]
 r465: [2496..2497]
 r466: [2494..2495]
 r467: [2492..2493]
 r468: [2474..2491]
 r469: [2488..2489]
 r470: [2482..2487]
 r471: [2484..2485]
 r472: [2482..2483]
 r473: [2478..2481]
 r474: [2478..2479]
 r475: [2476..2477]
 r476: [2472..2475]
 r477: [2472..2473]
 r478: [2468..2469]
 r479: [2462..2467]
 r480: [2464..2465]
 r481: [2462..2463]
 r482: [2458..2461]
 r483: [2458..2459]
 r484: [2456..2457]
 r485: [2454..2455]
 r486: [2388..2453]
 r487: [2450..2451]
 r488: [2444..2449]
 r489: [2446..2447]
 r490: [2444..2445]
 r491: [2440..2443]
 r492: [2440..2441]
 r493: [2438..2439]
 r494: [2436..2437]
 r495: [2414..2433]
 r496: [2430..2431]
 r497: [2424..2429]
 r498: [2426..2427]
 r499: [2424..2425]
 r500: [2420..2423]
 r501: [2420..2421]
 r502: [2418..2419]
 r503: [2416..2417]
 r504: [2414..2415]
 r505: [2412..2413]
 r506: [2410..2411]
 r507: [2406..2407]
 r508: [2388..2405]
 r509: [2402..2403]
 r510: [2396..2401]
 r511: [2398..2399]
 r512: [2396..2397]
 r513: [2392..2395]
 r514: [2392..2393]
 r515: [2390..2391]
 r516: [2386..2389]
 r517: [2386..2387]
 r518: [2382..2383]
 r519: [2376..2381]
 r520: [2378..2379]
 r521: [2376..2377]
 r522: [2372..2375]
 r523: [2372..2373]
 r524: [2370..2371]
 r525: [2368..2369]
 r526: [2364..2365]
 r527: [2356..2359]
 r528: [2356..2357]
 r529: [2354..2355]
 r531: [2334..2335]
 r532: [2328..2333]
 r533: [2330..2331]
 r534: [2328..2329]
 r535: [2324..2327]
 r536: [2324..2325]
 r537: [2322..2323]
 r538: [2320..2321]
 r539: [2316..2317]
 r540: [2314..2315]
 r541: [2312..2313]
 r542: [2286..2311]
 r543: [2308..2309]
 r544: [2302..2307]
 r545: [2304..2305]
 r546: [2302..2303]
 r547: [2298..2301]
 r548: [2298..2299]
 r549: [2296..2297]
 r550: [2294..2295]
 r551: [2290..2291]
 r552: [2288..2289]
 r553: [2286..2287]
 r554: [2284..2285]
 r555: [2280..2283]
 r556: [2270..2273]
 r557: [2270..2271]
 r558: [2268..2269]
 r559: [2264..2265]
 r560: [2262..2263]
 r561: [2260..2261]
 r562: [2250..2255]
 r563: [2252..2253]
 r564: [2250..2251]
 r565: [2248..2249]
 r566: [2246..2247]
 r567: [2244..2245]
 r568: [2234..2235]
 r569: [2230..2233]
 r570: [2230..2231]
 r571: [2228..2229]
 r572: [2226..2227]
 r573: [2224..2225]
 r574: [2210..2211]
 r575: [2204..2209]
 r576: [2206..2207]
 r577: [2204..2205]
 r578: [2200..2203]
 r579: [2200..2201]
 r580: [2198..2199]
 r581: [2196..2197]
 r582: [2176..2195]
 r583: [2176..2193]
 r584: [2190..2191]
 r585: [2184..2189]
 r586: [2186..2187]
 r587: [2184..2185]
 r588: [2180..2183]
 r589: [2180..2181]
 r590: [2178..2179]
 r591: [2174..2177]
 r592: [2174..2175]
 r593: [2158..2159]
 r594: [2156..2157]
 r595: [2154..2155]
 r596: [2150..2151]
 r597: [2140..2141]
 r598: [2138..2139]
 r599: [2134..2135]
 r600: [2128..2129]
 r601: [2126..2127]
 r602: [2122..2123]
 r603: [2116..2117]
 r604: [2110..2115]
 r605: [2112..2113]
 r606: [2110..2111]
 r607: [2106..2109]
 r608: [2106..2107]
 r609: [2104..2105]
 r610: [2102..2103]
 r611: [2082..2101]
 r612: [2098..2099]
 r613: [2092..2097]
 r614: [2094..2095]
 r615: [2092..2093]
 r616: [2088..2091]
 r617: [2088..2089]
 r618: [2086..2087]
 r619: [2084..2085]
 r620: [2082..2083]
 r621: [2060..2081]
 r622: [2078..2079]
 r623: [2070..2077]
 r624: [2074..2075]
 r625: [2072..2073]
 r626: [2070..2071]
 r627: [2066..2069]
 r628: [2066..2067]
 r629: [2064..2065]
 r630: [2062..2063]
 r631: [2060..2061]
 r632: [2038..2059]
 r633: [2056..2057]
 r634: [2048..2055]
 r635: [2052..2053]
 r636: [2050..2051]
 r637: [2048..2049]
 r638: [2044..2047]
 r639: [2044..2045]
 r640: [2042..2043]
 r641: [2040..2041]
 r642: [2038..2039]
 r643: [2036..2037]
 r644: [2034..2035]
 r645: [2028..2029]
 r646: [2026..2027]
 r647: [2020..2025]
 r648: [2022..2023]
 r649: [2020..2021]
 r650: [2016..2019]
 r651: [2016..2017]
 r652: [2014..2015]
 r653: [2012..2013]
 r654: [1990..2011]
 r655: [2008..2009]
 r656: [2006..2007]
 r657: [2000..2005]
 r658: [2002..2003]
 r659: [2000..2001]
 r660: [1996..1999]
 r661: [1996..1997]
 r662: [1994..1995]
 r663: [1992..1993]
 r664: [1990..1991]
 r665: [1966..1989]
 r666: [1986..1987]
 r667: [1984..1985]
 r668: [1976..1983]
 r669: [1980..1981]
 r670: [1978..1979]
 r671: [1976..1977]
 r672: [1972..1975]
 r673: [1972..1973]
 r674: [1970..1971]
 r675: [1968..1969]
 r676: [1966..1967]
 r677: [1942..1965]
 r678: [1962..1963]
 r679: [1960..1961]
 r680: [1952..1959]
 r681: [1956..1957]
 r682: [1954..1955]
 r683: [1952..1953]
 r684: [1948..1951]
 r685: [1948..1949]
 r686: [1946..1947]
 r687: [1944..1945]
 r688: [1942..1943]
 r689: [1940..1941]
 r690: [1938..1939]
 r691: [1928..1929]
 r692: [1926..1927]
 r693: [1920..1921]
 r694: [1914..1919]
 r695: [1916..1917]
 r696: [1914..1915]
 r697: [1910..1913]
 r698: [1910..1911]
 r699: [1908..1909]
 r700: [1906..1907]
 r701: [1904..1905]
 r702: [1900..1901]
 r703: [1898..1899]
 r704: [1892..1897]
 r705: [1894..1895]
 r706: [1892..1893]
 r707: [1888..1891]
 r708: [1888..1889]
 r709: [1886..1887]
 r710: [1884..1885]
 r711: [1882..1883]
 r712: [1878..1879]
 r713: [1872..1877]
 r714: [1874..1875]
 r715: [1872..1873]
 r716: [1868..1871]
 r717: [1868..1869]
 r718: [1866..1867]
 r719: [1864..1865]
 r720: [1846..1863]
 r721: [1860..1861]
 r722: [1854..1859]
 r723: [1856..1857]
 r724: [1854..1855]
 r725: [1850..1853]
 r726: [1850..1851]
 r727: [1848..1849]
 r728: [1844..1847]
 r729: [1844..1845]
 r730: [1840..1841]
 r731: [1834..1839]
 r732: [1836..1837]
 r733: [1834..1835]
 r734: [1830..1833]
 r735: [1830..1831]
 r736: [1828..1829]
 r737: [1826..1827]
 r738: [1786..1825]
 r739: [1822..1823]
 r740: [1816..1821]
 r741: [1818..1819]
 r742: [1816..1817]
 r743: [1812..1815]
 r744: [1812..1813]
 r745: [1810..1811]
 r746: [1808..1809]
 r747: [1804..1805]
 r748: [1786..1803]
 r749: [1800..1801]
 r750: [1794..1799]
 r751: [1796..1797]
 r752: [1794..1795]
 r753: [1790..1793]
 r754: [1790..1791]
 r755: [1788..1789]
 r756: [1784..1787]
 r757: [1784..1785]
 r758: [1780..1781]
 r759: [1774..1779]
 r760: [1776..1777]
 r761: [1774..1775]
 r762: [1770..1773]
 r763: [1770..1771]
 r764: [1768..1769]
 r765: [1766..1767]
 r766: [1726..1765]
 r767: [1762..1763]
 r768: [1756..1761]
 r769: [1758..1759]
 r770: [1756..1757]
 r771: [1752..1755]
 r772: [1752..1753]
 r773: [1750..1751]
 r774: [1748..1749]
 r775: [1744..1745]
 r776: [1726..1743]
 r777: [1740..1741]
 r778: [1734..1739]
 r779: [1736..1737]
 r780: [1734..1735]
 r781: [1730..1733]
 r782: [1730..1731]
 r783: [1728..1729]
 r784: [1724..1727]
 r785: [1724..1725]
 r786: [1702..1703]
 r787: [1696..1701]
 r788: [1698..1699]
 r789: [1696..1697]
 r790: [1692..1695]
 r791: [1692..1693]
 r792: [1690..1691]
 r793: [1688..1689]
 r794: [1684..1687]
 r795: [1680..1681]
 r796: [1674..1679]
 r797: [1676..1677]
 r798: [1674..1675]
 r799: [1670..1673]
 r800: [1670..1671]
 r801: [1668..1669]
 r802: [1666..1667]
 r803: [1664..1665]
 r804: [1658..1659]
 r805: [1652..1657]
 r806: [1654..1655]
 r807: [1652..1653]
 r808: [1648..1651]
 r809: [1648..1649]
 r810: [1646..1647]
 r811: [1644..1645]
 r812: [1642..1643]
 r813: [1622..1641]
 r814: [1638..1639]
 r815: [1632..1637]
 r816: [1634..1635]
 r817: [1632..1633]
 r818: [1628..1631]
 r819: [1628..1629]
 r820: [1626..1627]
 r821: [1624..1625]
 r822: [1622..1623]
 r823: [1604..1621]
 r824: [1618..1619]
 r825: [1612..1617]
 r826: [1614..1615]
 r827: [1612..1613]
 r828: [1608..1611]
 r829: [1608..1609]
 r830: [1606..1607]
 r831: [1602..1605]
 r832: [1602..1603]
 r833: [1598..1599]
 r834: [1592..1597]
 r835: [1594..1595]
 r836: [1592..1593]
 r837: [1588..1591]
 r838: [1588..1589]
 r839: [1586..1587]
 r840: [1584..1585]
 r841: [1562..1583]
 r842: [1580..1581]
 r843: [1578..1579]
 r844: [1572..1577]
 r845: [1574..1575]
 r846: [1572..1573]
 r847: [1568..1571]
 r848: [1568..1569]
 r849: [1566..1567]
 r850: [1564..1565]
 r851: [1562..1563]
 r852: [1560..1561]
 r853: [1542..1559]
 r854: [1556..1557]
 r855: [1550..1555]
 r856: [1552..1553]
 r857: [1550..1551]
 r858: [1546..1549]
 r859: [1546..1547]
 r860: [1544..1545]
 r861: [1540..1543]
 r862: [1540..1541]
 r863: [1536..1537]
 r864: [1530..1535]
 r865: [1532..1533]
 r866: [1530..1531]
 r867: [1526..1529]
 r868: [1526..1527]
 r869: [1524..1525]
 r870: [1522..1523]
 r871: [1504..1521]
 r872: [1518..1519]
 r873: [1512..1517]
 r874: [1514..1515]
 r875: [1512..1513]
 r876: [1508..1511]
 r877: [1508..1509]
 r878: [1506..1507]
 r879: [1502..1505]
 r880: [1502..1503]
 r881: [1498..1499]
 r882: [1492..1497]
 r883: [1494..1495]
 r884: [1492..1493]
 r885: [1488..1491]
 r886: [1488..1489]
 r887: [1486..1487]
 r888: [1484..1485]
 r889: [1466..1483]
 r890: [1480..1481]
 r891: [1474..1479]
 r892: [1476..1477]
 r893: [1474..1475]
 r894: [1470..1473]
 r895: [1470..1471]
 r896: [1468..1469]
 r897: [1464..1467]
 r898: [1464..1465]
 r899: [1460..1461]
 r900: [1454..1459]
 r901: [1456..1457]
 r902: [1454..1455]
 r903: [1450..1453]
 r904: [1450..1451]
 r905: [1448..1449]
 r906: [1446..1447]
 r907: [1428..1445]
 r908: [1442..1443]
 r909: [1436..1441]
 r910: [1438..1439]
 r911: [1436..1437]
 r912: [1432..1435]
 r913: [1432..1433]
 r914: [1430..1431]
 r915: [1426..1429]
 r916: [1426..1427]
 r917: [1422..1423]
 r918: [1416..1421]
 r919: [1418..1419]
 r920: [1416..1417]
 r921: [1412..1415]
 r922: [1412..1413]
 r923: [1410..1411]
 r924: [1408..1409]
 r925: [1390..1407]
 r926: [1404..1405]
 r927: [1398..1403]
 r928: [1400..1401]
 r929: [1398..1399]
 r930: [1394..1397]
 r931: [1394..1395]
 r932: [1392..1393]
 r933: [1388..1391]
 r934: [1388..1389]
 r935: [1374..1375]
 r936: [1368..1373]
 r937: [1370..1371]
 r938: [1368..1369]
 r939: [1364..1367]
 r940: [1364..1365]
 r941: [1362..1363]
 r942: [1360..1361]
 r943: [1356..1359]
 r944: [1352..1353]
 r945: [1346..1351]
 r946: [1348..1349]
 r947: [1346..1347]
 r948: [1342..1345]
 r949: [1342..1343]
 r950: [1340..1341]
 r951: [1338..1339]
 r952: [1336..1337]
 r953: [1330..1331]
 r954: [1324..1329]
 r955: [1326..1327]
 r956: [1324..1325]
 r957: [1320..1323]
 r958: [1320..1321]
 r959: [1318..1319]
 r960: [1316..1317]
 r961: [1298..1315]
 r962: [1312..1313]
 r963: [1306..1311]
 r964: [1308..1309]
 r965: [1306..1307]
 r966: [1302..1305]
 r967: [1302..1303]
 r968: [1300..1301]
 r969: [1296..1299]
 r970: [1296..1297]
 r971: [1292..1293]
 r972: [1286..1291]
 r973: [1288..1289]
 r974: [1286..1287]
 r975: [1282..1285]
 r976: [1282..1283]
 r977: [1280..1281]
 r978: [1278..1279]
 r979: [1260..1277]
 r980: [1274..1275]
 r981: [1268..1273]
 r982: [1270..1271]
 r983: [1268..1269]
 r984: [1264..1267]
 r985: [1264..1265]
 r986: [1262..1263]
 r987: [1258..1261]
 r988: [1258..1259]
 r989: [1240..1241]
 r990: [1234..1239]
 r991: [1236..1237]
 r992: [1234..1235]
 r993: [1230..1233]
 r994: [1230..1231]
 r995: [1228..1229]
 r996: [1226..1227]
 r997: [1222..1225]
 r998: [1216..1217]
 r999: [1210..1215]
 r1000: [1212..1213]
 r1001: [1210..1211]
 r1002: [1206..1209]
 r1003: [1206..1207]
 r1004: [1204..1205]
 r1005: [1202..1203]
 r1006: [1180..1201]
 r1007: [1198..1199]
 r1008: [1196..1197]
 r1009: [1190..1195]
 r1010: [1192..1193]
 r1011: [1190..1191]
 r1012: [1186..1189]
 r1013: [1186..1187]
 r1014: [1184..1185]
 r1015: [1182..1183]
 r1016: [1180..1181]
 r1017: [1178..1179]
 r1018: [1160..1177]
 r1019: [1174..1175]
 r1020: [1168..1173]
 r1021: [1170..1171]
 r1022: [1168..1169]
 r1023: [1164..1167]
 r1024: [1164..1165]
 r1025: [1162..1163]
 r1026: [1158..1161]
 r1027: [1158..1159]
 r1028: [1154..1155]
 r1029: [1148..1153]
 r1030: [1150..1151]
 r1031: [1148..1149]
 r1032: [1144..1147]
 r1033: [1144..1145]
 r1034: [1142..1143]
 r1035: [1140..1141]
 r1036: [1118..1139]
 r1037: [1136..1137]
 r1038: [1134..1135]
 r1039: [1128..1133]
 r1040: [1130..1131]
 r1041: [1128..1129]
 r1042: [1124..1127]
 r1043: [1124..1125]
 r1044: [1122..1123]
 r1045: [1120..1121]
 r1046: [1118..1119]
 r1047: [1116..1117]
 r1048: [1114..1115]
 r1049: [1108..1109]
 r1050: [1102..1107]
 r1051: [1104..1105]
 r1052: [1102..1103]
 r1053: [1098..1101]
 r1054: [1098..1099]
 r1055: [1096..1097]
 r1056: [1094..1095]
 r1057: [1092..1093]
 r1058: [1090..1091]
 r1059: [1074..1075]
 r1060: [1072..1073]
 r1061: [1066..1071]
 r1062: [1068..1069]
 r1063: [1066..1067]
 r1064: [1062..1065]
 r1065: [1062..1063]
 r1066: [1060..1061]
 r1067: [1058..1059]
 r1068: [1038..1057]
 r1069: [1054..1055]
 r1070: [1048..1053]
 r1071: [1050..1051]
 r1072: [1048..1049]
 r1073: [1044..1047]
 r1074: [1044..1045]
 r1075: [1042..1043]
 r1076: [1040..1041]
 r1077: [1038..1039]
 r1078: [1032..1033]
 r1079: [1026..1031]
 r1080: [1028..1029]
 r1081: [1026..1027]
 r1082: [1022..1025]
 r1083: [1022..1023]
 r1084: [1020..1021]
 r1085: [1018..1019]
 r1086: [996..1017]
 r1087: [1014..1015]
 r1088: [1012..1013]
 r1089: [1006..1011]
 r1090: [1008..1009]
 r1091: [1006..1007]
 r1092: [1002..1005]
 r1093: [1002..1003]
 r1094: [1000..1001]
 r1095: [998..999]
 r1096: [996..997]
 r1097: [994..995]
 r1098: [992..993]
 r1099: [986..987]
 r1100: [980..985]
 r1101: [982..983]
 r1102: [980..981]
 r1103: [976..979]
 r1104: [976..977]
 r1105: [974..975]
 r1106: [972..973]
 r1107: [968..969]
 r1108: [962..967]
 r1109: [964..965]
 r1110: [962..963]
 r1111: [958..961]
 r1112: [958..959]
 r1113: [956..957]
 r1114: [938..955]
 r1115: [952..953]
 r1116: [946..951]
 r1117: [948..949]
 r1118: [946..947]
 r1119: [942..945]
 r1120: [942..943]
 r1121: [940..941]
 r1122: [934..939]
 r1123: [934..935]
 r1124: [930..931]
 r1125: [924..929]
 r1126: [926..927]
 r1127: [924..925]
 r1128: [920..923]
 r1129: [920..921]
 r1130: [918..919]
 r1131: [900..917]
 r1132: [914..915]
 r1133: [908..913]
 r1134: [910..911]
 r1135: [908..909]
 r1136: [904..907]
 r1137: [904..905]
 r1138: [902..903]
 r1139: [896..901]
 r1140: [896..897]
 r1141: [892..893]
 r1142: [886..891]
 r1143: [888..889]
 r1144: [886..887]
 r1145: [882..885]
 r1146: [882..883]
 r1147: [880..881]
 r1148: [878..879]
 r1149: [874..875]
 r1150: [866..869]
 r1151: [866..867]
 r1152: [864..865]
 r1154: [844..845]
 r1155: [838..843]
 r1156: [840..841]
 r1157: [838..839]
 r1158: [834..837]
 r1159: [834..835]
 r1160: [832..833]
 r1161: [830..831]
 r1162: [826..827]
 r1163: [824..825]
 r1164: [822..823]
 r1165: [796..821]
 r1166: [818..819]
 r1167: [812..817]
 r1168: [814..815]
 r1169: [812..813]
 r1170: [808..811]
 r1171: [808..809]
 r1172: [806..807]
 r1173: [804..805]
 r1174: [800..801]
 r1175: [798..799]
 r1176: [796..797]
 r1177: [794..795]
 r1178: [790..793]
 r1179: [780..783]
 r1180: [780..781]
 r1181: [778..779]
 r1182: [774..775]
 r1183: [772..773]
 r1184: [770..771]
 r1185: [760..765]
 r1186: [762..763]
 r1187: [760..761]
 r1188: [758..759]
 r1189: [756..757]
 r1190: [754..755]
 r1191: [744..745]
 r1192: [740..743]
 r1193: [740..741]
 r1194: [738..739]
 r1195: [736..737]
 r1196: [734..735]
 r1197: [720..721]
 r1198: [714..719]
 r1199: [716..717]
 r1200: [714..715]
 r1201: [710..713]
 r1202: [710..711]
 r1203: [708..709]
 r1204: [706..707]
 r1205: [702..703]
 r1206: [696..701]
 r1207: [698..699]
 r1208: [696..697]
 r1209: [692..695]
 r1210: [692..693]
 r1211: [690..691]
 r1212: [672..689]
 r1213: [686..687]
 r1214: [680..685]
 r1215: [682..683]
 r1216: [680..681]
 r1217: [676..679]
 r1218: [676..677]
 r1219: [674..675]
 r1220: [670..673]
 r1221: [670..671]
 r1222: [666..667]
 r1223: [660..665]
 r1224: [662..663]
 r1225: [660..661]
 r1226: [656..659]
 r1227: [656..657]
 r1228: [654..655]
 r1229: [652..653]
 r1230: [630..649]
 r1231: [646..647]
 r1232: [640..645]
 r1233: [642..643]
 r1234: [640..641]
 r1235: [636..639]
 r1236: [636..637]
 r1237: [634..635]
 r1238: [632..633]
 r1239: [630..631]
 r1240: [628..629]
 r1241: [626..627]
 r1242: [606..623]
 r1243: [620..621]
 r1244: [614..619]
 r1245: [616..617]
 r1246: [614..615]
 r1247: [610..613]
 r1248: [610..611]
 r1249: [608..609]
 r1250: [604..607]
 r1251: [604..605]
 r1252: [600..601]
 r1253: [594..599]
 r1254: [596..597]
 r1255: [594..595]
 r1256: [590..593]
 r1257: [590..591]
 r1258: [588..589]
 r1259: [586..587]
 r1260: [550..585]
 r1261: [582..583]
 r1262: [576..581]
 r1263: [578..579]
 r1264: [576..577]
 r1265: [572..575]
 r1266: [572..573]
 r1267: [570..571]
 r1268: [568..569]
 r1269: [550..567]
 r1270: [564..565]
 r1271: [558..563]
 r1272: [560..561]
 r1273: [558..559]
 r1274: [554..557]
 r1275: [554..555]
 r1276: [552..553]
 r1277: [548..551]
 r1278: [548..549]
 r1279: [544..545]
 r1280: [538..543]
 r1281: [540..541]
 r1282: [538..539]
 r1283: [534..537]
 r1284: [534..535]
 r1285: [532..533]
 r1286: [530..531]
 r1287: [528..529]
 r1288: [524..525]
 r1289: [518..523]
 r1290: [520..521]
 r1291: [518..519]
 r1292: [514..517]
 r1293: [514..515]
 r1294: [512..513]
 r1295: [510..511]
 r1296: [506..507]
 r1297: [500..505]
 r1298: [502..503]
 r1299: [500..501]
 r1300: [496..499]
 r1301: [496..497]
 r1302: [494..495]
 r1303: [492..493]
 r1304: [456..491]
 r1305: [488..489]
 r1306: [482..487]
 r1307: [484..485]
 r1308: [482..483]
 r1309: [478..481]
 r1310: [478..479]
 r1311: [476..477]
 r1312: [474..475]
 r1313: [456..473]
 r1314: [470..471]
 r1315: [464..469]
 r1316: [466..467]
 r1317: [464..465]
 r1318: [460..463]
 r1319: [460..461]
 r1320: [458..459]
 r1321: [454..457]
 r1322: [454..455]
 r1323: [450..451]
 r1324: [444..449]
 r1325: [446..447]
 r1326: [444..445]
 r1327: [440..443]
 r1328: [440..441]
 r1329: [438..439]
 r1330: [436..437]
 r1331: [434..435]
 r1332: [430..431]
 r1333: [424..429]
 r1334: [426..427]
 r1335: [424..425]
 r1336: [420..423]
 r1337: [420..421]
 r1338: [418..419]
 r1339: [416..417]
 r1340: [412..413]
 r1341: [406..411]
 r1342: [408..409]
 r1343: [406..407]
 r1344: [402..405]
 r1345: [402..403]
 r1346: [400..401]
 r1347: [398..399]
 r1348: [362..397]
 r1349: [394..395]
 r1350: [388..393]
 r1351: [390..391]
 r1352: [388..389]
 r1353: [384..387]
 r1354: [384..385]
 r1355: [382..383]
 r1356: [380..381]
 r1357: [362..379]
 r1358: [376..377]
 r1359: [370..375]
 r1360: [372..373]
 r1361: [370..371]
 r1362: [366..369]
 r1363: [366..367]
 r1364: [364..365]
 r1365: [360..363]
 r1366: [360..361]
 r1367: [346..347]
 r1368: [340..345]
 r1369: [342..343]
 r1370: [340..341]
 r1371: [336..339]
 r1372: [336..337]
 r1373: [334..335]
 r1374: [332..333]
 r1375: [328..331]
 r1376: [322..323]
 r1377: [320..321]
 r1378: [316..317]
 r1379: [310..311]
 r1380: [308..309]
 r1381: [304..305]
 r1382: [298..299]
 r1383: [292..297]
 r1384: [294..295]
 r1385: [292..293]
 r1386: [288..291]
 r1387: [288..289]
 r1388: [286..287]
 r1389: [284..285]
 r1390: [264..283]
 r1391: [280..281]
 r1392: [274..279]
 r1393: [276..277]
 r1394: [274..275]
 r1395: [270..273]
 r1396: [270..271]
 r1397: [268..269]
 r1398: [266..267]
 r1399: [264..265]
 r1400: [242..263]
 r1401: [260..261]
 r1402: [252..259]
 r1403: [256..257]
 r1404: [254..255]
 r1405: [252..253]
 r1406: [248..251]
 r1407: [248..249]
 r1408: [246..247]
 r1409: [244..245]
 r1410: [242..243]
 r1411: [220..241]
 r1412: [238..239]
 r1413: [230..237]
 r1414: [234..235]
 r1415: [232..233]
 r1416: [230..231]
 r1417: [226..229]
 r1418: [226..227]
 r1419: [224..225]
 r1420: [222..223]
 r1421: [220..221]
 r1422: [198..219]
 r1423: [216..217]
 r1424: [214..215]
 r1425: [208..213]
 r1426: [210..211]
 r1427: [208..209]
 r1428: [204..207]
 r1429: [204..205]
 r1430: [202..203]
 r1431: [200..201]
 r1432: [198..199]
 r1433: [176..197]
 r1434: [194..195]
 r1435: [192..193]
 r1436: [186..191]
 r1437: [188..189]
 r1438: [186..187]
 r1439: [182..185]
 r1440: [182..183]
 r1441: [180..181]
 r1442: [178..179]
 r1443: [176..177]
 r1444: [152..175]
 r1445: [172..173]
 r1446: [170..171]
 r1447: [162..169]
 r1448: [166..167]
 r1449: [164..165]
 r1450: [162..163]
 r1451: [158..161]
 r1452: [158..159]
 r1453: [156..157]
 r1454: [154..155]
 r1455: [152..153]
 r1456: [128..151]
 r1457: [148..149]
 r1458: [146..147]
 r1459: [138..145]
 r1460: [142..143]
 r1461: [140..141]
 r1462: [138..139]
 r1463: [134..137]
 r1464: [134..135]
 r1465: [132..133]
 r1466: [130..131]
 r1467: [128..129]
 r1468: [126..127]
 r1469: [124..125]
 r1470: [118..119]
 r1471: [112..117]
 r1472: [114..115]
 r1473: [112..113]
 r1474: [108..111]
 r1475: [108..109]
 r1476: [106..107]
 r1477: [104..105]
 r1478: [102..103]
 r1479: [100..101]
 r1480: [84..85]
 r1481: [78..83]
 r1482: [80..81]
 r1483: [78..79]
 r1484: [74..77]
 r1485: [74..75]
 r1486: [72..73]
 r1487: [54..71]
 r1488: [68..69]
 r1489: [62..67]
 r1490: [64..65]
 r1491: [62..63]
 r1492: [58..61]
 r1493: [58..59]
 r1494: [56..57]
 r1495: [50..55]
 r1496: [50..51]
 r1497: [46..47]
 r1498: [40..45]
 r1499: [42..43]
 r1500: [40..41]
 r1501: [36..39]
 r1502: [36..37]
 r1503: [34..35]
 r1504: [16..33]
 r1505: [30..31]
 r1506: [24..29]
 r1507: [26..27]
 r1508: [24..25]
 r1509: [20..23]
 r1510: [20..21]
 r1511: [18..19]
 r1512: [12..17]
 r1513: [12..13]
 r1514: [2352..2361]
 r1515: [2266..2277]
 r1516: [862..871]
 r1517: [776..787]
 r1518: [3380..3381]
 r1519: [3344..3381]
 r1520: [3344..3345]
 r1521: [3348..3349]
 r1522: [3290..3291]
 r1523: [3342..3343]
 r1524: [3294..3343]
 r1525: [3294..3295]
 r1526: [3298..3299]
 r1527: [1708..1709]
 r1528: [3288..3289]
 r1529: [3046..3289]
 r1530: [3046..3047]
 r1531: [3050..3051]
 r1532: [2162..2163]
 r1533: [3040..3041]
 r1534: [2166..3041]
 r1535: [2166..2167]
 r1536: [2170..2171]
 r1537: [2146..2147]
 r1538: [1712..1713]
 r1539: [2144..2145]
 r1540: [1716..2145]
 r1541: [1716..1717]
 r1542: [1720..1721]
 r1543: [1246..1247]
 r1544: [1706..1707]
 r1545: [1380..1707]
 r1546: [1380..1381]
 r1547: [1384..1385]
 r1548: [1378..1379]
 r1549: [1250..1379]
 r1550: [1250..1251]
 r1551: [1254..1255]
 r1552: [0..1]
 r1553: [1244..1245]
 r1554: [352..1245]
 r1555: [352..353]
 r1556: [356..357]
 r1557: [1078..1079]
 r1558: [350..351]
 r1559: [4..351]
 r1560: [4..5]
 r1561: [8..9]
 r1562: [88..89]
 r1563: [3382..3383]
 r1564: [3346..3347]
 r1565: [3350..3351]
 r1566: [3378..3379]
 r1567: [3374..3375]
 r1568: [3368..3369]
 r1569: [3366..3367]
 r1570: [3364..3365]
 r1571: [3360..3361]
 r1572: [3352..3353]
 r1573: [3292..3293]
 r1574: [3296..3297]
 r1575: [3300..3301]
 r1576: [3340..3341]
 r1577: [3334..3335]
 r1578: [3328..3329]
 r1579: [3322..3323]
 r1580: [3320..3321]
 r1581: [3316..3317]
 r1582: [3310..3311]
 r1583: [3304..3305]
 r1584: [3302..3303]
 r1585: [1710..1711]
 r1586: [3048..3049]
 r1587: [3052..3053]
 r1588: [3286..3287]
 r1589: [3282..3283]
 r1590: [3276..3277]
 r1591: [3270..3271]
 r1592: [3270..3271]
 r1593: [3268..3269]
 r1594: [3264..3265]
 r1595: [3258..3259]
 r1596: [3252..3253]
 r1597: [3252..3253]
 r1598: [3250..3251]
 r1599: [3246..3247]
 r1600: [3240..3241]
 r1601: [3234..3235]
 r1602: [3234..3235]
 r1603: [3232..3233]
 r1604: [3228..3229]
 r1605: [3222..3223]
 r1606: [3216..3217]
 r1607: [3216..3217]
 r1608: [3214..3215]
 r1609: [3210..3211]
 r1610: [3204..3205]
 r1611: [3198..3199]
 r1612: [3198..3199]
 r1613: [3196..3197]
 r1614: [3192..3193]
 r1615: [3186..3187]
 r1616: [3180..3181]
 r1617: [3180..3181]
 r1618: [3178..3179]
 r1619: [3174..3175]
 r1620: [3168..3169]
 r1621: [3162..3163]
 r1622: [3162..3163]
 r1623: [3160..3161]
 r1624: [3156..3157]
 r1625: [3150..3151]
 r1626: [3144..3145]
 r1627: [3144..3145]
 r1628: [3142..3143]
 r1629: [3138..3139]
 r1630: [3132..3133]
 r1631: [3126..3127]
 r1632: [3124..3125]
 r1633: [3120..3121]
 r1634: [3114..3115]
 r1635: [3108..3109]
 r1636: [3108..3109]
 r1637: [3106..3107]
 r1638: [3102..3103]
 r1639: [3096..3097]
 r1640: [3090..3091]
 r1641: [3090..3091]
 r1642: [3088..3089]
 r1643: [3084..3085]
 r1644: [3078..3079]
 r1645: [3072..3073]
 r1646: [3072..3073]
 r1647: [3070..3071]
 r1648: [3066..3067]
 r1649: [3060..3061]
 r1650: [3054..3055]
 r1651: [3054..3055]
 r1652: [3044..3045]
 r1653: [3042..3043]
 r1654: [3042..3043]
 r1657: [2164..2165]
 r1658: [2168..2169]
 r1659: [2172..2173]
 r1660: [3038..3039]
 r1661: [3034..3035]
 r1662: [3026..3029]
 r1663: [3026..3027]
 r1664: [3022..3023]
 r1665: [3018..3019]
 r1666: [3012..3013]
 r1667: [3010..3011]
 r1668: [3008..3009]
 r1669: [3004..3005]
 r1670: [2998..2999]
 r1671: [2992..2993]
 r1672: [2976..2977]
 r1673: [2972..2973]
 r1674: [2966..2967]
 r1675: [2958..2961]
 r1676: [2958..2959]
 r1677: [2956..2957]
 r1678: [2920..2921]
 r1679: [2916..2917]
 r1680: [2910..2911]
 r1681: [2910..2911]
 r1682: [2954..2955]
 r1683: [2950..2951]
 r1684: [2944..2945]
 r1685: [2936..2939]
 r1686: [2936..2937]
 r1687: [2932..2933]
 r1688: [2928..2929]
 r1689: [2922..2923]
 r1690: [2922..2923]
 r1691: [2908..2909]
 r1692: [2906..2907]
 r1693: [2904..2905]
 r1694: [2900..2901]
 r1695: [2894..2895]
 r1696: [2894..2895]
 r1697: [2988..2989]
 r1698: [2984..2985]
 r1699: [2978..2979]
 r1700: [2978..2979]
 r1701: [2892..2893]
 r1702: [2888..2889]
 r1703: [2882..2883]
 r1704: [2876..2877]
 r1705: [2874..2875]
 r1706: [2868..2869]
 r1707: [2862..2863]
 r1708: [2856..2857]
 r1709: [2848..2849]
 r1710: [2850..2851]
 r1711: [2846..2847]
 r1712: [2842..2843]
 r1713: [2836..2837]
 r1714: [2830..2831]
 r1715: [2826..2827]
 r1716: [2820..2821]
 r1717: [2814..2815]
 r1718: [2808..2809]
 r1719: [2806..2807]
 r1720: [2804..2805]
 r1721: [2798..2799]
 r1722: [2792..2793]
 r1723: [2786..2787]
 r1724: [2784..2785]
 r1725: [2780..2781]
 r1726: [2774..2775]
 r1727: [2768..2769]
 r1728: [2764..2765]
 r1729: [2762..2763]
 r1730: [2758..2759]
 r1731: [2752..2753]
 r1732: [2746..2747]
 r1733: [2744..2745]
 r1734: [2740..2741]
 r1735: [2734..2735]
 r1736: [2726..2727]
 r1737: [2724..2725]
 r1738: [2720..2721]
 r1739: [2714..2715]
 r1740: [2708..2709]
 r1741: [2706..2707]
 r1742: [2702..2703]
 r1743: [2696..2697]
 r1744: [2690..2691]
 r1745: [2688..2689]
 r1746: [2686..2687]
 r1747: [2682..2683]
 r1748: [2676..2677]
 r1749: [2670..2671]
 r1750: [2668..2669]
 r1751: [2664..2665]
 r1752: [2658..2659]
 r1753: [2652..2653]
 r1754: [2650..2651]
 r1755: [2648..2649]
 r1756: [2644..2645]
 r1757: [2638..2639]
 r1758: [2632..2633]
 r1759: [2630..2631]
 r1760: [2626..2627]
 r1761: [2620..2621]
 r1762: [2612..2615]
 r1763: [2612..2613]
 r1764: [2608..2609]
 r1765: [2604..2605]
 r1766: [2598..2599]
 r1767: [2590..2591]
 r1768: [2588..2589]
 r1769: [2584..2585]
 r1770: [2578..2579]
 r1771: [2572..2573]
 r1772: [2570..2571]
 r1773: [2566..2567]
 r1774: [2560..2561]
 r1775: [2552..2555]
 r1776: [2552..2553]
 r1777: [2548..2549]
 r1778: [2544..2545]
 r1779: [2538..2539]
 r1780: [2530..2531]
 r1781: [2528..2529]
 r1782: [2524..2525]
 r1783: [2518..2519]
 r1784: [2512..2513]
 r1785: [2510..2511]
 r1786: [2506..2507]
 r1787: [2500..2501]
 r1788: [2494..2495]
 r1789: [2490..2491]
 r1790: [2486..2487]
 r1791: [2480..2481]
 r1792: [2472..2473]
 r1793: [2470..2471]
 r1794: [2466..2467]
 r1795: [2460..2461]
 r1796: [2454..2455]
 r1797: [2452..2453]
 r1798: [2448..2449]
 r1799: [2442..2443]
 r1800: [2434..2437]
 r1801: [2434..2435]
 r1802: [2432..2433]
 r1803: [2428..2429]
 r1804: [2422..2423]
 r1805: [2416..2417]
 r1806: [2406..2407]
 r1807: [2404..2405]
 r1808: [2400..2401]
 r1809: [2394..2395]
 r1810: [2386..2387]
 r1811: [2384..2385]
 r1812: [2380..2381]
 r1813: [2374..2375]
 r1814: [2366..2369]
 r1815: [2366..2367]
 r1816: [2362..2363]
 r1817: [2364..2365]
 r1818: [2360..2361]
 r1819: [2358..2359]
 r1820: [2350..2351]
 r1821: [2348..2349]
 r1822: [2346..2347]
 r1823: [2344..2345]
 r1824: [2342..2343]
 r1825: [2340..2341]
 r1826: [2336..2337]
 r1827: [2332..2333]
 r1828: [2326..2327]
 r1829: [2318..2321]
 r1830: [2318..2319]
 r1831: [2316..2317]
 r1832: [2312..2313]
 r1833: [2310..2311]
 r1834: [2306..2307]
 r1835: [2300..2301]
 r1836: [2292..2295]
 r1837: [2292..2293]
 r1838: [2290..2291]
 r1839: [2278..2279]
 r1840: [2274..2275]
 r1841: [2276..2277]
 r1842: [2272..2273]
 r1843: [2258..2259]
 r1844: [2260..2261]
 r1845: [2256..2257]
 r1846: [2256..2257]
 r1847: [2254..2255]
 r1848: [2254..2255]
 r1849: [2248..2249]
 r1850: [2242..2243]
 r1851: [2244..2245]
 r1852: [2240..2241]
 r1853: [2220..2221]
 r1854: [2238..2239]
 r1855: [2238..2239]
 r1856: [2218..2219]
 r1857: [2236..2237]
 r1858: [2232..2233]
 r1859: [2226..2227]
 r1860: [2224..2225]
 r1861: [2216..2217]
 r1862: [2222..2223]
 r1863: [2214..2215]
 r1864: [2212..2213]
 r1865: [2208..2209]
 r1866: [2202..2203]
 r1867: [2196..2197]
 r1868: [2194..2195]
 r1869: [2192..2193]
 r1870: [2188..2189]
 r1871: [2182..2183]
 r1872: [2174..2175]
 r1873: [2148..2149]
 r1874: [2160..2161]
 r1875: [2152..2153]
 r1876: [2152..2153]
 r1877: [1714..1715]
 r1878: [1718..1719]
 r1879: [1722..1723]
 r1880: [2142..2143]
 r1881: [2136..2137]
 r1884: [2132..2133]
 r1885: [2134..2135]
 r1886: [2130..2131]
 r1887: [2124..2125]
 r1890: [2120..2121]
 r1891: [2122..2123]
 r1892: [2118..2119]
 r1893: [2114..2115]
 r1894: [2108..2109]
 r1895: [2102..2103]
 r1896: [2100..2101]
 r1897: [2096..2097]
 r1898: [2090..2091]
 r1899: [2084..2085]
 r1900: [2080..2081]
 r1901: [2076..2077]
 r1902: [2068..2069]
 r1903: [2062..2063]
 r1904: [2058..2059]
 r1905: [2054..2055]
 r1906: [2046..2047]
 r1907: [2040..2041]
 r1908: [2032..2033]
 r1909: [2034..2035]
 r1910: [2030..2031]
 r1911: [2024..2025]
 r1912: [2018..2019]
 r1913: [2012..2013]
 r1914: [2010..2011]
 r1915: [2004..2005]
 r1916: [1998..1999]
 r1917: [1992..1993]
 r1918: [1988..1989]
 r1919: [1982..1983]
 r1920: [1974..1975]
 r1921: [1968..1969]
 r1922: [1964..1965]
 r1923: [1958..1959]
 r1924: [1950..1951]
 r1925: [1944..1945]
 r1926: [1936..1937]
 r1927: [1938..1939]
 r1928: [1932..1933]
 r1929: [1934..1935]
 r1930: [1930..1931]
 r1931: [1924..1925]
 r1932: [1926..1927]
 r1933: [1922..1923]
 r1934: [1918..1919]
 r1935: [1912..1913]
 r1936: [1906..1907]
 r1937: [1902..1903]
 r1938: [1896..1897]
 r1939: [1890..1891]
 r1940: [1884..1885]
 r1941: [1882..1883]
 r1942: [1880..1881]
 r1943: [1876..1877]
 r1944: [1870..1871]
 r1945: [1864..1865]
 r1946: [1862..1863]
 r1947: [1858..1859]
 r1948: [1852..1853]
 r1949: [1844..1845]
 r1950: [1842..1843]
 r1951: [1838..1839]
 r1952: [1832..1833]
 r1953: [1826..1827]
 r1954: [1824..1825]
 r1955: [1820..1821]
 r1956: [1814..1815]
 r1957: [1806..1809]
 r1958: [1806..1807]
 r1959: [1802..1803]
 r1960: [1798..1799]
 r1961: [1792..1793]
 r1962: [1784..1785]
 r1963: [1782..1783]
 r1964: [1778..1779]
 r1965: [1772..1773]
 r1966: [1766..1767]
 r1967: [1764..1765]
 r1968: [1760..1761]
 r1969: [1754..1755]
 r1970: [1746..1749]
 r1971: [1746..1747]
 r1972: [1742..1743]
 r1973: [1738..1739]
 r1974: [1732..1733]
 r1975: [1724..1725]
 r1976: [1248..1249]
 r1977: [1382..1383]
 r1978: [1386..1387]
 r1979: [1704..1705]
 r1980: [1700..1701]
 r1981: [1694..1695]
 r1982: [1688..1689]
 r1983: [1686..1687]
 r1984: [1684..1685]
 r1985: [1682..1683]
 r1986: [1678..1679]
 r1987: [1672..1673]
 r1988: [1666..1667]
 r1989: [1662..1663]
 r1990: [1664..1665]
 r1991: [1660..1661]
 r1992: [1656..1657]
 r1993: [1650..1651]
 r1994: [1644..1645]
 r1995: [1640..1641]
 r1996: [1636..1637]
 r1997: [1630..1631]
 r1998: [1624..1625]
 r1999: [1620..1621]
 r2000: [1616..1617]
 r2001: [1610..1611]
 r2002: [1602..1603]
 r2003: [1600..1601]
 r2004: [1596..1597]
 r2005: [1590..1591]
 r2006: [1584..1585]
 r2007: [1582..1583]
 r2008: [1576..1577]
 r2009: [1570..1571]
 r2010: [1564..1565]
 r2011: [1558..1559]
 r2012: [1554..1555]
 r2013: [1548..1549]
 r2014: [1542..1543]
 r2015: [1540..1541]
 r2016: [1538..1539]
 r2017: [1534..1535]
 r2018: [1528..1529]
 r2019: [1522..1523]
 r2020: [1520..1521]
 r2021: [1516..1517]
 r2022: [1510..1511]
 r2023: [1502..1503]
 r2024: [1500..1501]
 r2025: [1496..1497]
 r2026: [1490..1491]
 r2027: [1484..1485]
 r2028: [1482..1483]
 r2029: [1478..1479]
 r2030: [1472..1473]
 r2031: [1464..1465]
 r2032: [1462..1463]
 r2033: [1458..1459]
 r2034: [1452..1453]
 r2035: [1446..1447]
 r2036: [1444..1445]
 r2037: [1440..1441]
 r2038: [1434..1435]
 r2039: [1426..1427]
 r2040: [1424..1425]
 r2041: [1420..1421]
 r2042: [1414..1415]
 r2043: [1408..1409]
 r2044: [1406..1407]
 r2045: [1402..1403]
 r2046: [1396..1397]
 r2047: [1388..1389]
 r2048: [1252..1253]
 r2049: [1256..1257]
 r2050: [1376..1377]
 r2051: [1372..1373]
 r2052: [1366..1367]
 r2053: [1360..1361]
 r2054: [1358..1359]
 r2055: [1356..1357]
 r2056: [1354..1355]
 r2057: [1350..1351]
 r2058: [1344..1345]
 r2059: [1338..1339]
 r2060: [1334..1335]
 r2061: [1336..1337]
 r2062: [1332..1333]
 r2063: [1328..1329]
 r2064: [1322..1323]
 r2065: [1316..1317]
 r2066: [1314..1315]
 r2067: [1310..1311]
 r2068: [1304..1305]
 r2069: [1296..1297]
 r2070: [1294..1295]
 r2071: [1290..1291]
 r2072: [1284..1285]
 r2073: [1278..1279]
 r2074: [1276..1277]
 r2075: [1272..1273]
 r2076: [1266..1267]
 r2077: [1258..1259]
 r2078: [2..3]
 r2079: [354..355]
 r2080: [358..359]
 r2081: [1242..1243]
 r2082: [1238..1239]
 r2083: [1232..1233]
 r2084: [1226..1227]
 r2085: [1224..1225]
 r2086: [1222..1223]
 r2087: [1220..1221]
 r2088: [1218..1219]
 r2089: [1214..1215]
 r2090: [1208..1209]
 r2091: [1202..1203]
 r2092: [1200..1201]
 r2093: [1194..1195]
 r2094: [1188..1189]
 r2095: [1182..1183]
 r2096: [1176..1177]
 r2097: [1172..1173]
 r2098: [1166..1167]
 r2099: [1160..1161]
 r2100: [1158..1159]
 r2101: [1080..1081]
 r2102: [1156..1157]
 r2103: [1152..1153]
 r2104: [1146..1147]
 r2105: [1140..1141]
 r2106: [1138..1139]
 r2107: [1132..1133]
 r2108: [1126..1127]
 r2109: [1120..1121]
 r2110: [1112..1113]
 r2111: [1114..1115]
 r2112: [1110..1111]
 r2113: [1106..1107]
 r2114: [1100..1101]
 r2115: [1094..1095]
 r2116: [1092..1093]
 r2117: [1088..1089]
 r2118: [1090..1091]
 r2119: [1086..1087]
 r2120: [1084..1085]
 r2121: [1082..1083]
 r2122: [1076..1077]
 r2123: [1070..1071]
 r2124: [1064..1065]
 r2125: [1058..1059]
 r2126: [1056..1057]
 r2127: [1052..1053]
 r2128: [1046..1047]
 r2129: [1040..1041]
 r2130: [1036..1037]
 r2131: [1034..1035]
 r2132: [1030..1031]
 r2133: [1024..1025]
 r2134: [1018..1019]
 r2135: [1016..1017]
 r2136: [1010..1011]
 r2137: [1004..1005]
 r2138: [998..999]
 r2139: [990..991]
 r2140: [992..993]
 r2141: [988..989]
 r2142: [984..985]
 r2143: [978..979]
 r2144: [972..973]
 r2145: [972..973]
 r2146: [970..971]
 r2147: [966..967]
 r2148: [960..961]
 r2149: [954..955]
 r2150: [950..951]
 r2151: [944..945]
 r2152: [936..939]
 r2153: [936..937]
 r2154: [934..935]
 r2155: [932..933]
 r2156: [928..929]
 r2157: [922..923]
 r2158: [916..917]
 r2159: [912..913]
 r2160: [906..907]
 r2161: [898..901]
 r2162: [898..899]
 r2163: [896..897]
 r2164: [894..895]
 r2165: [890..891]
 r2166: [884..885]
 r2167: [876..879]
 r2168: [876..877]
 r2169: [872..873]
 r2170: [874..875]
 r2171: [870..871]
 r2172: [868..869]
 r2173: [860..861]
 r2174: [858..859]
 r2175: [856..857]
 r2176: [854..855]
 r2177: [852..853]
 r2178: [850..851]
 r2179: [846..847]
 r2180: [842..843]
 r2181: [836..837]
 r2182: [828..831]
 r2183: [828..829]
 r2184: [826..827]
 r2185: [822..823]
 r2186: [820..821]
 r2187: [816..817]
 r2188: [810..811]
 r2189: [802..805]
 r2190: [802..803]
 r2191: [800..801]
 r2192: [788..789]
 r2193: [784..785]
 r2194: [786..787]
 r2195: [782..783]
 r2196: [768..769]
 r2197: [770..771]
 r2198: [766..767]
 r2199: [766..767]
 r2200: [764..765]
 r2201: [764..765]
 r2202: [758..759]
 r2203: [752..753]
 r2204: [754..755]
 r2205: [750..751]
 r2206: [730..731]
 r2207: [748..749]
 r2208: [748..749]
 r2209: [728..729]
 r2210: [746..747]
 r2211: [742..743]
 r2212: [736..737]
 r2213: [734..735]
 r2214: [726..727]
 r2215: [732..733]
 r2216: [724..725]
 r2217: [722..723]
 r2218: [718..719]
 r2219: [712..713]
 r2220: [706..707]
 r2221: [706..707]
 r2222: [704..705]
 r2223: [700..701]
 r2224: [694..695]
 r2225: [688..689]
 r2226: [684..685]
 r2227: [678..679]
 r2228: [672..673]
 r2229: [670..671]
 r2230: [668..669]
 r2231: [664..665]
 r2232: [658..659]
 r2233: [650..653]
 r2234: [650..651]
 r2235: [648..649]
 r2236: [644..645]
 r2237: [638..639]
 r2238: [632..633]
 r2239: [622..623]
 r2240: [618..619]
 r2241: [612..613]
 r2242: [606..607]
 r2243: [604..605]
 r2244: [602..603]
 r2245: [598..599]
 r2246: [592..593]
 r2247: [586..587]
 r2248: [584..585]
 r2249: [580..581]
 r2250: [574..575]
 r2251: [568..569]
 r2252: [566..567]
 r2253: [562..563]
 r2254: [556..557]
 r2255: [548..549]
 r2256: [546..547]
 r2257: [542..543]
 r2258: [536..537]
 r2259: [530..531]
 r2260: [528..529]
 r2261: [526..527]
 r2262: [522..523]
 r2263: [516..517]
 r2264: [510..511]
 r2265: [510..511]
 r2266: [508..509]
 r2267: [504..505]
 r2268: [498..499]
 r2269: [492..493]
 r2270: [490..491]
 r2271: [486..487]
 r2272: [480..481]
 r2273: [474..475]
 r2274: [472..473]
 r2275: [468..469]
 r2276: [462..463]
 r2277: [454..455]
 r2278: [452..453]
 r2279: [448..449]
 r2280: [442..443]
 r2281: [436..437]
 r2282: [434..435]
 r2283: [432..433]
 r2284: [428..429]
 r2285: [422..423]
 r2286: [416..417]
 r2287: [416..417]
 r2288: [414..415]
 r2289: [410..411]
 r2290: [404..405]
 r2291: [398..399]
 r2292: [396..397]
 r2293: [392..393]
 r2294: [386..387]
 r2295: [380..381]
 r2296: [378..379]
 r2297: [374..375]
 r2298: [368..369]
 r2299: [360..361]
 r2300: [6..7]
 r2301: [10..11]
 r2302: [348..349]
 r2303: [344..345]
 r2304: [338..339]
 r2305: [332..333]
 r2306: [330..331]
 r2307: [328..329]
 r2308: [326..327]
 r2309: [324..325]
 r2310: [318..319]
 r2313: [314..315]
 r2314: [316..317]
 r2315: [312..313]
 r2316: [306..307]
 r2319: [302..303]
 r2320: [304..305]
 r2321: [90..91]
 r2322: [300..301]
 r2323: [296..297]
 r2324: [290..291]
 r2325: [284..285]
 r2326: [282..283]
 r2327: [278..279]
 r2328: [272..273]
 r2329: [266..267]
 r2330: [262..263]
 r2331: [258..259]
 r2332: [250..251]
 r2333: [244..245]
 r2334: [240..241]
 r2335: [236..237]
 r2336: [228..229]
 r2337: [222..223]
 r2338: [218..219]
 r2339: [212..213]
 r2340: [206..207]
 r2341: [200..201]
 r2342: [196..197]
 r2343: [190..191]
 r2344: [184..185]
 r2345: [178..179]
 r2346: [174..175]
 r2347: [168..169]
 r2348: [160..161]
 r2349: [154..155]
 r2350: [150..151]
 r2351: [144..145]
 r2352: [136..137]
 r2353: [130..131]
 r2354: [122..123]
 r2355: [124..125]
 r2356: [120..121]
 r2357: [116..117]
 r2358: [110..111]
 r2359: [104..105]
 r2360: [102..103]
 r2361: [98..99]
 r2362: [100..101]
 r2363: [96..97]
 r2364: [94..95]
 r2365: [92..93]
 r2366: [86..87]
 r2367: [82..83]
 r2368: [76..77]
 r2369: [70..71]
 r2370: [66..67]
 r2371: [60..61]
 r2372: [52..55]
 r2373: [52..53]
 r2374: [50..51]
 r2375: [48..49]
 r2376: [44..45]
 r2377: [38..39]
 r2378: [32..33]
 r2379: [28..29]
 r2380: [22..23]
 r2381: [14..17]
 r2382: [14..15]
 r2383: [12..13]
 r2384: [2408..2409]
 r2385: [2338..2339]
 r2386: [2280..2281]
 r2387: [848..849]
 r2388: [790..791]
 r2389: [624..625]
 r2390: [2282..2337]
 r2391: [792..847]

********** Assignment #1: **********

	 Assigning to 2384 (cl=SSE_REGS, orig=506, freq=3000, tfirst=2384, tfreq=3000)...
	   Assign 23 to reload r2384 (freq=3000)
	 Assigning to 2390 (cl=SSE_REGS, orig=530, freq=2000, tfirst=2385, tfreq=3000)...
	 Assigning to 2385 (cl=SSE_REGS, orig=1825, freq=3000, tfirst=2385, tfreq=3000)...
	   Assign 21 to reload r2385 (freq=3000)
	Hard reg 21 is preferable by r2390 with profit 1000
	Hard reg 21 is preferable by r2386 with profit 500
	 Assigning to 2386 (cl=SSE_REGS, orig=530, freq=2000, tfirst=2385, tfreq=3000)...
	   Assign 24 to optional reload r2386 (freq=2000)
	Hard reg 21 is preferable by r2390 with profit 1000
	Hard reg 24 is preferable by r2390 with profit 1000
	 Assigning to 2391 (cl=SSE_REGS, orig=1153, freq=2000, tfirst=2387, tfreq=3000)...
	 Assigning to 2387 (cl=SSE_REGS, orig=2178, freq=3000, tfirst=2387, tfreq=3000)...
	   Assign 21 to reload r2387 (freq=3000)
	Hard reg 21 is preferable by r2391 with profit 1000
	Hard reg 21 is preferable by r2388 with profit 500
	 Assigning to 2388 (cl=SSE_REGS, orig=1153, freq=2000, tfirst=2387, tfreq=3000)...
	   Assign 25 to optional reload r2388 (freq=2000)
	Hard reg 21 is preferable by r2391 with profit 1000
	Hard reg 25 is preferable by r2391 with profit 1000
	 Assigning to 2389 (cl=SSE_REGS, orig=1241, freq=3000, tfirst=2389, tfreq=3000)...
	   Assign 22 to reload r2389 (freq=3000)
  Reassigning non-reload pseudos

********** Undoing inheritance #1: **********

Inherit 0 out of 2 (0.00%)
   Insn after restoring regs:
 3261: r2386:SF=r530:SF
      REG_DEAD r530:SF
   Insn after restoring regs:
 3260: r530:SF=r2385:SF
      REG_DEAD r2385:SF
   Insn after restoring regs:
 3264: r2388:SF=r1153:SF
      REG_DEAD r1153:SF
   Insn after restoring regs:
 3263: r1153:SF=r2387:SF
      REG_DEAD r2387:SF
Remove optional reload reg 2386
  Restoring original insn:
  999: r1839:SF=r555:SF*r530:SF
      REG_DEAD r530:SF
      REG_DEAD r555:SF
  Deleting move 3261
 3261: r2386:SF=r530:SF
      REG_DEAD r530:SF
deleting insn with uid = 3261.
Remove optional reload reg 2388
  Restoring original insn:
 2321: r2192:SF=r1178:SF*r1153:SF
      REG_DEAD r1153:SF
      REG_DEAD r1178:SF
  Deleting move 3264
 3264: r2388:SF=r1153:SF
      REG_DEAD r1153:SF
deleting insn with uid = 3264.

********** Local #2: **********

	   Spilling non-eliminable hard regs: 6
            2 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 2321:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=2392 from oldreg=1153, assigning class SSE_REGS to r2392
      Making reload reg 2392 for reg 1153 optional
 2321: r2192:SF=r1178:SF*r2392:SF
      REG_DEAD r1153:SF
      REG_DEAD r1178:SF
    Inserting insn reload before:
 3269: r2392:SF=r1153:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=615,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            alt=1,overall=617,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=4,overall=622,losers=2 -- refuse
            0 Non pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=7,overall=2,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3269:  (0) v  (1) m {*movsf_internal}
            2 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 999:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=2393 from oldreg=530, assigning class SSE_REGS to r2393
      Making reload reg 2393 for reg 530 optional
  999: r1839:SF=r555:SF*r2393:SF
      REG_DEAD r530:SF
      REG_DEAD r555:SF
    Inserting insn reload before:
 3270: r2393:SF=r530:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=615,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            alt=1,overall=617,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=4,overall=622,losers=2 -- refuse
            0 Non pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=7,overall=2,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3270:  (0) v  (1) m {*movsf_internal}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #2: **********

EBB 2
EBB 3 4
EBB 5 6
EBB 147
EBB 7
EBB 146
EBB 8
EBB 9 10
EBB 11 12
EBB 13 14
EBB 150
EBB 15
EBB 149
EBB 16
EBB 148
EBB 17
EBB 18 19
EBB 20 21
EBB 22 23
EBB 153
EBB 24
EBB 152
EBB 25
EBB 26 27
EBB 28 29
EBB 30 31 32 33 34
EBB 35 36
EBB 37 38 39
EBB 40
EBB 41 42 43 44
EBB 45 46
EBB 47 48
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=2394 from oldreg=530, assigning class SSE_REGS to inheritance r2394
    Original reg change 530->2394 (bb47):
 3260: r2394:SF=r2385:SF
      REG_DEAD r2385:SF
    Add original<-inheritance after:
 3271: r530:SF=r2394:SF

    Inheritance reuse change 530->2394 (bb47):
 3270: r2393:SF=r2394:SF
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
	    Removing dead insn:
  3271: r530:SF=r2394:SF
deleting insn with uid = 3271.
EBB 49 50
EBB 51 52
EBB 53 54
EBB 55
EBB 56
EBB 57
EBB 156
EBB 58
EBB 155
EBB 59
EBB 154
EBB 60
EBB 61 62
EBB 157
EBB 63
EBB 64 65
EBB 66 67
EBB 68 69 70 71
EBB 72
EBB 160
EBB 73
EBB 159
EBB 74
EBB 158
EBB 75
EBB 151
EBB 76
EBB 77 78
EBB 79 80
EBB 81 82 83
EBB 84
EBB 85
EBB 163
EBB 86
EBB 162
EBB 87
EBB 88 89
EBB 90 91 92
EBB 93
EBB 94
EBB 165
EBB 95
EBB 164
EBB 96
EBB 161
EBB 97
EBB 98 99
EBB 100 101
EBB 102 103 104 105
EBB 106 107 108
EBB 109
EBB 169
EBB 110 111
EBB 112 113
EBB 114 115
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=2395 from oldreg=1153, assigning class SSE_REGS to inheritance r2395
    Original reg change 1153->2395 (bb114):
 3263: r2395:SF=r2387:SF
      REG_DEAD r2387:SF
    Add original<-inheritance after:
 3272: r1153:SF=r2395:SF

    Inheritance reuse change 1153->2395 (bb114):
 3269: r2392:SF=r2395:SF
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
	    Removing dead insn:
  3272: r1153:SF=r2395:SF
deleting insn with uid = 3272.
EBB 116 117
EBB 118 119
EBB 120 121
EBB 122
EBB 123
EBB 124 125
EBB 126 127
EBB 128
EBB 168
EBB 129
EBB 167
EBB 130
EBB 131 132
EBB 133 134 135 136
EBB 137 138 139
EBB 140
EBB 172
EBB 141
EBB 142
EBB 171
EBB 143
EBB 170
EBB 144
EBB 166
EBB 145

********** Pseudo live ranges #2: **********

  BB 145
   Insn 3093: point = 0, n_alt = -1
  BB 166
   Insn 3237: point = 0, n_alt = -1
  BB 98
   Insn 1934: point = 0, n_alt = -1
   Insn 1933: point = 0, n_alt = 0
   Insn 1932: point = 1, n_alt = 0
   Insn 1931: point = 3, n_alt = 0
   Insn 1930: point = 4, n_alt = 0
  BB 144
   Insn 3173: point = 4, n_alt = -1
   Insn 3006: point = 4, n_alt = 1
  BB 170
   Insn 3249: point = 4, n_alt = -1
  BB 131
   Insn 2712: point = 4, n_alt = -1
   Insn 2711: point = 4, n_alt = 0
   Insn 2710: point = 5, n_alt = 0
   Insn 2709: point = 7, n_alt = 0
   Insn 2708: point = 8, n_alt = 0
  BB 143
   Insn 3171: point = 9, n_alt = -1
   Insn 3000: point = 9, n_alt = 1
  BB 171
   Insn 3252: point = 10, n_alt = -1
  BB 133
   Insn 2720: point = 11, n_alt = -1
   Insn 2719: point = 11, n_alt = 0
   Insn 2718: point = 12, n_alt = 0
   Insn 2717: point = 14, n_alt = 0
   Insn 2716: point = 15, n_alt = 0
  BB 142
   Insn 3169: point = 16, n_alt = -1
   Insn 2994: point = 16, n_alt = 1
  BB 141
   Insn 2991: point = 17, n_alt = 8
   Insn 2990: point = 18, n_alt = 3
   Insn 2989: point = 19, n_alt = 7
   Insn 2988: point = 21, n_alt = 0
   Insn 2987: point = 23, n_alt = 4
   Insn 2986: point = 24, n_alt = 3
   Insn 2985: point = 26, n_alt = 0
   Insn 2984: point = 28, n_alt = 1
   Insn 2983: point = 30, n_alt = 0
   Insn 2982: point = 31, n_alt = 0
   Insn 2981: point = 33, n_alt = 0
   Insn 2980: point = 35, n_alt = 1
   Insn 2979: point = 37, n_alt = 0
   Insn 2978: point = 38, n_alt = 1
   Insn 2977: point = 40, n_alt = 1
   Insn 2976: point = 42, n_alt = 0
   Insn 2975: point = 43, n_alt = 3
   Insn 2974: point = 45, n_alt = 0
   Insn 2973: point = 47, n_alt = 1
   Insn 2972: point = 49, n_alt = 0
   Insn 2971: point = 50, n_alt = 0
   Insn 2970: point = 52, n_alt = 0
   Insn 2969: point = 54, n_alt = 1
   Insn 2968: point = 56, n_alt = 0
   Insn 2967: point = 57, n_alt = 1
   Insn 2966: point = 59, n_alt = 1
   Insn 2965: point = 61, n_alt = 0
   Insn 2964: point = 62, n_alt = 8
   Insn 2963: point = 63, n_alt = 3
   Insn 2962: point = 64, n_alt = 7
   Insn 2961: point = 66, n_alt = 0
   Insn 2960: point = 68, n_alt = 4
   Insn 2959: point = 69, n_alt = 3
   Insn 2958: point = 71, n_alt = 0
   Insn 2957: point = 73, n_alt = 1
   Insn 2956: point = 75, n_alt = 0
   Insn 2955: point = 76, n_alt = 0
   Insn 2954: point = 78, n_alt = 0
   Insn 2953: point = 80, n_alt = 1
   Insn 2952: point = 82, n_alt = 0
   Insn 2951: point = 83, n_alt = 1
   Insn 2950: point = 85, n_alt = 1
   Insn 2949: point = 87, n_alt = 0
   Insn 2948: point = 88, n_alt = 3
   Insn 2947: point = 90, n_alt = 0
   Insn 2946: point = 92, n_alt = 1
   Insn 2945: point = 94, n_alt = 0
   Insn 2944: point = 95, n_alt = 0
   Insn 2943: point = 97, n_alt = 0
   Insn 2942: point = 99, n_alt = 1
   Insn 2941: point = 101, n_alt = 0
   Insn 2940: point = 102, n_alt = 1
   Insn 2939: point = 104, n_alt = 1
   Insn 2938: point = 106, n_alt = 0
  BB 172
   Insn 3255: point = 108, n_alt = -1
  BB 137
   Insn 2776: point = 109, n_alt = -1
   Insn 2775: point = 109, n_alt = 0
   Insn 2774: point = 110, n_alt = 0
   Insn 2773: point = 112, n_alt = 0
   Insn 2772: point = 113, n_alt = 0
  BB 140
   Insn 3167: point = 114, n_alt = -1
   Insn 2932: point = 114, n_alt = 1
  BB 139
   Insn 2929: point = 115, n_alt = 1
   Insn 2928: point = 116, n_alt = 0
   Insn 2927: point = 117, n_alt = 8
   Insn 2926: point = 118, n_alt = 7
  BB 138
   Insn 2921: point = 120, n_alt = -1
   Insn 2920: point = 120, n_alt = 1
   Insn 2919: point = 121, n_alt = 7
   Insn 2918: point = 122, n_alt = 8
   Insn 2917: point = 123, n_alt = 0
   Insn 2916: point = 125, n_alt = 2
   Insn 2915: point = 126, n_alt = 2
   Insn 2914: point = 128, n_alt = 7
   Insn 2913: point = 129, n_alt = 7
   Insn 2912: point = 131, n_alt = 3
   Insn 2911: point = 132, n_alt = 3
   Insn 2910: point = 134, n_alt = 0
   Insn 2909: point = 136, n_alt = 1
   Insn 2908: point = 138, n_alt = 0
   Insn 2907: point = 139, n_alt = 0
   Insn 2906: point = 141, n_alt = 0
   Insn 2905: point = 143, n_alt = 1
   Insn 2904: point = 145, n_alt = 0
   Insn 2903: point = 146, n_alt = 1
   Insn 2902: point = 148, n_alt = 1
   Insn 2901: point = 150, n_alt = 0
   Insn 2900: point = 151, n_alt = 8
   Insn 2899: point = 152, n_alt = 1
   Insn 2898: point = 154, n_alt = 7
   Insn 2897: point = 155, n_alt = -2
   Insn 2896: point = 157, n_alt = 1
   Insn 2895: point = 159, n_alt = 7
   Insn 2894: point = 161, n_alt = 4
   Insn 2893: point = 162, n_alt = 3
   Insn 2892: point = 164, n_alt = 0
   Insn 2891: point = 166, n_alt = 1
   Insn 2890: point = 168, n_alt = 0
   Insn 2889: point = 169, n_alt = 0
   Insn 2888: point = 171, n_alt = 0
   Insn 2887: point = 173, n_alt = 1
   Insn 2886: point = 175, n_alt = 0
   Insn 2885: point = 177, n_alt = 0
   Insn 2884: point = 178, n_alt = 1
   Insn 2883: point = 180, n_alt = 1
   Insn 2882: point = 182, n_alt = 0
   Insn 2881: point = 184, n_alt = 0
   Insn 2880: point = 185, n_alt = 1
   Insn 2879: point = 187, n_alt = 7
   Insn 2878: point = 189, n_alt = 4
   Insn 2877: point = 190, n_alt = 3
   Insn 2876: point = 192, n_alt = 0
   Insn 2875: point = 194, n_alt = 1
   Insn 2874: point = 196, n_alt = 0
   Insn 2873: point = 197, n_alt = 0
   Insn 2872: point = 199, n_alt = 0
   Insn 2871: point = 201, n_alt = 1
   Insn 2870: point = 203, n_alt = 0
   Insn 2869: point = 205, n_alt = 0
   Insn 2868: point = 206, n_alt = 1
   Insn 2867: point = 208, n_alt = 1
   Insn 2866: point = 210, n_alt = 0
   Insn 2865: point = 212, n_alt = 0
   Insn 2864: point = 213, n_alt = 1
   Insn 2863: point = 215, n_alt = 7
   Insn 2862: point = 217, n_alt = 4
   Insn 2861: point = 218, n_alt = 3
   Insn 2860: point = 220, n_alt = 0
   Insn 2859: point = 222, n_alt = 1
   Insn 2858: point = 224, n_alt = 0
   Insn 2857: point = 225, n_alt = 0
   Insn 2856: point = 227, n_alt = 0
   Insn 2855: point = 229, n_alt = 1
   Insn 2854: point = 231, n_alt = 0
   Insn 2853: point = 232, n_alt = 1
   Insn 2852: point = 234, n_alt = 1
   Insn 2851: point = 236, n_alt = 0
   Insn 2850: point = 238, n_alt = 0
   Insn 2849: point = 239, n_alt = 1
   Insn 2848: point = 241, n_alt = 7
   Insn 2847: point = 243, n_alt = 4
   Insn 2846: point = 244, n_alt = 3
   Insn 2845: point = 246, n_alt = 0
   Insn 2844: point = 248, n_alt = 1
   Insn 2843: point = 250, n_alt = 0
   Insn 2842: point = 251, n_alt = 0
   Insn 2841: point = 253, n_alt = 0
   Insn 2840: point = 255, n_alt = 1
   Insn 2839: point = 257, n_alt = 0
   Insn 2838: point = 258, n_alt = 1
   Insn 2837: point = 260, n_alt = 1
   Insn 2836: point = 262, n_alt = 0
   Insn 2835: point = 264, n_alt = 0
   Insn 2834: point = 265, n_alt = 1
   Insn 2833: point = 267, n_alt = 7
   Insn 2832: point = 269, n_alt = 4
   Insn 2831: point = 270, n_alt = 3
   Insn 2830: point = 272, n_alt = 0
   Insn 2829: point = 274, n_alt = 1
   Insn 2828: point = 276, n_alt = 0
   Insn 2827: point = 277, n_alt = 0
   Insn 2826: point = 279, n_alt = 0
   Insn 2825: point = 281, n_alt = 1
   Insn 2824: point = 283, n_alt = 0
   Insn 2823: point = 285, n_alt = 0
   Insn 2822: point = 286, n_alt = 1
   Insn 2821: point = 288, n_alt = 1
   Insn 2820: point = 290, n_alt = 0
   Insn 2819: point = 291, n_alt = 1
   Insn 2818: point = 293, n_alt = 7
   Insn 2817: point = 295, n_alt = 4
   Insn 2816: point = 296, n_alt = 3
   Insn 2815: point = 298, n_alt = 0
   Insn 2814: point = 300, n_alt = 1
   Insn 2813: point = 302, n_alt = 0
   Insn 2812: point = 303, n_alt = 0
   Insn 2811: point = 305, n_alt = 0
   Insn 2810: point = 307, n_alt = 1
   Insn 2809: point = 309, n_alt = 0
   Insn 2808: point = 311, n_alt = 0
   Insn 2807: point = 312, n_alt = 1
   Insn 2806: point = 314, n_alt = 1
   Insn 2805: point = 316, n_alt = 0
   Insn 2804: point = 317, n_alt = 1
   Insn 2803: point = 319, n_alt = 7
   Insn 2802: point = 321, n_alt = 4
   Insn 2801: point = 322, n_alt = 3
   Insn 2800: point = 324, n_alt = 0
   Insn 2799: point = 326, n_alt = 1
   Insn 2798: point = 328, n_alt = 0
   Insn 2797: point = 329, n_alt = 0
   Insn 2796: point = 331, n_alt = 0
   Insn 2795: point = 333, n_alt = 1
   Insn 2794: point = 335, n_alt = 0
   Insn 2793: point = 336, n_alt = 1
   Insn 2792: point = 338, n_alt = 1
   Insn 2791: point = 340, n_alt = 0
   Insn 2790: point = 341, n_alt = 7
   Insn 2789: point = 343, n_alt = 4
   Insn 2788: point = 344, n_alt = 3
   Insn 2787: point = 346, n_alt = 0
   Insn 2786: point = 348, n_alt = 1
   Insn 2785: point = 350, n_alt = 0
   Insn 2784: point = 351, n_alt = 0
   Insn 2783: point = 353, n_alt = 0
   Insn 2782: point = 355, n_alt = 1
   Insn 2781: point = 357, n_alt = 0
   Insn 2780: point = 358, n_alt = 1
   Insn 2779: point = 360, n_alt = 1
   Insn 2778: point = 362, n_alt = 0
  BB 136
   Insn 2770: point = 364, n_alt = 1
   Insn 2769: point = 364, n_alt = 1
   Insn 2768: point = 365, n_alt = 0
   Insn 2767: point = 367, n_alt = 0
   Insn 2763: point = 368, n_alt = 0
   Insn 2762: point = 370, n_alt = 0
   Insn 2761: point = 372, n_alt = 0
   Insn 2760: point = 374, n_alt = 1
   Insn 2759: point = 376, n_alt = 0
   Insn 2758: point = 377, n_alt = 1
   Insn 2757: point = 378, n_alt = 0
   Insn 2756: point = 380, n_alt = 0
   Insn 2752: point = 381, n_alt = 0
   Insn 2751: point = 383, n_alt = 0
   Insn 2750: point = 385, n_alt = 0
   Insn 2749: point = 387, n_alt = 1
   Insn 2748: point = 389, n_alt = 0
   Insn 2747: point = 390, n_alt = 8
   Insn 2746: point = 391, n_alt = 7
   Insn 2745: point = 392, n_alt = 1
  BB 135
   Insn 2740: point = 393, n_alt = -1
   Insn 2739: point = 393, n_alt = 1
   Insn 2738: point = 394, n_alt = 7
  BB 134
   Insn 2737: point = 396, n_alt = -1
   Insn 2736: point = 396, n_alt = 1
   Insn 2735: point = 397, n_alt = 7
   Insn 2734: point = 398, n_alt = 7
   Insn 2733: point = 400, n_alt = 4
   Insn 2732: point = 401, n_alt = 3
   Insn 2731: point = 403, n_alt = 0
   Insn 2730: point = 405, n_alt = 1
   Insn 2729: point = 407, n_alt = 0
   Insn 2728: point = 408, n_alt = 0
   Insn 2727: point = 410, n_alt = 0
   Insn 2726: point = 412, n_alt = 1
   Insn 2725: point = 414, n_alt = 0
   Insn 2724: point = 415, n_alt = 1
   Insn 2723: point = 417, n_alt = 1
   Insn 2722: point = 419, n_alt = 0
  BB 132
   Insn 2714: point = 421, n_alt = 1
  BB 130
   Insn 2706: point = 422, n_alt = 1
   Insn 2705: point = 423, n_alt = 0
   Insn 2704: point = 424, n_alt = 0
  BB 167
   Insn 3240: point = 425, n_alt = -1
  BB 100
   Insn 1944: point = 425, n_alt = -1
   Insn 1943: point = 425, n_alt = 0
   Insn 1942: point = 426, n_alt = 0
   Insn 1941: point = 428, n_alt = 0
   Insn 1940: point = 429, n_alt = 0
  BB 129
   Insn 3165: point = 430, n_alt = -1
   Insn 2698: point = 430, n_alt = 1
  BB 168
   Insn 3243: point = 431, n_alt = -1
  BB 102
   Insn 1952: point = 432, n_alt = -1
   Insn 1951: point = 432, n_alt = 0
   Insn 1950: point = 433, n_alt = 0
   Insn 1949: point = 435, n_alt = 0
   Insn 1948: point = 436, n_alt = 0
  BB 128
   Insn 3163: point = 437, n_alt = -1
   Insn 2692: point = 437, n_alt = 1
  BB 127
   Insn 2689: point = 438, n_alt = 8
   Insn 2688: point = 439, n_alt = 3
   Insn 2687: point = 440, n_alt = 1
   Insn 2686: point = 442, n_alt = 3
   Insn 2685: point = 444, n_alt = 0
   Insn 2684: point = 446, n_alt = 0
   Insn 2683: point = 448, n_alt = 0
   Insn 2682: point = 449, n_alt = 0
   Insn 2681: point = 451, n_alt = 0
   Insn 2680: point = 453, n_alt = 0
   Insn 2679: point = 455, n_alt = 0
   Insn 2678: point = 456, n_alt = 1
   Insn 2677: point = 458, n_alt = 0
   Insn 2676: point = 460, n_alt = 0
   Insn 2675: point = 461, n_alt = 7
   Insn 2674: point = 463, n_alt = 4
   Insn 2673: point = 464, n_alt = 3
   Insn 2672: point = 466, n_alt = 0
   Insn 2671: point = 468, n_alt = 0
   Insn 2670: point = 470, n_alt = 0
   Insn 2669: point = 471, n_alt = 0
   Insn 2668: point = 473, n_alt = 0
   Insn 2667: point = 475, n_alt = 0
   Insn 2666: point = 477, n_alt = 0
   Insn 2665: point = 478, n_alt = 1
   Insn 2664: point = 480, n_alt = 0
   Insn 2663: point = 482, n_alt = 0
   Insn 2662: point = 483, n_alt = 7
   Insn 2661: point = 485, n_alt = 3
   Insn 2660: point = 486, n_alt = 3
   Insn 2659: point = 488, n_alt = 0
   Insn 2658: point = 490, n_alt = 0
   Insn 2657: point = 492, n_alt = 0
   Insn 2656: point = 493, n_alt = 0
   Insn 2655: point = 495, n_alt = 0
   Insn 2654: point = 497, n_alt = 0
   Insn 2653: point = 499, n_alt = 0
   Insn 2652: point = 500, n_alt = 1
   Insn 2651: point = 502, n_alt = 0
   Insn 2650: point = 504, n_alt = 0
   Insn 2649: point = 505, n_alt = 8
   Insn 2648: point = 506, n_alt = 7
   Insn 2647: point = 507, n_alt = 3
   Insn 2646: point = 508, n_alt = 3
   Insn 2645: point = 510, n_alt = 0
   Insn 2644: point = 512, n_alt = 0
   Insn 2643: point = 514, n_alt = 0
   Insn 2642: point = 515, n_alt = 0
   Insn 2641: point = 517, n_alt = 0
   Insn 2640: point = 519, n_alt = 0
   Insn 2639: point = 521, n_alt = 0
   Insn 2638: point = 522, n_alt = 1
   Insn 2637: point = 524, n_alt = 0
   Insn 2636: point = 526, n_alt = 0
  BB 126
   Insn 2631: point = 528, n_alt = -1
   Insn 2630: point = 528, n_alt = 1
   Insn 2629: point = 529, n_alt = 7
   Insn 2628: point = 530, n_alt = 7
   Insn 2627: point = 532, n_alt = 3
   Insn 2626: point = 533, n_alt = 3
   Insn 2625: point = 535, n_alt = 0
   Insn 2624: point = 537, n_alt = 0
   Insn 2623: point = 539, n_alt = 0
   Insn 2622: point = 540, n_alt = 0
   Insn 2621: point = 542, n_alt = 0
   Insn 2620: point = 544, n_alt = 0
   Insn 2619: point = 546, n_alt = 0
   Insn 2618: point = 547, n_alt = 1
   Insn 2617: point = 549, n_alt = 0
   Insn 2616: point = 551, n_alt = 0
  BB 125
   Insn 2613: point = 553, n_alt = 8
   Insn 2612: point = 554, n_alt = 3
   Insn 2611: point = 555, n_alt = 1
   Insn 2610: point = 557, n_alt = 3
   Insn 2609: point = 559, n_alt = 0
   Insn 2608: point = 561, n_alt = 0
   Insn 2607: point = 563, n_alt = 0
   Insn 2606: point = 564, n_alt = 0
   Insn 2605: point = 566, n_alt = 0
   Insn 2604: point = 568, n_alt = 0
   Insn 2603: point = 570, n_alt = 0
   Insn 2602: point = 571, n_alt = 1
   Insn 2601: point = 573, n_alt = 0
   Insn 2600: point = 575, n_alt = 0
   Insn 2599: point = 576, n_alt = 7
   Insn 2598: point = 578, n_alt = 4
   Insn 2597: point = 579, n_alt = 3
   Insn 2596: point = 581, n_alt = 0
   Insn 2595: point = 583, n_alt = 0
   Insn 2594: point = 585, n_alt = 0
   Insn 2593: point = 586, n_alt = 0
   Insn 2592: point = 588, n_alt = 0
   Insn 2591: point = 590, n_alt = 0
   Insn 2590: point = 592, n_alt = 0
   Insn 2589: point = 593, n_alt = 1
   Insn 2588: point = 595, n_alt = 0
   Insn 2587: point = 597, n_alt = 0
   Insn 2586: point = 598, n_alt = 7
   Insn 2585: point = 600, n_alt = 3
   Insn 2584: point = 601, n_alt = 3
   Insn 2583: point = 603, n_alt = 0
   Insn 2582: point = 605, n_alt = 0
   Insn 2581: point = 607, n_alt = 0
   Insn 2580: point = 608, n_alt = 0
   Insn 2579: point = 610, n_alt = 0
   Insn 2578: point = 612, n_alt = 0
   Insn 2577: point = 614, n_alt = 0
   Insn 2576: point = 615, n_alt = 1
   Insn 2575: point = 617, n_alt = 0
   Insn 2574: point = 619, n_alt = 0
   Insn 2573: point = 620, n_alt = 8
   Insn 2572: point = 621, n_alt = 7
   Insn 2571: point = 622, n_alt = 3
   Insn 2570: point = 623, n_alt = 3
   Insn 2569: point = 625, n_alt = 0
   Insn 2568: point = 627, n_alt = 0
   Insn 2567: point = 629, n_alt = 0
   Insn 2566: point = 630, n_alt = 0
   Insn 2565: point = 632, n_alt = 0
   Insn 2564: point = 634, n_alt = 0
   Insn 2563: point = 636, n_alt = 0
   Insn 2562: point = 637, n_alt = 1
   Insn 2561: point = 639, n_alt = 0
   Insn 2560: point = 641, n_alt = 0
  BB 124
   Insn 2555: point = 643, n_alt = -1
   Insn 2554: point = 643, n_alt = 1
   Insn 2553: point = 644, n_alt = 7
   Insn 2552: point = 645, n_alt = 7
   Insn 2551: point = 647, n_alt = 3
   Insn 2550: point = 648, n_alt = 3
   Insn 2549: point = 650, n_alt = 0
   Insn 2548: point = 652, n_alt = 0
   Insn 2547: point = 654, n_alt = 0
   Insn 2546: point = 655, n_alt = 0
   Insn 2545: point = 657, n_alt = 0
   Insn 2544: point = 659, n_alt = 0
   Insn 2543: point = 661, n_alt = 0
   Insn 2542: point = 662, n_alt = 1
   Insn 2541: point = 664, n_alt = 0
   Insn 2540: point = 666, n_alt = 0
   Insn 2539: point = 667, n_alt = 8
   Insn 2538: point = 668, n_alt = 3
   Insn 2537: point = 669, n_alt = 2
   Insn 2536: point = 671, n_alt = 3
   Insn 2535: point = 673, n_alt = 0
   Insn 2534: point = 675, n_alt = 0
   Insn 2533: point = 677, n_alt = 0
   Insn 2532: point = 678, n_alt = 0
   Insn 2531: point = 680, n_alt = 0
   Insn 2530: point = 682, n_alt = 0
   Insn 2529: point = 684, n_alt = 0
   Insn 2528: point = 685, n_alt = 1
   Insn 2527: point = 687, n_alt = 0
   Insn 2526: point = 689, n_alt = 0
   Insn 2525: point = 690, n_alt = 7
   Insn 2524: point = 692, n_alt = 4
   Insn 2523: point = 693, n_alt = 3
   Insn 2522: point = 695, n_alt = 0
   Insn 2521: point = 697, n_alt = 0
   Insn 2520: point = 699, n_alt = 0
   Insn 2519: point = 700, n_alt = 0
   Insn 2518: point = 702, n_alt = 0
   Insn 2517: point = 704, n_alt = 0
   Insn 2516: point = 706, n_alt = 0
   Insn 2515: point = 707, n_alt = 1
   Insn 2514: point = 709, n_alt = 0
   Insn 2513: point = 711, n_alt = 0
   Insn 2512: point = 712, n_alt = 7
   Insn 2511: point = 714, n_alt = 3
   Insn 2510: point = 715, n_alt = 3
   Insn 2509: point = 717, n_alt = 0
   Insn 2508: point = 719, n_alt = 0
   Insn 2507: point = 721, n_alt = 0
   Insn 2506: point = 722, n_alt = 0
   Insn 2505: point = 724, n_alt = 0
   Insn 2504: point = 726, n_alt = 0
   Insn 2503: point = 728, n_alt = 0
   Insn 2502: point = 729, n_alt = 1
   Insn 2501: point = 731, n_alt = 0
   Insn 2500: point = 733, n_alt = 0
  BB 123
   Insn 2497: point = 735, n_alt = 8
   Insn 2496: point = 736, n_alt = 3
   Insn 2495: point = 737, n_alt = 1
   Insn 2494: point = 739, n_alt = 7
   Insn 2493: point = 740, n_alt = 3
   Insn 2492: point = 742, n_alt = 0
   Insn 2491: point = 744, n_alt = 0
   Insn 2490: point = 746, n_alt = 0
   Insn 2489: point = 747, n_alt = 0
   Insn 2488: point = 749, n_alt = 0
   Insn 2487: point = 751, n_alt = 0
   Insn 2486: point = 753, n_alt = 0
   Insn 2485: point = 754, n_alt = 1
   Insn 2484: point = 756, n_alt = 0
   Insn 2483: point = 758, n_alt = 0
   Insn 3266: point = 759, n_alt = -2
	Hard reg 22 is preferable by r2389 with profit 1000
   Insn 2482: point = 761, n_alt = 1
   Insn 3265: point = 761, n_alt = -2
	Hard reg 22 is preferable by r2389 with profit 1000
	Hard reg 21 is preferable by r2389 with profit 1000
   Insn 2481: point = 763, n_alt = -2
   Insn 2480: point = 765, n_alt = 1
   Insn 2479: point = 767, n_alt = 7
   Insn 2478: point = 769, n_alt = 4
   Insn 2477: point = 770, n_alt = 3
   Insn 2476: point = 772, n_alt = 0
   Insn 2475: point = 774, n_alt = 0
   Insn 2474: point = 776, n_alt = 0
   Insn 2473: point = 777, n_alt = 0
   Insn 2472: point = 779, n_alt = 0
   Insn 2471: point = 781, n_alt = 0
   Insn 2470: point = 783, n_alt = 0
   Insn 2469: point = 784, n_alt = 1
   Insn 2468: point = 786, n_alt = 0
   Insn 2467: point = 788, n_alt = 0
   Insn 2466: point = 789, n_alt = 7
   Insn 2465: point = 791, n_alt = 0
   Insn 2464: point = 793, n_alt = 4
   Insn 2463: point = 794, n_alt = 3
   Insn 2462: point = 796, n_alt = 0
   Insn 2461: point = 798, n_alt = 0
   Insn 2460: point = 800, n_alt = 0
   Insn 2459: point = 801, n_alt = 0
   Insn 2458: point = 803, n_alt = 0
   Insn 2457: point = 805, n_alt = 0
   Insn 2456: point = 807, n_alt = 0
   Insn 2455: point = 808, n_alt = 1
   Insn 2454: point = 810, n_alt = 0
   Insn 2453: point = 812, n_alt = 0
   Insn 2452: point = 813, n_alt = 8
   Insn 2451: point = 814, n_alt = 3
   Insn 2450: point = 815, n_alt = 7
   Insn 2449: point = 817, n_alt = 4
   Insn 2448: point = 818, n_alt = 3
   Insn 2447: point = 820, n_alt = 0
   Insn 2446: point = 822, n_alt = 0
   Insn 2445: point = 824, n_alt = 0
   Insn 2444: point = 825, n_alt = 0
   Insn 2443: point = 827, n_alt = 0
   Insn 2442: point = 829, n_alt = 0
   Insn 2441: point = 831, n_alt = 0
   Insn 2440: point = 832, n_alt = 1
   Insn 2439: point = 834, n_alt = 0
   Insn 2438: point = 836, n_alt = 0
   Insn 2437: point = 837, n_alt = 3
   Insn 2436: point = 839, n_alt = 0
   Insn 2435: point = 841, n_alt = 0
   Insn 2434: point = 843, n_alt = 0
   Insn 2433: point = 844, n_alt = 0
   Insn 2432: point = 846, n_alt = 0
   Insn 2431: point = 848, n_alt = 0
   Insn 2430: point = 850, n_alt = 0
   Insn 2429: point = 851, n_alt = 1
   Insn 2428: point = 853, n_alt = 0
   Insn 2427: point = 855, n_alt = 0
   Insn 2426: point = 856, n_alt = 8
   Insn 2425: point = 857, n_alt = 7
   Insn 2424: point = 858, n_alt = 4
   Insn 2423: point = 859, n_alt = 3
   Insn 2422: point = 861, n_alt = 0
   Insn 2421: point = 863, n_alt = 0
   Insn 2420: point = 865, n_alt = 0
   Insn 2419: point = 866, n_alt = 0
   Insn 2418: point = 868, n_alt = 0
   Insn 2417: point = 870, n_alt = 0
   Insn 2416: point = 872, n_alt = 0
   Insn 2415: point = 873, n_alt = 1
   Insn 2414: point = 875, n_alt = 0
   Insn 2413: point = 877, n_alt = 0
   Insn 2412: point = 878, n_alt = 8
   Insn 2411: point = 879, n_alt = 7
  BB 121
   Insn 3161: point = 881, n_alt = -1
   Insn 2402: point = 881, n_alt = 8
   Insn 2401: point = 882, n_alt = 7
  BB 119
   Insn 3158: point = 884, n_alt = -1
   Insn 2380: point = 884, n_alt = 8
   Insn 2379: point = 885, n_alt = 7
  BB 117
   Insn 3155: point = 887, n_alt = -1
   Insn 2366: point = 887, n_alt = 8
   Insn 2365: point = 888, n_alt = 7
  BB 122
   Insn 2408: point = 890, n_alt = 8
   Insn 2407: point = 891, n_alt = 7
  BB 120
   Insn 2396: point = 893, n_alt = -1
   Insn 2395: point = 893, n_alt = 1
   Insn 2394: point = 894, n_alt = 7
   Insn 2393: point = 895, n_alt = 7
   Insn 2392: point = 897, n_alt = 4
   Insn 2391: point = 898, n_alt = 3
   Insn 2390: point = 900, n_alt = 0
   Insn 2389: point = 902, n_alt = 0
   Insn 2388: point = 904, n_alt = 0
   Insn 2387: point = 905, n_alt = 0
   Insn 2386: point = 907, n_alt = 0
   Insn 2385: point = 909, n_alt = 0
  BB 118
   Insn 2374: point = 911, n_alt = -1
   Insn 2373: point = 911, n_alt = 1
   Insn 2372: point = 912, n_alt = 7
   Insn 2371: point = 913, n_alt = 7
  BB 116
   Insn 2360: point = 915, n_alt = -1
   Insn 2359: point = 915, n_alt = 1
   Insn 2358: point = 916, n_alt = 7
   Insn 2357: point = 917, n_alt = 8
   Insn 2356: point = 918, n_alt = 1
   Insn 2355: point = 920, n_alt = 7
   Insn 2354: point = 921, n_alt = -2
   Insn 2353: point = 923, n_alt = 2
   Insn 2352: point = 925, n_alt = 7
   Insn 2351: point = 926, n_alt = 1
   Insn 2350: point = 928, n_alt = -2
   Insn 2349: point = 930, n_alt = 1
   Insn 2348: point = 932, n_alt = 7
   Insn 2347: point = 933, n_alt = 7
   Insn 2346: point = 934, n_alt = 1
   Insn 2345: point = 936, n_alt = 7
   Insn 2344: point = 937, n_alt = 7
   Insn 2343: point = 938, n_alt = 8
   Insn 2342: point = 939, n_alt = 1
   Insn 2341: point = 941, n_alt = 7
   Insn 2340: point = 942, n_alt = -2
   Insn 2339: point = 944, n_alt = 1
   Insn 2338: point = 946, n_alt = 1
  BB 115
   Insn 2335: point = 949, n_alt = 7
  BB 114
   Insn 2333: point = 951, n_alt = -1
   Insn 2332: point = 951, n_alt = 0
   Insn 2331: point = 952, n_alt = 0
   Insn 2330: point = 954, n_alt = 0
   Insn 2329: point = 956, n_alt = 0
   Insn 2328: point = 957, n_alt = 1
   Insn 2327: point = 957, n_alt = 0
   Insn 2326: point = 959, n_alt = 0
   Insn 2325: point = 960, n_alt = 1
   Insn 2324: point = 961, n_alt = 7
   Insn 2323: point = 962, n_alt = 7
   Insn 2322: point = 963, n_alt = 8
   Insn 2321: point = 964, n_alt = 1
   Insn 3269: point = 966, n_alt = 7
	   Creating copy r2392<-r2395@1000
   Insn 2320: point = 968, n_alt = -2
   Insn 2319: point = 969, n_alt = 0
   Insn 2318: point = 969, n_alt = -2
   Insn 2317: point = 970, n_alt = 2
   Insn 2316: point = 972, n_alt = -2
   Insn 2315: point = 974, n_alt = 2
   Insn 2314: point = 976, n_alt = 7
   Insn 2313: point = 977, n_alt = 7
   Insn 2312: point = 979, n_alt = 0
   Insn 2311: point = 981, n_alt = 4
   Insn 2310: point = 982, n_alt = 3
   Insn 2309: point = 984, n_alt = 0
   Insn 2308: point = 986, n_alt = 0
   Insn 2307: point = 988, n_alt = 0
   Insn 2306: point = 989, n_alt = 0
   Insn 2305: point = 991, n_alt = 0
   Insn 2304: point = 993, n_alt = 0
   Insn 2303: point = 995, n_alt = 0
   Insn 2302: point = 996, n_alt = 1
   Insn 2301: point = 998, n_alt = 0
   Insn 2300: point = 1000, n_alt = 0
   Insn 2299: point = 1001, n_alt = 1
   Insn 2298: point = 1003, n_alt = 7
   Insn 2297: point = 1004, n_alt = -2
   Insn 2296: point = 1006, n_alt = 2
   Insn 2295: point = 1008, n_alt = 7
   Insn 2294: point = 1009, n_alt = 7
   Insn 2293: point = 1011, n_alt = 0
   Insn 2292: point = 1013, n_alt = 4
   Insn 2291: point = 1014, n_alt = 3
   Insn 2290: point = 1016, n_alt = 0
   Insn 2289: point = 1018, n_alt = 0
   Insn 2288: point = 1020, n_alt = 0
   Insn 2287: point = 1021, n_alt = 0
   Insn 2286: point = 1023, n_alt = 0
   Insn 2285: point = 1025, n_alt = 0
   Insn 2284: point = 1027, n_alt = 0
   Insn 2283: point = 1028, n_alt = 1
   Insn 2282: point = 1030, n_alt = 0
   Insn 2281: point = 1032, n_alt = 0
   Insn 3263: point = 1033, n_alt = 8
	   Creating copy r2387->r2395@1000
   Insn 2280: point = 1035, n_alt = 2
   Insn 3262: point = 1035, n_alt = -2
	Hard reg 21 is preferable by r2387 with profit 1000
   Insn 2279: point = 1037, n_alt = 7
  BB 113
   Insn 2276: point = 1039, n_alt = 8
   Insn 2275: point = 1040, n_alt = 7
   Insn 2274: point = 1041, n_alt = 8
   Insn 2273: point = 1042, n_alt = 7
  BB 112
   Insn 2268: point = 1044, n_alt = -1
   Insn 2267: point = 1044, n_alt = 1
   Insn 2266: point = 1045, n_alt = 7
   Insn 2265: point = 1046, n_alt = 8
   Insn 2264: point = 1047, n_alt = 7
   Insn 2263: point = 1048, n_alt = 8
   Insn 2262: point = 1049, n_alt = 7
   Insn 2261: point = 1050, n_alt = 8
  BB 111
   Insn 2258: point = 1052, n_alt = 7
  BB 110
   Insn 2256: point = 1054, n_alt = -1
   Insn 2255: point = 1054, n_alt = 0
   Insn 2254: point = 1055, n_alt = 0
   Insn 2253: point = 1057, n_alt = 0
   Insn 2252: point = 1059, n_alt = 0
   Insn 2251: point = 1060, n_alt = 1
   Insn 2250: point = 1060, n_alt = 0
   Insn 2249: point = 1062, n_alt = 0
   Insn 2248: point = 1063, n_alt = 1
   Insn 2247: point = 1063, n_alt = 7
   Insn 2246: point = 1064, n_alt = 8
   Insn 2245: point = 1065, n_alt = 2
   Insn 2244: point = 1067, n_alt = 7
   Insn 2243: point = 1068, n_alt = 7
   Insn 2242: point = 1070, n_alt = 0
   Insn 2241: point = 1072, n_alt = 4
   Insn 2240: point = 1073, n_alt = 3
   Insn 2239: point = 1075, n_alt = 0
   Insn 2238: point = 1077, n_alt = 0
   Insn 2237: point = 1079, n_alt = 0
   Insn 2236: point = 1080, n_alt = 0
   Insn 2235: point = 1082, n_alt = 0
   Insn 2234: point = 1084, n_alt = 0
   Insn 2233: point = 1086, n_alt = 0
   Insn 2232: point = 1087, n_alt = 1
   Insn 2231: point = 1089, n_alt = 0
   Insn 2230: point = 1091, n_alt = 0
   Insn 2229: point = 1092, n_alt = 8
   Insn 2228: point = 1093, n_alt = 3
   Insn 2227: point = 1094, n_alt = 7
   Insn 2226: point = 1096, n_alt = 0
   Insn 2225: point = 1098, n_alt = 4
   Insn 2224: point = 1099, n_alt = 3
   Insn 2223: point = 1101, n_alt = 0
   Insn 2222: point = 1103, n_alt = 0
   Insn 2221: point = 1105, n_alt = 0
   Insn 2220: point = 1106, n_alt = 0
   Insn 2219: point = 1108, n_alt = 0
   Insn 2218: point = 1110, n_alt = 0
   Insn 2217: point = 1112, n_alt = 0
   Insn 2216: point = 1113, n_alt = 1
   Insn 2215: point = 1115, n_alt = 0
   Insn 2214: point = 1117, n_alt = 0
   Insn 2213: point = 1118, n_alt = 3
   Insn 2212: point = 1120, n_alt = 0
   Insn 2211: point = 1122, n_alt = 0
   Insn 2210: point = 1124, n_alt = 0
   Insn 2209: point = 1125, n_alt = 0
   Insn 2208: point = 1127, n_alt = 0
   Insn 2207: point = 1129, n_alt = 0
   Insn 2206: point = 1131, n_alt = 0
   Insn 2205: point = 1132, n_alt = 1
   Insn 2204: point = 1134, n_alt = 0
   Insn 2203: point = 1136, n_alt = 0
   Insn 2202: point = 1137, n_alt = 8
   Insn 2201: point = 1138, n_alt = 3
   Insn 2200: point = 1139, n_alt = 7
   Insn 2199: point = 1141, n_alt = 0
   Insn 2198: point = 1143, n_alt = 4
   Insn 2197: point = 1144, n_alt = 3
   Insn 2196: point = 1146, n_alt = 0
   Insn 2195: point = 1148, n_alt = 0
   Insn 2194: point = 1150, n_alt = 0
   Insn 2193: point = 1151, n_alt = 0
   Insn 2192: point = 1153, n_alt = 0
   Insn 2191: point = 1155, n_alt = 0
   Insn 2190: point = 1157, n_alt = 0
   Insn 2189: point = 1158, n_alt = 1
   Insn 2188: point = 1160, n_alt = 0
   Insn 2187: point = 1162, n_alt = 0
   Insn 2186: point = 1163, n_alt = 3
   Insn 2185: point = 1165, n_alt = 0
   Insn 2184: point = 1167, n_alt = 0
   Insn 2183: point = 1169, n_alt = 0
   Insn 2182: point = 1170, n_alt = 0
   Insn 2181: point = 1172, n_alt = 0
   Insn 2180: point = 1174, n_alt = 0
   Insn 2179: point = 1176, n_alt = 0
   Insn 2178: point = 1177, n_alt = 1
   Insn 2177: point = 1179, n_alt = 0
   Insn 2176: point = 1181, n_alt = 0
   Insn 2175: point = 1182, n_alt = 1
   Insn 2174: point = 1183, n_alt = 0
   Insn 2173: point = 1184, n_alt = 3
   Insn 2172: point = 1185, n_alt = 3
   Insn 2171: point = 1187, n_alt = 0
   Insn 2170: point = 1189, n_alt = 0
   Insn 2169: point = 1191, n_alt = 0
   Insn 2168: point = 1192, n_alt = 0
   Insn 2167: point = 1194, n_alt = 0
   Insn 2166: point = 1196, n_alt = 0
   Insn 2165: point = 1198, n_alt = 0
   Insn 2164: point = 1199, n_alt = 1
   Insn 2163: point = 1201, n_alt = 0
   Insn 2162: point = 1203, n_alt = 0
   Insn 2161: point = 1204, n_alt = 8
   Insn 2160: point = 1205, n_alt = 1
   Insn 2159: point = 1207, n_alt = 7
   Insn 2158: point = 1208, n_alt = -2
   Insn 2157: point = 1210, n_alt = 1
   Insn 2156: point = 1212, n_alt = 7
   Insn 2155: point = 1214, n_alt = 4
   Insn 2154: point = 1215, n_alt = 3
   Insn 2153: point = 1217, n_alt = 0
   Insn 2152: point = 1219, n_alt = 0
   Insn 2151: point = 1221, n_alt = 0
   Insn 2150: point = 1222, n_alt = 0
   Insn 2149: point = 1224, n_alt = 0
   Insn 2148: point = 1226, n_alt = 0
   Insn 2147: point = 1228, n_alt = 0
   Insn 2146: point = 1229, n_alt = 1
   Insn 2145: point = 1231, n_alt = 0
   Insn 2144: point = 1233, n_alt = 0
   Insn 2143: point = 1235, n_alt = 0
   Insn 2142: point = 1236, n_alt = 7
   Insn 2141: point = 1238, n_alt = 4
   Insn 2140: point = 1239, n_alt = 3
   Insn 2139: point = 1241, n_alt = 0
   Insn 2138: point = 1243, n_alt = 0
   Insn 2137: point = 1245, n_alt = 0
   Insn 2136: point = 1246, n_alt = 0
   Insn 2135: point = 1248, n_alt = 0
   Insn 2134: point = 1250, n_alt = 0
   Insn 2133: point = 1252, n_alt = 0
   Insn 2132: point = 1253, n_alt = 1
   Insn 2131: point = 1255, n_alt = 0
   Insn 2130: point = 1257, n_alt = 0
   Insn 2129: point = 1258, n_alt = 8
   Insn 2128: point = 1259, n_alt = 2
   Insn 2127: point = 1261, n_alt = 7
   Insn 2126: point = 1263, n_alt = 4
   Insn 2125: point = 1264, n_alt = 3
   Insn 2124: point = 1266, n_alt = 0
   Insn 2123: point = 1268, n_alt = 0
   Insn 2122: point = 1270, n_alt = 0
   Insn 2121: point = 1271, n_alt = 0
   Insn 2120: point = 1273, n_alt = 0
   Insn 2119: point = 1275, n_alt = 0
   Insn 2118: point = 1277, n_alt = 0
   Insn 2117: point = 1278, n_alt = 1
   Insn 2116: point = 1280, n_alt = 0
   Insn 2115: point = 1282, n_alt = 0
   Insn 2114: point = 1283, n_alt = 7
   Insn 2113: point = 1285, n_alt = 4
   Insn 2112: point = 1286, n_alt = 3
   Insn 2111: point = 1288, n_alt = 0
   Insn 2110: point = 1290, n_alt = 0
   Insn 2109: point = 1292, n_alt = 0
   Insn 2108: point = 1293, n_alt = 0
   Insn 2107: point = 1295, n_alt = 0
   Insn 2106: point = 1297, n_alt = 0
   Insn 2105: point = 1299, n_alt = 0
   Insn 2104: point = 1300, n_alt = 1
   Insn 2103: point = 1302, n_alt = 0
   Insn 2102: point = 1304, n_alt = 0
   Insn 2101: point = 1306, n_alt = 0
  BB 169
   Insn 3246: point = 1308, n_alt = -1
  BB 106
   Insn 2030: point = 1309, n_alt = -1
   Insn 2029: point = 1309, n_alt = 0
   Insn 2028: point = 1310, n_alt = 0
   Insn 2027: point = 1312, n_alt = 0
   Insn 2026: point = 1313, n_alt = 0
  BB 109
   Insn 3152: point = 1314, n_alt = -1
   Insn 2095: point = 1314, n_alt = 1
  BB 108
   Insn 2092: point = 1315, n_alt = 1
   Insn 2091: point = 1316, n_alt = 0
   Insn 2090: point = 1317, n_alt = 8
   Insn 2089: point = 1318, n_alt = 7
  BB 107
   Insn 2084: point = 1320, n_alt = -1
   Insn 2083: point = 1320, n_alt = 1
   Insn 2082: point = 1321, n_alt = 7
   Insn 2081: point = 1322, n_alt = 8
   Insn 2080: point = 1323, n_alt = 0
   Insn 2079: point = 1325, n_alt = 2
   Insn 2078: point = 1326, n_alt = 2
   Insn 2077: point = 1328, n_alt = 7
   Insn 2076: point = 1329, n_alt = 7
   Insn 2075: point = 1331, n_alt = 3
   Insn 2074: point = 1332, n_alt = 3
   Insn 2073: point = 1334, n_alt = 0
   Insn 2072: point = 1336, n_alt = 0
   Insn 2071: point = 1338, n_alt = 0
   Insn 2070: point = 1339, n_alt = 0
   Insn 2069: point = 1341, n_alt = 0
   Insn 2068: point = 1343, n_alt = 0
   Insn 2067: point = 1345, n_alt = 0
   Insn 2066: point = 1346, n_alt = 1
   Insn 2065: point = 1348, n_alt = 0
   Insn 2064: point = 1350, n_alt = 0
   Insn 2063: point = 1351, n_alt = 8
   Insn 2062: point = 1352, n_alt = 1
   Insn 2061: point = 1354, n_alt = 7
   Insn 2060: point = 1355, n_alt = -2
   Insn 2059: point = 1357, n_alt = 1
   Insn 2058: point = 1359, n_alt = 7
   Insn 2057: point = 1361, n_alt = 4
   Insn 2056: point = 1362, n_alt = 3
   Insn 2055: point = 1364, n_alt = 0
   Insn 2054: point = 1366, n_alt = 0
   Insn 2053: point = 1368, n_alt = 0
   Insn 2052: point = 1369, n_alt = 0
   Insn 2051: point = 1371, n_alt = 0
   Insn 2050: point = 1373, n_alt = 0
   Insn 2049: point = 1375, n_alt = 0
   Insn 2048: point = 1376, n_alt = 1
   Insn 2047: point = 1378, n_alt = 0
   Insn 2046: point = 1380, n_alt = 0
   Insn 2045: point = 1382, n_alt = 0
   Insn 2044: point = 1383, n_alt = 7
   Insn 2043: point = 1385, n_alt = 4
   Insn 2042: point = 1386, n_alt = 3
   Insn 2041: point = 1388, n_alt = 0
   Insn 2040: point = 1390, n_alt = 0
   Insn 2039: point = 1392, n_alt = 0
   Insn 2038: point = 1393, n_alt = 0
   Insn 2037: point = 1395, n_alt = 0
   Insn 2036: point = 1397, n_alt = 0
   Insn 2035: point = 1399, n_alt = 0
   Insn 2034: point = 1400, n_alt = 1
   Insn 2033: point = 1402, n_alt = 0
   Insn 2032: point = 1404, n_alt = 0
  BB 105
   Insn 2024: point = 1406, n_alt = 1
   Insn 2023: point = 1406, n_alt = 8
   Insn 2022: point = 1407, n_alt = 3
   Insn 2021: point = 1408, n_alt = 1
   Insn 2020: point = 1410, n_alt = 7
   Insn 2019: point = 1411, n_alt = 3
   Insn 2018: point = 1413, n_alt = 0
   Insn 2017: point = 1415, n_alt = 0
   Insn 2016: point = 1417, n_alt = 0
   Insn 2015: point = 1418, n_alt = 0
   Insn 2014: point = 1420, n_alt = 0
   Insn 2013: point = 1422, n_alt = 0
   Insn 2012: point = 1424, n_alt = 0
   Insn 2011: point = 1425, n_alt = 1
   Insn 2010: point = 1427, n_alt = 0
   Insn 2009: point = 1429, n_alt = 0
   Insn 2008: point = 1430, n_alt = -2
   Insn 2007: point = 1432, n_alt = 1
   Insn 2006: point = 1434, n_alt = 7
   Insn 2005: point = 1436, n_alt = 4
   Insn 2004: point = 1437, n_alt = 3
   Insn 2003: point = 1439, n_alt = 0
   Insn 2002: point = 1441, n_alt = 0
   Insn 2001: point = 1443, n_alt = 0
   Insn 2000: point = 1444, n_alt = 0
   Insn 1999: point = 1446, n_alt = 0
   Insn 1998: point = 1448, n_alt = 0
   Insn 1997: point = 1450, n_alt = 0
   Insn 1996: point = 1451, n_alt = 1
   Insn 1995: point = 1453, n_alt = 0
   Insn 1994: point = 1455, n_alt = 0
   Insn 1993: point = 1457, n_alt = 0
   Insn 1992: point = 1458, n_alt = 7
   Insn 1991: point = 1460, n_alt = 4
   Insn 1990: point = 1461, n_alt = 3
   Insn 1989: point = 1463, n_alt = 0
   Insn 1988: point = 1465, n_alt = 0
   Insn 1987: point = 1467, n_alt = 0
   Insn 1986: point = 1468, n_alt = 0
   Insn 1985: point = 1470, n_alt = 0
   Insn 1984: point = 1472, n_alt = 0
   Insn 1983: point = 1474, n_alt = 0
   Insn 1982: point = 1475, n_alt = 1
   Insn 1981: point = 1477, n_alt = 0
   Insn 1980: point = 1479, n_alt = 0
   Insn 1979: point = 1480, n_alt = 8
   Insn 1978: point = 1481, n_alt = 7
   Insn 1977: point = 1482, n_alt = 1
  BB 104
   Insn 1972: point = 1483, n_alt = -1
   Insn 1971: point = 1483, n_alt = 1
   Insn 1970: point = 1484, n_alt = 7
  BB 103
   Insn 1969: point = 1486, n_alt = -1
   Insn 1968: point = 1486, n_alt = 1
   Insn 1967: point = 1487, n_alt = 7
   Insn 1966: point = 1488, n_alt = 7
   Insn 1965: point = 1490, n_alt = 4
   Insn 1964: point = 1491, n_alt = 3
   Insn 1963: point = 1493, n_alt = 0
   Insn 1962: point = 1495, n_alt = 0
   Insn 1961: point = 1497, n_alt = 0
   Insn 1960: point = 1498, n_alt = 0
   Insn 1959: point = 1500, n_alt = 0
   Insn 1958: point = 1502, n_alt = 0
   Insn 1957: point = 1504, n_alt = 0
   Insn 1956: point = 1505, n_alt = 1
   Insn 1955: point = 1507, n_alt = 0
   Insn 1954: point = 1509, n_alt = 0
  BB 101
   Insn 1946: point = 1511, n_alt = 1
  BB 99
   Insn 1938: point = 1512, n_alt = 1
   Insn 1937: point = 1513, n_alt = 0
   Insn 1936: point = 1514, n_alt = 0
  BB 97
   Insn 1928: point = 1515, n_alt = 1
  BB 161
   Insn 3222: point = 1515, n_alt = -1
  BB 77
   Insn 1530: point = 1515, n_alt = -1
   Insn 1529: point = 1515, n_alt = 0
   Insn 1528: point = 1516, n_alt = 0
   Insn 1527: point = 1518, n_alt = 0
   Insn 1526: point = 1519, n_alt = 0
  BB 96
   Insn 3150: point = 1519, n_alt = -1
   Insn 1922: point = 1519, n_alt = 1
  BB 164
   Insn 3231: point = 1519, n_alt = -1
  BB 88
   Insn 1805: point = 1519, n_alt = -1
   Insn 1804: point = 1519, n_alt = 0
   Insn 1803: point = 1520, n_alt = 0
   Insn 1802: point = 1522, n_alt = 0
   Insn 1801: point = 1523, n_alt = 0
  BB 95
   Insn 3148: point = 1524, n_alt = -1
   Insn 1916: point = 1524, n_alt = 1
  BB 165
   Insn 3234: point = 1525, n_alt = -1
  BB 90
   Insn 1813: point = 1526, n_alt = -1
   Insn 1812: point = 1526, n_alt = 0
   Insn 1811: point = 1527, n_alt = 0
   Insn 1810: point = 1529, n_alt = 0
   Insn 1809: point = 1530, n_alt = 0
  BB 94
   Insn 3146: point = 1531, n_alt = -1
   Insn 1910: point = 1531, n_alt = 1
  BB 93
   Insn 1907: point = 1532, n_alt = 8
   Insn 1906: point = 1533, n_alt = 3
   Insn 1905: point = 1534, n_alt = 1
   Insn 1904: point = 1536, n_alt = 3
   Insn 1903: point = 1538, n_alt = 0
   Insn 1902: point = 1540, n_alt = 1
   Insn 1901: point = 1542, n_alt = 0
   Insn 1900: point = 1543, n_alt = 0
   Insn 1899: point = 1545, n_alt = 0
   Insn 1898: point = 1547, n_alt = 1
   Insn 1897: point = 1549, n_alt = 0
   Insn 1896: point = 1550, n_alt = 1
   Insn 1895: point = 1552, n_alt = 1
   Insn 1894: point = 1554, n_alt = 0
   Insn 1893: point = 1555, n_alt = 7
   Insn 1892: point = 1557, n_alt = 3
   Insn 1891: point = 1558, n_alt = 3
   Insn 1890: point = 1560, n_alt = 0
   Insn 1889: point = 1562, n_alt = 1
   Insn 1888: point = 1564, n_alt = 0
   Insn 1887: point = 1565, n_alt = 0
   Insn 1886: point = 1567, n_alt = 0
   Insn 1885: point = 1569, n_alt = 1
   Insn 1884: point = 1571, n_alt = 0
   Insn 1883: point = 1572, n_alt = 1
   Insn 1882: point = 1574, n_alt = 1
   Insn 1881: point = 1576, n_alt = 0
   Insn 1880: point = 1577, n_alt = 8
   Insn 1879: point = 1578, n_alt = 3
   Insn 1878: point = 1579, n_alt = 1
   Insn 1877: point = 1581, n_alt = 3
   Insn 1876: point = 1583, n_alt = 0
   Insn 1875: point = 1585, n_alt = 1
   Insn 1874: point = 1587, n_alt = 0
   Insn 1873: point = 1588, n_alt = 0
   Insn 1872: point = 1590, n_alt = 0
   Insn 1871: point = 1592, n_alt = 1
   Insn 1870: point = 1594, n_alt = 0
   Insn 1869: point = 1595, n_alt = 1
   Insn 1868: point = 1597, n_alt = 1
   Insn 1867: point = 1599, n_alt = 0
   Insn 1866: point = 1600, n_alt = 7
   Insn 1865: point = 1602, n_alt = 3
   Insn 1864: point = 1603, n_alt = 3
   Insn 1863: point = 1605, n_alt = 0
   Insn 1862: point = 1607, n_alt = 1
   Insn 1861: point = 1609, n_alt = 0
   Insn 1860: point = 1610, n_alt = 0
   Insn 1859: point = 1612, n_alt = 0
   Insn 1858: point = 1614, n_alt = 1
   Insn 1857: point = 1616, n_alt = 0
   Insn 1856: point = 1617, n_alt = 1
   Insn 1855: point = 1619, n_alt = 1
   Insn 1854: point = 1621, n_alt = 0
   Insn 1853: point = 1622, n_alt = 8
   Insn 1852: point = 1623, n_alt = 2
   Insn 1851: point = 1625, n_alt = 7
   Insn 1850: point = 1626, n_alt = 7
   Insn 1849: point = 1628, n_alt = 4
   Insn 1848: point = 1629, n_alt = 3
   Insn 1847: point = 1631, n_alt = 0
   Insn 1846: point = 1633, n_alt = 1
   Insn 1845: point = 1635, n_alt = 0
   Insn 1844: point = 1636, n_alt = 0
   Insn 1843: point = 1638, n_alt = 0
   Insn 1842: point = 1640, n_alt = 1
   Insn 1841: point = 1642, n_alt = 0
   Insn 1840: point = 1643, n_alt = 1
   Insn 1839: point = 1645, n_alt = 1
   Insn 1838: point = 1647, n_alt = 0
  BB 92
   Insn 1833: point = 1649, n_alt = -1
   Insn 1832: point = 1649, n_alt = 1
   Insn 1831: point = 1650, n_alt = 7
  BB 91
   Insn 1830: point = 1652, n_alt = -1
   Insn 1829: point = 1652, n_alt = 1
   Insn 1828: point = 1653, n_alt = 7
   Insn 1827: point = 1654, n_alt = 7
   Insn 1826: point = 1656, n_alt = 4
   Insn 1825: point = 1657, n_alt = 3
   Insn 1824: point = 1659, n_alt = 0
   Insn 1823: point = 1661, n_alt = 1
   Insn 1822: point = 1663, n_alt = 0
   Insn 1821: point = 1664, n_alt = 0
   Insn 1820: point = 1666, n_alt = 0
   Insn 1819: point = 1668, n_alt = 1
   Insn 1818: point = 1670, n_alt = 0
   Insn 1817: point = 1671, n_alt = 1
   Insn 1816: point = 1673, n_alt = 1
   Insn 1815: point = 1675, n_alt = 0
  BB 89
   Insn 1807: point = 1677, n_alt = 1
  BB 87
   Insn 1799: point = 1678, n_alt = 1
   Insn 1798: point = 1679, n_alt = 0
   Insn 1797: point = 1680, n_alt = 0
  BB 162
   Insn 3225: point = 1681, n_alt = -1
  BB 79
   Insn 1540: point = 1681, n_alt = -1
   Insn 1539: point = 1681, n_alt = 0
   Insn 1538: point = 1682, n_alt = 0
   Insn 1537: point = 1684, n_alt = 0
   Insn 1536: point = 1685, n_alt = 0
  BB 86
   Insn 3144: point = 1686, n_alt = -1
   Insn 1791: point = 1686, n_alt = 1
  BB 163
   Insn 3228: point = 1687, n_alt = -1
  BB 81
   Insn 1548: point = 1688, n_alt = -1
   Insn 1547: point = 1688, n_alt = 0
   Insn 1546: point = 1689, n_alt = 0
   Insn 1545: point = 1691, n_alt = 0
   Insn 1544: point = 1692, n_alt = 0
  BB 85
   Insn 3142: point = 1693, n_alt = -1
   Insn 1785: point = 1693, n_alt = 1
  BB 84
   Insn 1782: point = 1694, n_alt = 8
   Insn 1781: point = 1695, n_alt = 3
   Insn 1780: point = 1696, n_alt = 1
   Insn 1779: point = 1698, n_alt = 3
   Insn 1778: point = 1700, n_alt = 0
   Insn 1777: point = 1702, n_alt = 1
   Insn 1776: point = 1704, n_alt = 0
   Insn 1775: point = 1705, n_alt = 0
   Insn 1774: point = 1707, n_alt = 0
   Insn 1773: point = 1709, n_alt = 1
   Insn 1772: point = 1711, n_alt = 0
   Insn 1771: point = 1712, n_alt = 1
   Insn 1770: point = 1714, n_alt = 1
   Insn 1769: point = 1716, n_alt = 0
   Insn 1768: point = 1717, n_alt = 7
   Insn 1767: point = 1719, n_alt = 3
   Insn 1766: point = 1720, n_alt = 3
   Insn 1765: point = 1722, n_alt = 0
   Insn 1764: point = 1724, n_alt = 1
   Insn 1763: point = 1726, n_alt = 0
   Insn 1762: point = 1727, n_alt = 0
   Insn 1761: point = 1729, n_alt = 0
   Insn 1760: point = 1731, n_alt = 1
   Insn 1759: point = 1733, n_alt = 0
   Insn 1758: point = 1734, n_alt = 1
   Insn 1757: point = 1736, n_alt = 1
   Insn 1756: point = 1738, n_alt = 0
   Insn 1755: point = 1739, n_alt = 8
   Insn 1754: point = 1740, n_alt = 4
   Insn 1753: point = 1741, n_alt = 1
   Insn 1752: point = 1743, n_alt = 3
   Insn 1751: point = 1745, n_alt = 0
   Insn 1750: point = 1747, n_alt = 1
   Insn 1749: point = 1749, n_alt = 0
   Insn 1748: point = 1750, n_alt = 0
   Insn 1747: point = 1752, n_alt = 0
   Insn 1746: point = 1754, n_alt = 1
   Insn 1745: point = 1756, n_alt = 0
   Insn 1744: point = 1757, n_alt = 1
   Insn 1743: point = 1759, n_alt = 1
   Insn 1742: point = 1761, n_alt = 0
   Insn 1741: point = 1762, n_alt = 7
   Insn 1740: point = 1764, n_alt = 4
   Insn 1739: point = 1765, n_alt = 3
   Insn 1738: point = 1767, n_alt = 0
   Insn 1737: point = 1769, n_alt = 1
   Insn 1736: point = 1771, n_alt = 0
   Insn 1735: point = 1772, n_alt = 0
   Insn 1734: point = 1774, n_alt = 0
   Insn 1733: point = 1776, n_alt = 1
   Insn 1732: point = 1778, n_alt = 0
   Insn 1731: point = 1779, n_alt = 1
   Insn 1730: point = 1781, n_alt = 1
   Insn 1729: point = 1783, n_alt = 0
   Insn 1728: point = 1784, n_alt = 8
   Insn 1727: point = 1785, n_alt = 3
   Insn 1726: point = 1786, n_alt = 1
   Insn 1725: point = 1788, n_alt = 3
   Insn 1724: point = 1790, n_alt = 0
   Insn 1723: point = 1792, n_alt = 1
   Insn 1722: point = 1794, n_alt = 0
   Insn 1721: point = 1795, n_alt = 0
   Insn 1720: point = 1797, n_alt = 0
   Insn 1719: point = 1799, n_alt = 1
   Insn 1718: point = 1801, n_alt = 0
   Insn 1717: point = 1802, n_alt = 1
   Insn 1716: point = 1804, n_alt = 1
   Insn 1715: point = 1806, n_alt = 0
   Insn 1714: point = 1807, n_alt = 7
   Insn 1713: point = 1809, n_alt = 3
   Insn 1712: point = 1810, n_alt = 3
   Insn 1711: point = 1812, n_alt = 0
   Insn 1710: point = 1814, n_alt = 1
   Insn 1709: point = 1816, n_alt = 0
   Insn 1708: point = 1817, n_alt = 0
   Insn 1707: point = 1819, n_alt = 0
   Insn 1706: point = 1821, n_alt = 1
   Insn 1705: point = 1823, n_alt = 0
   Insn 1704: point = 1824, n_alt = 1
   Insn 1703: point = 1826, n_alt = 1
   Insn 1702: point = 1828, n_alt = 0
   Insn 1701: point = 1829, n_alt = 8
   Insn 1700: point = 1830, n_alt = 3
   Insn 1699: point = 1831, n_alt = 1
   Insn 1698: point = 1833, n_alt = 3
   Insn 1697: point = 1835, n_alt = 0
   Insn 1696: point = 1837, n_alt = 1
   Insn 1695: point = 1839, n_alt = 0
   Insn 1694: point = 1840, n_alt = 0
   Insn 1693: point = 1842, n_alt = 0
   Insn 1692: point = 1844, n_alt = 1
   Insn 1691: point = 1846, n_alt = 0
   Insn 1690: point = 1847, n_alt = 1
   Insn 1689: point = 1849, n_alt = 1
   Insn 1688: point = 1851, n_alt = 0
   Insn 1687: point = 1852, n_alt = 7
   Insn 1686: point = 1854, n_alt = 3
   Insn 1685: point = 1855, n_alt = 3
   Insn 1684: point = 1857, n_alt = 0
   Insn 1683: point = 1859, n_alt = 1
   Insn 1682: point = 1861, n_alt = 0
   Insn 1681: point = 1862, n_alt = 0
   Insn 1680: point = 1864, n_alt = 0
   Insn 1679: point = 1866, n_alt = 1
   Insn 1678: point = 1868, n_alt = 0
   Insn 1677: point = 1869, n_alt = 1
   Insn 1676: point = 1871, n_alt = 1
   Insn 1675: point = 1873, n_alt = 0
   Insn 1674: point = 1874, n_alt = 8
   Insn 1673: point = 1875, n_alt = 3
   Insn 1672: point = 1876, n_alt = 1
   Insn 1671: point = 1878, n_alt = 7
   Insn 1670: point = 1879, n_alt = 3
   Insn 1669: point = 1881, n_alt = 0
   Insn 1668: point = 1883, n_alt = 1
   Insn 1667: point = 1885, n_alt = 0
   Insn 1666: point = 1886, n_alt = 0
   Insn 1665: point = 1888, n_alt = 0
   Insn 1664: point = 1890, n_alt = 1
   Insn 1663: point = 1892, n_alt = 0
   Insn 1662: point = 1893, n_alt = 1
   Insn 1661: point = 1895, n_alt = 1
   Insn 1660: point = 1897, n_alt = 0
   Insn 1659: point = 1898, n_alt = -2
   Insn 1658: point = 1900, n_alt = 1
   Insn 1657: point = 1902, n_alt = 7
   Insn 1656: point = 1904, n_alt = 4
   Insn 1655: point = 1905, n_alt = 3
   Insn 1654: point = 1907, n_alt = 0
   Insn 1653: point = 1909, n_alt = 1
   Insn 1652: point = 1911, n_alt = 0
   Insn 1651: point = 1912, n_alt = 0
   Insn 1650: point = 1914, n_alt = 0
   Insn 1649: point = 1916, n_alt = 1
   Insn 1648: point = 1918, n_alt = 0
   Insn 1647: point = 1919, n_alt = 1
   Insn 1646: point = 1921, n_alt = 1
   Insn 1645: point = 1923, n_alt = 0
   Insn 1644: point = 1925, n_alt = 0
   Insn 1643: point = 1926, n_alt = 7
   Insn 1642: point = 1928, n_alt = 4
   Insn 1641: point = 1929, n_alt = 3
   Insn 1640: point = 1931, n_alt = 0
   Insn 1639: point = 1933, n_alt = 1
   Insn 1638: point = 1935, n_alt = 0
   Insn 1637: point = 1936, n_alt = 0
   Insn 1636: point = 1938, n_alt = 0
   Insn 1635: point = 1940, n_alt = 1
   Insn 1634: point = 1942, n_alt = 0
   Insn 1633: point = 1943, n_alt = 1
   Insn 1632: point = 1945, n_alt = 1
   Insn 1631: point = 1947, n_alt = 0
   Insn 1630: point = 1948, n_alt = 1
   Insn 1629: point = 1949, n_alt = 3
   Insn 1628: point = 1950, n_alt = 0
   Insn 1627: point = 1952, n_alt = 3
   Insn 1626: point = 1954, n_alt = 0
   Insn 1625: point = 1956, n_alt = 1
   Insn 1624: point = 1958, n_alt = 0
   Insn 1623: point = 1959, n_alt = 0
   Insn 1622: point = 1961, n_alt = 0
   Insn 1621: point = 1963, n_alt = 1
   Insn 1620: point = 1965, n_alt = 0
   Insn 1619: point = 1966, n_alt = 1
   Insn 1618: point = 1968, n_alt = 1
   Insn 1617: point = 1970, n_alt = 0
   Insn 1616: point = 1971, n_alt = 2
   Insn 1615: point = 1973, n_alt = 7
   Insn 1614: point = 1975, n_alt = 4
   Insn 1613: point = 1976, n_alt = 3
   Insn 1612: point = 1978, n_alt = 0
   Insn 1611: point = 1980, n_alt = 1
   Insn 1610: point = 1982, n_alt = 0
   Insn 1609: point = 1983, n_alt = 0
   Insn 1608: point = 1985, n_alt = 0
   Insn 1607: point = 1987, n_alt = 1
   Insn 1606: point = 1989, n_alt = 0
   Insn 1605: point = 1990, n_alt = 1
   Insn 1604: point = 1992, n_alt = 1
   Insn 1603: point = 1994, n_alt = 0
   Insn 1602: point = 1995, n_alt = 1
   Insn 1601: point = 1997, n_alt = 0
   Insn 1600: point = 1999, n_alt = 3
   Insn 1599: point = 2000, n_alt = 3
   Insn 1598: point = 2002, n_alt = 0
   Insn 1597: point = 2004, n_alt = 1
   Insn 1596: point = 2006, n_alt = 0
   Insn 1595: point = 2007, n_alt = 0
   Insn 1594: point = 2009, n_alt = 0
   Insn 1593: point = 2011, n_alt = 1
   Insn 1592: point = 2013, n_alt = 0
   Insn 1591: point = 2014, n_alt = 1
   Insn 1590: point = 2016, n_alt = 1
   Insn 1589: point = 2018, n_alt = 0
   Insn 1588: point = 2019, n_alt = 8
   Insn 1587: point = 2020, n_alt = 2
   Insn 1586: point = 2022, n_alt = 7
   Insn 1585: point = 2023, n_alt = 7
   Insn 1584: point = 2025, n_alt = 4
   Insn 1583: point = 2026, n_alt = 3
   Insn 1582: point = 2028, n_alt = 0
   Insn 1581: point = 2030, n_alt = 1
   Insn 1580: point = 2032, n_alt = 0
   Insn 1579: point = 2033, n_alt = 0
   Insn 1578: point = 2035, n_alt = 0
   Insn 1577: point = 2037, n_alt = 1
   Insn 1576: point = 2039, n_alt = 0
   Insn 1575: point = 2040, n_alt = 1
   Insn 1574: point = 2042, n_alt = 1
   Insn 1573: point = 2044, n_alt = 0
  BB 83
   Insn 1568: point = 2046, n_alt = -1
   Insn 1567: point = 2046, n_alt = 1
   Insn 1566: point = 2047, n_alt = 7
  BB 82
   Insn 1565: point = 2049, n_alt = -1
   Insn 1564: point = 2049, n_alt = 1
   Insn 1563: point = 2050, n_alt = 7
   Insn 1562: point = 2051, n_alt = 7
   Insn 1561: point = 2053, n_alt = 4
   Insn 1560: point = 2054, n_alt = 3
   Insn 1559: point = 2056, n_alt = 0
   Insn 1558: point = 2058, n_alt = 1
   Insn 1557: point = 2060, n_alt = 0
   Insn 1556: point = 2061, n_alt = 0
   Insn 1555: point = 2063, n_alt = 0
   Insn 1554: point = 2065, n_alt = 1
   Insn 1553: point = 2067, n_alt = 0
   Insn 1552: point = 2068, n_alt = 1
   Insn 1551: point = 2070, n_alt = 1
   Insn 1550: point = 2072, n_alt = 0
  BB 80
   Insn 1542: point = 2074, n_alt = 1
  BB 78
   Insn 1534: point = 2075, n_alt = 1
   Insn 1533: point = 2076, n_alt = 0
   Insn 1532: point = 2077, n_alt = 0
  BB 76
   Insn 1524: point = 2078, n_alt = 1
  BB 151
   Insn 3192: point = 2078, n_alt = -1
  BB 18
   Insn 143: point = 2078, n_alt = -1
   Insn 142: point = 2078, n_alt = 0
   Insn 141: point = 2079, n_alt = 0
   Insn 140: point = 2081, n_alt = 0
   Insn 139: point = 2082, n_alt = 0
  BB 75
   Insn 3140: point = 2082, n_alt = -1
   Insn 1518: point = 2082, n_alt = 1
  BB 158
   Insn 3213: point = 2082, n_alt = -1
  BB 64
   Insn 1170: point = 2082, n_alt = -1
   Insn 1169: point = 2082, n_alt = 0
   Insn 1168: point = 2083, n_alt = 0
   Insn 1167: point = 2085, n_alt = 0
   Insn 1166: point = 2086, n_alt = 0
  BB 74
   Insn 3138: point = 2086, n_alt = -1
   Insn 1512: point = 2086, n_alt = 1
  BB 159
   Insn 3216: point = 2086, n_alt = -1
  BB 66
   Insn 1180: point = 2086, n_alt = -1
   Insn 1179: point = 2086, n_alt = 0
   Insn 1178: point = 2087, n_alt = 0
   Insn 1177: point = 2089, n_alt = 0
   Insn 1176: point = 2090, n_alt = 0
  BB 73
   Insn 3136: point = 2091, n_alt = -1
   Insn 1506: point = 2091, n_alt = 1
  BB 160
   Insn 3219: point = 2092, n_alt = -1
  BB 68
   Insn 1188: point = 2093, n_alt = -1
   Insn 1187: point = 2093, n_alt = 0
   Insn 1186: point = 2094, n_alt = 0
   Insn 1185: point = 2096, n_alt = 0
   Insn 1184: point = 2097, n_alt = 0
  BB 72
   Insn 3134: point = 2098, n_alt = -1
   Insn 1500: point = 2098, n_alt = 1
  BB 71
   Insn 1497: point = 2099, n_alt = 8
   Insn 1496: point = 2100, n_alt = 3
   Insn 1495: point = 2101, n_alt = 1
   Insn 1494: point = 2103, n_alt = 3
   Insn 1493: point = 2105, n_alt = 0
   Insn 1492: point = 2107, n_alt = 1
   Insn 1491: point = 2109, n_alt = 0
   Insn 1490: point = 2110, n_alt = 0
   Insn 1489: point = 2112, n_alt = 0
   Insn 1488: point = 2114, n_alt = 1
   Insn 1487: point = 2116, n_alt = 0
   Insn 1486: point = 2117, n_alt = 1
   Insn 1485: point = 2119, n_alt = 1
   Insn 1484: point = 2121, n_alt = 0
   Insn 1483: point = 2122, n_alt = 1
   Insn 1482: point = 2124, n_alt = 7
   Insn 1481: point = 2126, n_alt = 0
   Insn 1480: point = 2128, n_alt = 4
   Insn 1479: point = 2129, n_alt = 3
   Insn 1478: point = 2131, n_alt = 0
   Insn 1477: point = 2133, n_alt = 1
   Insn 1476: point = 2135, n_alt = 0
   Insn 1475: point = 2136, n_alt = 0
   Insn 1474: point = 2138, n_alt = 0
   Insn 1473: point = 2140, n_alt = 1
   Insn 1472: point = 2142, n_alt = 0
   Insn 1471: point = 2143, n_alt = 1
   Insn 1470: point = 2145, n_alt = 1
   Insn 1469: point = 2147, n_alt = 0
   Insn 1468: point = 2148, n_alt = 7
   Insn 1467: point = 2150, n_alt = 3
   Insn 1466: point = 2151, n_alt = 3
   Insn 1465: point = 2153, n_alt = 0
   Insn 1464: point = 2155, n_alt = 1
   Insn 1463: point = 2157, n_alt = 0
   Insn 1462: point = 2158, n_alt = 0
   Insn 1461: point = 2160, n_alt = 0
   Insn 1460: point = 2162, n_alt = 1
   Insn 1459: point = 2164, n_alt = 0
   Insn 1458: point = 2165, n_alt = 1
   Insn 1457: point = 2167, n_alt = 1
   Insn 1456: point = 2169, n_alt = 0
   Insn 1455: point = 2170, n_alt = 8
   Insn 1454: point = 2171, n_alt = 3
   Insn 1453: point = 2172, n_alt = 1
   Insn 1452: point = 2174, n_alt = 3
   Insn 1451: point = 2176, n_alt = 0
   Insn 1450: point = 2178, n_alt = 1
   Insn 1449: point = 2180, n_alt = 0
   Insn 1448: point = 2181, n_alt = 0
   Insn 1447: point = 2183, n_alt = 0
   Insn 1446: point = 2185, n_alt = 1
   Insn 1445: point = 2187, n_alt = 0
   Insn 1444: point = 2188, n_alt = 1
   Insn 1443: point = 2190, n_alt = 1
   Insn 1442: point = 2192, n_alt = 0
   Insn 1441: point = 2193, n_alt = 1
   Insn 1440: point = 2195, n_alt = 7
   Insn 1439: point = 2197, n_alt = 0
   Insn 1438: point = 2199, n_alt = 4
   Insn 1437: point = 2200, n_alt = 3
   Insn 1436: point = 2202, n_alt = 0
   Insn 1435: point = 2204, n_alt = 1
   Insn 1434: point = 2206, n_alt = 0
   Insn 1433: point = 2207, n_alt = 0
   Insn 1432: point = 2209, n_alt = 0
   Insn 1431: point = 2211, n_alt = 1
   Insn 1430: point = 2213, n_alt = 0
   Insn 1429: point = 2214, n_alt = 1
   Insn 1428: point = 2216, n_alt = 1
   Insn 1427: point = 2218, n_alt = 0
   Insn 1426: point = 2219, n_alt = 7
   Insn 1425: point = 2221, n_alt = 3
   Insn 1424: point = 2222, n_alt = 3
   Insn 1423: point = 2224, n_alt = 0
   Insn 1422: point = 2226, n_alt = 1
   Insn 1421: point = 2228, n_alt = 0
   Insn 1420: point = 2229, n_alt = 0
   Insn 1419: point = 2231, n_alt = 0
   Insn 1418: point = 2233, n_alt = 1
   Insn 1417: point = 2235, n_alt = 0
   Insn 1416: point = 2236, n_alt = 1
   Insn 1415: point = 2238, n_alt = 1
   Insn 1414: point = 2240, n_alt = 0
   Insn 1413: point = 2241, n_alt = 8
   Insn 1412: point = 2242, n_alt = 4
   Insn 1411: point = 2243, n_alt = 1
   Insn 1410: point = 2245, n_alt = 3
   Insn 1409: point = 2247, n_alt = 0
   Insn 1408: point = 2249, n_alt = 1
   Insn 1407: point = 2251, n_alt = 0
   Insn 1406: point = 2252, n_alt = 0
   Insn 1405: point = 2254, n_alt = 0
   Insn 1404: point = 2256, n_alt = 1
   Insn 1403: point = 2258, n_alt = 0
   Insn 1402: point = 2259, n_alt = 1
   Insn 1401: point = 2261, n_alt = 1
   Insn 1400: point = 2263, n_alt = 0
   Insn 1399: point = 2264, n_alt = 7
   Insn 1398: point = 2266, n_alt = 4
   Insn 1397: point = 2267, n_alt = 3
   Insn 1396: point = 2269, n_alt = 0
   Insn 1395: point = 2271, n_alt = 1
   Insn 1394: point = 2273, n_alt = 0
   Insn 1393: point = 2274, n_alt = 0
   Insn 1392: point = 2276, n_alt = 0
   Insn 1391: point = 2278, n_alt = 1
   Insn 1390: point = 2280, n_alt = 0
   Insn 1389: point = 2281, n_alt = 1
   Insn 1388: point = 2283, n_alt = 1
   Insn 1387: point = 2285, n_alt = 0
  BB 70
   Insn 1382: point = 2287, n_alt = -1
   Insn 1381: point = 2287, n_alt = 1
   Insn 1380: point = 2288, n_alt = 7
   Insn 1379: point = 2289, n_alt = 7
   Insn 1378: point = 2291, n_alt = 4
   Insn 1377: point = 2292, n_alt = 3
   Insn 1376: point = 2294, n_alt = 0
   Insn 1375: point = 2296, n_alt = 1
   Insn 1374: point = 2298, n_alt = 0
   Insn 1373: point = 2299, n_alt = 0
   Insn 1372: point = 2301, n_alt = 0
   Insn 1371: point = 2303, n_alt = 1
   Insn 1370: point = 2305, n_alt = 0
   Insn 1369: point = 2306, n_alt = 1
   Insn 1368: point = 2308, n_alt = 1
   Insn 1367: point = 2310, n_alt = 0
   Insn 1366: point = 2312, n_alt = 0
  BB 69
   Insn 1361: point = 2314, n_alt = -1
   Insn 1360: point = 2314, n_alt = 1
   Insn 1359: point = 2315, n_alt = 7
   Insn 1358: point = 2317, n_alt = 4
   Insn 1357: point = 2318, n_alt = 3
   Insn 1356: point = 2320, n_alt = 0
   Insn 1355: point = 2322, n_alt = 1
   Insn 1354: point = 2324, n_alt = 0
   Insn 1353: point = 2325, n_alt = 0
   Insn 1352: point = 2327, n_alt = 0
   Insn 1351: point = 2329, n_alt = 1
   Insn 1350: point = 2331, n_alt = 0
   Insn 1349: point = 2332, n_alt = 1
   Insn 1348: point = 2334, n_alt = 1
   Insn 1347: point = 2336, n_alt = 0
   Insn 1346: point = 2337, n_alt = 8
   Insn 1345: point = 2338, n_alt = 1
   Insn 1344: point = 2340, n_alt = 7
   Insn 1343: point = 2341, n_alt = -2
   Insn 1342: point = 2343, n_alt = 1
   Insn 1341: point = 2345, n_alt = 7
   Insn 1340: point = 2346, n_alt = 8
   Insn 1339: point = 2347, n_alt = 2
   Insn 1338: point = 2349, n_alt = 7
   Insn 1337: point = 2350, n_alt = 8
   Insn 1336: point = 2351, n_alt = 1
   Insn 1335: point = 2353, n_alt = 7
   Insn 1334: point = 2354, n_alt = -2
   Insn 1333: point = 2356, n_alt = 1
   Insn 1332: point = 2358, n_alt = 7
   Insn 1331: point = 2360, n_alt = 4
   Insn 1330: point = 2361, n_alt = 3
   Insn 1329: point = 2363, n_alt = 0
   Insn 1328: point = 2365, n_alt = 1
   Insn 1327: point = 2367, n_alt = 0
   Insn 1326: point = 2368, n_alt = 0
   Insn 1325: point = 2370, n_alt = 0
   Insn 1324: point = 2372, n_alt = 1
   Insn 1323: point = 2374, n_alt = 0
   Insn 1322: point = 2376, n_alt = 0
   Insn 1321: point = 2377, n_alt = 1
   Insn 1320: point = 2379, n_alt = 1
   Insn 1319: point = 2381, n_alt = 0
   Insn 1318: point = 2383, n_alt = 0
   Insn 1317: point = 2384, n_alt = 1
   Insn 1316: point = 2386, n_alt = 7
   Insn 1315: point = 2388, n_alt = 4
   Insn 1314: point = 2389, n_alt = 3
   Insn 1313: point = 2391, n_alt = 0
   Insn 1312: point = 2393, n_alt = 1
   Insn 1311: point = 2395, n_alt = 0
   Insn 1310: point = 2396, n_alt = 0
   Insn 1309: point = 2398, n_alt = 0
   Insn 1308: point = 2400, n_alt = 1
   Insn 1307: point = 2402, n_alt = 0
   Insn 1306: point = 2404, n_alt = 0
   Insn 1305: point = 2405, n_alt = 1
   Insn 1304: point = 2407, n_alt = 1
   Insn 1303: point = 2409, n_alt = 0
   Insn 1302: point = 2411, n_alt = 0
   Insn 1301: point = 2412, n_alt = 1
   Insn 1300: point = 2414, n_alt = 7
   Insn 1299: point = 2416, n_alt = 4
   Insn 1298: point = 2417, n_alt = 3
   Insn 1297: point = 2419, n_alt = 0
   Insn 1296: point = 2421, n_alt = 1
   Insn 1295: point = 2423, n_alt = 0
   Insn 1294: point = 2424, n_alt = 0
   Insn 1293: point = 2426, n_alt = 0
   Insn 1292: point = 2428, n_alt = 1
   Insn 1291: point = 2430, n_alt = 0
   Insn 1290: point = 2431, n_alt = 1
   Insn 1289: point = 2433, n_alt = 1
   Insn 1288: point = 2435, n_alt = 0
   Insn 1287: point = 2437, n_alt = 0
   Insn 1286: point = 2438, n_alt = 7
   Insn 1285: point = 2440, n_alt = 4
   Insn 1284: point = 2441, n_alt = 3
   Insn 1283: point = 2443, n_alt = 0
   Insn 1282: point = 2445, n_alt = 1
   Insn 1281: point = 2447, n_alt = 0
   Insn 1280: point = 2448, n_alt = 0
   Insn 1279: point = 2450, n_alt = 0
   Insn 1278: point = 2452, n_alt = 1
   Insn 1277: point = 2454, n_alt = 0
   Insn 1276: point = 2455, n_alt = 1
   Insn 1275: point = 2457, n_alt = 1
   Insn 1274: point = 2459, n_alt = 0
   Insn 1273: point = 2461, n_alt = 0
   Insn 1272: point = 2462, n_alt = 8
   Insn 1271: point = 2463, n_alt = 1
   Insn 1270: point = 2465, n_alt = 7
   Insn 1269: point = 2466, n_alt = -2
   Insn 1268: point = 2468, n_alt = 1
   Insn 1267: point = 2470, n_alt = 7
   Insn 1266: point = 2472, n_alt = 4
   Insn 1265: point = 2473, n_alt = 3
   Insn 1264: point = 2475, n_alt = 0
   Insn 1263: point = 2477, n_alt = 1
   Insn 1262: point = 2479, n_alt = 0
   Insn 1261: point = 2480, n_alt = 0
   Insn 1260: point = 2482, n_alt = 0
   Insn 1259: point = 2484, n_alt = 1
   Insn 1258: point = 2486, n_alt = 0
   Insn 1257: point = 2488, n_alt = 0
   Insn 1256: point = 2489, n_alt = 1
   Insn 1255: point = 2491, n_alt = 1
   Insn 1254: point = 2493, n_alt = 0
   Insn 1253: point = 2494, n_alt = 1
   Insn 1252: point = 2496, n_alt = 7
   Insn 1251: point = 2498, n_alt = 4
   Insn 1250: point = 2499, n_alt = 3
   Insn 1249: point = 2501, n_alt = 0
   Insn 1248: point = 2503, n_alt = 1
   Insn 1247: point = 2505, n_alt = 0
   Insn 1246: point = 2506, n_alt = 0
   Insn 1245: point = 2508, n_alt = 0
   Insn 1244: point = 2510, n_alt = 1
   Insn 1243: point = 2512, n_alt = 0
   Insn 1242: point = 2514, n_alt = 0
   Insn 1241: point = 2515, n_alt = 1
   Insn 1240: point = 2517, n_alt = 1
   Insn 1239: point = 2519, n_alt = 0
   Insn 1238: point = 2520, n_alt = 1
   Insn 1237: point = 2522, n_alt = 7
   Insn 1236: point = 2524, n_alt = 4
   Insn 1235: point = 2525, n_alt = 3
   Insn 1234: point = 2527, n_alt = 0
   Insn 1233: point = 2529, n_alt = 1
   Insn 1232: point = 2531, n_alt = 0
   Insn 1231: point = 2532, n_alt = 0
   Insn 1230: point = 2534, n_alt = 0
   Insn 1229: point = 2536, n_alt = 1
   Insn 1228: point = 2538, n_alt = 0
   Insn 1227: point = 2539, n_alt = 1
   Insn 1226: point = 2541, n_alt = 1
   Insn 1225: point = 2543, n_alt = 0
   Insn 1224: point = 2544, n_alt = 7
   Insn 1223: point = 2546, n_alt = 4
   Insn 1222: point = 2547, n_alt = 3
   Insn 1221: point = 2549, n_alt = 0
   Insn 1220: point = 2551, n_alt = 1
   Insn 1219: point = 2553, n_alt = 0
   Insn 1218: point = 2554, n_alt = 0
   Insn 1217: point = 2556, n_alt = 0
   Insn 1216: point = 2558, n_alt = 1
   Insn 1215: point = 2560, n_alt = 0
   Insn 1214: point = 2561, n_alt = 1
   Insn 1213: point = 2563, n_alt = 1
   Insn 1212: point = 2565, n_alt = 0
   Insn 1211: point = 2566, n_alt = 1
   Insn 1210: point = 2567, n_alt = 0
   Insn 1209: point = 2569, n_alt = 0
   Insn 1205: point = 2570, n_alt = 0
   Insn 1204: point = 2572, n_alt = 0
   Insn 1203: point = 2574, n_alt = 0
   Insn 1202: point = 2576, n_alt = 1
   Insn 1201: point = 2578, n_alt = 0
   Insn 1200: point = 2579, n_alt = 1
   Insn 1199: point = 2580, n_alt = 0
   Insn 1198: point = 2582, n_alt = 0
   Insn 1194: point = 2583, n_alt = 0
   Insn 1193: point = 2585, n_alt = 0
   Insn 1192: point = 2587, n_alt = 0
   Insn 1191: point = 2589, n_alt = 1
   Insn 1190: point = 2591, n_alt = 0
  BB 67
   Insn 1182: point = 2593, n_alt = 1
  BB 65
   Insn 1174: point = 2594, n_alt = 1
   Insn 1173: point = 2595, n_alt = 0
   Insn 1172: point = 2596, n_alt = 0
  BB 63
   Insn 1164: point = 2597, n_alt = 1
  BB 157
   Insn 3210: point = 2597, n_alt = -1
  BB 61
   Insn 1146: point = 2597, n_alt = -1
   Insn 1145: point = 2597, n_alt = 0
   Insn 1144: point = 2598, n_alt = 0
   Insn 1143: point = 2600, n_alt = 0
   Insn 1142: point = 2601, n_alt = 0
  BB 62
   Insn 3132: point = 2601, n_alt = -1
   Insn 1158: point = 2601, n_alt = 1
   Insn 1157: point = 2601, n_alt = 0
   Insn 1156: point = 2601, n_alt = 3
   Insn 1155: point = 2601, n_alt = -2
   Insn 1154: point = 2602, n_alt = 0
   Insn 1153: point = 2604, n_alt = 4
   Insn 1152: point = 2605, n_alt = 1
   Insn 1151: point = 2607, n_alt = 1
   Insn 1150: point = 2609, n_alt = 0
   Insn 1149: point = 2611, n_alt = 0
   Insn 1148: point = 2613, n_alt = 0
  BB 60
   Insn 1140: point = 2614, n_alt = 1
  BB 154
   Insn 3201: point = 2614, n_alt = -1
  BB 26
   Insn 371: point = 2614, n_alt = -1
   Insn 370: point = 2614, n_alt = 0
   Insn 369: point = 2615, n_alt = 0
   Insn 368: point = 2617, n_alt = 0
   Insn 367: point = 2618, n_alt = 0
  BB 59
   Insn 3130: point = 2618, n_alt = -1
   Insn 1134: point = 2618, n_alt = 1
  BB 155
   Insn 3204: point = 2618, n_alt = -1
  BB 28
   Insn 381: point = 2618, n_alt = -1
   Insn 380: point = 2618, n_alt = 0
   Insn 379: point = 2619, n_alt = 0
   Insn 378: point = 2621, n_alt = 0
   Insn 377: point = 2622, n_alt = 0
  BB 58
   Insn 3128: point = 2623, n_alt = -1
   Insn 1128: point = 2623, n_alt = 1
  BB 156
   Insn 3207: point = 2624, n_alt = -1
  BB 30
   Insn 389: point = 2625, n_alt = -1
   Insn 388: point = 2625, n_alt = 0
   Insn 387: point = 2626, n_alt = 0
   Insn 386: point = 2628, n_alt = 0
   Insn 385: point = 2629, n_alt = 0
  BB 57
   Insn 3126: point = 2630, n_alt = -1
   Insn 1122: point = 2630, n_alt = 1
  BB 56
   Insn 1119: point = 2631, n_alt = 8
   Insn 1118: point = 2632, n_alt = 4
   Insn 1117: point = 2633, n_alt = 1
   Insn 1116: point = 2635, n_alt = 3
   Insn 1115: point = 2637, n_alt = 0
   Insn 1114: point = 2639, n_alt = 0
   Insn 1113: point = 2641, n_alt = 0
   Insn 1112: point = 2642, n_alt = 0
   Insn 1111: point = 2644, n_alt = 0
   Insn 1110: point = 2646, n_alt = 0
   Insn 1109: point = 2648, n_alt = 0
   Insn 1108: point = 2649, n_alt = 1
   Insn 1107: point = 2651, n_alt = 0
   Insn 1106: point = 2653, n_alt = 0
   Insn 1105: point = 2654, n_alt = 1
   Insn 1104: point = 2656, n_alt = 7
   Insn 1103: point = 2657, n_alt = 7
   Insn 1102: point = 2659, n_alt = 4
   Insn 1101: point = 2660, n_alt = 3
   Insn 1100: point = 2662, n_alt = 0
   Insn 1099: point = 2664, n_alt = 0
   Insn 1098: point = 2666, n_alt = 0
   Insn 1097: point = 2667, n_alt = 0
   Insn 1096: point = 2669, n_alt = 0
   Insn 1095: point = 2671, n_alt = 0
   Insn 1094: point = 2673, n_alt = 0
   Insn 1093: point = 2674, n_alt = 1
   Insn 1092: point = 2676, n_alt = 0
   Insn 1091: point = 2678, n_alt = 0
   Insn 1090: point = 2679, n_alt = 8
   Insn 1089: point = 2680, n_alt = 7
  BB 54
   Insn 3124: point = 2682, n_alt = -1
   Insn 1080: point = 2682, n_alt = 8
   Insn 1079: point = 2683, n_alt = 7
  BB 52
   Insn 3121: point = 2685, n_alt = -1
   Insn 1058: point = 2685, n_alt = 8
   Insn 1057: point = 2686, n_alt = 7
  BB 50
   Insn 3118: point = 2688, n_alt = -1
   Insn 1044: point = 2688, n_alt = 8
   Insn 1043: point = 2689, n_alt = 7
  BB 55
   Insn 1086: point = 2691, n_alt = 8
   Insn 1085: point = 2692, n_alt = 7
  BB 53
   Insn 1074: point = 2694, n_alt = -1
   Insn 1073: point = 2694, n_alt = 1
   Insn 1072: point = 2695, n_alt = 7
   Insn 1071: point = 2696, n_alt = 7
   Insn 1070: point = 2698, n_alt = 4
   Insn 1069: point = 2699, n_alt = 3
   Insn 1068: point = 2701, n_alt = 0
   Insn 1067: point = 2703, n_alt = 0
   Insn 1066: point = 2705, n_alt = 0
   Insn 1065: point = 2706, n_alt = 0
   Insn 1064: point = 2708, n_alt = 0
   Insn 1063: point = 2710, n_alt = 0
  BB 51
   Insn 1052: point = 2712, n_alt = -1
   Insn 1051: point = 2712, n_alt = 1
   Insn 1050: point = 2713, n_alt = 7
   Insn 1049: point = 2714, n_alt = 7
  BB 49
   Insn 1038: point = 2716, n_alt = -1
   Insn 1037: point = 2716, n_alt = 1
   Insn 1036: point = 2717, n_alt = 7
   Insn 1035: point = 2718, n_alt = 8
   Insn 1034: point = 2719, n_alt = 1
   Insn 1033: point = 2721, n_alt = 7
   Insn 1032: point = 2722, n_alt = -2
   Insn 1031: point = 2724, n_alt = 2
   Insn 1030: point = 2726, n_alt = 7
   Insn 1029: point = 2727, n_alt = 1
   Insn 1028: point = 2729, n_alt = -2
   Insn 1027: point = 2731, n_alt = 1
   Insn 1026: point = 2733, n_alt = 7
   Insn 1025: point = 2734, n_alt = 7
   Insn 1024: point = 2735, n_alt = 1
   Insn 1023: point = 2737, n_alt = 7
   Insn 1022: point = 2738, n_alt = 7
   Insn 1021: point = 2739, n_alt = 8
   Insn 1020: point = 2740, n_alt = 1
   Insn 1019: point = 2742, n_alt = 7
   Insn 1018: point = 2743, n_alt = -2
   Insn 1017: point = 2745, n_alt = 1
   Insn 1016: point = 2747, n_alt = 1
  BB 48
   Insn 1013: point = 2750, n_alt = 7
  BB 47
   Insn 1011: point = 2752, n_alt = -1
   Insn 1010: point = 2752, n_alt = 0
   Insn 1009: point = 2753, n_alt = 0
   Insn 1008: point = 2755, n_alt = 0
   Insn 1007: point = 2757, n_alt = 0
   Insn 1006: point = 2758, n_alt = 1
   Insn 1005: point = 2758, n_alt = 0
   Insn 1004: point = 2760, n_alt = 0
   Insn 1003: point = 2761, n_alt = 1
   Insn 1002: point = 2762, n_alt = 7
   Insn 1001: point = 2763, n_alt = 7
   Insn 1000: point = 2764, n_alt = 8
   Insn 999: point = 2765, n_alt = 1
   Insn 3270: point = 2767, n_alt = 7
	   Creating copy r2393<-r2394@1000
   Insn 998: point = 2769, n_alt = -2
   Insn 997: point = 2770, n_alt = 0
   Insn 996: point = 2770, n_alt = -2
   Insn 995: point = 2771, n_alt = 2
   Insn 994: point = 2773, n_alt = -2
   Insn 993: point = 2775, n_alt = 2
   Insn 992: point = 2777, n_alt = 7
   Insn 991: point = 2778, n_alt = 7
   Insn 990: point = 2780, n_alt = 0
   Insn 989: point = 2782, n_alt = 4
   Insn 988: point = 2783, n_alt = 3
   Insn 987: point = 2785, n_alt = 0
   Insn 986: point = 2787, n_alt = 0
   Insn 985: point = 2789, n_alt = 0
   Insn 984: point = 2790, n_alt = 0
   Insn 983: point = 2792, n_alt = 0
   Insn 982: point = 2794, n_alt = 0
   Insn 981: point = 2796, n_alt = 0
   Insn 980: point = 2797, n_alt = 1
   Insn 979: point = 2799, n_alt = 0
   Insn 978: point = 2801, n_alt = 0
   Insn 977: point = 2802, n_alt = 1
   Insn 976: point = 2804, n_alt = 7
   Insn 975: point = 2805, n_alt = -2
   Insn 974: point = 2807, n_alt = 2
   Insn 973: point = 2809, n_alt = 7
   Insn 972: point = 2810, n_alt = 7
   Insn 971: point = 2812, n_alt = 0
   Insn 970: point = 2814, n_alt = 4
   Insn 969: point = 2815, n_alt = 3
   Insn 968: point = 2817, n_alt = 0
   Insn 967: point = 2819, n_alt = 0
   Insn 966: point = 2821, n_alt = 0
   Insn 965: point = 2822, n_alt = 0
   Insn 964: point = 2824, n_alt = 0
   Insn 963: point = 2826, n_alt = 0
   Insn 962: point = 2828, n_alt = 0
   Insn 961: point = 2829, n_alt = 1
   Insn 960: point = 2831, n_alt = 0
   Insn 959: point = 2833, n_alt = 0
   Insn 3260: point = 2834, n_alt = 8
	   Creating copy r2385->r2394@1000
   Insn 958: point = 2836, n_alt = 2
   Insn 3259: point = 2836, n_alt = -2
	Hard reg 21 is preferable by r2385 with profit 1000
   Insn 957: point = 2838, n_alt = 7
  BB 46
   Insn 954: point = 2840, n_alt = 8
   Insn 953: point = 2841, n_alt = 7
   Insn 952: point = 2842, n_alt = 8
   Insn 951: point = 2843, n_alt = 7
  BB 45
   Insn 946: point = 2845, n_alt = -1
   Insn 945: point = 2845, n_alt = 1
   Insn 944: point = 2846, n_alt = 7
   Insn 943: point = 2847, n_alt = 8
   Insn 942: point = 2848, n_alt = 7
   Insn 941: point = 2849, n_alt = 8
   Insn 940: point = 2850, n_alt = 7
   Insn 939: point = 2851, n_alt = 8
  BB 44
   Insn 936: point = 2853, n_alt = 7
  BB 43
   Insn 934: point = 2855, n_alt = -1
   Insn 933: point = 2855, n_alt = 0
   Insn 932: point = 2856, n_alt = 0
   Insn 931: point = 2858, n_alt = 0
   Insn 930: point = 2860, n_alt = 0
   Insn 929: point = 2861, n_alt = 1
   Insn 928: point = 2861, n_alt = 0
   Insn 927: point = 2863, n_alt = 0
   Insn 926: point = 2864, n_alt = 1
   Insn 925: point = 2864, n_alt = 7
   Insn 924: point = 2865, n_alt = 8
   Insn 923: point = 2866, n_alt = 2
   Insn 922: point = 2868, n_alt = 7
   Insn 921: point = 2869, n_alt = 7
   Insn 920: point = 2871, n_alt = 0
   Insn 919: point = 2873, n_alt = 4
   Insn 918: point = 2874, n_alt = 3
   Insn 917: point = 2876, n_alt = 0
   Insn 916: point = 2878, n_alt = 0
   Insn 915: point = 2880, n_alt = 0
   Insn 914: point = 2881, n_alt = 0
   Insn 913: point = 2883, n_alt = 0
   Insn 912: point = 2885, n_alt = 0
   Insn 911: point = 2887, n_alt = 0
   Insn 910: point = 2888, n_alt = 1
   Insn 909: point = 2890, n_alt = 0
   Insn 908: point = 2892, n_alt = 0
   Insn 907: point = 2893, n_alt = 8
   Insn 906: point = 2894, n_alt = 3
   Insn 905: point = 2895, n_alt = 1
   Insn 904: point = 2897, n_alt = 3
   Insn 903: point = 2899, n_alt = 0
   Insn 902: point = 2901, n_alt = 0
   Insn 901: point = 2903, n_alt = 0
   Insn 900: point = 2904, n_alt = 0
   Insn 899: point = 2906, n_alt = 0
   Insn 898: point = 2908, n_alt = 0
   Insn 897: point = 2910, n_alt = 0
   Insn 896: point = 2911, n_alt = 1
   Insn 895: point = 2913, n_alt = 0
   Insn 894: point = 2915, n_alt = 0
   Insn 893: point = 2916, n_alt = 1
   Insn 892: point = 2918, n_alt = 7
   Insn 3258: point = 2919, n_alt = -2
	Hard reg 23 is preferable by r2384 with profit 1000
   Insn 891: point = 2921, n_alt = 1
   Insn 3257: point = 2921, n_alt = -2
	Hard reg 23 is preferable by r2384 with profit 1000
	Hard reg 21 is preferable by r2384 with profit 1000
   Insn 890: point = 2923, n_alt = -2
   Insn 889: point = 2925, n_alt = 1
   Insn 888: point = 2927, n_alt = 7
   Insn 887: point = 2929, n_alt = 4
   Insn 886: point = 2930, n_alt = 3
   Insn 885: point = 2932, n_alt = 0
   Insn 884: point = 2934, n_alt = 0
   Insn 883: point = 2936, n_alt = 0
   Insn 882: point = 2937, n_alt = 0
   Insn 881: point = 2939, n_alt = 0
   Insn 880: point = 2941, n_alt = 0
   Insn 879: point = 2943, n_alt = 0
   Insn 878: point = 2944, n_alt = 1
   Insn 877: point = 2946, n_alt = 0
   Insn 876: point = 2948, n_alt = 0
   Insn 875: point = 2949, n_alt = 7
   Insn 874: point = 2951, n_alt = 0
   Insn 873: point = 2953, n_alt = 4
   Insn 872: point = 2954, n_alt = 3
   Insn 871: point = 2956, n_alt = 0
   Insn 870: point = 2958, n_alt = 0
   Insn 869: point = 2960, n_alt = 0
   Insn 868: point = 2961, n_alt = 0
   Insn 867: point = 2963, n_alt = 0
   Insn 866: point = 2965, n_alt = 0
   Insn 865: point = 2967, n_alt = 0
   Insn 864: point = 2968, n_alt = 1
   Insn 863: point = 2970, n_alt = 0
   Insn 862: point = 2972, n_alt = 0
   Insn 861: point = 2973, n_alt = 7
   Insn 860: point = 2975, n_alt = 3
   Insn 859: point = 2976, n_alt = 3
   Insn 858: point = 2978, n_alt = 0
   Insn 857: point = 2980, n_alt = 0
   Insn 856: point = 2982, n_alt = 0
   Insn 855: point = 2983, n_alt = 0
   Insn 854: point = 2985, n_alt = 0
   Insn 853: point = 2987, n_alt = 0
   Insn 852: point = 2989, n_alt = 0
   Insn 851: point = 2990, n_alt = 1
   Insn 850: point = 2992, n_alt = 0
   Insn 849: point = 2994, n_alt = 0
   Insn 848: point = 2995, n_alt = 8
   Insn 847: point = 2996, n_alt = 3
   Insn 846: point = 2997, n_alt = 1
   Insn 845: point = 2999, n_alt = 3
   Insn 844: point = 3001, n_alt = 0
   Insn 843: point = 3003, n_alt = 0
   Insn 842: point = 3005, n_alt = 0
   Insn 841: point = 3006, n_alt = 0
   Insn 840: point = 3008, n_alt = 0
   Insn 839: point = 3010, n_alt = 0
   Insn 838: point = 3012, n_alt = 0
   Insn 837: point = 3013, n_alt = 1
   Insn 836: point = 3015, n_alt = 0
   Insn 835: point = 3017, n_alt = 0
   Insn 834: point = 3018, n_alt = 1
   Insn 833: point = 3020, n_alt = 7
   Insn 832: point = 3022, n_alt = 4
   Insn 831: point = 3023, n_alt = 3
   Insn 830: point = 3025, n_alt = 0
   Insn 829: point = 3027, n_alt = 0
   Insn 828: point = 3029, n_alt = 0
   Insn 827: point = 3030, n_alt = 0
   Insn 826: point = 3032, n_alt = 0
   Insn 825: point = 3034, n_alt = 0
   Insn 824: point = 3036, n_alt = 0
   Insn 823: point = 3037, n_alt = 1
   Insn 822: point = 3039, n_alt = 0
   Insn 821: point = 3041, n_alt = 0
   Insn 820: point = 3042, n_alt = 7
   Insn 819: point = 3044, n_alt = 3
   Insn 818: point = 3045, n_alt = 3
   Insn 817: point = 3047, n_alt = 0
   Insn 816: point = 3049, n_alt = 0
   Insn 815: point = 3051, n_alt = 0
   Insn 814: point = 3052, n_alt = 0
   Insn 813: point = 3054, n_alt = 0
   Insn 812: point = 3056, n_alt = 0
   Insn 811: point = 3058, n_alt = 0
   Insn 810: point = 3059, n_alt = 1
   Insn 809: point = 3061, n_alt = 0
   Insn 808: point = 3063, n_alt = 0
   Insn 807: point = 3064, n_alt = 8
   Insn 806: point = 3065, n_alt = 3
   Insn 805: point = 3066, n_alt = 1
   Insn 804: point = 3068, n_alt = 3
   Insn 803: point = 3070, n_alt = 0
   Insn 802: point = 3072, n_alt = 0
   Insn 801: point = 3074, n_alt = 0
   Insn 800: point = 3075, n_alt = 0
   Insn 799: point = 3077, n_alt = 0
   Insn 798: point = 3079, n_alt = 0
   Insn 797: point = 3081, n_alt = 0
   Insn 796: point = 3082, n_alt = 1
   Insn 795: point = 3084, n_alt = 0
   Insn 794: point = 3086, n_alt = 0
   Insn 793: point = 3087, n_alt = 1
   Insn 792: point = 3089, n_alt = 7
   Insn 791: point = 3091, n_alt = 0
   Insn 790: point = 3093, n_alt = 4
   Insn 789: point = 3094, n_alt = 3
   Insn 788: point = 3096, n_alt = 0
   Insn 787: point = 3098, n_alt = 0
   Insn 786: point = 3100, n_alt = 0
   Insn 785: point = 3101, n_alt = 0
   Insn 784: point = 3103, n_alt = 0
   Insn 783: point = 3105, n_alt = 0
   Insn 782: point = 3107, n_alt = 0
   Insn 781: point = 3108, n_alt = 1
   Insn 780: point = 3110, n_alt = 0
   Insn 779: point = 3112, n_alt = 0
   Insn 778: point = 3113, n_alt = 7
   Insn 777: point = 3115, n_alt = 3
   Insn 776: point = 3116, n_alt = 3
   Insn 775: point = 3118, n_alt = 0
   Insn 774: point = 3120, n_alt = 0
   Insn 773: point = 3122, n_alt = 0
   Insn 772: point = 3123, n_alt = 0
   Insn 771: point = 3125, n_alt = 0
   Insn 770: point = 3127, n_alt = 0
   Insn 769: point = 3129, n_alt = 0
   Insn 768: point = 3130, n_alt = 1
   Insn 767: point = 3132, n_alt = 0
   Insn 766: point = 3134, n_alt = 0
   Insn 765: point = 3135, n_alt = 8
   Insn 764: point = 3136, n_alt = 3
   Insn 763: point = 3137, n_alt = 1
   Insn 762: point = 3139, n_alt = 3
   Insn 761: point = 3141, n_alt = 0
   Insn 760: point = 3143, n_alt = 0
   Insn 759: point = 3145, n_alt = 0
   Insn 758: point = 3146, n_alt = 0
   Insn 757: point = 3148, n_alt = 0
   Insn 756: point = 3150, n_alt = 0
   Insn 755: point = 3152, n_alt = 0
   Insn 754: point = 3153, n_alt = 1
   Insn 753: point = 3155, n_alt = 0
   Insn 752: point = 3157, n_alt = 0
   Insn 751: point = 3158, n_alt = 1
   Insn 750: point = 3160, n_alt = 7
   Insn 749: point = 3162, n_alt = 0
   Insn 748: point = 3164, n_alt = 4
   Insn 747: point = 3165, n_alt = 3
   Insn 746: point = 3167, n_alt = 0
   Insn 745: point = 3169, n_alt = 0
   Insn 744: point = 3171, n_alt = 0
   Insn 743: point = 3172, n_alt = 0
   Insn 742: point = 3174, n_alt = 0
   Insn 741: point = 3176, n_alt = 0
   Insn 740: point = 3178, n_alt = 0
   Insn 739: point = 3179, n_alt = 1
   Insn 738: point = 3181, n_alt = 0
   Insn 737: point = 3183, n_alt = 0
   Insn 736: point = 3184, n_alt = 7
   Insn 735: point = 3186, n_alt = 3
   Insn 734: point = 3187, n_alt = 3
   Insn 733: point = 3189, n_alt = 0
   Insn 732: point = 3191, n_alt = 0
   Insn 731: point = 3193, n_alt = 0
   Insn 730: point = 3194, n_alt = 0
   Insn 729: point = 3196, n_alt = 0
   Insn 728: point = 3198, n_alt = 0
   Insn 727: point = 3200, n_alt = 0
   Insn 726: point = 3201, n_alt = 1
   Insn 725: point = 3203, n_alt = 0
   Insn 724: point = 3205, n_alt = 0
   Insn 723: point = 3206, n_alt = 1
   Insn 722: point = 3207, n_alt = 3
   Insn 721: point = 3208, n_alt = 0
   Insn 720: point = 3210, n_alt = 0
   Insn 719: point = 3211, n_alt = 3
   Insn 718: point = 3213, n_alt = 0
   Insn 717: point = 3215, n_alt = 0
   Insn 716: point = 3217, n_alt = 0
   Insn 715: point = 3218, n_alt = 0
   Insn 714: point = 3220, n_alt = 0
   Insn 713: point = 3222, n_alt = 0
   Insn 712: point = 3224, n_alt = 0
   Insn 711: point = 3225, n_alt = 1
   Insn 710: point = 3227, n_alt = 0
   Insn 709: point = 3229, n_alt = 0
   Insn 708: point = 3230, n_alt = 0
   Insn 707: point = 3232, n_alt = 3
   Insn 706: point = 3233, n_alt = 3
   Insn 705: point = 3235, n_alt = 0
   Insn 704: point = 3237, n_alt = 0
   Insn 703: point = 3239, n_alt = 0
   Insn 702: point = 3240, n_alt = 0
   Insn 701: point = 3242, n_alt = 0
   Insn 700: point = 3244, n_alt = 0
   Insn 699: point = 3246, n_alt = 0
   Insn 698: point = 3247, n_alt = 1
   Insn 697: point = 3249, n_alt = 0
   Insn 696: point = 3251, n_alt = 0
   Insn 695: point = 3252, n_alt = 8
   Insn 694: point = 3253, n_alt = 4
   Insn 693: point = 3254, n_alt = 1
   Insn 692: point = 3256, n_alt = 7
   Insn 691: point = 3257, n_alt = 3
   Insn 690: point = 3259, n_alt = 0
   Insn 689: point = 3261, n_alt = 0
   Insn 688: point = 3263, n_alt = 0
   Insn 687: point = 3264, n_alt = 0
   Insn 686: point = 3266, n_alt = 0
   Insn 685: point = 3268, n_alt = 0
   Insn 684: point = 3270, n_alt = 0
   Insn 683: point = 3271, n_alt = 1
   Insn 682: point = 3273, n_alt = 0
   Insn 681: point = 3275, n_alt = 0
   Insn 680: point = 3276, n_alt = 7
   Insn 679: point = 3278, n_alt = 4
   Insn 678: point = 3279, n_alt = 3
   Insn 677: point = 3281, n_alt = 0
   Insn 676: point = 3283, n_alt = 0
   Insn 675: point = 3285, n_alt = 0
   Insn 674: point = 3286, n_alt = 0
   Insn 673: point = 3288, n_alt = 0
   Insn 672: point = 3290, n_alt = 0
   Insn 671: point = 3292, n_alt = 0
   Insn 670: point = 3293, n_alt = 1
   Insn 669: point = 3295, n_alt = 0
   Insn 668: point = 3297, n_alt = 0
   Insn 667: point = 3298, n_alt = 8
   Insn 666: point = 3299, n_alt = 4
   Insn 665: point = 3300, n_alt = 1
   Insn 664: point = 3302, n_alt = 3
   Insn 663: point = 3304, n_alt = 0
   Insn 662: point = 3306, n_alt = 0
   Insn 661: point = 3308, n_alt = 0
   Insn 660: point = 3309, n_alt = 0
   Insn 659: point = 3311, n_alt = 0
   Insn 658: point = 3313, n_alt = 0
   Insn 657: point = 3315, n_alt = 0
   Insn 656: point = 3316, n_alt = 1
   Insn 655: point = 3318, n_alt = 0
   Insn 654: point = 3320, n_alt = 0
   Insn 653: point = 3321, n_alt = 7
   Insn 652: point = 3323, n_alt = 4
   Insn 651: point = 3324, n_alt = 3
   Insn 650: point = 3326, n_alt = 0
   Insn 649: point = 3328, n_alt = 0
   Insn 648: point = 3330, n_alt = 0
   Insn 647: point = 3331, n_alt = 0
   Insn 646: point = 3333, n_alt = 0
   Insn 645: point = 3335, n_alt = 0
   Insn 644: point = 3337, n_alt = 0
   Insn 643: point = 3338, n_alt = 1
   Insn 642: point = 3340, n_alt = 0
   Insn 641: point = 3342, n_alt = 0
   Insn 640: point = 3343, n_alt = 8
   Insn 639: point = 3344, n_alt = 2
   Insn 638: point = 3346, n_alt = 7
   Insn 637: point = 3348, n_alt = 4
   Insn 636: point = 3349, n_alt = 3
   Insn 635: point = 3351, n_alt = 0
   Insn 634: point = 3353, n_alt = 0
   Insn 633: point = 3355, n_alt = 0
   Insn 632: point = 3356, n_alt = 0
   Insn 631: point = 3358, n_alt = 0
   Insn 630: point = 3360, n_alt = 0
   Insn 629: point = 3362, n_alt = 0
   Insn 628: point = 3363, n_alt = 1
   Insn 627: point = 3365, n_alt = 0
   Insn 626: point = 3367, n_alt = 0
   Insn 625: point = 3368, n_alt = 7
   Insn 624: point = 3370, n_alt = 4
   Insn 623: point = 3371, n_alt = 3
   Insn 622: point = 3373, n_alt = 0
   Insn 621: point = 3375, n_alt = 0
   Insn 620: point = 3377, n_alt = 0
   Insn 619: point = 3378, n_alt = 0
   Insn 618: point = 3380, n_alt = 0
   Insn 617: point = 3382, n_alt = 0
   Insn 616: point = 3384, n_alt = 0
   Insn 615: point = 3385, n_alt = 1
   Insn 614: point = 3387, n_alt = 0
   Insn 613: point = 3389, n_alt = 0
   Insn 612: point = 3391, n_alt = 0
  BB 42
   Insn 607: point = 3393, n_alt = -1
   Insn 606: point = 3393, n_alt = 1
   Insn 605: point = 3394, n_alt = 7
   Insn 604: point = 3395, n_alt = 7
   Insn 603: point = 3397, n_alt = 4
   Insn 602: point = 3398, n_alt = 3
   Insn 601: point = 3400, n_alt = 0
   Insn 600: point = 3402, n_alt = 0
   Insn 599: point = 3404, n_alt = 0
   Insn 598: point = 3405, n_alt = 0
   Insn 597: point = 3407, n_alt = 0
   Insn 596: point = 3409, n_alt = 0
   Insn 595: point = 3411, n_alt = 0
   Insn 594: point = 3412, n_alt = 1
   Insn 593: point = 3414, n_alt = 0
   Insn 592: point = 3416, n_alt = 0
   Insn 591: point = 3418, n_alt = 0
  BB 41
   Insn 586: point = 3420, n_alt = -1
   Insn 585: point = 3420, n_alt = 1
   Insn 584: point = 3421, n_alt = 7
   Insn 583: point = 3423, n_alt = 4
   Insn 582: point = 3424, n_alt = 3
   Insn 581: point = 3426, n_alt = 0
   Insn 580: point = 3428, n_alt = 0
   Insn 579: point = 3430, n_alt = 0
   Insn 578: point = 3431, n_alt = 0
   Insn 577: point = 3433, n_alt = 0
   Insn 576: point = 3435, n_alt = 0
   Insn 575: point = 3437, n_alt = 0
   Insn 574: point = 3438, n_alt = 1
   Insn 573: point = 3440, n_alt = 0
   Insn 572: point = 3442, n_alt = 0
   Insn 571: point = 3443, n_alt = 8
   Insn 570: point = 3444, n_alt = 1
   Insn 569: point = 3446, n_alt = 7
   Insn 568: point = 3447, n_alt = -2
   Insn 567: point = 3449, n_alt = 1
   Insn 566: point = 3451, n_alt = 7
   Insn 565: point = 3453, n_alt = 4
   Insn 564: point = 3454, n_alt = 3
   Insn 563: point = 3456, n_alt = 0
   Insn 562: point = 3458, n_alt = 0
   Insn 561: point = 3460, n_alt = 0
   Insn 560: point = 3461, n_alt = 0
   Insn 559: point = 3463, n_alt = 0
   Insn 558: point = 3465, n_alt = 0
   Insn 557: point = 3467, n_alt = 0
   Insn 556: point = 3468, n_alt = 1
   Insn 555: point = 3470, n_alt = 0
   Insn 554: point = 3472, n_alt = 0
   Insn 553: point = 3474, n_alt = 0
   Insn 552: point = 3475, n_alt = 7
   Insn 551: point = 3477, n_alt = 4
   Insn 550: point = 3478, n_alt = 3
   Insn 549: point = 3480, n_alt = 0
   Insn 548: point = 3482, n_alt = 0
   Insn 547: point = 3484, n_alt = 0
   Insn 546: point = 3485, n_alt = 0
   Insn 545: point = 3487, n_alt = 0
   Insn 544: point = 3489, n_alt = 0
   Insn 543: point = 3491, n_alt = 0
   Insn 542: point = 3492, n_alt = 1
   Insn 541: point = 3494, n_alt = 0
   Insn 540: point = 3496, n_alt = 0
  BB 39
   Insn 3115: point = 3498, n_alt = -1
   Insn 521: point = 3498, n_alt = 8
   Insn 520: point = 3499, n_alt = 7
   Insn 519: point = 3500, n_alt = 4
   Insn 518: point = 3501, n_alt = 3
   Insn 517: point = 3503, n_alt = 0
   Insn 516: point = 3505, n_alt = 0
   Insn 515: point = 3507, n_alt = 0
   Insn 514: point = 3508, n_alt = 0
   Insn 513: point = 3510, n_alt = 0
   Insn 512: point = 3512, n_alt = 0
  BB 38
   Insn 507: point = 3514, n_alt = -1
   Insn 506: point = 3514, n_alt = 1
   Insn 505: point = 3515, n_alt = 7
  BB 37
   Insn 504: point = 3517, n_alt = -1
   Insn 503: point = 3517, n_alt = 1
   Insn 502: point = 3518, n_alt = 7
  BB 34
   Insn 3110: point = 3520, n_alt = -1
   Insn 463: point = 3520, n_alt = 8
   Insn 462: point = 3521, n_alt = 7
   Insn 461: point = 3522, n_alt = 4
   Insn 460: point = 3523, n_alt = 3
   Insn 459: point = 3525, n_alt = 0
   Insn 458: point = 3527, n_alt = 0
   Insn 457: point = 3529, n_alt = 0
   Insn 456: point = 3530, n_alt = 0
   Insn 455: point = 3532, n_alt = 0
   Insn 454: point = 3534, n_alt = 0
  BB 36
   Insn 3113: point = 3536, n_alt = -1
   Insn 497: point = 3536, n_alt = 8
   Insn 496: point = 3537, n_alt = 7
   Insn 495: point = 3538, n_alt = 4
   Insn 494: point = 3539, n_alt = 3
   Insn 493: point = 3541, n_alt = 0
   Insn 492: point = 3543, n_alt = 0
   Insn 491: point = 3545, n_alt = 0
   Insn 490: point = 3546, n_alt = 0
   Insn 489: point = 3548, n_alt = 0
   Insn 488: point = 3550, n_alt = 0
  BB 35
   Insn 483: point = 3552, n_alt = -1
   Insn 482: point = 3552, n_alt = 1
   Insn 481: point = 3553, n_alt = 7
   Insn 480: point = 3555, n_alt = 0
   Insn 479: point = 3557, n_alt = 4
   Insn 478: point = 3558, n_alt = 3
   Insn 477: point = 3560, n_alt = 0
   Insn 476: point = 3562, n_alt = 0
   Insn 475: point = 3564, n_alt = 0
   Insn 474: point = 3565, n_alt = 0
   Insn 473: point = 3567, n_alt = 0
   Insn 472: point = 3569, n_alt = 0
   Insn 471: point = 3571, n_alt = 0
   Insn 470: point = 3572, n_alt = 1
   Insn 469: point = 3574, n_alt = 0
   Insn 468: point = 3576, n_alt = 0
  BB 33
   Insn 449: point = 3578, n_alt = -1
   Insn 448: point = 3578, n_alt = 1
   Insn 447: point = 3579, n_alt = 7
   Insn 446: point = 3580, n_alt = 7
   Insn 445: point = 3582, n_alt = 0
   Insn 444: point = 3584, n_alt = 4
   Insn 443: point = 3585, n_alt = 3
   Insn 442: point = 3587, n_alt = 0
   Insn 441: point = 3589, n_alt = 0
   Insn 440: point = 3591, n_alt = 0
   Insn 439: point = 3592, n_alt = 0
   Insn 438: point = 3594, n_alt = 0
   Insn 437: point = 3596, n_alt = 0
   Insn 436: point = 3598, n_alt = 0
   Insn 435: point = 3599, n_alt = 1
   Insn 434: point = 3601, n_alt = 0
   Insn 433: point = 3603, n_alt = 0
  BB 40
   Insn 535: point = 3605, n_alt = 8
   Insn 534: point = 3606, n_alt = 7
   Insn 533: point = 3607, n_alt = 4
   Insn 532: point = 3608, n_alt = 3
   Insn 531: point = 3610, n_alt = 0
   Insn 530: point = 3612, n_alt = 0
   Insn 529: point = 3614, n_alt = 0
   Insn 528: point = 3615, n_alt = 0
   Insn 527: point = 3617, n_alt = 0
   Insn 526: point = 3619, n_alt = 0
  BB 32
   Insn 428: point = 3621, n_alt = -1
   Insn 427: point = 3621, n_alt = 1
   Insn 426: point = 3622, n_alt = 7
   Insn 425: point = 3624, n_alt = 4
   Insn 424: point = 3625, n_alt = 3
   Insn 423: point = 3627, n_alt = 0
   Insn 422: point = 3629, n_alt = 0
   Insn 421: point = 3631, n_alt = 0
   Insn 420: point = 3632, n_alt = 0
   Insn 419: point = 3634, n_alt = 0
   Insn 418: point = 3636, n_alt = 0
   Insn 417: point = 3638, n_alt = 0
   Insn 416: point = 3639, n_alt = 1
   Insn 415: point = 3641, n_alt = 0
   Insn 414: point = 3643, n_alt = 0
   Insn 413: point = 3644, n_alt = 8
   Insn 412: point = 3645, n_alt = 7
   Insn 411: point = 3647, n_alt = 4
   Insn 410: point = 3648, n_alt = 3
   Insn 409: point = 3650, n_alt = 0
   Insn 408: point = 3652, n_alt = 0
   Insn 407: point = 3654, n_alt = 0
   Insn 406: point = 3655, n_alt = 0
   Insn 405: point = 3657, n_alt = 0
   Insn 404: point = 3659, n_alt = 0
  BB 31
   Insn 402: point = 3661, n_alt = -1
   Insn 401: point = 3661, n_alt = 0
   Insn 400: point = 3662, n_alt = 0
   Insn 399: point = 3664, n_alt = 0
   Insn 398: point = 3666, n_alt = 4
   Insn 397: point = 3667, n_alt = 3
   Insn 396: point = 3669, n_alt = 0
   Insn 395: point = 3671, n_alt = 0
   Insn 394: point = 3673, n_alt = 0
   Insn 393: point = 3674, n_alt = 0
   Insn 392: point = 3676, n_alt = 0
   Insn 391: point = 3678, n_alt = 0
  BB 29
   Insn 383: point = 3680, n_alt = 1
  BB 27
   Insn 375: point = 3681, n_alt = 1
   Insn 374: point = 3682, n_alt = 0
   Insn 373: point = 3683, n_alt = 0
  BB 25
   Insn 365: point = 3684, n_alt = 1
   Insn 362: point = 3684, n_alt = 0
   Insn 361: point = 3684, n_alt = -2
   Insn 360: point = 3685, n_alt = 0
   Insn 359: point = 3685, n_alt = -2
   Insn 358: point = 3686, n_alt = 2
   Insn 357: point = 3687, n_alt = -2
   Insn 356: point = 3689, n_alt = 4
  BB 152
   Insn 3195: point = 3690, n_alt = -1
  BB 20
   Insn 153: point = 3690, n_alt = -1
   Insn 152: point = 3690, n_alt = 0
   Insn 151: point = 3691, n_alt = 0
   Insn 150: point = 3693, n_alt = 0
   Insn 149: point = 3694, n_alt = 0
  BB 24
   Insn 3106: point = 3695, n_alt = -1
   Insn 350: point = 3695, n_alt = 1
  BB 153
   Insn 3198: point = 3696, n_alt = -1
  BB 22
   Insn 161: point = 3697, n_alt = -1
   Insn 160: point = 3697, n_alt = 0
   Insn 159: point = 3698, n_alt = 0
   Insn 158: point = 3700, n_alt = 0
   Insn 157: point = 3701, n_alt = 0
  BB 23
   Insn 3104: point = 3702, n_alt = -1
   Insn 344: point = 3702, n_alt = 1
   Insn 343: point = 3702, n_alt = 8
   Insn 342: point = 3703, n_alt = 7
   Insn 341: point = 3704, n_alt = 3
   Insn 340: point = 3705, n_alt = 3
   Insn 339: point = 3707, n_alt = 0
   Insn 338: point = 3709, n_alt = 1
   Insn 337: point = 3711, n_alt = 0
   Insn 336: point = 3712, n_alt = 0
   Insn 335: point = 3714, n_alt = 0
   Insn 334: point = 3716, n_alt = 1
   Insn 333: point = 3718, n_alt = 0
   Insn 332: point = 3719, n_alt = 1
   Insn 331: point = 3721, n_alt = 1
   Insn 330: point = 3723, n_alt = 0
   Insn 329: point = 3724, n_alt = 8
   Insn 328: point = 3725, n_alt = 7
   Insn 327: point = 3726, n_alt = 4
   Insn 326: point = 3727, n_alt = 3
   Insn 325: point = 3729, n_alt = 0
   Insn 324: point = 3731, n_alt = 1
   Insn 323: point = 3733, n_alt = 0
   Insn 322: point = 3734, n_alt = 0
   Insn 321: point = 3736, n_alt = 0
   Insn 320: point = 3738, n_alt = 1
   Insn 319: point = 3740, n_alt = 0
   Insn 318: point = 3741, n_alt = 1
   Insn 317: point = 3743, n_alt = 1
   Insn 316: point = 3745, n_alt = 0
   Insn 315: point = 3746, n_alt = 8
   Insn 314: point = 3747, n_alt = 7
   Insn 313: point = 3748, n_alt = 4
   Insn 312: point = 3749, n_alt = 3
   Insn 311: point = 3751, n_alt = 0
   Insn 310: point = 3753, n_alt = 1
   Insn 309: point = 3755, n_alt = 0
   Insn 308: point = 3756, n_alt = 0
   Insn 307: point = 3758, n_alt = 0
   Insn 306: point = 3760, n_alt = 1
   Insn 305: point = 3762, n_alt = 0
   Insn 304: point = 3763, n_alt = 1
   Insn 303: point = 3765, n_alt = 1
   Insn 302: point = 3767, n_alt = 0
   Insn 301: point = 3768, n_alt = 8
   Insn 300: point = 3769, n_alt = 7
   Insn 299: point = 3770, n_alt = 4
   Insn 298: point = 3771, n_alt = 3
   Insn 297: point = 3773, n_alt = 0
   Insn 296: point = 3775, n_alt = 1
   Insn 295: point = 3777, n_alt = 0
   Insn 294: point = 3778, n_alt = 0
   Insn 293: point = 3780, n_alt = 0
   Insn 292: point = 3782, n_alt = 1
   Insn 291: point = 3784, n_alt = 0
   Insn 290: point = 3785, n_alt = 1
   Insn 289: point = 3787, n_alt = 1
   Insn 288: point = 3789, n_alt = 0
   Insn 287: point = 3790, n_alt = 1
   Insn 286: point = 3791, n_alt = 3
   Insn 285: point = 3792, n_alt = 3
   Insn 284: point = 3794, n_alt = 0
   Insn 283: point = 3796, n_alt = 1
   Insn 282: point = 3798, n_alt = 0
   Insn 281: point = 3799, n_alt = 0
   Insn 280: point = 3801, n_alt = 0
   Insn 279: point = 3803, n_alt = 1
   Insn 278: point = 3805, n_alt = 0
   Insn 277: point = 3806, n_alt = 1
   Insn 276: point = 3808, n_alt = 1
   Insn 275: point = 3810, n_alt = 0
   Insn 274: point = 3811, n_alt = 8
   Insn 273: point = 3812, n_alt = 7
   Insn 272: point = 3813, n_alt = 3
   Insn 271: point = 3814, n_alt = 3
   Insn 270: point = 3816, n_alt = 0
   Insn 269: point = 3818, n_alt = 1
   Insn 268: point = 3820, n_alt = 0
   Insn 267: point = 3821, n_alt = 0
   Insn 266: point = 3823, n_alt = 0
   Insn 265: point = 3825, n_alt = 1
   Insn 264: point = 3827, n_alt = 0
   Insn 263: point = 3828, n_alt = 1
   Insn 262: point = 3830, n_alt = 1
   Insn 261: point = 3832, n_alt = 0
   Insn 260: point = 3833, n_alt = 8
   Insn 259: point = 3834, n_alt = 7
   Insn 258: point = 3835, n_alt = 3
   Insn 257: point = 3836, n_alt = 3
   Insn 256: point = 3838, n_alt = 0
   Insn 255: point = 3840, n_alt = 1
   Insn 254: point = 3842, n_alt = 0
   Insn 253: point = 3843, n_alt = 0
   Insn 252: point = 3845, n_alt = 0
   Insn 251: point = 3847, n_alt = 1
   Insn 250: point = 3849, n_alt = 0
   Insn 249: point = 3850, n_alt = 1
   Insn 248: point = 3852, n_alt = 1
   Insn 247: point = 3854, n_alt = 0
   Insn 246: point = 3855, n_alt = 8
   Insn 245: point = 3856, n_alt = 7
   Insn 244: point = 3857, n_alt = 3
   Insn 243: point = 3858, n_alt = 3
   Insn 242: point = 3860, n_alt = 0
   Insn 241: point = 3862, n_alt = 1
   Insn 240: point = 3864, n_alt = 0
   Insn 239: point = 3865, n_alt = 0
   Insn 238: point = 3867, n_alt = 0
   Insn 237: point = 3869, n_alt = 1
   Insn 236: point = 3871, n_alt = 0
   Insn 235: point = 3872, n_alt = 1
   Insn 234: point = 3874, n_alt = 1
   Insn 233: point = 3876, n_alt = 0
   Insn 232: point = 3877, n_alt = 8
   Insn 231: point = 3878, n_alt = 7
   Insn 230: point = 3879, n_alt = 3
   Insn 229: point = 3880, n_alt = 3
   Insn 228: point = 3882, n_alt = 0
   Insn 227: point = 3884, n_alt = 1
   Insn 226: point = 3886, n_alt = 0
   Insn 225: point = 3887, n_alt = 0
   Insn 224: point = 3889, n_alt = 0
   Insn 223: point = 3891, n_alt = 1
   Insn 222: point = 3893, n_alt = 0
   Insn 221: point = 3894, n_alt = 1
   Insn 220: point = 3896, n_alt = 1
   Insn 219: point = 3898, n_alt = 0
   Insn 218: point = 3899, n_alt = 8
   Insn 217: point = 3900, n_alt = 7
   Insn 216: point = 3901, n_alt = 4
   Insn 215: point = 3902, n_alt = 3
   Insn 214: point = 3904, n_alt = 0
   Insn 213: point = 3906, n_alt = 1
   Insn 212: point = 3908, n_alt = 0
   Insn 211: point = 3909, n_alt = 0
   Insn 210: point = 3911, n_alt = 0
   Insn 209: point = 3913, n_alt = 1
   Insn 208: point = 3915, n_alt = 0
   Insn 207: point = 3916, n_alt = 1
   Insn 206: point = 3918, n_alt = 1
   Insn 205: point = 3920, n_alt = 0
   Insn 204: point = 3921, n_alt = 8
   Insn 203: point = 3922, n_alt = 7
   Insn 202: point = 3923, n_alt = 3
   Insn 201: point = 3924, n_alt = 3
   Insn 200: point = 3926, n_alt = 0
   Insn 199: point = 3928, n_alt = 1
   Insn 198: point = 3930, n_alt = 0
   Insn 197: point = 3931, n_alt = 0
   Insn 196: point = 3933, n_alt = 0
   Insn 195: point = 3935, n_alt = 1
   Insn 194: point = 3937, n_alt = 0
   Insn 193: point = 3938, n_alt = 1
   Insn 192: point = 3940, n_alt = 1
   Insn 191: point = 3942, n_alt = 0
   Insn 190: point = 3943, n_alt = 8
   Insn 189: point = 3944, n_alt = 7
   Insn 188: point = 3945, n_alt = 3
   Insn 187: point = 3946, n_alt = 3
   Insn 186: point = 3948, n_alt = 0
   Insn 185: point = 3950, n_alt = 1
   Insn 184: point = 3952, n_alt = 0
   Insn 183: point = 3953, n_alt = 0
   Insn 182: point = 3955, n_alt = 0
   Insn 181: point = 3957, n_alt = 1
   Insn 180: point = 3959, n_alt = 0
   Insn 179: point = 3960, n_alt = 1
   Insn 178: point = 3962, n_alt = 1
   Insn 177: point = 3964, n_alt = 0
   Insn 176: point = 3965, n_alt = 8
   Insn 175: point = 3966, n_alt = 7
   Insn 174: point = 3967, n_alt = 3
   Insn 173: point = 3968, n_alt = 3
   Insn 172: point = 3970, n_alt = 0
   Insn 171: point = 3972, n_alt = 1
   Insn 170: point = 3974, n_alt = 0
   Insn 169: point = 3975, n_alt = 0
   Insn 168: point = 3977, n_alt = 0
   Insn 167: point = 3979, n_alt = 1
   Insn 166: point = 3981, n_alt = 0
   Insn 165: point = 3982, n_alt = 1
   Insn 164: point = 3984, n_alt = 1
   Insn 163: point = 3986, n_alt = 0
  BB 21
   Insn 155: point = 3988, n_alt = 1
  BB 19
   Insn 147: point = 3989, n_alt = 1
   Insn 146: point = 3990, n_alt = 0
   Insn 145: point = 3991, n_alt = 0
  BB 17
   Insn 137: point = 3992, n_alt = 1
  BB 148
   Insn 3183: point = 3992, n_alt = -1
  BB 9
   Insn 70: point = 3992, n_alt = -1
   Insn 69: point = 3992, n_alt = 0
   Insn 68: point = 3993, n_alt = 0
   Insn 67: point = 3995, n_alt = 0
   Insn 66: point = 3996, n_alt = 0
  BB 16
   Insn 3102: point = 3996, n_alt = -1
   Insn 131: point = 3996, n_alt = 1
  BB 149
   Insn 3186: point = 3996, n_alt = -1
  BB 11
   Insn 80: point = 3996, n_alt = -1
   Insn 79: point = 3996, n_alt = 0
   Insn 78: point = 3997, n_alt = 0
   Insn 77: point = 3999, n_alt = 0
   Insn 76: point = 4000, n_alt = 0
  BB 15
   Insn 3100: point = 4001, n_alt = -1
   Insn 125: point = 4001, n_alt = 1
  BB 150
   Insn 3189: point = 4002, n_alt = -1
  BB 13
   Insn 88: point = 4003, n_alt = -1
   Insn 87: point = 4003, n_alt = 0
   Insn 86: point = 4004, n_alt = 0
   Insn 85: point = 4006, n_alt = 0
   Insn 84: point = 4007, n_alt = 0
  BB 14
   Insn 3098: point = 4008, n_alt = -1
   Insn 119: point = 4008, n_alt = 1
   Insn 118: point = 4008, n_alt = 8
   Insn 117: point = 4009, n_alt = 4
   Insn 116: point = 4010, n_alt = 2
   Insn 115: point = 4012, n_alt = 7
   Insn 114: point = 4013, n_alt = 3
   Insn 113: point = 4015, n_alt = 0
   Insn 112: point = 4017, n_alt = 1
   Insn 111: point = 4019, n_alt = 0
   Insn 110: point = 4020, n_alt = 0
   Insn 109: point = 4022, n_alt = 0
   Insn 108: point = 4024, n_alt = 1
   Insn 107: point = 4026, n_alt = 0
   Insn 106: point = 4027, n_alt = 1
   Insn 105: point = 4029, n_alt = 1
   Insn 104: point = 4031, n_alt = 0
   Insn 103: point = 4032, n_alt = 7
   Insn 102: point = 4034, n_alt = 4
   Insn 101: point = 4035, n_alt = 3
   Insn 100: point = 4037, n_alt = 0
   Insn 99: point = 4039, n_alt = 1
   Insn 98: point = 4041, n_alt = 0
   Insn 97: point = 4042, n_alt = 0
   Insn 96: point = 4044, n_alt = 0
   Insn 95: point = 4046, n_alt = 1
   Insn 94: point = 4048, n_alt = 0
   Insn 93: point = 4049, n_alt = 1
   Insn 92: point = 4051, n_alt = 1
   Insn 91: point = 4053, n_alt = 0
   Insn 90: point = 4055, n_alt = 0
  BB 12
   Insn 82: point = 4057, n_alt = 1
  BB 10
   Insn 74: point = 4058, n_alt = 1
   Insn 73: point = 4059, n_alt = 0
   Insn 72: point = 4060, n_alt = 0
  BB 8
   Insn 64: point = 4061, n_alt = 1
  BB 146
   Insn 3177: point = 4061, n_alt = -1
  BB 3
   Insn 21: point = 4061, n_alt = -1
   Insn 20: point = 4061, n_alt = 0
   Insn 19: point = 4062, n_alt = 0
   Insn 18: point = 4064, n_alt = 0
   Insn 17: point = 4065, n_alt = 0
  BB 7
   Insn 3096: point = 4066, n_alt = -1
   Insn 58: point = 4066, n_alt = 1
  BB 147
   Insn 3180: point = 4067, n_alt = -1
  BB 5
   Insn 29: point = 4068, n_alt = -1
   Insn 28: point = 4068, n_alt = 0
   Insn 27: point = 4069, n_alt = 0
   Insn 26: point = 4071, n_alt = 0
   Insn 25: point = 4072, n_alt = 0
  BB 6
   Insn 3094: point = 4073, n_alt = -1
   Insn 52: point = 4073, n_alt = 1
   Insn 51: point = 4073, n_alt = 8
   Insn 50: point = 4074, n_alt = 4
   Insn 49: point = 4075, n_alt = 1
   Insn 48: point = 4077, n_alt = 3
   Insn 47: point = 4079, n_alt = 0
   Insn 46: point = 4081, n_alt = 1
   Insn 45: point = 4083, n_alt = 0
   Insn 44: point = 4084, n_alt = 0
   Insn 43: point = 4086, n_alt = 1
   Insn 42: point = 4088, n_alt = 0
   Insn 41: point = 4089, n_alt = 7
   Insn 40: point = 4091, n_alt = 4
   Insn 39: point = 4092, n_alt = 7
   Insn 38: point = 4094, n_alt = 4
   Insn 37: point = 4095, n_alt = 3
   Insn 36: point = 4097, n_alt = 0
   Insn 35: point = 4099, n_alt = 1
   Insn 34: point = 4101, n_alt = 0
   Insn 33: point = 4102, n_alt = 0
   Insn 32: point = 4104, n_alt = 1
   Insn 31: point = 4106, n_alt = 0
  BB 4
   Insn 23: point = 4108, n_alt = 1
  BB 2
   Insn 15: point = 4109, n_alt = 1
   Insn 14: point = 4110, n_alt = 0
   Insn 13: point = 4111, n_alt = 0
   Insn 12: point = 4112, n_alt = 8
   Insn 11: point = 4113, n_alt = 7
   Insn 7: point = 4114, n_alt = 5
   Insn 6: point = 4114, n_alt = 5
   Insn 5: point = 4114, n_alt = 5
   Insn 4: point = 4114, n_alt = 5
   Insn 3: point = 4114, n_alt = 5
   Insn 2: point = 4114, n_alt = 5
 r87: [4103..4104]
 r88: [4098..4102]
 r89: [4098..4099]
 r90: [4096..4097]
 r91: [4093..4095]
 r92: [4076..4092]
 r93: [4076..4089]
 r94: [4085..4086]
 r95: [4080..4084]
 r96: [4080..4081]
 r97: [4078..4079]
 r98: [4073..4077]
 r99: [4073..4075]
 r100: [4052..4053]
 r101: [4050..4051]
 r102: [4043..4049]
 r103: [4045..4046]
 r104: [4043..4044]
 r105: [4038..4042]
 r106: [4038..4039]
 r107: [4036..4037]
 r108: [4033..4035]
 r109: [4011..4032]
 r110: [4028..4029]
 r111: [4021..4027]
 r112: [4023..4024]
 r113: [4021..4022]
 r114: [4016..4020]
 r115: [4016..4017]
 r116: [4014..4015]
 r117: [4008..4013]
 r118: [4008..4010]
 r119: [3983..3984]
 r120: [3976..3982]
 r121: [3978..3979]
 r122: [3976..3977]
 r123: [3971..3975]
 r124: [3971..3972]
 r125: [3969..3970]
 r126: [3965..3968]
 r127: [3961..3962]
 r128: [3954..3960]
 r129: [3956..3957]
 r130: [3954..3955]
 r131: [3949..3953]
 r132: [3949..3950]
 r133: [3947..3948]
 r134: [3943..3946]
 r135: [3939..3940]
 r136: [3932..3938]
 r137: [3934..3935]
 r138: [3932..3933]
 r139: [3927..3931]
 r140: [3927..3928]
 r141: [3925..3926]
 r142: [3921..3924]
 r143: [3917..3918]
 r144: [3910..3916]
 r145: [3912..3913]
 r146: [3910..3911]
 r147: [3905..3909]
 r148: [3905..3906]
 r149: [3903..3904]
 r150: [3899..3902]
 r151: [3895..3896]
 r152: [3888..3894]
 r153: [3890..3891]
 r154: [3888..3889]
 r155: [3883..3887]
 r156: [3883..3884]
 r157: [3881..3882]
 r158: [3877..3880]
 r159: [3873..3874]
 r160: [3866..3872]
 r161: [3868..3869]
 r162: [3866..3867]
 r163: [3861..3865]
 r164: [3861..3862]
 r165: [3859..3860]
 r166: [3855..3858]
 r167: [3851..3852]
 r168: [3844..3850]
 r169: [3846..3847]
 r170: [3844..3845]
 r171: [3839..3843]
 r172: [3839..3840]
 r173: [3837..3838]
 r174: [3833..3836]
 r175: [3829..3830]
 r176: [3822..3828]
 r177: [3824..3825]
 r178: [3822..3823]
 r179: [3817..3821]
 r180: [3817..3818]
 r181: [3815..3816]
 r182: [3811..3814]
 r183: [3807..3808]
 r184: [3800..3806]
 r185: [3802..3803]
 r186: [3800..3801]
 r187: [3795..3799]
 r188: [3795..3796]
 r189: [3793..3794]
 r190: [3790..3792]
 r191: [3786..3787]
 r192: [3779..3785]
 r193: [3781..3782]
 r194: [3779..3780]
 r195: [3774..3778]
 r196: [3774..3775]
 r197: [3772..3773]
 r198: [3768..3771]
 r199: [3764..3765]
 r200: [3757..3763]
 r201: [3759..3760]
 r202: [3757..3758]
 r203: [3752..3756]
 r204: [3752..3753]
 r205: [3750..3751]
 r206: [3746..3749]
 r207: [3742..3743]
 r208: [3735..3741]
 r209: [3737..3738]
 r210: [3735..3736]
 r211: [3730..3734]
 r212: [3730..3731]
 r213: [3728..3729]
 r214: [3724..3727]
 r215: [3720..3721]
 r216: [3713..3719]
 r217: [3715..3716]
 r218: [3713..3714]
 r219: [3708..3712]
 r220: [3708..3709]
 r221: [3706..3707]
 r222: [3702..3705]
 r223: [3675..3676]
 r224: [3670..3674]
 r225: [3670..3671]
 r226: [3668..3669]
 r227: [3665..3667]
 r228: [3661..3662]
 r229: [3656..3657]
 r230: [3651..3655]
 r231: [3651..3652]
 r232: [3649..3650]
 r233: [3646..3648]
 r234: [3640..3641]
 r235: [3633..3639]
 r236: [3635..3636]
 r237: [3633..3634]
 r238: [3628..3632]
 r239: [3628..3629]
 r240: [3626..3627]
 r241: [3623..3625]
 r242: [3621..3622]
 r243: [3600..3601]
 r244: [3593..3599]
 r245: [3595..3596]
 r246: [3593..3594]
 r247: [3588..3592]
 r248: [3588..3589]
 r249: [3586..3587]
 r250: [3583..3585]
 r251: [3578..3580]
 r252: [3531..3532]
 r253: [3526..3530]
 r254: [3526..3527]
 r255: [3524..3525]
 r256: [3520..3523]
 r257: [3573..3574]
 r258: [3566..3572]
 r259: [3568..3569]
 r260: [3566..3567]
 r261: [3561..3565]
 r262: [3561..3562]
 r263: [3559..3560]
 r264: [3556..3558]
 r265: [3552..3553]
 r266: [3547..3548]
 r267: [3542..3546]
 r268: [3542..3543]
 r269: [3540..3541]
 r270: [3536..3539]
 r271: [3509..3510]
 r272: [3504..3508]
 r273: [3504..3505]
 r274: [3502..3503]
 r275: [3498..3501]
 r276: [3616..3617]
 r277: [3611..3615]
 r278: [3611..3612]
 r279: [3609..3610]
 r280: [3605..3608]
 r281: [3493..3494]
 r282: [3486..3492]
 r283: [3488..3489]
 r284: [3486..3487]
 r285: [3481..3485]
 r286: [3481..3482]
 r287: [3479..3480]
 r288: [3476..3478]
 r289: [3450..3475]
 r290: [3471..3472]
 r291: [3469..3470]
 r292: [3462..3468]
 r293: [3464..3465]
 r294: [3462..3463]
 r295: [3457..3461]
 r296: [3457..3458]
 r297: [3455..3456]
 r298: [3452..3454]
 r299: [3450..3451]
 r300: [3448..3449]
 r301: [3445..3447]
 r302: [3439..3440]
 r303: [3432..3438]
 r304: [3434..3435]
 r305: [3432..3433]
 r306: [3427..3431]
 r307: [3427..3428]
 r308: [3425..3426]
 r309: [3422..3424]
 r310: [3420..3421]
 r311: [3415..3416]
 r312: [3413..3414]
 r313: [3406..3412]
 r314: [3408..3409]
 r315: [3406..3407]
 r316: [3401..3405]
 r317: [3401..3402]
 r318: [3399..3400]
 r319: [3396..3398]
 r320: [3393..3395]
 r321: [3388..3389]
 r322: [3386..3387]
 r323: [3379..3385]
 r324: [3381..3382]
 r325: [3379..3380]
 r326: [3374..3378]
 r327: [3374..3375]
 r328: [3372..3373]
 r329: [3369..3371]
 r330: [3345..3368]
 r331: [3364..3365]
 r332: [3357..3363]
 r333: [3359..3360]
 r334: [3357..3358]
 r335: [3352..3356]
 r336: [3352..3353]
 r337: [3350..3351]
 r338: [3347..3349]
 r339: [3345..3346]
 r340: [3339..3340]
 r341: [3332..3338]
 r342: [3334..3335]
 r343: [3332..3333]
 r344: [3327..3331]
 r345: [3327..3328]
 r346: [3325..3326]
 r347: [3322..3324]
 r348: [3301..3321]
 r349: [3317..3318]
 r350: [3310..3316]
 r351: [3312..3313]
 r352: [3310..3311]
 r353: [3305..3309]
 r354: [3305..3306]
 r355: [3303..3304]
 r356: [3298..3302]
 r357: [3298..3300]
 r358: [3294..3295]
 r359: [3287..3293]
 r360: [3289..3290]
 r361: [3287..3288]
 r362: [3282..3286]
 r363: [3282..3283]
 r364: [3280..3281]
 r365: [3277..3279]
 r366: [3255..3276]
 r367: [3272..3273]
 r368: [3265..3271]
 r369: [3267..3268]
 r370: [3265..3266]
 r371: [3260..3264]
 r372: [3260..3261]
 r373: [3258..3259]
 r374: [3252..3257]
 r375: [3252..3254]
 r376: [3248..3249]
 r377: [3241..3247]
 r378: [3243..3244]
 r379: [3241..3242]
 r380: [3236..3240]
 r381: [3236..3237]
 r382: [3234..3235]
 r383: [3231..3233]
 r384: [3209..3230]
 r385: [3226..3227]
 r386: [3219..3225]
 r387: [3221..3222]
 r388: [3219..3220]
 r389: [3214..3218]
 r390: [3214..3215]
 r391: [3212..3213]
 r392: [3206..3211]
 r393: [3206..3208]
 r394: [3202..3203]
 r395: [3195..3201]
 r396: [3197..3198]
 r397: [3195..3196]
 r398: [3190..3194]
 r399: [3190..3191]
 r400: [3188..3189]
 r401: [3185..3187]
 r402: [3138..3184]
 r403: [3180..3181]
 r404: [3173..3179]
 r405: [3175..3176]
 r406: [3173..3174]
 r407: [3168..3172]
 r408: [3168..3169]
 r409: [3166..3167]
 r410: [3163..3165]
 r411: [3159..3160]
 r412: [3138..3158]
 r413: [3154..3155]
 r414: [3147..3153]
 r415: [3149..3150]
 r416: [3147..3148]
 r417: [3142..3146]
 r418: [3142..3143]
 r419: [3140..3141]
 r420: [3135..3139]
 r421: [3135..3137]
 r422: [3131..3132]
 r423: [3124..3130]
 r424: [3126..3127]
 r425: [3124..3125]
 r426: [3119..3123]
 r427: [3119..3120]
 r428: [3117..3118]
 r429: [3114..3116]
 r430: [3067..3113]
 r431: [3109..3110]
 r432: [3102..3108]
 r433: [3104..3105]
 r434: [3102..3103]
 r435: [3097..3101]
 r436: [3097..3098]
 r437: [3095..3096]
 r438: [3092..3094]
 r439: [3088..3089]
 r440: [3067..3087]
 r441: [3083..3084]
 r442: [3076..3082]
 r443: [3078..3079]
 r444: [3076..3077]
 r445: [3071..3075]
 r446: [3071..3072]
 r447: [3069..3070]
 r448: [3064..3068]
 r449: [3064..3066]
 r450: [3060..3061]
 r451: [3053..3059]
 r452: [3055..3056]
 r453: [3053..3054]
 r454: [3048..3052]
 r455: [3048..3049]
 r456: [3046..3047]
 r457: [3043..3045]
 r458: [2998..3042]
 r459: [3038..3039]
 r460: [3031..3037]
 r461: [3033..3034]
 r462: [3031..3032]
 r463: [3026..3030]
 r464: [3026..3027]
 r465: [3024..3025]
 r466: [3021..3023]
 r467: [3019..3020]
 r468: [2998..3018]
 r469: [3014..3015]
 r470: [3007..3013]
 r471: [3009..3010]
 r472: [3007..3008]
 r473: [3002..3006]
 r474: [3002..3003]
 r475: [3000..3001]
 r476: [2995..2999]
 r477: [2995..2997]
 r478: [2991..2992]
 r479: [2984..2990]
 r480: [2986..2987]
 r481: [2984..2985]
 r482: [2979..2983]
 r483: [2979..2980]
 r484: [2977..2978]
 r485: [2974..2976]
 r486: [2896..2973]
 r487: [2969..2970]
 r488: [2962..2968]
 r489: [2964..2965]
 r490: [2962..2963]
 r491: [2957..2961]
 r492: [2957..2958]
 r493: [2955..2956]
 r494: [2952..2954]
 r495: [2926..2949]
 r496: [2945..2946]
 r497: [2938..2944]
 r498: [2940..2941]
 r499: [2938..2939]
 r500: [2933..2937]
 r501: [2933..2934]
 r502: [2931..2932]
 r503: [2928..2930]
 r504: [2926..2927]
 r505: [2924..2925]
 r506: [2922..2923]
 r507: [2917..2919]
 r508: [2896..2916]
 r509: [2912..2913]
 r510: [2905..2911]
 r511: [2907..2908]
 r512: [2905..2906]
 r513: [2900..2904]
 r514: [2900..2901]
 r515: [2898..2899]
 r516: [2893..2897]
 r517: [2893..2895]
 r518: [2889..2890]
 r519: [2882..2888]
 r520: [2884..2885]
 r521: [2882..2883]
 r522: [2877..2881]
 r523: [2877..2878]
 r524: [2875..2876]
 r525: [2872..2874]
 r526: [2867..2869]
 r527: [2857..2861]
 r528: [2857..2858]
 r529: [2855..2856]
 r531: [2830..2831]
 r532: [2823..2829]
 r533: [2825..2826]
 r534: [2823..2824]
 r535: [2818..2822]
 r536: [2818..2819]
 r537: [2816..2817]
 r538: [2813..2815]
 r539: [2808..2810]
 r540: [2806..2807]
 r541: [2803..2805]
 r542: [2772..2802]
 r543: [2798..2799]
 r544: [2791..2797]
 r545: [2793..2794]
 r546: [2791..2792]
 r547: [2786..2790]
 r548: [2786..2787]
 r549: [2784..2785]
 r550: [2781..2783]
 r551: [2776..2778]
 r552: [2774..2775]
 r553: [2772..2773]
 r554: [2770..2771]
 r555: [2766..2769]
 r556: [2754..2758]
 r557: [2754..2755]
 r558: [2752..2753]
 r559: [2746..2747]
 r560: [2744..2745]
 r561: [2741..2743]
 r562: [2728..2735]
 r563: [2730..2731]
 r564: [2728..2729]
 r565: [2725..2727]
 r566: [2723..2724]
 r567: [2720..2722]
 r568: [2707..2708]
 r569: [2702..2706]
 r570: [2702..2703]
 r571: [2700..2701]
 r572: [2697..2699]
 r573: [2694..2696]
 r574: [2675..2676]
 r575: [2668..2674]
 r576: [2670..2671]
 r577: [2668..2669]
 r578: [2663..2667]
 r579: [2663..2664]
 r580: [2661..2662]
 r581: [2658..2660]
 r582: [2634..2657]
 r583: [2634..2654]
 r584: [2650..2651]
 r585: [2643..2649]
 r586: [2645..2646]
 r587: [2643..2644]
 r588: [2638..2642]
 r589: [2638..2639]
 r590: [2636..2637]
 r591: [2631..2635]
 r592: [2631..2633]
 r593: [2610..2611]
 r594: [2608..2609]
 r595: [2606..2607]
 r596: [2601..2602]
 r597: [2588..2589]
 r598: [2586..2587]
 r599: [2581..2583]
 r600: [2575..2576]
 r601: [2573..2574]
 r602: [2568..2570]
 r603: [2562..2563]
 r604: [2555..2561]
 r605: [2557..2558]
 r606: [2555..2556]
 r607: [2550..2554]
 r608: [2550..2551]
 r609: [2548..2549]
 r610: [2545..2547]
 r611: [2521..2544]
 r612: [2540..2541]
 r613: [2533..2539]
 r614: [2535..2536]
 r615: [2533..2534]
 r616: [2528..2532]
 r617: [2528..2529]
 r618: [2526..2527]
 r619: [2523..2525]
 r620: [2521..2522]
 r621: [2495..2520]
 r622: [2516..2517]
 r623: [2507..2515]
 r624: [2511..2512]
 r625: [2509..2510]
 r626: [2507..2508]
 r627: [2502..2506]
 r628: [2502..2503]
 r629: [2500..2501]
 r630: [2497..2499]
 r631: [2495..2496]
 r632: [2469..2494]
 r633: [2490..2491]
 r634: [2481..2489]
 r635: [2485..2486]
 r636: [2483..2484]
 r637: [2481..2482]
 r638: [2476..2480]
 r639: [2476..2477]
 r640: [2474..2475]
 r641: [2471..2473]
 r642: [2469..2470]
 r643: [2467..2468]
 r644: [2464..2466]
 r645: [2458..2459]
 r646: [2456..2457]
 r647: [2449..2455]
 r648: [2451..2452]
 r649: [2449..2450]
 r650: [2444..2448]
 r651: [2444..2445]
 r652: [2442..2443]
 r653: [2439..2441]
 r654: [2413..2438]
 r655: [2434..2435]
 r656: [2432..2433]
 r657: [2425..2431]
 r658: [2427..2428]
 r659: [2425..2426]
 r660: [2420..2424]
 r661: [2420..2421]
 r662: [2418..2419]
 r663: [2415..2417]
 r664: [2413..2414]
 r665: [2385..2412]
 r666: [2408..2409]
 r667: [2406..2407]
 r668: [2397..2405]
 r669: [2401..2402]
 r670: [2399..2400]
 r671: [2397..2398]
 r672: [2392..2396]
 r673: [2392..2393]
 r674: [2390..2391]
 r675: [2387..2389]
 r676: [2385..2386]
 r677: [2357..2384]
 r678: [2380..2381]
 r679: [2378..2379]
 r680: [2369..2377]
 r681: [2373..2374]
 r682: [2371..2372]
 r683: [2369..2370]
 r684: [2364..2368]
 r685: [2364..2365]
 r686: [2362..2363]
 r687: [2359..2361]
 r688: [2357..2358]
 r689: [2355..2356]
 r690: [2352..2354]
 r691: [2342..2343]
 r692: [2339..2341]
 r693: [2333..2334]
 r694: [2326..2332]
 r695: [2328..2329]
 r696: [2326..2327]
 r697: [2321..2325]
 r698: [2321..2322]
 r699: [2319..2320]
 r700: [2316..2318]
 r701: [2314..2315]
 r702: [2309..2310]
 r703: [2307..2308]
 r704: [2300..2306]
 r705: [2302..2303]
 r706: [2300..2301]
 r707: [2295..2299]
 r708: [2295..2296]
 r709: [2293..2294]
 r710: [2290..2292]
 r711: [2287..2289]
 r712: [2282..2283]
 r713: [2275..2281]
 r714: [2277..2278]
 r715: [2275..2276]
 r716: [2270..2274]
 r717: [2270..2271]
 r718: [2268..2269]
 r719: [2265..2267]
 r720: [2244..2264]
 r721: [2260..2261]
 r722: [2253..2259]
 r723: [2255..2256]
 r724: [2253..2254]
 r725: [2248..2252]
 r726: [2248..2249]
 r727: [2246..2247]
 r728: [2241..2245]
 r729: [2241..2243]
 r730: [2237..2238]
 r731: [2230..2236]
 r732: [2232..2233]
 r733: [2230..2231]
 r734: [2225..2229]
 r735: [2225..2226]
 r736: [2223..2224]
 r737: [2220..2222]
 r738: [2173..2219]
 r739: [2215..2216]
 r740: [2208..2214]
 r741: [2210..2211]
 r742: [2208..2209]
 r743: [2203..2207]
 r744: [2203..2204]
 r745: [2201..2202]
 r746: [2198..2200]
 r747: [2194..2195]
 r748: [2173..2193]
 r749: [2189..2190]
 r750: [2182..2188]
 r751: [2184..2185]
 r752: [2182..2183]
 r753: [2177..2181]
 r754: [2177..2178]
 r755: [2175..2176]
 r756: [2170..2174]
 r757: [2170..2172]
 r758: [2166..2167]
 r759: [2159..2165]
 r760: [2161..2162]
 r761: [2159..2160]
 r762: [2154..2158]
 r763: [2154..2155]
 r764: [2152..2153]
 r765: [2149..2151]
 r766: [2102..2148]
 r767: [2144..2145]
 r768: [2137..2143]
 r769: [2139..2140]
 r770: [2137..2138]
 r771: [2132..2136]
 r772: [2132..2133]
 r773: [2130..2131]
 r774: [2127..2129]
 r775: [2123..2124]
 r776: [2102..2122]
 r777: [2118..2119]
 r778: [2111..2117]
 r779: [2113..2114]
 r780: [2111..2112]
 r781: [2106..2110]
 r782: [2106..2107]
 r783: [2104..2105]
 r784: [2099..2103]
 r785: [2099..2101]
 r786: [2069..2070]
 r787: [2062..2068]
 r788: [2064..2065]
 r789: [2062..2063]
 r790: [2057..2061]
 r791: [2057..2058]
 r792: [2055..2056]
 r793: [2052..2054]
 r794: [2046..2051]
 r795: [2041..2042]
 r796: [2034..2040]
 r797: [2036..2037]
 r798: [2034..2035]
 r799: [2029..2033]
 r800: [2029..2030]
 r801: [2027..2028]
 r802: [2024..2026]
 r803: [2021..2023]
 r804: [2015..2016]
 r805: [2008..2014]
 r806: [2010..2011]
 r807: [2008..2009]
 r808: [2003..2007]
 r809: [2003..2004]
 r810: [2001..2002]
 r811: [1998..2000]
 r812: [1996..1997]
 r813: [1972..1995]
 r814: [1991..1992]
 r815: [1984..1990]
 r816: [1986..1987]
 r817: [1984..1985]
 r818: [1979..1983]
 r819: [1979..1980]
 r820: [1977..1978]
 r821: [1974..1976]
 r822: [1972..1973]
 r823: [1951..1971]
 r824: [1967..1968]
 r825: [1960..1966]
 r826: [1962..1963]
 r827: [1960..1961]
 r828: [1955..1959]
 r829: [1955..1956]
 r830: [1953..1954]
 r831: [1948..1952]
 r832: [1948..1950]
 r833: [1944..1945]
 r834: [1937..1943]
 r835: [1939..1940]
 r836: [1937..1938]
 r837: [1932..1936]
 r838: [1932..1933]
 r839: [1930..1931]
 r840: [1927..1929]
 r841: [1901..1926]
 r842: [1922..1923]
 r843: [1920..1921]
 r844: [1913..1919]
 r845: [1915..1916]
 r846: [1913..1914]
 r847: [1908..1912]
 r848: [1908..1909]
 r849: [1906..1907]
 r850: [1903..1905]
 r851: [1901..1902]
 r852: [1899..1900]
 r853: [1877..1898]
 r854: [1894..1895]
 r855: [1887..1893]
 r856: [1889..1890]
 r857: [1887..1888]
 r858: [1882..1886]
 r859: [1882..1883]
 r860: [1880..1881]
 r861: [1874..1879]
 r862: [1874..1876]
 r863: [1870..1871]
 r864: [1863..1869]
 r865: [1865..1866]
 r866: [1863..1864]
 r867: [1858..1862]
 r868: [1858..1859]
 r869: [1856..1857]
 r870: [1853..1855]
 r871: [1832..1852]
 r872: [1848..1849]
 r873: [1841..1847]
 r874: [1843..1844]
 r875: [1841..1842]
 r876: [1836..1840]
 r877: [1836..1837]
 r878: [1834..1835]
 r879: [1829..1833]
 r880: [1829..1831]
 r881: [1825..1826]
 r882: [1818..1824]
 r883: [1820..1821]
 r884: [1818..1819]
 r885: [1813..1817]
 r886: [1813..1814]
 r887: [1811..1812]
 r888: [1808..1810]
 r889: [1787..1807]
 r890: [1803..1804]
 r891: [1796..1802]
 r892: [1798..1799]
 r893: [1796..1797]
 r894: [1791..1795]
 r895: [1791..1792]
 r896: [1789..1790]
 r897: [1784..1788]
 r898: [1784..1786]
 r899: [1780..1781]
 r900: [1773..1779]
 r901: [1775..1776]
 r902: [1773..1774]
 r903: [1768..1772]
 r904: [1768..1769]
 r905: [1766..1767]
 r906: [1763..1765]
 r907: [1742..1762]
 r908: [1758..1759]
 r909: [1751..1757]
 r910: [1753..1754]
 r911: [1751..1752]
 r912: [1746..1750]
 r913: [1746..1747]
 r914: [1744..1745]
 r915: [1739..1743]
 r916: [1739..1741]
 r917: [1735..1736]
 r918: [1728..1734]
 r919: [1730..1731]
 r920: [1728..1729]
 r921: [1723..1727]
 r922: [1723..1724]
 r923: [1721..1722]
 r924: [1718..1720]
 r925: [1697..1717]
 r926: [1713..1714]
 r927: [1706..1712]
 r928: [1708..1709]
 r929: [1706..1707]
 r930: [1701..1705]
 r931: [1701..1702]
 r932: [1699..1700]
 r933: [1694..1698]
 r934: [1694..1696]
 r935: [1672..1673]
 r936: [1665..1671]
 r937: [1667..1668]
 r938: [1665..1666]
 r939: [1660..1664]
 r940: [1660..1661]
 r941: [1658..1659]
 r942: [1655..1657]
 r943: [1649..1654]
 r944: [1644..1645]
 r945: [1637..1643]
 r946: [1639..1640]
 r947: [1637..1638]
 r948: [1632..1636]
 r949: [1632..1633]
 r950: [1630..1631]
 r951: [1627..1629]
 r952: [1624..1626]
 r953: [1618..1619]
 r954: [1611..1617]
 r955: [1613..1614]
 r956: [1611..1612]
 r957: [1606..1610]
 r958: [1606..1607]
 r959: [1604..1605]
 r960: [1601..1603]
 r961: [1580..1600]
 r962: [1596..1597]
 r963: [1589..1595]
 r964: [1591..1592]
 r965: [1589..1590]
 r966: [1584..1588]
 r967: [1584..1585]
 r968: [1582..1583]
 r969: [1577..1581]
 r970: [1577..1579]
 r971: [1573..1574]
 r972: [1566..1572]
 r973: [1568..1569]
 r974: [1566..1567]
 r975: [1561..1565]
 r976: [1561..1562]
 r977: [1559..1560]
 r978: [1556..1558]
 r979: [1535..1555]
 r980: [1551..1552]
 r981: [1544..1550]
 r982: [1546..1547]
 r983: [1544..1545]
 r984: [1539..1543]
 r985: [1539..1540]
 r986: [1537..1538]
 r987: [1532..1536]
 r988: [1532..1534]
 r989: [1506..1507]
 r990: [1499..1505]
 r991: [1501..1502]
 r992: [1499..1500]
 r993: [1494..1498]
 r994: [1494..1495]
 r995: [1492..1493]
 r996: [1489..1491]
 r997: [1483..1488]
 r998: [1476..1477]
 r999: [1469..1475]
 r1000: [1471..1472]
 r1001: [1469..1470]
 r1002: [1464..1468]
 r1003: [1464..1465]
 r1004: [1462..1463]
 r1005: [1459..1461]
 r1006: [1433..1458]
 r1007: [1454..1455]
 r1008: [1452..1453]
 r1009: [1445..1451]
 r1010: [1447..1448]
 r1011: [1445..1446]
 r1012: [1440..1444]
 r1013: [1440..1441]
 r1014: [1438..1439]
 r1015: [1435..1437]
 r1016: [1433..1434]
 r1017: [1431..1432]
 r1018: [1409..1430]
 r1019: [1426..1427]
 r1020: [1419..1425]
 r1021: [1421..1422]
 r1022: [1419..1420]
 r1023: [1414..1418]
 r1024: [1414..1415]
 r1025: [1412..1413]
 r1026: [1406..1411]
 r1027: [1406..1408]
 r1028: [1401..1402]
 r1029: [1394..1400]
 r1030: [1396..1397]
 r1031: [1394..1395]
 r1032: [1389..1393]
 r1033: [1389..1390]
 r1034: [1387..1388]
 r1035: [1384..1386]
 r1036: [1358..1383]
 r1037: [1379..1380]
 r1038: [1377..1378]
 r1039: [1370..1376]
 r1040: [1372..1373]
 r1041: [1370..1371]
 r1042: [1365..1369]
 r1043: [1365..1366]
 r1044: [1363..1364]
 r1045: [1360..1362]
 r1046: [1358..1359]
 r1047: [1356..1357]
 r1048: [1353..1355]
 r1049: [1347..1348]
 r1050: [1340..1346]
 r1051: [1342..1343]
 r1052: [1340..1341]
 r1053: [1335..1339]
 r1054: [1335..1336]
 r1055: [1333..1334]
 r1056: [1330..1332]
 r1057: [1327..1329]
 r1058: [1324..1326]
 r1059: [1303..1304]
 r1060: [1301..1302]
 r1061: [1294..1300]
 r1062: [1296..1297]
 r1063: [1294..1295]
 r1064: [1289..1293]
 r1065: [1289..1290]
 r1066: [1287..1288]
 r1067: [1284..1286]
 r1068: [1260..1283]
 r1069: [1279..1280]
 r1070: [1272..1278]
 r1071: [1274..1275]
 r1072: [1272..1273]
 r1073: [1267..1271]
 r1074: [1267..1268]
 r1075: [1265..1266]
 r1076: [1262..1264]
 r1077: [1260..1261]
 r1078: [1254..1255]
 r1079: [1247..1253]
 r1080: [1249..1250]
 r1081: [1247..1248]
 r1082: [1242..1246]
 r1083: [1242..1243]
 r1084: [1240..1241]
 r1085: [1237..1239]
 r1086: [1211..1236]
 r1087: [1232..1233]
 r1088: [1230..1231]
 r1089: [1223..1229]
 r1090: [1225..1226]
 r1091: [1223..1224]
 r1092: [1218..1222]
 r1093: [1218..1219]
 r1094: [1216..1217]
 r1095: [1213..1215]
 r1096: [1211..1212]
 r1097: [1209..1210]
 r1098: [1206..1208]
 r1099: [1200..1201]
 r1100: [1193..1199]
 r1101: [1195..1196]
 r1102: [1193..1194]
 r1103: [1188..1192]
 r1104: [1188..1189]
 r1105: [1186..1187]
 r1106: [1182..1185]
 r1107: [1178..1179]
 r1108: [1171..1177]
 r1109: [1173..1174]
 r1110: [1171..1172]
 r1111: [1166..1170]
 r1112: [1166..1167]
 r1113: [1164..1165]
 r1114: [1142..1163]
 r1115: [1159..1160]
 r1116: [1152..1158]
 r1117: [1154..1155]
 r1118: [1152..1153]
 r1119: [1147..1151]
 r1120: [1147..1148]
 r1121: [1145..1146]
 r1122: [1137..1144]
 r1123: [1137..1139]
 r1124: [1133..1134]
 r1125: [1126..1132]
 r1126: [1128..1129]
 r1127: [1126..1127]
 r1128: [1121..1125]
 r1129: [1121..1122]
 r1130: [1119..1120]
 r1131: [1097..1118]
 r1132: [1114..1115]
 r1133: [1107..1113]
 r1134: [1109..1110]
 r1135: [1107..1108]
 r1136: [1102..1106]
 r1137: [1102..1103]
 r1138: [1100..1101]
 r1139: [1092..1099]
 r1140: [1092..1094]
 r1141: [1088..1089]
 r1142: [1081..1087]
 r1143: [1083..1084]
 r1144: [1081..1082]
 r1145: [1076..1080]
 r1146: [1076..1077]
 r1147: [1074..1075]
 r1148: [1071..1073]
 r1149: [1066..1068]
 r1150: [1056..1060]
 r1151: [1056..1057]
 r1152: [1054..1055]
 r1154: [1029..1030]
 r1155: [1022..1028]
 r1156: [1024..1025]
 r1157: [1022..1023]
 r1158: [1017..1021]
 r1159: [1017..1018]
 r1160: [1015..1016]
 r1161: [1012..1014]
 r1162: [1007..1009]
 r1163: [1005..1006]
 r1164: [1002..1004]
 r1165: [971..1001]
 r1166: [997..998]
 r1167: [990..996]
 r1168: [992..993]
 r1169: [990..991]
 r1170: [985..989]
 r1171: [985..986]
 r1172: [983..984]
 r1173: [980..982]
 r1174: [975..977]
 r1175: [973..974]
 r1176: [971..972]
 r1177: [969..970]
 r1178: [965..968]
 r1179: [953..957]
 r1180: [953..954]
 r1181: [951..952]
 r1182: [945..946]
 r1183: [943..944]
 r1184: [940..942]
 r1185: [927..934]
 r1186: [929..930]
 r1187: [927..928]
 r1188: [924..926]
 r1189: [922..923]
 r1190: [919..921]
 r1191: [906..907]
 r1192: [901..905]
 r1193: [901..902]
 r1194: [899..900]
 r1195: [896..898]
 r1196: [893..895]
 r1197: [874..875]
 r1198: [867..873]
 r1199: [869..870]
 r1200: [867..868]
 r1201: [862..866]
 r1202: [862..863]
 r1203: [860..861]
 r1204: [856..859]
 r1205: [852..853]
 r1206: [845..851]
 r1207: [847..848]
 r1208: [845..846]
 r1209: [840..844]
 r1210: [840..841]
 r1211: [838..839]
 r1212: [816..837]
 r1213: [833..834]
 r1214: [826..832]
 r1215: [828..829]
 r1216: [826..827]
 r1217: [821..825]
 r1218: [821..822]
 r1219: [819..820]
 r1220: [813..818]
 r1221: [813..815]
 r1222: [809..810]
 r1223: [802..808]
 r1224: [804..805]
 r1225: [802..803]
 r1226: [797..801]
 r1227: [797..798]
 r1228: [795..796]
 r1229: [792..794]
 r1230: [766..789]
 r1231: [785..786]
 r1232: [778..784]
 r1233: [780..781]
 r1234: [778..779]
 r1235: [773..777]
 r1236: [773..774]
 r1237: [771..772]
 r1238: [768..770]
 r1239: [766..767]
 r1240: [764..765]
 r1241: [762..763]
 r1242: [738..759]
 r1243: [755..756]
 r1244: [748..754]
 r1245: [750..751]
 r1246: [748..749]
 r1247: [743..747]
 r1248: [743..744]
 r1249: [741..742]
 r1250: [735..740]
 r1251: [735..737]
 r1252: [730..731]
 r1253: [723..729]
 r1254: [725..726]
 r1255: [723..724]
 r1256: [718..722]
 r1257: [718..719]
 r1258: [716..717]
 r1259: [713..715]
 r1260: [670..712]
 r1261: [708..709]
 r1262: [701..707]
 r1263: [703..704]
 r1264: [701..702]
 r1265: [696..700]
 r1266: [696..697]
 r1267: [694..695]
 r1268: [691..693]
 r1269: [670..690]
 r1270: [686..687]
 r1271: [679..685]
 r1272: [681..682]
 r1273: [679..680]
 r1274: [674..678]
 r1275: [674..675]
 r1276: [672..673]
 r1277: [667..671]
 r1278: [667..669]
 r1279: [663..664]
 r1280: [656..662]
 r1281: [658..659]
 r1282: [656..657]
 r1283: [651..655]
 r1284: [651..652]
 r1285: [649..650]
 r1286: [646..648]
 r1287: [643..645]
 r1288: [638..639]
 r1289: [631..637]
 r1290: [633..634]
 r1291: [631..632]
 r1292: [626..630]
 r1293: [626..627]
 r1294: [624..625]
 r1295: [620..623]
 r1296: [616..617]
 r1297: [609..615]
 r1298: [611..612]
 r1299: [609..610]
 r1300: [604..608]
 r1301: [604..605]
 r1302: [602..603]
 r1303: [599..601]
 r1304: [556..598]
 r1305: [594..595]
 r1306: [587..593]
 r1307: [589..590]
 r1308: [587..588]
 r1309: [582..586]
 r1310: [582..583]
 r1311: [580..581]
 r1312: [577..579]
 r1313: [556..576]
 r1314: [572..573]
 r1315: [565..571]
 r1316: [567..568]
 r1317: [565..566]
 r1318: [560..564]
 r1319: [560..561]
 r1320: [558..559]
 r1321: [553..557]
 r1322: [553..555]
 r1323: [548..549]
 r1324: [541..547]
 r1325: [543..544]
 r1326: [541..542]
 r1327: [536..540]
 r1328: [536..537]
 r1329: [534..535]
 r1330: [531..533]
 r1331: [528..530]
 r1332: [523..524]
 r1333: [516..522]
 r1334: [518..519]
 r1335: [516..517]
 r1336: [511..515]
 r1337: [511..512]
 r1338: [509..510]
 r1339: [505..508]
 r1340: [501..502]
 r1341: [494..500]
 r1342: [496..497]
 r1343: [494..495]
 r1344: [489..493]
 r1345: [489..490]
 r1346: [487..488]
 r1347: [484..486]
 r1348: [441..483]
 r1349: [479..480]
 r1350: [472..478]
 r1351: [474..475]
 r1352: [472..473]
 r1353: [467..471]
 r1354: [467..468]
 r1355: [465..466]
 r1356: [462..464]
 r1357: [441..461]
 r1358: [457..458]
 r1359: [450..456]
 r1360: [452..453]
 r1361: [450..451]
 r1362: [445..449]
 r1363: [445..446]
 r1364: [443..444]
 r1365: [438..442]
 r1366: [438..440]
 r1367: [416..417]
 r1368: [409..415]
 r1369: [411..412]
 r1370: [409..410]
 r1371: [404..408]
 r1372: [404..405]
 r1373: [402..403]
 r1374: [399..401]
 r1375: [393..398]
 r1376: [386..387]
 r1377: [384..385]
 r1378: [379..381]
 r1379: [373..374]
 r1380: [371..372]
 r1381: [366..368]
 r1382: [359..360]
 r1383: [352..358]
 r1384: [354..355]
 r1385: [352..353]
 r1386: [347..351]
 r1387: [347..348]
 r1388: [345..346]
 r1389: [342..344]
 r1390: [318..341]
 r1391: [337..338]
 r1392: [330..336]
 r1393: [332..333]
 r1394: [330..331]
 r1395: [325..329]
 r1396: [325..326]
 r1397: [323..324]
 r1398: [320..322]
 r1399: [318..319]
 r1400: [292..317]
 r1401: [313..314]
 r1402: [304..312]
 r1403: [308..309]
 r1404: [306..307]
 r1405: [304..305]
 r1406: [299..303]
 r1407: [299..300]
 r1408: [297..298]
 r1409: [294..296]
 r1410: [292..293]
 r1411: [266..291]
 r1412: [287..288]
 r1413: [278..286]
 r1414: [282..283]
 r1415: [280..281]
 r1416: [278..279]
 r1417: [273..277]
 r1418: [273..274]
 r1419: [271..272]
 r1420: [268..270]
 r1421: [266..267]
 r1422: [240..265]
 r1423: [261..262]
 r1424: [259..260]
 r1425: [252..258]
 r1426: [254..255]
 r1427: [252..253]
 r1428: [247..251]
 r1429: [247..248]
 r1430: [245..246]
 r1431: [242..244]
 r1432: [240..241]
 r1433: [214..239]
 r1434: [235..236]
 r1435: [233..234]
 r1436: [226..232]
 r1437: [228..229]
 r1438: [226..227]
 r1439: [221..225]
 r1440: [221..222]
 r1441: [219..220]
 r1442: [216..218]
 r1443: [214..215]
 r1444: [186..213]
 r1445: [209..210]
 r1446: [207..208]
 r1447: [198..206]
 r1448: [202..203]
 r1449: [200..201]
 r1450: [198..199]
 r1451: [193..197]
 r1452: [193..194]
 r1453: [191..192]
 r1454: [188..190]
 r1455: [186..187]
 r1456: [158..185]
 r1457: [181..182]
 r1458: [179..180]
 r1459: [170..178]
 r1460: [174..175]
 r1461: [172..173]
 r1462: [170..171]
 r1463: [165..169]
 r1464: [165..166]
 r1465: [163..164]
 r1466: [160..162]
 r1467: [158..159]
 r1468: [156..157]
 r1469: [153..155]
 r1470: [147..148]
 r1471: [140..146]
 r1472: [142..143]
 r1473: [140..141]
 r1474: [135..139]
 r1475: [135..136]
 r1476: [133..134]
 r1477: [130..132]
 r1478: [127..129]
 r1479: [124..126]
 r1480: [103..104]
 r1481: [96..102]
 r1482: [98..99]
 r1483: [96..97]
 r1484: [91..95]
 r1485: [91..92]
 r1486: [89..90]
 r1487: [67..88]
 r1488: [84..85]
 r1489: [77..83]
 r1490: [79..80]
 r1491: [77..78]
 r1492: [72..76]
 r1493: [72..73]
 r1494: [70..71]
 r1495: [62..69]
 r1496: [62..64]
 r1497: [58..59]
 r1498: [51..57]
 r1499: [53..54]
 r1500: [51..52]
 r1501: [46..50]
 r1502: [46..47]
 r1503: [44..45]
 r1504: [22..43]
 r1505: [39..40]
 r1506: [32..38]
 r1507: [34..35]
 r1508: [32..33]
 r1509: [27..31]
 r1510: [27..28]
 r1511: [25..26]
 r1512: [17..24]
 r1513: [17..19]
 r1514: [2855..2864] [2851..2853]
 r1515: [2752..2763] [2748..2750]
 r1516: [1054..1063] [1050..1052]
 r1517: [951..962] [947..949]
 r1518: [4109..4111]
 r1519: [4061..4110]
 r1520: [4061..4062]
 r1521: [4068..4069]
 r1522: [3992..3993]
 r1523: [4058..4060]
 r1524: [3996..4059]
 r1525: [3996..3997]
 r1526: [4003..4004]
 r1527: [2078..2079]
 r1528: [3989..3991]
 r1529: [3690..3990]
 r1530: [3690..3691]
 r1531: [3697..3698]
 r1532: [2614..2615]
 r1533: [3681..3683]
 r1534: [2618..3682]
 r1535: [2618..2619]
 r1536: [2625..2626]
 r1537: [2597..2598]
 r1538: [2082..2083]
 r1539: [2594..2596]
 r1540: [2086..2595]
 r1541: [2086..2087]
 r1542: [2093..2094]
 r1543: [1515..1516]
 r1544: [2075..2077]
 r1545: [1681..2076]
 r1546: [1681..1682]
 r1547: [1688..1689]
 r1548: [1678..1680]
 r1549: [1519..1679]
 r1550: [1519..1520]
 r1551: [1526..1527]
 r1552: [0..1]
 r1553: [1512..1514]
 r1554: [425..1513]
 r1555: [425..426]
 r1556: [432..433]
 r1557: [1309..1310]
 r1558: [422..424]
 r1559: [4..423]
 r1560: [4..5]
 r1561: [11..12]
 r1562: [109..110]
 r1563: [4112..4113]
 r1564: [4063..4064]
 r1565: [4070..4071]
 r1566: [4105..4106]
 r1567: [4100..4101]
 r1568: [4093..4094]
 r1569: [4090..4091]
 r1570: [4087..4088]
 r1571: [4082..4083]
 r1572: [4073..4074]
 r1573: [3994..3995]
 r1574: [3998..3999]
 r1575: [4005..4006]
 r1576: [4054..4055]
 r1577: [4047..4048]
 r1578: [4040..4041]
 r1579: [4033..4034]
 r1580: [4030..4031]
 r1581: [4025..4026]
 r1582: [4018..4019]
 r1583: [4011..4012]
 r1584: [4008..4009]
 r1585: [2080..2081]
 r1586: [3692..3693]
 r1587: [3699..3700]
 r1588: [3985..3986]
 r1589: [3980..3981]
 r1590: [3973..3974]
 r1591: [3965..3967]
 r1592: [3965..3966]
 r1593: [3963..3964]
 r1594: [3958..3959]
 r1595: [3951..3952]
 r1596: [3943..3945]
 r1597: [3943..3944]
 r1598: [3941..3942]
 r1599: [3936..3937]
 r1600: [3929..3930]
 r1601: [3921..3923]
 r1602: [3921..3922]
 r1603: [3919..3920]
 r1604: [3914..3915]
 r1605: [3907..3908]
 r1606: [3899..3901]
 r1607: [3899..3900]
 r1608: [3897..3898]
 r1609: [3892..3893]
 r1610: [3885..3886]
 r1611: [3877..3879]
 r1612: [3877..3878]
 r1613: [3875..3876]
 r1614: [3870..3871]
 r1615: [3863..3864]
 r1616: [3855..3857]
 r1617: [3855..3856]
 r1618: [3853..3854]
 r1619: [3848..3849]
 r1620: [3841..3842]
 r1621: [3833..3835]
 r1622: [3833..3834]
 r1623: [3831..3832]
 r1624: [3826..3827]
 r1625: [3819..3820]
 r1626: [3811..3813]
 r1627: [3811..3812]
 r1628: [3809..3810]
 r1629: [3804..3805]
 r1630: [3797..3798]
 r1631: [3790..3791]
 r1632: [3788..3789]
 r1633: [3783..3784]
 r1634: [3776..3777]
 r1635: [3768..3770]
 r1636: [3768..3769]
 r1637: [3766..3767]
 r1638: [3761..3762]
 r1639: [3754..3755]
 r1640: [3746..3748]
 r1641: [3746..3747]
 r1642: [3744..3745]
 r1643: [3739..3740]
 r1644: [3732..3733]
 r1645: [3724..3726]
 r1646: [3724..3725]
 r1647: [3722..3723]
 r1648: [3717..3718]
 r1649: [3710..3711]
 r1650: [3702..3704]
 r1651: [3702..3703]
 r1652: [3688..3689]
 r1653: [3684..3687]
 r1654: [3685..3686]
 r1657: [2616..2617]
 r1658: [2620..2621]
 r1659: [2627..2628]
 r1660: [3677..3678]
 r1661: [3672..3673]
 r1662: [3663..3666]
 r1663: [3663..3664]
 r1664: [3658..3659]
 r1665: [3653..3654]
 r1666: [3646..3647]
 r1667: [3644..3645]
 r1668: [3642..3643]
 r1669: [3637..3638]
 r1670: [3630..3631]
 r1671: [3623..3624]
 r1672: [3602..3603]
 r1673: [3597..3598]
 r1674: [3590..3591]
 r1675: [3581..3584]
 r1676: [3581..3582]
 r1677: [3578..3579]
 r1678: [3533..3534]
 r1679: [3528..3529]
 r1680: [3520..3522]
 r1681: [3520..3521]
 r1682: [3575..3576]
 r1683: [3570..3571]
 r1684: [3563..3564]
 r1685: [3554..3557]
 r1686: [3554..3555]
 r1687: [3549..3550]
 r1688: [3544..3545]
 r1689: [3536..3538]
 r1690: [3536..3537]
 r1691: [3517..3518]
 r1692: [3514..3515]
 r1693: [3511..3512]
 r1694: [3506..3507]
 r1695: [3498..3500]
 r1696: [3498..3499]
 r1697: [3618..3619]
 r1698: [3613..3614]
 r1699: [3605..3607]
 r1700: [3605..3606]
 r1701: [3495..3496]
 r1702: [3490..3491]
 r1703: [3483..3484]
 r1704: [3476..3477]
 r1705: [3473..3474]
 r1706: [3466..3467]
 r1707: [3459..3460]
 r1708: [3452..3453]
 r1709: [3443..3444]
 r1710: [3445..3446]
 r1711: [3441..3442]
 r1712: [3436..3437]
 r1713: [3429..3430]
 r1714: [3422..3423]
 r1715: [3417..3418]
 r1716: [3410..3411]
 r1717: [3403..3404]
 r1718: [3396..3397]
 r1719: [3393..3394]
 r1720: [3390..3391]
 r1721: [3383..3384]
 r1722: [3376..3377]
 r1723: [3369..3370]
 r1724: [3366..3367]
 r1725: [3361..3362]
 r1726: [3354..3355]
 r1727: [3347..3348]
 r1728: [3343..3344]
 r1729: [3341..3342]
 r1730: [3336..3337]
 r1731: [3329..3330]
 r1732: [3322..3323]
 r1733: [3319..3320]
 r1734: [3314..3315]
 r1735: [3307..3308]
 r1736: [3298..3299]
 r1737: [3296..3297]
 r1738: [3291..3292]
 r1739: [3284..3285]
 r1740: [3277..3278]
 r1741: [3274..3275]
 r1742: [3269..3270]
 r1743: [3262..3263]
 r1744: [3255..3256]
 r1745: [3252..3253]
 r1746: [3250..3251]
 r1747: [3245..3246]
 r1748: [3238..3239]
 r1749: [3231..3232]
 r1750: [3228..3229]
 r1751: [3223..3224]
 r1752: [3216..3217]
 r1753: [3209..3210]
 r1754: [3206..3207]
 r1755: [3204..3205]
 r1756: [3199..3200]
 r1757: [3192..3193]
 r1758: [3185..3186]
 r1759: [3182..3183]
 r1760: [3177..3178]
 r1761: [3170..3171]
 r1762: [3161..3164]
 r1763: [3161..3162]
 r1764: [3156..3157]
 r1765: [3151..3152]
 r1766: [3144..3145]
 r1767: [3135..3136]
 r1768: [3133..3134]
 r1769: [3128..3129]
 r1770: [3121..3122]
 r1771: [3114..3115]
 r1772: [3111..3112]
 r1773: [3106..3107]
 r1774: [3099..3100]
 r1775: [3090..3093]
 r1776: [3090..3091]
 r1777: [3085..3086]
 r1778: [3080..3081]
 r1779: [3073..3074]
 r1780: [3064..3065]
 r1781: [3062..3063]
 r1782: [3057..3058]
 r1783: [3050..3051]
 r1784: [3043..3044]
 r1785: [3040..3041]
 r1786: [3035..3036]
 r1787: [3028..3029]
 r1788: [3021..3022]
 r1789: [3016..3017]
 r1790: [3011..3012]
 r1791: [3004..3005]
 r1792: [2995..2996]
 r1793: [2993..2994]
 r1794: [2988..2989]
 r1795: [2981..2982]
 r1796: [2974..2975]
 r1797: [2971..2972]
 r1798: [2966..2967]
 r1799: [2959..2960]
 r1800: [2950..2953]
 r1801: [2950..2951]
 r1802: [2947..2948]
 r1803: [2942..2943]
 r1804: [2935..2936]
 r1805: [2928..2929]
 r1806: [2917..2918]
 r1807: [2914..2915]
 r1808: [2909..2910]
 r1809: [2902..2903]
 r1810: [2893..2894]
 r1811: [2891..2892]
 r1812: [2886..2887]
 r1813: [2879..2880]
 r1814: [2870..2873]
 r1815: [2870..2871]
 r1816: [2865..2866]
 r1817: [2867..2868]
 r1818: [2862..2863]
 r1819: [2859..2860]
 r1820: [2849..2850]
 r1821: [2847..2848]
 r1822: [2845..2846]
 r1823: [2842..2843]
 r1824: [2840..2841]
 r1825: [2837..2838]
 r1826: [2832..2833]
 r1827: [2827..2828]
 r1828: [2820..2821]
 r1829: [2811..2814]
 r1830: [2811..2812]
 r1831: [2808..2809]
 r1832: [2803..2804]
 r1833: [2800..2801]
 r1834: [2795..2796]
 r1835: [2788..2789]
 r1836: [2779..2782]
 r1837: [2779..2780]
 r1838: [2776..2777]
 r1839: [2764..2765]
 r1840: [2759..2760]
 r1841: [2761..2762]
 r1842: [2756..2757]
 r1843: [2739..2740]
 r1844: [2741..2742]
 r1845: [2736..2738]
 r1846: [2736..2737]
 r1847: [2732..2734]
 r1848: [2732..2733]
 r1849: [2725..2726]
 r1850: [2718..2719]
 r1851: [2720..2721]
 r1852: [2716..2717]
 r1853: [2688..2689]
 r1854: [2712..2714]
 r1855: [2712..2713]
 r1856: [2685..2686]
 r1857: [2709..2710]
 r1858: [2704..2705]
 r1859: [2697..2698]
 r1860: [2694..2695]
 r1861: [2682..2683]
 r1862: [2691..2692]
 r1863: [2679..2680]
 r1864: [2677..2678]
 r1865: [2672..2673]
 r1866: [2665..2666]
 r1867: [2658..2659]
 r1868: [2655..2656]
 r1869: [2652..2653]
 r1870: [2647..2648]
 r1871: [2640..2641]
 r1872: [2631..2632]
 r1873: [2599..2600]
 r1874: [2612..2613]
 r1875: [2603..2605]
 r1876: [2603..2604]
 r1877: [2084..2085]
 r1878: [2088..2089]
 r1879: [2095..2096]
 r1880: [2590..2591]
 r1881: [2584..2585]
 r1884: [2579..2580]
 r1885: [2581..2582]
 r1886: [2577..2578]
 r1887: [2571..2572]
 r1890: [2566..2567]
 r1891: [2568..2569]
 r1892: [2564..2565]
 r1893: [2559..2560]
 r1894: [2552..2553]
 r1895: [2545..2546]
 r1896: [2542..2543]
 r1897: [2537..2538]
 r1898: [2530..2531]
 r1899: [2523..2524]
 r1900: [2518..2519]
 r1901: [2513..2514]
 r1902: [2504..2505]
 r1903: [2497..2498]
 r1904: [2492..2493]
 r1905: [2487..2488]
 r1906: [2478..2479]
 r1907: [2471..2472]
 r1908: [2462..2463]
 r1909: [2464..2465]
 r1910: [2460..2461]
 r1911: [2453..2454]
 r1912: [2446..2447]
 r1913: [2439..2440]
 r1914: [2436..2437]
 r1915: [2429..2430]
 r1916: [2422..2423]
 r1917: [2415..2416]
 r1918: [2410..2411]
 r1919: [2403..2404]
 r1920: [2394..2395]
 r1921: [2387..2388]
 r1922: [2382..2383]
 r1923: [2375..2376]
 r1924: [2366..2367]
 r1925: [2359..2360]
 r1926: [2350..2351]
 r1927: [2352..2353]
 r1928: [2346..2347]
 r1929: [2348..2349]
 r1930: [2344..2345]
 r1931: [2337..2338]
 r1932: [2339..2340]
 r1933: [2335..2336]
 r1934: [2330..2331]
 r1935: [2323..2324]
 r1936: [2316..2317]
 r1937: [2311..2312]
 r1938: [2304..2305]
 r1939: [2297..2298]
 r1940: [2290..2291]
 r1941: [2287..2288]
 r1942: [2284..2285]
 r1943: [2279..2280]
 r1944: [2272..2273]
 r1945: [2265..2266]
 r1946: [2262..2263]
 r1947: [2257..2258]
 r1948: [2250..2251]
 r1949: [2241..2242]
 r1950: [2239..2240]
 r1951: [2234..2235]
 r1952: [2227..2228]
 r1953: [2220..2221]
 r1954: [2217..2218]
 r1955: [2212..2213]
 r1956: [2205..2206]
 r1957: [2196..2199]
 r1958: [2196..2197]
 r1959: [2191..2192]
 r1960: [2186..2187]
 r1961: [2179..2180]
 r1962: [2170..2171]
 r1963: [2168..2169]
 r1964: [2163..2164]
 r1965: [2156..2157]
 r1966: [2149..2150]
 r1967: [2146..2147]
 r1968: [2141..2142]
 r1969: [2134..2135]
 r1970: [2125..2128]
 r1971: [2125..2126]
 r1972: [2120..2121]
 r1973: [2115..2116]
 r1974: [2108..2109]
 r1975: [2099..2100]
 r1976: [1517..1518]
 r1977: [1683..1684]
 r1978: [1690..1691]
 r1979: [2071..2072]
 r1980: [2066..2067]
 r1981: [2059..2060]
 r1982: [2052..2053]
 r1983: [2049..2050]
 r1984: [2046..2047]
 r1985: [2043..2044]
 r1986: [2038..2039]
 r1987: [2031..2032]
 r1988: [2024..2025]
 r1989: [2019..2020]
 r1990: [2021..2022]
 r1991: [2017..2018]
 r1992: [2012..2013]
 r1993: [2005..2006]
 r1994: [1998..1999]
 r1995: [1993..1994]
 r1996: [1988..1989]
 r1997: [1981..1982]
 r1998: [1974..1975]
 r1999: [1969..1970]
 r2000: [1964..1965]
 r2001: [1957..1958]
 r2002: [1948..1949]
 r2003: [1946..1947]
 r2004: [1941..1942]
 r2005: [1934..1935]
 r2006: [1927..1928]
 r2007: [1924..1925]
 r2008: [1917..1918]
 r2009: [1910..1911]
 r2010: [1903..1904]
 r2011: [1896..1897]
 r2012: [1891..1892]
 r2013: [1884..1885]
 r2014: [1877..1878]
 r2015: [1874..1875]
 r2016: [1872..1873]
 r2017: [1867..1868]
 r2018: [1860..1861]
 r2019: [1853..1854]
 r2020: [1850..1851]
 r2021: [1845..1846]
 r2022: [1838..1839]
 r2023: [1829..1830]
 r2024: [1827..1828]
 r2025: [1822..1823]
 r2026: [1815..1816]
 r2027: [1808..1809]
 r2028: [1805..1806]
 r2029: [1800..1801]
 r2030: [1793..1794]
 r2031: [1784..1785]
 r2032: [1782..1783]
 r2033: [1777..1778]
 r2034: [1770..1771]
 r2035: [1763..1764]
 r2036: [1760..1761]
 r2037: [1755..1756]
 r2038: [1748..1749]
 r2039: [1739..1740]
 r2040: [1737..1738]
 r2041: [1732..1733]
 r2042: [1725..1726]
 r2043: [1718..1719]
 r2044: [1715..1716]
 r2045: [1710..1711]
 r2046: [1703..1704]
 r2047: [1694..1695]
 r2048: [1521..1522]
 r2049: [1528..1529]
 r2050: [1674..1675]
 r2051: [1669..1670]
 r2052: [1662..1663]
 r2053: [1655..1656]
 r2054: [1652..1653]
 r2055: [1649..1650]
 r2056: [1646..1647]
 r2057: [1641..1642]
 r2058: [1634..1635]
 r2059: [1627..1628]
 r2060: [1622..1623]
 r2061: [1624..1625]
 r2062: [1620..1621]
 r2063: [1615..1616]
 r2064: [1608..1609]
 r2065: [1601..1602]
 r2066: [1598..1599]
 r2067: [1593..1594]
 r2068: [1586..1587]
 r2069: [1577..1578]
 r2070: [1575..1576]
 r2071: [1570..1571]
 r2072: [1563..1564]
 r2073: [1556..1557]
 r2074: [1553..1554]
 r2075: [1548..1549]
 r2076: [1541..1542]
 r2077: [1532..1533]
 r2078: [2..3]
 r2079: [427..428]
 r2080: [434..435]
 r2081: [1508..1509]
 r2082: [1503..1504]
 r2083: [1496..1497]
 r2084: [1489..1490]
 r2085: [1486..1487]
 r2086: [1483..1484]
 r2087: [1480..1481]
 r2088: [1478..1479]
 r2089: [1473..1474]
 r2090: [1466..1467]
 r2091: [1459..1460]
 r2092: [1456..1457]
 r2093: [1449..1450]
 r2094: [1442..1443]
 r2095: [1435..1436]
 r2096: [1428..1429]
 r2097: [1423..1424]
 r2098: [1416..1417]
 r2099: [1409..1410]
 r2100: [1406..1407]
 r2101: [1311..1312]
 r2102: [1403..1404]
 r2103: [1398..1399]
 r2104: [1391..1392]
 r2105: [1384..1385]
 r2106: [1381..1382]
 r2107: [1374..1375]
 r2108: [1367..1368]
 r2109: [1360..1361]
 r2110: [1351..1352]
 r2111: [1353..1354]
 r2112: [1349..1350]
 r2113: [1344..1345]
 r2114: [1337..1338]
 r2115: [1330..1331]
 r2116: [1327..1328]
 r2117: [1322..1323]
 r2118: [1324..1325]
 r2119: [1320..1321]
 r2120: [1317..1318]
 r2121: [1315..1316]
 r2122: [1305..1306]
 r2123: [1298..1299]
 r2124: [1291..1292]
 r2125: [1284..1285]
 r2126: [1281..1282]
 r2127: [1276..1277]
 r2128: [1269..1270]
 r2129: [1262..1263]
 r2130: [1258..1259]
 r2131: [1256..1257]
 r2132: [1251..1252]
 r2133: [1244..1245]
 r2134: [1237..1238]
 r2135: [1234..1235]
 r2136: [1227..1228]
 r2137: [1220..1221]
 r2138: [1213..1214]
 r2139: [1204..1205]
 r2140: [1206..1207]
 r2141: [1202..1203]
 r2142: [1197..1198]
 r2143: [1190..1191]
 r2144: [1182..1184]
 r2145: [1182..1183]
 r2146: [1180..1181]
 r2147: [1175..1176]
 r2148: [1168..1169]
 r2149: [1161..1162]
 r2150: [1156..1157]
 r2151: [1149..1150]
 r2152: [1140..1143]
 r2153: [1140..1141]
 r2154: [1137..1138]
 r2155: [1135..1136]
 r2156: [1130..1131]
 r2157: [1123..1124]
 r2158: [1116..1117]
 r2159: [1111..1112]
 r2160: [1104..1105]
 r2161: [1095..1098]
 r2162: [1095..1096]
 r2163: [1092..1093]
 r2164: [1090..1091]
 r2165: [1085..1086]
 r2166: [1078..1079]
 r2167: [1069..1072]
 r2168: [1069..1070]
 r2169: [1064..1065]
 r2170: [1066..1067]
 r2171: [1061..1062]
 r2172: [1058..1059]
 r2173: [1048..1049]
 r2174: [1046..1047]
 r2175: [1044..1045]
 r2176: [1041..1042]
 r2177: [1039..1040]
 r2178: [1036..1037]
 r2179: [1031..1032]
 r2180: [1026..1027]
 r2181: [1019..1020]
 r2182: [1010..1013]
 r2183: [1010..1011]
 r2184: [1007..1008]
 r2185: [1002..1003]
 r2186: [999..1000]
 r2187: [994..995]
 r2188: [987..988]
 r2189: [978..981]
 r2190: [978..979]
 r2191: [975..976]
 r2192: [963..964]
 r2193: [958..959]
 r2194: [960..961]
 r2195: [955..956]
 r2196: [938..939]
 r2197: [940..941]
 r2198: [935..937]
 r2199: [935..936]
 r2200: [931..933]
 r2201: [931..932]
 r2202: [924..925]
 r2203: [917..918]
 r2204: [919..920]
 r2205: [915..916]
 r2206: [887..888]
 r2207: [911..913]
 r2208: [911..912]
 r2209: [884..885]
 r2210: [908..909]
 r2211: [903..904]
 r2212: [896..897]
 r2213: [893..894]
 r2214: [881..882]
 r2215: [890..891]
 r2216: [878..879]
 r2217: [876..877]
 r2218: [871..872]
 r2219: [864..865]
 r2220: [856..858]
 r2221: [856..857]
 r2222: [854..855]
 r2223: [849..850]
 r2224: [842..843]
 r2225: [835..836]
 r2226: [830..831]
 r2227: [823..824]
 r2228: [816..817]
 r2229: [813..814]
 r2230: [811..812]
 r2231: [806..807]
 r2232: [799..800]
 r2233: [790..793]
 r2234: [790..791]
 r2235: [787..788]
 r2236: [782..783]
 r2237: [775..776]
 r2238: [768..769]
 r2239: [757..758]
 r2240: [752..753]
 r2241: [745..746]
 r2242: [738..739]
 r2243: [735..736]
 r2244: [732..733]
 r2245: [727..728]
 r2246: [720..721]
 r2247: [713..714]
 r2248: [710..711]
 r2249: [705..706]
 r2250: [698..699]
 r2251: [691..692]
 r2252: [688..689]
 r2253: [683..684]
 r2254: [676..677]
 r2255: [667..668]
 r2256: [665..666]
 r2257: [660..661]
 r2258: [653..654]
 r2259: [646..647]
 r2260: [643..644]
 r2261: [640..641]
 r2262: [635..636]
 r2263: [628..629]
 r2264: [620..622]
 r2265: [620..621]
 r2266: [618..619]
 r2267: [613..614]
 r2268: [606..607]
 r2269: [599..600]
 r2270: [596..597]
 r2271: [591..592]
 r2272: [584..585]
 r2273: [577..578]
 r2274: [574..575]
 r2275: [569..570]
 r2276: [562..563]
 r2277: [553..554]
 r2278: [550..551]
 r2279: [545..546]
 r2280: [538..539]
 r2281: [531..532]
 r2282: [528..529]
 r2283: [525..526]
 r2284: [520..521]
 r2285: [513..514]
 r2286: [505..507]
 r2287: [505..506]
 r2288: [503..504]
 r2289: [498..499]
 r2290: [491..492]
 r2291: [484..485]
 r2292: [481..482]
 r2293: [476..477]
 r2294: [469..470]
 r2295: [462..463]
 r2296: [459..460]
 r2297: [454..455]
 r2298: [447..448]
 r2299: [438..439]
 r2300: [6..7]
 r2301: [13..14]
 r2302: [418..419]
 r2303: [413..414]
 r2304: [406..407]
 r2305: [399..400]
 r2306: [396..397]
 r2307: [393..394]
 r2308: [390..391]
 r2309: [388..389]
 r2310: [382..383]
 r2313: [377..378]
 r2314: [379..380]
 r2315: [375..376]
 r2316: [369..370]
 r2319: [364..365]
 r2320: [366..367]
 r2321: [111..112]
 r2322: [361..362]
 r2323: [356..357]
 r2324: [349..350]
 r2325: [342..343]
 r2326: [339..340]
 r2327: [334..335]
 r2328: [327..328]
 r2329: [320..321]
 r2330: [315..316]
 r2331: [310..311]
 r2332: [301..302]
 r2333: [294..295]
 r2334: [289..290]
 r2335: [284..285]
 r2336: [275..276]
 r2337: [268..269]
 r2338: [263..264]
 r2339: [256..257]
 r2340: [249..250]
 r2341: [242..243]
 r2342: [237..238]
 r2343: [230..231]
 r2344: [223..224]
 r2345: [216..217]
 r2346: [211..212]
 r2347: [204..205]
 r2348: [195..196]
 r2349: [188..189]
 r2350: [183..184]
 r2351: [176..177]
 r2352: [167..168]
 r2353: [160..161]
 r2354: [151..152]
 r2355: [153..154]
 r2356: [149..150]
 r2357: [144..145]
 r2358: [137..138]
 r2359: [130..131]
 r2360: [127..128]
 r2361: [122..123]
 r2362: [124..125]
 r2363: [120..121]
 r2364: [117..118]
 r2365: [115..116]
 r2366: [105..106]
 r2367: [100..101]
 r2368: [93..94]
 r2369: [86..87]
 r2370: [81..82]
 r2371: [74..75]
 r2372: [65..68]
 r2373: [65..66]
 r2374: [62..63]
 r2375: [60..61]
 r2376: [55..56]
 r2377: [48..49]
 r2378: [41..42]
 r2379: [36..37]
 r2380: [29..30]
 r2381: [20..23]
 r2382: [20..21]
 r2383: [17..18]
 r2384: [2920..2921]
 r2385: [2835..2836]
 r2387: [1034..1035]
 r2389: [760..761]
 r2392: [965..966]
 r2393: [2766..2767]
 r2394: [2768..2834]
 r2395: [967..1033]
Compressing live ranges: from 4114 to 3384 - 82%
Ranges after the compression:
 r87: [3376..3377]
 r88: [3372..3375]
 r89: [3372..3373]
 r90: [3370..3371]
 r91: [3368..3369]
 r92: [3354..3367]
 r93: [3354..3365]
 r94: [3362..3363]
 r95: [3358..3361]
 r96: [3358..3359]
 r97: [3356..3357]
 r98: [3352..3355]
 r99: [3352..3353]
 r100: [3338..3339]
 r101: [3336..3337]
 r102: [3330..3335]
 r103: [3332..3333]
 r104: [3330..3331]
 r105: [3326..3329]
 r106: [3326..3327]
 r107: [3324..3325]
 r108: [3322..3323]
 r109: [3304..3321]
 r110: [3318..3319]
 r111: [3312..3317]
 r112: [3314..3315]
 r113: [3312..3313]
 r114: [3308..3311]
 r115: [3308..3309]
 r116: [3306..3307]
 r117: [3302..3305]
 r118: [3302..3303]
 r119: [3284..3285]
 r120: [3278..3283]
 r121: [3280..3281]
 r122: [3278..3279]
 r123: [3274..3277]
 r124: [3274..3275]
 r125: [3272..3273]
 r126: [3270..3271]
 r127: [3266..3267]
 r128: [3260..3265]
 r129: [3262..3263]
 r130: [3260..3261]
 r131: [3256..3259]
 r132: [3256..3257]
 r133: [3254..3255]
 r134: [3252..3253]
 r135: [3248..3249]
 r136: [3242..3247]
 r137: [3244..3245]
 r138: [3242..3243]
 r139: [3238..3241]
 r140: [3238..3239]
 r141: [3236..3237]
 r142: [3234..3235]
 r143: [3230..3231]
 r144: [3224..3229]
 r145: [3226..3227]
 r146: [3224..3225]
 r147: [3220..3223]
 r148: [3220..3221]
 r149: [3218..3219]
 r150: [3216..3217]
 r151: [3212..3213]
 r152: [3206..3211]
 r153: [3208..3209]
 r154: [3206..3207]
 r155: [3202..3205]
 r156: [3202..3203]
 r157: [3200..3201]
 r158: [3198..3199]
 r159: [3194..3195]
 r160: [3188..3193]
 r161: [3190..3191]
 r162: [3188..3189]
 r163: [3184..3187]
 r164: [3184..3185]
 r165: [3182..3183]
 r166: [3180..3181]
 r167: [3176..3177]
 r168: [3170..3175]
 r169: [3172..3173]
 r170: [3170..3171]
 r171: [3166..3169]
 r172: [3166..3167]
 r173: [3164..3165]
 r174: [3162..3163]
 r175: [3158..3159]
 r176: [3152..3157]
 r177: [3154..3155]
 r178: [3152..3153]
 r179: [3148..3151]
 r180: [3148..3149]
 r181: [3146..3147]
 r182: [3144..3145]
 r183: [3140..3141]
 r184: [3134..3139]
 r185: [3136..3137]
 r186: [3134..3135]
 r187: [3130..3133]
 r188: [3130..3131]
 r189: [3128..3129]
 r190: [3126..3127]
 r191: [3122..3123]
 r192: [3116..3121]
 r193: [3118..3119]
 r194: [3116..3117]
 r195: [3112..3115]
 r196: [3112..3113]
 r197: [3110..3111]
 r198: [3108..3109]
 r199: [3104..3105]
 r200: [3098..3103]
 r201: [3100..3101]
 r202: [3098..3099]
 r203: [3094..3097]
 r204: [3094..3095]
 r205: [3092..3093]
 r206: [3090..3091]
 r207: [3086..3087]
 r208: [3080..3085]
 r209: [3082..3083]
 r210: [3080..3081]
 r211: [3076..3079]
 r212: [3076..3077]
 r213: [3074..3075]
 r214: [3072..3073]
 r215: [3068..3069]
 r216: [3062..3067]
 r217: [3064..3065]
 r218: [3062..3063]
 r219: [3058..3061]
 r220: [3058..3059]
 r221: [3056..3057]
 r222: [3054..3055]
 r223: [3036..3037]
 r224: [3032..3035]
 r225: [3032..3033]
 r226: [3030..3031]
 r227: [3028..3029]
 r228: [3024..3025]
 r229: [3020..3021]
 r230: [3016..3019]
 r231: [3016..3017]
 r232: [3014..3015]
 r233: [3012..3013]
 r234: [3006..3007]
 r235: [3000..3005]
 r236: [3002..3003]
 r237: [3000..3001]
 r238: [2996..2999]
 r239: [2996..2997]
 r240: [2994..2995]
 r241: [2992..2993]
 r242: [2990..2991]
 r243: [2974..2975]
 r244: [2968..2973]
 r245: [2970..2971]
 r246: [2968..2969]
 r247: [2964..2967]
 r248: [2964..2965]
 r249: [2962..2963]
 r250: [2960..2961]
 r251: [2956..2957]
 r252: [2918..2919]
 r253: [2914..2917]
 r254: [2914..2915]
 r255: [2912..2913]
 r256: [2910..2911]
 r257: [2952..2953]
 r258: [2946..2951]
 r259: [2948..2949]
 r260: [2946..2947]
 r261: [2942..2945]
 r262: [2942..2943]
 r263: [2940..2941]
 r264: [2938..2939]
 r265: [2934..2935]
 r266: [2930..2931]
 r267: [2926..2929]
 r268: [2926..2927]
 r269: [2924..2925]
 r270: [2922..2923]
 r271: [2902..2903]
 r272: [2898..2901]
 r273: [2898..2899]
 r274: [2896..2897]
 r275: [2894..2895]
 r276: [2986..2987]
 r277: [2982..2985]
 r278: [2982..2983]
 r279: [2980..2981]
 r280: [2978..2979]
 r281: [2890..2891]
 r282: [2884..2889]
 r283: [2886..2887]
 r284: [2884..2885]
 r285: [2880..2883]
 r286: [2880..2881]
 r287: [2878..2879]
 r288: [2876..2877]
 r289: [2854..2875]
 r290: [2872..2873]
 r291: [2870..2871]
 r292: [2864..2869]
 r293: [2866..2867]
 r294: [2864..2865]
 r295: [2860..2863]
 r296: [2860..2861]
 r297: [2858..2859]
 r298: [2856..2857]
 r299: [2854..2855]
 r300: [2852..2853]
 r301: [2850..2851]
 r302: [2844..2845]
 r303: [2838..2843]
 r304: [2840..2841]
 r305: [2838..2839]
 r306: [2834..2837]
 r307: [2834..2835]
 r308: [2832..2833]
 r309: [2830..2831]
 r310: [2828..2829]
 r311: [2824..2825]
 r312: [2822..2823]
 r313: [2816..2821]
 r314: [2818..2819]
 r315: [2816..2817]
 r316: [2812..2815]
 r317: [2812..2813]
 r318: [2810..2811]
 r319: [2808..2809]
 r320: [2806..2807]
 r321: [2802..2803]
 r322: [2800..2801]
 r323: [2794..2799]
 r324: [2796..2797]
 r325: [2794..2795]
 r326: [2790..2793]
 r327: [2790..2791]
 r328: [2788..2789]
 r329: [2786..2787]
 r330: [2766..2785]
 r331: [2782..2783]
 r332: [2776..2781]
 r333: [2778..2779]
 r334: [2776..2777]
 r335: [2772..2775]
 r336: [2772..2773]
 r337: [2770..2771]
 r338: [2768..2769]
 r339: [2766..2767]
 r340: [2760..2761]
 r341: [2754..2759]
 r342: [2756..2757]
 r343: [2754..2755]
 r344: [2750..2753]
 r345: [2750..2751]
 r346: [2748..2749]
 r347: [2746..2747]
 r348: [2728..2745]
 r349: [2742..2743]
 r350: [2736..2741]
 r351: [2738..2739]
 r352: [2736..2737]
 r353: [2732..2735]
 r354: [2732..2733]
 r355: [2730..2731]
 r356: [2726..2729]
 r357: [2726..2727]
 r358: [2722..2723]
 r359: [2716..2721]
 r360: [2718..2719]
 r361: [2716..2717]
 r362: [2712..2715]
 r363: [2712..2713]
 r364: [2710..2711]
 r365: [2708..2709]
 r366: [2690..2707]
 r367: [2704..2705]
 r368: [2698..2703]
 r369: [2700..2701]
 r370: [2698..2699]
 r371: [2694..2697]
 r372: [2694..2695]
 r373: [2692..2693]
 r374: [2688..2691]
 r375: [2688..2689]
 r376: [2684..2685]
 r377: [2678..2683]
 r378: [2680..2681]
 r379: [2678..2679]
 r380: [2674..2677]
 r381: [2674..2675]
 r382: [2672..2673]
 r383: [2670..2671]
 r384: [2652..2669]
 r385: [2666..2667]
 r386: [2660..2665]
 r387: [2662..2663]
 r388: [2660..2661]
 r389: [2656..2659]
 r390: [2656..2657]
 r391: [2654..2655]
 r392: [2650..2653]
 r393: [2650..2651]
 r394: [2646..2647]
 r395: [2640..2645]
 r396: [2642..2643]
 r397: [2640..2641]
 r398: [2636..2639]
 r399: [2636..2637]
 r400: [2634..2635]
 r401: [2632..2633]
 r402: [2592..2631]
 r403: [2628..2629]
 r404: [2622..2627]
 r405: [2624..2625]
 r406: [2622..2623]
 r407: [2618..2621]
 r408: [2618..2619]
 r409: [2616..2617]
 r410: [2614..2615]
 r411: [2610..2611]
 r412: [2592..2609]
 r413: [2606..2607]
 r414: [2600..2605]
 r415: [2602..2603]
 r416: [2600..2601]
 r417: [2596..2599]
 r418: [2596..2597]
 r419: [2594..2595]
 r420: [2590..2593]
 r421: [2590..2591]
 r422: [2586..2587]
 r423: [2580..2585]
 r424: [2582..2583]
 r425: [2580..2581]
 r426: [2576..2579]
 r427: [2576..2577]
 r428: [2574..2575]
 r429: [2572..2573]
 r430: [2532..2571]
 r431: [2568..2569]
 r432: [2562..2567]
 r433: [2564..2565]
 r434: [2562..2563]
 r435: [2558..2561]
 r436: [2558..2559]
 r437: [2556..2557]
 r438: [2554..2555]
 r439: [2550..2551]
 r440: [2532..2549]
 r441: [2546..2547]
 r442: [2540..2545]
 r443: [2542..2543]
 r444: [2540..2541]
 r445: [2536..2539]
 r446: [2536..2537]
 r447: [2534..2535]
 r448: [2530..2533]
 r449: [2530..2531]
 r450: [2526..2527]
 r451: [2520..2525]
 r452: [2522..2523]
 r453: [2520..2521]
 r454: [2516..2519]
 r455: [2516..2517]
 r456: [2514..2515]
 r457: [2512..2513]
 r458: [2474..2511]
 r459: [2508..2509]
 r460: [2502..2507]
 r461: [2504..2505]
 r462: [2502..2503]
 r463: [2498..2501]
 r464: [2498..2499]
 r465: [2496..2497]
 r466: [2494..2495]
 r467: [2492..2493]
 r468: [2474..2491]
 r469: [2488..2489]
 r470: [2482..2487]
 r471: [2484..2485]
 r472: [2482..2483]
 r473: [2478..2481]
 r474: [2478..2479]
 r475: [2476..2477]
 r476: [2472..2475]
 r477: [2472..2473]
 r478: [2468..2469]
 r479: [2462..2467]
 r480: [2464..2465]
 r481: [2462..2463]
 r482: [2458..2461]
 r483: [2458..2459]
 r484: [2456..2457]
 r485: [2454..2455]
 r486: [2388..2453]
 r487: [2450..2451]
 r488: [2444..2449]
 r489: [2446..2447]
 r490: [2444..2445]
 r491: [2440..2443]
 r492: [2440..2441]
 r493: [2438..2439]
 r494: [2436..2437]
 r495: [2414..2433]
 r496: [2430..2431]
 r497: [2424..2429]
 r498: [2426..2427]
 r499: [2424..2425]
 r500: [2420..2423]
 r501: [2420..2421]
 r502: [2418..2419]
 r503: [2416..2417]
 r504: [2414..2415]
 r505: [2412..2413]
 r506: [2410..2411]
 r507: [2406..2407]
 r508: [2388..2405]
 r509: [2402..2403]
 r510: [2396..2401]
 r511: [2398..2399]
 r512: [2396..2397]
 r513: [2392..2395]
 r514: [2392..2393]
 r515: [2390..2391]
 r516: [2386..2389]
 r517: [2386..2387]
 r518: [2382..2383]
 r519: [2376..2381]
 r520: [2378..2379]
 r521: [2376..2377]
 r522: [2372..2375]
 r523: [2372..2373]
 r524: [2370..2371]
 r525: [2368..2369]
 r526: [2364..2365]
 r527: [2356..2359]
 r528: [2356..2357]
 r529: [2354..2355]
 r531: [2334..2335]
 r532: [2328..2333]
 r533: [2330..2331]
 r534: [2328..2329]
 r535: [2324..2327]
 r536: [2324..2325]
 r537: [2322..2323]
 r538: [2320..2321]
 r539: [2316..2317]
 r540: [2314..2315]
 r541: [2312..2313]
 r542: [2286..2311]
 r543: [2308..2309]
 r544: [2302..2307]
 r545: [2304..2305]
 r546: [2302..2303]
 r547: [2298..2301]
 r548: [2298..2299]
 r549: [2296..2297]
 r550: [2294..2295]
 r551: [2290..2291]
 r552: [2288..2289]
 r553: [2286..2287]
 r554: [2284..2285]
 r555: [2280..2283]
 r556: [2270..2273]
 r557: [2270..2271]
 r558: [2268..2269]
 r559: [2264..2265]
 r560: [2262..2263]
 r561: [2260..2261]
 r562: [2250..2255]
 r563: [2252..2253]
 r564: [2250..2251]
 r565: [2248..2249]
 r566: [2246..2247]
 r567: [2244..2245]
 r568: [2234..2235]
 r569: [2230..2233]
 r570: [2230..2231]
 r571: [2228..2229]
 r572: [2226..2227]
 r573: [2224..2225]
 r574: [2210..2211]
 r575: [2204..2209]
 r576: [2206..2207]
 r577: [2204..2205]
 r578: [2200..2203]
 r579: [2200..2201]
 r580: [2198..2199]
 r581: [2196..2197]
 r582: [2176..2195]
 r583: [2176..2193]
 r584: [2190..2191]
 r585: [2184..2189]
 r586: [2186..2187]
 r587: [2184..2185]
 r588: [2180..2183]
 r589: [2180..2181]
 r590: [2178..2179]
 r591: [2174..2177]
 r592: [2174..2175]
 r593: [2158..2159]
 r594: [2156..2157]
 r595: [2154..2155]
 r596: [2150..2151]
 r597: [2140..2141]
 r598: [2138..2139]
 r599: [2134..2135]
 r600: [2128..2129]
 r601: [2126..2127]
 r602: [2122..2123]
 r603: [2116..2117]
 r604: [2110..2115]
 r605: [2112..2113]
 r606: [2110..2111]
 r607: [2106..2109]
 r608: [2106..2107]
 r609: [2104..2105]
 r610: [2102..2103]
 r611: [2082..2101]
 r612: [2098..2099]
 r613: [2092..2097]
 r614: [2094..2095]
 r615: [2092..2093]
 r616: [2088..2091]
 r617: [2088..2089]
 r618: [2086..2087]
 r619: [2084..2085]
 r620: [2082..2083]
 r621: [2060..2081]
 r622: [2078..2079]
 r623: [2070..2077]
 r624: [2074..2075]
 r625: [2072..2073]
 r626: [2070..2071]
 r627: [2066..2069]
 r628: [2066..2067]
 r629: [2064..2065]
 r630: [2062..2063]
 r631: [2060..2061]
 r632: [2038..2059]
 r633: [2056..2057]
 r634: [2048..2055]
 r635: [2052..2053]
 r636: [2050..2051]
 r637: [2048..2049]
 r638: [2044..2047]
 r639: [2044..2045]
 r640: [2042..2043]
 r641: [2040..2041]
 r642: [2038..2039]
 r643: [2036..2037]
 r644: [2034..2035]
 r645: [2028..2029]
 r646: [2026..2027]
 r647: [2020..2025]
 r648: [2022..2023]
 r649: [2020..2021]
 r650: [2016..2019]
 r651: [2016..2017]
 r652: [2014..2015]
 r653: [2012..2013]
 r654: [1990..2011]
 r655: [2008..2009]
 r656: [2006..2007]
 r657: [2000..2005]
 r658: [2002..2003]
 r659: [2000..2001]
 r660: [1996..1999]
 r661: [1996..1997]
 r662: [1994..1995]
 r663: [1992..1993]
 r664: [1990..1991]
 r665: [1966..1989]
 r666: [1986..1987]
 r667: [1984..1985]
 r668: [1976..1983]
 r669: [1980..1981]
 r670: [1978..1979]
 r671: [1976..1977]
 r672: [1972..1975]
 r673: [1972..1973]
 r674: [1970..1971]
 r675: [1968..1969]
 r676: [1966..1967]
 r677: [1942..1965]
 r678: [1962..1963]
 r679: [1960..1961]
 r680: [1952..1959]
 r681: [1956..1957]
 r682: [1954..1955]
 r683: [1952..1953]
 r684: [1948..1951]
 r685: [1948..1949]
 r686: [1946..1947]
 r687: [1944..1945]
 r688: [1942..1943]
 r689: [1940..1941]
 r690: [1938..1939]
 r691: [1928..1929]
 r692: [1926..1927]
 r693: [1920..1921]
 r694: [1914..1919]
 r695: [1916..1917]
 r696: [1914..1915]
 r697: [1910..1913]
 r698: [1910..1911]
 r699: [1908..1909]
 r700: [1906..1907]
 r701: [1904..1905]
 r702: [1900..1901]
 r703: [1898..1899]
 r704: [1892..1897]
 r705: [1894..1895]
 r706: [1892..1893]
 r707: [1888..1891]
 r708: [1888..1889]
 r709: [1886..1887]
 r710: [1884..1885]
 r711: [1882..1883]
 r712: [1878..1879]
 r713: [1872..1877]
 r714: [1874..1875]
 r715: [1872..1873]
 r716: [1868..1871]
 r717: [1868..1869]
 r718: [1866..1867]
 r719: [1864..1865]
 r720: [1846..1863]
 r721: [1860..1861]
 r722: [1854..1859]
 r723: [1856..1857]
 r724: [1854..1855]
 r725: [1850..1853]
 r726: [1850..1851]
 r727: [1848..1849]
 r728: [1844..1847]
 r729: [1844..1845]
 r730: [1840..1841]
 r731: [1834..1839]
 r732: [1836..1837]
 r733: [1834..1835]
 r734: [1830..1833]
 r735: [1830..1831]
 r736: [1828..1829]
 r737: [1826..1827]
 r738: [1786..1825]
 r739: [1822..1823]
 r740: [1816..1821]
 r741: [1818..1819]
 r742: [1816..1817]
 r743: [1812..1815]
 r744: [1812..1813]
 r745: [1810..1811]
 r746: [1808..1809]
 r747: [1804..1805]
 r748: [1786..1803]
 r749: [1800..1801]
 r750: [1794..1799]
 r751: [1796..1797]
 r752: [1794..1795]
 r753: [1790..1793]
 r754: [1790..1791]
 r755: [1788..1789]
 r756: [1784..1787]
 r757: [1784..1785]
 r758: [1780..1781]
 r759: [1774..1779]
 r760: [1776..1777]
 r761: [1774..1775]
 r762: [1770..1773]
 r763: [1770..1771]
 r764: [1768..1769]
 r765: [1766..1767]
 r766: [1726..1765]
 r767: [1762..1763]
 r768: [1756..1761]
 r769: [1758..1759]
 r770: [1756..1757]
 r771: [1752..1755]
 r772: [1752..1753]
 r773: [1750..1751]
 r774: [1748..1749]
 r775: [1744..1745]
 r776: [1726..1743]
 r777: [1740..1741]
 r778: [1734..1739]
 r779: [1736..1737]
 r780: [1734..1735]
 r781: [1730..1733]
 r782: [1730..1731]
 r783: [1728..1729]
 r784: [1724..1727]
 r785: [1724..1725]
 r786: [1702..1703]
 r787: [1696..1701]
 r788: [1698..1699]
 r789: [1696..1697]
 r790: [1692..1695]
 r791: [1692..1693]
 r792: [1690..1691]
 r793: [1688..1689]
 r794: [1684..1687]
 r795: [1680..1681]
 r796: [1674..1679]
 r797: [1676..1677]
 r798: [1674..1675]
 r799: [1670..1673]
 r800: [1670..1671]
 r801: [1668..1669]
 r802: [1666..1667]
 r803: [1664..1665]
 r804: [1658..1659]
 r805: [1652..1657]
 r806: [1654..1655]
 r807: [1652..1653]
 r808: [1648..1651]
 r809: [1648..1649]
 r810: [1646..1647]
 r811: [1644..1645]
 r812: [1642..1643]
 r813: [1622..1641]
 r814: [1638..1639]
 r815: [1632..1637]
 r816: [1634..1635]
 r817: [1632..1633]
 r818: [1628..1631]
 r819: [1628..1629]
 r820: [1626..1627]
 r821: [1624..1625]
 r822: [1622..1623]
 r823: [1604..1621]
 r824: [1618..1619]
 r825: [1612..1617]
 r826: [1614..1615]
 r827: [1612..1613]
 r828: [1608..1611]
 r829: [1608..1609]
 r830: [1606..1607]
 r831: [1602..1605]
 r832: [1602..1603]
 r833: [1598..1599]
 r834: [1592..1597]
 r835: [1594..1595]
 r836: [1592..1593]
 r837: [1588..1591]
 r838: [1588..1589]
 r839: [1586..1587]
 r840: [1584..1585]
 r841: [1562..1583]
 r842: [1580..1581]
 r843: [1578..1579]
 r844: [1572..1577]
 r845: [1574..1575]
 r846: [1572..1573]
 r847: [1568..1571]
 r848: [1568..1569]
 r849: [1566..1567]
 r850: [1564..1565]
 r851: [1562..1563]
 r852: [1560..1561]
 r853: [1542..1559]
 r854: [1556..1557]
 r855: [1550..1555]
 r856: [1552..1553]
 r857: [1550..1551]
 r858: [1546..1549]
 r859: [1546..1547]
 r860: [1544..1545]
 r861: [1540..1543]
 r862: [1540..1541]
 r863: [1536..1537]
 r864: [1530..1535]
 r865: [1532..1533]
 r866: [1530..1531]
 r867: [1526..1529]
 r868: [1526..1527]
 r869: [1524..1525]
 r870: [1522..1523]
 r871: [1504..1521]
 r872: [1518..1519]
 r873: [1512..1517]
 r874: [1514..1515]
 r875: [1512..1513]
 r876: [1508..1511]
 r877: [1508..1509]
 r878: [1506..1507]
 r879: [1502..1505]
 r880: [1502..1503]
 r881: [1498..1499]
 r882: [1492..1497]
 r883: [1494..1495]
 r884: [1492..1493]
 r885: [1488..1491]
 r886: [1488..1489]
 r887: [1486..1487]
 r888: [1484..1485]
 r889: [1466..1483]
 r890: [1480..1481]
 r891: [1474..1479]
 r892: [1476..1477]
 r893: [1474..1475]
 r894: [1470..1473]
 r895: [1470..1471]
 r896: [1468..1469]
 r897: [1464..1467]
 r898: [1464..1465]
 r899: [1460..1461]
 r900: [1454..1459]
 r901: [1456..1457]
 r902: [1454..1455]
 r903: [1450..1453]
 r904: [1450..1451]
 r905: [1448..1449]
 r906: [1446..1447]
 r907: [1428..1445]
 r908: [1442..1443]
 r909: [1436..1441]
 r910: [1438..1439]
 r911: [1436..1437]
 r912: [1432..1435]
 r913: [1432..1433]
 r914: [1430..1431]
 r915: [1426..1429]
 r916: [1426..1427]
 r917: [1422..1423]
 r918: [1416..1421]
 r919: [1418..1419]
 r920: [1416..1417]
 r921: [1412..1415]
 r922: [1412..1413]
 r923: [1410..1411]
 r924: [1408..1409]
 r925: [1390..1407]
 r926: [1404..1405]
 r927: [1398..1403]
 r928: [1400..1401]
 r929: [1398..1399]
 r930: [1394..1397]
 r931: [1394..1395]
 r932: [1392..1393]
 r933: [1388..1391]
 r934: [1388..1389]
 r935: [1374..1375]
 r936: [1368..1373]
 r937: [1370..1371]
 r938: [1368..1369]
 r939: [1364..1367]
 r940: [1364..1365]
 r941: [1362..1363]
 r942: [1360..1361]
 r943: [1356..1359]
 r944: [1352..1353]
 r945: [1346..1351]
 r946: [1348..1349]
 r947: [1346..1347]
 r948: [1342..1345]
 r949: [1342..1343]
 r950: [1340..1341]
 r951: [1338..1339]
 r952: [1336..1337]
 r953: [1330..1331]
 r954: [1324..1329]
 r955: [1326..1327]
 r956: [1324..1325]
 r957: [1320..1323]
 r958: [1320..1321]
 r959: [1318..1319]
 r960: [1316..1317]
 r961: [1298..1315]
 r962: [1312..1313]
 r963: [1306..1311]
 r964: [1308..1309]
 r965: [1306..1307]
 r966: [1302..1305]
 r967: [1302..1303]
 r968: [1300..1301]
 r969: [1296..1299]
 r970: [1296..1297]
 r971: [1292..1293]
 r972: [1286..1291]
 r973: [1288..1289]
 r974: [1286..1287]
 r975: [1282..1285]
 r976: [1282..1283]
 r977: [1280..1281]
 r978: [1278..1279]
 r979: [1260..1277]
 r980: [1274..1275]
 r981: [1268..1273]
 r982: [1270..1271]
 r983: [1268..1269]
 r984: [1264..1267]
 r985: [1264..1265]
 r986: [1262..1263]
 r987: [1258..1261]
 r988: [1258..1259]
 r989: [1240..1241]
 r990: [1234..1239]
 r991: [1236..1237]
 r992: [1234..1235]
 r993: [1230..1233]
 r994: [1230..1231]
 r995: [1228..1229]
 r996: [1226..1227]
 r997: [1222..1225]
 r998: [1216..1217]
 r999: [1210..1215]
 r1000: [1212..1213]
 r1001: [1210..1211]
 r1002: [1206..1209]
 r1003: [1206..1207]
 r1004: [1204..1205]
 r1005: [1202..1203]
 r1006: [1180..1201]
 r1007: [1198..1199]
 r1008: [1196..1197]
 r1009: [1190..1195]
 r1010: [1192..1193]
 r1011: [1190..1191]
 r1012: [1186..1189]
 r1013: [1186..1187]
 r1014: [1184..1185]
 r1015: [1182..1183]
 r1016: [1180..1181]
 r1017: [1178..1179]
 r1018: [1160..1177]
 r1019: [1174..1175]
 r1020: [1168..1173]
 r1021: [1170..1171]
 r1022: [1168..1169]
 r1023: [1164..1167]
 r1024: [1164..1165]
 r1025: [1162..1163]
 r1026: [1158..1161]
 r1027: [1158..1159]
 r1028: [1154..1155]
 r1029: [1148..1153]
 r1030: [1150..1151]
 r1031: [1148..1149]
 r1032: [1144..1147]
 r1033: [1144..1145]
 r1034: [1142..1143]
 r1035: [1140..1141]
 r1036: [1118..1139]
 r1037: [1136..1137]
 r1038: [1134..1135]
 r1039: [1128..1133]
 r1040: [1130..1131]
 r1041: [1128..1129]
 r1042: [1124..1127]
 r1043: [1124..1125]
 r1044: [1122..1123]
 r1045: [1120..1121]
 r1046: [1118..1119]
 r1047: [1116..1117]
 r1048: [1114..1115]
 r1049: [1108..1109]
 r1050: [1102..1107]
 r1051: [1104..1105]
 r1052: [1102..1103]
 r1053: [1098..1101]
 r1054: [1098..1099]
 r1055: [1096..1097]
 r1056: [1094..1095]
 r1057: [1092..1093]
 r1058: [1090..1091]
 r1059: [1074..1075]
 r1060: [1072..1073]
 r1061: [1066..1071]
 r1062: [1068..1069]
 r1063: [1066..1067]
 r1064: [1062..1065]
 r1065: [1062..1063]
 r1066: [1060..1061]
 r1067: [1058..1059]
 r1068: [1038..1057]
 r1069: [1054..1055]
 r1070: [1048..1053]
 r1071: [1050..1051]
 r1072: [1048..1049]
 r1073: [1044..1047]
 r1074: [1044..1045]
 r1075: [1042..1043]
 r1076: [1040..1041]
 r1077: [1038..1039]
 r1078: [1032..1033]
 r1079: [1026..1031]
 r1080: [1028..1029]
 r1081: [1026..1027]
 r1082: [1022..1025]
 r1083: [1022..1023]
 r1084: [1020..1021]
 r1085: [1018..1019]
 r1086: [996..1017]
 r1087: [1014..1015]
 r1088: [1012..1013]
 r1089: [1006..1011]
 r1090: [1008..1009]
 r1091: [1006..1007]
 r1092: [1002..1005]
 r1093: [1002..1003]
 r1094: [1000..1001]
 r1095: [998..999]
 r1096: [996..997]
 r1097: [994..995]
 r1098: [992..993]
 r1099: [986..987]
 r1100: [980..985]
 r1101: [982..983]
 r1102: [980..981]
 r1103: [976..979]
 r1104: [976..977]
 r1105: [974..975]
 r1106: [972..973]
 r1107: [968..969]
 r1108: [962..967]
 r1109: [964..965]
 r1110: [962..963]
 r1111: [958..961]
 r1112: [958..959]
 r1113: [956..957]
 r1114: [938..955]
 r1115: [952..953]
 r1116: [946..951]
 r1117: [948..949]
 r1118: [946..947]
 r1119: [942..945]
 r1120: [942..943]
 r1121: [940..941]
 r1122: [934..939]
 r1123: [934..935]
 r1124: [930..931]
 r1125: [924..929]
 r1126: [926..927]
 r1127: [924..925]
 r1128: [920..923]
 r1129: [920..921]
 r1130: [918..919]
 r1131: [900..917]
 r1132: [914..915]
 r1133: [908..913]
 r1134: [910..911]
 r1135: [908..909]
 r1136: [904..907]
 r1137: [904..905]
 r1138: [902..903]
 r1139: [896..901]
 r1140: [896..897]
 r1141: [892..893]
 r1142: [886..891]
 r1143: [888..889]
 r1144: [886..887]
 r1145: [882..885]
 r1146: [882..883]
 r1147: [880..881]
 r1148: [878..879]
 r1149: [874..875]
 r1150: [866..869]
 r1151: [866..867]
 r1152: [864..865]
 r1154: [844..845]
 r1155: [838..843]
 r1156: [840..841]
 r1157: [838..839]
 r1158: [834..837]
 r1159: [834..835]
 r1160: [832..833]
 r1161: [830..831]
 r1162: [826..827]
 r1163: [824..825]
 r1164: [822..823]
 r1165: [796..821]
 r1166: [818..819]
 r1167: [812..817]
 r1168: [814..815]
 r1169: [812..813]
 r1170: [808..811]
 r1171: [808..809]
 r1172: [806..807]
 r1173: [804..805]
 r1174: [800..801]
 r1175: [798..799]
 r1176: [796..797]
 r1177: [794..795]
 r1178: [790..793]
 r1179: [780..783]
 r1180: [780..781]
 r1181: [778..779]
 r1182: [774..775]
 r1183: [772..773]
 r1184: [770..771]
 r1185: [760..765]
 r1186: [762..763]
 r1187: [760..761]
 r1188: [758..759]
 r1189: [756..757]
 r1190: [754..755]
 r1191: [744..745]
 r1192: [740..743]
 r1193: [740..741]
 r1194: [738..739]
 r1195: [736..737]
 r1196: [734..735]
 r1197: [720..721]
 r1198: [714..719]
 r1199: [716..717]
 r1200: [714..715]
 r1201: [710..713]
 r1202: [710..711]
 r1203: [708..709]
 r1204: [706..707]
 r1205: [702..703]
 r1206: [696..701]
 r1207: [698..699]
 r1208: [696..697]
 r1209: [692..695]
 r1210: [692..693]
 r1211: [690..691]
 r1212: [672..689]
 r1213: [686..687]
 r1214: [680..685]
 r1215: [682..683]
 r1216: [680..681]
 r1217: [676..679]
 r1218: [676..677]
 r1219: [674..675]
 r1220: [670..673]
 r1221: [670..671]
 r1222: [666..667]
 r1223: [660..665]
 r1224: [662..663]
 r1225: [660..661]
 r1226: [656..659]
 r1227: [656..657]
 r1228: [654..655]
 r1229: [652..653]
 r1230: [630..649]
 r1231: [646..647]
 r1232: [640..645]
 r1233: [642..643]
 r1234: [640..641]
 r1235: [636..639]
 r1236: [636..637]
 r1237: [634..635]
 r1238: [632..633]
 r1239: [630..631]
 r1240: [628..629]
 r1241: [626..627]
 r1242: [606..623]
 r1243: [620..621]
 r1244: [614..619]
 r1245: [616..617]
 r1246: [614..615]
 r1247: [610..613]
 r1248: [610..611]
 r1249: [608..609]
 r1250: [604..607]
 r1251: [604..605]
 r1252: [600..601]
 r1253: [594..599]
 r1254: [596..597]
 r1255: [594..595]
 r1256: [590..593]
 r1257: [590..591]
 r1258: [588..589]
 r1259: [586..587]
 r1260: [550..585]
 r1261: [582..583]
 r1262: [576..581]
 r1263: [578..579]
 r1264: [576..577]
 r1265: [572..575]
 r1266: [572..573]
 r1267: [570..571]
 r1268: [568..569]
 r1269: [550..567]
 r1270: [564..565]
 r1271: [558..563]
 r1272: [560..561]
 r1273: [558..559]
 r1274: [554..557]
 r1275: [554..555]
 r1276: [552..553]
 r1277: [548..551]
 r1278: [548..549]
 r1279: [544..545]
 r1280: [538..543]
 r1281: [540..541]
 r1282: [538..539]
 r1283: [534..537]
 r1284: [534..535]
 r1285: [532..533]
 r1286: [530..531]
 r1287: [528..529]
 r1288: [524..525]
 r1289: [518..523]
 r1290: [520..521]
 r1291: [518..519]
 r1292: [514..517]
 r1293: [514..515]
 r1294: [512..513]
 r1295: [510..511]
 r1296: [506..507]
 r1297: [500..505]
 r1298: [502..503]
 r1299: [500..501]
 r1300: [496..499]
 r1301: [496..497]
 r1302: [494..495]
 r1303: [492..493]
 r1304: [456..491]
 r1305: [488..489]
 r1306: [482..487]
 r1307: [484..485]
 r1308: [482..483]
 r1309: [478..481]
 r1310: [478..479]
 r1311: [476..477]
 r1312: [474..475]
 r1313: [456..473]
 r1314: [470..471]
 r1315: [464..469]
 r1316: [466..467]
 r1317: [464..465]
 r1318: [460..463]
 r1319: [460..461]
 r1320: [458..459]
 r1321: [454..457]
 r1322: [454..455]
 r1323: [450..451]
 r1324: [444..449]
 r1325: [446..447]
 r1326: [444..445]
 r1327: [440..443]
 r1328: [440..441]
 r1329: [438..439]
 r1330: [436..437]
 r1331: [434..435]
 r1332: [430..431]
 r1333: [424..429]
 r1334: [426..427]
 r1335: [424..425]
 r1336: [420..423]
 r1337: [420..421]
 r1338: [418..419]
 r1339: [416..417]
 r1340: [412..413]
 r1341: [406..411]
 r1342: [408..409]
 r1343: [406..407]
 r1344: [402..405]
 r1345: [402..403]
 r1346: [400..401]
 r1347: [398..399]
 r1348: [362..397]
 r1349: [394..395]
 r1350: [388..393]
 r1351: [390..391]
 r1352: [388..389]
 r1353: [384..387]
 r1354: [384..385]
 r1355: [382..383]
 r1356: [380..381]
 r1357: [362..379]
 r1358: [376..377]
 r1359: [370..375]
 r1360: [372..373]
 r1361: [370..371]
 r1362: [366..369]
 r1363: [366..367]
 r1364: [364..365]
 r1365: [360..363]
 r1366: [360..361]
 r1367: [346..347]
 r1368: [340..345]
 r1369: [342..343]
 r1370: [340..341]
 r1371: [336..339]
 r1372: [336..337]
 r1373: [334..335]
 r1374: [332..333]
 r1375: [328..331]
 r1376: [322..323]
 r1377: [320..321]
 r1378: [316..317]
 r1379: [310..311]
 r1380: [308..309]
 r1381: [304..305]
 r1382: [298..299]
 r1383: [292..297]
 r1384: [294..295]
 r1385: [292..293]
 r1386: [288..291]
 r1387: [288..289]
 r1388: [286..287]
 r1389: [284..285]
 r1390: [264..283]
 r1391: [280..281]
 r1392: [274..279]
 r1393: [276..277]
 r1394: [274..275]
 r1395: [270..273]
 r1396: [270..271]
 r1397: [268..269]
 r1398: [266..267]
 r1399: [264..265]
 r1400: [242..263]
 r1401: [260..261]
 r1402: [252..259]
 r1403: [256..257]
 r1404: [254..255]
 r1405: [252..253]
 r1406: [248..251]
 r1407: [248..249]
 r1408: [246..247]
 r1409: [244..245]
 r1410: [242..243]
 r1411: [220..241]
 r1412: [238..239]
 r1413: [230..237]
 r1414: [234..235]
 r1415: [232..233]
 r1416: [230..231]
 r1417: [226..229]
 r1418: [226..227]
 r1419: [224..225]
 r1420: [222..223]
 r1421: [220..221]
 r1422: [198..219]
 r1423: [216..217]
 r1424: [214..215]
 r1425: [208..213]
 r1426: [210..211]
 r1427: [208..209]
 r1428: [204..207]
 r1429: [204..205]
 r1430: [202..203]
 r1431: [200..201]
 r1432: [198..199]
 r1433: [176..197]
 r1434: [194..195]
 r1435: [192..193]
 r1436: [186..191]
 r1437: [188..189]
 r1438: [186..187]
 r1439: [182..185]
 r1440: [182..183]
 r1441: [180..181]
 r1442: [178..179]
 r1443: [176..177]
 r1444: [152..175]
 r1445: [172..173]
 r1446: [170..171]
 r1447: [162..169]
 r1448: [166..167]
 r1449: [164..165]
 r1450: [162..163]
 r1451: [158..161]
 r1452: [158..159]
 r1453: [156..157]
 r1454: [154..155]
 r1455: [152..153]
 r1456: [128..151]
 r1457: [148..149]
 r1458: [146..147]
 r1459: [138..145]
 r1460: [142..143]
 r1461: [140..141]
 r1462: [138..139]
 r1463: [134..137]
 r1464: [134..135]
 r1465: [132..133]
 r1466: [130..131]
 r1467: [128..129]
 r1468: [126..127]
 r1469: [124..125]
 r1470: [118..119]
 r1471: [112..117]
 r1472: [114..115]
 r1473: [112..113]
 r1474: [108..111]
 r1475: [108..109]
 r1476: [106..107]
 r1477: [104..105]
 r1478: [102..103]
 r1479: [100..101]
 r1480: [84..85]
 r1481: [78..83]
 r1482: [80..81]
 r1483: [78..79]
 r1484: [74..77]
 r1485: [74..75]
 r1486: [72..73]
 r1487: [54..71]
 r1488: [68..69]
 r1489: [62..67]
 r1490: [64..65]
 r1491: [62..63]
 r1492: [58..61]
 r1493: [58..59]
 r1494: [56..57]
 r1495: [50..55]
 r1496: [50..51]
 r1497: [46..47]
 r1498: [40..45]
 r1499: [42..43]
 r1500: [40..41]
 r1501: [36..39]
 r1502: [36..37]
 r1503: [34..35]
 r1504: [16..33]
 r1505: [30..31]
 r1506: [24..29]
 r1507: [26..27]
 r1508: [24..25]
 r1509: [20..23]
 r1510: [20..21]
 r1511: [18..19]
 r1512: [12..17]
 r1513: [12..13]
 r1514: [2352..2361]
 r1515: [2266..2277]
 r1516: [862..871]
 r1517: [776..787]
 r1518: [3380..3381]
 r1519: [3344..3381]
 r1520: [3344..3345]
 r1521: [3348..3349]
 r1522: [3290..3291]
 r1523: [3342..3343]
 r1524: [3294..3343]
 r1525: [3294..3295]
 r1526: [3298..3299]
 r1527: [1708..1709]
 r1528: [3288..3289]
 r1529: [3046..3289]
 r1530: [3046..3047]
 r1531: [3050..3051]
 r1532: [2162..2163]
 r1533: [3040..3041]
 r1534: [2166..3041]
 r1535: [2166..2167]
 r1536: [2170..2171]
 r1537: [2146..2147]
 r1538: [1712..1713]
 r1539: [2144..2145]
 r1540: [1716..2145]
 r1541: [1716..1717]
 r1542: [1720..1721]
 r1543: [1246..1247]
 r1544: [1706..1707]
 r1545: [1380..1707]
 r1546: [1380..1381]
 r1547: [1384..1385]
 r1548: [1378..1379]
 r1549: [1250..1379]
 r1550: [1250..1251]
 r1551: [1254..1255]
 r1552: [0..1]
 r1553: [1244..1245]
 r1554: [352..1245]
 r1555: [352..353]
 r1556: [356..357]
 r1557: [1078..1079]
 r1558: [350..351]
 r1559: [4..351]
 r1560: [4..5]
 r1561: [8..9]
 r1562: [88..89]
 r1563: [3382..3383]
 r1564: [3346..3347]
 r1565: [3350..3351]
 r1566: [3378..3379]
 r1567: [3374..3375]
 r1568: [3368..3369]
 r1569: [3366..3367]
 r1570: [3364..3365]
 r1571: [3360..3361]
 r1572: [3352..3353]
 r1573: [3292..3293]
 r1574: [3296..3297]
 r1575: [3300..3301]
 r1576: [3340..3341]
 r1577: [3334..3335]
 r1578: [3328..3329]
 r1579: [3322..3323]
 r1580: [3320..3321]
 r1581: [3316..3317]
 r1582: [3310..3311]
 r1583: [3304..3305]
 r1584: [3302..3303]
 r1585: [1710..1711]
 r1586: [3048..3049]
 r1587: [3052..3053]
 r1588: [3286..3287]
 r1589: [3282..3283]
 r1590: [3276..3277]
 r1591: [3270..3271]
 r1592: [3270..3271]
 r1593: [3268..3269]
 r1594: [3264..3265]
 r1595: [3258..3259]
 r1596: [3252..3253]
 r1597: [3252..3253]
 r1598: [3250..3251]
 r1599: [3246..3247]
 r1600: [3240..3241]
 r1601: [3234..3235]
 r1602: [3234..3235]
 r1603: [3232..3233]
 r1604: [3228..3229]
 r1605: [3222..3223]
 r1606: [3216..3217]
 r1607: [3216..3217]
 r1608: [3214..3215]
 r1609: [3210..3211]
 r1610: [3204..3205]
 r1611: [3198..3199]
 r1612: [3198..3199]
 r1613: [3196..3197]
 r1614: [3192..3193]
 r1615: [3186..3187]
 r1616: [3180..3181]
 r1617: [3180..3181]
 r1618: [3178..3179]
 r1619: [3174..3175]
 r1620: [3168..3169]
 r1621: [3162..3163]
 r1622: [3162..3163]
 r1623: [3160..3161]
 r1624: [3156..3157]
 r1625: [3150..3151]
 r1626: [3144..3145]
 r1627: [3144..3145]
 r1628: [3142..3143]
 r1629: [3138..3139]
 r1630: [3132..3133]
 r1631: [3126..3127]
 r1632: [3124..3125]
 r1633: [3120..3121]
 r1634: [3114..3115]
 r1635: [3108..3109]
 r1636: [3108..3109]
 r1637: [3106..3107]
 r1638: [3102..3103]
 r1639: [3096..3097]
 r1640: [3090..3091]
 r1641: [3090..3091]
 r1642: [3088..3089]
 r1643: [3084..3085]
 r1644: [3078..3079]
 r1645: [3072..3073]
 r1646: [3072..3073]
 r1647: [3070..3071]
 r1648: [3066..3067]
 r1649: [3060..3061]
 r1650: [3054..3055]
 r1651: [3054..3055]
 r1652: [3044..3045]
 r1653: [3042..3043]
 r1654: [3042..3043]
 r1657: [2164..2165]
 r1658: [2168..2169]
 r1659: [2172..2173]
 r1660: [3038..3039]
 r1661: [3034..3035]
 r1662: [3026..3029]
 r1663: [3026..3027]
 r1664: [3022..3023]
 r1665: [3018..3019]
 r1666: [3012..3013]
 r1667: [3010..3011]
 r1668: [3008..3009]
 r1669: [3004..3005]
 r1670: [2998..2999]
 r1671: [2992..2993]
 r1672: [2976..2977]
 r1673: [2972..2973]
 r1674: [2966..2967]
 r1675: [2958..2961]
 r1676: [2958..2959]
 r1677: [2956..2957]
 r1678: [2920..2921]
 r1679: [2916..2917]
 r1680: [2910..2911]
 r1681: [2910..2911]
 r1682: [2954..2955]
 r1683: [2950..2951]
 r1684: [2944..2945]
 r1685: [2936..2939]
 r1686: [2936..2937]
 r1687: [2932..2933]
 r1688: [2928..2929]
 r1689: [2922..2923]
 r1690: [2922..2923]
 r1691: [2908..2909]
 r1692: [2906..2907]
 r1693: [2904..2905]
 r1694: [2900..2901]
 r1695: [2894..2895]
 r1696: [2894..2895]
 r1697: [2988..2989]
 r1698: [2984..2985]
 r1699: [2978..2979]
 r1700: [2978..2979]
 r1701: [2892..2893]
 r1702: [2888..2889]
 r1703: [2882..2883]
 r1704: [2876..2877]
 r1705: [2874..2875]
 r1706: [2868..2869]
 r1707: [2862..2863]
 r1708: [2856..2857]
 r1709: [2848..2849]
 r1710: [2850..2851]
 r1711: [2846..2847]
 r1712: [2842..2843]
 r1713: [2836..2837]
 r1714: [2830..2831]
 r1715: [2826..2827]
 r1716: [2820..2821]
 r1717: [2814..2815]
 r1718: [2808..2809]
 r1719: [2806..2807]
 r1720: [2804..2805]
 r1721: [2798..2799]
 r1722: [2792..2793]
 r1723: [2786..2787]
 r1724: [2784..2785]
 r1725: [2780..2781]
 r1726: [2774..2775]
 r1727: [2768..2769]
 r1728: [2764..2765]
 r1729: [2762..2763]
 r1730: [2758..2759]
 r1731: [2752..2753]
 r1732: [2746..2747]
 r1733: [2744..2745]
 r1734: [2740..2741]
 r1735: [2734..2735]
 r1736: [2726..2727]
 r1737: [2724..2725]
 r1738: [2720..2721]
 r1739: [2714..2715]
 r1740: [2708..2709]
 r1741: [2706..2707]
 r1742: [2702..2703]
 r1743: [2696..2697]
 r1744: [2690..2691]
 r1745: [2688..2689]
 r1746: [2686..2687]
 r1747: [2682..2683]
 r1748: [2676..2677]
 r1749: [2670..2671]
 r1750: [2668..2669]
 r1751: [2664..2665]
 r1752: [2658..2659]
 r1753: [2652..2653]
 r1754: [2650..2651]
 r1755: [2648..2649]
 r1756: [2644..2645]
 r1757: [2638..2639]
 r1758: [2632..2633]
 r1759: [2630..2631]
 r1760: [2626..2627]
 r1761: [2620..2621]
 r1762: [2612..2615]
 r1763: [2612..2613]
 r1764: [2608..2609]
 r1765: [2604..2605]
 r1766: [2598..2599]
 r1767: [2590..2591]
 r1768: [2588..2589]
 r1769: [2584..2585]
 r1770: [2578..2579]
 r1771: [2572..2573]
 r1772: [2570..2571]
 r1773: [2566..2567]
 r1774: [2560..2561]
 r1775: [2552..2555]
 r1776: [2552..2553]
 r1777: [2548..2549]
 r1778: [2544..2545]
 r1779: [2538..2539]
 r1780: [2530..2531]
 r1781: [2528..2529]
 r1782: [2524..2525]
 r1783: [2518..2519]
 r1784: [2512..2513]
 r1785: [2510..2511]
 r1786: [2506..2507]
 r1787: [2500..2501]
 r1788: [2494..2495]
 r1789: [2490..2491]
 r1790: [2486..2487]
 r1791: [2480..2481]
 r1792: [2472..2473]
 r1793: [2470..2471]
 r1794: [2466..2467]
 r1795: [2460..2461]
 r1796: [2454..2455]
 r1797: [2452..2453]
 r1798: [2448..2449]
 r1799: [2442..2443]
 r1800: [2434..2437]
 r1801: [2434..2435]
 r1802: [2432..2433]
 r1803: [2428..2429]
 r1804: [2422..2423]
 r1805: [2416..2417]
 r1806: [2406..2407]
 r1807: [2404..2405]
 r1808: [2400..2401]
 r1809: [2394..2395]
 r1810: [2386..2387]
 r1811: [2384..2385]
 r1812: [2380..2381]
 r1813: [2374..2375]
 r1814: [2366..2369]
 r1815: [2366..2367]
 r1816: [2362..2363]
 r1817: [2364..2365]
 r1818: [2360..2361]
 r1819: [2358..2359]
 r1820: [2350..2351]
 r1821: [2348..2349]
 r1822: [2346..2347]
 r1823: [2344..2345]
 r1824: [2342..2343]
 r1825: [2340..2341]
 r1826: [2336..2337]
 r1827: [2332..2333]
 r1828: [2326..2327]
 r1829: [2318..2321]
 r1830: [2318..2319]
 r1831: [2316..2317]
 r1832: [2312..2313]
 r1833: [2310..2311]
 r1834: [2306..2307]
 r1835: [2300..2301]
 r1836: [2292..2295]
 r1837: [2292..2293]
 r1838: [2290..2291]
 r1839: [2278..2279]
 r1840: [2274..2275]
 r1841: [2276..2277]
 r1842: [2272..2273]
 r1843: [2258..2259]
 r1844: [2260..2261]
 r1845: [2256..2257]
 r1846: [2256..2257]
 r1847: [2254..2255]
 r1848: [2254..2255]
 r1849: [2248..2249]
 r1850: [2242..2243]
 r1851: [2244..2245]
 r1852: [2240..2241]
 r1853: [2220..2221]
 r1854: [2238..2239]
 r1855: [2238..2239]
 r1856: [2218..2219]
 r1857: [2236..2237]
 r1858: [2232..2233]
 r1859: [2226..2227]
 r1860: [2224..2225]
 r1861: [2216..2217]
 r1862: [2222..2223]
 r1863: [2214..2215]
 r1864: [2212..2213]
 r1865: [2208..2209]
 r1866: [2202..2203]
 r1867: [2196..2197]
 r1868: [2194..2195]
 r1869: [2192..2193]
 r1870: [2188..2189]
 r1871: [2182..2183]
 r1872: [2174..2175]
 r1873: [2148..2149]
 r1874: [2160..2161]
 r1875: [2152..2153]
 r1876: [2152..2153]
 r1877: [1714..1715]
 r1878: [1718..1719]
 r1879: [1722..1723]
 r1880: [2142..2143]
 r1881: [2136..2137]
 r1884: [2132..2133]
 r1885: [2134..2135]
 r1886: [2130..2131]
 r1887: [2124..2125]
 r1890: [2120..2121]
 r1891: [2122..2123]
 r1892: [2118..2119]
 r1893: [2114..2115]
 r1894: [2108..2109]
 r1895: [2102..2103]
 r1896: [2100..2101]
 r1897: [2096..2097]
 r1898: [2090..2091]
 r1899: [2084..2085]
 r1900: [2080..2081]
 r1901: [2076..2077]
 r1902: [2068..2069]
 r1903: [2062..2063]
 r1904: [2058..2059]
 r1905: [2054..2055]
 r1906: [2046..2047]
 r1907: [2040..2041]
 r1908: [2032..2033]
 r1909: [2034..2035]
 r1910: [2030..2031]
 r1911: [2024..2025]
 r1912: [2018..2019]
 r1913: [2012..2013]
 r1914: [2010..2011]
 r1915: [2004..2005]
 r1916: [1998..1999]
 r1917: [1992..1993]
 r1918: [1988..1989]
 r1919: [1982..1983]
 r1920: [1974..1975]
 r1921: [1968..1969]
 r1922: [1964..1965]
 r1923: [1958..1959]
 r1924: [1950..1951]
 r1925: [1944..1945]
 r1926: [1936..1937]
 r1927: [1938..1939]
 r1928: [1932..1933]
 r1929: [1934..1935]
 r1930: [1930..1931]
 r1931: [1924..1925]
 r1932: [1926..1927]
 r1933: [1922..1923]
 r1934: [1918..1919]
 r1935: [1912..1913]
 r1936: [1906..1907]
 r1937: [1902..1903]
 r1938: [1896..1897]
 r1939: [1890..1891]
 r1940: [1884..1885]
 r1941: [1882..1883]
 r1942: [1880..1881]
 r1943: [1876..1877]
 r1944: [1870..1871]
 r1945: [1864..1865]
 r1946: [1862..1863]
 r1947: [1858..1859]
 r1948: [1852..1853]
 r1949: [1844..1845]
 r1950: [1842..1843]
 r1951: [1838..1839]
 r1952: [1832..1833]
 r1953: [1826..1827]
 r1954: [1824..1825]
 r1955: [1820..1821]
 r1956: [1814..1815]
 r1957: [1806..1809]
 r1958: [1806..1807]
 r1959: [1802..1803]
 r1960: [1798..1799]
 r1961: [1792..1793]
 r1962: [1784..1785]
 r1963: [1782..1783]
 r1964: [1778..1779]
 r1965: [1772..1773]
 r1966: [1766..1767]
 r1967: [1764..1765]
 r1968: [1760..1761]
 r1969: [1754..1755]
 r1970: [1746..1749]
 r1971: [1746..1747]
 r1972: [1742..1743]
 r1973: [1738..1739]
 r1974: [1732..1733]
 r1975: [1724..1725]
 r1976: [1248..1249]
 r1977: [1382..1383]
 r1978: [1386..1387]
 r1979: [1704..1705]
 r1980: [1700..1701]
 r1981: [1694..1695]
 r1982: [1688..1689]
 r1983: [1686..1687]
 r1984: [1684..1685]
 r1985: [1682..1683]
 r1986: [1678..1679]
 r1987: [1672..1673]
 r1988: [1666..1667]
 r1989: [1662..1663]
 r1990: [1664..1665]
 r1991: [1660..1661]
 r1992: [1656..1657]
 r1993: [1650..1651]
 r1994: [1644..1645]
 r1995: [1640..1641]
 r1996: [1636..1637]
 r1997: [1630..1631]
 r1998: [1624..1625]
 r1999: [1620..1621]
 r2000: [1616..1617]
 r2001: [1610..1611]
 r2002: [1602..1603]
 r2003: [1600..1601]
 r2004: [1596..1597]
 r2005: [1590..1591]
 r2006: [1584..1585]
 r2007: [1582..1583]
 r2008: [1576..1577]
 r2009: [1570..1571]
 r2010: [1564..1565]
 r2011: [1558..1559]
 r2012: [1554..1555]
 r2013: [1548..1549]
 r2014: [1542..1543]
 r2015: [1540..1541]
 r2016: [1538..1539]
 r2017: [1534..1535]
 r2018: [1528..1529]
 r2019: [1522..1523]
 r2020: [1520..1521]
 r2021: [1516..1517]
 r2022: [1510..1511]
 r2023: [1502..1503]
 r2024: [1500..1501]
 r2025: [1496..1497]
 r2026: [1490..1491]
 r2027: [1484..1485]
 r2028: [1482..1483]
 r2029: [1478..1479]
 r2030: [1472..1473]
 r2031: [1464..1465]
 r2032: [1462..1463]
 r2033: [1458..1459]
 r2034: [1452..1453]
 r2035: [1446..1447]
 r2036: [1444..1445]
 r2037: [1440..1441]
 r2038: [1434..1435]
 r2039: [1426..1427]
 r2040: [1424..1425]
 r2041: [1420..1421]
 r2042: [1414..1415]
 r2043: [1408..1409]
 r2044: [1406..1407]
 r2045: [1402..1403]
 r2046: [1396..1397]
 r2047: [1388..1389]
 r2048: [1252..1253]
 r2049: [1256..1257]
 r2050: [1376..1377]
 r2051: [1372..1373]
 r2052: [1366..1367]
 r2053: [1360..1361]
 r2054: [1358..1359]
 r2055: [1356..1357]
 r2056: [1354..1355]
 r2057: [1350..1351]
 r2058: [1344..1345]
 r2059: [1338..1339]
 r2060: [1334..1335]
 r2061: [1336..1337]
 r2062: [1332..1333]
 r2063: [1328..1329]
 r2064: [1322..1323]
 r2065: [1316..1317]
 r2066: [1314..1315]
 r2067: [1310..1311]
 r2068: [1304..1305]
 r2069: [1296..1297]
 r2070: [1294..1295]
 r2071: [1290..1291]
 r2072: [1284..1285]
 r2073: [1278..1279]
 r2074: [1276..1277]
 r2075: [1272..1273]
 r2076: [1266..1267]
 r2077: [1258..1259]
 r2078: [2..3]
 r2079: [354..355]
 r2080: [358..359]
 r2081: [1242..1243]
 r2082: [1238..1239]
 r2083: [1232..1233]
 r2084: [1226..1227]
 r2085: [1224..1225]
 r2086: [1222..1223]
 r2087: [1220..1221]
 r2088: [1218..1219]
 r2089: [1214..1215]
 r2090: [1208..1209]
 r2091: [1202..1203]
 r2092: [1200..1201]
 r2093: [1194..1195]
 r2094: [1188..1189]
 r2095: [1182..1183]
 r2096: [1176..1177]
 r2097: [1172..1173]
 r2098: [1166..1167]
 r2099: [1160..1161]
 r2100: [1158..1159]
 r2101: [1080..1081]
 r2102: [1156..1157]
 r2103: [1152..1153]
 r2104: [1146..1147]
 r2105: [1140..1141]
 r2106: [1138..1139]
 r2107: [1132..1133]
 r2108: [1126..1127]
 r2109: [1120..1121]
 r2110: [1112..1113]
 r2111: [1114..1115]
 r2112: [1110..1111]
 r2113: [1106..1107]
 r2114: [1100..1101]
 r2115: [1094..1095]
 r2116: [1092..1093]
 r2117: [1088..1089]
 r2118: [1090..1091]
 r2119: [1086..1087]
 r2120: [1084..1085]
 r2121: [1082..1083]
 r2122: [1076..1077]
 r2123: [1070..1071]
 r2124: [1064..1065]
 r2125: [1058..1059]
 r2126: [1056..1057]
 r2127: [1052..1053]
 r2128: [1046..1047]
 r2129: [1040..1041]
 r2130: [1036..1037]
 r2131: [1034..1035]
 r2132: [1030..1031]
 r2133: [1024..1025]
 r2134: [1018..1019]
 r2135: [1016..1017]
 r2136: [1010..1011]
 r2137: [1004..1005]
 r2138: [998..999]
 r2139: [990..991]
 r2140: [992..993]
 r2141: [988..989]
 r2142: [984..985]
 r2143: [978..979]
 r2144: [972..973]
 r2145: [972..973]
 r2146: [970..971]
 r2147: [966..967]
 r2148: [960..961]
 r2149: [954..955]
 r2150: [950..951]
 r2151: [944..945]
 r2152: [936..939]
 r2153: [936..937]
 r2154: [934..935]
 r2155: [932..933]
 r2156: [928..929]
 r2157: [922..923]
 r2158: [916..917]
 r2159: [912..913]
 r2160: [906..907]
 r2161: [898..901]
 r2162: [898..899]
 r2163: [896..897]
 r2164: [894..895]
 r2165: [890..891]
 r2166: [884..885]
 r2167: [876..879]
 r2168: [876..877]
 r2169: [872..873]
 r2170: [874..875]
 r2171: [870..871]
 r2172: [868..869]
 r2173: [860..861]
 r2174: [858..859]
 r2175: [856..857]
 r2176: [854..855]
 r2177: [852..853]
 r2178: [850..851]
 r2179: [846..847]
 r2180: [842..843]
 r2181: [836..837]
 r2182: [828..831]
 r2183: [828..829]
 r2184: [826..827]
 r2185: [822..823]
 r2186: [820..821]
 r2187: [816..817]
 r2188: [810..811]
 r2189: [802..805]
 r2190: [802..803]
 r2191: [800..801]
 r2192: [788..789]
 r2193: [784..785]
 r2194: [786..787]
 r2195: [782..783]
 r2196: [768..769]
 r2197: [770..771]
 r2198: [766..767]
 r2199: [766..767]
 r2200: [764..765]
 r2201: [764..765]
 r2202: [758..759]
 r2203: [752..753]
 r2204: [754..755]
 r2205: [750..751]
 r2206: [730..731]
 r2207: [748..749]
 r2208: [748..749]
 r2209: [728..729]
 r2210: [746..747]
 r2211: [742..743]
 r2212: [736..737]
 r2213: [734..735]
 r2214: [726..727]
 r2215: [732..733]
 r2216: [724..725]
 r2217: [722..723]
 r2218: [718..719]
 r2219: [712..713]
 r2220: [706..707]
 r2221: [706..707]
 r2222: [704..705]
 r2223: [700..701]
 r2224: [694..695]
 r2225: [688..689]
 r2226: [684..685]
 r2227: [678..679]
 r2228: [672..673]
 r2229: [670..671]
 r2230: [668..669]
 r2231: [664..665]
 r2232: [658..659]
 r2233: [650..653]
 r2234: [650..651]
 r2235: [648..649]
 r2236: [644..645]
 r2237: [638..639]
 r2238: [632..633]
 r2239: [622..623]
 r2240: [618..619]
 r2241: [612..613]
 r2242: [606..607]
 r2243: [604..605]
 r2244: [602..603]
 r2245: [598..599]
 r2246: [592..593]
 r2247: [586..587]
 r2248: [584..585]
 r2249: [580..581]
 r2250: [574..575]
 r2251: [568..569]
 r2252: [566..567]
 r2253: [562..563]
 r2254: [556..557]
 r2255: [548..549]
 r2256: [546..547]
 r2257: [542..543]
 r2258: [536..537]
 r2259: [530..531]
 r2260: [528..529]
 r2261: [526..527]
 r2262: [522..523]
 r2263: [516..517]
 r2264: [510..511]
 r2265: [510..511]
 r2266: [508..509]
 r2267: [504..505]
 r2268: [498..499]
 r2269: [492..493]
 r2270: [490..491]
 r2271: [486..487]
 r2272: [480..481]
 r2273: [474..475]
 r2274: [472..473]
 r2275: [468..469]
 r2276: [462..463]
 r2277: [454..455]
 r2278: [452..453]
 r2279: [448..449]
 r2280: [442..443]
 r2281: [436..437]
 r2282: [434..435]
 r2283: [432..433]
 r2284: [428..429]
 r2285: [422..423]
 r2286: [416..417]
 r2287: [416..417]
 r2288: [414..415]
 r2289: [410..411]
 r2290: [404..405]
 r2291: [398..399]
 r2292: [396..397]
 r2293: [392..393]
 r2294: [386..387]
 r2295: [380..381]
 r2296: [378..379]
 r2297: [374..375]
 r2298: [368..369]
 r2299: [360..361]
 r2300: [6..7]
 r2301: [10..11]
 r2302: [348..349]
 r2303: [344..345]
 r2304: [338..339]
 r2305: [332..333]
 r2306: [330..331]
 r2307: [328..329]
 r2308: [326..327]
 r2309: [324..325]
 r2310: [318..319]
 r2313: [314..315]
 r2314: [316..317]
 r2315: [312..313]
 r2316: [306..307]
 r2319: [302..303]
 r2320: [304..305]
 r2321: [90..91]
 r2322: [300..301]
 r2323: [296..297]
 r2324: [290..291]
 r2325: [284..285]
 r2326: [282..283]
 r2327: [278..279]
 r2328: [272..273]
 r2329: [266..267]
 r2330: [262..263]
 r2331: [258..259]
 r2332: [250..251]
 r2333: [244..245]
 r2334: [240..241]
 r2335: [236..237]
 r2336: [228..229]
 r2337: [222..223]
 r2338: [218..219]
 r2339: [212..213]
 r2340: [206..207]
 r2341: [200..201]
 r2342: [196..197]
 r2343: [190..191]
 r2344: [184..185]
 r2345: [178..179]
 r2346: [174..175]
 r2347: [168..169]
 r2348: [160..161]
 r2349: [154..155]
 r2350: [150..151]
 r2351: [144..145]
 r2352: [136..137]
 r2353: [130..131]
 r2354: [122..123]
 r2355: [124..125]
 r2356: [120..121]
 r2357: [116..117]
 r2358: [110..111]
 r2359: [104..105]
 r2360: [102..103]
 r2361: [98..99]
 r2362: [100..101]
 r2363: [96..97]
 r2364: [94..95]
 r2365: [92..93]
 r2366: [86..87]
 r2367: [82..83]
 r2368: [76..77]
 r2369: [70..71]
 r2370: [66..67]
 r2371: [60..61]
 r2372: [52..55]
 r2373: [52..53]
 r2374: [50..51]
 r2375: [48..49]
 r2376: [44..45]
 r2377: [38..39]
 r2378: [32..33]
 r2379: [28..29]
 r2380: [22..23]
 r2381: [14..17]
 r2382: [14..15]
 r2383: [12..13]
 r2384: [2408..2409]
 r2385: [2338..2339]
 r2387: [848..849]
 r2389: [624..625]
 r2392: [790..791]
 r2393: [2280..2281]
 r2394: [2282..2337]
 r2395: [792..847]

********** Assignment #2: **********

	 Assigning to 2395 (cl=SSE_REGS, orig=1153, freq=2000, tfirst=2392, tfreq=2000)...
	 Assigning to 2392 (cl=SSE_REGS, orig=1153, freq=2000, tfirst=2392, tfreq=2000)...
	   Assign 24 to optional reload r2392 (freq=2000)
	Hard reg 24 is preferable by r2395 with profit 1000
	 Assigning to 2394 (cl=SSE_REGS, orig=530, freq=2000, tfirst=2393, tfreq=2000)...
	 Assigning to 2393 (cl=SSE_REGS, orig=530, freq=2000, tfirst=2393, tfreq=2000)...
	   Assign 25 to optional reload r2393 (freq=2000)
	Hard reg 25 is preferable by r2394 with profit 1000
  Reassigning non-reload pseudos

********** Undoing inheritance #2: **********

Inherit 0 out of 2 (0.00%)
   Insn after restoring regs:
 3270: r2393:SF=r530:SF
      REG_DEAD r530:SF
   Insn after restoring regs:
 3260: r530:SF=r2385:SF
      REG_DEAD r2385:SF
   Insn after restoring regs:
 3269: r2392:SF=r1153:SF
      REG_DEAD r1153:SF
   Insn after restoring regs:
 3263: r1153:SF=r2387:SF
      REG_DEAD r2387:SF
Keep optional reload reg 2386
Keep optional reload reg 2388
Remove optional reload reg 2392
  Restoring original insn:
 2321: r2192:SF=r1178:SF*r1153:SF
      REG_DEAD r1153:SF
      REG_DEAD r1178:SF
  Deleting move 3269
 3269: r2392:SF=r1153:SF
      REG_DEAD r1153:SF
deleting insn with uid = 3269.
Remove optional reload reg 2393
  Restoring original insn:
  999: r1839:SF=r555:SF*r530:SF
      REG_DEAD r530:SF
      REG_DEAD r555:SF
  Deleting move 3270
 3270: r2393:SF=r530:SF
      REG_DEAD r530:SF
deleting insn with uid = 3270.

********** Local #3: **********

	   Spilling non-eliminable hard regs: 6
            2 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 2321:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            2 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 999:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
	   Spilling non-eliminable hard regs: 6

********** Pseudo live ranges #3: **********

  BB 145
   Insn 3093: point = 0, n_alt = -1
  BB 166
   Insn 3237: point = 0, n_alt = -1
  BB 98
   Insn 1934: point = 0, n_alt = -1
   Insn 1933: point = 0, n_alt = 0
   Insn 1932: point = 1, n_alt = 0
   Insn 1931: point = 3, n_alt = 0
   Insn 1930: point = 4, n_alt = 0
  BB 144
   Insn 3173: point = 4, n_alt = -1
   Insn 3006: point = 4, n_alt = 1
  BB 170
   Insn 3249: point = 4, n_alt = -1
  BB 131
   Insn 2712: point = 4, n_alt = -1
   Insn 2711: point = 4, n_alt = 0
   Insn 2710: point = 5, n_alt = 0
   Insn 2709: point = 7, n_alt = 0
   Insn 2708: point = 8, n_alt = 0
  BB 143
   Insn 3171: point = 9, n_alt = -1
   Insn 3000: point = 9, n_alt = 1
  BB 171
   Insn 3252: point = 10, n_alt = -1
  BB 133
   Insn 2720: point = 11, n_alt = -1
   Insn 2719: point = 11, n_alt = 0
   Insn 2718: point = 12, n_alt = 0
   Insn 2717: point = 14, n_alt = 0
   Insn 2716: point = 15, n_alt = 0
  BB 142
   Insn 3169: point = 16, n_alt = -1
   Insn 2994: point = 16, n_alt = 1
  BB 141
   Insn 2991: point = 17, n_alt = 8
   Insn 2990: point = 18, n_alt = 3
   Insn 2989: point = 19, n_alt = 7
   Insn 2988: point = 21, n_alt = 0
   Insn 2987: point = 23, n_alt = 4
   Insn 2986: point = 24, n_alt = 3
   Insn 2985: point = 26, n_alt = 0
   Insn 2984: point = 28, n_alt = 1
   Insn 2983: point = 30, n_alt = 0
   Insn 2982: point = 31, n_alt = 0
   Insn 2981: point = 33, n_alt = 0
   Insn 2980: point = 35, n_alt = 1
   Insn 2979: point = 37, n_alt = 0
   Insn 2978: point = 38, n_alt = 1
   Insn 2977: point = 40, n_alt = 1
   Insn 2976: point = 42, n_alt = 0
   Insn 2975: point = 43, n_alt = 3
   Insn 2974: point = 45, n_alt = 0
   Insn 2973: point = 47, n_alt = 1
   Insn 2972: point = 49, n_alt = 0
   Insn 2971: point = 50, n_alt = 0
   Insn 2970: point = 52, n_alt = 0
   Insn 2969: point = 54, n_alt = 1
   Insn 2968: point = 56, n_alt = 0
   Insn 2967: point = 57, n_alt = 1
   Insn 2966: point = 59, n_alt = 1
   Insn 2965: point = 61, n_alt = 0
   Insn 2964: point = 62, n_alt = 8
   Insn 2963: point = 63, n_alt = 3
   Insn 2962: point = 64, n_alt = 7
   Insn 2961: point = 66, n_alt = 0
   Insn 2960: point = 68, n_alt = 4
   Insn 2959: point = 69, n_alt = 3
   Insn 2958: point = 71, n_alt = 0
   Insn 2957: point = 73, n_alt = 1
   Insn 2956: point = 75, n_alt = 0
   Insn 2955: point = 76, n_alt = 0
   Insn 2954: point = 78, n_alt = 0
   Insn 2953: point = 80, n_alt = 1
   Insn 2952: point = 82, n_alt = 0
   Insn 2951: point = 83, n_alt = 1
   Insn 2950: point = 85, n_alt = 1
   Insn 2949: point = 87, n_alt = 0
   Insn 2948: point = 88, n_alt = 3
   Insn 2947: point = 90, n_alt = 0
   Insn 2946: point = 92, n_alt = 1
   Insn 2945: point = 94, n_alt = 0
   Insn 2944: point = 95, n_alt = 0
   Insn 2943: point = 97, n_alt = 0
   Insn 2942: point = 99, n_alt = 1
   Insn 2941: point = 101, n_alt = 0
   Insn 2940: point = 102, n_alt = 1
   Insn 2939: point = 104, n_alt = 1
   Insn 2938: point = 106, n_alt = 0
  BB 172
   Insn 3255: point = 108, n_alt = -1
  BB 137
   Insn 2776: point = 109, n_alt = -1
   Insn 2775: point = 109, n_alt = 0
   Insn 2774: point = 110, n_alt = 0
   Insn 2773: point = 112, n_alt = 0
   Insn 2772: point = 113, n_alt = 0
  BB 140
   Insn 3167: point = 114, n_alt = -1
   Insn 2932: point = 114, n_alt = 1
  BB 139
   Insn 2929: point = 115, n_alt = 1
   Insn 2928: point = 116, n_alt = 0
   Insn 2927: point = 117, n_alt = 8
   Insn 2926: point = 118, n_alt = 7
  BB 138
   Insn 2921: point = 120, n_alt = -1
   Insn 2920: point = 120, n_alt = 1
   Insn 2919: point = 121, n_alt = 7
   Insn 2918: point = 122, n_alt = 8
   Insn 2917: point = 123, n_alt = 0
   Insn 2916: point = 125, n_alt = 2
   Insn 2915: point = 126, n_alt = 2
   Insn 2914: point = 128, n_alt = 7
   Insn 2913: point = 129, n_alt = 7
   Insn 2912: point = 131, n_alt = 3
   Insn 2911: point = 132, n_alt = 3
   Insn 2910: point = 134, n_alt = 0
   Insn 2909: point = 136, n_alt = 1
   Insn 2908: point = 138, n_alt = 0
   Insn 2907: point = 139, n_alt = 0
   Insn 2906: point = 141, n_alt = 0
   Insn 2905: point = 143, n_alt = 1
   Insn 2904: point = 145, n_alt = 0
   Insn 2903: point = 146, n_alt = 1
   Insn 2902: point = 148, n_alt = 1
   Insn 2901: point = 150, n_alt = 0
   Insn 2900: point = 151, n_alt = 8
   Insn 2899: point = 152, n_alt = 1
   Insn 2898: point = 154, n_alt = 7
   Insn 2897: point = 155, n_alt = -2
   Insn 2896: point = 157, n_alt = 1
   Insn 2895: point = 159, n_alt = 7
   Insn 2894: point = 161, n_alt = 4
   Insn 2893: point = 162, n_alt = 3
   Insn 2892: point = 164, n_alt = 0
   Insn 2891: point = 166, n_alt = 1
   Insn 2890: point = 168, n_alt = 0
   Insn 2889: point = 169, n_alt = 0
   Insn 2888: point = 171, n_alt = 0
   Insn 2887: point = 173, n_alt = 1
   Insn 2886: point = 175, n_alt = 0
   Insn 2885: point = 177, n_alt = 0
   Insn 2884: point = 178, n_alt = 1
   Insn 2883: point = 180, n_alt = 1
   Insn 2882: point = 182, n_alt = 0
   Insn 2881: point = 184, n_alt = 0
   Insn 2880: point = 185, n_alt = 1
   Insn 2879: point = 187, n_alt = 7
   Insn 2878: point = 189, n_alt = 4
   Insn 2877: point = 190, n_alt = 3
   Insn 2876: point = 192, n_alt = 0
   Insn 2875: point = 194, n_alt = 1
   Insn 2874: point = 196, n_alt = 0
   Insn 2873: point = 197, n_alt = 0
   Insn 2872: point = 199, n_alt = 0
   Insn 2871: point = 201, n_alt = 1
   Insn 2870: point = 203, n_alt = 0
   Insn 2869: point = 205, n_alt = 0
   Insn 2868: point = 206, n_alt = 1
   Insn 2867: point = 208, n_alt = 1
   Insn 2866: point = 210, n_alt = 0
   Insn 2865: point = 212, n_alt = 0
   Insn 2864: point = 213, n_alt = 1
   Insn 2863: point = 215, n_alt = 7
   Insn 2862: point = 217, n_alt = 4
   Insn 2861: point = 218, n_alt = 3
   Insn 2860: point = 220, n_alt = 0
   Insn 2859: point = 222, n_alt = 1
   Insn 2858: point = 224, n_alt = 0
   Insn 2857: point = 225, n_alt = 0
   Insn 2856: point = 227, n_alt = 0
   Insn 2855: point = 229, n_alt = 1
   Insn 2854: point = 231, n_alt = 0
   Insn 2853: point = 232, n_alt = 1
   Insn 2852: point = 234, n_alt = 1
   Insn 2851: point = 236, n_alt = 0
   Insn 2850: point = 238, n_alt = 0
   Insn 2849: point = 239, n_alt = 1
   Insn 2848: point = 241, n_alt = 7
   Insn 2847: point = 243, n_alt = 4
   Insn 2846: point = 244, n_alt = 3
   Insn 2845: point = 246, n_alt = 0
   Insn 2844: point = 248, n_alt = 1
   Insn 2843: point = 250, n_alt = 0
   Insn 2842: point = 251, n_alt = 0
   Insn 2841: point = 253, n_alt = 0
   Insn 2840: point = 255, n_alt = 1
   Insn 2839: point = 257, n_alt = 0
   Insn 2838: point = 258, n_alt = 1
   Insn 2837: point = 260, n_alt = 1
   Insn 2836: point = 262, n_alt = 0
   Insn 2835: point = 264, n_alt = 0
   Insn 2834: point = 265, n_alt = 1
   Insn 2833: point = 267, n_alt = 7
   Insn 2832: point = 269, n_alt = 4
   Insn 2831: point = 270, n_alt = 3
   Insn 2830: point = 272, n_alt = 0
   Insn 2829: point = 274, n_alt = 1
   Insn 2828: point = 276, n_alt = 0
   Insn 2827: point = 277, n_alt = 0
   Insn 2826: point = 279, n_alt = 0
   Insn 2825: point = 281, n_alt = 1
   Insn 2824: point = 283, n_alt = 0
   Insn 2823: point = 285, n_alt = 0
   Insn 2822: point = 286, n_alt = 1
   Insn 2821: point = 288, n_alt = 1
   Insn 2820: point = 290, n_alt = 0
   Insn 2819: point = 291, n_alt = 1
   Insn 2818: point = 293, n_alt = 7
   Insn 2817: point = 295, n_alt = 4
   Insn 2816: point = 296, n_alt = 3
   Insn 2815: point = 298, n_alt = 0
   Insn 2814: point = 300, n_alt = 1
   Insn 2813: point = 302, n_alt = 0
   Insn 2812: point = 303, n_alt = 0
   Insn 2811: point = 305, n_alt = 0
   Insn 2810: point = 307, n_alt = 1
   Insn 2809: point = 309, n_alt = 0
   Insn 2808: point = 311, n_alt = 0
   Insn 2807: point = 312, n_alt = 1
   Insn 2806: point = 314, n_alt = 1
   Insn 2805: point = 316, n_alt = 0
   Insn 2804: point = 317, n_alt = 1
   Insn 2803: point = 319, n_alt = 7
   Insn 2802: point = 321, n_alt = 4
   Insn 2801: point = 322, n_alt = 3
   Insn 2800: point = 324, n_alt = 0
   Insn 2799: point = 326, n_alt = 1
   Insn 2798: point = 328, n_alt = 0
   Insn 2797: point = 329, n_alt = 0
   Insn 2796: point = 331, n_alt = 0
   Insn 2795: point = 333, n_alt = 1
   Insn 2794: point = 335, n_alt = 0
   Insn 2793: point = 336, n_alt = 1
   Insn 2792: point = 338, n_alt = 1
   Insn 2791: point = 340, n_alt = 0
   Insn 2790: point = 341, n_alt = 7
   Insn 2789: point = 343, n_alt = 4
   Insn 2788: point = 344, n_alt = 3
   Insn 2787: point = 346, n_alt = 0
   Insn 2786: point = 348, n_alt = 1
   Insn 2785: point = 350, n_alt = 0
   Insn 2784: point = 351, n_alt = 0
   Insn 2783: point = 353, n_alt = 0
   Insn 2782: point = 355, n_alt = 1
   Insn 2781: point = 357, n_alt = 0
   Insn 2780: point = 358, n_alt = 1
   Insn 2779: point = 360, n_alt = 1
   Insn 2778: point = 362, n_alt = 0
  BB 136
   Insn 2770: point = 364, n_alt = 1
   Insn 2769: point = 364, n_alt = 1
   Insn 2768: point = 365, n_alt = 0
   Insn 2767: point = 367, n_alt = 0
   Insn 2763: point = 368, n_alt = 0
   Insn 2762: point = 370, n_alt = 0
   Insn 2761: point = 372, n_alt = 0
   Insn 2760: point = 374, n_alt = 1
   Insn 2759: point = 376, n_alt = 0
   Insn 2758: point = 377, n_alt = 1
   Insn 2757: point = 378, n_alt = 0
   Insn 2756: point = 380, n_alt = 0
   Insn 2752: point = 381, n_alt = 0
   Insn 2751: point = 383, n_alt = 0
   Insn 2750: point = 385, n_alt = 0
   Insn 2749: point = 387, n_alt = 1
   Insn 2748: point = 389, n_alt = 0
   Insn 2747: point = 390, n_alt = 8
   Insn 2746: point = 391, n_alt = 7
   Insn 2745: point = 392, n_alt = 1
  BB 135
   Insn 2740: point = 393, n_alt = -1
   Insn 2739: point = 393, n_alt = 1
   Insn 2738: point = 394, n_alt = 7
  BB 134
   Insn 2737: point = 396, n_alt = -1
   Insn 2736: point = 396, n_alt = 1
   Insn 2735: point = 397, n_alt = 7
   Insn 2734: point = 398, n_alt = 7
   Insn 2733: point = 400, n_alt = 4
   Insn 2732: point = 401, n_alt = 3
   Insn 2731: point = 403, n_alt = 0
   Insn 2730: point = 405, n_alt = 1
   Insn 2729: point = 407, n_alt = 0
   Insn 2728: point = 408, n_alt = 0
   Insn 2727: point = 410, n_alt = 0
   Insn 2726: point = 412, n_alt = 1
   Insn 2725: point = 414, n_alt = 0
   Insn 2724: point = 415, n_alt = 1
   Insn 2723: point = 417, n_alt = 1
   Insn 2722: point = 419, n_alt = 0
  BB 132
   Insn 2714: point = 421, n_alt = 1
  BB 130
   Insn 2706: point = 422, n_alt = 1
   Insn 2705: point = 423, n_alt = 0
   Insn 2704: point = 424, n_alt = 0
  BB 167
   Insn 3240: point = 425, n_alt = -1
  BB 100
   Insn 1944: point = 425, n_alt = -1
   Insn 1943: point = 425, n_alt = 0
   Insn 1942: point = 426, n_alt = 0
   Insn 1941: point = 428, n_alt = 0
   Insn 1940: point = 429, n_alt = 0
  BB 129
   Insn 3165: point = 430, n_alt = -1
   Insn 2698: point = 430, n_alt = 1
  BB 168
   Insn 3243: point = 431, n_alt = -1
  BB 102
   Insn 1952: point = 432, n_alt = -1
   Insn 1951: point = 432, n_alt = 0
   Insn 1950: point = 433, n_alt = 0
   Insn 1949: point = 435, n_alt = 0
   Insn 1948: point = 436, n_alt = 0
  BB 128
   Insn 3163: point = 437, n_alt = -1
   Insn 2692: point = 437, n_alt = 1
  BB 127
   Insn 2689: point = 438, n_alt = 8
   Insn 2688: point = 439, n_alt = 3
   Insn 2687: point = 440, n_alt = 1
   Insn 2686: point = 442, n_alt = 3
   Insn 2685: point = 444, n_alt = 0
   Insn 2684: point = 446, n_alt = 0
   Insn 2683: point = 448, n_alt = 0
   Insn 2682: point = 449, n_alt = 0
   Insn 2681: point = 451, n_alt = 0
   Insn 2680: point = 453, n_alt = 0
   Insn 2679: point = 455, n_alt = 0
   Insn 2678: point = 456, n_alt = 1
   Insn 2677: point = 458, n_alt = 0
   Insn 2676: point = 460, n_alt = 0
   Insn 2675: point = 461, n_alt = 7
   Insn 2674: point = 463, n_alt = 4
   Insn 2673: point = 464, n_alt = 3
   Insn 2672: point = 466, n_alt = 0
   Insn 2671: point = 468, n_alt = 0
   Insn 2670: point = 470, n_alt = 0
   Insn 2669: point = 471, n_alt = 0
   Insn 2668: point = 473, n_alt = 0
   Insn 2667: point = 475, n_alt = 0
   Insn 2666: point = 477, n_alt = 0
   Insn 2665: point = 478, n_alt = 1
   Insn 2664: point = 480, n_alt = 0
   Insn 2663: point = 482, n_alt = 0
   Insn 2662: point = 483, n_alt = 7
   Insn 2661: point = 485, n_alt = 3
   Insn 2660: point = 486, n_alt = 3
   Insn 2659: point = 488, n_alt = 0
   Insn 2658: point = 490, n_alt = 0
   Insn 2657: point = 492, n_alt = 0
   Insn 2656: point = 493, n_alt = 0
   Insn 2655: point = 495, n_alt = 0
   Insn 2654: point = 497, n_alt = 0
   Insn 2653: point = 499, n_alt = 0
   Insn 2652: point = 500, n_alt = 1
   Insn 2651: point = 502, n_alt = 0
   Insn 2650: point = 504, n_alt = 0
   Insn 2649: point = 505, n_alt = 8
   Insn 2648: point = 506, n_alt = 7
   Insn 2647: point = 507, n_alt = 3
   Insn 2646: point = 508, n_alt = 3
   Insn 2645: point = 510, n_alt = 0
   Insn 2644: point = 512, n_alt = 0
   Insn 2643: point = 514, n_alt = 0
   Insn 2642: point = 515, n_alt = 0
   Insn 2641: point = 517, n_alt = 0
   Insn 2640: point = 519, n_alt = 0
   Insn 2639: point = 521, n_alt = 0
   Insn 2638: point = 522, n_alt = 1
   Insn 2637: point = 524, n_alt = 0
   Insn 2636: point = 526, n_alt = 0
  BB 126
   Insn 2631: point = 528, n_alt = -1
   Insn 2630: point = 528, n_alt = 1
   Insn 2629: point = 529, n_alt = 7
   Insn 2628: point = 530, n_alt = 7
   Insn 2627: point = 532, n_alt = 3
   Insn 2626: point = 533, n_alt = 3
   Insn 2625: point = 535, n_alt = 0
   Insn 2624: point = 537, n_alt = 0
   Insn 2623: point = 539, n_alt = 0
   Insn 2622: point = 540, n_alt = 0
   Insn 2621: point = 542, n_alt = 0
   Insn 2620: point = 544, n_alt = 0
   Insn 2619: point = 546, n_alt = 0
   Insn 2618: point = 547, n_alt = 1
   Insn 2617: point = 549, n_alt = 0
   Insn 2616: point = 551, n_alt = 0
  BB 125
   Insn 2613: point = 553, n_alt = 8
   Insn 2612: point = 554, n_alt = 3
   Insn 2611: point = 555, n_alt = 1
   Insn 2610: point = 557, n_alt = 3
   Insn 2609: point = 559, n_alt = 0
   Insn 2608: point = 561, n_alt = 0
   Insn 2607: point = 563, n_alt = 0
   Insn 2606: point = 564, n_alt = 0
   Insn 2605: point = 566, n_alt = 0
   Insn 2604: point = 568, n_alt = 0
   Insn 2603: point = 570, n_alt = 0
   Insn 2602: point = 571, n_alt = 1
   Insn 2601: point = 573, n_alt = 0
   Insn 2600: point = 575, n_alt = 0
   Insn 2599: point = 576, n_alt = 7
   Insn 2598: point = 578, n_alt = 4
   Insn 2597: point = 579, n_alt = 3
   Insn 2596: point = 581, n_alt = 0
   Insn 2595: point = 583, n_alt = 0
   Insn 2594: point = 585, n_alt = 0
   Insn 2593: point = 586, n_alt = 0
   Insn 2592: point = 588, n_alt = 0
   Insn 2591: point = 590, n_alt = 0
   Insn 2590: point = 592, n_alt = 0
   Insn 2589: point = 593, n_alt = 1
   Insn 2588: point = 595, n_alt = 0
   Insn 2587: point = 597, n_alt = 0
   Insn 2586: point = 598, n_alt = 7
   Insn 2585: point = 600, n_alt = 3
   Insn 2584: point = 601, n_alt = 3
   Insn 2583: point = 603, n_alt = 0
   Insn 2582: point = 605, n_alt = 0
   Insn 2581: point = 607, n_alt = 0
   Insn 2580: point = 608, n_alt = 0
   Insn 2579: point = 610, n_alt = 0
   Insn 2578: point = 612, n_alt = 0
   Insn 2577: point = 614, n_alt = 0
   Insn 2576: point = 615, n_alt = 1
   Insn 2575: point = 617, n_alt = 0
   Insn 2574: point = 619, n_alt = 0
   Insn 2573: point = 620, n_alt = 8
   Insn 2572: point = 621, n_alt = 7
   Insn 2571: point = 622, n_alt = 3
   Insn 2570: point = 623, n_alt = 3
   Insn 2569: point = 625, n_alt = 0
   Insn 2568: point = 627, n_alt = 0
   Insn 2567: point = 629, n_alt = 0
   Insn 2566: point = 630, n_alt = 0
   Insn 2565: point = 632, n_alt = 0
   Insn 2564: point = 634, n_alt = 0
   Insn 2563: point = 636, n_alt = 0
   Insn 2562: point = 637, n_alt = 1
   Insn 2561: point = 639, n_alt = 0
   Insn 2560: point = 641, n_alt = 0
  BB 124
   Insn 2555: point = 643, n_alt = -1
   Insn 2554: point = 643, n_alt = 1
   Insn 2553: point = 644, n_alt = 7
   Insn 2552: point = 645, n_alt = 7
   Insn 2551: point = 647, n_alt = 3
   Insn 2550: point = 648, n_alt = 3
   Insn 2549: point = 650, n_alt = 0
   Insn 2548: point = 652, n_alt = 0
   Insn 2547: point = 654, n_alt = 0
   Insn 2546: point = 655, n_alt = 0
   Insn 2545: point = 657, n_alt = 0
   Insn 2544: point = 659, n_alt = 0
   Insn 2543: point = 661, n_alt = 0
   Insn 2542: point = 662, n_alt = 1
   Insn 2541: point = 664, n_alt = 0
   Insn 2540: point = 666, n_alt = 0
   Insn 2539: point = 667, n_alt = 8
   Insn 2538: point = 668, n_alt = 3
   Insn 2537: point = 669, n_alt = 2
   Insn 2536: point = 671, n_alt = 3
   Insn 2535: point = 673, n_alt = 0
   Insn 2534: point = 675, n_alt = 0
   Insn 2533: point = 677, n_alt = 0
   Insn 2532: point = 678, n_alt = 0
   Insn 2531: point = 680, n_alt = 0
   Insn 2530: point = 682, n_alt = 0
   Insn 2529: point = 684, n_alt = 0
   Insn 2528: point = 685, n_alt = 1
   Insn 2527: point = 687, n_alt = 0
   Insn 2526: point = 689, n_alt = 0
   Insn 2525: point = 690, n_alt = 7
   Insn 2524: point = 692, n_alt = 4
   Insn 2523: point = 693, n_alt = 3
   Insn 2522: point = 695, n_alt = 0
   Insn 2521: point = 697, n_alt = 0
   Insn 2520: point = 699, n_alt = 0
   Insn 2519: point = 700, n_alt = 0
   Insn 2518: point = 702, n_alt = 0
   Insn 2517: point = 704, n_alt = 0
   Insn 2516: point = 706, n_alt = 0
   Insn 2515: point = 707, n_alt = 1
   Insn 2514: point = 709, n_alt = 0
   Insn 2513: point = 711, n_alt = 0
   Insn 2512: point = 712, n_alt = 7
   Insn 2511: point = 714, n_alt = 3
   Insn 2510: point = 715, n_alt = 3
   Insn 2509: point = 717, n_alt = 0
   Insn 2508: point = 719, n_alt = 0
   Insn 2507: point = 721, n_alt = 0
   Insn 2506: point = 722, n_alt = 0
   Insn 2505: point = 724, n_alt = 0
   Insn 2504: point = 726, n_alt = 0
   Insn 2503: point = 728, n_alt = 0
   Insn 2502: point = 729, n_alt = 1
   Insn 2501: point = 731, n_alt = 0
   Insn 2500: point = 733, n_alt = 0
  BB 123
   Insn 2497: point = 735, n_alt = 8
   Insn 2496: point = 736, n_alt = 3
   Insn 2495: point = 737, n_alt = 1
   Insn 2494: point = 739, n_alt = 7
   Insn 2493: point = 740, n_alt = 3
   Insn 2492: point = 742, n_alt = 0
   Insn 2491: point = 744, n_alt = 0
   Insn 2490: point = 746, n_alt = 0
   Insn 2489: point = 747, n_alt = 0
   Insn 2488: point = 749, n_alt = 0
   Insn 2487: point = 751, n_alt = 0
   Insn 2486: point = 753, n_alt = 0
   Insn 2485: point = 754, n_alt = 1
   Insn 2484: point = 756, n_alt = 0
   Insn 2483: point = 758, n_alt = 0
   Insn 3266: point = 759, n_alt = -2
   Insn 2482: point = 761, n_alt = 1
   Insn 3265: point = 761, n_alt = -2
   Insn 2481: point = 763, n_alt = -2
   Insn 2480: point = 765, n_alt = 1
   Insn 2479: point = 767, n_alt = 7
   Insn 2478: point = 769, n_alt = 4
   Insn 2477: point = 770, n_alt = 3
   Insn 2476: point = 772, n_alt = 0
   Insn 2475: point = 774, n_alt = 0
   Insn 2474: point = 776, n_alt = 0
   Insn 2473: point = 777, n_alt = 0
   Insn 2472: point = 779, n_alt = 0
   Insn 2471: point = 781, n_alt = 0
   Insn 2470: point = 783, n_alt = 0
   Insn 2469: point = 784, n_alt = 1
   Insn 2468: point = 786, n_alt = 0
   Insn 2467: point = 788, n_alt = 0
   Insn 2466: point = 789, n_alt = 7
   Insn 2465: point = 791, n_alt = 0
   Insn 2464: point = 793, n_alt = 4
   Insn 2463: point = 794, n_alt = 3
   Insn 2462: point = 796, n_alt = 0
   Insn 2461: point = 798, n_alt = 0
   Insn 2460: point = 800, n_alt = 0
   Insn 2459: point = 801, n_alt = 0
   Insn 2458: point = 803, n_alt = 0
   Insn 2457: point = 805, n_alt = 0
   Insn 2456: point = 807, n_alt = 0
   Insn 2455: point = 808, n_alt = 1
   Insn 2454: point = 810, n_alt = 0
   Insn 2453: point = 812, n_alt = 0
   Insn 2452: point = 813, n_alt = 8
   Insn 2451: point = 814, n_alt = 3
   Insn 2450: point = 815, n_alt = 7
   Insn 2449: point = 817, n_alt = 4
   Insn 2448: point = 818, n_alt = 3
   Insn 2447: point = 820, n_alt = 0
   Insn 2446: point = 822, n_alt = 0
   Insn 2445: point = 824, n_alt = 0
   Insn 2444: point = 825, n_alt = 0
   Insn 2443: point = 827, n_alt = 0
   Insn 2442: point = 829, n_alt = 0
   Insn 2441: point = 831, n_alt = 0
   Insn 2440: point = 832, n_alt = 1
   Insn 2439: point = 834, n_alt = 0
   Insn 2438: point = 836, n_alt = 0
   Insn 2437: point = 837, n_alt = 3
   Insn 2436: point = 839, n_alt = 0
   Insn 2435: point = 841, n_alt = 0
   Insn 2434: point = 843, n_alt = 0
   Insn 2433: point = 844, n_alt = 0
   Insn 2432: point = 846, n_alt = 0
   Insn 2431: point = 848, n_alt = 0
   Insn 2430: point = 850, n_alt = 0
   Insn 2429: point = 851, n_alt = 1
   Insn 2428: point = 853, n_alt = 0
   Insn 2427: point = 855, n_alt = 0
   Insn 2426: point = 856, n_alt = 8
   Insn 2425: point = 857, n_alt = 7
   Insn 2424: point = 858, n_alt = 4
   Insn 2423: point = 859, n_alt = 3
   Insn 2422: point = 861, n_alt = 0
   Insn 2421: point = 863, n_alt = 0
   Insn 2420: point = 865, n_alt = 0
   Insn 2419: point = 866, n_alt = 0
   Insn 2418: point = 868, n_alt = 0
   Insn 2417: point = 870, n_alt = 0
   Insn 2416: point = 872, n_alt = 0
   Insn 2415: point = 873, n_alt = 1
   Insn 2414: point = 875, n_alt = 0
   Insn 2413: point = 877, n_alt = 0
   Insn 2412: point = 878, n_alt = 8
   Insn 2411: point = 879, n_alt = 7
  BB 121
   Insn 3161: point = 881, n_alt = -1
   Insn 2402: point = 881, n_alt = 8
   Insn 2401: point = 882, n_alt = 7
  BB 119
   Insn 3158: point = 884, n_alt = -1
   Insn 2380: point = 884, n_alt = 8
   Insn 2379: point = 885, n_alt = 7
  BB 117
   Insn 3155: point = 887, n_alt = -1
   Insn 2366: point = 887, n_alt = 8
   Insn 2365: point = 888, n_alt = 7
  BB 122
   Insn 2408: point = 890, n_alt = 8
   Insn 2407: point = 891, n_alt = 7
  BB 120
   Insn 2396: point = 893, n_alt = -1
   Insn 2395: point = 893, n_alt = 1
   Insn 2394: point = 894, n_alt = 7
   Insn 2393: point = 895, n_alt = 7
   Insn 2392: point = 897, n_alt = 4
   Insn 2391: point = 898, n_alt = 3
   Insn 2390: point = 900, n_alt = 0
   Insn 2389: point = 902, n_alt = 0
   Insn 2388: point = 904, n_alt = 0
   Insn 2387: point = 905, n_alt = 0
   Insn 2386: point = 907, n_alt = 0
   Insn 2385: point = 909, n_alt = 0
  BB 118
   Insn 2374: point = 911, n_alt = -1
   Insn 2373: point = 911, n_alt = 1
   Insn 2372: point = 912, n_alt = 7
   Insn 2371: point = 913, n_alt = 7
  BB 116
   Insn 2360: point = 915, n_alt = -1
   Insn 2359: point = 915, n_alt = 1
   Insn 2358: point = 916, n_alt = 7
   Insn 2357: point = 917, n_alt = 8
   Insn 2356: point = 918, n_alt = 1
   Insn 2355: point = 920, n_alt = 7
   Insn 2354: point = 921, n_alt = -2
   Insn 2353: point = 923, n_alt = 2
   Insn 2352: point = 925, n_alt = 7
   Insn 2351: point = 926, n_alt = 1
   Insn 2350: point = 928, n_alt = -2
   Insn 2349: point = 930, n_alt = 1
   Insn 2348: point = 932, n_alt = 7
   Insn 2347: point = 933, n_alt = 7
   Insn 2346: point = 934, n_alt = 1
   Insn 2345: point = 936, n_alt = 7
   Insn 2344: point = 937, n_alt = 7
   Insn 2343: point = 938, n_alt = 8
   Insn 2342: point = 939, n_alt = 1
   Insn 2341: point = 941, n_alt = 7
   Insn 2340: point = 942, n_alt = -2
   Insn 2339: point = 944, n_alt = 1
   Insn 2338: point = 946, n_alt = 1
  BB 115
   Insn 2335: point = 949, n_alt = 7
  BB 114
   Insn 2333: point = 951, n_alt = -1
   Insn 2332: point = 951, n_alt = 0
   Insn 2331: point = 952, n_alt = 0
   Insn 2330: point = 954, n_alt = 0
   Insn 2329: point = 956, n_alt = 0
   Insn 2328: point = 957, n_alt = 1
   Insn 2327: point = 957, n_alt = 0
   Insn 2326: point = 959, n_alt = 0
   Insn 2325: point = 960, n_alt = 1
   Insn 2324: point = 961, n_alt = 7
   Insn 2323: point = 962, n_alt = 7
   Insn 2322: point = 963, n_alt = 8
   Insn 2321: point = 964, n_alt = 1
   Insn 2320: point = 966, n_alt = -2
   Insn 2319: point = 967, n_alt = 0
   Insn 2318: point = 967, n_alt = -2
   Insn 2317: point = 968, n_alt = 2
   Insn 2316: point = 970, n_alt = -2
   Insn 2315: point = 972, n_alt = 2
   Insn 2314: point = 974, n_alt = 7
   Insn 2313: point = 975, n_alt = 7
   Insn 2312: point = 977, n_alt = 0
   Insn 2311: point = 979, n_alt = 4
   Insn 2310: point = 980, n_alt = 3
   Insn 2309: point = 982, n_alt = 0
   Insn 2308: point = 984, n_alt = 0
   Insn 2307: point = 986, n_alt = 0
   Insn 2306: point = 987, n_alt = 0
   Insn 2305: point = 989, n_alt = 0
   Insn 2304: point = 991, n_alt = 0
   Insn 2303: point = 993, n_alt = 0
   Insn 2302: point = 994, n_alt = 1
   Insn 2301: point = 996, n_alt = 0
   Insn 2300: point = 998, n_alt = 0
   Insn 2299: point = 999, n_alt = 1
   Insn 2298: point = 1001, n_alt = 7
   Insn 2297: point = 1002, n_alt = -2
   Insn 2296: point = 1004, n_alt = 2
   Insn 2295: point = 1006, n_alt = 7
   Insn 2294: point = 1007, n_alt = 7
   Insn 2293: point = 1009, n_alt = 0
   Insn 2292: point = 1011, n_alt = 4
   Insn 2291: point = 1012, n_alt = 3
   Insn 2290: point = 1014, n_alt = 0
   Insn 2289: point = 1016, n_alt = 0
   Insn 2288: point = 1018, n_alt = 0
   Insn 2287: point = 1019, n_alt = 0
   Insn 2286: point = 1021, n_alt = 0
   Insn 2285: point = 1023, n_alt = 0
   Insn 2284: point = 1025, n_alt = 0
   Insn 2283: point = 1026, n_alt = 1
   Insn 2282: point = 1028, n_alt = 0
   Insn 2281: point = 1030, n_alt = 0
   Insn 3263: point = 1031, n_alt = 8
   Insn 2280: point = 1033, n_alt = 2
   Insn 3262: point = 1033, n_alt = -2
   Insn 2279: point = 1035, n_alt = 7
  BB 113
   Insn 2276: point = 1037, n_alt = 8
   Insn 2275: point = 1038, n_alt = 7
   Insn 2274: point = 1039, n_alt = 8
   Insn 2273: point = 1040, n_alt = 7
  BB 112
   Insn 2268: point = 1042, n_alt = -1
   Insn 2267: point = 1042, n_alt = 1
   Insn 2266: point = 1043, n_alt = 7
   Insn 2265: point = 1044, n_alt = 8
   Insn 2264: point = 1045, n_alt = 7
   Insn 2263: point = 1046, n_alt = 8
   Insn 2262: point = 1047, n_alt = 7
   Insn 2261: point = 1048, n_alt = 8
  BB 111
   Insn 2258: point = 1050, n_alt = 7
  BB 110
   Insn 2256: point = 1052, n_alt = -1
   Insn 2255: point = 1052, n_alt = 0
   Insn 2254: point = 1053, n_alt = 0
   Insn 2253: point = 1055, n_alt = 0
   Insn 2252: point = 1057, n_alt = 0
   Insn 2251: point = 1058, n_alt = 1
   Insn 2250: point = 1058, n_alt = 0
   Insn 2249: point = 1060, n_alt = 0
   Insn 2248: point = 1061, n_alt = 1
   Insn 2247: point = 1061, n_alt = 7
   Insn 2246: point = 1062, n_alt = 8
   Insn 2245: point = 1063, n_alt = 2
   Insn 2244: point = 1065, n_alt = 7
   Insn 2243: point = 1066, n_alt = 7
   Insn 2242: point = 1068, n_alt = 0
   Insn 2241: point = 1070, n_alt = 4
   Insn 2240: point = 1071, n_alt = 3
   Insn 2239: point = 1073, n_alt = 0
   Insn 2238: point = 1075, n_alt = 0
   Insn 2237: point = 1077, n_alt = 0
   Insn 2236: point = 1078, n_alt = 0
   Insn 2235: point = 1080, n_alt = 0
   Insn 2234: point = 1082, n_alt = 0
   Insn 2233: point = 1084, n_alt = 0
   Insn 2232: point = 1085, n_alt = 1
   Insn 2231: point = 1087, n_alt = 0
   Insn 2230: point = 1089, n_alt = 0
   Insn 2229: point = 1090, n_alt = 8
   Insn 2228: point = 1091, n_alt = 3
   Insn 2227: point = 1092, n_alt = 7
   Insn 2226: point = 1094, n_alt = 0
   Insn 2225: point = 1096, n_alt = 4
   Insn 2224: point = 1097, n_alt = 3
   Insn 2223: point = 1099, n_alt = 0
   Insn 2222: point = 1101, n_alt = 0
   Insn 2221: point = 1103, n_alt = 0
   Insn 2220: point = 1104, n_alt = 0
   Insn 2219: point = 1106, n_alt = 0
   Insn 2218: point = 1108, n_alt = 0
   Insn 2217: point = 1110, n_alt = 0
   Insn 2216: point = 1111, n_alt = 1
   Insn 2215: point = 1113, n_alt = 0
   Insn 2214: point = 1115, n_alt = 0
   Insn 2213: point = 1116, n_alt = 3
   Insn 2212: point = 1118, n_alt = 0
   Insn 2211: point = 1120, n_alt = 0
   Insn 2210: point = 1122, n_alt = 0
   Insn 2209: point = 1123, n_alt = 0
   Insn 2208: point = 1125, n_alt = 0
   Insn 2207: point = 1127, n_alt = 0
   Insn 2206: point = 1129, n_alt = 0
   Insn 2205: point = 1130, n_alt = 1
   Insn 2204: point = 1132, n_alt = 0
   Insn 2203: point = 1134, n_alt = 0
   Insn 2202: point = 1135, n_alt = 8
   Insn 2201: point = 1136, n_alt = 3
   Insn 2200: point = 1137, n_alt = 7
   Insn 2199: point = 1139, n_alt = 0
   Insn 2198: point = 1141, n_alt = 4
   Insn 2197: point = 1142, n_alt = 3
   Insn 2196: point = 1144, n_alt = 0
   Insn 2195: point = 1146, n_alt = 0
   Insn 2194: point = 1148, n_alt = 0
   Insn 2193: point = 1149, n_alt = 0
   Insn 2192: point = 1151, n_alt = 0
   Insn 2191: point = 1153, n_alt = 0
   Insn 2190: point = 1155, n_alt = 0
   Insn 2189: point = 1156, n_alt = 1
   Insn 2188: point = 1158, n_alt = 0
   Insn 2187: point = 1160, n_alt = 0
   Insn 2186: point = 1161, n_alt = 3
   Insn 2185: point = 1163, n_alt = 0
   Insn 2184: point = 1165, n_alt = 0
   Insn 2183: point = 1167, n_alt = 0
   Insn 2182: point = 1168, n_alt = 0
   Insn 2181: point = 1170, n_alt = 0
   Insn 2180: point = 1172, n_alt = 0
   Insn 2179: point = 1174, n_alt = 0
   Insn 2178: point = 1175, n_alt = 1
   Insn 2177: point = 1177, n_alt = 0
   Insn 2176: point = 1179, n_alt = 0
   Insn 2175: point = 1180, n_alt = 1
   Insn 2174: point = 1181, n_alt = 0
   Insn 2173: point = 1182, n_alt = 3
   Insn 2172: point = 1183, n_alt = 3
   Insn 2171: point = 1185, n_alt = 0
   Insn 2170: point = 1187, n_alt = 0
   Insn 2169: point = 1189, n_alt = 0
   Insn 2168: point = 1190, n_alt = 0
   Insn 2167: point = 1192, n_alt = 0
   Insn 2166: point = 1194, n_alt = 0
   Insn 2165: point = 1196, n_alt = 0
   Insn 2164: point = 1197, n_alt = 1
   Insn 2163: point = 1199, n_alt = 0
   Insn 2162: point = 1201, n_alt = 0
   Insn 2161: point = 1202, n_alt = 8
   Insn 2160: point = 1203, n_alt = 1
   Insn 2159: point = 1205, n_alt = 7
   Insn 2158: point = 1206, n_alt = -2
   Insn 2157: point = 1208, n_alt = 1
   Insn 2156: point = 1210, n_alt = 7
   Insn 2155: point = 1212, n_alt = 4
   Insn 2154: point = 1213, n_alt = 3
   Insn 2153: point = 1215, n_alt = 0
   Insn 2152: point = 1217, n_alt = 0
   Insn 2151: point = 1219, n_alt = 0
   Insn 2150: point = 1220, n_alt = 0
   Insn 2149: point = 1222, n_alt = 0
   Insn 2148: point = 1224, n_alt = 0
   Insn 2147: point = 1226, n_alt = 0
   Insn 2146: point = 1227, n_alt = 1
   Insn 2145: point = 1229, n_alt = 0
   Insn 2144: point = 1231, n_alt = 0
   Insn 2143: point = 1233, n_alt = 0
   Insn 2142: point = 1234, n_alt = 7
   Insn 2141: point = 1236, n_alt = 4
   Insn 2140: point = 1237, n_alt = 3
   Insn 2139: point = 1239, n_alt = 0
   Insn 2138: point = 1241, n_alt = 0
   Insn 2137: point = 1243, n_alt = 0
   Insn 2136: point = 1244, n_alt = 0
   Insn 2135: point = 1246, n_alt = 0
   Insn 2134: point = 1248, n_alt = 0
   Insn 2133: point = 1250, n_alt = 0
   Insn 2132: point = 1251, n_alt = 1
   Insn 2131: point = 1253, n_alt = 0
   Insn 2130: point = 1255, n_alt = 0
   Insn 2129: point = 1256, n_alt = 8
   Insn 2128: point = 1257, n_alt = 2
   Insn 2127: point = 1259, n_alt = 7
   Insn 2126: point = 1261, n_alt = 4
   Insn 2125: point = 1262, n_alt = 3
   Insn 2124: point = 1264, n_alt = 0
   Insn 2123: point = 1266, n_alt = 0
   Insn 2122: point = 1268, n_alt = 0
   Insn 2121: point = 1269, n_alt = 0
   Insn 2120: point = 1271, n_alt = 0
   Insn 2119: point = 1273, n_alt = 0
   Insn 2118: point = 1275, n_alt = 0
   Insn 2117: point = 1276, n_alt = 1
   Insn 2116: point = 1278, n_alt = 0
   Insn 2115: point = 1280, n_alt = 0
   Insn 2114: point = 1281, n_alt = 7
   Insn 2113: point = 1283, n_alt = 4
   Insn 2112: point = 1284, n_alt = 3
   Insn 2111: point = 1286, n_alt = 0
   Insn 2110: point = 1288, n_alt = 0
   Insn 2109: point = 1290, n_alt = 0
   Insn 2108: point = 1291, n_alt = 0
   Insn 2107: point = 1293, n_alt = 0
   Insn 2106: point = 1295, n_alt = 0
   Insn 2105: point = 1297, n_alt = 0
   Insn 2104: point = 1298, n_alt = 1
   Insn 2103: point = 1300, n_alt = 0
   Insn 2102: point = 1302, n_alt = 0
   Insn 2101: point = 1304, n_alt = 0
  BB 169
   Insn 3246: point = 1306, n_alt = -1
  BB 106
   Insn 2030: point = 1307, n_alt = -1
   Insn 2029: point = 1307, n_alt = 0
   Insn 2028: point = 1308, n_alt = 0
   Insn 2027: point = 1310, n_alt = 0
   Insn 2026: point = 1311, n_alt = 0
  BB 109
   Insn 3152: point = 1312, n_alt = -1
   Insn 2095: point = 1312, n_alt = 1
  BB 108
   Insn 2092: point = 1313, n_alt = 1
   Insn 2091: point = 1314, n_alt = 0
   Insn 2090: point = 1315, n_alt = 8
   Insn 2089: point = 1316, n_alt = 7
  BB 107
   Insn 2084: point = 1318, n_alt = -1
   Insn 2083: point = 1318, n_alt = 1
   Insn 2082: point = 1319, n_alt = 7
   Insn 2081: point = 1320, n_alt = 8
   Insn 2080: point = 1321, n_alt = 0
   Insn 2079: point = 1323, n_alt = 2
   Insn 2078: point = 1324, n_alt = 2
   Insn 2077: point = 1326, n_alt = 7
   Insn 2076: point = 1327, n_alt = 7
   Insn 2075: point = 1329, n_alt = 3
   Insn 2074: point = 1330, n_alt = 3
   Insn 2073: point = 1332, n_alt = 0
   Insn 2072: point = 1334, n_alt = 0
   Insn 2071: point = 1336, n_alt = 0
   Insn 2070: point = 1337, n_alt = 0
   Insn 2069: point = 1339, n_alt = 0
   Insn 2068: point = 1341, n_alt = 0
   Insn 2067: point = 1343, n_alt = 0
   Insn 2066: point = 1344, n_alt = 1
   Insn 2065: point = 1346, n_alt = 0
   Insn 2064: point = 1348, n_alt = 0
   Insn 2063: point = 1349, n_alt = 8
   Insn 2062: point = 1350, n_alt = 1
   Insn 2061: point = 1352, n_alt = 7
   Insn 2060: point = 1353, n_alt = -2
   Insn 2059: point = 1355, n_alt = 1
   Insn 2058: point = 1357, n_alt = 7
   Insn 2057: point = 1359, n_alt = 4
   Insn 2056: point = 1360, n_alt = 3
   Insn 2055: point = 1362, n_alt = 0
   Insn 2054: point = 1364, n_alt = 0
   Insn 2053: point = 1366, n_alt = 0
   Insn 2052: point = 1367, n_alt = 0
   Insn 2051: point = 1369, n_alt = 0
   Insn 2050: point = 1371, n_alt = 0
   Insn 2049: point = 1373, n_alt = 0
   Insn 2048: point = 1374, n_alt = 1
   Insn 2047: point = 1376, n_alt = 0
   Insn 2046: point = 1378, n_alt = 0
   Insn 2045: point = 1380, n_alt = 0
   Insn 2044: point = 1381, n_alt = 7
   Insn 2043: point = 1383, n_alt = 4
   Insn 2042: point = 1384, n_alt = 3
   Insn 2041: point = 1386, n_alt = 0
   Insn 2040: point = 1388, n_alt = 0
   Insn 2039: point = 1390, n_alt = 0
   Insn 2038: point = 1391, n_alt = 0
   Insn 2037: point = 1393, n_alt = 0
   Insn 2036: point = 1395, n_alt = 0
   Insn 2035: point = 1397, n_alt = 0
   Insn 2034: point = 1398, n_alt = 1
   Insn 2033: point = 1400, n_alt = 0
   Insn 2032: point = 1402, n_alt = 0
  BB 105
   Insn 2024: point = 1404, n_alt = 1
   Insn 2023: point = 1404, n_alt = 8
   Insn 2022: point = 1405, n_alt = 3
   Insn 2021: point = 1406, n_alt = 1
   Insn 2020: point = 1408, n_alt = 7
   Insn 2019: point = 1409, n_alt = 3
   Insn 2018: point = 1411, n_alt = 0
   Insn 2017: point = 1413, n_alt = 0
   Insn 2016: point = 1415, n_alt = 0
   Insn 2015: point = 1416, n_alt = 0
   Insn 2014: point = 1418, n_alt = 0
   Insn 2013: point = 1420, n_alt = 0
   Insn 2012: point = 1422, n_alt = 0
   Insn 2011: point = 1423, n_alt = 1
   Insn 2010: point = 1425, n_alt = 0
   Insn 2009: point = 1427, n_alt = 0
   Insn 2008: point = 1428, n_alt = -2
   Insn 2007: point = 1430, n_alt = 1
   Insn 2006: point = 1432, n_alt = 7
   Insn 2005: point = 1434, n_alt = 4
   Insn 2004: point = 1435, n_alt = 3
   Insn 2003: point = 1437, n_alt = 0
   Insn 2002: point = 1439, n_alt = 0
   Insn 2001: point = 1441, n_alt = 0
   Insn 2000: point = 1442, n_alt = 0
   Insn 1999: point = 1444, n_alt = 0
   Insn 1998: point = 1446, n_alt = 0
   Insn 1997: point = 1448, n_alt = 0
   Insn 1996: point = 1449, n_alt = 1
   Insn 1995: point = 1451, n_alt = 0
   Insn 1994: point = 1453, n_alt = 0
   Insn 1993: point = 1455, n_alt = 0
   Insn 1992: point = 1456, n_alt = 7
   Insn 1991: point = 1458, n_alt = 4
   Insn 1990: point = 1459, n_alt = 3
   Insn 1989: point = 1461, n_alt = 0
   Insn 1988: point = 1463, n_alt = 0
   Insn 1987: point = 1465, n_alt = 0
   Insn 1986: point = 1466, n_alt = 0
   Insn 1985: point = 1468, n_alt = 0
   Insn 1984: point = 1470, n_alt = 0
   Insn 1983: point = 1472, n_alt = 0
   Insn 1982: point = 1473, n_alt = 1
   Insn 1981: point = 1475, n_alt = 0
   Insn 1980: point = 1477, n_alt = 0
   Insn 1979: point = 1478, n_alt = 8
   Insn 1978: point = 1479, n_alt = 7
   Insn 1977: point = 1480, n_alt = 1
  BB 104
   Insn 1972: point = 1481, n_alt = -1
   Insn 1971: point = 1481, n_alt = 1
   Insn 1970: point = 1482, n_alt = 7
  BB 103
   Insn 1969: point = 1484, n_alt = -1
   Insn 1968: point = 1484, n_alt = 1
   Insn 1967: point = 1485, n_alt = 7
   Insn 1966: point = 1486, n_alt = 7
   Insn 1965: point = 1488, n_alt = 4
   Insn 1964: point = 1489, n_alt = 3
   Insn 1963: point = 1491, n_alt = 0
   Insn 1962: point = 1493, n_alt = 0
   Insn 1961: point = 1495, n_alt = 0
   Insn 1960: point = 1496, n_alt = 0
   Insn 1959: point = 1498, n_alt = 0
   Insn 1958: point = 1500, n_alt = 0
   Insn 1957: point = 1502, n_alt = 0
   Insn 1956: point = 1503, n_alt = 1
   Insn 1955: point = 1505, n_alt = 0
   Insn 1954: point = 1507, n_alt = 0
  BB 101
   Insn 1946: point = 1509, n_alt = 1
  BB 99
   Insn 1938: point = 1510, n_alt = 1
   Insn 1937: point = 1511, n_alt = 0
   Insn 1936: point = 1512, n_alt = 0
  BB 97
   Insn 1928: point = 1513, n_alt = 1
  BB 161
   Insn 3222: point = 1513, n_alt = -1
  BB 77
   Insn 1530: point = 1513, n_alt = -1
   Insn 1529: point = 1513, n_alt = 0
   Insn 1528: point = 1514, n_alt = 0
   Insn 1527: point = 1516, n_alt = 0
   Insn 1526: point = 1517, n_alt = 0
  BB 96
   Insn 3150: point = 1517, n_alt = -1
   Insn 1922: point = 1517, n_alt = 1
  BB 164
   Insn 3231: point = 1517, n_alt = -1
  BB 88
   Insn 1805: point = 1517, n_alt = -1
   Insn 1804: point = 1517, n_alt = 0
   Insn 1803: point = 1518, n_alt = 0
   Insn 1802: point = 1520, n_alt = 0
   Insn 1801: point = 1521, n_alt = 0
  BB 95
   Insn 3148: point = 1522, n_alt = -1
   Insn 1916: point = 1522, n_alt = 1
  BB 165
   Insn 3234: point = 1523, n_alt = -1
  BB 90
   Insn 1813: point = 1524, n_alt = -1
   Insn 1812: point = 1524, n_alt = 0
   Insn 1811: point = 1525, n_alt = 0
   Insn 1810: point = 1527, n_alt = 0
   Insn 1809: point = 1528, n_alt = 0
  BB 94
   Insn 3146: point = 1529, n_alt = -1
   Insn 1910: point = 1529, n_alt = 1
  BB 93
   Insn 1907: point = 1530, n_alt = 8
   Insn 1906: point = 1531, n_alt = 3
   Insn 1905: point = 1532, n_alt = 1
   Insn 1904: point = 1534, n_alt = 3
   Insn 1903: point = 1536, n_alt = 0
   Insn 1902: point = 1538, n_alt = 1
   Insn 1901: point = 1540, n_alt = 0
   Insn 1900: point = 1541, n_alt = 0
   Insn 1899: point = 1543, n_alt = 0
   Insn 1898: point = 1545, n_alt = 1
   Insn 1897: point = 1547, n_alt = 0
   Insn 1896: point = 1548, n_alt = 1
   Insn 1895: point = 1550, n_alt = 1
   Insn 1894: point = 1552, n_alt = 0
   Insn 1893: point = 1553, n_alt = 7
   Insn 1892: point = 1555, n_alt = 3
   Insn 1891: point = 1556, n_alt = 3
   Insn 1890: point = 1558, n_alt = 0
   Insn 1889: point = 1560, n_alt = 1
   Insn 1888: point = 1562, n_alt = 0
   Insn 1887: point = 1563, n_alt = 0
   Insn 1886: point = 1565, n_alt = 0
   Insn 1885: point = 1567, n_alt = 1
   Insn 1884: point = 1569, n_alt = 0
   Insn 1883: point = 1570, n_alt = 1
   Insn 1882: point = 1572, n_alt = 1
   Insn 1881: point = 1574, n_alt = 0
   Insn 1880: point = 1575, n_alt = 8
   Insn 1879: point = 1576, n_alt = 3
   Insn 1878: point = 1577, n_alt = 1
   Insn 1877: point = 1579, n_alt = 3
   Insn 1876: point = 1581, n_alt = 0
   Insn 1875: point = 1583, n_alt = 1
   Insn 1874: point = 1585, n_alt = 0
   Insn 1873: point = 1586, n_alt = 0
   Insn 1872: point = 1588, n_alt = 0
   Insn 1871: point = 1590, n_alt = 1
   Insn 1870: point = 1592, n_alt = 0
   Insn 1869: point = 1593, n_alt = 1
   Insn 1868: point = 1595, n_alt = 1
   Insn 1867: point = 1597, n_alt = 0
   Insn 1866: point = 1598, n_alt = 7
   Insn 1865: point = 1600, n_alt = 3
   Insn 1864: point = 1601, n_alt = 3
   Insn 1863: point = 1603, n_alt = 0
   Insn 1862: point = 1605, n_alt = 1
   Insn 1861: point = 1607, n_alt = 0
   Insn 1860: point = 1608, n_alt = 0
   Insn 1859: point = 1610, n_alt = 0
   Insn 1858: point = 1612, n_alt = 1
   Insn 1857: point = 1614, n_alt = 0
   Insn 1856: point = 1615, n_alt = 1
   Insn 1855: point = 1617, n_alt = 1
   Insn 1854: point = 1619, n_alt = 0
   Insn 1853: point = 1620, n_alt = 8
   Insn 1852: point = 1621, n_alt = 2
   Insn 1851: point = 1623, n_alt = 7
   Insn 1850: point = 1624, n_alt = 7
   Insn 1849: point = 1626, n_alt = 4
   Insn 1848: point = 1627, n_alt = 3
   Insn 1847: point = 1629, n_alt = 0
   Insn 1846: point = 1631, n_alt = 1
   Insn 1845: point = 1633, n_alt = 0
   Insn 1844: point = 1634, n_alt = 0
   Insn 1843: point = 1636, n_alt = 0
   Insn 1842: point = 1638, n_alt = 1
   Insn 1841: point = 1640, n_alt = 0
   Insn 1840: point = 1641, n_alt = 1
   Insn 1839: point = 1643, n_alt = 1
   Insn 1838: point = 1645, n_alt = 0
  BB 92
   Insn 1833: point = 1647, n_alt = -1
   Insn 1832: point = 1647, n_alt = 1
   Insn 1831: point = 1648, n_alt = 7
  BB 91
   Insn 1830: point = 1650, n_alt = -1
   Insn 1829: point = 1650, n_alt = 1
   Insn 1828: point = 1651, n_alt = 7
   Insn 1827: point = 1652, n_alt = 7
   Insn 1826: point = 1654, n_alt = 4
   Insn 1825: point = 1655, n_alt = 3
   Insn 1824: point = 1657, n_alt = 0
   Insn 1823: point = 1659, n_alt = 1
   Insn 1822: point = 1661, n_alt = 0
   Insn 1821: point = 1662, n_alt = 0
   Insn 1820: point = 1664, n_alt = 0
   Insn 1819: point = 1666, n_alt = 1
   Insn 1818: point = 1668, n_alt = 0
   Insn 1817: point = 1669, n_alt = 1
   Insn 1816: point = 1671, n_alt = 1
   Insn 1815: point = 1673, n_alt = 0
  BB 89
   Insn 1807: point = 1675, n_alt = 1
  BB 87
   Insn 1799: point = 1676, n_alt = 1
   Insn 1798: point = 1677, n_alt = 0
   Insn 1797: point = 1678, n_alt = 0
  BB 162
   Insn 3225: point = 1679, n_alt = -1
  BB 79
   Insn 1540: point = 1679, n_alt = -1
   Insn 1539: point = 1679, n_alt = 0
   Insn 1538: point = 1680, n_alt = 0
   Insn 1537: point = 1682, n_alt = 0
   Insn 1536: point = 1683, n_alt = 0
  BB 86
   Insn 3144: point = 1684, n_alt = -1
   Insn 1791: point = 1684, n_alt = 1
  BB 163
   Insn 3228: point = 1685, n_alt = -1
  BB 81
   Insn 1548: point = 1686, n_alt = -1
   Insn 1547: point = 1686, n_alt = 0
   Insn 1546: point = 1687, n_alt = 0
   Insn 1545: point = 1689, n_alt = 0
   Insn 1544: point = 1690, n_alt = 0
  BB 85
   Insn 3142: point = 1691, n_alt = -1
   Insn 1785: point = 1691, n_alt = 1
  BB 84
   Insn 1782: point = 1692, n_alt = 8
   Insn 1781: point = 1693, n_alt = 3
   Insn 1780: point = 1694, n_alt = 1
   Insn 1779: point = 1696, n_alt = 3
   Insn 1778: point = 1698, n_alt = 0
   Insn 1777: point = 1700, n_alt = 1
   Insn 1776: point = 1702, n_alt = 0
   Insn 1775: point = 1703, n_alt = 0
   Insn 1774: point = 1705, n_alt = 0
   Insn 1773: point = 1707, n_alt = 1
   Insn 1772: point = 1709, n_alt = 0
   Insn 1771: point = 1710, n_alt = 1
   Insn 1770: point = 1712, n_alt = 1
   Insn 1769: point = 1714, n_alt = 0
   Insn 1768: point = 1715, n_alt = 7
   Insn 1767: point = 1717, n_alt = 3
   Insn 1766: point = 1718, n_alt = 3
   Insn 1765: point = 1720, n_alt = 0
   Insn 1764: point = 1722, n_alt = 1
   Insn 1763: point = 1724, n_alt = 0
   Insn 1762: point = 1725, n_alt = 0
   Insn 1761: point = 1727, n_alt = 0
   Insn 1760: point = 1729, n_alt = 1
   Insn 1759: point = 1731, n_alt = 0
   Insn 1758: point = 1732, n_alt = 1
   Insn 1757: point = 1734, n_alt = 1
   Insn 1756: point = 1736, n_alt = 0
   Insn 1755: point = 1737, n_alt = 8
   Insn 1754: point = 1738, n_alt = 4
   Insn 1753: point = 1739, n_alt = 1
   Insn 1752: point = 1741, n_alt = 3
   Insn 1751: point = 1743, n_alt = 0
   Insn 1750: point = 1745, n_alt = 1
   Insn 1749: point = 1747, n_alt = 0
   Insn 1748: point = 1748, n_alt = 0
   Insn 1747: point = 1750, n_alt = 0
   Insn 1746: point = 1752, n_alt = 1
   Insn 1745: point = 1754, n_alt = 0
   Insn 1744: point = 1755, n_alt = 1
   Insn 1743: point = 1757, n_alt = 1
   Insn 1742: point = 1759, n_alt = 0
   Insn 1741: point = 1760, n_alt = 7
   Insn 1740: point = 1762, n_alt = 4
   Insn 1739: point = 1763, n_alt = 3
   Insn 1738: point = 1765, n_alt = 0
   Insn 1737: point = 1767, n_alt = 1
   Insn 1736: point = 1769, n_alt = 0
   Insn 1735: point = 1770, n_alt = 0
   Insn 1734: point = 1772, n_alt = 0
   Insn 1733: point = 1774, n_alt = 1
   Insn 1732: point = 1776, n_alt = 0
   Insn 1731: point = 1777, n_alt = 1
   Insn 1730: point = 1779, n_alt = 1
   Insn 1729: point = 1781, n_alt = 0
   Insn 1728: point = 1782, n_alt = 8
   Insn 1727: point = 1783, n_alt = 3
   Insn 1726: point = 1784, n_alt = 1
   Insn 1725: point = 1786, n_alt = 3
   Insn 1724: point = 1788, n_alt = 0
   Insn 1723: point = 1790, n_alt = 1
   Insn 1722: point = 1792, n_alt = 0
   Insn 1721: point = 1793, n_alt = 0
   Insn 1720: point = 1795, n_alt = 0
   Insn 1719: point = 1797, n_alt = 1
   Insn 1718: point = 1799, n_alt = 0
   Insn 1717: point = 1800, n_alt = 1
   Insn 1716: point = 1802, n_alt = 1
   Insn 1715: point = 1804, n_alt = 0
   Insn 1714: point = 1805, n_alt = 7
   Insn 1713: point = 1807, n_alt = 3
   Insn 1712: point = 1808, n_alt = 3
   Insn 1711: point = 1810, n_alt = 0
   Insn 1710: point = 1812, n_alt = 1
   Insn 1709: point = 1814, n_alt = 0
   Insn 1708: point = 1815, n_alt = 0
   Insn 1707: point = 1817, n_alt = 0
   Insn 1706: point = 1819, n_alt = 1
   Insn 1705: point = 1821, n_alt = 0
   Insn 1704: point = 1822, n_alt = 1
   Insn 1703: point = 1824, n_alt = 1
   Insn 1702: point = 1826, n_alt = 0
   Insn 1701: point = 1827, n_alt = 8
   Insn 1700: point = 1828, n_alt = 3
   Insn 1699: point = 1829, n_alt = 1
   Insn 1698: point = 1831, n_alt = 3
   Insn 1697: point = 1833, n_alt = 0
   Insn 1696: point = 1835, n_alt = 1
   Insn 1695: point = 1837, n_alt = 0
   Insn 1694: point = 1838, n_alt = 0
   Insn 1693: point = 1840, n_alt = 0
   Insn 1692: point = 1842, n_alt = 1
   Insn 1691: point = 1844, n_alt = 0
   Insn 1690: point = 1845, n_alt = 1
   Insn 1689: point = 1847, n_alt = 1
   Insn 1688: point = 1849, n_alt = 0
   Insn 1687: point = 1850, n_alt = 7
   Insn 1686: point = 1852, n_alt = 3
   Insn 1685: point = 1853, n_alt = 3
   Insn 1684: point = 1855, n_alt = 0
   Insn 1683: point = 1857, n_alt = 1
   Insn 1682: point = 1859, n_alt = 0
   Insn 1681: point = 1860, n_alt = 0
   Insn 1680: point = 1862, n_alt = 0
   Insn 1679: point = 1864, n_alt = 1
   Insn 1678: point = 1866, n_alt = 0
   Insn 1677: point = 1867, n_alt = 1
   Insn 1676: point = 1869, n_alt = 1
   Insn 1675: point = 1871, n_alt = 0
   Insn 1674: point = 1872, n_alt = 8
   Insn 1673: point = 1873, n_alt = 3
   Insn 1672: point = 1874, n_alt = 1
   Insn 1671: point = 1876, n_alt = 7
   Insn 1670: point = 1877, n_alt = 3
   Insn 1669: point = 1879, n_alt = 0
   Insn 1668: point = 1881, n_alt = 1
   Insn 1667: point = 1883, n_alt = 0
   Insn 1666: point = 1884, n_alt = 0
   Insn 1665: point = 1886, n_alt = 0
   Insn 1664: point = 1888, n_alt = 1
   Insn 1663: point = 1890, n_alt = 0
   Insn 1662: point = 1891, n_alt = 1
   Insn 1661: point = 1893, n_alt = 1
   Insn 1660: point = 1895, n_alt = 0
   Insn 1659: point = 1896, n_alt = -2
   Insn 1658: point = 1898, n_alt = 1
   Insn 1657: point = 1900, n_alt = 7
   Insn 1656: point = 1902, n_alt = 4
   Insn 1655: point = 1903, n_alt = 3
   Insn 1654: point = 1905, n_alt = 0
   Insn 1653: point = 1907, n_alt = 1
   Insn 1652: point = 1909, n_alt = 0
   Insn 1651: point = 1910, n_alt = 0
   Insn 1650: point = 1912, n_alt = 0
   Insn 1649: point = 1914, n_alt = 1
   Insn 1648: point = 1916, n_alt = 0
   Insn 1647: point = 1917, n_alt = 1
   Insn 1646: point = 1919, n_alt = 1
   Insn 1645: point = 1921, n_alt = 0
   Insn 1644: point = 1923, n_alt = 0
   Insn 1643: point = 1924, n_alt = 7
   Insn 1642: point = 1926, n_alt = 4
   Insn 1641: point = 1927, n_alt = 3
   Insn 1640: point = 1929, n_alt = 0
   Insn 1639: point = 1931, n_alt = 1
   Insn 1638: point = 1933, n_alt = 0
   Insn 1637: point = 1934, n_alt = 0
   Insn 1636: point = 1936, n_alt = 0
   Insn 1635: point = 1938, n_alt = 1
   Insn 1634: point = 1940, n_alt = 0
   Insn 1633: point = 1941, n_alt = 1
   Insn 1632: point = 1943, n_alt = 1
   Insn 1631: point = 1945, n_alt = 0
   Insn 1630: point = 1946, n_alt = 1
   Insn 1629: point = 1947, n_alt = 3
   Insn 1628: point = 1948, n_alt = 0
   Insn 1627: point = 1950, n_alt = 3
   Insn 1626: point = 1952, n_alt = 0
   Insn 1625: point = 1954, n_alt = 1
   Insn 1624: point = 1956, n_alt = 0
   Insn 1623: point = 1957, n_alt = 0
   Insn 1622: point = 1959, n_alt = 0
   Insn 1621: point = 1961, n_alt = 1
   Insn 1620: point = 1963, n_alt = 0
   Insn 1619: point = 1964, n_alt = 1
   Insn 1618: point = 1966, n_alt = 1
   Insn 1617: point = 1968, n_alt = 0
   Insn 1616: point = 1969, n_alt = 2
   Insn 1615: point = 1971, n_alt = 7
   Insn 1614: point = 1973, n_alt = 4
   Insn 1613: point = 1974, n_alt = 3
   Insn 1612: point = 1976, n_alt = 0
   Insn 1611: point = 1978, n_alt = 1
   Insn 1610: point = 1980, n_alt = 0
   Insn 1609: point = 1981, n_alt = 0
   Insn 1608: point = 1983, n_alt = 0
   Insn 1607: point = 1985, n_alt = 1
   Insn 1606: point = 1987, n_alt = 0
   Insn 1605: point = 1988, n_alt = 1
   Insn 1604: point = 1990, n_alt = 1
   Insn 1603: point = 1992, n_alt = 0
   Insn 1602: point = 1993, n_alt = 1
   Insn 1601: point = 1995, n_alt = 0
   Insn 1600: point = 1997, n_alt = 3
   Insn 1599: point = 1998, n_alt = 3
   Insn 1598: point = 2000, n_alt = 0
   Insn 1597: point = 2002, n_alt = 1
   Insn 1596: point = 2004, n_alt = 0
   Insn 1595: point = 2005, n_alt = 0
   Insn 1594: point = 2007, n_alt = 0
   Insn 1593: point = 2009, n_alt = 1
   Insn 1592: point = 2011, n_alt = 0
   Insn 1591: point = 2012, n_alt = 1
   Insn 1590: point = 2014, n_alt = 1
   Insn 1589: point = 2016, n_alt = 0
   Insn 1588: point = 2017, n_alt = 8
   Insn 1587: point = 2018, n_alt = 2
   Insn 1586: point = 2020, n_alt = 7
   Insn 1585: point = 2021, n_alt = 7
   Insn 1584: point = 2023, n_alt = 4
   Insn 1583: point = 2024, n_alt = 3
   Insn 1582: point = 2026, n_alt = 0
   Insn 1581: point = 2028, n_alt = 1
   Insn 1580: point = 2030, n_alt = 0
   Insn 1579: point = 2031, n_alt = 0
   Insn 1578: point = 2033, n_alt = 0
   Insn 1577: point = 2035, n_alt = 1
   Insn 1576: point = 2037, n_alt = 0
   Insn 1575: point = 2038, n_alt = 1
   Insn 1574: point = 2040, n_alt = 1
   Insn 1573: point = 2042, n_alt = 0
  BB 83
   Insn 1568: point = 2044, n_alt = -1
   Insn 1567: point = 2044, n_alt = 1
   Insn 1566: point = 2045, n_alt = 7
  BB 82
   Insn 1565: point = 2047, n_alt = -1
   Insn 1564: point = 2047, n_alt = 1
   Insn 1563: point = 2048, n_alt = 7
   Insn 1562: point = 2049, n_alt = 7
   Insn 1561: point = 2051, n_alt = 4
   Insn 1560: point = 2052, n_alt = 3
   Insn 1559: point = 2054, n_alt = 0
   Insn 1558: point = 2056, n_alt = 1
   Insn 1557: point = 2058, n_alt = 0
   Insn 1556: point = 2059, n_alt = 0
   Insn 1555: point = 2061, n_alt = 0
   Insn 1554: point = 2063, n_alt = 1
   Insn 1553: point = 2065, n_alt = 0
   Insn 1552: point = 2066, n_alt = 1
   Insn 1551: point = 2068, n_alt = 1
   Insn 1550: point = 2070, n_alt = 0
  BB 80
   Insn 1542: point = 2072, n_alt = 1
  BB 78
   Insn 1534: point = 2073, n_alt = 1
   Insn 1533: point = 2074, n_alt = 0
   Insn 1532: point = 2075, n_alt = 0
  BB 76
   Insn 1524: point = 2076, n_alt = 1
  BB 151
   Insn 3192: point = 2076, n_alt = -1
  BB 18
   Insn 143: point = 2076, n_alt = -1
   Insn 142: point = 2076, n_alt = 0
   Insn 141: point = 2077, n_alt = 0
   Insn 140: point = 2079, n_alt = 0
   Insn 139: point = 2080, n_alt = 0
  BB 75
   Insn 3140: point = 2080, n_alt = -1
   Insn 1518: point = 2080, n_alt = 1
  BB 158
   Insn 3213: point = 2080, n_alt = -1
  BB 64
   Insn 1170: point = 2080, n_alt = -1
   Insn 1169: point = 2080, n_alt = 0
   Insn 1168: point = 2081, n_alt = 0
   Insn 1167: point = 2083, n_alt = 0
   Insn 1166: point = 2084, n_alt = 0
  BB 74
   Insn 3138: point = 2084, n_alt = -1
   Insn 1512: point = 2084, n_alt = 1
  BB 159
   Insn 3216: point = 2084, n_alt = -1
  BB 66
   Insn 1180: point = 2084, n_alt = -1
   Insn 1179: point = 2084, n_alt = 0
   Insn 1178: point = 2085, n_alt = 0
   Insn 1177: point = 2087, n_alt = 0
   Insn 1176: point = 2088, n_alt = 0
  BB 73
   Insn 3136: point = 2089, n_alt = -1
   Insn 1506: point = 2089, n_alt = 1
  BB 160
   Insn 3219: point = 2090, n_alt = -1
  BB 68
   Insn 1188: point = 2091, n_alt = -1
   Insn 1187: point = 2091, n_alt = 0
   Insn 1186: point = 2092, n_alt = 0
   Insn 1185: point = 2094, n_alt = 0
   Insn 1184: point = 2095, n_alt = 0
  BB 72
   Insn 3134: point = 2096, n_alt = -1
   Insn 1500: point = 2096, n_alt = 1
  BB 71
   Insn 1497: point = 2097, n_alt = 8
   Insn 1496: point = 2098, n_alt = 3
   Insn 1495: point = 2099, n_alt = 1
   Insn 1494: point = 2101, n_alt = 3
   Insn 1493: point = 2103, n_alt = 0
   Insn 1492: point = 2105, n_alt = 1
   Insn 1491: point = 2107, n_alt = 0
   Insn 1490: point = 2108, n_alt = 0
   Insn 1489: point = 2110, n_alt = 0
   Insn 1488: point = 2112, n_alt = 1
   Insn 1487: point = 2114, n_alt = 0
   Insn 1486: point = 2115, n_alt = 1
   Insn 1485: point = 2117, n_alt = 1
   Insn 1484: point = 2119, n_alt = 0
   Insn 1483: point = 2120, n_alt = 1
   Insn 1482: point = 2122, n_alt = 7
   Insn 1481: point = 2124, n_alt = 0
   Insn 1480: point = 2126, n_alt = 4
   Insn 1479: point = 2127, n_alt = 3
   Insn 1478: point = 2129, n_alt = 0
   Insn 1477: point = 2131, n_alt = 1
   Insn 1476: point = 2133, n_alt = 0
   Insn 1475: point = 2134, n_alt = 0
   Insn 1474: point = 2136, n_alt = 0
   Insn 1473: point = 2138, n_alt = 1
   Insn 1472: point = 2140, n_alt = 0
   Insn 1471: point = 2141, n_alt = 1
   Insn 1470: point = 2143, n_alt = 1
   Insn 1469: point = 2145, n_alt = 0
   Insn 1468: point = 2146, n_alt = 7
   Insn 1467: point = 2148, n_alt = 3
   Insn 1466: point = 2149, n_alt = 3
   Insn 1465: point = 2151, n_alt = 0
   Insn 1464: point = 2153, n_alt = 1
   Insn 1463: point = 2155, n_alt = 0
   Insn 1462: point = 2156, n_alt = 0
   Insn 1461: point = 2158, n_alt = 0
   Insn 1460: point = 2160, n_alt = 1
   Insn 1459: point = 2162, n_alt = 0
   Insn 1458: point = 2163, n_alt = 1
   Insn 1457: point = 2165, n_alt = 1
   Insn 1456: point = 2167, n_alt = 0
   Insn 1455: point = 2168, n_alt = 8
   Insn 1454: point = 2169, n_alt = 3
   Insn 1453: point = 2170, n_alt = 1
   Insn 1452: point = 2172, n_alt = 3
   Insn 1451: point = 2174, n_alt = 0
   Insn 1450: point = 2176, n_alt = 1
   Insn 1449: point = 2178, n_alt = 0
   Insn 1448: point = 2179, n_alt = 0
   Insn 1447: point = 2181, n_alt = 0
   Insn 1446: point = 2183, n_alt = 1
   Insn 1445: point = 2185, n_alt = 0
   Insn 1444: point = 2186, n_alt = 1
   Insn 1443: point = 2188, n_alt = 1
   Insn 1442: point = 2190, n_alt = 0
   Insn 1441: point = 2191, n_alt = 1
   Insn 1440: point = 2193, n_alt = 7
   Insn 1439: point = 2195, n_alt = 0
   Insn 1438: point = 2197, n_alt = 4
   Insn 1437: point = 2198, n_alt = 3
   Insn 1436: point = 2200, n_alt = 0
   Insn 1435: point = 2202, n_alt = 1
   Insn 1434: point = 2204, n_alt = 0
   Insn 1433: point = 2205, n_alt = 0
   Insn 1432: point = 2207, n_alt = 0
   Insn 1431: point = 2209, n_alt = 1
   Insn 1430: point = 2211, n_alt = 0
   Insn 1429: point = 2212, n_alt = 1
   Insn 1428: point = 2214, n_alt = 1
   Insn 1427: point = 2216, n_alt = 0
   Insn 1426: point = 2217, n_alt = 7
   Insn 1425: point = 2219, n_alt = 3
   Insn 1424: point = 2220, n_alt = 3
   Insn 1423: point = 2222, n_alt = 0
   Insn 1422: point = 2224, n_alt = 1
   Insn 1421: point = 2226, n_alt = 0
   Insn 1420: point = 2227, n_alt = 0
   Insn 1419: point = 2229, n_alt = 0
   Insn 1418: point = 2231, n_alt = 1
   Insn 1417: point = 2233, n_alt = 0
   Insn 1416: point = 2234, n_alt = 1
   Insn 1415: point = 2236, n_alt = 1
   Insn 1414: point = 2238, n_alt = 0
   Insn 1413: point = 2239, n_alt = 8
   Insn 1412: point = 2240, n_alt = 4
   Insn 1411: point = 2241, n_alt = 1
   Insn 1410: point = 2243, n_alt = 3
   Insn 1409: point = 2245, n_alt = 0
   Insn 1408: point = 2247, n_alt = 1
   Insn 1407: point = 2249, n_alt = 0
   Insn 1406: point = 2250, n_alt = 0
   Insn 1405: point = 2252, n_alt = 0
   Insn 1404: point = 2254, n_alt = 1
   Insn 1403: point = 2256, n_alt = 0
   Insn 1402: point = 2257, n_alt = 1
   Insn 1401: point = 2259, n_alt = 1
   Insn 1400: point = 2261, n_alt = 0
   Insn 1399: point = 2262, n_alt = 7
   Insn 1398: point = 2264, n_alt = 4
   Insn 1397: point = 2265, n_alt = 3
   Insn 1396: point = 2267, n_alt = 0
   Insn 1395: point = 2269, n_alt = 1
   Insn 1394: point = 2271, n_alt = 0
   Insn 1393: point = 2272, n_alt = 0
   Insn 1392: point = 2274, n_alt = 0
   Insn 1391: point = 2276, n_alt = 1
   Insn 1390: point = 2278, n_alt = 0
   Insn 1389: point = 2279, n_alt = 1
   Insn 1388: point = 2281, n_alt = 1
   Insn 1387: point = 2283, n_alt = 0
  BB 70
   Insn 1382: point = 2285, n_alt = -1
   Insn 1381: point = 2285, n_alt = 1
   Insn 1380: point = 2286, n_alt = 7
   Insn 1379: point = 2287, n_alt = 7
   Insn 1378: point = 2289, n_alt = 4
   Insn 1377: point = 2290, n_alt = 3
   Insn 1376: point = 2292, n_alt = 0
   Insn 1375: point = 2294, n_alt = 1
   Insn 1374: point = 2296, n_alt = 0
   Insn 1373: point = 2297, n_alt = 0
   Insn 1372: point = 2299, n_alt = 0
   Insn 1371: point = 2301, n_alt = 1
   Insn 1370: point = 2303, n_alt = 0
   Insn 1369: point = 2304, n_alt = 1
   Insn 1368: point = 2306, n_alt = 1
   Insn 1367: point = 2308, n_alt = 0
   Insn 1366: point = 2310, n_alt = 0
  BB 69
   Insn 1361: point = 2312, n_alt = -1
   Insn 1360: point = 2312, n_alt = 1
   Insn 1359: point = 2313, n_alt = 7
   Insn 1358: point = 2315, n_alt = 4
   Insn 1357: point = 2316, n_alt = 3
   Insn 1356: point = 2318, n_alt = 0
   Insn 1355: point = 2320, n_alt = 1
   Insn 1354: point = 2322, n_alt = 0
   Insn 1353: point = 2323, n_alt = 0
   Insn 1352: point = 2325, n_alt = 0
   Insn 1351: point = 2327, n_alt = 1
   Insn 1350: point = 2329, n_alt = 0
   Insn 1349: point = 2330, n_alt = 1
   Insn 1348: point = 2332, n_alt = 1
   Insn 1347: point = 2334, n_alt = 0
   Insn 1346: point = 2335, n_alt = 8
   Insn 1345: point = 2336, n_alt = 1
   Insn 1344: point = 2338, n_alt = 7
   Insn 1343: point = 2339, n_alt = -2
   Insn 1342: point = 2341, n_alt = 1
   Insn 1341: point = 2343, n_alt = 7
   Insn 1340: point = 2344, n_alt = 8
   Insn 1339: point = 2345, n_alt = 2
   Insn 1338: point = 2347, n_alt = 7
   Insn 1337: point = 2348, n_alt = 8
   Insn 1336: point = 2349, n_alt = 1
   Insn 1335: point = 2351, n_alt = 7
   Insn 1334: point = 2352, n_alt = -2
   Insn 1333: point = 2354, n_alt = 1
   Insn 1332: point = 2356, n_alt = 7
   Insn 1331: point = 2358, n_alt = 4
   Insn 1330: point = 2359, n_alt = 3
   Insn 1329: point = 2361, n_alt = 0
   Insn 1328: point = 2363, n_alt = 1
   Insn 1327: point = 2365, n_alt = 0
   Insn 1326: point = 2366, n_alt = 0
   Insn 1325: point = 2368, n_alt = 0
   Insn 1324: point = 2370, n_alt = 1
   Insn 1323: point = 2372, n_alt = 0
   Insn 1322: point = 2374, n_alt = 0
   Insn 1321: point = 2375, n_alt = 1
   Insn 1320: point = 2377, n_alt = 1
   Insn 1319: point = 2379, n_alt = 0
   Insn 1318: point = 2381, n_alt = 0
   Insn 1317: point = 2382, n_alt = 1
   Insn 1316: point = 2384, n_alt = 7
   Insn 1315: point = 2386, n_alt = 4
   Insn 1314: point = 2387, n_alt = 3
   Insn 1313: point = 2389, n_alt = 0
   Insn 1312: point = 2391, n_alt = 1
   Insn 1311: point = 2393, n_alt = 0
   Insn 1310: point = 2394, n_alt = 0
   Insn 1309: point = 2396, n_alt = 0
   Insn 1308: point = 2398, n_alt = 1
   Insn 1307: point = 2400, n_alt = 0
   Insn 1306: point = 2402, n_alt = 0
   Insn 1305: point = 2403, n_alt = 1
   Insn 1304: point = 2405, n_alt = 1
   Insn 1303: point = 2407, n_alt = 0
   Insn 1302: point = 2409, n_alt = 0
   Insn 1301: point = 2410, n_alt = 1
   Insn 1300: point = 2412, n_alt = 7
   Insn 1299: point = 2414, n_alt = 4
   Insn 1298: point = 2415, n_alt = 3
   Insn 1297: point = 2417, n_alt = 0
   Insn 1296: point = 2419, n_alt = 1
   Insn 1295: point = 2421, n_alt = 0
   Insn 1294: point = 2422, n_alt = 0
   Insn 1293: point = 2424, n_alt = 0
   Insn 1292: point = 2426, n_alt = 1
   Insn 1291: point = 2428, n_alt = 0
   Insn 1290: point = 2429, n_alt = 1
   Insn 1289: point = 2431, n_alt = 1
   Insn 1288: point = 2433, n_alt = 0
   Insn 1287: point = 2435, n_alt = 0
   Insn 1286: point = 2436, n_alt = 7
   Insn 1285: point = 2438, n_alt = 4
   Insn 1284: point = 2439, n_alt = 3
   Insn 1283: point = 2441, n_alt = 0
   Insn 1282: point = 2443, n_alt = 1
   Insn 1281: point = 2445, n_alt = 0
   Insn 1280: point = 2446, n_alt = 0
   Insn 1279: point = 2448, n_alt = 0
   Insn 1278: point = 2450, n_alt = 1
   Insn 1277: point = 2452, n_alt = 0
   Insn 1276: point = 2453, n_alt = 1
   Insn 1275: point = 2455, n_alt = 1
   Insn 1274: point = 2457, n_alt = 0
   Insn 1273: point = 2459, n_alt = 0
   Insn 1272: point = 2460, n_alt = 8
   Insn 1271: point = 2461, n_alt = 1
   Insn 1270: point = 2463, n_alt = 7
   Insn 1269: point = 2464, n_alt = -2
   Insn 1268: point = 2466, n_alt = 1
   Insn 1267: point = 2468, n_alt = 7
   Insn 1266: point = 2470, n_alt = 4
   Insn 1265: point = 2471, n_alt = 3
   Insn 1264: point = 2473, n_alt = 0
   Insn 1263: point = 2475, n_alt = 1
   Insn 1262: point = 2477, n_alt = 0
   Insn 1261: point = 2478, n_alt = 0
   Insn 1260: point = 2480, n_alt = 0
   Insn 1259: point = 2482, n_alt = 1
   Insn 1258: point = 2484, n_alt = 0
   Insn 1257: point = 2486, n_alt = 0
   Insn 1256: point = 2487, n_alt = 1
   Insn 1255: point = 2489, n_alt = 1
   Insn 1254: point = 2491, n_alt = 0
   Insn 1253: point = 2492, n_alt = 1
   Insn 1252: point = 2494, n_alt = 7
   Insn 1251: point = 2496, n_alt = 4
   Insn 1250: point = 2497, n_alt = 3
   Insn 1249: point = 2499, n_alt = 0
   Insn 1248: point = 2501, n_alt = 1
   Insn 1247: point = 2503, n_alt = 0
   Insn 1246: point = 2504, n_alt = 0
   Insn 1245: point = 2506, n_alt = 0
   Insn 1244: point = 2508, n_alt = 1
   Insn 1243: point = 2510, n_alt = 0
   Insn 1242: point = 2512, n_alt = 0
   Insn 1241: point = 2513, n_alt = 1
   Insn 1240: point = 2515, n_alt = 1
   Insn 1239: point = 2517, n_alt = 0
   Insn 1238: point = 2518, n_alt = 1
   Insn 1237: point = 2520, n_alt = 7
   Insn 1236: point = 2522, n_alt = 4
   Insn 1235: point = 2523, n_alt = 3
   Insn 1234: point = 2525, n_alt = 0
   Insn 1233: point = 2527, n_alt = 1
   Insn 1232: point = 2529, n_alt = 0
   Insn 1231: point = 2530, n_alt = 0
   Insn 1230: point = 2532, n_alt = 0
   Insn 1229: point = 2534, n_alt = 1
   Insn 1228: point = 2536, n_alt = 0
   Insn 1227: point = 2537, n_alt = 1
   Insn 1226: point = 2539, n_alt = 1
   Insn 1225: point = 2541, n_alt = 0
   Insn 1224: point = 2542, n_alt = 7
   Insn 1223: point = 2544, n_alt = 4
   Insn 1222: point = 2545, n_alt = 3
   Insn 1221: point = 2547, n_alt = 0
   Insn 1220: point = 2549, n_alt = 1
   Insn 1219: point = 2551, n_alt = 0
   Insn 1218: point = 2552, n_alt = 0
   Insn 1217: point = 2554, n_alt = 0
   Insn 1216: point = 2556, n_alt = 1
   Insn 1215: point = 2558, n_alt = 0
   Insn 1214: point = 2559, n_alt = 1
   Insn 1213: point = 2561, n_alt = 1
   Insn 1212: point = 2563, n_alt = 0
   Insn 1211: point = 2564, n_alt = 1
   Insn 1210: point = 2565, n_alt = 0
   Insn 1209: point = 2567, n_alt = 0
   Insn 1205: point = 2568, n_alt = 0
   Insn 1204: point = 2570, n_alt = 0
   Insn 1203: point = 2572, n_alt = 0
   Insn 1202: point = 2574, n_alt = 1
   Insn 1201: point = 2576, n_alt = 0
   Insn 1200: point = 2577, n_alt = 1
   Insn 1199: point = 2578, n_alt = 0
   Insn 1198: point = 2580, n_alt = 0
   Insn 1194: point = 2581, n_alt = 0
   Insn 1193: point = 2583, n_alt = 0
   Insn 1192: point = 2585, n_alt = 0
   Insn 1191: point = 2587, n_alt = 1
   Insn 1190: point = 2589, n_alt = 0
  BB 67
   Insn 1182: point = 2591, n_alt = 1
  BB 65
   Insn 1174: point = 2592, n_alt = 1
   Insn 1173: point = 2593, n_alt = 0
   Insn 1172: point = 2594, n_alt = 0
  BB 63
   Insn 1164: point = 2595, n_alt = 1
  BB 157
   Insn 3210: point = 2595, n_alt = -1
  BB 61
   Insn 1146: point = 2595, n_alt = -1
   Insn 1145: point = 2595, n_alt = 0
   Insn 1144: point = 2596, n_alt = 0
   Insn 1143: point = 2598, n_alt = 0
   Insn 1142: point = 2599, n_alt = 0
  BB 62
   Insn 3132: point = 2599, n_alt = -1
   Insn 1158: point = 2599, n_alt = 1
   Insn 1157: point = 2599, n_alt = 0
   Insn 1156: point = 2599, n_alt = 3
   Insn 1155: point = 2599, n_alt = -2
   Insn 1154: point = 2600, n_alt = 0
   Insn 1153: point = 2602, n_alt = 4
   Insn 1152: point = 2603, n_alt = 1
   Insn 1151: point = 2605, n_alt = 1
   Insn 1150: point = 2607, n_alt = 0
   Insn 1149: point = 2609, n_alt = 0
   Insn 1148: point = 2611, n_alt = 0
  BB 60
   Insn 1140: point = 2612, n_alt = 1
  BB 154
   Insn 3201: point = 2612, n_alt = -1
  BB 26
   Insn 371: point = 2612, n_alt = -1
   Insn 370: point = 2612, n_alt = 0
   Insn 369: point = 2613, n_alt = 0
   Insn 368: point = 2615, n_alt = 0
   Insn 367: point = 2616, n_alt = 0
  BB 59
   Insn 3130: point = 2616, n_alt = -1
   Insn 1134: point = 2616, n_alt = 1
  BB 155
   Insn 3204: point = 2616, n_alt = -1
  BB 28
   Insn 381: point = 2616, n_alt = -1
   Insn 380: point = 2616, n_alt = 0
   Insn 379: point = 2617, n_alt = 0
   Insn 378: point = 2619, n_alt = 0
   Insn 377: point = 2620, n_alt = 0
  BB 58
   Insn 3128: point = 2621, n_alt = -1
   Insn 1128: point = 2621, n_alt = 1
  BB 156
   Insn 3207: point = 2622, n_alt = -1
  BB 30
   Insn 389: point = 2623, n_alt = -1
   Insn 388: point = 2623, n_alt = 0
   Insn 387: point = 2624, n_alt = 0
   Insn 386: point = 2626, n_alt = 0
   Insn 385: point = 2627, n_alt = 0
  BB 57
   Insn 3126: point = 2628, n_alt = -1
   Insn 1122: point = 2628, n_alt = 1
  BB 56
   Insn 1119: point = 2629, n_alt = 8
   Insn 1118: point = 2630, n_alt = 4
   Insn 1117: point = 2631, n_alt = 1
   Insn 1116: point = 2633, n_alt = 3
   Insn 1115: point = 2635, n_alt = 0
   Insn 1114: point = 2637, n_alt = 0
   Insn 1113: point = 2639, n_alt = 0
   Insn 1112: point = 2640, n_alt = 0
   Insn 1111: point = 2642, n_alt = 0
   Insn 1110: point = 2644, n_alt = 0
   Insn 1109: point = 2646, n_alt = 0
   Insn 1108: point = 2647, n_alt = 1
   Insn 1107: point = 2649, n_alt = 0
   Insn 1106: point = 2651, n_alt = 0
   Insn 1105: point = 2652, n_alt = 1
   Insn 1104: point = 2654, n_alt = 7
   Insn 1103: point = 2655, n_alt = 7
   Insn 1102: point = 2657, n_alt = 4
   Insn 1101: point = 2658, n_alt = 3
   Insn 1100: point = 2660, n_alt = 0
   Insn 1099: point = 2662, n_alt = 0
   Insn 1098: point = 2664, n_alt = 0
   Insn 1097: point = 2665, n_alt = 0
   Insn 1096: point = 2667, n_alt = 0
   Insn 1095: point = 2669, n_alt = 0
   Insn 1094: point = 2671, n_alt = 0
   Insn 1093: point = 2672, n_alt = 1
   Insn 1092: point = 2674, n_alt = 0
   Insn 1091: point = 2676, n_alt = 0
   Insn 1090: point = 2677, n_alt = 8
   Insn 1089: point = 2678, n_alt = 7
  BB 54
   Insn 3124: point = 2680, n_alt = -1
   Insn 1080: point = 2680, n_alt = 8
   Insn 1079: point = 2681, n_alt = 7
  BB 52
   Insn 3121: point = 2683, n_alt = -1
   Insn 1058: point = 2683, n_alt = 8
   Insn 1057: point = 2684, n_alt = 7
  BB 50
   Insn 3118: point = 2686, n_alt = -1
   Insn 1044: point = 2686, n_alt = 8
   Insn 1043: point = 2687, n_alt = 7
  BB 55
   Insn 1086: point = 2689, n_alt = 8
   Insn 1085: point = 2690, n_alt = 7
  BB 53
   Insn 1074: point = 2692, n_alt = -1
   Insn 1073: point = 2692, n_alt = 1
   Insn 1072: point = 2693, n_alt = 7
   Insn 1071: point = 2694, n_alt = 7
   Insn 1070: point = 2696, n_alt = 4
   Insn 1069: point = 2697, n_alt = 3
   Insn 1068: point = 2699, n_alt = 0
   Insn 1067: point = 2701, n_alt = 0
   Insn 1066: point = 2703, n_alt = 0
   Insn 1065: point = 2704, n_alt = 0
   Insn 1064: point = 2706, n_alt = 0
   Insn 1063: point = 2708, n_alt = 0
  BB 51
   Insn 1052: point = 2710, n_alt = -1
   Insn 1051: point = 2710, n_alt = 1
   Insn 1050: point = 2711, n_alt = 7
   Insn 1049: point = 2712, n_alt = 7
  BB 49
   Insn 1038: point = 2714, n_alt = -1
   Insn 1037: point = 2714, n_alt = 1
   Insn 1036: point = 2715, n_alt = 7
   Insn 1035: point = 2716, n_alt = 8
   Insn 1034: point = 2717, n_alt = 1
   Insn 1033: point = 2719, n_alt = 7
   Insn 1032: point = 2720, n_alt = -2
   Insn 1031: point = 2722, n_alt = 2
   Insn 1030: point = 2724, n_alt = 7
   Insn 1029: point = 2725, n_alt = 1
   Insn 1028: point = 2727, n_alt = -2
   Insn 1027: point = 2729, n_alt = 1
   Insn 1026: point = 2731, n_alt = 7
   Insn 1025: point = 2732, n_alt = 7
   Insn 1024: point = 2733, n_alt = 1
   Insn 1023: point = 2735, n_alt = 7
   Insn 1022: point = 2736, n_alt = 7
   Insn 1021: point = 2737, n_alt = 8
   Insn 1020: point = 2738, n_alt = 1
   Insn 1019: point = 2740, n_alt = 7
   Insn 1018: point = 2741, n_alt = -2
   Insn 1017: point = 2743, n_alt = 1
   Insn 1016: point = 2745, n_alt = 1
  BB 48
   Insn 1013: point = 2748, n_alt = 7
  BB 47
   Insn 1011: point = 2750, n_alt = -1
   Insn 1010: point = 2750, n_alt = 0
   Insn 1009: point = 2751, n_alt = 0
   Insn 1008: point = 2753, n_alt = 0
   Insn 1007: point = 2755, n_alt = 0
   Insn 1006: point = 2756, n_alt = 1
   Insn 1005: point = 2756, n_alt = 0
   Insn 1004: point = 2758, n_alt = 0
   Insn 1003: point = 2759, n_alt = 1
   Insn 1002: point = 2760, n_alt = 7
   Insn 1001: point = 2761, n_alt = 7
   Insn 1000: point = 2762, n_alt = 8
   Insn 999: point = 2763, n_alt = 1
   Insn 998: point = 2765, n_alt = -2
   Insn 997: point = 2766, n_alt = 0
   Insn 996: point = 2766, n_alt = -2
   Insn 995: point = 2767, n_alt = 2
   Insn 994: point = 2769, n_alt = -2
   Insn 993: point = 2771, n_alt = 2
   Insn 992: point = 2773, n_alt = 7
   Insn 991: point = 2774, n_alt = 7
   Insn 990: point = 2776, n_alt = 0
   Insn 989: point = 2778, n_alt = 4
   Insn 988: point = 2779, n_alt = 3
   Insn 987: point = 2781, n_alt = 0
   Insn 986: point = 2783, n_alt = 0
   Insn 985: point = 2785, n_alt = 0
   Insn 984: point = 2786, n_alt = 0
   Insn 983: point = 2788, n_alt = 0
   Insn 982: point = 2790, n_alt = 0
   Insn 981: point = 2792, n_alt = 0
   Insn 980: point = 2793, n_alt = 1
   Insn 979: point = 2795, n_alt = 0
   Insn 978: point = 2797, n_alt = 0
   Insn 977: point = 2798, n_alt = 1
   Insn 976: point = 2800, n_alt = 7
   Insn 975: point = 2801, n_alt = -2
   Insn 974: point = 2803, n_alt = 2
   Insn 973: point = 2805, n_alt = 7
   Insn 972: point = 2806, n_alt = 7
   Insn 971: point = 2808, n_alt = 0
   Insn 970: point = 2810, n_alt = 4
   Insn 969: point = 2811, n_alt = 3
   Insn 968: point = 2813, n_alt = 0
   Insn 967: point = 2815, n_alt = 0
   Insn 966: point = 2817, n_alt = 0
   Insn 965: point = 2818, n_alt = 0
   Insn 964: point = 2820, n_alt = 0
   Insn 963: point = 2822, n_alt = 0
   Insn 962: point = 2824, n_alt = 0
   Insn 961: point = 2825, n_alt = 1
   Insn 960: point = 2827, n_alt = 0
   Insn 959: point = 2829, n_alt = 0
   Insn 3260: point = 2830, n_alt = 8
   Insn 958: point = 2832, n_alt = 2
   Insn 3259: point = 2832, n_alt = -2
   Insn 957: point = 2834, n_alt = 7
  BB 46
   Insn 954: point = 2836, n_alt = 8
   Insn 953: point = 2837, n_alt = 7
   Insn 952: point = 2838, n_alt = 8
   Insn 951: point = 2839, n_alt = 7
  BB 45
   Insn 946: point = 2841, n_alt = -1
   Insn 945: point = 2841, n_alt = 1
   Insn 944: point = 2842, n_alt = 7
   Insn 943: point = 2843, n_alt = 8
   Insn 942: point = 2844, n_alt = 7
   Insn 941: point = 2845, n_alt = 8
   Insn 940: point = 2846, n_alt = 7
   Insn 939: point = 2847, n_alt = 8
  BB 44
   Insn 936: point = 2849, n_alt = 7
  BB 43
   Insn 934: point = 2851, n_alt = -1
   Insn 933: point = 2851, n_alt = 0
   Insn 932: point = 2852, n_alt = 0
   Insn 931: point = 2854, n_alt = 0
   Insn 930: point = 2856, n_alt = 0
   Insn 929: point = 2857, n_alt = 1
   Insn 928: point = 2857, n_alt = 0
   Insn 927: point = 2859, n_alt = 0
   Insn 926: point = 2860, n_alt = 1
   Insn 925: point = 2860, n_alt = 7
   Insn 924: point = 2861, n_alt = 8
   Insn 923: point = 2862, n_alt = 2
   Insn 922: point = 2864, n_alt = 7
   Insn 921: point = 2865, n_alt = 7
   Insn 920: point = 2867, n_alt = 0
   Insn 919: point = 2869, n_alt = 4
   Insn 918: point = 2870, n_alt = 3
   Insn 917: point = 2872, n_alt = 0
   Insn 916: point = 2874, n_alt = 0
   Insn 915: point = 2876, n_alt = 0
   Insn 914: point = 2877, n_alt = 0
   Insn 913: point = 2879, n_alt = 0
   Insn 912: point = 2881, n_alt = 0
   Insn 911: point = 2883, n_alt = 0
   Insn 910: point = 2884, n_alt = 1
   Insn 909: point = 2886, n_alt = 0
   Insn 908: point = 2888, n_alt = 0
   Insn 907: point = 2889, n_alt = 8
   Insn 906: point = 2890, n_alt = 3
   Insn 905: point = 2891, n_alt = 1
   Insn 904: point = 2893, n_alt = 3
   Insn 903: point = 2895, n_alt = 0
   Insn 902: point = 2897, n_alt = 0
   Insn 901: point = 2899, n_alt = 0
   Insn 900: point = 2900, n_alt = 0
   Insn 899: point = 2902, n_alt = 0
   Insn 898: point = 2904, n_alt = 0
   Insn 897: point = 2906, n_alt = 0
   Insn 896: point = 2907, n_alt = 1
   Insn 895: point = 2909, n_alt = 0
   Insn 894: point = 2911, n_alt = 0
   Insn 893: point = 2912, n_alt = 1
   Insn 892: point = 2914, n_alt = 7
   Insn 3258: point = 2915, n_alt = -2
   Insn 891: point = 2917, n_alt = 1
   Insn 3257: point = 2917, n_alt = -2
   Insn 890: point = 2919, n_alt = -2
   Insn 889: point = 2921, n_alt = 1
   Insn 888: point = 2923, n_alt = 7
   Insn 887: point = 2925, n_alt = 4
   Insn 886: point = 2926, n_alt = 3
   Insn 885: point = 2928, n_alt = 0
   Insn 884: point = 2930, n_alt = 0
   Insn 883: point = 2932, n_alt = 0
   Insn 882: point = 2933, n_alt = 0
   Insn 881: point = 2935, n_alt = 0
   Insn 880: point = 2937, n_alt = 0
   Insn 879: point = 2939, n_alt = 0
   Insn 878: point = 2940, n_alt = 1
   Insn 877: point = 2942, n_alt = 0
   Insn 876: point = 2944, n_alt = 0
   Insn 875: point = 2945, n_alt = 7
   Insn 874: point = 2947, n_alt = 0
   Insn 873: point = 2949, n_alt = 4
   Insn 872: point = 2950, n_alt = 3
   Insn 871: point = 2952, n_alt = 0
   Insn 870: point = 2954, n_alt = 0
   Insn 869: point = 2956, n_alt = 0
   Insn 868: point = 2957, n_alt = 0
   Insn 867: point = 2959, n_alt = 0
   Insn 866: point = 2961, n_alt = 0
   Insn 865: point = 2963, n_alt = 0
   Insn 864: point = 2964, n_alt = 1
   Insn 863: point = 2966, n_alt = 0
   Insn 862: point = 2968, n_alt = 0
   Insn 861: point = 2969, n_alt = 7
   Insn 860: point = 2971, n_alt = 3
   Insn 859: point = 2972, n_alt = 3
   Insn 858: point = 2974, n_alt = 0
   Insn 857: point = 2976, n_alt = 0
   Insn 856: point = 2978, n_alt = 0
   Insn 855: point = 2979, n_alt = 0
   Insn 854: point = 2981, n_alt = 0
   Insn 853: point = 2983, n_alt = 0
   Insn 852: point = 2985, n_alt = 0
   Insn 851: point = 2986, n_alt = 1
   Insn 850: point = 2988, n_alt = 0
   Insn 849: point = 2990, n_alt = 0
   Insn 848: point = 2991, n_alt = 8
   Insn 847: point = 2992, n_alt = 3
   Insn 846: point = 2993, n_alt = 1
   Insn 845: point = 2995, n_alt = 3
   Insn 844: point = 2997, n_alt = 0
   Insn 843: point = 2999, n_alt = 0
   Insn 842: point = 3001, n_alt = 0
   Insn 841: point = 3002, n_alt = 0
   Insn 840: point = 3004, n_alt = 0
   Insn 839: point = 3006, n_alt = 0
   Insn 838: point = 3008, n_alt = 0
   Insn 837: point = 3009, n_alt = 1
   Insn 836: point = 3011, n_alt = 0
   Insn 835: point = 3013, n_alt = 0
   Insn 834: point = 3014, n_alt = 1
   Insn 833: point = 3016, n_alt = 7
   Insn 832: point = 3018, n_alt = 4
   Insn 831: point = 3019, n_alt = 3
   Insn 830: point = 3021, n_alt = 0
   Insn 829: point = 3023, n_alt = 0
   Insn 828: point = 3025, n_alt = 0
   Insn 827: point = 3026, n_alt = 0
   Insn 826: point = 3028, n_alt = 0
   Insn 825: point = 3030, n_alt = 0
   Insn 824: point = 3032, n_alt = 0
   Insn 823: point = 3033, n_alt = 1
   Insn 822: point = 3035, n_alt = 0
   Insn 821: point = 3037, n_alt = 0
   Insn 820: point = 3038, n_alt = 7
   Insn 819: point = 3040, n_alt = 3
   Insn 818: point = 3041, n_alt = 3
   Insn 817: point = 3043, n_alt = 0
   Insn 816: point = 3045, n_alt = 0
   Insn 815: point = 3047, n_alt = 0
   Insn 814: point = 3048, n_alt = 0
   Insn 813: point = 3050, n_alt = 0
   Insn 812: point = 3052, n_alt = 0
   Insn 811: point = 3054, n_alt = 0
   Insn 810: point = 3055, n_alt = 1
   Insn 809: point = 3057, n_alt = 0
   Insn 808: point = 3059, n_alt = 0
   Insn 807: point = 3060, n_alt = 8
   Insn 806: point = 3061, n_alt = 3
   Insn 805: point = 3062, n_alt = 1
   Insn 804: point = 3064, n_alt = 3
   Insn 803: point = 3066, n_alt = 0
   Insn 802: point = 3068, n_alt = 0
   Insn 801: point = 3070, n_alt = 0
   Insn 800: point = 3071, n_alt = 0
   Insn 799: point = 3073, n_alt = 0
   Insn 798: point = 3075, n_alt = 0
   Insn 797: point = 3077, n_alt = 0
   Insn 796: point = 3078, n_alt = 1
   Insn 795: point = 3080, n_alt = 0
   Insn 794: point = 3082, n_alt = 0
   Insn 793: point = 3083, n_alt = 1
   Insn 792: point = 3085, n_alt = 7
   Insn 791: point = 3087, n_alt = 0
   Insn 790: point = 3089, n_alt = 4
   Insn 789: point = 3090, n_alt = 3
   Insn 788: point = 3092, n_alt = 0
   Insn 787: point = 3094, n_alt = 0
   Insn 786: point = 3096, n_alt = 0
   Insn 785: point = 3097, n_alt = 0
   Insn 784: point = 3099, n_alt = 0
   Insn 783: point = 3101, n_alt = 0
   Insn 782: point = 3103, n_alt = 0
   Insn 781: point = 3104, n_alt = 1
   Insn 780: point = 3106, n_alt = 0
   Insn 779: point = 3108, n_alt = 0
   Insn 778: point = 3109, n_alt = 7
   Insn 777: point = 3111, n_alt = 3
   Insn 776: point = 3112, n_alt = 3
   Insn 775: point = 3114, n_alt = 0
   Insn 774: point = 3116, n_alt = 0
   Insn 773: point = 3118, n_alt = 0
   Insn 772: point = 3119, n_alt = 0
   Insn 771: point = 3121, n_alt = 0
   Insn 770: point = 3123, n_alt = 0
   Insn 769: point = 3125, n_alt = 0
   Insn 768: point = 3126, n_alt = 1
   Insn 767: point = 3128, n_alt = 0
   Insn 766: point = 3130, n_alt = 0
   Insn 765: point = 3131, n_alt = 8
   Insn 764: point = 3132, n_alt = 3
   Insn 763: point = 3133, n_alt = 1
   Insn 762: point = 3135, n_alt = 3
   Insn 761: point = 3137, n_alt = 0
   Insn 760: point = 3139, n_alt = 0
   Insn 759: point = 3141, n_alt = 0
   Insn 758: point = 3142, n_alt = 0
   Insn 757: point = 3144, n_alt = 0
   Insn 756: point = 3146, n_alt = 0
   Insn 755: point = 3148, n_alt = 0
   Insn 754: point = 3149, n_alt = 1
   Insn 753: point = 3151, n_alt = 0
   Insn 752: point = 3153, n_alt = 0
   Insn 751: point = 3154, n_alt = 1
   Insn 750: point = 3156, n_alt = 7
   Insn 749: point = 3158, n_alt = 0
   Insn 748: point = 3160, n_alt = 4
   Insn 747: point = 3161, n_alt = 3
   Insn 746: point = 3163, n_alt = 0
   Insn 745: point = 3165, n_alt = 0
   Insn 744: point = 3167, n_alt = 0
   Insn 743: point = 3168, n_alt = 0
   Insn 742: point = 3170, n_alt = 0
   Insn 741: point = 3172, n_alt = 0
   Insn 740: point = 3174, n_alt = 0
   Insn 739: point = 3175, n_alt = 1
   Insn 738: point = 3177, n_alt = 0
   Insn 737: point = 3179, n_alt = 0
   Insn 736: point = 3180, n_alt = 7
   Insn 735: point = 3182, n_alt = 3
   Insn 734: point = 3183, n_alt = 3
   Insn 733: point = 3185, n_alt = 0
   Insn 732: point = 3187, n_alt = 0
   Insn 731: point = 3189, n_alt = 0
   Insn 730: point = 3190, n_alt = 0
   Insn 729: point = 3192, n_alt = 0
   Insn 728: point = 3194, n_alt = 0
   Insn 727: point = 3196, n_alt = 0
   Insn 726: point = 3197, n_alt = 1
   Insn 725: point = 3199, n_alt = 0
   Insn 724: point = 3201, n_alt = 0
   Insn 723: point = 3202, n_alt = 1
   Insn 722: point = 3203, n_alt = 3
   Insn 721: point = 3204, n_alt = 0
   Insn 720: point = 3206, n_alt = 0
   Insn 719: point = 3207, n_alt = 3
   Insn 718: point = 3209, n_alt = 0
   Insn 717: point = 3211, n_alt = 0
   Insn 716: point = 3213, n_alt = 0
   Insn 715: point = 3214, n_alt = 0
   Insn 714: point = 3216, n_alt = 0
   Insn 713: point = 3218, n_alt = 0
   Insn 712: point = 3220, n_alt = 0
   Insn 711: point = 3221, n_alt = 1
   Insn 710: point = 3223, n_alt = 0
   Insn 709: point = 3225, n_alt = 0
   Insn 708: point = 3226, n_alt = 0
   Insn 707: point = 3228, n_alt = 3
   Insn 706: point = 3229, n_alt = 3
   Insn 705: point = 3231, n_alt = 0
   Insn 704: point = 3233, n_alt = 0
   Insn 703: point = 3235, n_alt = 0
   Insn 702: point = 3236, n_alt = 0
   Insn 701: point = 3238, n_alt = 0
   Insn 700: point = 3240, n_alt = 0
   Insn 699: point = 3242, n_alt = 0
   Insn 698: point = 3243, n_alt = 1
   Insn 697: point = 3245, n_alt = 0
   Insn 696: point = 3247, n_alt = 0
   Insn 695: point = 3248, n_alt = 8
   Insn 694: point = 3249, n_alt = 4
   Insn 693: point = 3250, n_alt = 1
   Insn 692: point = 3252, n_alt = 7
   Insn 691: point = 3253, n_alt = 3
   Insn 690: point = 3255, n_alt = 0
   Insn 689: point = 3257, n_alt = 0
   Insn 688: point = 3259, n_alt = 0
   Insn 687: point = 3260, n_alt = 0
   Insn 686: point = 3262, n_alt = 0
   Insn 685: point = 3264, n_alt = 0
   Insn 684: point = 3266, n_alt = 0
   Insn 683: point = 3267, n_alt = 1
   Insn 682: point = 3269, n_alt = 0
   Insn 681: point = 3271, n_alt = 0
   Insn 680: point = 3272, n_alt = 7
   Insn 679: point = 3274, n_alt = 4
   Insn 678: point = 3275, n_alt = 3
   Insn 677: point = 3277, n_alt = 0
   Insn 676: point = 3279, n_alt = 0
   Insn 675: point = 3281, n_alt = 0
   Insn 674: point = 3282, n_alt = 0
   Insn 673: point = 3284, n_alt = 0
   Insn 672: point = 3286, n_alt = 0
   Insn 671: point = 3288, n_alt = 0
   Insn 670: point = 3289, n_alt = 1
   Insn 669: point = 3291, n_alt = 0
   Insn 668: point = 3293, n_alt = 0
   Insn 667: point = 3294, n_alt = 8
   Insn 666: point = 3295, n_alt = 4
   Insn 665: point = 3296, n_alt = 1
   Insn 664: point = 3298, n_alt = 3
   Insn 663: point = 3300, n_alt = 0
   Insn 662: point = 3302, n_alt = 0
   Insn 661: point = 3304, n_alt = 0
   Insn 660: point = 3305, n_alt = 0
   Insn 659: point = 3307, n_alt = 0
   Insn 658: point = 3309, n_alt = 0
   Insn 657: point = 3311, n_alt = 0
   Insn 656: point = 3312, n_alt = 1
   Insn 655: point = 3314, n_alt = 0
   Insn 654: point = 3316, n_alt = 0
   Insn 653: point = 3317, n_alt = 7
   Insn 652: point = 3319, n_alt = 4
   Insn 651: point = 3320, n_alt = 3
   Insn 650: point = 3322, n_alt = 0
   Insn 649: point = 3324, n_alt = 0
   Insn 648: point = 3326, n_alt = 0
   Insn 647: point = 3327, n_alt = 0
   Insn 646: point = 3329, n_alt = 0
   Insn 645: point = 3331, n_alt = 0
   Insn 644: point = 3333, n_alt = 0
   Insn 643: point = 3334, n_alt = 1
   Insn 642: point = 3336, n_alt = 0
   Insn 641: point = 3338, n_alt = 0
   Insn 640: point = 3339, n_alt = 8
   Insn 639: point = 3340, n_alt = 2
   Insn 638: point = 3342, n_alt = 7
   Insn 637: point = 3344, n_alt = 4
   Insn 636: point = 3345, n_alt = 3
   Insn 635: point = 3347, n_alt = 0
   Insn 634: point = 3349, n_alt = 0
   Insn 633: point = 3351, n_alt = 0
   Insn 632: point = 3352, n_alt = 0
   Insn 631: point = 3354, n_alt = 0
   Insn 630: point = 3356, n_alt = 0
   Insn 629: point = 3358, n_alt = 0
   Insn 628: point = 3359, n_alt = 1
   Insn 627: point = 3361, n_alt = 0
   Insn 626: point = 3363, n_alt = 0
   Insn 625: point = 3364, n_alt = 7
   Insn 624: point = 3366, n_alt = 4
   Insn 623: point = 3367, n_alt = 3
   Insn 622: point = 3369, n_alt = 0
   Insn 621: point = 3371, n_alt = 0
   Insn 620: point = 3373, n_alt = 0
   Insn 619: point = 3374, n_alt = 0
   Insn 618: point = 3376, n_alt = 0
   Insn 617: point = 3378, n_alt = 0
   Insn 616: point = 3380, n_alt = 0
   Insn 615: point = 3381, n_alt = 1
   Insn 614: point = 3383, n_alt = 0
   Insn 613: point = 3385, n_alt = 0
   Insn 612: point = 3387, n_alt = 0
  BB 42
   Insn 607: point = 3389, n_alt = -1
   Insn 606: point = 3389, n_alt = 1
   Insn 605: point = 3390, n_alt = 7
   Insn 604: point = 3391, n_alt = 7
   Insn 603: point = 3393, n_alt = 4
   Insn 602: point = 3394, n_alt = 3
   Insn 601: point = 3396, n_alt = 0
   Insn 600: point = 3398, n_alt = 0
   Insn 599: point = 3400, n_alt = 0
   Insn 598: point = 3401, n_alt = 0
   Insn 597: point = 3403, n_alt = 0
   Insn 596: point = 3405, n_alt = 0
   Insn 595: point = 3407, n_alt = 0
   Insn 594: point = 3408, n_alt = 1
   Insn 593: point = 3410, n_alt = 0
   Insn 592: point = 3412, n_alt = 0
   Insn 591: point = 3414, n_alt = 0
  BB 41
   Insn 586: point = 3416, n_alt = -1
   Insn 585: point = 3416, n_alt = 1
   Insn 584: point = 3417, n_alt = 7
   Insn 583: point = 3419, n_alt = 4
   Insn 582: point = 3420, n_alt = 3
   Insn 581: point = 3422, n_alt = 0
   Insn 580: point = 3424, n_alt = 0
   Insn 579: point = 3426, n_alt = 0
   Insn 578: point = 3427, n_alt = 0
   Insn 577: point = 3429, n_alt = 0
   Insn 576: point = 3431, n_alt = 0
   Insn 575: point = 3433, n_alt = 0
   Insn 574: point = 3434, n_alt = 1
   Insn 573: point = 3436, n_alt = 0
   Insn 572: point = 3438, n_alt = 0
   Insn 571: point = 3439, n_alt = 8
   Insn 570: point = 3440, n_alt = 1
   Insn 569: point = 3442, n_alt = 7
   Insn 568: point = 3443, n_alt = -2
   Insn 567: point = 3445, n_alt = 1
   Insn 566: point = 3447, n_alt = 7
   Insn 565: point = 3449, n_alt = 4
   Insn 564: point = 3450, n_alt = 3
   Insn 563: point = 3452, n_alt = 0
   Insn 562: point = 3454, n_alt = 0
   Insn 561: point = 3456, n_alt = 0
   Insn 560: point = 3457, n_alt = 0
   Insn 559: point = 3459, n_alt = 0
   Insn 558: point = 3461, n_alt = 0
   Insn 557: point = 3463, n_alt = 0
   Insn 556: point = 3464, n_alt = 1
   Insn 555: point = 3466, n_alt = 0
   Insn 554: point = 3468, n_alt = 0
   Insn 553: point = 3470, n_alt = 0
   Insn 552: point = 3471, n_alt = 7
   Insn 551: point = 3473, n_alt = 4
   Insn 550: point = 3474, n_alt = 3
   Insn 549: point = 3476, n_alt = 0
   Insn 548: point = 3478, n_alt = 0
   Insn 547: point = 3480, n_alt = 0
   Insn 546: point = 3481, n_alt = 0
   Insn 545: point = 3483, n_alt = 0
   Insn 544: point = 3485, n_alt = 0
   Insn 543: point = 3487, n_alt = 0
   Insn 542: point = 3488, n_alt = 1
   Insn 541: point = 3490, n_alt = 0
   Insn 540: point = 3492, n_alt = 0
  BB 39
   Insn 3115: point = 3494, n_alt = -1
   Insn 521: point = 3494, n_alt = 8
   Insn 520: point = 3495, n_alt = 7
   Insn 519: point = 3496, n_alt = 4
   Insn 518: point = 3497, n_alt = 3
   Insn 517: point = 3499, n_alt = 0
   Insn 516: point = 3501, n_alt = 0
   Insn 515: point = 3503, n_alt = 0
   Insn 514: point = 3504, n_alt = 0
   Insn 513: point = 3506, n_alt = 0
   Insn 512: point = 3508, n_alt = 0
  BB 38
   Insn 507: point = 3510, n_alt = -1
   Insn 506: point = 3510, n_alt = 1
   Insn 505: point = 3511, n_alt = 7
  BB 37
   Insn 504: point = 3513, n_alt = -1
   Insn 503: point = 3513, n_alt = 1
   Insn 502: point = 3514, n_alt = 7
  BB 34
   Insn 3110: point = 3516, n_alt = -1
   Insn 463: point = 3516, n_alt = 8
   Insn 462: point = 3517, n_alt = 7
   Insn 461: point = 3518, n_alt = 4
   Insn 460: point = 3519, n_alt = 3
   Insn 459: point = 3521, n_alt = 0
   Insn 458: point = 3523, n_alt = 0
   Insn 457: point = 3525, n_alt = 0
   Insn 456: point = 3526, n_alt = 0
   Insn 455: point = 3528, n_alt = 0
   Insn 454: point = 3530, n_alt = 0
  BB 36
   Insn 3113: point = 3532, n_alt = -1
   Insn 497: point = 3532, n_alt = 8
   Insn 496: point = 3533, n_alt = 7
   Insn 495: point = 3534, n_alt = 4
   Insn 494: point = 3535, n_alt = 3
   Insn 493: point = 3537, n_alt = 0
   Insn 492: point = 3539, n_alt = 0
   Insn 491: point = 3541, n_alt = 0
   Insn 490: point = 3542, n_alt = 0
   Insn 489: point = 3544, n_alt = 0
   Insn 488: point = 3546, n_alt = 0
  BB 35
   Insn 483: point = 3548, n_alt = -1
   Insn 482: point = 3548, n_alt = 1
   Insn 481: point = 3549, n_alt = 7
   Insn 480: point = 3551, n_alt = 0
   Insn 479: point = 3553, n_alt = 4
   Insn 478: point = 3554, n_alt = 3
   Insn 477: point = 3556, n_alt = 0
   Insn 476: point = 3558, n_alt = 0
   Insn 475: point = 3560, n_alt = 0
   Insn 474: point = 3561, n_alt = 0
   Insn 473: point = 3563, n_alt = 0
   Insn 472: point = 3565, n_alt = 0
   Insn 471: point = 3567, n_alt = 0
   Insn 470: point = 3568, n_alt = 1
   Insn 469: point = 3570, n_alt = 0
   Insn 468: point = 3572, n_alt = 0
  BB 33
   Insn 449: point = 3574, n_alt = -1
   Insn 448: point = 3574, n_alt = 1
   Insn 447: point = 3575, n_alt = 7
   Insn 446: point = 3576, n_alt = 7
   Insn 445: point = 3578, n_alt = 0
   Insn 444: point = 3580, n_alt = 4
   Insn 443: point = 3581, n_alt = 3
   Insn 442: point = 3583, n_alt = 0
   Insn 441: point = 3585, n_alt = 0
   Insn 440: point = 3587, n_alt = 0
   Insn 439: point = 3588, n_alt = 0
   Insn 438: point = 3590, n_alt = 0
   Insn 437: point = 3592, n_alt = 0
   Insn 436: point = 3594, n_alt = 0
   Insn 435: point = 3595, n_alt = 1
   Insn 434: point = 3597, n_alt = 0
   Insn 433: point = 3599, n_alt = 0
  BB 40
   Insn 535: point = 3601, n_alt = 8
   Insn 534: point = 3602, n_alt = 7
   Insn 533: point = 3603, n_alt = 4
   Insn 532: point = 3604, n_alt = 3
   Insn 531: point = 3606, n_alt = 0
   Insn 530: point = 3608, n_alt = 0
   Insn 529: point = 3610, n_alt = 0
   Insn 528: point = 3611, n_alt = 0
   Insn 527: point = 3613, n_alt = 0
   Insn 526: point = 3615, n_alt = 0
  BB 32
   Insn 428: point = 3617, n_alt = -1
   Insn 427: point = 3617, n_alt = 1
   Insn 426: point = 3618, n_alt = 7
   Insn 425: point = 3620, n_alt = 4
   Insn 424: point = 3621, n_alt = 3
   Insn 423: point = 3623, n_alt = 0
   Insn 422: point = 3625, n_alt = 0
   Insn 421: point = 3627, n_alt = 0
   Insn 420: point = 3628, n_alt = 0
   Insn 419: point = 3630, n_alt = 0
   Insn 418: point = 3632, n_alt = 0
   Insn 417: point = 3634, n_alt = 0
   Insn 416: point = 3635, n_alt = 1
   Insn 415: point = 3637, n_alt = 0
   Insn 414: point = 3639, n_alt = 0
   Insn 413: point = 3640, n_alt = 8
   Insn 412: point = 3641, n_alt = 7
   Insn 411: point = 3643, n_alt = 4
   Insn 410: point = 3644, n_alt = 3
   Insn 409: point = 3646, n_alt = 0
   Insn 408: point = 3648, n_alt = 0
   Insn 407: point = 3650, n_alt = 0
   Insn 406: point = 3651, n_alt = 0
   Insn 405: point = 3653, n_alt = 0
   Insn 404: point = 3655, n_alt = 0
  BB 31
   Insn 402: point = 3657, n_alt = -1
   Insn 401: point = 3657, n_alt = 0
   Insn 400: point = 3658, n_alt = 0
   Insn 399: point = 3660, n_alt = 0
   Insn 398: point = 3662, n_alt = 4
   Insn 397: point = 3663, n_alt = 3
   Insn 396: point = 3665, n_alt = 0
   Insn 395: point = 3667, n_alt = 0
   Insn 394: point = 3669, n_alt = 0
   Insn 393: point = 3670, n_alt = 0
   Insn 392: point = 3672, n_alt = 0
   Insn 391: point = 3674, n_alt = 0
  BB 29
   Insn 383: point = 3676, n_alt = 1
  BB 27
   Insn 375: point = 3677, n_alt = 1
   Insn 374: point = 3678, n_alt = 0
   Insn 373: point = 3679, n_alt = 0
  BB 25
   Insn 365: point = 3680, n_alt = 1
   Insn 362: point = 3680, n_alt = 0
   Insn 361: point = 3680, n_alt = -2
   Insn 360: point = 3681, n_alt = 0
   Insn 359: point = 3681, n_alt = -2
   Insn 358: point = 3682, n_alt = 2
   Insn 357: point = 3683, n_alt = -2
   Insn 356: point = 3685, n_alt = 4
  BB 152
   Insn 3195: point = 3686, n_alt = -1
  BB 20
   Insn 153: point = 3686, n_alt = -1
   Insn 152: point = 3686, n_alt = 0
   Insn 151: point = 3687, n_alt = 0
   Insn 150: point = 3689, n_alt = 0
   Insn 149: point = 3690, n_alt = 0
  BB 24
   Insn 3106: point = 3691, n_alt = -1
   Insn 350: point = 3691, n_alt = 1
  BB 153
   Insn 3198: point = 3692, n_alt = -1
  BB 22
   Insn 161: point = 3693, n_alt = -1
   Insn 160: point = 3693, n_alt = 0
   Insn 159: point = 3694, n_alt = 0
   Insn 158: point = 3696, n_alt = 0
   Insn 157: point = 3697, n_alt = 0
  BB 23
   Insn 3104: point = 3698, n_alt = -1
   Insn 344: point = 3698, n_alt = 1
   Insn 343: point = 3698, n_alt = 8
   Insn 342: point = 3699, n_alt = 7
   Insn 341: point = 3700, n_alt = 3
   Insn 340: point = 3701, n_alt = 3
   Insn 339: point = 3703, n_alt = 0
   Insn 338: point = 3705, n_alt = 1
   Insn 337: point = 3707, n_alt = 0
   Insn 336: point = 3708, n_alt = 0
   Insn 335: point = 3710, n_alt = 0
   Insn 334: point = 3712, n_alt = 1
   Insn 333: point = 3714, n_alt = 0
   Insn 332: point = 3715, n_alt = 1
   Insn 331: point = 3717, n_alt = 1
   Insn 330: point = 3719, n_alt = 0
   Insn 329: point = 3720, n_alt = 8
   Insn 328: point = 3721, n_alt = 7
   Insn 327: point = 3722, n_alt = 4
   Insn 326: point = 3723, n_alt = 3
   Insn 325: point = 3725, n_alt = 0
   Insn 324: point = 3727, n_alt = 1
   Insn 323: point = 3729, n_alt = 0
   Insn 322: point = 3730, n_alt = 0
   Insn 321: point = 3732, n_alt = 0
   Insn 320: point = 3734, n_alt = 1
   Insn 319: point = 3736, n_alt = 0
   Insn 318: point = 3737, n_alt = 1
   Insn 317: point = 3739, n_alt = 1
   Insn 316: point = 3741, n_alt = 0
   Insn 315: point = 3742, n_alt = 8
   Insn 314: point = 3743, n_alt = 7
   Insn 313: point = 3744, n_alt = 4
   Insn 312: point = 3745, n_alt = 3
   Insn 311: point = 3747, n_alt = 0
   Insn 310: point = 3749, n_alt = 1
   Insn 309: point = 3751, n_alt = 0
   Insn 308: point = 3752, n_alt = 0
   Insn 307: point = 3754, n_alt = 0
   Insn 306: point = 3756, n_alt = 1
   Insn 305: point = 3758, n_alt = 0
   Insn 304: point = 3759, n_alt = 1
   Insn 303: point = 3761, n_alt = 1
   Insn 302: point = 3763, n_alt = 0
   Insn 301: point = 3764, n_alt = 8
   Insn 300: point = 3765, n_alt = 7
   Insn 299: point = 3766, n_alt = 4
   Insn 298: point = 3767, n_alt = 3
   Insn 297: point = 3769, n_alt = 0
   Insn 296: point = 3771, n_alt = 1
   Insn 295: point = 3773, n_alt = 0
   Insn 294: point = 3774, n_alt = 0
   Insn 293: point = 3776, n_alt = 0
   Insn 292: point = 3778, n_alt = 1
   Insn 291: point = 3780, n_alt = 0
   Insn 290: point = 3781, n_alt = 1
   Insn 289: point = 3783, n_alt = 1
   Insn 288: point = 3785, n_alt = 0
   Insn 287: point = 3786, n_alt = 1
   Insn 286: point = 3787, n_alt = 3
   Insn 285: point = 3788, n_alt = 3
   Insn 284: point = 3790, n_alt = 0
   Insn 283: point = 3792, n_alt = 1
   Insn 282: point = 3794, n_alt = 0
   Insn 281: point = 3795, n_alt = 0
   Insn 280: point = 3797, n_alt = 0
   Insn 279: point = 3799, n_alt = 1
   Insn 278: point = 3801, n_alt = 0
   Insn 277: point = 3802, n_alt = 1
   Insn 276: point = 3804, n_alt = 1
   Insn 275: point = 3806, n_alt = 0
   Insn 274: point = 3807, n_alt = 8
   Insn 273: point = 3808, n_alt = 7
   Insn 272: point = 3809, n_alt = 3
   Insn 271: point = 3810, n_alt = 3
   Insn 270: point = 3812, n_alt = 0
   Insn 269: point = 3814, n_alt = 1
   Insn 268: point = 3816, n_alt = 0
   Insn 267: point = 3817, n_alt = 0
   Insn 266: point = 3819, n_alt = 0
   Insn 265: point = 3821, n_alt = 1
   Insn 264: point = 3823, n_alt = 0
   Insn 263: point = 3824, n_alt = 1
   Insn 262: point = 3826, n_alt = 1
   Insn 261: point = 3828, n_alt = 0
   Insn 260: point = 3829, n_alt = 8
   Insn 259: point = 3830, n_alt = 7
   Insn 258: point = 3831, n_alt = 3
   Insn 257: point = 3832, n_alt = 3
   Insn 256: point = 3834, n_alt = 0
   Insn 255: point = 3836, n_alt = 1
   Insn 254: point = 3838, n_alt = 0
   Insn 253: point = 3839, n_alt = 0
   Insn 252: point = 3841, n_alt = 0
   Insn 251: point = 3843, n_alt = 1
   Insn 250: point = 3845, n_alt = 0
   Insn 249: point = 3846, n_alt = 1
   Insn 248: point = 3848, n_alt = 1
   Insn 247: point = 3850, n_alt = 0
   Insn 246: point = 3851, n_alt = 8
   Insn 245: point = 3852, n_alt = 7
   Insn 244: point = 3853, n_alt = 3
   Insn 243: point = 3854, n_alt = 3
   Insn 242: point = 3856, n_alt = 0
   Insn 241: point = 3858, n_alt = 1
   Insn 240: point = 3860, n_alt = 0
   Insn 239: point = 3861, n_alt = 0
   Insn 238: point = 3863, n_alt = 0
   Insn 237: point = 3865, n_alt = 1
   Insn 236: point = 3867, n_alt = 0
   Insn 235: point = 3868, n_alt = 1
   Insn 234: point = 3870, n_alt = 1
   Insn 233: point = 3872, n_alt = 0
   Insn 232: point = 3873, n_alt = 8
   Insn 231: point = 3874, n_alt = 7
   Insn 230: point = 3875, n_alt = 3
   Insn 229: point = 3876, n_alt = 3
   Insn 228: point = 3878, n_alt = 0
   Insn 227: point = 3880, n_alt = 1
   Insn 226: point = 3882, n_alt = 0
   Insn 225: point = 3883, n_alt = 0
   Insn 224: point = 3885, n_alt = 0
   Insn 223: point = 3887, n_alt = 1
   Insn 222: point = 3889, n_alt = 0
   Insn 221: point = 3890, n_alt = 1
   Insn 220: point = 3892, n_alt = 1
   Insn 219: point = 3894, n_alt = 0
   Insn 218: point = 3895, n_alt = 8
   Insn 217: point = 3896, n_alt = 7
   Insn 216: point = 3897, n_alt = 4
   Insn 215: point = 3898, n_alt = 3
   Insn 214: point = 3900, n_alt = 0
   Insn 213: point = 3902, n_alt = 1
   Insn 212: point = 3904, n_alt = 0
   Insn 211: point = 3905, n_alt = 0
   Insn 210: point = 3907, n_alt = 0
   Insn 209: point = 3909, n_alt = 1
   Insn 208: point = 3911, n_alt = 0
   Insn 207: point = 3912, n_alt = 1
   Insn 206: point = 3914, n_alt = 1
   Insn 205: point = 3916, n_alt = 0
   Insn 204: point = 3917, n_alt = 8
   Insn 203: point = 3918, n_alt = 7
   Insn 202: point = 3919, n_alt = 3
   Insn 201: point = 3920, n_alt = 3
   Insn 200: point = 3922, n_alt = 0
   Insn 199: point = 3924, n_alt = 1
   Insn 198: point = 3926, n_alt = 0
   Insn 197: point = 3927, n_alt = 0
   Insn 196: point = 3929, n_alt = 0
   Insn 195: point = 3931, n_alt = 1
   Insn 194: point = 3933, n_alt = 0
   Insn 193: point = 3934, n_alt = 1
   Insn 192: point = 3936, n_alt = 1
   Insn 191: point = 3938, n_alt = 0
   Insn 190: point = 3939, n_alt = 8
   Insn 189: point = 3940, n_alt = 7
   Insn 188: point = 3941, n_alt = 3
   Insn 187: point = 3942, n_alt = 3
   Insn 186: point = 3944, n_alt = 0
   Insn 185: point = 3946, n_alt = 1
   Insn 184: point = 3948, n_alt = 0
   Insn 183: point = 3949, n_alt = 0
   Insn 182: point = 3951, n_alt = 0
   Insn 181: point = 3953, n_alt = 1
   Insn 180: point = 3955, n_alt = 0
   Insn 179: point = 3956, n_alt = 1
   Insn 178: point = 3958, n_alt = 1
   Insn 177: point = 3960, n_alt = 0
   Insn 176: point = 3961, n_alt = 8
   Insn 175: point = 3962, n_alt = 7
   Insn 174: point = 3963, n_alt = 3
   Insn 173: point = 3964, n_alt = 3
   Insn 172: point = 3966, n_alt = 0
   Insn 171: point = 3968, n_alt = 1
   Insn 170: point = 3970, n_alt = 0
   Insn 169: point = 3971, n_alt = 0
   Insn 168: point = 3973, n_alt = 0
   Insn 167: point = 3975, n_alt = 1
   Insn 166: point = 3977, n_alt = 0
   Insn 165: point = 3978, n_alt = 1
   Insn 164: point = 3980, n_alt = 1
   Insn 163: point = 3982, n_alt = 0
  BB 21
   Insn 155: point = 3984, n_alt = 1
  BB 19
   Insn 147: point = 3985, n_alt = 1
   Insn 146: point = 3986, n_alt = 0
   Insn 145: point = 3987, n_alt = 0
  BB 17
   Insn 137: point = 3988, n_alt = 1
  BB 148
   Insn 3183: point = 3988, n_alt = -1
  BB 9
   Insn 70: point = 3988, n_alt = -1
   Insn 69: point = 3988, n_alt = 0
   Insn 68: point = 3989, n_alt = 0
   Insn 67: point = 3991, n_alt = 0
   Insn 66: point = 3992, n_alt = 0
  BB 16
   Insn 3102: point = 3992, n_alt = -1
   Insn 131: point = 3992, n_alt = 1
  BB 149
   Insn 3186: point = 3992, n_alt = -1
  BB 11
   Insn 80: point = 3992, n_alt = -1
   Insn 79: point = 3992, n_alt = 0
   Insn 78: point = 3993, n_alt = 0
   Insn 77: point = 3995, n_alt = 0
   Insn 76: point = 3996, n_alt = 0
  BB 15
   Insn 3100: point = 3997, n_alt = -1
   Insn 125: point = 3997, n_alt = 1
  BB 150
   Insn 3189: point = 3998, n_alt = -1
  BB 13
   Insn 88: point = 3999, n_alt = -1
   Insn 87: point = 3999, n_alt = 0
   Insn 86: point = 4000, n_alt = 0
   Insn 85: point = 4002, n_alt = 0
   Insn 84: point = 4003, n_alt = 0
  BB 14
   Insn 3098: point = 4004, n_alt = -1
   Insn 119: point = 4004, n_alt = 1
   Insn 118: point = 4004, n_alt = 8
   Insn 117: point = 4005, n_alt = 4
   Insn 116: point = 4006, n_alt = 2
   Insn 115: point = 4008, n_alt = 7
   Insn 114: point = 4009, n_alt = 3
   Insn 113: point = 4011, n_alt = 0
   Insn 112: point = 4013, n_alt = 1
   Insn 111: point = 4015, n_alt = 0
   Insn 110: point = 4016, n_alt = 0
   Insn 109: point = 4018, n_alt = 0
   Insn 108: point = 4020, n_alt = 1
   Insn 107: point = 4022, n_alt = 0
   Insn 106: point = 4023, n_alt = 1
   Insn 105: point = 4025, n_alt = 1
   Insn 104: point = 4027, n_alt = 0
   Insn 103: point = 4028, n_alt = 7
   Insn 102: point = 4030, n_alt = 4
   Insn 101: point = 4031, n_alt = 3
   Insn 100: point = 4033, n_alt = 0
   Insn 99: point = 4035, n_alt = 1
   Insn 98: point = 4037, n_alt = 0
   Insn 97: point = 4038, n_alt = 0
   Insn 96: point = 4040, n_alt = 0
   Insn 95: point = 4042, n_alt = 1
   Insn 94: point = 4044, n_alt = 0
   Insn 93: point = 4045, n_alt = 1
   Insn 92: point = 4047, n_alt = 1
   Insn 91: point = 4049, n_alt = 0
   Insn 90: point = 4051, n_alt = 0
  BB 12
   Insn 82: point = 4053, n_alt = 1
  BB 10
   Insn 74: point = 4054, n_alt = 1
   Insn 73: point = 4055, n_alt = 0
   Insn 72: point = 4056, n_alt = 0
  BB 8
   Insn 64: point = 4057, n_alt = 1
  BB 146
   Insn 3177: point = 4057, n_alt = -1
  BB 3
   Insn 21: point = 4057, n_alt = -1
   Insn 20: point = 4057, n_alt = 0
   Insn 19: point = 4058, n_alt = 0
   Insn 18: point = 4060, n_alt = 0
   Insn 17: point = 4061, n_alt = 0
  BB 7
   Insn 3096: point = 4062, n_alt = -1
   Insn 58: point = 4062, n_alt = 1
  BB 147
   Insn 3180: point = 4063, n_alt = -1
  BB 5
   Insn 29: point = 4064, n_alt = -1
   Insn 28: point = 4064, n_alt = 0
   Insn 27: point = 4065, n_alt = 0
   Insn 26: point = 4067, n_alt = 0
   Insn 25: point = 4068, n_alt = 0
  BB 6
   Insn 3094: point = 4069, n_alt = -1
   Insn 52: point = 4069, n_alt = 1
   Insn 51: point = 4069, n_alt = 8
   Insn 50: point = 4070, n_alt = 4
   Insn 49: point = 4071, n_alt = 1
   Insn 48: point = 4073, n_alt = 3
   Insn 47: point = 4075, n_alt = 0
   Insn 46: point = 4077, n_alt = 1
   Insn 45: point = 4079, n_alt = 0
   Insn 44: point = 4080, n_alt = 0
   Insn 43: point = 4082, n_alt = 1
   Insn 42: point = 4084, n_alt = 0
   Insn 41: point = 4085, n_alt = 7
   Insn 40: point = 4087, n_alt = 4
   Insn 39: point = 4088, n_alt = 7
   Insn 38: point = 4090, n_alt = 4
   Insn 37: point = 4091, n_alt = 3
   Insn 36: point = 4093, n_alt = 0
   Insn 35: point = 4095, n_alt = 1
   Insn 34: point = 4097, n_alt = 0
   Insn 33: point = 4098, n_alt = 0
   Insn 32: point = 4100, n_alt = 1
   Insn 31: point = 4102, n_alt = 0
  BB 4
   Insn 23: point = 4104, n_alt = 1
  BB 2
   Insn 15: point = 4105, n_alt = 1
   Insn 14: point = 4106, n_alt = 0
   Insn 13: point = 4107, n_alt = 0
   Insn 12: point = 4108, n_alt = 8
   Insn 11: point = 4109, n_alt = 7
   Insn 7: point = 4110, n_alt = 5
   Insn 6: point = 4110, n_alt = 5
   Insn 5: point = 4110, n_alt = 5
   Insn 4: point = 4110, n_alt = 5
   Insn 3: point = 4110, n_alt = 5
   Insn 2: point = 4110, n_alt = 5
 r530: [2764..2830]
 r1153: [965..1031]
Compressing live ranges: from 4110 to 4 - 0%
Ranges after the compression:
 r530: [2..3]
 r1153: [0..1]
  Slot 0 regnos (width = 0):	 530	 1153
Changing spilled pseudos to memory in insn #3260
Changing spilled pseudos to memory in insn #999
Changing spilled pseudos to memory in insn #3263
Changing spilled pseudos to memory in insn #2321
	   Spilling non-eliminable hard regs: 6

********** Local #4: **********

	   Spilling non-eliminable hard regs: 6
Reusing alternative 1 for insn #2321
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2321:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
Reusing alternative 8 for insn #3263
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 3263:  (0) m  (1) v {*movsf_internal}
Reusing alternative 1 for insn #999
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 999:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
Reusing alternative 8 for insn #3260
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 3260:  (0) m  (1) v {*movsf_internal}
	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=224, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 20 to 7 (offset=192, prev_offset=0)
Can eliminate 20 to 6 (offset=-16, prev_offset=-16)
changing reg in insn 32
changing reg in insn 33
changing reg in insn 33
changing reg in insn 35
changing reg in insn 36
changing reg in insn 37
changing reg in insn 37
changing reg in insn 39
changing reg in insn 39
changing reg in insn 41
changing reg in insn 43
changing reg in insn 44
changing reg in insn 44
changing reg in insn 46
changing reg in insn 47
changing reg in insn 48
changing reg in insn 48
changing reg in insn 51
changing reg in insn 49
changing reg in insn 51
changing reg in insn 91
changing reg in insn 92
changing reg in insn 92
changing reg in insn 93
changing reg in insn 93
changing reg in insn 97
changing reg in insn 95
changing reg in insn 96
changing reg in insn 96
changing reg in insn 97
changing reg in insn 97
changing reg in insn 99
changing reg in insn 100
changing reg in insn 101
changing reg in insn 101
changing reg in insn 103
changing reg in insn 103
changing reg in insn 116
changing reg in insn 105
changing reg in insn 106
changing reg in insn 106
changing reg in insn 110
changing reg in insn 108
changing reg in insn 109
changing reg in insn 109
changing reg in insn 110
changing reg in insn 110
changing reg in insn 112
changing reg in insn 113
changing reg in insn 114
changing reg in insn 114
changing reg in insn 118
changing reg in insn 116
changing reg in insn 118
changing reg in insn 164
changing reg in insn 165
changing reg in insn 165
changing reg in insn 169
changing reg in insn 167
changing reg in insn 168
changing reg in insn 168
changing reg in insn 169
changing reg in insn 169
changing reg in insn 171
changing reg in insn 172
changing reg in insn 173
changing reg in insn 173
changing reg in insn 176
changing reg in insn 178
changing reg in insn 179
changing reg in insn 179
changing reg in insn 183
changing reg in insn 181
changing reg in insn 182
changing reg in insn 182
changing reg in insn 183
changing reg in insn 183
changing reg in insn 185
changing reg in insn 186
changing reg in insn 187
changing reg in insn 187
changing reg in insn 190
changing reg in insn 192
changing reg in insn 193
changing reg in insn 193
changing reg in insn 197
changing reg in insn 195
changing reg in insn 196
changing reg in insn 196
changing reg in insn 197
changing reg in insn 197
changing reg in insn 199
changing reg in insn 200
changing reg in insn 201
changing reg in insn 201
changing reg in insn 204
changing reg in insn 206
changing reg in insn 207
changing reg in insn 207
changing reg in insn 211
changing reg in insn 209
changing reg in insn 210
changing reg in insn 210
changing reg in insn 211
changing reg in insn 211
changing reg in insn 213
changing reg in insn 214
changing reg in insn 215
changing reg in insn 215
changing reg in insn 218
changing reg in insn 220
changing reg in insn 221
changing reg in insn 221
changing reg in insn 225
changing reg in insn 223
changing reg in insn 224
changing reg in insn 224
changing reg in insn 225
changing reg in insn 225
changing reg in insn 227
changing reg in insn 228
changing reg in insn 229
changing reg in insn 229
changing reg in insn 232
changing reg in insn 234
changing reg in insn 235
changing reg in insn 235
changing reg in insn 239
changing reg in insn 237
changing reg in insn 238
changing reg in insn 238
changing reg in insn 239
changing reg in insn 239
changing reg in insn 241
changing reg in insn 242
changing reg in insn 243
changing reg in insn 243
changing reg in insn 246
changing reg in insn 248
changing reg in insn 249
changing reg in insn 249
changing reg in insn 253
changing reg in insn 251
changing reg in insn 252
changing reg in insn 252
changing reg in insn 253
changing reg in insn 253
changing reg in insn 255
changing reg in insn 256
changing reg in insn 257
changing reg in insn 257
changing reg in insn 260
changing reg in insn 262
changing reg in insn 263
changing reg in insn 263
changing reg in insn 267
changing reg in insn 265
changing reg in insn 266
changing reg in insn 266
changing reg in insn 267
changing reg in insn 267
changing reg in insn 269
changing reg in insn 270
changing reg in insn 271
changing reg in insn 271
changing reg in insn 274
changing reg in insn 276
changing reg in insn 277
changing reg in insn 277
changing reg in insn 281
changing reg in insn 279
changing reg in insn 280
changing reg in insn 280
changing reg in insn 281
changing reg in insn 281
changing reg in insn 283
changing reg in insn 284
changing reg in insn 285
changing reg in insn 285
changing reg in insn 287
changing reg in insn 289
changing reg in insn 290
changing reg in insn 290
changing reg in insn 294
changing reg in insn 292
changing reg in insn 293
changing reg in insn 293
changing reg in insn 294
changing reg in insn 294
changing reg in insn 296
changing reg in insn 297
changing reg in insn 298
changing reg in insn 298
changing reg in insn 301
changing reg in insn 303
changing reg in insn 304
changing reg in insn 304
changing reg in insn 308
changing reg in insn 306
changing reg in insn 307
changing reg in insn 307
changing reg in insn 308
changing reg in insn 308
changing reg in insn 310
changing reg in insn 311
changing reg in insn 312
changing reg in insn 312
changing reg in insn 315
changing reg in insn 317
changing reg in insn 318
changing reg in insn 318
changing reg in insn 322
changing reg in insn 320
changing reg in insn 321
changing reg in insn 321
changing reg in insn 322
changing reg in insn 322
changing reg in insn 324
changing reg in insn 325
changing reg in insn 326
changing reg in insn 326
changing reg in insn 329
changing reg in insn 331
changing reg in insn 332
changing reg in insn 332
changing reg in insn 336
changing reg in insn 334
changing reg in insn 335
changing reg in insn 335
changing reg in insn 336
changing reg in insn 336
changing reg in insn 338
changing reg in insn 339
changing reg in insn 340
changing reg in insn 340
changing reg in insn 343
changing reg in insn 392
changing reg in insn 393
changing reg in insn 393
changing reg in insn 395
changing reg in insn 396
changing reg in insn 397
changing reg in insn 397
changing reg in insn 399
changing reg in insn 400
changing reg in insn 401
changing reg in insn 405
changing reg in insn 406
changing reg in insn 406
changing reg in insn 408
changing reg in insn 409
changing reg in insn 410
changing reg in insn 410
changing reg in insn 412
changing reg in insn 415
changing reg in insn 416
changing reg in insn 416
changing reg in insn 420
changing reg in insn 418
changing reg in insn 419
changing reg in insn 419
changing reg in insn 420
changing reg in insn 420
changing reg in insn 422
changing reg in insn 423
changing reg in insn 424
changing reg in insn 424
changing reg in insn 426
changing reg in insn 426
changing reg in insn 427
changing reg in insn 434
changing reg in insn 435
changing reg in insn 435
changing reg in insn 439
changing reg in insn 437
changing reg in insn 438
changing reg in insn 438
changing reg in insn 439
changing reg in insn 439
changing reg in insn 441
changing reg in insn 442
changing reg in insn 443
changing reg in insn 443
changing reg in insn 445
changing reg in insn 446
changing reg in insn 448
changing reg in insn 455
changing reg in insn 456
changing reg in insn 456
changing reg in insn 458
changing reg in insn 459
changing reg in insn 460
changing reg in insn 460
changing reg in insn 463
changing reg in insn 469
changing reg in insn 470
changing reg in insn 470
changing reg in insn 474
changing reg in insn 472
changing reg in insn 473
changing reg in insn 473
changing reg in insn 474
changing reg in insn 474
changing reg in insn 476
changing reg in insn 477
changing reg in insn 478
changing reg in insn 478
changing reg in insn 480
changing reg in insn 481
changing reg in insn 482
changing reg in insn 489
changing reg in insn 490
changing reg in insn 490
changing reg in insn 492
changing reg in insn 493
changing reg in insn 494
changing reg in insn 494
changing reg in insn 497
changing reg in insn 513
changing reg in insn 514
changing reg in insn 514
changing reg in insn 516
changing reg in insn 517
changing reg in insn 518
changing reg in insn 518
changing reg in insn 521
changing reg in insn 527
changing reg in insn 528
changing reg in insn 528
changing reg in insn 530
changing reg in insn 531
changing reg in insn 532
changing reg in insn 532
changing reg in insn 535
changing reg in insn 541
changing reg in insn 542
changing reg in insn 542
changing reg in insn 546
changing reg in insn 544
changing reg in insn 545
changing reg in insn 545
changing reg in insn 546
changing reg in insn 546
changing reg in insn 548
changing reg in insn 549
changing reg in insn 550
changing reg in insn 550
changing reg in insn 552
changing reg in insn 552
changing reg in insn 554
changing reg in insn 555
changing reg in insn 555
changing reg in insn 556
changing reg in insn 556
changing reg in insn 560
changing reg in insn 558
changing reg in insn 559
changing reg in insn 559
changing reg in insn 560
changing reg in insn 560
changing reg in insn 562
changing reg in insn 563
changing reg in insn 564
changing reg in insn 564
changing reg in insn 566
changing reg in insn 566
changing reg in insn 567
changing reg in insn 568
changing reg in insn 568
changing reg in insn 573
changing reg in insn 574
changing reg in insn 574
changing reg in insn 578
changing reg in insn 576
changing reg in insn 577
changing reg in insn 577
changing reg in insn 578
changing reg in insn 578
changing reg in insn 580
changing reg in insn 581
changing reg in insn 582
changing reg in insn 582
changing reg in insn 584
changing reg in insn 584
changing reg in insn 585
changing reg in insn 592
changing reg in insn 593
changing reg in insn 593
changing reg in insn 594
changing reg in insn 594
changing reg in insn 598
changing reg in insn 596
changing reg in insn 597
changing reg in insn 597
changing reg in insn 598
changing reg in insn 598
changing reg in insn 600
changing reg in insn 601
changing reg in insn 602
changing reg in insn 602
changing reg in insn 604
changing reg in insn 604
changing reg in insn 606
changing reg in insn 613
changing reg in insn 614
changing reg in insn 614
changing reg in insn 615
changing reg in insn 615
changing reg in insn 619
changing reg in insn 617
changing reg in insn 618
changing reg in insn 618
changing reg in insn 619
changing reg in insn 619
changing reg in insn 621
changing reg in insn 622
changing reg in insn 623
changing reg in insn 623
changing reg in insn 625
changing reg in insn 625
changing reg in insn 639
changing reg in insn 627
changing reg in insn 628
changing reg in insn 628
changing reg in insn 632
changing reg in insn 630
changing reg in insn 631
changing reg in insn 631
changing reg in insn 632
changing reg in insn 632
changing reg in insn 634
changing reg in insn 635
changing reg in insn 636
changing reg in insn 636
changing reg in insn 638
changing reg in insn 638
changing reg in insn 639
changing reg in insn 642
changing reg in insn 643
changing reg in insn 643
changing reg in insn 647
changing reg in insn 645
changing reg in insn 646
changing reg in insn 646
changing reg in insn 647
changing reg in insn 647
changing reg in insn 649
changing reg in insn 650
changing reg in insn 651
changing reg in insn 651
changing reg in insn 653
changing reg in insn 653
changing reg in insn 665
changing reg in insn 655
changing reg in insn 656
changing reg in insn 656
changing reg in insn 660
changing reg in insn 658
changing reg in insn 659
changing reg in insn 659
changing reg in insn 660
changing reg in insn 660
changing reg in insn 662
changing reg in insn 663
changing reg in insn 664
changing reg in insn 664
changing reg in insn 667
changing reg in insn 665
changing reg in insn 667
changing reg in insn 669
changing reg in insn 670
changing reg in insn 670
changing reg in insn 674
changing reg in insn 672
changing reg in insn 673
changing reg in insn 673
changing reg in insn 674
changing reg in insn 674
changing reg in insn 676
changing reg in insn 677
changing reg in insn 678
changing reg in insn 678
changing reg in insn 680
changing reg in insn 680
changing reg in insn 682
changing reg in insn 683
changing reg in insn 683
changing reg in insn 687
changing reg in insn 685
changing reg in insn 686
changing reg in insn 686
changing reg in insn 687
changing reg in insn 687
changing reg in insn 689
changing reg in insn 690
changing reg in insn 691
changing reg in insn 691
changing reg in insn 695
changing reg in insn 693
changing reg in insn 695
changing reg in insn 697
changing reg in insn 698
changing reg in insn 698
changing reg in insn 702
changing reg in insn 700
changing reg in insn 701
changing reg in insn 701
changing reg in insn 702
changing reg in insn 702
changing reg in insn 704
changing reg in insn 705
changing reg in insn 706
changing reg in insn 706
changing reg in insn 708
changing reg in insn 708
changing reg in insn 721
changing reg in insn 721
changing reg in insn 710
changing reg in insn 711
changing reg in insn 711
changing reg in insn 715
changing reg in insn 713
changing reg in insn 714
changing reg in insn 714
changing reg in insn 715
changing reg in insn 715
changing reg in insn 717
changing reg in insn 718
changing reg in insn 719
changing reg in insn 719
changing reg in insn 723
changing reg in insn 721
changing reg in insn 723
changing reg in insn 725
changing reg in insn 726
changing reg in insn 726
changing reg in insn 730
changing reg in insn 728
changing reg in insn 729
changing reg in insn 729
changing reg in insn 730
changing reg in insn 730
changing reg in insn 732
changing reg in insn 733
changing reg in insn 734
changing reg in insn 734
changing reg in insn 736
changing reg in insn 736
changing reg in insn 738
changing reg in insn 739
changing reg in insn 739
changing reg in insn 743
changing reg in insn 741
changing reg in insn 742
changing reg in insn 742
changing reg in insn 743
changing reg in insn 743
changing reg in insn 745
changing reg in insn 746
changing reg in insn 747
changing reg in insn 747
changing reg in insn 749
changing reg in insn 750
changing reg in insn 751
changing reg in insn 751
changing reg in insn 753
changing reg in insn 754
changing reg in insn 754
changing reg in insn 758
changing reg in insn 756
changing reg in insn 757
changing reg in insn 757
changing reg in insn 758
changing reg in insn 758
changing reg in insn 760
changing reg in insn 761
changing reg in insn 762
changing reg in insn 762
changing reg in insn 765
changing reg in insn 763
changing reg in insn 765
changing reg in insn 767
changing reg in insn 768
changing reg in insn 768
changing reg in insn 772
changing reg in insn 770
changing reg in insn 771
changing reg in insn 771
changing reg in insn 772
changing reg in insn 772
changing reg in insn 774
changing reg in insn 775
changing reg in insn 776
changing reg in insn 776
changing reg in insn 778
changing reg in insn 778
changing reg in insn 780
changing reg in insn 781
changing reg in insn 781
changing reg in insn 785
changing reg in insn 783
changing reg in insn 784
changing reg in insn 784
changing reg in insn 785
changing reg in insn 785
changing reg in insn 787
changing reg in insn 788
changing reg in insn 789
changing reg in insn 789
changing reg in insn 791
changing reg in insn 792
changing reg in insn 793
changing reg in insn 793
changing reg in insn 795
changing reg in insn 796
changing reg in insn 796
changing reg in insn 800
changing reg in insn 798
changing reg in insn 799
changing reg in insn 799
changing reg in insn 800
changing reg in insn 800
changing reg in insn 802
changing reg in insn 803
changing reg in insn 804
changing reg in insn 804
changing reg in insn 807
changing reg in insn 805
changing reg in insn 807
changing reg in insn 809
changing reg in insn 810
changing reg in insn 810
changing reg in insn 814
changing reg in insn 812
changing reg in insn 813
changing reg in insn 813
changing reg in insn 814
changing reg in insn 814
changing reg in insn 816
changing reg in insn 817
changing reg in insn 818
changing reg in insn 818
changing reg in insn 820
changing reg in insn 820
changing reg in insn 822
changing reg in insn 823
changing reg in insn 823
changing reg in insn 827
changing reg in insn 825
changing reg in insn 826
changing reg in insn 826
changing reg in insn 827
changing reg in insn 827
changing reg in insn 829
changing reg in insn 830
changing reg in insn 831
changing reg in insn 831
changing reg in insn 833
changing reg in insn 833
changing reg in insn 834
changing reg in insn 834
changing reg in insn 836
changing reg in insn 837
changing reg in insn 837
changing reg in insn 841
changing reg in insn 839
changing reg in insn 840
changing reg in insn 840
changing reg in insn 841
changing reg in insn 841
changing reg in insn 843
changing reg in insn 844
changing reg in insn 845
changing reg in insn 845
changing reg in insn 848
changing reg in insn 846
changing reg in insn 848
changing reg in insn 850
changing reg in insn 851
changing reg in insn 851
changing reg in insn 855
changing reg in insn 853
changing reg in insn 854
changing reg in insn 854
changing reg in insn 855
changing reg in insn 855
changing reg in insn 857
changing reg in insn 858
changing reg in insn 859
changing reg in insn 859
changing reg in insn 861
changing reg in insn 861
changing reg in insn 863
changing reg in insn 864
changing reg in insn 864
changing reg in insn 868
changing reg in insn 866
changing reg in insn 867
changing reg in insn 867
changing reg in insn 868
changing reg in insn 868
changing reg in insn 870
changing reg in insn 871
changing reg in insn 872
changing reg in insn 872
changing reg in insn 874
changing reg in insn 875
changing reg in insn 877
changing reg in insn 878
changing reg in insn 878
changing reg in insn 882
changing reg in insn 880
changing reg in insn 881
changing reg in insn 881
changing reg in insn 882
changing reg in insn 882
changing reg in insn 884
changing reg in insn 885
changing reg in insn 886
changing reg in insn 886
changing reg in insn 888
changing reg in insn 888
changing reg in insn 889
changing reg in insn 890
changing reg in insn 890
changing reg in insn 893
changing reg in insn 895
changing reg in insn 896
changing reg in insn 896
changing reg in insn 900
changing reg in insn 898
changing reg in insn 899
changing reg in insn 899
changing reg in insn 900
changing reg in insn 900
changing reg in insn 902
changing reg in insn 903
changing reg in insn 904
changing reg in insn 904
changing reg in insn 907
changing reg in insn 905
changing reg in insn 907
changing reg in insn 909
changing reg in insn 910
changing reg in insn 910
changing reg in insn 914
changing reg in insn 912
changing reg in insn 913
changing reg in insn 913
changing reg in insn 914
changing reg in insn 914
changing reg in insn 916
changing reg in insn 917
changing reg in insn 918
changing reg in insn 918
changing reg in insn 920
changing reg in insn 921
changing reg in insn 923
changing reg in insn 928
changing reg in insn 931
changing reg in insn 932
changing reg in insn 933
changing reg in insn 960
changing reg in insn 961
changing reg in insn 961
changing reg in insn 965
changing reg in insn 963
changing reg in insn 964
changing reg in insn 964
changing reg in insn 965
changing reg in insn 965
changing reg in insn 967
changing reg in insn 968
changing reg in insn 969
changing reg in insn 969
changing reg in insn 971
changing reg in insn 972
changing reg in insn 974
changing reg in insn 974
changing reg in insn 975
changing reg in insn 975
changing reg in insn 977
changing reg in insn 995
changing reg in insn 979
changing reg in insn 980
changing reg in insn 980
changing reg in insn 984
changing reg in insn 982
changing reg in insn 983
changing reg in insn 983
changing reg in insn 984
changing reg in insn 984
changing reg in insn 986
changing reg in insn 987
changing reg in insn 988
changing reg in insn 988
changing reg in insn 990
changing reg in insn 991
changing reg in insn 993
changing reg in insn 993
changing reg in insn 994
changing reg in insn 994
changing reg in insn 995
changing reg in insn 995
changing reg in insn 996
changing reg in insn 998
changing reg in insn 1005
changing reg in insn 1008
changing reg in insn 1009
changing reg in insn 1010
changing reg in insn 1016
changing reg in insn 1017
changing reg in insn 1017
changing reg in insn 1018
changing reg in insn 1018
changing reg in insn 1020
changing reg in insn 1024
changing reg in insn 1027
changing reg in insn 1028
changing reg in insn 1028
changing reg in insn 1029
changing reg in insn 1031
changing reg in insn 1031
changing reg in insn 1032
changing reg in insn 1032
changing reg in insn 1034
changing reg in insn 1064
changing reg in insn 1065
changing reg in insn 1065
changing reg in insn 1067
changing reg in insn 1068
changing reg in insn 1069
changing reg in insn 1069
changing reg in insn 1071
changing reg in insn 1071
changing reg in insn 1073
changing reg in insn 1092
changing reg in insn 1093
changing reg in insn 1093
changing reg in insn 1097
changing reg in insn 1095
changing reg in insn 1096
changing reg in insn 1096
changing reg in insn 1097
changing reg in insn 1097
changing reg in insn 1099
changing reg in insn 1100
changing reg in insn 1101
changing reg in insn 1101
changing reg in insn 1103
changing reg in insn 1103
changing reg in insn 1105
changing reg in insn 1107
changing reg in insn 1108
changing reg in insn 1108
changing reg in insn 1112
changing reg in insn 1110
changing reg in insn 1111
changing reg in insn 1111
changing reg in insn 1112
changing reg in insn 1112
changing reg in insn 1114
changing reg in insn 1115
changing reg in insn 1116
changing reg in insn 1116
changing reg in insn 1119
changing reg in insn 1117
changing reg in insn 1119
changing reg in insn 1149
changing reg in insn 1150
changing reg in insn 1150
changing reg in insn 1151
changing reg in insn 1151
changing reg in insn 1152
changing reg in insn 1154
changing reg in insn 1155
changing reg in insn 1191
changing reg in insn 1192
changing reg in insn 1192
changing reg in insn 1193
changing reg in insn 1194
changing reg in insn 1199
changing reg in insn 1202
changing reg in insn 1203
changing reg in insn 1203
changing reg in insn 1204
changing reg in insn 1205
changing reg in insn 1210
changing reg in insn 1213
changing reg in insn 1214
changing reg in insn 1214
changing reg in insn 1218
changing reg in insn 1216
changing reg in insn 1217
changing reg in insn 1217
changing reg in insn 1218
changing reg in insn 1218
changing reg in insn 1220
changing reg in insn 1221
changing reg in insn 1222
changing reg in insn 1222
changing reg in insn 1224
changing reg in insn 1224
changing reg in insn 1238
changing reg in insn 1226
changing reg in insn 1227
changing reg in insn 1227
changing reg in insn 1231
changing reg in insn 1229
changing reg in insn 1230
changing reg in insn 1230
changing reg in insn 1231
changing reg in insn 1231
changing reg in insn 1233
changing reg in insn 1234
changing reg in insn 1235
changing reg in insn 1235
changing reg in insn 1237
changing reg in insn 1237
changing reg in insn 1238
changing reg in insn 1238
changing reg in insn 1253
changing reg in insn 1240
changing reg in insn 1241
changing reg in insn 1241
changing reg in insn 1246
changing reg in insn 1243
changing reg in insn 1244
changing reg in insn 1244
changing reg in insn 1245
changing reg in insn 1245
changing reg in insn 1246
changing reg in insn 1246
changing reg in insn 1248
changing reg in insn 1249
changing reg in insn 1250
changing reg in insn 1250
changing reg in insn 1252
changing reg in insn 1252
changing reg in insn 1253
changing reg in insn 1253
changing reg in insn 1255
changing reg in insn 1256
changing reg in insn 1256
changing reg in insn 1261
changing reg in insn 1258
changing reg in insn 1259
changing reg in insn 1259
changing reg in insn 1260
changing reg in insn 1260
changing reg in insn 1261
changing reg in insn 1261
changing reg in insn 1263
changing reg in insn 1264
changing reg in insn 1265
changing reg in insn 1265
changing reg in insn 1267
changing reg in insn 1267
changing reg in insn 1268
changing reg in insn 1269
changing reg in insn 1269
changing reg in insn 1274
changing reg in insn 1275
changing reg in insn 1275
changing reg in insn 1276
changing reg in insn 1276
changing reg in insn 1280
changing reg in insn 1278
changing reg in insn 1279
changing reg in insn 1279
changing reg in insn 1280
changing reg in insn 1280
changing reg in insn 1282
changing reg in insn 1283
changing reg in insn 1284
changing reg in insn 1284
changing reg in insn 1286
changing reg in insn 1286
changing reg in insn 1301
changing reg in insn 1288
changing reg in insn 1289
changing reg in insn 1289
changing reg in insn 1290
changing reg in insn 1290
changing reg in insn 1294
changing reg in insn 1292
changing reg in insn 1293
changing reg in insn 1293
changing reg in insn 1294
changing reg in insn 1294
changing reg in insn 1296
changing reg in insn 1297
changing reg in insn 1298
changing reg in insn 1298
changing reg in insn 1300
changing reg in insn 1300
changing reg in insn 1301
changing reg in insn 1301
changing reg in insn 1317
changing reg in insn 1303
changing reg in insn 1304
changing reg in insn 1304
changing reg in insn 1305
changing reg in insn 1305
changing reg in insn 1310
changing reg in insn 1307
changing reg in insn 1308
changing reg in insn 1308
changing reg in insn 1309
changing reg in insn 1309
changing reg in insn 1310
changing reg in insn 1310
changing reg in insn 1312
changing reg in insn 1313
changing reg in insn 1314
changing reg in insn 1314
changing reg in insn 1316
changing reg in insn 1316
changing reg in insn 1317
changing reg in insn 1317
changing reg in insn 1319
changing reg in insn 1320
changing reg in insn 1320
changing reg in insn 1321
changing reg in insn 1321
changing reg in insn 1326
changing reg in insn 1323
changing reg in insn 1324
changing reg in insn 1324
changing reg in insn 1325
changing reg in insn 1325
changing reg in insn 1326
changing reg in insn 1326
changing reg in insn 1328
changing reg in insn 1329
changing reg in insn 1330
changing reg in insn 1330
changing reg in insn 1332
changing reg in insn 1332
changing reg in insn 1333
changing reg in insn 1334
changing reg in insn 1334
changing reg in insn 1342
changing reg in insn 1343
changing reg in insn 1343
changing reg in insn 1348
changing reg in insn 1349
changing reg in insn 1349
changing reg in insn 1353
changing reg in insn 1351
changing reg in insn 1352
changing reg in insn 1352
changing reg in insn 1353
changing reg in insn 1353
changing reg in insn 1355
changing reg in insn 1356
changing reg in insn 1357
changing reg in insn 1357
changing reg in insn 1359
changing reg in insn 1359
changing reg in insn 1360
changing reg in insn 1367
changing reg in insn 1368
changing reg in insn 1368
changing reg in insn 1369
changing reg in insn 1369
changing reg in insn 1373
changing reg in insn 1371
changing reg in insn 1372
changing reg in insn 1372
changing reg in insn 1373
changing reg in insn 1373
changing reg in insn 1375
changing reg in insn 1376
changing reg in insn 1377
changing reg in insn 1377
changing reg in insn 1379
changing reg in insn 1379
changing reg in insn 1381
changing reg in insn 1388
changing reg in insn 1389
changing reg in insn 1389
changing reg in insn 1393
changing reg in insn 1391
changing reg in insn 1392
changing reg in insn 1392
changing reg in insn 1393
changing reg in insn 1393
changing reg in insn 1395
changing reg in insn 1396
changing reg in insn 1397
changing reg in insn 1397
changing reg in insn 1399
changing reg in insn 1399
changing reg in insn 1411
changing reg in insn 1401
changing reg in insn 1402
changing reg in insn 1402
changing reg in insn 1406
changing reg in insn 1404
changing reg in insn 1405
changing reg in insn 1405
changing reg in insn 1406
changing reg in insn 1406
changing reg in insn 1408
changing reg in insn 1409
changing reg in insn 1410
changing reg in insn 1410
changing reg in insn 1413
changing reg in insn 1411
changing reg in insn 1413
changing reg in insn 1415
changing reg in insn 1416
changing reg in insn 1416
changing reg in insn 1420
changing reg in insn 1418
changing reg in insn 1419
changing reg in insn 1419
changing reg in insn 1420
changing reg in insn 1420
changing reg in insn 1422
changing reg in insn 1423
changing reg in insn 1424
changing reg in insn 1424
changing reg in insn 1426
changing reg in insn 1426
changing reg in insn 1428
changing reg in insn 1429
changing reg in insn 1429
changing reg in insn 1433
changing reg in insn 1431
changing reg in insn 1432
changing reg in insn 1432
changing reg in insn 1433
changing reg in insn 1433
changing reg in insn 1435
changing reg in insn 1436
changing reg in insn 1437
changing reg in insn 1437
changing reg in insn 1439
changing reg in insn 1440
changing reg in insn 1441
changing reg in insn 1441
changing reg in insn 1443
changing reg in insn 1444
changing reg in insn 1444
changing reg in insn 1448
changing reg in insn 1446
changing reg in insn 1447
changing reg in insn 1447
changing reg in insn 1448
changing reg in insn 1448
changing reg in insn 1450
changing reg in insn 1451
changing reg in insn 1452
changing reg in insn 1452
changing reg in insn 1455
changing reg in insn 1453
changing reg in insn 1455
changing reg in insn 1457
changing reg in insn 1458
changing reg in insn 1458
changing reg in insn 1462
changing reg in insn 1460
changing reg in insn 1461
changing reg in insn 1461
changing reg in insn 1462
changing reg in insn 1462
changing reg in insn 1464
changing reg in insn 1465
changing reg in insn 1466
changing reg in insn 1466
changing reg in insn 1468
changing reg in insn 1468
changing reg in insn 1470
changing reg in insn 1471
changing reg in insn 1471
changing reg in insn 1475
changing reg in insn 1473
changing reg in insn 1474
changing reg in insn 1474
changing reg in insn 1475
changing reg in insn 1475
changing reg in insn 1477
changing reg in insn 1478
changing reg in insn 1479
changing reg in insn 1479
changing reg in insn 1481
changing reg in insn 1482
changing reg in insn 1483
changing reg in insn 1483
changing reg in insn 1485
changing reg in insn 1486
changing reg in insn 1486
changing reg in insn 1490
changing reg in insn 1488
changing reg in insn 1489
changing reg in insn 1489
changing reg in insn 1490
changing reg in insn 1490
changing reg in insn 1492
changing reg in insn 1493
changing reg in insn 1494
changing reg in insn 1494
changing reg in insn 1497
changing reg in insn 1495
changing reg in insn 1497
changing reg in insn 1551
changing reg in insn 1552
changing reg in insn 1552
changing reg in insn 1556
changing reg in insn 1554
changing reg in insn 1555
changing reg in insn 1555
changing reg in insn 1556
changing reg in insn 1556
changing reg in insn 1558
changing reg in insn 1559
changing reg in insn 1560
changing reg in insn 1560
changing reg in insn 1562
changing reg in insn 1562
changing reg in insn 1567
changing reg in insn 1564
changing reg in insn 1574
changing reg in insn 1575
changing reg in insn 1575
changing reg in insn 1579
changing reg in insn 1577
changing reg in insn 1578
changing reg in insn 1578
changing reg in insn 1579
changing reg in insn 1579
changing reg in insn 1581
changing reg in insn 1582
changing reg in insn 1583
changing reg in insn 1583
changing reg in insn 1585
changing reg in insn 1585
changing reg in insn 1587
changing reg in insn 1590
changing reg in insn 1591
changing reg in insn 1591
changing reg in insn 1595
changing reg in insn 1593
changing reg in insn 1594
changing reg in insn 1594
changing reg in insn 1595
changing reg in insn 1595
changing reg in insn 1597
changing reg in insn 1598
changing reg in insn 1599
changing reg in insn 1599
changing reg in insn 1601
changing reg in insn 1601
changing reg in insn 1602
changing reg in insn 1602
changing reg in insn 1616
changing reg in insn 1604
changing reg in insn 1605
changing reg in insn 1605
changing reg in insn 1609
changing reg in insn 1607
changing reg in insn 1608
changing reg in insn 1608
changing reg in insn 1609
changing reg in insn 1609
changing reg in insn 1611
changing reg in insn 1612
changing reg in insn 1613
changing reg in insn 1613
changing reg in insn 1615
changing reg in insn 1615
changing reg in insn 1616
changing reg in insn 1616
changing reg in insn 1628
changing reg in insn 1618
changing reg in insn 1619
changing reg in insn 1619
changing reg in insn 1623
changing reg in insn 1621
changing reg in insn 1622
changing reg in insn 1622
changing reg in insn 1623
changing reg in insn 1623
changing reg in insn 1625
changing reg in insn 1626
changing reg in insn 1627
changing reg in insn 1627
changing reg in insn 1630
changing reg in insn 1628
changing reg in insn 1630
changing reg in insn 1632
changing reg in insn 1633
changing reg in insn 1633
changing reg in insn 1637
changing reg in insn 1635
changing reg in insn 1636
changing reg in insn 1636
changing reg in insn 1637
changing reg in insn 1637
changing reg in insn 1639
changing reg in insn 1640
changing reg in insn 1641
changing reg in insn 1641
changing reg in insn 1643
changing reg in insn 1643
changing reg in insn 1645
changing reg in insn 1646
changing reg in insn 1646
changing reg in insn 1647
changing reg in insn 1647
changing reg in insn 1651
changing reg in insn 1649
changing reg in insn 1650
changing reg in insn 1650
changing reg in insn 1651
changing reg in insn 1651
changing reg in insn 1653
changing reg in insn 1654
changing reg in insn 1655
changing reg in insn 1655
changing reg in insn 1657
changing reg in insn 1657
changing reg in insn 1658
changing reg in insn 1659
changing reg in insn 1659
changing reg in insn 1661
changing reg in insn 1662
changing reg in insn 1662
changing reg in insn 1666
changing reg in insn 1664
changing reg in insn 1665
changing reg in insn 1665
changing reg in insn 1666
changing reg in insn 1666
changing reg in insn 1668
changing reg in insn 1669
changing reg in insn 1670
changing reg in insn 1670
changing reg in insn 1674
changing reg in insn 1672
changing reg in insn 1674
changing reg in insn 1676
changing reg in insn 1677
changing reg in insn 1677
changing reg in insn 1681
changing reg in insn 1679
changing reg in insn 1680
changing reg in insn 1680
changing reg in insn 1681
changing reg in insn 1681
changing reg in insn 1683
changing reg in insn 1684
changing reg in insn 1685
changing reg in insn 1685
changing reg in insn 1687
changing reg in insn 1687
changing reg in insn 1699
changing reg in insn 1689
changing reg in insn 1690
changing reg in insn 1690
changing reg in insn 1694
changing reg in insn 1692
changing reg in insn 1693
changing reg in insn 1693
changing reg in insn 1694
changing reg in insn 1694
changing reg in insn 1696
changing reg in insn 1697
changing reg in insn 1698
changing reg in insn 1698
changing reg in insn 1701
changing reg in insn 1699
changing reg in insn 1701
changing reg in insn 1703
changing reg in insn 1704
changing reg in insn 1704
changing reg in insn 1708
changing reg in insn 1706
changing reg in insn 1707
changing reg in insn 1707
changing reg in insn 1708
changing reg in insn 1708
changing reg in insn 1710
changing reg in insn 1711
changing reg in insn 1712
changing reg in insn 1712
changing reg in insn 1714
changing reg in insn 1714
changing reg in insn 1726
changing reg in insn 1716
changing reg in insn 1717
changing reg in insn 1717
changing reg in insn 1721
changing reg in insn 1719
changing reg in insn 1720
changing reg in insn 1720
changing reg in insn 1721
changing reg in insn 1721
changing reg in insn 1723
changing reg in insn 1724
changing reg in insn 1725
changing reg in insn 1725
changing reg in insn 1728
changing reg in insn 1726
changing reg in insn 1728
changing reg in insn 1730
changing reg in insn 1731
changing reg in insn 1731
changing reg in insn 1735
changing reg in insn 1733
changing reg in insn 1734
changing reg in insn 1734
changing reg in insn 1735
changing reg in insn 1735
changing reg in insn 1737
changing reg in insn 1738
changing reg in insn 1739
changing reg in insn 1739
changing reg in insn 1741
changing reg in insn 1741
changing reg in insn 1753
changing reg in insn 1743
changing reg in insn 1744
changing reg in insn 1744
changing reg in insn 1748
changing reg in insn 1746
changing reg in insn 1747
changing reg in insn 1747
changing reg in insn 1748
changing reg in insn 1748
changing reg in insn 1750
changing reg in insn 1751
changing reg in insn 1752
changing reg in insn 1752
changing reg in insn 1755
changing reg in insn 1753
changing reg in insn 1755
changing reg in insn 1757
changing reg in insn 1758
changing reg in insn 1758
changing reg in insn 1762
changing reg in insn 1760
changing reg in insn 1761
changing reg in insn 1761
changing reg in insn 1762
changing reg in insn 1762
changing reg in insn 1764
changing reg in insn 1765
changing reg in insn 1766
changing reg in insn 1766
changing reg in insn 1768
changing reg in insn 1768
changing reg in insn 1780
changing reg in insn 1770
changing reg in insn 1771
changing reg in insn 1771
changing reg in insn 1775
changing reg in insn 1773
changing reg in insn 1774
changing reg in insn 1774
changing reg in insn 1775
changing reg in insn 1775
changing reg in insn 1777
changing reg in insn 1778
changing reg in insn 1779
changing reg in insn 1779
changing reg in insn 1782
changing reg in insn 1780
changing reg in insn 1782
changing reg in insn 1816
changing reg in insn 1817
changing reg in insn 1817
changing reg in insn 1821
changing reg in insn 1819
changing reg in insn 1820
changing reg in insn 1820
changing reg in insn 1821
changing reg in insn 1821
changing reg in insn 1823
changing reg in insn 1824
changing reg in insn 1825
changing reg in insn 1825
changing reg in insn 1827
changing reg in insn 1827
changing reg in insn 1832
changing reg in insn 1829
changing reg in insn 1839
changing reg in insn 1840
changing reg in insn 1840
changing reg in insn 1844
changing reg in insn 1842
changing reg in insn 1843
changing reg in insn 1843
changing reg in insn 1844
changing reg in insn 1844
changing reg in insn 1846
changing reg in insn 1847
changing reg in insn 1848
changing reg in insn 1848
changing reg in insn 1850
changing reg in insn 1850
changing reg in insn 1852
changing reg in insn 1855
changing reg in insn 1856
changing reg in insn 1856
changing reg in insn 1860
changing reg in insn 1858
changing reg in insn 1859
changing reg in insn 1859
changing reg in insn 1860
changing reg in insn 1860
changing reg in insn 1862
changing reg in insn 1863
changing reg in insn 1864
changing reg in insn 1864
changing reg in insn 1866
changing reg in insn 1866
changing reg in insn 1878
changing reg in insn 1868
changing reg in insn 1869
changing reg in insn 1869
changing reg in insn 1873
changing reg in insn 1871
changing reg in insn 1872
changing reg in insn 1872
changing reg in insn 1873
changing reg in insn 1873
changing reg in insn 1875
changing reg in insn 1876
changing reg in insn 1877
changing reg in insn 1877
changing reg in insn 1880
changing reg in insn 1878
changing reg in insn 1880
changing reg in insn 1882
changing reg in insn 1883
changing reg in insn 1883
changing reg in insn 1887
changing reg in insn 1885
changing reg in insn 1886
changing reg in insn 1886
changing reg in insn 1887
changing reg in insn 1887
changing reg in insn 1889
changing reg in insn 1890
changing reg in insn 1891
changing reg in insn 1891
changing reg in insn 1893
changing reg in insn 1893
changing reg in insn 1905
changing reg in insn 1895
changing reg in insn 1896
changing reg in insn 1896
changing reg in insn 1900
changing reg in insn 1898
changing reg in insn 1899
changing reg in insn 1899
changing reg in insn 1900
changing reg in insn 1900
changing reg in insn 1902
changing reg in insn 1903
changing reg in insn 1904
changing reg in insn 1904
changing reg in insn 1907
changing reg in insn 1905
changing reg in insn 1907
changing reg in insn 1955
changing reg in insn 1956
changing reg in insn 1956
changing reg in insn 1960
changing reg in insn 1958
changing reg in insn 1959
changing reg in insn 1959
changing reg in insn 1960
changing reg in insn 1960
changing reg in insn 1962
changing reg in insn 1963
changing reg in insn 1964
changing reg in insn 1964
changing reg in insn 1966
changing reg in insn 1966
changing reg in insn 1971
changing reg in insn 1968
changing reg in insn 1981
changing reg in insn 1982
changing reg in insn 1982
changing reg in insn 1986
changing reg in insn 1984
changing reg in insn 1985
changing reg in insn 1985
changing reg in insn 1986
changing reg in insn 1986
changing reg in insn 1988
changing reg in insn 1989
changing reg in insn 1990
changing reg in insn 1990
changing reg in insn 1992
changing reg in insn 1992
changing reg in insn 1994
changing reg in insn 1995
changing reg in insn 1995
changing reg in insn 1996
changing reg in insn 1996
changing reg in insn 2000
changing reg in insn 1998
changing reg in insn 1999
changing reg in insn 1999
changing reg in insn 2000
changing reg in insn 2000
changing reg in insn 2002
changing reg in insn 2003
changing reg in insn 2004
changing reg in insn 2004
changing reg in insn 2006
changing reg in insn 2006
changing reg in insn 2007
changing reg in insn 2008
changing reg in insn 2008
changing reg in insn 2010
changing reg in insn 2011
changing reg in insn 2011
changing reg in insn 2015
changing reg in insn 2013
changing reg in insn 2014
changing reg in insn 2014
changing reg in insn 2015
changing reg in insn 2015
changing reg in insn 2017
changing reg in insn 2018
changing reg in insn 2019
changing reg in insn 2019
changing reg in insn 2023
changing reg in insn 2021
changing reg in insn 2023
changing reg in insn 2033
changing reg in insn 2034
changing reg in insn 2034
changing reg in insn 2038
changing reg in insn 2036
changing reg in insn 2037
changing reg in insn 2037
changing reg in insn 2038
changing reg in insn 2038
changing reg in insn 2040
changing reg in insn 2041
changing reg in insn 2042
changing reg in insn 2042
changing reg in insn 2044
changing reg in insn 2044
changing reg in insn 2046
changing reg in insn 2047
changing reg in insn 2047
changing reg in insn 2048
changing reg in insn 2048
changing reg in insn 2052
changing reg in insn 2050
changing reg in insn 2051
changing reg in insn 2051
changing reg in insn 2052
changing reg in insn 2052
changing reg in insn 2054
changing reg in insn 2055
changing reg in insn 2056
changing reg in insn 2056
changing reg in insn 2058
changing reg in insn 2058
changing reg in insn 2059
changing reg in insn 2060
changing reg in insn 2060
changing reg in insn 2065
changing reg in insn 2066
changing reg in insn 2066
changing reg in insn 2070
changing reg in insn 2068
changing reg in insn 2069
changing reg in insn 2069
changing reg in insn 2070
changing reg in insn 2070
changing reg in insn 2072
changing reg in insn 2073
changing reg in insn 2074
changing reg in insn 2074
changing reg in insn 2076
changing reg in insn 2076
changing reg in insn 2078
changing reg in insn 2078
changing reg in insn 2080
changing reg in insn 2080
changing reg in insn 2102
changing reg in insn 2103
changing reg in insn 2103
changing reg in insn 2104
changing reg in insn 2104
changing reg in insn 2108
changing reg in insn 2106
changing reg in insn 2107
changing reg in insn 2107
changing reg in insn 2108
changing reg in insn 2108
changing reg in insn 2110
changing reg in insn 2111
changing reg in insn 2112
changing reg in insn 2112
changing reg in insn 2114
changing reg in insn 2114
changing reg in insn 2128
changing reg in insn 2116
changing reg in insn 2117
changing reg in insn 2117
changing reg in insn 2121
changing reg in insn 2119
changing reg in insn 2120
changing reg in insn 2120
changing reg in insn 2121
changing reg in insn 2121
changing reg in insn 2123
changing reg in insn 2124
changing reg in insn 2125
changing reg in insn 2125
changing reg in insn 2127
changing reg in insn 2127
changing reg in insn 2128
changing reg in insn 2131
changing reg in insn 2132
changing reg in insn 2132
changing reg in insn 2136
changing reg in insn 2134
changing reg in insn 2135
changing reg in insn 2135
changing reg in insn 2136
changing reg in insn 2136
changing reg in insn 2138
changing reg in insn 2139
changing reg in insn 2140
changing reg in insn 2140
changing reg in insn 2142
changing reg in insn 2142
changing reg in insn 2144
changing reg in insn 2145
changing reg in insn 2145
changing reg in insn 2146
changing reg in insn 2146
changing reg in insn 2150
changing reg in insn 2148
changing reg in insn 2149
changing reg in insn 2149
changing reg in insn 2150
changing reg in insn 2150
changing reg in insn 2152
changing reg in insn 2153
changing reg in insn 2154
changing reg in insn 2154
changing reg in insn 2156
changing reg in insn 2156
changing reg in insn 2157
changing reg in insn 2158
changing reg in insn 2158
changing reg in insn 2163
changing reg in insn 2164
changing reg in insn 2164
changing reg in insn 2168
changing reg in insn 2166
changing reg in insn 2167
changing reg in insn 2167
changing reg in insn 2168
changing reg in insn 2168
changing reg in insn 2170
changing reg in insn 2171
changing reg in insn 2172
changing reg in insn 2172
changing reg in insn 2175
changing reg in insn 2177
changing reg in insn 2178
changing reg in insn 2178
changing reg in insn 2182
changing reg in insn 2180
changing reg in insn 2181
changing reg in insn 2181
changing reg in insn 2182
changing reg in insn 2182
changing reg in insn 2184
changing reg in insn 2185
changing reg in insn 2186
changing reg in insn 2186
changing reg in insn 2199
changing reg in insn 2188
changing reg in insn 2189
changing reg in insn 2189
changing reg in insn 2193
changing reg in insn 2191
changing reg in insn 2192
changing reg in insn 2192
changing reg in insn 2193
changing reg in insn 2193
changing reg in insn 2195
changing reg in insn 2196
changing reg in insn 2197
changing reg in insn 2197
changing reg in insn 2202
changing reg in insn 2200
changing reg in insn 2202
changing reg in insn 2204
changing reg in insn 2205
changing reg in insn 2205
changing reg in insn 2209
changing reg in insn 2207
changing reg in insn 2208
changing reg in insn 2208
changing reg in insn 2209
changing reg in insn 2209
changing reg in insn 2211
changing reg in insn 2212
changing reg in insn 2213
changing reg in insn 2213
changing reg in insn 2226
changing reg in insn 2215
changing reg in insn 2216
changing reg in insn 2216
changing reg in insn 2220
changing reg in insn 2218
changing reg in insn 2219
changing reg in insn 2219
changing reg in insn 2220
changing reg in insn 2220
changing reg in insn 2222
changing reg in insn 2223
changing reg in insn 2224
changing reg in insn 2224
changing reg in insn 2229
changing reg in insn 2227
changing reg in insn 2229
changing reg in insn 2231
changing reg in insn 2232
changing reg in insn 2232
changing reg in insn 2236
changing reg in insn 2234
changing reg in insn 2235
changing reg in insn 2235
changing reg in insn 2236
changing reg in insn 2236
changing reg in insn 2238
changing reg in insn 2239
changing reg in insn 2240
changing reg in insn 2240
changing reg in insn 2242
changing reg in insn 2243
changing reg in insn 2245
changing reg in insn 2250
changing reg in insn 2253
changing reg in insn 2254
changing reg in insn 2255
changing reg in insn 2282
changing reg in insn 2283
changing reg in insn 2283
changing reg in insn 2287
changing reg in insn 2285
changing reg in insn 2286
changing reg in insn 2286
changing reg in insn 2287
changing reg in insn 2287
changing reg in insn 2289
changing reg in insn 2290
changing reg in insn 2291
changing reg in insn 2291
changing reg in insn 2293
changing reg in insn 2294
changing reg in insn 2296
changing reg in insn 2296
changing reg in insn 2297
changing reg in insn 2297
changing reg in insn 2299
changing reg in insn 2317
changing reg in insn 2301
changing reg in insn 2302
changing reg in insn 2302
changing reg in insn 2306
changing reg in insn 2304
changing reg in insn 2305
changing reg in insn 2305
changing reg in insn 2306
changing reg in insn 2306
changing reg in insn 2308
changing reg in insn 2309
changing reg in insn 2310
changing reg in insn 2310
changing reg in insn 2312
changing reg in insn 2313
changing reg in insn 2315
changing reg in insn 2315
changing reg in insn 2316
changing reg in insn 2316
changing reg in insn 2317
changing reg in insn 2317
changing reg in insn 2318
changing reg in insn 2320
changing reg in insn 2327
changing reg in insn 2330
changing reg in insn 2331
changing reg in insn 2332
changing reg in insn 2338
changing reg in insn 2339
changing reg in insn 2339
changing reg in insn 2340
changing reg in insn 2340
changing reg in insn 2342
changing reg in insn 2346
changing reg in insn 2349
changing reg in insn 2350
changing reg in insn 2350
changing reg in insn 2351
changing reg in insn 2353
changing reg in insn 2353
changing reg in insn 2354
changing reg in insn 2354
changing reg in insn 2356
changing reg in insn 2386
changing reg in insn 2387
changing reg in insn 2387
changing reg in insn 2389
changing reg in insn 2390
changing reg in insn 2391
changing reg in insn 2391
changing reg in insn 2393
changing reg in insn 2393
changing reg in insn 2395
changing reg in insn 2414
changing reg in insn 2415
changing reg in insn 2415
changing reg in insn 2419
changing reg in insn 2417
changing reg in insn 2418
changing reg in insn 2418
changing reg in insn 2419
changing reg in insn 2419
changing reg in insn 2421
changing reg in insn 2422
changing reg in insn 2423
changing reg in insn 2423
changing reg in insn 2426
changing reg in insn 2428
changing reg in insn 2429
changing reg in insn 2429
changing reg in insn 2433
changing reg in insn 2431
changing reg in insn 2432
changing reg in insn 2432
changing reg in insn 2433
changing reg in insn 2433
changing reg in insn 2435
changing reg in insn 2436
changing reg in insn 2437
changing reg in insn 2437
changing reg in insn 2450
changing reg in insn 2439
changing reg in insn 2440
changing reg in insn 2440
changing reg in insn 2444
changing reg in insn 2442
changing reg in insn 2443
changing reg in insn 2443
changing reg in insn 2444
changing reg in insn 2444
changing reg in insn 2446
changing reg in insn 2447
changing reg in insn 2448
changing reg in insn 2448
changing reg in insn 2452
changing reg in insn 2450
changing reg in insn 2452
changing reg in insn 2454
changing reg in insn 2455
changing reg in insn 2455
changing reg in insn 2459
changing reg in insn 2457
changing reg in insn 2458
changing reg in insn 2458
changing reg in insn 2459
changing reg in insn 2459
changing reg in insn 2461
changing reg in insn 2462
changing reg in insn 2463
changing reg in insn 2463
changing reg in insn 2465
changing reg in insn 2466
changing reg in insn 2468
changing reg in insn 2469
changing reg in insn 2469
changing reg in insn 2473
changing reg in insn 2471
changing reg in insn 2472
changing reg in insn 2472
changing reg in insn 2473
changing reg in insn 2473
changing reg in insn 2475
changing reg in insn 2476
changing reg in insn 2477
changing reg in insn 2477
changing reg in insn 2479
changing reg in insn 2479
changing reg in insn 2480
changing reg in insn 2481
changing reg in insn 2481
changing reg in insn 2484
changing reg in insn 2485
changing reg in insn 2485
changing reg in insn 2489
changing reg in insn 2487
changing reg in insn 2488
changing reg in insn 2488
changing reg in insn 2489
changing reg in insn 2489
changing reg in insn 2491
changing reg in insn 2492
changing reg in insn 2493
changing reg in insn 2493
changing reg in insn 2497
changing reg in insn 2495
changing reg in insn 2497
changing reg in insn 2501
changing reg in insn 2502
changing reg in insn 2502
changing reg in insn 2506
changing reg in insn 2504
changing reg in insn 2505
changing reg in insn 2505
changing reg in insn 2506
changing reg in insn 2506
changing reg in insn 2508
changing reg in insn 2509
changing reg in insn 2510
changing reg in insn 2510
changing reg in insn 2512
changing reg in insn 2512
changing reg in insn 2537
changing reg in insn 2514
changing reg in insn 2515
changing reg in insn 2515
changing reg in insn 2519
changing reg in insn 2517
changing reg in insn 2518
changing reg in insn 2518
changing reg in insn 2519
changing reg in insn 2519
changing reg in insn 2521
changing reg in insn 2522
changing reg in insn 2523
changing reg in insn 2523
changing reg in insn 2525
changing reg in insn 2525
changing reg in insn 2537
changing reg in insn 2527
changing reg in insn 2528
changing reg in insn 2528
changing reg in insn 2532
changing reg in insn 2530
changing reg in insn 2531
changing reg in insn 2531
changing reg in insn 2532
changing reg in insn 2532
changing reg in insn 2534
changing reg in insn 2535
changing reg in insn 2536
changing reg in insn 2536
changing reg in insn 2539
changing reg in insn 2537
changing reg in insn 2539
changing reg in insn 2541
changing reg in insn 2542
changing reg in insn 2542
changing reg in insn 2546
changing reg in insn 2544
changing reg in insn 2545
changing reg in insn 2545
changing reg in insn 2546
changing reg in insn 2546
changing reg in insn 2548
changing reg in insn 2549
changing reg in insn 2550
changing reg in insn 2550
changing reg in insn 2552
changing reg in insn 2552
changing reg in insn 2554
changing reg in insn 2561
changing reg in insn 2562
changing reg in insn 2562
changing reg in insn 2566
changing reg in insn 2564
changing reg in insn 2565
changing reg in insn 2565
changing reg in insn 2566
changing reg in insn 2566
changing reg in insn 2568
changing reg in insn 2569
changing reg in insn 2570
changing reg in insn 2570
changing reg in insn 2573
changing reg in insn 2575
changing reg in insn 2576
changing reg in insn 2576
changing reg in insn 2580
changing reg in insn 2578
changing reg in insn 2579
changing reg in insn 2579
changing reg in insn 2580
changing reg in insn 2580
changing reg in insn 2582
changing reg in insn 2583
changing reg in insn 2584
changing reg in insn 2584
changing reg in insn 2586
changing reg in insn 2586
changing reg in insn 2588
changing reg in insn 2589
changing reg in insn 2589
changing reg in insn 2593
changing reg in insn 2591
changing reg in insn 2592
changing reg in insn 2592
changing reg in insn 2593
changing reg in insn 2593
changing reg in insn 2595
changing reg in insn 2596
changing reg in insn 2597
changing reg in insn 2597
changing reg in insn 2599
changing reg in insn 2599
changing reg in insn 2601
changing reg in insn 2602
changing reg in insn 2602
changing reg in insn 2606
changing reg in insn 2604
changing reg in insn 2605
changing reg in insn 2605
changing reg in insn 2606
changing reg in insn 2606
changing reg in insn 2608
changing reg in insn 2609
changing reg in insn 2610
changing reg in insn 2610
changing reg in insn 2613
changing reg in insn 2611
changing reg in insn 2613
changing reg in insn 2617
changing reg in insn 2618
changing reg in insn 2618
changing reg in insn 2622
changing reg in insn 2620
changing reg in insn 2621
changing reg in insn 2621
changing reg in insn 2622
changing reg in insn 2622
changing reg in insn 2624
changing reg in insn 2625
changing reg in insn 2626
changing reg in insn 2626
changing reg in insn 2628
changing reg in insn 2628
changing reg in insn 2630
changing reg in insn 2637
changing reg in insn 2638
changing reg in insn 2638
changing reg in insn 2642
changing reg in insn 2640
changing reg in insn 2641
changing reg in insn 2641
changing reg in insn 2642
changing reg in insn 2642
changing reg in insn 2644
changing reg in insn 2645
changing reg in insn 2646
changing reg in insn 2646
changing reg in insn 2649
changing reg in insn 2651
changing reg in insn 2652
changing reg in insn 2652
changing reg in insn 2656
changing reg in insn 2654
changing reg in insn 2655
changing reg in insn 2655
changing reg in insn 2656
changing reg in insn 2656
changing reg in insn 2658
changing reg in insn 2659
changing reg in insn 2660
changing reg in insn 2660
changing reg in insn 2662
changing reg in insn 2662
changing reg in insn 2664
changing reg in insn 2665
changing reg in insn 2665
changing reg in insn 2669
changing reg in insn 2667
changing reg in insn 2668
changing reg in insn 2668
changing reg in insn 2669
changing reg in insn 2669
changing reg in insn 2671
changing reg in insn 2672
changing reg in insn 2673
changing reg in insn 2673
changing reg in insn 2675
changing reg in insn 2675
changing reg in insn 2677
changing reg in insn 2678
changing reg in insn 2678
changing reg in insn 2682
changing reg in insn 2680
changing reg in insn 2681
changing reg in insn 2681
changing reg in insn 2682
changing reg in insn 2682
changing reg in insn 2684
changing reg in insn 2685
changing reg in insn 2686
changing reg in insn 2686
changing reg in insn 2689
changing reg in insn 2687
changing reg in insn 2689
changing reg in insn 2723
changing reg in insn 2724
changing reg in insn 2724
changing reg in insn 2728
changing reg in insn 2726
changing reg in insn 2727
changing reg in insn 2727
changing reg in insn 2728
changing reg in insn 2728
changing reg in insn 2730
changing reg in insn 2731
changing reg in insn 2732
changing reg in insn 2732
changing reg in insn 2734
changing reg in insn 2734
changing reg in insn 2739
changing reg in insn 2736
changing reg in insn 2749
changing reg in insn 2750
changing reg in insn 2750
changing reg in insn 2751
changing reg in insn 2752
changing reg in insn 2757
changing reg in insn 2760
changing reg in insn 2761
changing reg in insn 2761
changing reg in insn 2762
changing reg in insn 2763
changing reg in insn 2768
changing reg in insn 2779
changing reg in insn 2780
changing reg in insn 2780
changing reg in insn 2784
changing reg in insn 2782
changing reg in insn 2783
changing reg in insn 2783
changing reg in insn 2784
changing reg in insn 2784
changing reg in insn 2786
changing reg in insn 2787
changing reg in insn 2788
changing reg in insn 2788
changing reg in insn 2790
changing reg in insn 2790
changing reg in insn 2804
changing reg in insn 2792
changing reg in insn 2793
changing reg in insn 2793
changing reg in insn 2797
changing reg in insn 2795
changing reg in insn 2796
changing reg in insn 2796
changing reg in insn 2797
changing reg in insn 2797
changing reg in insn 2799
changing reg in insn 2800
changing reg in insn 2801
changing reg in insn 2801
changing reg in insn 2803
changing reg in insn 2803
changing reg in insn 2804
changing reg in insn 2804
changing reg in insn 2819
changing reg in insn 2806
changing reg in insn 2807
changing reg in insn 2807
changing reg in insn 2812
changing reg in insn 2809
changing reg in insn 2810
changing reg in insn 2810
changing reg in insn 2811
changing reg in insn 2811
changing reg in insn 2812
changing reg in insn 2812
changing reg in insn 2814
changing reg in insn 2815
changing reg in insn 2816
changing reg in insn 2816
changing reg in insn 2818
changing reg in insn 2818
changing reg in insn 2819
changing reg in insn 2819
changing reg in insn 2834
changing reg in insn 2821
changing reg in insn 2822
changing reg in insn 2822
changing reg in insn 2827
changing reg in insn 2824
changing reg in insn 2825
changing reg in insn 2825
changing reg in insn 2826
changing reg in insn 2826
changing reg in insn 2827
changing reg in insn 2827
changing reg in insn 2829
changing reg in insn 2830
changing reg in insn 2831
changing reg in insn 2831
changing reg in insn 2833
changing reg in insn 2833
changing reg in insn 2834
changing reg in insn 2834
changing reg in insn 2849
changing reg in insn 2836
changing reg in insn 2837
changing reg in insn 2837
changing reg in insn 2838
changing reg in insn 2838
changing reg in insn 2842
changing reg in insn 2840
changing reg in insn 2841
changing reg in insn 2841
changing reg in insn 2842
changing reg in insn 2842
changing reg in insn 2844
changing reg in insn 2845
changing reg in insn 2846
changing reg in insn 2846
changing reg in insn 2848
changing reg in insn 2848
changing reg in insn 2849
changing reg in insn 2849
changing reg in insn 2864
changing reg in insn 2851
changing reg in insn 2852
changing reg in insn 2852
changing reg in insn 2853
changing reg in insn 2853
changing reg in insn 2857
changing reg in insn 2855
changing reg in insn 2856
changing reg in insn 2856
changing reg in insn 2857
changing reg in insn 2857
changing reg in insn 2859
changing reg in insn 2860
changing reg in insn 2861
changing reg in insn 2861
changing reg in insn 2863
changing reg in insn 2863
changing reg in insn 2864
changing reg in insn 2864
changing reg in insn 2880
changing reg in insn 2866
changing reg in insn 2867
changing reg in insn 2867
changing reg in insn 2868
changing reg in insn 2868
changing reg in insn 2873
changing reg in insn 2870
changing reg in insn 2871
changing reg in insn 2871
changing reg in insn 2872
changing reg in insn 2872
changing reg in insn 2873
changing reg in insn 2873
changing reg in insn 2875
changing reg in insn 2876
changing reg in insn 2877
changing reg in insn 2877
changing reg in insn 2879
changing reg in insn 2879
changing reg in insn 2880
changing reg in insn 2880
changing reg in insn 2882
changing reg in insn 2883
changing reg in insn 2883
changing reg in insn 2884
changing reg in insn 2884
changing reg in insn 2889
changing reg in insn 2886
changing reg in insn 2887
changing reg in insn 2887
changing reg in insn 2888
changing reg in insn 2888
changing reg in insn 2889
changing reg in insn 2889
changing reg in insn 2891
changing reg in insn 2892
changing reg in insn 2893
changing reg in insn 2893
changing reg in insn 2895
changing reg in insn 2895
changing reg in insn 2896
changing reg in insn 2897
changing reg in insn 2897
changing reg in insn 2902
changing reg in insn 2903
changing reg in insn 2903
changing reg in insn 2907
changing reg in insn 2905
changing reg in insn 2906
changing reg in insn 2906
changing reg in insn 2907
changing reg in insn 2907
changing reg in insn 2909
changing reg in insn 2910
changing reg in insn 2911
changing reg in insn 2911
changing reg in insn 2913
changing reg in insn 2913
changing reg in insn 2915
changing reg in insn 2915
changing reg in insn 2917
changing reg in insn 2917
changing reg in insn 2939
changing reg in insn 2940
changing reg in insn 2940
changing reg in insn 2944
changing reg in insn 2942
changing reg in insn 2943
changing reg in insn 2943
changing reg in insn 2944
changing reg in insn 2944
changing reg in insn 2946
changing reg in insn 2947
changing reg in insn 2948
changing reg in insn 2948
changing reg in insn 2961
changing reg in insn 2950
changing reg in insn 2951
changing reg in insn 2951
changing reg in insn 2955
changing reg in insn 2953
changing reg in insn 2954
changing reg in insn 2954
changing reg in insn 2955
changing reg in insn 2955
changing reg in insn 2957
changing reg in insn 2958
changing reg in insn 2959
changing reg in insn 2959
changing reg in insn 2964
changing reg in insn 2962
changing reg in insn 2964
changing reg in insn 2966
changing reg in insn 2967
changing reg in insn 2967
changing reg in insn 2971
changing reg in insn 2969
changing reg in insn 2970
changing reg in insn 2970
changing reg in insn 2971
changing reg in insn 2971
changing reg in insn 2973
changing reg in insn 2974
changing reg in insn 2975
changing reg in insn 2975
changing reg in insn 2988
changing reg in insn 2977
changing reg in insn 2978
changing reg in insn 2978
changing reg in insn 2982
changing reg in insn 2980
changing reg in insn 2981
changing reg in insn 2981
changing reg in insn 2982
changing reg in insn 2982
changing reg in insn 2984
changing reg in insn 2985
changing reg in insn 2986
changing reg in insn 2986
changing reg in insn 2991
changing reg in insn 2989
changing reg in insn 2991
changing reg in insn 936
changing reg in insn 925
changing reg in insn 939
changing reg in insn 929
changing reg in insn 929
changing reg in insn 926
changing reg in insn 1013
changing reg in insn 1001
changing reg in insn 1016
changing reg in insn 1006
changing reg in insn 1006
changing reg in insn 1003
changing reg in insn 2258
changing reg in insn 2247
changing reg in insn 2261
changing reg in insn 2251
changing reg in insn 2251
changing reg in insn 2248
changing reg in insn 2335
changing reg in insn 2323
changing reg in insn 2338
changing reg in insn 2328
changing reg in insn 2328
changing reg in insn 2325
changing reg in insn 13
changing reg in insn 15
changing reg in insn 14
changing reg in insn 17
changing reg in insn 19
changing reg in insn 20
changing reg in insn 27
changing reg in insn 28
changing reg in insn 68
changing reg in insn 69
changing reg in insn 72
changing reg in insn 74
changing reg in insn 73
changing reg in insn 76
changing reg in insn 78
changing reg in insn 79
changing reg in insn 86
changing reg in insn 87
changing reg in insn 141
changing reg in insn 142
changing reg in insn 145
changing reg in insn 147
changing reg in insn 146
changing reg in insn 149
changing reg in insn 151
changing reg in insn 152
changing reg in insn 159
changing reg in insn 160
changing reg in insn 369
changing reg in insn 370
changing reg in insn 373
changing reg in insn 375
changing reg in insn 374
changing reg in insn 377
changing reg in insn 379
changing reg in insn 380
changing reg in insn 387
changing reg in insn 388
changing reg in insn 1144
changing reg in insn 1145
changing reg in insn 1168
changing reg in insn 1169
changing reg in insn 1172
changing reg in insn 1174
changing reg in insn 1173
changing reg in insn 1176
changing reg in insn 1178
changing reg in insn 1179
changing reg in insn 1186
changing reg in insn 1187
changing reg in insn 1528
changing reg in insn 1529
changing reg in insn 1532
changing reg in insn 1534
changing reg in insn 1533
changing reg in insn 1536
changing reg in insn 1538
changing reg in insn 1539
changing reg in insn 1546
changing reg in insn 1547
changing reg in insn 1797
changing reg in insn 1799
changing reg in insn 1798
changing reg in insn 1801
changing reg in insn 1803
changing reg in insn 1804
changing reg in insn 1811
changing reg in insn 1812
changing reg in insn 1932
changing reg in insn 1933
changing reg in insn 1936
changing reg in insn 1938
changing reg in insn 1937
changing reg in insn 1940
changing reg in insn 1942
changing reg in insn 1943
changing reg in insn 1950
changing reg in insn 1951
changing reg in insn 2028
changing reg in insn 2029
changing reg in insn 2704
changing reg in insn 2706
changing reg in insn 2705
changing reg in insn 2708
changing reg in insn 2710
changing reg in insn 2711
changing reg in insn 2718
changing reg in insn 2719
changing reg in insn 2774
changing reg in insn 2775
changing reg in insn 11
changing reg in insn 12
changing reg in insn 18
changing reg in insn 19
changing reg in insn 26
changing reg in insn 27
changing reg in insn 31
changing reg in insn 32
changing reg in insn 34
changing reg in insn 35
changing reg in insn 38
changing reg in insn 39
changing reg in insn 40
changing reg in insn 41
changing reg in insn 42
changing reg in insn 43
changing reg in insn 45
changing reg in insn 46
changing reg in insn 50
changing reg in insn 51
changing reg in insn 67
changing reg in insn 68
changing reg in insn 77
changing reg in insn 78
changing reg in insn 85
changing reg in insn 86
changing reg in insn 90
changing reg in insn 91
changing reg in insn 94
changing reg in insn 95
changing reg in insn 98
changing reg in insn 99
changing reg in insn 102
changing reg in insn 103
changing reg in insn 104
changing reg in insn 105
changing reg in insn 107
changing reg in insn 108
changing reg in insn 111
changing reg in insn 112
changing reg in insn 115
changing reg in insn 116
changing reg in insn 117
changing reg in insn 118
changing reg in insn 140
changing reg in insn 141
changing reg in insn 150
changing reg in insn 151
changing reg in insn 158
changing reg in insn 159
changing reg in insn 163
changing reg in insn 164
changing reg in insn 166
changing reg in insn 167
changing reg in insn 170
changing reg in insn 171
changing reg in insn 174
changing reg in insn 176
changing reg in insn 175
changing reg in insn 176
changing reg in insn 177
changing reg in insn 178
changing reg in insn 180
changing reg in insn 181
changing reg in insn 184
changing reg in insn 185
changing reg in insn 188
changing reg in insn 190
changing reg in insn 189
changing reg in insn 190
changing reg in insn 191
changing reg in insn 192
changing reg in insn 194
changing reg in insn 195
changing reg in insn 198
changing reg in insn 199
changing reg in insn 202
changing reg in insn 204
changing reg in insn 203
changing reg in insn 204
changing reg in insn 205
changing reg in insn 206
changing reg in insn 208
changing reg in insn 209
changing reg in insn 212
changing reg in insn 213
changing reg in insn 216
changing reg in insn 218
changing reg in insn 217
changing reg in insn 218
changing reg in insn 219
changing reg in insn 220
changing reg in insn 222
changing reg in insn 223
changing reg in insn 226
changing reg in insn 227
changing reg in insn 230
changing reg in insn 232
changing reg in insn 231
changing reg in insn 232
changing reg in insn 233
changing reg in insn 234
changing reg in insn 236
changing reg in insn 237
changing reg in insn 240
changing reg in insn 241
changing reg in insn 244
changing reg in insn 246
changing reg in insn 245
changing reg in insn 246
changing reg in insn 247
changing reg in insn 248
changing reg in insn 250
changing reg in insn 251
changing reg in insn 254
changing reg in insn 255
changing reg in insn 258
changing reg in insn 260
changing reg in insn 259
changing reg in insn 260
changing reg in insn 261
changing reg in insn 262
changing reg in insn 264
changing reg in insn 265
changing reg in insn 268
changing reg in insn 269
changing reg in insn 272
changing reg in insn 274
changing reg in insn 273
changing reg in insn 274
changing reg in insn 275
changing reg in insn 276
changing reg in insn 278
changing reg in insn 279
changing reg in insn 282
changing reg in insn 283
changing reg in insn 286
changing reg in insn 287
changing reg in insn 288
changing reg in insn 289
changing reg in insn 291
changing reg in insn 292
changing reg in insn 295
changing reg in insn 296
changing reg in insn 299
changing reg in insn 301
changing reg in insn 300
changing reg in insn 301
changing reg in insn 302
changing reg in insn 303
changing reg in insn 305
changing reg in insn 306
changing reg in insn 309
changing reg in insn 310
changing reg in insn 313
changing reg in insn 315
changing reg in insn 314
changing reg in insn 315
changing reg in insn 316
changing reg in insn 317
changing reg in insn 319
changing reg in insn 320
changing reg in insn 323
changing reg in insn 324
changing reg in insn 327
changing reg in insn 329
changing reg in insn 328
changing reg in insn 329
changing reg in insn 330
changing reg in insn 331
changing reg in insn 333
changing reg in insn 334
changing reg in insn 337
changing reg in insn 338
changing reg in insn 341
changing reg in insn 343
changing reg in insn 342
changing reg in insn 343
changing reg in insn 356
changing reg in insn 357
changing reg in insn 357
changing reg in insn 361
changing reg in insn 358
changing reg in insn 359
changing reg in insn 368
changing reg in insn 369
changing reg in insn 378
changing reg in insn 379
changing reg in insn 386
changing reg in insn 387
changing reg in insn 391
changing reg in insn 392
changing reg in insn 394
changing reg in insn 395
changing reg in insn 398
changing reg in insn 400
changing reg in insn 399
changing reg in insn 400
changing reg in insn 404
changing reg in insn 405
changing reg in insn 407
changing reg in insn 408
changing reg in insn 411
changing reg in insn 412
changing reg in insn 412
changing reg in insn 413
changing reg in insn 414
changing reg in insn 415
changing reg in insn 417
changing reg in insn 418
changing reg in insn 421
changing reg in insn 422
changing reg in insn 425
changing reg in insn 426
changing reg in insn 433
changing reg in insn 434
changing reg in insn 436
changing reg in insn 437
changing reg in insn 440
changing reg in insn 441
changing reg in insn 444
changing reg in insn 446
changing reg in insn 445
changing reg in insn 446
changing reg in insn 447
changing reg in insn 448
changing reg in insn 454
changing reg in insn 455
changing reg in insn 457
changing reg in insn 458
changing reg in insn 461
changing reg in insn 463
changing reg in insn 462
changing reg in insn 463
changing reg in insn 468
changing reg in insn 469
changing reg in insn 471
changing reg in insn 472
changing reg in insn 475
changing reg in insn 476
changing reg in insn 479
changing reg in insn 481
changing reg in insn 480
changing reg in insn 481
changing reg in insn 488
changing reg in insn 489
changing reg in insn 491
changing reg in insn 492
changing reg in insn 495
changing reg in insn 497
changing reg in insn 496
changing reg in insn 497
changing reg in insn 502
changing reg in insn 503
changing reg in insn 505
changing reg in insn 506
changing reg in insn 512
changing reg in insn 513
changing reg in insn 515
changing reg in insn 516
changing reg in insn 519
changing reg in insn 521
changing reg in insn 520
changing reg in insn 521
changing reg in insn 526
changing reg in insn 527
changing reg in insn 529
changing reg in insn 530
changing reg in insn 533
changing reg in insn 535
changing reg in insn 534
changing reg in insn 535
changing reg in insn 540
changing reg in insn 541
changing reg in insn 543
changing reg in insn 544
changing reg in insn 547
changing reg in insn 548
changing reg in insn 551
changing reg in insn 552
changing reg in insn 553
changing reg in insn 554
changing reg in insn 557
changing reg in insn 558
changing reg in insn 561
changing reg in insn 562
changing reg in insn 565
changing reg in insn 566
changing reg in insn 570
changing reg in insn 571
changing reg in insn 569
changing reg in insn 572
changing reg in insn 573
changing reg in insn 575
changing reg in insn 576
changing reg in insn 579
changing reg in insn 580
changing reg in insn 583
changing reg in insn 584
changing reg in insn 591
changing reg in insn 592
changing reg in insn 595
changing reg in insn 596
changing reg in insn 599
changing reg in insn 600
changing reg in insn 603
changing reg in insn 604
changing reg in insn 605
changing reg in insn 606
changing reg in insn 612
changing reg in insn 613
changing reg in insn 616
changing reg in insn 617
changing reg in insn 620
changing reg in insn 621
changing reg in insn 624
changing reg in insn 625
changing reg in insn 626
changing reg in insn 627
changing reg in insn 629
changing reg in insn 630
changing reg in insn 633
changing reg in insn 634
changing reg in insn 637
changing reg in insn 638
changing reg in insn 639
changing reg in insn 640
changing reg in insn 641
changing reg in insn 642
changing reg in insn 644
changing reg in insn 645
changing reg in insn 648
changing reg in insn 649
changing reg in insn 652
changing reg in insn 653
changing reg in insn 654
changing reg in insn 655
changing reg in insn 657
changing reg in insn 658
changing reg in insn 661
changing reg in insn 662
changing reg in insn 666
changing reg in insn 667
changing reg in insn 668
changing reg in insn 669
changing reg in insn 671
changing reg in insn 672
changing reg in insn 675
changing reg in insn 676
changing reg in insn 679
changing reg in insn 680
changing reg in insn 681
changing reg in insn 682
changing reg in insn 684
changing reg in insn 685
changing reg in insn 688
changing reg in insn 689
changing reg in insn 692
changing reg in insn 694
changing reg in insn 695
changing reg in insn 696
changing reg in insn 697
changing reg in insn 699
changing reg in insn 700
changing reg in insn 703
changing reg in insn 704
changing reg in insn 707
changing reg in insn 708
changing reg in insn 709
changing reg in insn 710
changing reg in insn 712
changing reg in insn 713
changing reg in insn 716
changing reg in insn 717
changing reg in insn 720
changing reg in insn 721
changing reg in insn 722
changing reg in insn 723
changing reg in insn 724
changing reg in insn 725
changing reg in insn 727
changing reg in insn 728
changing reg in insn 731
changing reg in insn 732
changing reg in insn 735
changing reg in insn 736
changing reg in insn 737
changing reg in insn 738
changing reg in insn 740
changing reg in insn 741
changing reg in insn 744
changing reg in insn 745
changing reg in insn 748
changing reg in insn 750
changing reg in insn 749
changing reg in insn 750
changing reg in insn 752
changing reg in insn 753
changing reg in insn 755
changing reg in insn 756
changing reg in insn 759
changing reg in insn 760
changing reg in insn 764
changing reg in insn 765
changing reg in insn 766
changing reg in insn 767
changing reg in insn 769
changing reg in insn 770
changing reg in insn 773
changing reg in insn 774
changing reg in insn 777
changing reg in insn 778
changing reg in insn 779
changing reg in insn 780
changing reg in insn 782
changing reg in insn 783
changing reg in insn 786
changing reg in insn 787
changing reg in insn 790
changing reg in insn 792
changing reg in insn 791
changing reg in insn 792
changing reg in insn 794
changing reg in insn 795
changing reg in insn 797
changing reg in insn 798
changing reg in insn 801
changing reg in insn 802
changing reg in insn 806
changing reg in insn 807
changing reg in insn 808
changing reg in insn 809
changing reg in insn 811
changing reg in insn 812
changing reg in insn 815
changing reg in insn 816
changing reg in insn 819
changing reg in insn 820
changing reg in insn 821
changing reg in insn 822
changing reg in insn 824
changing reg in insn 825
changing reg in insn 828
changing reg in insn 829
changing reg in insn 832
changing reg in insn 833
changing reg in insn 835
changing reg in insn 836
changing reg in insn 838
changing reg in insn 839
changing reg in insn 842
changing reg in insn 843
changing reg in insn 847
changing reg in insn 848
changing reg in insn 849
changing reg in insn 850
changing reg in insn 852
changing reg in insn 853
changing reg in insn 856
changing reg in insn 857
changing reg in insn 860
changing reg in insn 861
changing reg in insn 862
changing reg in insn 863
changing reg in insn 865
changing reg in insn 866
changing reg in insn 869
changing reg in insn 870
changing reg in insn 873
changing reg in insn 875
changing reg in insn 874
changing reg in insn 875
changing reg in insn 876
changing reg in insn 877
changing reg in insn 879
changing reg in insn 880
changing reg in insn 883
changing reg in insn 884
changing reg in insn 887
changing reg in insn 888
changing reg in insn 892
changing reg in insn 894
changing reg in insn 895
changing reg in insn 897
changing reg in insn 898
changing reg in insn 901
changing reg in insn 902
changing reg in insn 906
changing reg in insn 907
changing reg in insn 908
changing reg in insn 909
changing reg in insn 911
changing reg in insn 912
changing reg in insn 915
changing reg in insn 916
changing reg in insn 919
changing reg in insn 921
changing reg in insn 920
changing reg in insn 921
changing reg in insn 923
changing reg in insn 924
changing reg in insn 922
changing reg in insn 923
changing reg in insn 927
changing reg in insn 928
changing reg in insn 930
changing reg in insn 931
changing reg in insn 940
changing reg in insn 941
changing reg in insn 942
changing reg in insn 943
changing reg in insn 944
changing reg in insn 945
changing reg in insn 951
changing reg in insn 952
changing reg in insn 953
changing reg in insn 954
changing reg in insn 957
changing reg in insn 959
changing reg in insn 960
changing reg in insn 962
changing reg in insn 963
changing reg in insn 966
changing reg in insn 967
changing reg in insn 970
changing reg in insn 972
changing reg in insn 971
changing reg in insn 972
changing reg in insn 973
changing reg in insn 974
changing reg in insn 976
changing reg in insn 978
changing reg in insn 979
changing reg in insn 981
changing reg in insn 982
changing reg in insn 985
changing reg in insn 986
changing reg in insn 989
changing reg in insn 991
changing reg in insn 990
changing reg in insn 991
changing reg in insn 992
changing reg in insn 993
changing reg in insn 999
changing reg in insn 1000
changing reg in insn 1004
changing reg in insn 1005
changing reg in insn 1002
changing reg in insn 1003
changing reg in insn 1007
changing reg in insn 1008
changing reg in insn 1020
changing reg in insn 1021
changing reg in insn 1019
changing reg in insn 1020
changing reg in insn 1022
changing reg in insn 1023
changing reg in insn 1025
changing reg in insn 1026
changing reg in insn 1030
changing reg in insn 1031
changing reg in insn 1034
changing reg in insn 1035
changing reg in insn 1033
changing reg in insn 1034
changing reg in insn 1036
changing reg in insn 1037
changing reg in insn 1043
changing reg in insn 1044
changing reg in insn 1049
changing reg in insn 1051
changing reg in insn 1050
changing reg in insn 1051
changing reg in insn 1057
changing reg in insn 1058
changing reg in insn 1063
changing reg in insn 1064
changing reg in insn 1066
changing reg in insn 1067
changing reg in insn 1070
changing reg in insn 1071
changing reg in insn 1072
changing reg in insn 1073
changing reg in insn 1079
changing reg in insn 1080
changing reg in insn 1085
changing reg in insn 1086
changing reg in insn 1089
changing reg in insn 1090
changing reg in insn 1091
changing reg in insn 1092
changing reg in insn 1094
changing reg in insn 1095
changing reg in insn 1098
changing reg in insn 1099
changing reg in insn 1102
changing reg in insn 1103
changing reg in insn 1104
changing reg in insn 1105
changing reg in insn 1106
changing reg in insn 1107
changing reg in insn 1109
changing reg in insn 1110
changing reg in insn 1113
changing reg in insn 1114
changing reg in insn 1118
changing reg in insn 1119
changing reg in insn 1143
changing reg in insn 1144
changing reg in insn 1148
changing reg in insn 1149
changing reg in insn 1152
changing reg in insn 1153
changing reg in insn 1167
changing reg in insn 1168
changing reg in insn 1177
changing reg in insn 1178
changing reg in insn 1185
changing reg in insn 1186
changing reg in insn 1190
changing reg in insn 1191
changing reg in insn 1193
changing reg in insn 1194
changing reg in insn 1199
changing reg in insn 1200
changing reg in insn 1198
changing reg in insn 1201
changing reg in insn 1202
changing reg in insn 1204
changing reg in insn 1205
changing reg in insn 1210
changing reg in insn 1211
changing reg in insn 1209
changing reg in insn 1212
changing reg in insn 1213
changing reg in insn 1215
changing reg in insn 1216
changing reg in insn 1219
changing reg in insn 1220
changing reg in insn 1223
changing reg in insn 1224
changing reg in insn 1225
changing reg in insn 1226
changing reg in insn 1228
changing reg in insn 1229
changing reg in insn 1232
changing reg in insn 1233
changing reg in insn 1236
changing reg in insn 1237
changing reg in insn 1239
changing reg in insn 1240
changing reg in insn 1242
changing reg in insn 1243
changing reg in insn 1247
changing reg in insn 1248
changing reg in insn 1251
changing reg in insn 1252
changing reg in insn 1254
changing reg in insn 1255
changing reg in insn 1257
changing reg in insn 1258
changing reg in insn 1262
changing reg in insn 1263
changing reg in insn 1266
changing reg in insn 1267
changing reg in insn 1271
changing reg in insn 1272
changing reg in insn 1270
changing reg in insn 1273
changing reg in insn 1274
changing reg in insn 1277
changing reg in insn 1278
changing reg in insn 1281
changing reg in insn 1282
changing reg in insn 1285
changing reg in insn 1286
changing reg in insn 1287
changing reg in insn 1288
changing reg in insn 1291
changing reg in insn 1292
changing reg in insn 1295
changing reg in insn 1296
changing reg in insn 1299
changing reg in insn 1300
changing reg in insn 1302
changing reg in insn 1303
changing reg in insn 1306
changing reg in insn 1307
changing reg in insn 1311
changing reg in insn 1312
changing reg in insn 1315
changing reg in insn 1316
changing reg in insn 1318
changing reg in insn 1319
changing reg in insn 1322
changing reg in insn 1323
changing reg in insn 1327
changing reg in insn 1328
changing reg in insn 1331
changing reg in insn 1332
changing reg in insn 1336
changing reg in insn 1337
changing reg in insn 1335
changing reg in insn 1339
changing reg in insn 1340
changing reg in insn 1338
changing reg in insn 1339
changing reg in insn 1341
changing reg in insn 1342
changing reg in insn 1345
changing reg in insn 1346
changing reg in insn 1344
changing reg in insn 1347
changing reg in insn 1348
changing reg in insn 1350
changing reg in insn 1351
changing reg in insn 1354
changing reg in insn 1355
changing reg in insn 1358
changing reg in insn 1359
changing reg in insn 1366
changing reg in insn 1367
changing reg in insn 1370
changing reg in insn 1371
changing reg in insn 1374
changing reg in insn 1375
changing reg in insn 1378
changing reg in insn 1379
changing reg in insn 1380
changing reg in insn 1381
changing reg in insn 1387
changing reg in insn 1388
changing reg in insn 1390
changing reg in insn 1391
changing reg in insn 1394
changing reg in insn 1395
changing reg in insn 1398
changing reg in insn 1399
changing reg in insn 1400
changing reg in insn 1401
changing reg in insn 1403
changing reg in insn 1404
changing reg in insn 1407
changing reg in insn 1408
changing reg in insn 1412
changing reg in insn 1413
changing reg in insn 1414
changing reg in insn 1415
changing reg in insn 1417
changing reg in insn 1418
changing reg in insn 1421
changing reg in insn 1422
changing reg in insn 1425
changing reg in insn 1426
changing reg in insn 1427
changing reg in insn 1428
changing reg in insn 1430
changing reg in insn 1431
changing reg in insn 1434
changing reg in insn 1435
changing reg in insn 1438
changing reg in insn 1440
changing reg in insn 1439
changing reg in insn 1440
changing reg in insn 1442
changing reg in insn 1443
changing reg in insn 1445
changing reg in insn 1446
changing reg in insn 1449
changing reg in insn 1450
changing reg in insn 1454
changing reg in insn 1455
changing reg in insn 1456
changing reg in insn 1457
changing reg in insn 1459
changing reg in insn 1460
changing reg in insn 1463
changing reg in insn 1464
changing reg in insn 1467
changing reg in insn 1468
changing reg in insn 1469
changing reg in insn 1470
changing reg in insn 1472
changing reg in insn 1473
changing reg in insn 1476
changing reg in insn 1477
changing reg in insn 1480
changing reg in insn 1482
changing reg in insn 1481
changing reg in insn 1482
changing reg in insn 1484
changing reg in insn 1485
changing reg in insn 1487
changing reg in insn 1488
changing reg in insn 1491
changing reg in insn 1492
changing reg in insn 1496
changing reg in insn 1497
changing reg in insn 1527
changing reg in insn 1528
changing reg in insn 1537
changing reg in insn 1538
changing reg in insn 1545
changing reg in insn 1546
changing reg in insn 1550
changing reg in insn 1551
changing reg in insn 1553
changing reg in insn 1554
changing reg in insn 1557
changing reg in insn 1558
changing reg in insn 1561
changing reg in insn 1562
changing reg in insn 1563
changing reg in insn 1564
changing reg in insn 1566
changing reg in insn 1567
changing reg in insn 1573
changing reg in insn 1574
changing reg in insn 1576
changing reg in insn 1577
changing reg in insn 1580
changing reg in insn 1581
changing reg in insn 1584
changing reg in insn 1585
changing reg in insn 1587
changing reg in insn 1588
changing reg in insn 1586
changing reg in insn 1587
changing reg in insn 1589
changing reg in insn 1590
changing reg in insn 1592
changing reg in insn 1593
changing reg in insn 1596
changing reg in insn 1597
changing reg in insn 1600
changing reg in insn 1601
changing reg in insn 1603
changing reg in insn 1604
changing reg in insn 1606
changing reg in insn 1607
changing reg in insn 1610
changing reg in insn 1611
changing reg in insn 1614
changing reg in insn 1615
changing reg in insn 1617
changing reg in insn 1618
changing reg in insn 1620
changing reg in insn 1621
changing reg in insn 1624
changing reg in insn 1625
changing reg in insn 1629
changing reg in insn 1630
changing reg in insn 1631
changing reg in insn 1632
changing reg in insn 1634
changing reg in insn 1635
changing reg in insn 1638
changing reg in insn 1639
changing reg in insn 1642
changing reg in insn 1643
changing reg in insn 1644
changing reg in insn 1645
changing reg in insn 1648
changing reg in insn 1649
changing reg in insn 1652
changing reg in insn 1653
changing reg in insn 1656
changing reg in insn 1657
changing reg in insn 1660
changing reg in insn 1661
changing reg in insn 1663
changing reg in insn 1664
changing reg in insn 1667
changing reg in insn 1668
changing reg in insn 1671
changing reg in insn 1673
changing reg in insn 1674
changing reg in insn 1675
changing reg in insn 1676
changing reg in insn 1678
changing reg in insn 1679
changing reg in insn 1682
changing reg in insn 1683
changing reg in insn 1686
changing reg in insn 1687
changing reg in insn 1688
changing reg in insn 1689
changing reg in insn 1691
changing reg in insn 1692
changing reg in insn 1695
changing reg in insn 1696
changing reg in insn 1700
changing reg in insn 1701
changing reg in insn 1702
changing reg in insn 1703
changing reg in insn 1705
changing reg in insn 1706
changing reg in insn 1709
changing reg in insn 1710
changing reg in insn 1713
changing reg in insn 1714
changing reg in insn 1715
changing reg in insn 1716
changing reg in insn 1718
changing reg in insn 1719
changing reg in insn 1722
changing reg in insn 1723
changing reg in insn 1727
changing reg in insn 1728
changing reg in insn 1729
changing reg in insn 1730
changing reg in insn 1732
changing reg in insn 1733
changing reg in insn 1736
changing reg in insn 1737
changing reg in insn 1740
changing reg in insn 1741
changing reg in insn 1742
changing reg in insn 1743
changing reg in insn 1745
changing reg in insn 1746
changing reg in insn 1749
changing reg in insn 1750
changing reg in insn 1754
changing reg in insn 1755
changing reg in insn 1756
changing reg in insn 1757
changing reg in insn 1759
changing reg in insn 1760
changing reg in insn 1763
changing reg in insn 1764
changing reg in insn 1767
changing reg in insn 1768
changing reg in insn 1769
changing reg in insn 1770
changing reg in insn 1772
changing reg in insn 1773
changing reg in insn 1776
changing reg in insn 1777
changing reg in insn 1781
changing reg in insn 1782
changing reg in insn 1802
changing reg in insn 1803
changing reg in insn 1810
changing reg in insn 1811
changing reg in insn 1815
changing reg in insn 1816
changing reg in insn 1818
changing reg in insn 1819
changing reg in insn 1822
changing reg in insn 1823
changing reg in insn 1826
changing reg in insn 1827
changing reg in insn 1828
changing reg in insn 1829
changing reg in insn 1831
changing reg in insn 1832
changing reg in insn 1838
changing reg in insn 1839
changing reg in insn 1841
changing reg in insn 1842
changing reg in insn 1845
changing reg in insn 1846
changing reg in insn 1849
changing reg in insn 1850
changing reg in insn 1852
changing reg in insn 1853
changing reg in insn 1851
changing reg in insn 1852
changing reg in insn 1854
changing reg in insn 1855
changing reg in insn 1857
changing reg in insn 1858
changing reg in insn 1861
changing reg in insn 1862
changing reg in insn 1865
changing reg in insn 1866
changing reg in insn 1867
changing reg in insn 1868
changing reg in insn 1870
changing reg in insn 1871
changing reg in insn 1874
changing reg in insn 1875
changing reg in insn 1879
changing reg in insn 1880
changing reg in insn 1881
changing reg in insn 1882
changing reg in insn 1884
changing reg in insn 1885
changing reg in insn 1888
changing reg in insn 1889
changing reg in insn 1892
changing reg in insn 1893
changing reg in insn 1894
changing reg in insn 1895
changing reg in insn 1897
changing reg in insn 1898
changing reg in insn 1901
changing reg in insn 1902
changing reg in insn 1906
changing reg in insn 1907
changing reg in insn 1931
changing reg in insn 1932
changing reg in insn 1941
changing reg in insn 1942
changing reg in insn 1949
changing reg in insn 1950
changing reg in insn 1954
changing reg in insn 1955
changing reg in insn 1957
changing reg in insn 1958
changing reg in insn 1961
changing reg in insn 1962
changing reg in insn 1965
changing reg in insn 1966
changing reg in insn 1967
changing reg in insn 1968
changing reg in insn 1970
changing reg in insn 1971
changing reg in insn 1978
changing reg in insn 1979
changing reg in insn 1980
changing reg in insn 1981
changing reg in insn 1983
changing reg in insn 1984
changing reg in insn 1987
changing reg in insn 1988
changing reg in insn 1991
changing reg in insn 1992
changing reg in insn 1993
changing reg in insn 1994
changing reg in insn 1997
changing reg in insn 1998
changing reg in insn 2001
changing reg in insn 2002
changing reg in insn 2005
changing reg in insn 2006
changing reg in insn 2009
changing reg in insn 2010
changing reg in insn 2012
changing reg in insn 2013
changing reg in insn 2016
changing reg in insn 2017
changing reg in insn 2020
changing reg in insn 2022
changing reg in insn 2023
changing reg in insn 2027
changing reg in insn 2028
changing reg in insn 2032
changing reg in insn 2033
changing reg in insn 2035
changing reg in insn 2036
changing reg in insn 2039
changing reg in insn 2040
changing reg in insn 2043
changing reg in insn 2044
changing reg in insn 2045
changing reg in insn 2046
changing reg in insn 2049
changing reg in insn 2050
changing reg in insn 2053
changing reg in insn 2054
changing reg in insn 2057
changing reg in insn 2058
changing reg in insn 2062
changing reg in insn 2063
changing reg in insn 2061
changing reg in insn 2064
changing reg in insn 2065
changing reg in insn 2067
changing reg in insn 2068
changing reg in insn 2071
changing reg in insn 2072
changing reg in insn 2075
changing reg in insn 2076
changing reg in insn 2077
changing reg in insn 2078
changing reg in insn 2080
changing reg in insn 2081
changing reg in insn 2079
changing reg in insn 2080
changing reg in insn 2082
changing reg in insn 2083
changing reg in insn 2089
changing reg in insn 2090
changing reg in insn 2091
changing reg in insn 2092
changing reg in insn 2101
changing reg in insn 2102
changing reg in insn 2105
changing reg in insn 2106
changing reg in insn 2109
changing reg in insn 2110
changing reg in insn 2113
changing reg in insn 2114
changing reg in insn 2115
changing reg in insn 2116
changing reg in insn 2118
changing reg in insn 2119
changing reg in insn 2122
changing reg in insn 2123
changing reg in insn 2126
changing reg in insn 2127
changing reg in insn 2128
changing reg in insn 2129
changing reg in insn 2130
changing reg in insn 2131
changing reg in insn 2133
changing reg in insn 2134
changing reg in insn 2137
changing reg in insn 2138
changing reg in insn 2141
changing reg in insn 2142
changing reg in insn 2143
changing reg in insn 2144
changing reg in insn 2147
changing reg in insn 2148
changing reg in insn 2151
changing reg in insn 2152
changing reg in insn 2155
changing reg in insn 2156
changing reg in insn 2160
changing reg in insn 2161
changing reg in insn 2159
changing reg in insn 2162
changing reg in insn 2163
changing reg in insn 2165
changing reg in insn 2166
changing reg in insn 2169
changing reg in insn 2170
changing reg in insn 2173
changing reg in insn 2175
changing reg in insn 2174
changing reg in insn 2175
changing reg in insn 2176
changing reg in insn 2177
changing reg in insn 2179
changing reg in insn 2180
changing reg in insn 2183
changing reg in insn 2184
changing reg in insn 2187
changing reg in insn 2188
changing reg in insn 2190
changing reg in insn 2191
changing reg in insn 2194
changing reg in insn 2195
changing reg in insn 2198
changing reg in insn 2200
changing reg in insn 2199
changing reg in insn 2200
changing reg in insn 2201
changing reg in insn 2202
changing reg in insn 2203
changing reg in insn 2204
changing reg in insn 2206
changing reg in insn 2207
changing reg in insn 2210
changing reg in insn 2211
changing reg in insn 2214
changing reg in insn 2215
changing reg in insn 2217
changing reg in insn 2218
changing reg in insn 2221
changing reg in insn 2222
changing reg in insn 2225
changing reg in insn 2227
changing reg in insn 2226
changing reg in insn 2227
changing reg in insn 2228
changing reg in insn 2229
changing reg in insn 2230
changing reg in insn 2231
changing reg in insn 2233
changing reg in insn 2234
changing reg in insn 2237
changing reg in insn 2238
changing reg in insn 2241
changing reg in insn 2243
changing reg in insn 2242
changing reg in insn 2243
changing reg in insn 2245
changing reg in insn 2246
changing reg in insn 2244
changing reg in insn 2245
changing reg in insn 2249
changing reg in insn 2250
changing reg in insn 2252
changing reg in insn 2253
changing reg in insn 2262
changing reg in insn 2263
changing reg in insn 2264
changing reg in insn 2265
changing reg in insn 2266
changing reg in insn 2267
changing reg in insn 2273
changing reg in insn 2274
changing reg in insn 2275
changing reg in insn 2276
changing reg in insn 2279
changing reg in insn 2281
changing reg in insn 2282
changing reg in insn 2284
changing reg in insn 2285
changing reg in insn 2288
changing reg in insn 2289
changing reg in insn 2292
changing reg in insn 2294
changing reg in insn 2293
changing reg in insn 2294
changing reg in insn 2295
changing reg in insn 2296
changing reg in insn 2298
changing reg in insn 2300
changing reg in insn 2301
changing reg in insn 2303
changing reg in insn 2304
changing reg in insn 2307
changing reg in insn 2308
changing reg in insn 2311
changing reg in insn 2313
changing reg in insn 2312
changing reg in insn 2313
changing reg in insn 2314
changing reg in insn 2315
changing reg in insn 2321
changing reg in insn 2322
changing reg in insn 2326
changing reg in insn 2327
changing reg in insn 2324
changing reg in insn 2325
changing reg in insn 2329
changing reg in insn 2330
changing reg in insn 2342
changing reg in insn 2343
changing reg in insn 2341
changing reg in insn 2342
changing reg in insn 2344
changing reg in insn 2345
changing reg in insn 2347
changing reg in insn 2348
changing reg in insn 2352
changing reg in insn 2353
changing reg in insn 2356
changing reg in insn 2357
changing reg in insn 2355
changing reg in insn 2356
changing reg in insn 2358
changing reg in insn 2359
changing reg in insn 2365
changing reg in insn 2366
changing reg in insn 2371
changing reg in insn 2373
changing reg in insn 2372
changing reg in insn 2373
changing reg in insn 2379
changing reg in insn 2380
changing reg in insn 2385
changing reg in insn 2386
changing reg in insn 2388
changing reg in insn 2389
changing reg in insn 2392
changing reg in insn 2393
changing reg in insn 2394
changing reg in insn 2395
changing reg in insn 2401
changing reg in insn 2402
changing reg in insn 2407
changing reg in insn 2408
changing reg in insn 2411
changing reg in insn 2412
changing reg in insn 2413
changing reg in insn 2414
changing reg in insn 2416
changing reg in insn 2417
changing reg in insn 2420
changing reg in insn 2421
changing reg in insn 2424
changing reg in insn 2426
changing reg in insn 2425
changing reg in insn 2426
changing reg in insn 2427
changing reg in insn 2428
changing reg in insn 2430
changing reg in insn 2431
changing reg in insn 2434
changing reg in insn 2435
changing reg in insn 2438
changing reg in insn 2439
changing reg in insn 2441
changing reg in insn 2442
changing reg in insn 2445
changing reg in insn 2446
changing reg in insn 2449
changing reg in insn 2450
changing reg in insn 2451
changing reg in insn 2452
changing reg in insn 2453
changing reg in insn 2454
changing reg in insn 2456
changing reg in insn 2457
changing reg in insn 2460
changing reg in insn 2461
changing reg in insn 2464
changing reg in insn 2466
changing reg in insn 2465
changing reg in insn 2466
changing reg in insn 2467
changing reg in insn 2468
changing reg in insn 2470
changing reg in insn 2471
changing reg in insn 2474
changing reg in insn 2475
changing reg in insn 2478
changing reg in insn 2479
changing reg in insn 2483
changing reg in insn 2484
changing reg in insn 2486
changing reg in insn 2487
changing reg in insn 2490
changing reg in insn 2491
changing reg in insn 2494
changing reg in insn 2496
changing reg in insn 2497
changing reg in insn 2500
changing reg in insn 2501
changing reg in insn 2503
changing reg in insn 2504
changing reg in insn 2507
changing reg in insn 2508
changing reg in insn 2511
changing reg in insn 2512
changing reg in insn 2513
changing reg in insn 2514
changing reg in insn 2516
changing reg in insn 2517
changing reg in insn 2520
changing reg in insn 2521
changing reg in insn 2524
changing reg in insn 2525
changing reg in insn 2526
changing reg in insn 2527
changing reg in insn 2529
changing reg in insn 2530
changing reg in insn 2533
changing reg in insn 2534
changing reg in insn 2538
changing reg in insn 2539
changing reg in insn 2540
changing reg in insn 2541
changing reg in insn 2543
changing reg in insn 2544
changing reg in insn 2547
changing reg in insn 2548
changing reg in insn 2551
changing reg in insn 2552
changing reg in insn 2553
changing reg in insn 2554
changing reg in insn 2560
changing reg in insn 2561
changing reg in insn 2563
changing reg in insn 2564
changing reg in insn 2567
changing reg in insn 2568
changing reg in insn 2571
changing reg in insn 2573
changing reg in insn 2572
changing reg in insn 2573
changing reg in insn 2574
changing reg in insn 2575
changing reg in insn 2577
changing reg in insn 2578
changing reg in insn 2581
changing reg in insn 2582
changing reg in insn 2585
changing reg in insn 2586
changing reg in insn 2587
changing reg in insn 2588
changing reg in insn 2590
changing reg in insn 2591
changing reg in insn 2594
changing reg in insn 2595
changing reg in insn 2598
changing reg in insn 2599
changing reg in insn 2600
changing reg in insn 2601
changing reg in insn 2603
changing reg in insn 2604
changing reg in insn 2607
changing reg in insn 2608
changing reg in insn 2612
changing reg in insn 2613
changing reg in insn 2616
changing reg in insn 2617
changing reg in insn 2619
changing reg in insn 2620
changing reg in insn 2623
changing reg in insn 2624
changing reg in insn 2627
changing reg in insn 2628
changing reg in insn 2629
changing reg in insn 2630
changing reg in insn 2636
changing reg in insn 2637
changing reg in insn 2639
changing reg in insn 2640
changing reg in insn 2643
changing reg in insn 2644
changing reg in insn 2647
changing reg in insn 2649
changing reg in insn 2648
changing reg in insn 2649
changing reg in insn 2650
changing reg in insn 2651
changing reg in insn 2653
changing reg in insn 2654
changing reg in insn 2657
changing reg in insn 2658
changing reg in insn 2661
changing reg in insn 2662
changing reg in insn 2663
changing reg in insn 2664
changing reg in insn 2666
changing reg in insn 2667
changing reg in insn 2670
changing reg in insn 2671
changing reg in insn 2674
changing reg in insn 2675
changing reg in insn 2676
changing reg in insn 2677
changing reg in insn 2679
changing reg in insn 2680
changing reg in insn 2683
changing reg in insn 2684
changing reg in insn 2688
changing reg in insn 2689
changing reg in insn 2709
changing reg in insn 2710
changing reg in insn 2717
changing reg in insn 2718
changing reg in insn 2722
changing reg in insn 2723
changing reg in insn 2725
changing reg in insn 2726
changing reg in insn 2729
changing reg in insn 2730
changing reg in insn 2733
changing reg in insn 2734
changing reg in insn 2735
changing reg in insn 2736
changing reg in insn 2738
changing reg in insn 2739
changing reg in insn 2746
changing reg in insn 2747
changing reg in insn 2748
changing reg in insn 2749
changing reg in insn 2751
changing reg in insn 2752
changing reg in insn 2757
changing reg in insn 2758
changing reg in insn 2756
changing reg in insn 2759
changing reg in insn 2760
changing reg in insn 2762
changing reg in insn 2763
changing reg in insn 2768
changing reg in insn 2769
changing reg in insn 2767
changing reg in insn 2773
changing reg in insn 2774
changing reg in insn 2778
changing reg in insn 2779
changing reg in insn 2781
changing reg in insn 2782
changing reg in insn 2785
changing reg in insn 2786
changing reg in insn 2789
changing reg in insn 2790
changing reg in insn 2791
changing reg in insn 2792
changing reg in insn 2794
changing reg in insn 2795
changing reg in insn 2798
changing reg in insn 2799
changing reg in insn 2802
changing reg in insn 2803
changing reg in insn 2805
changing reg in insn 2806
changing reg in insn 2808
changing reg in insn 2809
changing reg in insn 2813
changing reg in insn 2814
changing reg in insn 2817
changing reg in insn 2818
changing reg in insn 2820
changing reg in insn 2821
changing reg in insn 2823
changing reg in insn 2824
changing reg in insn 2828
changing reg in insn 2829
changing reg in insn 2832
changing reg in insn 2833
changing reg in insn 2835
changing reg in insn 2836
changing reg in insn 2839
changing reg in insn 2840
changing reg in insn 2843
changing reg in insn 2844
changing reg in insn 2847
changing reg in insn 2848
changing reg in insn 2850
changing reg in insn 2851
changing reg in insn 2854
changing reg in insn 2855
changing reg in insn 2858
changing reg in insn 2859
changing reg in insn 2862
changing reg in insn 2863
changing reg in insn 2865
changing reg in insn 2866
changing reg in insn 2869
changing reg in insn 2870
changing reg in insn 2874
changing reg in insn 2875
changing reg in insn 2878
changing reg in insn 2879
changing reg in insn 2881
changing reg in insn 2882
changing reg in insn 2885
changing reg in insn 2886
changing reg in insn 2890
changing reg in insn 2891
changing reg in insn 2894
changing reg in insn 2895
changing reg in insn 2899
changing reg in insn 2900
changing reg in insn 2898
changing reg in insn 2901
changing reg in insn 2902
changing reg in insn 2904
changing reg in insn 2905
changing reg in insn 2908
changing reg in insn 2909
changing reg in insn 2912
changing reg in insn 2913
changing reg in insn 2914
changing reg in insn 2915
changing reg in insn 2917
changing reg in insn 2918
changing reg in insn 2916
changing reg in insn 2917
changing reg in insn 2919
changing reg in insn 2920
changing reg in insn 2926
changing reg in insn 2927
changing reg in insn 2928
changing reg in insn 2929
changing reg in insn 2938
changing reg in insn 2939
changing reg in insn 2941
changing reg in insn 2942
changing reg in insn 2945
changing reg in insn 2946
changing reg in insn 2949
changing reg in insn 2950
changing reg in insn 2952
changing reg in insn 2953
changing reg in insn 2956
changing reg in insn 2957
changing reg in insn 2960
changing reg in insn 2962
changing reg in insn 2961
changing reg in insn 2962
changing reg in insn 2963
changing reg in insn 2964
changing reg in insn 2965
changing reg in insn 2966
changing reg in insn 2968
changing reg in insn 2969
changing reg in insn 2972
changing reg in insn 2973
changing reg in insn 2976
changing reg in insn 2977
changing reg in insn 2979
changing reg in insn 2980
changing reg in insn 2983
changing reg in insn 2984
changing reg in insn 2987
changing reg in insn 2989
changing reg in insn 2988
changing reg in insn 2989
changing reg in insn 2990
changing reg in insn 2991
deleting insn with uid = 357.
deleting insn with uid = 359.
deleting insn with uid = 890.
deleting insn with uid = 3258.
deleting insn with uid = 3259.
deleting insn with uid = 994.
deleting insn with uid = 996.
deleting insn with uid = 998.
deleting insn with uid = 1028.
deleting insn with uid = 3262.
deleting insn with uid = 2316.
deleting insn with uid = 2318.
deleting insn with uid = 2320.
deleting insn with uid = 2350.
deleting insn with uid = 2481.
deleting insn with uid = 3266.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 362.
verify found no changes in insn with uid = 997.
verify found no changes in insn with uid = 1157.
verify found no changes in insn with uid = 2319.


bndlyr2

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 37 [r8] 38 [r9]
;;  ref usage 	r0={759d,754u} r1={966d,962u} r2={228d,224u,5e} r3={2d,2u} r4={11d,7u} r5={7d,3u} r6={1d,927u} r7={1d,176u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r17={925d,96u} r18={4d} r19={4d} r20={1d,1u,31e} r21={245d,254u,2e} r22={98d,93u} r23={12d,7u} r24={5d} r25={5d} r26={5d} r27={5d} r28={5d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={5d,1u} r38={5d,1u} r39={4d} r40={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} 
;;    total ref usage 7061{3515d,3508u,38e} in 2683{2679 regular + 4 call} insns.
(note 1 0 9 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  def 	 1518 1519 1563
(note 9 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 9 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -152 [0xffffffffffffff68])) [3 pbnd+0 S8 A64])
        (reg:DI 5 di [ pbnd ])) "BNDLYR2.f":1 85 {*movdi_internal}
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -160 [0xffffffffffffff60])) [3 tbnd+0 S8 A64])
        (reg:DI 4 si [ tbnd ])) "BNDLYR2.f":1 85 {*movdi_internal}
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [3 qbnd+0 S8 A64])
        (reg:DI 1 dx [ qbnd ])) "BNDLYR2.f":1 85 {*movdi_internal}
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -176 [0xffffffffffffff50])) [3 rhbnd+0 S8 A64])
        (reg:DI 2 cx [ rhbnd ])) "BNDLYR2.f":1 85 {*movdi_internal}
     (nil))
(insn 6 5 7 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [3 ubnd+0 S8 A64])
        (reg:DI 37 r8 [ ubnd ])) "BNDLYR2.f":1 85 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [3 vbnd+0 S8 A64])
        (reg:DI 38 r9 [ vbnd ])) "BNDLYR2.f":1 85 {*movdi_internal}
     (nil))
(note 8 7 11 2 NOTE_INSN_FUNCTION_BEG)
(insn 11 8 12 2 (set (reg:SF 21 xmm0 [1563])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) "BNDLYR2.f":110 131 {*movsf_internal}
     (nil))
(insn 12 11 13 2 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [1 climit+0 S4 A32])
        (reg:SF 21 xmm0 [1563])) "BNDLYR2.f":110 131 {*movsf_internal}
     (nil))
(insn 13 12 14 2 (set (reg:SI 1 dx [orig:1518 _1508 ] [1518])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7fd1b2d3cea0 parallel>)
                    (const_int 8 [0x8]))) [2 parallel.jsta+0 S4 A64])) "BNDLYR2.f":116 86 {*movsi_internal}
     (nil))
(insn 14 13 15 2 (set (reg:SI 0 ax [orig:1519 _1509 ] [1519])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7fd1b2d3cea0 parallel>)
                    (const_int 12 [0xc]))) [2 parallel.jend+0 S4 A32])) "BNDLYR2.f":116 86 {*movsi_internal}
     (nil))
(insn 15 14 59 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])
        (reg:SI 1 dx [orig:1518 _1508 ] [1518])) "BNDLYR2.f":116 86 {*movsi_internal}
     (nil))
;;  succ:       3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1519

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;;              7 [always] 
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1519
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1519
;; lr  def 	 17 [flags] 1520 1564
(code_label 59 15 16 3 5 (nil) [1 uses])
(note 16 59 17 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 3 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])
            (reg:SI 0 ax [orig:1519 _1509 ] [1519]))) "BNDLYR2.f":116 11 {*cmpsi_1}
     (nil))
(insn 18 17 19 3 (set (reg:QI 1 dx [1564])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "BNDLYR2.f":116 678 {*setcc_qi}
     (nil))
(insn 19 18 20 3 (set (reg:SI 1 dx [orig:1520 _1511 ] [1520])
        (zero_extend:SI (reg:QI 1 dx [1564]))) "BNDLYR2.f":116 140 {*zero_extendqisi2}
     (nil))
(insn 20 19 21 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1520 _1511 ] [1520])
            (const_int 0 [0]))) "BNDLYR2.f":116 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 21 20 22 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 3176)
            (pc))) "BNDLYR2.f":116 682 {*jcc}
     (nil)
 -> 3176)
;;  succ:       146
;;              4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1519

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1519
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 22 21 23 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 53 4 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])
        (const_int 1 [0x1])) "BNDLYR2.f":117 86 {*movsi_internal}
     (nil))
;;  succ:       5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1519

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;;              6 [always] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1519
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1521 1565
(code_label 53 23 24 5 4 (nil) [1 uses])
(note 24 53 25 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 26 5 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])
            (const_int 119 [0x77]))) "BNDLYR2.f":117 11 {*cmpsi_1}
     (nil))
(insn 26 25 27 5 (set (reg:QI 1 dx [1565])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "BNDLYR2.f":117 678 {*setcc_qi}
     (nil))
(insn 27 26 28 5 (set (reg:SI 1 dx [orig:1521 _1513 ] [1521])
        (zero_extend:SI (reg:QI 1 dx [1565]))) "BNDLYR2.f":117 140 {*zero_extendqisi2}
     (nil))
(insn 28 27 29 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1521 _1513 ] [1521])
            (const_int 0 [0]))) "BNDLYR2.f":117 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 29 28 30 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 3179)
            (pc))) "BNDLYR2.f":117 682 {*jcc}
     (nil)
 -> 3179)
;;  succ:       147
;;              6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1519

;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 147, flags: (RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1519
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 87 88 89 90 91 92 93 94 95 96 97 98 99 1566 1567 1568 1569 1570 1571 1572
(note 30 29 31 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 31 30 32 6 (set (reg:SI 1 dx [1566])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":118 86 {*movsi_internal}
     (nil))
(insn 32 31 33 6 (set (reg:DI 1 dx [orig:87 _1 ] [87])
        (sign_extend:DI (reg:SI 1 dx [1566]))) "BNDLYR2.f":118 149 {*extendsidi2_rex64}
     (nil))
(insn 33 32 34 6 (parallel [
            (set (reg:DI 2 cx [orig:88 _2 ] [88])
                (mult:DI (reg:DI 1 dx [orig:87 _1 ] [87])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":118 349 {*muldi3_1}
     (nil))
(insn 34 33 35 6 (set (reg:SI 1 dx [1567])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":118 86 {*movsi_internal}
     (nil))
(insn 35 34 36 6 (set (reg:DI 1 dx [orig:89 _3 ] [89])
        (sign_extend:DI (reg:SI 1 dx [1567]))) "BNDLYR2.f":118 149 {*extendsidi2_rex64}
     (nil))
(insn 36 35 37 6 (parallel [
            (set (reg:DI 1 dx [orig:90 _4 ] [90])
                (plus:DI (reg:DI 1 dx [orig:89 _3 ] [89])
                    (reg:DI 2 cx [orig:88 _2 ] [88])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":118 222 {*adddi_1}
     (nil))
(insn 37 36 38 6 (parallel [
            (set (reg:DI 2 cx [orig:91 _5 ] [91])
                (plus:DI (reg:DI 1 dx [orig:90 _4 ] [90])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":118 222 {*adddi_1}
     (nil))
(insn 38 37 39 6 (set (reg/f:DI 1 dx [1568])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7fd1b2d48360 vrbls>)) "BNDLYR2.f":118 85 {*movdi_internal}
     (nil))
(insn 39 38 40 6 (set (reg:SF 22 xmm1 [orig:92 _6 ] [92])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:91 _5 ] [91])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1568])) [1 vrbls.pd S4 A32])) "BNDLYR2.f":118 131 {*movsf_internal}
     (nil))
(insn 40 39 41 6 (set (reg/f:DI 1 dx [1569])
        (symbol_ref:DI ("mapot_") [flags 0x202]  <var_decl 0x7fd1b2d381b0 mapot>)) "BNDLYR2.f":1 85 {*movdi_internal}
     (nil))
(insn 41 40 42 6 (set (reg:SF 21 xmm0 [orig:93 _7 ] [93])
        (mem/c:SF (plus:DI (reg/f:DI 1 dx [1569])
                (const_int 4000012 [0x3d090c])) [1 mapot.pt+0 S4 A32])) "BNDLYR2.f":1 131 {*movsf_internal}
     (nil))
(insn 42 41 43 6 (set (reg:SI 1 dx [1570])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":118 86 {*movsi_internal}
     (nil))
(insn 43 42 44 6 (set (reg:DI 1 dx [orig:94 _8 ] [94])
        (sign_extend:DI (reg:SI 1 dx [1570]))) "BNDLYR2.f":118 149 {*extendsidi2_rex64}
     (nil))
(insn 44 43 45 6 (parallel [
            (set (reg:DI 2 cx [orig:95 _9 ] [95])
                (mult:DI (reg:DI 1 dx [orig:94 _8 ] [94])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":118 349 {*muldi3_1}
     (nil))
(insn 45 44 46 6 (set (reg:SI 1 dx [1571])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":118 86 {*movsi_internal}
     (nil))
(insn 46 45 47 6 (set (reg:DI 1 dx [orig:96 _10 ] [96])
        (sign_extend:DI (reg:SI 1 dx [1571]))) "BNDLYR2.f":118 149 {*extendsidi2_rex64}
     (nil))
(insn 47 46 48 6 (parallel [
            (set (reg:DI 1 dx [orig:97 _11 ] [97])
                (plus:DI (reg:DI 1 dx [orig:96 _10 ] [96])
                    (reg:DI 2 cx [orig:95 _9 ] [95])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":118 222 {*adddi_1}
     (nil))
(insn 48 47 49 6 (parallel [
            (set (reg:DI 2 cx [orig:98 _12 ] [98])
                (plus:DI (reg:DI 1 dx [orig:97 _11 ] [97])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":118 222 {*adddi_1}
     (nil))
(insn 49 48 50 6 (set (reg:SF 21 xmm0 [orig:99 _13 ] [99])
        (plus:SF (reg:SF 21 xmm0 [orig:93 _7 ] [93])
            (reg:SF 22 xmm1 [orig:92 _6 ] [92]))) "BNDLYR2.f":118 838 {*fop_sf_comm}
     (nil))
(insn 50 49 51 6 (set (reg/f:DI 1 dx [1572])
        (symbol_ref:DI ("pbint.4202") [flags 0x202]  <var_decl 0x7fd1b2d4d1b0 pbint>)) "BNDLYR2.f":118 85 {*movdi_internal}
     (nil))
(insn 51 50 52 6 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:98 _12 ] [98])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1572])) [1 pbint S4 A32])
        (reg:SF 21 xmm0 [orig:99 _13 ] [99])) "BNDLYR2.f":118 131 {*movsf_internal}
     (nil))
(insn 52 51 3094 6 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":117 221 {*addsi_1}
     (nil))
(jump_insn 3094 52 3095 6 (set (pc)
        (label_ref 53)) "BNDLYR2.f":117 683 {jump}
     (nil)
 -> 53)
;;  succ:       5 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1519

(barrier 3095 3094 3179)
;; basic block 147, loop depth 0, maybe hot
;;  prev block 6, next block 7, flags: (RTL, MODIFIED)
;;  pred:       5
;; bb 147 artificial_defs: { }
;; bb 147 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1519
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 3179 3095 3178 147 144 (nil) [1 uses])
(note 3178 3179 3180 147 [bb 147] NOTE_INSN_BASIC_BLOCK)
(insn 3180 3178 56 147 (const_int 0 [0]) "BNDLYR2.f":118 718 {nop}
     (nil))
;;  succ:       7 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1519

;; basic block 7, loop depth 0, maybe hot
;;  prev block 147, next block 146, flags: (RTL, MODIFIED)
;;  pred:       147 [always]  (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1519
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 56 3180 57 7 3 (nil) [0 uses])
(note 57 56 58 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 58 57 3096 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":116 221 {*addsi_1}
     (nil))
(jump_insn 3096 58 3097 7 (set (pc)
        (label_ref 59)) "BNDLYR2.f":116 683 {jump}
     (nil)
 -> 59)
;;  succ:       3 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1519

(barrier 3097 3096 3176)
;; basic block 146, loop depth 0, maybe hot
;;  prev block 7, next block 8, flags: (RTL, MODIFIED)
;;  pred:       3
;; bb 146 artificial_defs: { }
;; bb 146 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 3176 3097 3175 146 143 (nil) [1 uses])
(note 3175 3176 3177 146 [bb 146] NOTE_INSN_BASIC_BLOCK)
(insn 3177 3175 62 146 (const_int 0 [0]) "BNDLYR2.f":117 718 {nop}
     (nil))
;;  succ:       8 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 8, loop depth 0, maybe hot
;;  prev block 146, next block 9, flags: (RTL, MODIFIED)
;;  pred:       146 [always]  (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 62 3177 63 8 2 (nil) [0 uses])
(note 63 62 64 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 64 63 132 8 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 lbnd+0 S4 A32])
        (const_int 2 [0x2])) "BNDLYR2.f":122 86 {*movsi_internal}
     (nil))
;;  succ:       9 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 9, loop depth 0, maybe hot
;;  prev block 8, next block 10, flags: (RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;;              16 [always] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1522 1573
(code_label 132 64 65 9 11 (nil) [1 uses])
(note 65 132 66 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 66 65 67 9 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -40 [0xffffffffffffffd8])) [2 lbnd+0 S4 A32])
            (const_int 7 [0x7]))) "BNDLYR2.f":122 11 {*cmpsi_1}
     (nil))
(insn 67 66 68 9 (set (reg:QI 0 ax [1573])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "BNDLYR2.f":122 678 {*setcc_qi}
     (nil))
(insn 68 67 69 9 (set (reg:SI 0 ax [orig:1522 _1518 ] [1522])
        (zero_extend:SI (reg:QI 0 ax [1573]))) "BNDLYR2.f":122 140 {*zero_extendqisi2}
     (nil))
(insn 69 68 70 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:1522 _1518 ] [1522])
            (const_int 0 [0]))) "BNDLYR2.f":122 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 70 69 71 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 3182)
            (pc))) "BNDLYR2.f":122 682 {*jcc}
     (nil)
 -> 3182)
;;  succ:       148
;;              10 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 10, loop depth 0, maybe hot
;;  prev block 9, next block 11, flags: (RTL, MODIFIED)
;;  pred:       9 (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 1523 1524
(note 71 70 72 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 72 71 73 10 (set (reg:SI 1 dx [orig:1523 _1519 ] [1523])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7fd1b2d3cea0 parallel>)
                    (const_int 8 [0x8]))) [2 parallel.jsta+0 S4 A64])) "BNDLYR2.f":124 86 {*movsi_internal}
     (nil))
(insn 73 72 74 10 (set (reg:SI 0 ax [orig:1524 _1520 ] [1524])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7fd1b2d3cea0 parallel>)
                    (const_int 12 [0xc]))) [2 parallel.jend+0 S4 A32])) "BNDLYR2.f":124 86 {*movsi_internal}
     (nil))
(insn 74 73 126 10 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])
        (reg:SI 1 dx [orig:1523 _1519 ] [1523])) "BNDLYR2.f":124 86 {*movsi_internal}
     (nil))
;;  succ:       11 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1524

;; basic block 11, loop depth 0, maybe hot
;;  prev block 10, next block 12, flags: (RTL, MODIFIED)
;;  pred:       10 (FALLTHRU)
;;              15 [always] 
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1524
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1524
;; lr  def 	 17 [flags] 1525 1574
(code_label 126 74 75 11 10 (nil) [1 uses])
(note 75 126 76 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 76 75 77 11 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])
            (reg:SI 0 ax [orig:1524 _1520 ] [1524]))) "BNDLYR2.f":124 11 {*cmpsi_1}
     (nil))
(insn 77 76 78 11 (set (reg:QI 1 dx [1574])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "BNDLYR2.f":124 678 {*setcc_qi}
     (nil))
(insn 78 77 79 11 (set (reg:SI 1 dx [orig:1525 _1522 ] [1525])
        (zero_extend:SI (reg:QI 1 dx [1574]))) "BNDLYR2.f":124 140 {*zero_extendqisi2}
     (nil))
(insn 79 78 80 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1525 _1522 ] [1525])
            (const_int 0 [0]))) "BNDLYR2.f":124 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 80 79 81 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 3185)
            (pc))) "BNDLYR2.f":124 682 {*jcc}
     (nil)
 -> 3185)
;;  succ:       149
;;              12 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1524

;; basic block 12, loop depth 0, maybe hot
;;  prev block 11, next block 13, flags: (RTL, MODIFIED)
;;  pred:       11 (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1524
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 81 80 82 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 82 81 120 12 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])
        (const_int 1 [0x1])) "BNDLYR2.f":125 86 {*movsi_internal}
     (nil))
;;  succ:       13 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1524

;; basic block 13, loop depth 0, maybe hot
;;  prev block 12, next block 14, flags: (RTL, MODIFIED)
;;  pred:       12 (FALLTHRU)
;;              14 [always] 
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1524
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1526 1575
(code_label 120 82 83 13 9 (nil) [1 uses])
(note 83 120 84 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 84 83 85 13 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])
            (const_int 119 [0x77]))) "BNDLYR2.f":125 11 {*cmpsi_1}
     (nil))
(insn 85 84 86 13 (set (reg:QI 1 dx [1575])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "BNDLYR2.f":125 678 {*setcc_qi}
     (nil))
(insn 86 85 87 13 (set (reg:SI 1 dx [orig:1526 _1524 ] [1526])
        (zero_extend:SI (reg:QI 1 dx [1575]))) "BNDLYR2.f":125 140 {*zero_extendqisi2}
     (nil))
(insn 87 86 88 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1526 _1524 ] [1526])
            (const_int 0 [0]))) "BNDLYR2.f":125 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 88 87 89 13 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 3188)
            (pc))) "BNDLYR2.f":125 682 {*jcc}
     (nil)
 -> 3188)
;;  succ:       150
;;              14 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1524

;; basic block 14, loop depth 0, maybe hot
;;  prev block 13, next block 150, flags: (RTL, MODIFIED)
;;  pred:       13 (FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1524
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 1576 1577 1578 1579 1580 1581 1582 1583 1584
(note 89 88 90 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 90 89 91 14 (set (reg:SI 1 dx [1576])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 lbnd+0 S4 A32])) "BNDLYR2.f":126 86 {*movsi_internal}
     (nil))
(insn 91 90 92 14 (parallel [
            (set (reg:SI 1 dx [orig:100 _14 ] [100])
                (plus:SI (reg:SI 1 dx [1576])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":126 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -24 [0xffffffffffffffe8])) [2 lbnd+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 92 91 93 14 (set (reg:DI 1 dx [orig:101 _15 ] [101])
        (sign_extend:DI (reg:SI 1 dx [orig:100 _14 ] [100]))) "BNDLYR2.f":126 149 {*extendsidi2_rex64}
     (nil))
(insn 93 92 94 14 (parallel [
            (set (reg:DI 2 cx [orig:102 _16 ] [102])
                (mult:DI (reg:DI 1 dx [orig:101 _15 ] [101])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":126 349 {*muldi3_1}
     (nil))
(insn 94 93 95 14 (set (reg:SI 1 dx [1577])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":126 86 {*movsi_internal}
     (nil))
(insn 95 94 96 14 (set (reg:DI 1 dx [orig:103 _17 ] [103])
        (sign_extend:DI (reg:SI 1 dx [1577]))) "BNDLYR2.f":126 149 {*extendsidi2_rex64}
     (nil))
(insn 96 95 97 14 (parallel [
            (set (reg:DI 1 dx [orig:104 _18 ] [104])
                (mult:DI (reg:DI 1 dx [orig:103 _17 ] [103])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":126 349 {*muldi3_1}
     (nil))
(insn 97 96 98 14 (parallel [
            (set (reg:DI 2 cx [orig:105 _19 ] [105])
                (plus:DI (reg:DI 2 cx [orig:102 _16 ] [102])
                    (reg:DI 1 dx [orig:104 _18 ] [104])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":126 222 {*adddi_1}
     (nil))
(insn 98 97 99 14 (set (reg:SI 1 dx [1578])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":126 86 {*movsi_internal}
     (nil))
(insn 99 98 100 14 (set (reg:DI 1 dx [orig:106 _20 ] [106])
        (sign_extend:DI (reg:SI 1 dx [1578]))) "BNDLYR2.f":126 149 {*extendsidi2_rex64}
     (nil))
(insn 100 99 101 14 (parallel [
            (set (reg:DI 1 dx [orig:107 _21 ] [107])
                (plus:DI (reg:DI 1 dx [orig:106 _20 ] [106])
                    (reg:DI 2 cx [orig:105 _19 ] [105])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":126 222 {*adddi_1}
     (nil))
(insn 101 100 102 14 (parallel [
            (set (reg:DI 2 cx [orig:108 _22 ] [108])
                (plus:DI (reg:DI 1 dx [orig:107 _21 ] [107])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":126 222 {*adddi_1}
     (nil))
(insn 102 101 103 14 (set (reg/f:DI 1 dx [1579])
        (symbol_ref:DI ("pbint.4202") [flags 0x202]  <var_decl 0x7fd1b2d4d1b0 pbint>)) "BNDLYR2.f":126 85 {*movdi_internal}
     (nil))
(insn 103 102 104 14 (set (reg:SF 21 xmm0 [orig:109 _23 ] [109])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:108 _22 ] [108])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1579])) [1 pbint S4 A32])) "BNDLYR2.f":126 131 {*movsf_internal}
     (nil))
(insn 104 103 105 14 (set (reg:SI 1 dx [1580])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 lbnd+0 S4 A32])) "BNDLYR2.f":126 86 {*movsi_internal}
     (nil))
(insn 105 104 106 14 (set (reg:DI 1 dx [orig:110 _24 ] [110])
        (sign_extend:DI (reg:SI 1 dx [1580]))) "BNDLYR2.f":126 149 {*extendsidi2_rex64}
     (nil))
(insn 106 105 107 14 (parallel [
            (set (reg:DI 2 cx [orig:111 _25 ] [111])
                (mult:DI (reg:DI 1 dx [orig:110 _24 ] [110])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":126 349 {*muldi3_1}
     (nil))
(insn 107 106 108 14 (set (reg:SI 1 dx [1581])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":126 86 {*movsi_internal}
     (nil))
(insn 108 107 109 14 (set (reg:DI 1 dx [orig:112 _26 ] [112])
        (sign_extend:DI (reg:SI 1 dx [1581]))) "BNDLYR2.f":126 149 {*extendsidi2_rex64}
     (nil))
(insn 109 108 110 14 (parallel [
            (set (reg:DI 1 dx [orig:113 _27 ] [113])
                (mult:DI (reg:DI 1 dx [orig:112 _26 ] [112])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":126 349 {*muldi3_1}
     (nil))
(insn 110 109 111 14 (parallel [
            (set (reg:DI 2 cx [orig:114 _28 ] [114])
                (plus:DI (reg:DI 2 cx [orig:111 _25 ] [111])
                    (reg:DI 1 dx [orig:113 _27 ] [113])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":126 222 {*adddi_1}
     (nil))
(insn 111 110 112 14 (set (reg:SI 1 dx [1582])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":126 86 {*movsi_internal}
     (nil))
(insn 112 111 113 14 (set (reg:DI 1 dx [orig:115 _29 ] [115])
        (sign_extend:DI (reg:SI 1 dx [1582]))) "BNDLYR2.f":126 149 {*extendsidi2_rex64}
     (nil))
(insn 113 112 114 14 (parallel [
            (set (reg:DI 1 dx [orig:116 _30 ] [116])
                (plus:DI (reg:DI 1 dx [orig:115 _29 ] [115])
                    (reg:DI 2 cx [orig:114 _28 ] [114])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":126 222 {*adddi_1}
     (nil))
(insn 114 113 115 14 (parallel [
            (set (reg:DI 2 cx [orig:117 _31 ] [117])
                (plus:DI (reg:DI 1 dx [orig:116 _30 ] [116])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":126 222 {*adddi_1}
     (nil))
(insn 115 114 116 14 (set (reg:SF 22 xmm1 [1583])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S4 A32])) "BNDLYR2.f":126 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 3.0e+3 [0x0.bb8p+12])
        (nil)))
(insn 116 115 117 14 (set (reg:SF 21 xmm0 [orig:118 _32 ] [118])
        (minus:SF (reg:SF 21 xmm0 [orig:109 _23 ] [109])
            (reg:SF 22 xmm1 [1583]))) "BNDLYR2.f":126 841 {*fop_sf_1}
     (nil))
(insn 117 116 118 14 (set (reg/f:DI 1 dx [1584])
        (symbol_ref:DI ("pbint.4202") [flags 0x202]  <var_decl 0x7fd1b2d4d1b0 pbint>)) "BNDLYR2.f":126 85 {*movdi_internal}
     (nil))
(insn 118 117 119 14 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:117 _31 ] [117])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1584])) [1 pbint S4 A32])
        (reg:SF 21 xmm0 [orig:118 _32 ] [118])) "BNDLYR2.f":126 131 {*movsf_internal}
     (nil))
(insn 119 118 3098 14 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":125 221 {*addsi_1}
     (nil))
(jump_insn 3098 119 3099 14 (set (pc)
        (label_ref 120)) "BNDLYR2.f":125 683 {jump}
     (nil)
 -> 120)
;;  succ:       13 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1524

(barrier 3099 3098 3188)
;; basic block 150, loop depth 0, maybe hot
;;  prev block 14, next block 15, flags: (RTL, MODIFIED)
;;  pred:       13
;; bb 150 artificial_defs: { }
;; bb 150 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1524
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 3188 3099 3187 150 147 (nil) [1 uses])
(note 3187 3188 3189 150 [bb 150] NOTE_INSN_BASIC_BLOCK)
(insn 3189 3187 123 150 (const_int 0 [0]) "BNDLYR2.f":126 718 {nop}
     (nil))
;;  succ:       15 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1524

;; basic block 15, loop depth 0, maybe hot
;;  prev block 150, next block 149, flags: (RTL, MODIFIED)
;;  pred:       150 [always]  (FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1524
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 123 3189 124 15 8 (nil) [0 uses])
(note 124 123 125 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 125 124 3100 15 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":124 221 {*addsi_1}
     (nil))
(jump_insn 3100 125 3101 15 (set (pc)
        (label_ref 126)) "BNDLYR2.f":124 683 {jump}
     (nil)
 -> 126)
;;  succ:       11 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1524

(barrier 3101 3100 3185)
;; basic block 149, loop depth 0, maybe hot
;;  prev block 15, next block 16, flags: (RTL, MODIFIED)
;;  pred:       11
;; bb 149 artificial_defs: { }
;; bb 149 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 3185 3101 3184 149 146 (nil) [1 uses])
(note 3184 3185 3186 149 [bb 149] NOTE_INSN_BASIC_BLOCK)
(insn 3186 3184 129 149 (const_int 0 [0]) "BNDLYR2.f":125 718 {nop}
     (nil))
;;  succ:       16 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 16, loop depth 0, maybe hot
;;  prev block 149, next block 148, flags: (RTL, MODIFIED)
;;  pred:       149 [always]  (FALLTHRU)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 129 3186 130 16 7 (nil) [0 uses])
(note 130 129 131 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 131 130 3102 16 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -40 [0xffffffffffffffd8])) [2 lbnd+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -40 [0xffffffffffffffd8])) [2 lbnd+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":122 221 {*addsi_1}
     (nil))
(jump_insn 3102 131 3103 16 (set (pc)
        (label_ref 132)) "BNDLYR2.f":122 683 {jump}
     (nil)
 -> 132)
;;  succ:       9 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 3103 3102 3182)
;; basic block 148, loop depth 0, maybe hot
;;  prev block 16, next block 17, flags: (RTL, MODIFIED)
;;  pred:       9
;; bb 148 artificial_defs: { }
;; bb 148 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 3182 3103 3181 148 145 (nil) [1 uses])
(note 3181 3182 3183 148 [bb 148] NOTE_INSN_BASIC_BLOCK)
(insn 3183 3181 135 148 (const_int 0 [0]) "BNDLYR2.f":124 718 {nop}
     (nil))
;;  succ:       17 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 17, loop depth 0, maybe hot
;;  prev block 148, next block 18, flags: (RTL, MODIFIED)
;;  pred:       148 [always]  (FALLTHRU)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 135 3183 136 17 6 (nil) [0 uses])
(note 136 135 137 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 137 136 1519 17 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 lbnd+0 S4 A32])
        (const_int 1 [0x1])) "BNDLYR2.f":137 86 {*movsi_internal}
     (nil))
;;  succ:       18 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 18, loop depth 0, maybe hot
;;  prev block 17, next block 19, flags: (RTL, MODIFIED)
;;  pred:       17 (FALLTHRU)
;;              75 [always] 
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1527 1585
(code_label 1519 137 138 18 57 (nil) [1 uses])
(note 138 1519 139 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 139 138 140 18 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -40 [0xffffffffffffffd8])) [2 lbnd+0 S4 A32])
            (const_int 6 [0x6]))) "BNDLYR2.f":137 11 {*cmpsi_1}
     (nil))
(insn 140 139 141 18 (set (reg:QI 0 ax [1585])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "BNDLYR2.f":137 678 {*setcc_qi}
     (nil))
(insn 141 140 142 18 (set (reg:SI 0 ax [orig:1527 _1530 ] [1527])
        (zero_extend:SI (reg:QI 0 ax [1585]))) "BNDLYR2.f":137 140 {*zero_extendqisi2}
     (nil))
(insn 142 141 143 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:1527 _1530 ] [1527])
            (const_int 0 [0]))) "BNDLYR2.f":137 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 143 142 144 18 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 3191)
            (pc))) "BNDLYR2.f":137 682 {*jcc}
     (nil)
 -> 3191)
;;  succ:       151
;;              19 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 19, loop depth 0, maybe hot
;;  prev block 18, next block 20, flags: (RTL, MODIFIED)
;;  pred:       18 (FALLTHRU)
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 1528 1529
(note 144 143 145 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 145 144 146 19 (set (reg:SI 1 dx [orig:1528 _1531 ] [1528])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7fd1b2d3cea0 parallel>)
                    (const_int 8 [0x8]))) [2 parallel.jsta+0 S4 A64])) "BNDLYR2.f":138 86 {*movsi_internal}
     (nil))
(insn 146 145 147 19 (set (reg:SI 0 ax [orig:1529 _1532 ] [1529])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7fd1b2d3cea0 parallel>)
                    (const_int 12 [0xc]))) [2 parallel.jend+0 S4 A32])) "BNDLYR2.f":138 86 {*movsi_internal}
     (nil))
(insn 147 146 351 19 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])
        (reg:SI 1 dx [orig:1528 _1531 ] [1528])) "BNDLYR2.f":138 86 {*movsi_internal}
     (nil))
;;  succ:       20 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1529

;; basic block 20, loop depth 0, maybe hot
;;  prev block 19, next block 21, flags: (RTL, MODIFIED)
;;  pred:       19 (FALLTHRU)
;;              24 [always] 
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1529
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1529
;; lr  def 	 17 [flags] 1530 1586
(code_label 351 147 148 20 16 (nil) [1 uses])
(note 148 351 149 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 149 148 150 20 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])
            (reg:SI 0 ax [orig:1529 _1532 ] [1529]))) "BNDLYR2.f":138 11 {*cmpsi_1}
     (nil))
(insn 150 149 151 20 (set (reg:QI 1 dx [1586])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "BNDLYR2.f":138 678 {*setcc_qi}
     (nil))
(insn 151 150 152 20 (set (reg:SI 1 dx [orig:1530 _1534 ] [1530])
        (zero_extend:SI (reg:QI 1 dx [1586]))) "BNDLYR2.f":138 140 {*zero_extendqisi2}
     (nil))
(insn 152 151 153 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1530 _1534 ] [1530])
            (const_int 0 [0]))) "BNDLYR2.f":138 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 153 152 154 20 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 3194)
            (pc))) "BNDLYR2.f":138 682 {*jcc}
     (nil)
 -> 3194)
;;  succ:       152
;;              21 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1529

;; basic block 21, loop depth 0, maybe hot
;;  prev block 20, next block 22, flags: (RTL, MODIFIED)
;;  pred:       20 (FALLTHRU)
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1529
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 154 153 155 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 155 154 345 21 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])
        (const_int 1 [0x1])) "BNDLYR2.f":139 86 {*movsi_internal}
     (nil))
;;  succ:       22 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1529

;; basic block 22, loop depth 0, maybe hot
;;  prev block 21, next block 23, flags: (RTL, MODIFIED)
;;  pred:       21 (FALLTHRU)
;;              23 [always] 
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1529
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1531 1587
(code_label 345 155 156 22 15 (nil) [1 uses])
(note 156 345 157 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 157 156 158 22 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])
            (const_int 119 [0x77]))) "BNDLYR2.f":139 11 {*cmpsi_1}
     (nil))
(insn 158 157 159 22 (set (reg:QI 1 dx [1587])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "BNDLYR2.f":139 678 {*setcc_qi}
     (nil))
(insn 159 158 160 22 (set (reg:SI 1 dx [orig:1531 _1536 ] [1531])
        (zero_extend:SI (reg:QI 1 dx [1587]))) "BNDLYR2.f":139 140 {*zero_extendqisi2}
     (nil))
(insn 160 159 161 22 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1531 _1536 ] [1531])
            (const_int 0 [0]))) "BNDLYR2.f":139 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 161 160 162 22 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 3197)
            (pc))) "BNDLYR2.f":139 682 {*jcc}
     (nil)
 -> 3197)
;;  succ:       153
;;              23 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1529

;; basic block 23, loop depth 0, maybe hot
;;  prev block 22, next block 153, flags: (RTL, MODIFIED)
;;  pred:       22 (FALLTHRU)
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1529
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 1588 1589 1590 1591 1592 1593 1594 1595 1596 1597 1598 1599 1600 1601 1602 1603 1604 1605 1606 1607 1608 1609 1610 1611 1612 1613 1614 1615 1616 1617 1618 1619 1620 1621 1622 1623 1624 1625 1626 1627 1628 1629 1630 1631 1632 1633 1634 1635 1636 1637 1638 1639 1640 1641 1642 1643 1644 1645 1646 1647 1648 1649 1650 1651
(note 162 161 163 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 163 162 164 23 (set (reg:SI 1 dx [1588])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 lbnd+0 S4 A32])) "BNDLYR2.f":140 86 {*movsi_internal}
     (nil))
(insn 164 163 165 23 (set (reg:DI 1 dx [orig:119 _33 ] [119])
        (sign_extend:DI (reg:SI 1 dx [1588]))) "BNDLYR2.f":140 149 {*extendsidi2_rex64}
     (nil))
(insn 165 164 166 23 (parallel [
            (set (reg:DI 2 cx [orig:120 _34 ] [120])
                (mult:DI (reg:DI 1 dx [orig:119 _33 ] [119])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":140 349 {*muldi3_1}
     (nil))
(insn 166 165 167 23 (set (reg:SI 1 dx [1589])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":140 86 {*movsi_internal}
     (nil))
(insn 167 166 168 23 (set (reg:DI 1 dx [orig:121 _35 ] [121])
        (sign_extend:DI (reg:SI 1 dx [1589]))) "BNDLYR2.f":140 149 {*extendsidi2_rex64}
     (nil))
(insn 168 167 169 23 (parallel [
            (set (reg:DI 1 dx [orig:122 _36 ] [122])
                (mult:DI (reg:DI 1 dx [orig:121 _35 ] [121])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":140 349 {*muldi3_1}
     (nil))
(insn 169 168 170 23 (parallel [
            (set (reg:DI 2 cx [orig:123 _37 ] [123])
                (plus:DI (reg:DI 2 cx [orig:120 _34 ] [120])
                    (reg:DI 1 dx [orig:122 _36 ] [122])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":140 222 {*adddi_1}
     (nil))
(insn 170 169 171 23 (set (reg:SI 1 dx [1590])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":140 86 {*movsi_internal}
     (nil))
(insn 171 170 172 23 (set (reg:DI 1 dx [orig:124 _38 ] [124])
        (sign_extend:DI (reg:SI 1 dx [1590]))) "BNDLYR2.f":140 149 {*extendsidi2_rex64}
     (nil))
(insn 172 171 173 23 (parallel [
            (set (reg:DI 1 dx [orig:125 _39 ] [125])
                (plus:DI (reg:DI 1 dx [orig:124 _38 ] [124])
                    (reg:DI 2 cx [orig:123 _37 ] [123])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":140 222 {*adddi_1}
     (nil))
(insn 173 172 174 23 (parallel [
            (set (reg:DI 2 cx [orig:126 _40 ] [126])
                (plus:DI (reg:DI 1 dx [orig:125 _39 ] [125])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":140 222 {*adddi_1}
     (nil))
(insn 174 173 175 23 (set (reg/f:DI 1 dx [1591])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -152 [0xffffffffffffff68])) [3 pbnd+0 S8 A64])) "BNDLYR2.f":140 85 {*movdi_internal}
     (nil))
(insn 175 174 176 23 (set (reg:SF 21 xmm0 [1592])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0  S4 A32])) "BNDLYR2.f":140 131 {*movsf_internal}
     (nil))
(insn 176 175 177 23 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:126 _40 ] [126])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1591])) [1 *pbnd_1537(D) S4 A32])
        (reg:SF 21 xmm0 [1592])) "BNDLYR2.f":140 131 {*movsf_internal}
     (nil))
(insn 177 176 178 23 (set (reg:SI 1 dx [1593])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 lbnd+0 S4 A32])) "BNDLYR2.f":141 86 {*movsi_internal}
     (nil))
(insn 178 177 179 23 (set (reg:DI 1 dx [orig:127 _41 ] [127])
        (sign_extend:DI (reg:SI 1 dx [1593]))) "BNDLYR2.f":141 149 {*extendsidi2_rex64}
     (nil))
(insn 179 178 180 23 (parallel [
            (set (reg:DI 2 cx [orig:128 _42 ] [128])
                (mult:DI (reg:DI 1 dx [orig:127 _41 ] [127])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":141 349 {*muldi3_1}
     (nil))
(insn 180 179 181 23 (set (reg:SI 1 dx [1594])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":141 86 {*movsi_internal}
     (nil))
(insn 181 180 182 23 (set (reg:DI 1 dx [orig:129 _43 ] [129])
        (sign_extend:DI (reg:SI 1 dx [1594]))) "BNDLYR2.f":141 149 {*extendsidi2_rex64}
     (nil))
(insn 182 181 183 23 (parallel [
            (set (reg:DI 1 dx [orig:130 _44 ] [130])
                (mult:DI (reg:DI 1 dx [orig:129 _43 ] [129])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":141 349 {*muldi3_1}
     (nil))
(insn 183 182 184 23 (parallel [
            (set (reg:DI 2 cx [orig:131 _45 ] [131])
                (plus:DI (reg:DI 2 cx [orig:128 _42 ] [128])
                    (reg:DI 1 dx [orig:130 _44 ] [130])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":141 222 {*adddi_1}
     (nil))
(insn 184 183 185 23 (set (reg:SI 1 dx [1595])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":141 86 {*movsi_internal}
     (nil))
(insn 185 184 186 23 (set (reg:DI 1 dx [orig:132 _46 ] [132])
        (sign_extend:DI (reg:SI 1 dx [1595]))) "BNDLYR2.f":141 149 {*extendsidi2_rex64}
     (nil))
(insn 186 185 187 23 (parallel [
            (set (reg:DI 1 dx [orig:133 _47 ] [133])
                (plus:DI (reg:DI 1 dx [orig:132 _46 ] [132])
                    (reg:DI 2 cx [orig:131 _45 ] [131])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":141 222 {*adddi_1}
     (nil))
(insn 187 186 188 23 (parallel [
            (set (reg:DI 2 cx [orig:134 _48 ] [134])
                (plus:DI (reg:DI 1 dx [orig:133 _47 ] [133])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":141 222 {*adddi_1}
     (nil))
(insn 188 187 189 23 (set (reg/f:DI 1 dx [1596])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -160 [0xffffffffffffff60])) [3 tbnd+0 S8 A64])) "BNDLYR2.f":141 85 {*movdi_internal}
     (nil))
(insn 189 188 190 23 (set (reg:SF 21 xmm0 [1597])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0  S4 A32])) "BNDLYR2.f":141 131 {*movsf_internal}
     (nil))
(insn 190 189 191 23 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:134 _48 ] [134])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1596])) [1 *tbnd_1539(D) S4 A32])
        (reg:SF 21 xmm0 [1597])) "BNDLYR2.f":141 131 {*movsf_internal}
     (nil))
(insn 191 190 192 23 (set (reg:SI 1 dx [1598])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 lbnd+0 S4 A32])) "BNDLYR2.f":142 86 {*movsi_internal}
     (nil))
(insn 192 191 193 23 (set (reg:DI 1 dx [orig:135 _49 ] [135])
        (sign_extend:DI (reg:SI 1 dx [1598]))) "BNDLYR2.f":142 149 {*extendsidi2_rex64}
     (nil))
(insn 193 192 194 23 (parallel [
            (set (reg:DI 2 cx [orig:136 _50 ] [136])
                (mult:DI (reg:DI 1 dx [orig:135 _49 ] [135])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":142 349 {*muldi3_1}
     (nil))
(insn 194 193 195 23 (set (reg:SI 1 dx [1599])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":142 86 {*movsi_internal}
     (nil))
(insn 195 194 196 23 (set (reg:DI 1 dx [orig:137 _51 ] [137])
        (sign_extend:DI (reg:SI 1 dx [1599]))) "BNDLYR2.f":142 149 {*extendsidi2_rex64}
     (nil))
(insn 196 195 197 23 (parallel [
            (set (reg:DI 1 dx [orig:138 _52 ] [138])
                (mult:DI (reg:DI 1 dx [orig:137 _51 ] [137])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":142 349 {*muldi3_1}
     (nil))
(insn 197 196 198 23 (parallel [
            (set (reg:DI 2 cx [orig:139 _53 ] [139])
                (plus:DI (reg:DI 2 cx [orig:136 _50 ] [136])
                    (reg:DI 1 dx [orig:138 _52 ] [138])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":142 222 {*adddi_1}
     (nil))
(insn 198 197 199 23 (set (reg:SI 1 dx [1600])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":142 86 {*movsi_internal}
     (nil))
(insn 199 198 200 23 (set (reg:DI 1 dx [orig:140 _54 ] [140])
        (sign_extend:DI (reg:SI 1 dx [1600]))) "BNDLYR2.f":142 149 {*extendsidi2_rex64}
     (nil))
(insn 200 199 201 23 (parallel [
            (set (reg:DI 1 dx [orig:141 _55 ] [141])
                (plus:DI (reg:DI 1 dx [orig:140 _54 ] [140])
                    (reg:DI 2 cx [orig:139 _53 ] [139])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":142 222 {*adddi_1}
     (nil))
(insn 201 200 202 23 (parallel [
            (set (reg:DI 2 cx [orig:142 _56 ] [142])
                (plus:DI (reg:DI 1 dx [orig:141 _55 ] [141])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":142 222 {*adddi_1}
     (nil))
(insn 202 201 203 23 (set (reg/f:DI 1 dx [1601])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [3 qbnd+0 S8 A64])) "BNDLYR2.f":142 85 {*movdi_internal}
     (nil))
(insn 203 202 204 23 (set (reg:SF 21 xmm0 [1602])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0  S4 A32])) "BNDLYR2.f":142 131 {*movsf_internal}
     (nil))
(insn 204 203 205 23 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:142 _56 ] [142])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1601])) [1 *qbnd_1541(D) S4 A32])
        (reg:SF 21 xmm0 [1602])) "BNDLYR2.f":142 131 {*movsf_internal}
     (nil))
(insn 205 204 206 23 (set (reg:SI 1 dx [1603])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 lbnd+0 S4 A32])) "BNDLYR2.f":143 86 {*movsi_internal}
     (nil))
(insn 206 205 207 23 (set (reg:DI 1 dx [orig:143 _57 ] [143])
        (sign_extend:DI (reg:SI 1 dx [1603]))) "BNDLYR2.f":143 149 {*extendsidi2_rex64}
     (nil))
(insn 207 206 208 23 (parallel [
            (set (reg:DI 2 cx [orig:144 _58 ] [144])
                (mult:DI (reg:DI 1 dx [orig:143 _57 ] [143])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":143 349 {*muldi3_1}
     (nil))
(insn 208 207 209 23 (set (reg:SI 1 dx [1604])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":143 86 {*movsi_internal}
     (nil))
(insn 209 208 210 23 (set (reg:DI 1 dx [orig:145 _59 ] [145])
        (sign_extend:DI (reg:SI 1 dx [1604]))) "BNDLYR2.f":143 149 {*extendsidi2_rex64}
     (nil))
(insn 210 209 211 23 (parallel [
            (set (reg:DI 1 dx [orig:146 _60 ] [146])
                (mult:DI (reg:DI 1 dx [orig:145 _59 ] [145])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":143 349 {*muldi3_1}
     (nil))
(insn 211 210 212 23 (parallel [
            (set (reg:DI 2 cx [orig:147 _61 ] [147])
                (plus:DI (reg:DI 2 cx [orig:144 _58 ] [144])
                    (reg:DI 1 dx [orig:146 _60 ] [146])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":143 222 {*adddi_1}
     (nil))
(insn 212 211 213 23 (set (reg:SI 1 dx [1605])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":143 86 {*movsi_internal}
     (nil))
(insn 213 212 214 23 (set (reg:DI 1 dx [orig:148 _62 ] [148])
        (sign_extend:DI (reg:SI 1 dx [1605]))) "BNDLYR2.f":143 149 {*extendsidi2_rex64}
     (nil))
(insn 214 213 215 23 (parallel [
            (set (reg:DI 1 dx [orig:149 _63 ] [149])
                (plus:DI (reg:DI 1 dx [orig:148 _62 ] [148])
                    (reg:DI 2 cx [orig:147 _61 ] [147])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":143 222 {*adddi_1}
     (nil))
(insn 215 214 216 23 (parallel [
            (set (reg:DI 2 cx [orig:150 _64 ] [150])
                (plus:DI (reg:DI 1 dx [orig:149 _63 ] [149])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":143 222 {*adddi_1}
     (nil))
(insn 216 215 217 23 (set (reg/f:DI 1 dx [1606])
        (symbol_ref:DI ("qsbnd.4217") [flags 0x202]  <var_decl 0x7fd1b2d4d870 qsbnd>)) "BNDLYR2.f":143 85 {*movdi_internal}
     (nil))
(insn 217 216 218 23 (set (reg:SF 21 xmm0 [1607])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0  S4 A32])) "BNDLYR2.f":143 131 {*movsf_internal}
     (nil))
(insn 218 217 219 23 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:150 _64 ] [150])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1606])) [1 qsbnd S4 A32])
        (reg:SF 21 xmm0 [1607])) "BNDLYR2.f":143 131 {*movsf_internal}
     (nil))
(insn 219 218 220 23 (set (reg:SI 1 dx [1608])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 lbnd+0 S4 A32])) "BNDLYR2.f":144 86 {*movsi_internal}
     (nil))
(insn 220 219 221 23 (set (reg:DI 1 dx [orig:151 _65 ] [151])
        (sign_extend:DI (reg:SI 1 dx [1608]))) "BNDLYR2.f":144 149 {*extendsidi2_rex64}
     (nil))
(insn 221 220 222 23 (parallel [
            (set (reg:DI 2 cx [orig:152 _66 ] [152])
                (mult:DI (reg:DI 1 dx [orig:151 _65 ] [151])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":144 349 {*muldi3_1}
     (nil))
(insn 222 221 223 23 (set (reg:SI 1 dx [1609])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":144 86 {*movsi_internal}
     (nil))
(insn 223 222 224 23 (set (reg:DI 1 dx [orig:153 _67 ] [153])
        (sign_extend:DI (reg:SI 1 dx [1609]))) "BNDLYR2.f":144 149 {*extendsidi2_rex64}
     (nil))
(insn 224 223 225 23 (parallel [
            (set (reg:DI 1 dx [orig:154 _68 ] [154])
                (mult:DI (reg:DI 1 dx [orig:153 _67 ] [153])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":144 349 {*muldi3_1}
     (nil))
(insn 225 224 226 23 (parallel [
            (set (reg:DI 2 cx [orig:155 _69 ] [155])
                (plus:DI (reg:DI 2 cx [orig:152 _66 ] [152])
                    (reg:DI 1 dx [orig:154 _68 ] [154])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":144 222 {*adddi_1}
     (nil))
(insn 226 225 227 23 (set (reg:SI 1 dx [1610])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":144 86 {*movsi_internal}
     (nil))
(insn 227 226 228 23 (set (reg:DI 1 dx [orig:156 _70 ] [156])
        (sign_extend:DI (reg:SI 1 dx [1610]))) "BNDLYR2.f":144 149 {*extendsidi2_rex64}
     (nil))
(insn 228 227 229 23 (parallel [
            (set (reg:DI 1 dx [orig:157 _71 ] [157])
                (plus:DI (reg:DI 1 dx [orig:156 _70 ] [156])
                    (reg:DI 2 cx [orig:155 _69 ] [155])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":144 222 {*adddi_1}
     (nil))
(insn 229 228 230 23 (parallel [
            (set (reg:DI 2 cx [orig:158 _72 ] [158])
                (plus:DI (reg:DI 1 dx [orig:157 _71 ] [157])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":144 222 {*adddi_1}
     (nil))
(insn 230 229 231 23 (set (reg/f:DI 1 dx [1611])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -176 [0xffffffffffffff50])) [3 rhbnd+0 S8 A64])) "BNDLYR2.f":144 85 {*movdi_internal}
     (nil))
(insn 231 230 232 23 (set (reg:SF 21 xmm0 [1612])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0  S4 A32])) "BNDLYR2.f":144 131 {*movsf_internal}
     (nil))
(insn 232 231 233 23 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:158 _72 ] [158])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1611])) [1 *rhbnd_1544(D) S4 A32])
        (reg:SF 21 xmm0 [1612])) "BNDLYR2.f":144 131 {*movsf_internal}
     (nil))
(insn 233 232 234 23 (set (reg:SI 1 dx [1613])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 lbnd+0 S4 A32])) "BNDLYR2.f":145 86 {*movsi_internal}
     (nil))
(insn 234 233 235 23 (set (reg:DI 1 dx [orig:159 _73 ] [159])
        (sign_extend:DI (reg:SI 1 dx [1613]))) "BNDLYR2.f":145 149 {*extendsidi2_rex64}
     (nil))
(insn 235 234 236 23 (parallel [
            (set (reg:DI 2 cx [orig:160 _74 ] [160])
                (mult:DI (reg:DI 1 dx [orig:159 _73 ] [159])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":145 349 {*muldi3_1}
     (nil))
(insn 236 235 237 23 (set (reg:SI 1 dx [1614])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":145 86 {*movsi_internal}
     (nil))
(insn 237 236 238 23 (set (reg:DI 1 dx [orig:161 _75 ] [161])
        (sign_extend:DI (reg:SI 1 dx [1614]))) "BNDLYR2.f":145 149 {*extendsidi2_rex64}
     (nil))
(insn 238 237 239 23 (parallel [
            (set (reg:DI 1 dx [orig:162 _76 ] [162])
                (mult:DI (reg:DI 1 dx [orig:161 _75 ] [161])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":145 349 {*muldi3_1}
     (nil))
(insn 239 238 240 23 (parallel [
            (set (reg:DI 2 cx [orig:163 _77 ] [163])
                (plus:DI (reg:DI 2 cx [orig:160 _74 ] [160])
                    (reg:DI 1 dx [orig:162 _76 ] [162])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":145 222 {*adddi_1}
     (nil))
(insn 240 239 241 23 (set (reg:SI 1 dx [1615])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":145 86 {*movsi_internal}
     (nil))
(insn 241 240 242 23 (set (reg:DI 1 dx [orig:164 _78 ] [164])
        (sign_extend:DI (reg:SI 1 dx [1615]))) "BNDLYR2.f":145 149 {*extendsidi2_rex64}
     (nil))
(insn 242 241 243 23 (parallel [
            (set (reg:DI 1 dx [orig:165 _79 ] [165])
                (plus:DI (reg:DI 1 dx [orig:164 _78 ] [164])
                    (reg:DI 2 cx [orig:163 _77 ] [163])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":145 222 {*adddi_1}
     (nil))
(insn 243 242 244 23 (parallel [
            (set (reg:DI 2 cx [orig:166 _80 ] [166])
                (plus:DI (reg:DI 1 dx [orig:165 _79 ] [165])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":145 222 {*adddi_1}
     (nil))
(insn 244 243 245 23 (set (reg/f:DI 1 dx [1616])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [3 ubnd+0 S8 A64])) "BNDLYR2.f":145 85 {*movdi_internal}
     (nil))
(insn 245 244 246 23 (set (reg:SF 21 xmm0 [1617])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0  S4 A32])) "BNDLYR2.f":145 131 {*movsf_internal}
     (nil))
(insn 246 245 247 23 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:166 _80 ] [166])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1616])) [1 *ubnd_1546(D) S4 A32])
        (reg:SF 21 xmm0 [1617])) "BNDLYR2.f":145 131 {*movsf_internal}
     (nil))
(insn 247 246 248 23 (set (reg:SI 1 dx [1618])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 lbnd+0 S4 A32])) "BNDLYR2.f":146 86 {*movsi_internal}
     (nil))
(insn 248 247 249 23 (set (reg:DI 1 dx [orig:167 _81 ] [167])
        (sign_extend:DI (reg:SI 1 dx [1618]))) "BNDLYR2.f":146 149 {*extendsidi2_rex64}
     (nil))
(insn 249 248 250 23 (parallel [
            (set (reg:DI 2 cx [orig:168 _82 ] [168])
                (mult:DI (reg:DI 1 dx [orig:167 _81 ] [167])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":146 349 {*muldi3_1}
     (nil))
(insn 250 249 251 23 (set (reg:SI 1 dx [1619])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":146 86 {*movsi_internal}
     (nil))
(insn 251 250 252 23 (set (reg:DI 1 dx [orig:169 _83 ] [169])
        (sign_extend:DI (reg:SI 1 dx [1619]))) "BNDLYR2.f":146 149 {*extendsidi2_rex64}
     (nil))
(insn 252 251 253 23 (parallel [
            (set (reg:DI 1 dx [orig:170 _84 ] [170])
                (mult:DI (reg:DI 1 dx [orig:169 _83 ] [169])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":146 349 {*muldi3_1}
     (nil))
(insn 253 252 254 23 (parallel [
            (set (reg:DI 2 cx [orig:171 _85 ] [171])
                (plus:DI (reg:DI 2 cx [orig:168 _82 ] [168])
                    (reg:DI 1 dx [orig:170 _84 ] [170])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":146 222 {*adddi_1}
     (nil))
(insn 254 253 255 23 (set (reg:SI 1 dx [1620])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":146 86 {*movsi_internal}
     (nil))
(insn 255 254 256 23 (set (reg:DI 1 dx [orig:172 _86 ] [172])
        (sign_extend:DI (reg:SI 1 dx [1620]))) "BNDLYR2.f":146 149 {*extendsidi2_rex64}
     (nil))
(insn 256 255 257 23 (parallel [
            (set (reg:DI 1 dx [orig:173 _87 ] [173])
                (plus:DI (reg:DI 1 dx [orig:172 _86 ] [172])
                    (reg:DI 2 cx [orig:171 _85 ] [171])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":146 222 {*adddi_1}
     (nil))
(insn 257 256 258 23 (parallel [
            (set (reg:DI 2 cx [orig:174 _88 ] [174])
                (plus:DI (reg:DI 1 dx [orig:173 _87 ] [173])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":146 222 {*adddi_1}
     (nil))
(insn 258 257 259 23 (set (reg/f:DI 1 dx [1621])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [3 vbnd+0 S8 A64])) "BNDLYR2.f":146 85 {*movdi_internal}
     (nil))
(insn 259 258 260 23 (set (reg:SF 21 xmm0 [1622])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0  S4 A32])) "BNDLYR2.f":146 131 {*movsf_internal}
     (nil))
(insn 260 259 261 23 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:174 _88 ] [174])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1621])) [1 *vbnd_1548(D) S4 A32])
        (reg:SF 21 xmm0 [1622])) "BNDLYR2.f":146 131 {*movsf_internal}
     (nil))
(insn 261 260 262 23 (set (reg:SI 1 dx [1623])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 lbnd+0 S4 A32])) "BNDLYR2.f":147 86 {*movsi_internal}
     (nil))
(insn 262 261 263 23 (set (reg:DI 1 dx [orig:175 _89 ] [175])
        (sign_extend:DI (reg:SI 1 dx [1623]))) "BNDLYR2.f":147 149 {*extendsidi2_rex64}
     (nil))
(insn 263 262 264 23 (parallel [
            (set (reg:DI 2 cx [orig:176 _90 ] [176])
                (mult:DI (reg:DI 1 dx [orig:175 _89 ] [175])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":147 349 {*muldi3_1}
     (nil))
(insn 264 263 265 23 (set (reg:SI 1 dx [1624])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":147 86 {*movsi_internal}
     (nil))
(insn 265 264 266 23 (set (reg:DI 1 dx [orig:177 _91 ] [177])
        (sign_extend:DI (reg:SI 1 dx [1624]))) "BNDLYR2.f":147 149 {*extendsidi2_rex64}
     (nil))
(insn 266 265 267 23 (parallel [
            (set (reg:DI 1 dx [orig:178 _92 ] [178])
                (mult:DI (reg:DI 1 dx [orig:177 _91 ] [177])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":147 349 {*muldi3_1}
     (nil))
(insn 267 266 268 23 (parallel [
            (set (reg:DI 2 cx [orig:179 _93 ] [179])
                (plus:DI (reg:DI 2 cx [orig:176 _90 ] [176])
                    (reg:DI 1 dx [orig:178 _92 ] [178])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":147 222 {*adddi_1}
     (nil))
(insn 268 267 269 23 (set (reg:SI 1 dx [1625])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":147 86 {*movsi_internal}
     (nil))
(insn 269 268 270 23 (set (reg:DI 1 dx [orig:180 _94 ] [180])
        (sign_extend:DI (reg:SI 1 dx [1625]))) "BNDLYR2.f":147 149 {*extendsidi2_rex64}
     (nil))
(insn 270 269 271 23 (parallel [
            (set (reg:DI 1 dx [orig:181 _95 ] [181])
                (plus:DI (reg:DI 1 dx [orig:180 _94 ] [180])
                    (reg:DI 2 cx [orig:179 _93 ] [179])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":147 222 {*adddi_1}
     (nil))
(insn 271 270 272 23 (parallel [
            (set (reg:DI 2 cx [orig:182 _96 ] [182])
                (plus:DI (reg:DI 1 dx [orig:181 _95 ] [181])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":147 222 {*adddi_1}
     (nil))
(insn 272 271 273 23 (set (reg/f:DI 1 dx [1626])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 16 [0x10])) [3 omgbnd+0 S8 A64])) "BNDLYR2.f":147 85 {*movdi_internal}
     (nil))
(insn 273 272 274 23 (set (reg:SF 21 xmm0 [1627])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0  S4 A32])) "BNDLYR2.f":147 131 {*movsf_internal}
     (nil))
(insn 274 273 275 23 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:182 _96 ] [182])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1626])) [1 *omgbnd_1550(D) S4 A32])
        (reg:SF 21 xmm0 [1627])) "BNDLYR2.f":147 131 {*movsf_internal}
     (nil))
(insn 275 274 276 23 (set (reg:SI 1 dx [1628])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 lbnd+0 S4 A32])) "BNDLYR2.f":148 86 {*movsi_internal}
     (nil))
(insn 276 275 277 23 (set (reg:DI 1 dx [orig:183 _97 ] [183])
        (sign_extend:DI (reg:SI 1 dx [1628]))) "BNDLYR2.f":148 149 {*extendsidi2_rex64}
     (nil))
(insn 277 276 278 23 (parallel [
            (set (reg:DI 2 cx [orig:184 _98 ] [184])
                (mult:DI (reg:DI 1 dx [orig:183 _97 ] [183])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":148 349 {*muldi3_1}
     (nil))
(insn 278 277 279 23 (set (reg:SI 1 dx [1629])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":148 86 {*movsi_internal}
     (nil))
(insn 279 278 280 23 (set (reg:DI 1 dx [orig:185 _99 ] [185])
        (sign_extend:DI (reg:SI 1 dx [1629]))) "BNDLYR2.f":148 149 {*extendsidi2_rex64}
     (nil))
(insn 280 279 281 23 (parallel [
            (set (reg:DI 1 dx [orig:186 _100 ] [186])
                (mult:DI (reg:DI 1 dx [orig:185 _99 ] [185])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":148 349 {*muldi3_1}
     (nil))
(insn 281 280 282 23 (parallel [
            (set (reg:DI 2 cx [orig:187 _101 ] [187])
                (plus:DI (reg:DI 2 cx [orig:184 _98 ] [184])
                    (reg:DI 1 dx [orig:186 _100 ] [186])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":148 222 {*adddi_1}
     (nil))
(insn 282 281 283 23 (set (reg:SI 1 dx [1630])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":148 86 {*movsi_internal}
     (nil))
(insn 283 282 284 23 (set (reg:DI 1 dx [orig:188 _102 ] [188])
        (sign_extend:DI (reg:SI 1 dx [1630]))) "BNDLYR2.f":148 149 {*extendsidi2_rex64}
     (nil))
(insn 284 283 285 23 (parallel [
            (set (reg:DI 1 dx [orig:189 _103 ] [189])
                (plus:DI (reg:DI 1 dx [orig:188 _102 ] [188])
                    (reg:DI 2 cx [orig:187 _101 ] [187])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":148 222 {*adddi_1}
     (nil))
(insn 285 284 286 23 (parallel [
            (set (reg:DI 2 cx [orig:190 _104 ] [190])
                (plus:DI (reg:DI 1 dx [orig:189 _103 ] [189])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":148 222 {*adddi_1}
     (nil))
(insn 286 285 287 23 (set (reg/f:DI 1 dx [1631])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 32 [0x20])) [4 lvlbnd+0 S8 A64])) "BNDLYR2.f":148 85 {*movdi_internal}
     (nil))
(insn 287 286 288 23 (set (mem:SI (plus:DI (mult:DI (reg:DI 2 cx [orig:190 _104 ] [190])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1631])) [2 *lvlbnd_1552(D) S4 A32])
        (const_int 0 [0])) "BNDLYR2.f":148 86 {*movsi_internal}
     (nil))
(insn 288 287 289 23 (set (reg:SI 1 dx [1632])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 lbnd+0 S4 A32])) "BNDLYR2.f":149 86 {*movsi_internal}
     (nil))
(insn 289 288 290 23 (set (reg:DI 1 dx [orig:191 _105 ] [191])
        (sign_extend:DI (reg:SI 1 dx [1632]))) "BNDLYR2.f":149 149 {*extendsidi2_rex64}
     (nil))
(insn 290 289 291 23 (parallel [
            (set (reg:DI 2 cx [orig:192 _106 ] [192])
                (mult:DI (reg:DI 1 dx [orig:191 _105 ] [191])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":149 349 {*muldi3_1}
     (nil))
(insn 291 290 292 23 (set (reg:SI 1 dx [1633])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":149 86 {*movsi_internal}
     (nil))
(insn 292 291 293 23 (set (reg:DI 1 dx [orig:193 _107 ] [193])
        (sign_extend:DI (reg:SI 1 dx [1633]))) "BNDLYR2.f":149 149 {*extendsidi2_rex64}
     (nil))
(insn 293 292 294 23 (parallel [
            (set (reg:DI 1 dx [orig:194 _108 ] [194])
                (mult:DI (reg:DI 1 dx [orig:193 _107 ] [193])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":149 349 {*muldi3_1}
     (nil))
(insn 294 293 295 23 (parallel [
            (set (reg:DI 2 cx [orig:195 _109 ] [195])
                (plus:DI (reg:DI 2 cx [orig:192 _106 ] [192])
                    (reg:DI 1 dx [orig:194 _108 ] [194])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":149 222 {*adddi_1}
     (nil))
(insn 295 294 296 23 (set (reg:SI 1 dx [1634])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":149 86 {*movsi_internal}
     (nil))
(insn 296 295 297 23 (set (reg:DI 1 dx [orig:196 _110 ] [196])
        (sign_extend:DI (reg:SI 1 dx [1634]))) "BNDLYR2.f":149 149 {*extendsidi2_rex64}
     (nil))
(insn 297 296 298 23 (parallel [
            (set (reg:DI 1 dx [orig:197 _111 ] [197])
                (plus:DI (reg:DI 1 dx [orig:196 _110 ] [196])
                    (reg:DI 2 cx [orig:195 _109 ] [195])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":149 222 {*adddi_1}
     (nil))
(insn 298 297 299 23 (parallel [
            (set (reg:DI 2 cx [orig:198 _112 ] [198])
                (plus:DI (reg:DI 1 dx [orig:197 _111 ] [197])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":149 222 {*adddi_1}
     (nil))
(insn 299 298 300 23 (set (reg/f:DI 1 dx [1635])
        (symbol_ref:DI ("nsum.4200") [flags 0x202]  <var_decl 0x7fd1b2d4d120 nsum>)) "BNDLYR2.f":149 85 {*movdi_internal}
     (nil))
(insn 300 299 301 23 (set (reg:SF 21 xmm0 [1636])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0  S4 A32])) "BNDLYR2.f":149 131 {*movsf_internal}
     (nil))
(insn 301 300 302 23 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:198 _112 ] [198])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1635])) [1 nsum S4 A32])
        (reg:SF 21 xmm0 [1636])) "BNDLYR2.f":149 131 {*movsf_internal}
     (nil))
(insn 302 301 303 23 (set (reg:SI 1 dx [1637])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 lbnd+0 S4 A32])) "BNDLYR2.f":150 86 {*movsi_internal}
     (nil))
(insn 303 302 304 23 (set (reg:DI 1 dx [orig:199 _113 ] [199])
        (sign_extend:DI (reg:SI 1 dx [1637]))) "BNDLYR2.f":150 149 {*extendsidi2_rex64}
     (nil))
(insn 304 303 305 23 (parallel [
            (set (reg:DI 2 cx [orig:200 _114 ] [200])
                (mult:DI (reg:DI 1 dx [orig:199 _113 ] [199])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":150 349 {*muldi3_1}
     (nil))
(insn 305 304 306 23 (set (reg:SI 1 dx [1638])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":150 86 {*movsi_internal}
     (nil))
(insn 306 305 307 23 (set (reg:DI 1 dx [orig:201 _115 ] [201])
        (sign_extend:DI (reg:SI 1 dx [1638]))) "BNDLYR2.f":150 149 {*extendsidi2_rex64}
     (nil))
(insn 307 306 308 23 (parallel [
            (set (reg:DI 1 dx [orig:202 _116 ] [202])
                (mult:DI (reg:DI 1 dx [orig:201 _115 ] [201])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":150 349 {*muldi3_1}
     (nil))
(insn 308 307 309 23 (parallel [
            (set (reg:DI 2 cx [orig:203 _117 ] [203])
                (plus:DI (reg:DI 2 cx [orig:200 _114 ] [200])
                    (reg:DI 1 dx [orig:202 _116 ] [202])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":150 222 {*adddi_1}
     (nil))
(insn 309 308 310 23 (set (reg:SI 1 dx [1639])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":150 86 {*movsi_internal}
     (nil))
(insn 310 309 311 23 (set (reg:DI 1 dx [orig:204 _118 ] [204])
        (sign_extend:DI (reg:SI 1 dx [1639]))) "BNDLYR2.f":150 149 {*extendsidi2_rex64}
     (nil))
(insn 311 310 312 23 (parallel [
            (set (reg:DI 1 dx [orig:205 _119 ] [205])
                (plus:DI (reg:DI 1 dx [orig:204 _118 ] [204])
                    (reg:DI 2 cx [orig:203 _117 ] [203])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":150 222 {*adddi_1}
     (nil))
(insn 312 311 313 23 (parallel [
            (set (reg:DI 2 cx [orig:206 _120 ] [206])
                (plus:DI (reg:DI 1 dx [orig:205 _119 ] [205])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":150 222 {*adddi_1}
     (nil))
(insn 313 312 314 23 (set (reg/f:DI 1 dx [1640])
        (symbol_ref:DI ("psum.4208") [flags 0x202]  <var_decl 0x7fd1b2d4d480 psum>)) "BNDLYR2.f":150 85 {*movdi_internal}
     (nil))
(insn 314 313 315 23 (set (reg:SF 21 xmm0 [1641])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0  S4 A32])) "BNDLYR2.f":150 131 {*movsf_internal}
     (nil))
(insn 315 314 316 23 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:206 _120 ] [206])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1640])) [1 psum S4 A32])
        (reg:SF 21 xmm0 [1641])) "BNDLYR2.f":150 131 {*movsf_internal}
     (nil))
(insn 316 315 317 23 (set (reg:SI 1 dx [1642])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 lbnd+0 S4 A32])) "BNDLYR2.f":151 86 {*movsi_internal}
     (nil))
(insn 317 316 318 23 (set (reg:DI 1 dx [orig:207 _121 ] [207])
        (sign_extend:DI (reg:SI 1 dx [1642]))) "BNDLYR2.f":151 149 {*extendsidi2_rex64}
     (nil))
(insn 318 317 319 23 (parallel [
            (set (reg:DI 2 cx [orig:208 _122 ] [208])
                (mult:DI (reg:DI 1 dx [orig:207 _121 ] [207])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":151 349 {*muldi3_1}
     (nil))
(insn 319 318 320 23 (set (reg:SI 1 dx [1643])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":151 86 {*movsi_internal}
     (nil))
(insn 320 319 321 23 (set (reg:DI 1 dx [orig:209 _123 ] [209])
        (sign_extend:DI (reg:SI 1 dx [1643]))) "BNDLYR2.f":151 149 {*extendsidi2_rex64}
     (nil))
(insn 321 320 322 23 (parallel [
            (set (reg:DI 1 dx [orig:210 _124 ] [210])
                (mult:DI (reg:DI 1 dx [orig:209 _123 ] [209])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":151 349 {*muldi3_1}
     (nil))
(insn 322 321 323 23 (parallel [
            (set (reg:DI 2 cx [orig:211 _125 ] [211])
                (plus:DI (reg:DI 2 cx [orig:208 _122 ] [208])
                    (reg:DI 1 dx [orig:210 _124 ] [210])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":151 222 {*adddi_1}
     (nil))
(insn 323 322 324 23 (set (reg:SI 1 dx [1644])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":151 86 {*movsi_internal}
     (nil))
(insn 324 323 325 23 (set (reg:DI 1 dx [orig:212 _126 ] [212])
        (sign_extend:DI (reg:SI 1 dx [1644]))) "BNDLYR2.f":151 149 {*extendsidi2_rex64}
     (nil))
(insn 325 324 326 23 (parallel [
            (set (reg:DI 1 dx [orig:213 _127 ] [213])
                (plus:DI (reg:DI 1 dx [orig:212 _126 ] [212])
                    (reg:DI 2 cx [orig:211 _125 ] [211])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":151 222 {*adddi_1}
     (nil))
(insn 326 325 327 23 (parallel [
            (set (reg:DI 2 cx [orig:214 _128 ] [214])
                (plus:DI (reg:DI 1 dx [orig:213 _127 ] [213])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":151 222 {*adddi_1}
     (nil))
(insn 327 326 328 23 (set (reg/f:DI 1 dx [1645])
        (symbol_ref:DI ("pvsum.4212") [flags 0x202]  <var_decl 0x7fd1b2d4d630 pvsum>)) "BNDLYR2.f":151 85 {*movdi_internal}
     (nil))
(insn 328 327 329 23 (set (reg:SF 21 xmm0 [1646])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0  S4 A32])) "BNDLYR2.f":151 131 {*movsf_internal}
     (nil))
(insn 329 328 330 23 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:214 _128 ] [214])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1645])) [1 pvsum S4 A32])
        (reg:SF 21 xmm0 [1646])) "BNDLYR2.f":151 131 {*movsf_internal}
     (nil))
(insn 330 329 331 23 (set (reg:SI 1 dx [1647])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 lbnd+0 S4 A32])) "BNDLYR2.f":152 86 {*movsi_internal}
     (nil))
(insn 331 330 332 23 (set (reg:DI 1 dx [orig:215 _129 ] [215])
        (sign_extend:DI (reg:SI 1 dx [1647]))) "BNDLYR2.f":152 149 {*extendsidi2_rex64}
     (nil))
(insn 332 331 333 23 (parallel [
            (set (reg:DI 2 cx [orig:216 _130 ] [216])
                (mult:DI (reg:DI 1 dx [orig:215 _129 ] [215])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":152 349 {*muldi3_1}
     (nil))
(insn 333 332 334 23 (set (reg:SI 1 dx [1648])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":152 86 {*movsi_internal}
     (nil))
(insn 334 333 335 23 (set (reg:DI 1 dx [orig:217 _131 ] [217])
        (sign_extend:DI (reg:SI 1 dx [1648]))) "BNDLYR2.f":152 149 {*extendsidi2_rex64}
     (nil))
(insn 335 334 336 23 (parallel [
            (set (reg:DI 1 dx [orig:218 _132 ] [218])
                (mult:DI (reg:DI 1 dx [orig:217 _131 ] [217])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":152 349 {*muldi3_1}
     (nil))
(insn 336 335 337 23 (parallel [
            (set (reg:DI 2 cx [orig:219 _133 ] [219])
                (plus:DI (reg:DI 2 cx [orig:216 _130 ] [216])
                    (reg:DI 1 dx [orig:218 _132 ] [218])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":152 222 {*adddi_1}
     (nil))
(insn 337 336 338 23 (set (reg:SI 1 dx [1649])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":152 86 {*movsi_internal}
     (nil))
(insn 338 337 339 23 (set (reg:DI 1 dx [orig:220 _134 ] [220])
        (sign_extend:DI (reg:SI 1 dx [1649]))) "BNDLYR2.f":152 149 {*extendsidi2_rex64}
     (nil))
(insn 339 338 340 23 (parallel [
            (set (reg:DI 1 dx [orig:221 _135 ] [221])
                (plus:DI (reg:DI 1 dx [orig:220 _134 ] [220])
                    (reg:DI 2 cx [orig:219 _133 ] [219])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":152 222 {*adddi_1}
     (nil))
(insn 340 339 341 23 (parallel [
            (set (reg:DI 2 cx [orig:222 _136 ] [222])
                (plus:DI (reg:DI 1 dx [orig:221 _135 ] [221])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":152 222 {*adddi_1}
     (nil))
(insn 341 340 342 23 (set (reg/f:DI 1 dx [1650])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 24 [0x18])) [3 pwtbnd+0 S8 A64])) "BNDLYR2.f":152 85 {*movdi_internal}
     (nil))
(insn 342 341 343 23 (set (reg:SF 21 xmm0 [1651])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0  S4 A32])) "BNDLYR2.f":152 131 {*movsf_internal}
     (nil))
(insn 343 342 344 23 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:222 _136 ] [222])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1650])) [1 *pwtbnd_1557(D) S4 A32])
        (reg:SF 21 xmm0 [1651])) "BNDLYR2.f":152 131 {*movsf_internal}
     (nil))
(insn 344 343 3104 23 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":139 221 {*addsi_1}
     (nil))
(jump_insn 3104 344 3105 23 (set (pc)
        (label_ref 345)) "BNDLYR2.f":139 683 {jump}
     (nil)
 -> 345)
;;  succ:       22 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1529

(barrier 3105 3104 3197)
;; basic block 153, loop depth 0, maybe hot
;;  prev block 23, next block 24, flags: (RTL, MODIFIED)
;;  pred:       22
;; bb 153 artificial_defs: { }
;; bb 153 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1529
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 3197 3105 3196 153 150 (nil) [1 uses])
(note 3196 3197 3198 153 [bb 153] NOTE_INSN_BASIC_BLOCK)
(insn 3198 3196 348 153 (const_int 0 [0]) "BNDLYR2.f":152 718 {nop}
     (nil))
;;  succ:       24 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1529

;; basic block 24, loop depth 0, maybe hot
;;  prev block 153, next block 152, flags: (RTL, MODIFIED)
;;  pred:       153 [always]  (FALLTHRU)
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1529
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 348 3198 349 24 14 (nil) [0 uses])
(note 349 348 350 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 350 349 3106 24 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":138 221 {*addsi_1}
     (nil))
(jump_insn 3106 350 3107 24 (set (pc)
        (label_ref 351)) "BNDLYR2.f":138 683 {jump}
     (nil)
 -> 351)
;;  succ:       20 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1529

(barrier 3107 3106 3194)
;; basic block 152, loop depth 0, maybe hot
;;  prev block 24, next block 25, flags: (RTL, MODIFIED)
;;  pred:       20
;; bb 152 artificial_defs: { }
;; bb 152 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 3194 3107 3193 152 149 (nil) [1 uses])
(note 3193 3194 3195 152 [bb 152] NOTE_INSN_BASIC_BLOCK)
(insn 3195 3193 354 152 (const_int 0 [0]) "BNDLYR2.f":139 718 {nop}
     (nil))
;;  succ:       25 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 25, loop depth 0, maybe hot
;;  prev block 152, next block 26, flags: (RTL, MODIFIED)
;;  pred:       152 [always]  (FALLTHRU)
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 1652 1653 1654
(code_label 354 3195 355 25 13 (nil) [0 uses])
(note 355 354 356 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 356 355 358 25 (set (reg/f:DI 0 ax [1652])
        (symbol_ref:DI ("iwl.4192") [flags 0x202]  <var_decl 0x7fd1b2d48cf0 iwl>)) "BNDLYR2.f":156 85 {*movdi_internal}
     (nil))
(insn 358 356 360 25 (set (reg:DI 1 dx [1654])
        (const_int 118524 [0x1cefc])) "BNDLYR2.f":156 85 {*movdi_internal}
     (nil))
(insn 360 358 361 25 (set (reg:SI 4 si)
        (const_int 0 [0])) "BNDLYR2.f":156 86 {*movsi_internal}
     (nil))
(insn 361 360 362 25 (set (reg:DI 5 di)
        (reg:DI 0 ax [1653])) "BNDLYR2.f":156 85 {*movdi_internal}
     (nil))
(call_insn 362 361 365 25 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memset") [flags 0x41]  <function_decl 0x7fd1b2bcc900 __builtin_memset>) [0 __builtin_memset S1 A8])
            (const_int 0 [0]))) "BNDLYR2.f":156 700 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 365 362 1135 25 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 l+0 S4 A32])
        (const_int 1 [0x1])) "BNDLYR2.f":157 86 {*movsi_internal}
     (nil))
;;  succ:       26 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 26, loop depth 0, maybe hot
;;  prev block 25, next block 27, flags: (RTL, MODIFIED)
;;  pred:       25 (FALLTHRU)
;;              59 [always] 
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1532 1657
(code_label 1135 365 366 26 45 (nil) [1 uses])
(note 366 1135 367 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 367 366 368 26 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -36 [0xffffffffffffffdc])) [2 l+0 S4 A32])
            (const_int 38 [0x26]))) "BNDLYR2.f":157 11 {*cmpsi_1}
     (nil))
(insn 368 367 369 26 (set (reg:QI 0 ax [1657])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "BNDLYR2.f":157 678 {*setcc_qi}
     (nil))
(insn 369 368 370 26 (set (reg:SI 0 ax [orig:1532 _1563 ] [1532])
        (zero_extend:SI (reg:QI 0 ax [1657]))) "BNDLYR2.f":157 140 {*zero_extendqisi2}
     (nil))
(insn 370 369 371 26 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:1532 _1563 ] [1532])
            (const_int 0 [0]))) "BNDLYR2.f":157 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 371 370 372 26 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 3200)
            (pc))) "BNDLYR2.f":157 682 {*jcc}
     (nil)
 -> 3200)
;;  succ:       154
;;              27 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 27, loop depth 0, maybe hot
;;  prev block 26, next block 28, flags: (RTL, MODIFIED)
;;  pred:       26 (FALLTHRU)
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 1533 1534
(note 372 371 373 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 373 372 374 27 (set (reg:SI 0 ax [orig:1533 _1564 ] [1533])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7fd1b2d3cea0 parallel>)
                    (const_int 8 [0x8]))) [2 parallel.jsta+0 S4 A64])) "BNDLYR2.f":158 86 {*movsi_internal}
     (nil))
(insn 374 373 375 27 (set (reg:SI 3 bx [orig:1534 _1565 ] [1534])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7fd1b2d3cea0 parallel>)
                    (const_int 12 [0xc]))) [2 parallel.jend+0 S4 A32])) "BNDLYR2.f":158 86 {*movsi_internal}
     (nil))
(insn 375 374 1129 27 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])
        (reg:SI 0 ax [orig:1533 _1564 ] [1533])) "BNDLYR2.f":158 86 {*movsi_internal}
     (nil))
;;  succ:       28 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1534

;; basic block 28, loop depth 0, maybe hot
;;  prev block 27, next block 29, flags: (RTL, MODIFIED)
;;  pred:       27 (FALLTHRU)
;;              58 [always] 
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1534
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1534
;; lr  def 	 17 [flags] 1535 1658
(code_label 1129 375 376 28 44 (nil) [1 uses])
(note 376 1129 377 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 377 376 378 28 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])
            (reg:SI 3 bx [orig:1534 _1565 ] [1534]))) "BNDLYR2.f":158 11 {*cmpsi_1}
     (nil))
(insn 378 377 379 28 (set (reg:QI 0 ax [1658])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "BNDLYR2.f":158 678 {*setcc_qi}
     (nil))
(insn 379 378 380 28 (set (reg:SI 0 ax [orig:1535 _1567 ] [1535])
        (zero_extend:SI (reg:QI 0 ax [1658]))) "BNDLYR2.f":158 140 {*zero_extendqisi2}
     (nil))
(insn 380 379 381 28 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:1535 _1567 ] [1535])
            (const_int 0 [0]))) "BNDLYR2.f":158 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 381 380 382 28 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 3203)
            (pc))) "BNDLYR2.f":158 682 {*jcc}
     (nil)
 -> 3203)
;;  succ:       155
;;              29 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1534

;; basic block 29, loop depth 0, maybe hot
;;  prev block 28, next block 30, flags: (RTL, MODIFIED)
;;  pred:       28 (FALLTHRU)
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1534
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 382 381 383 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 383 382 1123 29 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])
        (const_int 1 [0x1])) "BNDLYR2.f":159 86 {*movsi_internal}
     (nil))
;;  succ:       30 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1534

;; basic block 30, loop depth 0, maybe hot
;;  prev block 29, next block 31, flags: (RTL, MODIFIED)
;;  pred:       29 (FALLTHRU)
;;              57 [always] 
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1534
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1536 1659
(code_label 1123 383 384 30 43 (nil) [1 uses])
(note 384 1123 385 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 385 384 386 30 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])
            (const_int 119 [0x77]))) "BNDLYR2.f":159 11 {*cmpsi_1}
     (nil))
(insn 386 385 387 30 (set (reg:QI 0 ax [1659])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "BNDLYR2.f":159 678 {*setcc_qi}
     (nil))
(insn 387 386 388 30 (set (reg:SI 0 ax [orig:1536 _1569 ] [1536])
        (zero_extend:SI (reg:QI 0 ax [1659]))) "BNDLYR2.f":159 140 {*zero_extendqisi2}
     (nil))
(insn 388 387 389 30 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:1536 _1569 ] [1536])
            (const_int 0 [0]))) "BNDLYR2.f":159 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 389 388 390 30 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 3206)
            (pc))) "BNDLYR2.f":159 682 {*jcc}
     (nil)
 -> 3206)
;;  succ:       156
;;              31 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1534

;; basic block 31, loop depth 0, maybe hot
;;  prev block 30, next block 32, flags: (RTL, MODIFIED)
;;  pred:       30 (FALLTHRU)
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1534
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 223 224 225 226 227 228 1660 1661 1662 1663
(note 390 389 391 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 391 390 392 31 (set (reg:SI 0 ax [1660])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":163 86 {*movsi_internal}
     (nil))
(insn 392 391 393 31 (set (reg:DI 0 ax [orig:223 _137 ] [223])
        (sign_extend:DI (reg:SI 0 ax [1660]))) "BNDLYR2.f":163 149 {*extendsidi2_rex64}
     (nil))
(insn 393 392 394 31 (parallel [
            (set (reg:DI 1 dx [orig:224 _138 ] [224])
                (mult:DI (reg:DI 0 ax [orig:223 _137 ] [223])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":163 349 {*muldi3_1}
     (nil))
(insn 394 393 395 31 (set (reg:SI 0 ax [1661])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":163 86 {*movsi_internal}
     (nil))
(insn 395 394 396 31 (set (reg:DI 0 ax [orig:225 _139 ] [225])
        (sign_extend:DI (reg:SI 0 ax [1661]))) "BNDLYR2.f":163 149 {*extendsidi2_rex64}
     (nil))
(insn 396 395 397 31 (parallel [
            (set (reg:DI 0 ax [orig:226 _140 ] [226])
                (plus:DI (reg:DI 0 ax [orig:225 _139 ] [225])
                    (reg:DI 1 dx [orig:224 _138 ] [224])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":163 222 {*adddi_1}
     (nil))
(insn 397 396 398 31 (parallel [
            (set (reg:DI 1 dx [orig:227 _141 ] [227])
                (plus:DI (reg:DI 0 ax [orig:226 _140 ] [226])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":163 222 {*adddi_1}
     (nil))
(insn 398 397 399 31 (set (reg/f:DI 0 ax [1662])
        (symbol_ref:DI ("loops_") [flags 0x202]  <var_decl 0x7fd1b2d34cf0 loops>)) "BNDLYR2.f":163 85 {*movdi_internal}
     (nil))
(insn 399 398 400 31 (parallel [
            (set (reg:DI 1 dx [1663])
                (plus:DI (reg:DI 1 dx [orig:227 _141 ] [227])
                    (const_int 2420 [0x974])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":163 222 {*adddi_1}
     (nil))
(insn 400 399 401 31 (set (reg:SI 0 ax [orig:228 _142 ] [228])
        (mem:SI (plus:DI (mult:DI (reg:DI 1 dx [1663])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1662])) [2 loops.lmh S4 A32])) "BNDLYR2.f":163 86 {*movsi_internal}
     (nil))
(insn 401 400 402 31 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -36 [0xffffffffffffffdc])) [2 l+0 S4 A32])
            (reg:SI 0 ax [orig:228 _142 ] [228]))) "BNDLYR2.f":163 11 {*cmpsi_1}
     (nil))
(jump_insn 402 401 403 31 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 538)
            (pc))) "BNDLYR2.f":163 682 {*jcc}
     (nil)
 -> 538)
;;  succ:       32 (FALLTHRU)
;;              41
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1534

;; basic block 32, loop depth 0, maybe hot
;;  prev block 31, next block 33, flags: (RTL, MODIFIED)
;;  pred:       31 (FALLTHRU)
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1534
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 229 230 231 232 233 234 235 236 237 238 239 240 241 242 1664 1665 1666 1667 1668 1669 1670 1671
(note 403 402 404 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 404 403 405 32 (set (reg:SI 0 ax [1664])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":164 86 {*movsi_internal}
     (nil))
(insn 405 404 406 32 (set (reg:DI 0 ax [orig:229 _143 ] [229])
        (sign_extend:DI (reg:SI 0 ax [1664]))) "BNDLYR2.f":164 149 {*extendsidi2_rex64}
     (nil))
(insn 406 405 407 32 (parallel [
            (set (reg:DI 1 dx [orig:230 _144 ] [230])
                (mult:DI (reg:DI 0 ax [orig:229 _143 ] [229])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":164 349 {*muldi3_1}
     (nil))
(insn 407 406 408 32 (set (reg:SI 0 ax [1665])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":164 86 {*movsi_internal}
     (nil))
(insn 408 407 409 32 (set (reg:DI 0 ax [orig:231 _145 ] [231])
        (sign_extend:DI (reg:SI 0 ax [1665]))) "BNDLYR2.f":164 149 {*extendsidi2_rex64}
     (nil))
(insn 409 408 410 32 (parallel [
            (set (reg:DI 0 ax [orig:232 _146 ] [232])
                (plus:DI (reg:DI 0 ax [orig:231 _145 ] [231])
                    (reg:DI 1 dx [orig:230 _144 ] [230])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":164 222 {*adddi_1}
     (nil))
(insn 410 409 411 32 (parallel [
            (set (reg:DI 1 dx [orig:233 _147 ] [233])
                (plus:DI (reg:DI 0 ax [orig:232 _146 ] [232])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":164 222 {*adddi_1}
     (nil))
(insn 411 410 412 32 (set (reg/f:DI 0 ax [1666])
        (symbol_ref:DI ("iwl.4192") [flags 0x202]  <var_decl 0x7fd1b2d48cf0 iwl>)) "BNDLYR2.f":164 85 {*movdi_internal}
     (nil))
(insn 412 411 413 32 (set (reg:SF 21 xmm0 [1667])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:233 _147 ] [233])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1666])) [1 iwl S4 A32])) "BNDLYR2.f":164 131 {*movsf_internal}
     (nil))
(insn 413 412 414 32 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [1 iwm1+0 S4 A32])
        (reg:SF 21 xmm0 [1667])) "BNDLYR2.f":164 131 {*movsf_internal}
     (nil))
(insn 414 413 415 32 (set (reg:SI 0 ax [1668])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 l+0 S4 A32])) "BNDLYR2.f":165 86 {*movsi_internal}
     (nil))
(insn 415 414 416 32 (set (reg:DI 0 ax [orig:234 _148 ] [234])
        (sign_extend:DI (reg:SI 0 ax [1668]))) "BNDLYR2.f":165 149 {*extendsidi2_rex64}
     (nil))
(insn 416 415 417 32 (parallel [
            (set (reg:DI 1 dx [orig:235 _149 ] [235])
                (mult:DI (reg:DI 0 ax [orig:234 _148 ] [234])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":165 349 {*muldi3_1}
     (nil))
(insn 417 416 418 32 (set (reg:SI 0 ax [1669])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":165 86 {*movsi_internal}
     (nil))
(insn 418 417 419 32 (set (reg:DI 0 ax [orig:236 _150 ] [236])
        (sign_extend:DI (reg:SI 0 ax [1669]))) "BNDLYR2.f":165 149 {*extendsidi2_rex64}
     (nil))
(insn 419 418 420 32 (parallel [
            (set (reg:DI 0 ax [orig:237 _151 ] [237])
                (mult:DI (reg:DI 0 ax [orig:236 _150 ] [236])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":165 349 {*muldi3_1}
     (nil))
(insn 420 419 421 32 (parallel [
            (set (reg:DI 1 dx [orig:238 _152 ] [238])
                (plus:DI (reg:DI 1 dx [orig:235 _149 ] [235])
                    (reg:DI 0 ax [orig:237 _151 ] [237])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":165 222 {*adddi_1}
     (nil))
(insn 421 420 422 32 (set (reg:SI 0 ax [1670])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":165 86 {*movsi_internal}
     (nil))
(insn 422 421 423 32 (set (reg:DI 0 ax [orig:239 _153 ] [239])
        (sign_extend:DI (reg:SI 0 ax [1670]))) "BNDLYR2.f":165 149 {*extendsidi2_rex64}
     (nil))
(insn 423 422 424 32 (parallel [
            (set (reg:DI 0 ax [orig:240 _154 ] [240])
                (plus:DI (reg:DI 0 ax [orig:239 _153 ] [239])
                    (reg:DI 1 dx [orig:238 _152 ] [238])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":165 222 {*adddi_1}
     (nil))
(insn 424 423 425 32 (parallel [
            (set (reg:DI 1 dx [orig:241 _155 ] [241])
                (plus:DI (reg:DI 0 ax [orig:240 _154 ] [240])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":165 222 {*adddi_1}
     (nil))
(insn 425 424 426 32 (set (reg/f:DI 0 ax [1671])
        (symbol_ref:DI ("cldwtr_") [flags 0x202]  <var_decl 0x7fd1b9d92b40 cldwtr>)) "BNDLYR2.f":165 85 {*movdi_internal}
     (nil))
(insn 426 425 427 32 (set (reg:SF 21 xmm0 [orig:242 _156 ] [242])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:241 _155 ] [241])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1671])) [1 cldwtr.cwm S4 A32])) "BNDLYR2.f":165 131 {*movsf_internal}
     (nil))
(insn 427 426 428 32 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [orig:242 _156 ] [242])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -60 [0xffffffffffffffc4])) [1 climit+0 S4 A32]))) "BNDLYR2.f":165 53 {*cmpisf}
     (nil))
(jump_insn 428 427 432 32 (set (pc)
        (if_then_else (unle (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 3108)
            (pc))) "BNDLYR2.f":165 682 {*jcc}
     (nil)
 -> 3108)
;;  succ:       33 (FALLTHRU)
;;              40
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1534

;; basic block 33, loop depth 0, maybe hot
;;  prev block 32, next block 34, flags: (RTL, MODIFIED)
;;  pred:       32 (FALLTHRU)
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1534
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 243 244 245 246 247 248 249 250 251 1672 1673 1674 1675 1676 1677
(note 432 428 433 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 433 432 434 33 (set (reg:SI 0 ax [1672])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 l+0 S4 A32])) "BNDLYR2.f":166 86 {*movsi_internal}
     (nil))
(insn 434 433 435 33 (set (reg:DI 0 ax [orig:243 _157 ] [243])
        (sign_extend:DI (reg:SI 0 ax [1672]))) "BNDLYR2.f":166 149 {*extendsidi2_rex64}
     (nil))
(insn 435 434 436 33 (parallel [
            (set (reg:DI 1 dx [orig:244 _158 ] [244])
                (mult:DI (reg:DI 0 ax [orig:243 _157 ] [243])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":166 349 {*muldi3_1}
     (nil))
(insn 436 435 437 33 (set (reg:SI 0 ax [1673])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":166 86 {*movsi_internal}
     (nil))
(insn 437 436 438 33 (set (reg:DI 0 ax [orig:245 _159 ] [245])
        (sign_extend:DI (reg:SI 0 ax [1673]))) "BNDLYR2.f":166 149 {*extendsidi2_rex64}
     (nil))
(insn 438 437 439 33 (parallel [
            (set (reg:DI 0 ax [orig:246 _160 ] [246])
                (mult:DI (reg:DI 0 ax [orig:245 _159 ] [245])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":166 349 {*muldi3_1}
     (nil))
(insn 439 438 440 33 (parallel [
            (set (reg:DI 1 dx [orig:247 _161 ] [247])
                (plus:DI (reg:DI 1 dx [orig:244 _158 ] [244])
                    (reg:DI 0 ax [orig:246 _160 ] [246])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":166 222 {*adddi_1}
     (nil))
(insn 440 439 441 33 (set (reg:SI 0 ax [1674])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":166 86 {*movsi_internal}
     (nil))
(insn 441 440 442 33 (set (reg:DI 0 ax [orig:248 _162 ] [248])
        (sign_extend:DI (reg:SI 0 ax [1674]))) "BNDLYR2.f":166 149 {*extendsidi2_rex64}
     (nil))
(insn 442 441 443 33 (parallel [
            (set (reg:DI 0 ax [orig:249 _163 ] [249])
                (plus:DI (reg:DI 0 ax [orig:248 _162 ] [248])
                    (reg:DI 1 dx [orig:247 _161 ] [247])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":166 222 {*adddi_1}
     (nil))
(insn 443 442 444 33 (parallel [
            (set (reg:DI 1 dx [orig:250 _164 ] [250])
                (plus:DI (reg:DI 0 ax [orig:249 _163 ] [249])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":166 222 {*adddi_1}
     (nil))
(insn 444 443 445 33 (set (reg/f:DI 0 ax [1675])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7fd1b2d48360 vrbls>)) "BNDLYR2.f":166 85 {*movdi_internal}
     (nil))
(insn 445 444 446 33 (parallel [
            (set (reg:DI 1 dx [1676])
                (plus:DI (reg:DI 1 dx [orig:250 _164 ] [250])
                    (const_int 2340849 [0x23b7f1])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":166 222 {*adddi_1}
     (nil))
(insn 446 445 447 33 (set (reg:SF 22 xmm1 [orig:251 _165 ] [251])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [1676])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1675])) [1 vrbls.t S4 A32])) "BNDLYR2.f":166 131 {*movsf_internal}
     (nil))
(insn 447 446 448 33 (set (reg:SF 21 xmm0 [1677])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC3") [flags 0x2]) [0  S4 A32])) "BNDLYR2.f":166 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 2.58149993896484375e+2 [0x0.811333p+9])
        (nil)))
(insn 448 447 449 33 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [1677])
            (reg:SF 22 xmm1 [orig:251 _165 ] [251]))) "BNDLYR2.f":166 53 {*cmpisf}
     (nil))
(jump_insn 449 448 453 33 (set (pc)
        (if_then_else (unle (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 3109)
            (pc))) "BNDLYR2.f":166 682 {*jcc}
     (nil)
 -> 3109)
;;  succ:       34 (FALLTHRU)
;;              35
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1534

;; basic block 34, loop depth 0, maybe hot
;;  prev block 33, next block 35, flags: (RTL, MODIFIED)
;;  pred:       33 (FALLTHRU)
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1534
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 252 253 254 255 256 1678 1679 1680 1681
(note 453 449 454 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 454 453 455 34 (set (reg:SI 0 ax [1678])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":167 86 {*movsi_internal}
     (nil))
(insn 455 454 456 34 (set (reg:DI 0 ax [orig:252 _166 ] [252])
        (sign_extend:DI (reg:SI 0 ax [1678]))) "BNDLYR2.f":167 149 {*extendsidi2_rex64}
     (nil))
(insn 456 455 457 34 (parallel [
            (set (reg:DI 1 dx [orig:253 _167 ] [253])
                (mult:DI (reg:DI 0 ax [orig:252 _166 ] [252])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":167 349 {*muldi3_1}
     (nil))
(insn 457 456 458 34 (set (reg:SI 0 ax [1679])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":167 86 {*movsi_internal}
     (nil))
(insn 458 457 459 34 (set (reg:DI 0 ax [orig:254 _168 ] [254])
        (sign_extend:DI (reg:SI 0 ax [1679]))) "BNDLYR2.f":167 149 {*extendsidi2_rex64}
     (nil))
(insn 459 458 460 34 (parallel [
            (set (reg:DI 0 ax [orig:255 _169 ] [255])
                (plus:DI (reg:DI 0 ax [orig:254 _168 ] [254])
                    (reg:DI 1 dx [orig:253 _167 ] [253])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":167 222 {*adddi_1}
     (nil))
(insn 460 459 461 34 (parallel [
            (set (reg:DI 1 dx [orig:256 _170 ] [256])
                (plus:DI (reg:DI 0 ax [orig:255 _169 ] [255])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":167 222 {*adddi_1}
     (nil))
(insn 461 460 462 34 (set (reg/f:DI 0 ax [1680])
        (symbol_ref:DI ("iwl.4192") [flags 0x202]  <var_decl 0x7fd1b2d48cf0 iwl>)) "BNDLYR2.f":167 85 {*movdi_internal}
     (nil))
(insn 462 461 463 34 (set (reg:SF 21 xmm0 [1681])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC4") [flags 0x2]) [0  S4 A32])) "BNDLYR2.f":167 131 {*movsf_internal}
     (nil))
(insn 463 462 3110 34 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:256 _170 ] [256])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1680])) [1 iwl S4 A32])
        (reg:SF 21 xmm0 [1681])) "BNDLYR2.f":167 131 {*movsf_internal}
     (nil))
(jump_insn 3110 463 3111 34 (set (pc)
        (label_ref 538)) 683 {jump}
     (nil)
 -> 538)
;;  succ:       41 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1534

(barrier 3111 3110 3109)
;; basic block 35, loop depth 0, maybe hot
;;  prev block 34, next block 36, flags: (RTL, MODIFIED)
;;  pred:       33
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1534
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 257 258 259 260 261 262 263 264 265 1682 1683 1684 1685 1686
(code_label 3109 3111 467 35 135 (nil) [1 uses])
(note 467 3109 468 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 468 467 469 35 (set (reg:SI 0 ax [1682])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 l+0 S4 A32])) "BNDLYR2.f":168 86 {*movsi_internal}
     (nil))
(insn 469 468 470 35 (set (reg:DI 0 ax [orig:257 _171 ] [257])
        (sign_extend:DI (reg:SI 0 ax [1682]))) "BNDLYR2.f":168 149 {*extendsidi2_rex64}
     (nil))
(insn 470 469 471 35 (parallel [
            (set (reg:DI 1 dx [orig:258 _172 ] [258])
                (mult:DI (reg:DI 0 ax [orig:257 _171 ] [257])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":168 349 {*muldi3_1}
     (nil))
(insn 471 470 472 35 (set (reg:SI 0 ax [1683])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":168 86 {*movsi_internal}
     (nil))
(insn 472 471 473 35 (set (reg:DI 0 ax [orig:259 _173 ] [259])
        (sign_extend:DI (reg:SI 0 ax [1683]))) "BNDLYR2.f":168 149 {*extendsidi2_rex64}
     (nil))
(insn 473 472 474 35 (parallel [
            (set (reg:DI 0 ax [orig:260 _174 ] [260])
                (mult:DI (reg:DI 0 ax [orig:259 _173 ] [259])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":168 349 {*muldi3_1}
     (nil))
(insn 474 473 475 35 (parallel [
            (set (reg:DI 1 dx [orig:261 _175 ] [261])
                (plus:DI (reg:DI 1 dx [orig:258 _172 ] [258])
                    (reg:DI 0 ax [orig:260 _174 ] [260])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":168 222 {*adddi_1}
     (nil))
(insn 475 474 476 35 (set (reg:SI 0 ax [1684])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":168 86 {*movsi_internal}
     (nil))
(insn 476 475 477 35 (set (reg:DI 0 ax [orig:262 _176 ] [262])
        (sign_extend:DI (reg:SI 0 ax [1684]))) "BNDLYR2.f":168 149 {*extendsidi2_rex64}
     (nil))
(insn 477 476 478 35 (parallel [
            (set (reg:DI 0 ax [orig:263 _177 ] [263])
                (plus:DI (reg:DI 0 ax [orig:262 _176 ] [262])
                    (reg:DI 1 dx [orig:261 _175 ] [261])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":168 222 {*adddi_1}
     (nil))
(insn 478 477 479 35 (parallel [
            (set (reg:DI 1 dx [orig:264 _178 ] [264])
                (plus:DI (reg:DI 0 ax [orig:263 _177 ] [263])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":168 222 {*adddi_1}
     (nil))
(insn 479 478 480 35 (set (reg/f:DI 0 ax [1685])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7fd1b2d48360 vrbls>)) "BNDLYR2.f":168 85 {*movdi_internal}
     (nil))
(insn 480 479 481 35 (parallel [
            (set (reg:DI 1 dx [1686])
                (plus:DI (reg:DI 1 dx [orig:264 _178 ] [264])
                    (const_int 2340849 [0x23b7f1])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":168 222 {*adddi_1}
     (nil))
(insn 481 480 482 35 (set (reg:SF 21 xmm0 [orig:265 _179 ] [265])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [1686])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1685])) [1 vrbls.t S4 A32])) "BNDLYR2.f":168 131 {*movsf_internal}
     (nil))
(insn 482 481 483 35 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [orig:265 _179 ] [265])
            (mem/u/c:SF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [0  S4 A32]))) "BNDLYR2.f":168 53 {*cmpisf}
     (nil))
(jump_insn 483 482 487 35 (set (pc)
        (if_then_else (unlt (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 3112)
            (pc))) "BNDLYR2.f":168 682 {*jcc}
     (nil)
 -> 3112)
;;  succ:       36 (FALLTHRU)
;;              37
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1534

;; basic block 36, loop depth 0, maybe hot
;;  prev block 35, next block 37, flags: (RTL, MODIFIED)
;;  pred:       35 (FALLTHRU)
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1534
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 266 267 268 269 270 1687 1688 1689 1690
(note 487 483 488 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 488 487 489 36 (set (reg:SI 0 ax [1687])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":169 86 {*movsi_internal}
     (nil))
(insn 489 488 490 36 (set (reg:DI 0 ax [orig:266 _180 ] [266])
        (sign_extend:DI (reg:SI 0 ax [1687]))) "BNDLYR2.f":169 149 {*extendsidi2_rex64}
     (nil))
(insn 490 489 491 36 (parallel [
            (set (reg:DI 1 dx [orig:267 _181 ] [267])
                (mult:DI (reg:DI 0 ax [orig:266 _180 ] [266])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":169 349 {*muldi3_1}
     (nil))
(insn 491 490 492 36 (set (reg:SI 0 ax [1688])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":169 86 {*movsi_internal}
     (nil))
(insn 492 491 493 36 (set (reg:DI 0 ax [orig:268 _182 ] [268])
        (sign_extend:DI (reg:SI 0 ax [1688]))) "BNDLYR2.f":169 149 {*extendsidi2_rex64}
     (nil))
(insn 493 492 494 36 (parallel [
            (set (reg:DI 0 ax [orig:269 _183 ] [269])
                (plus:DI (reg:DI 0 ax [orig:268 _182 ] [268])
                    (reg:DI 1 dx [orig:267 _181 ] [267])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":169 222 {*adddi_1}
     (nil))
(insn 494 493 495 36 (parallel [
            (set (reg:DI 1 dx [orig:270 _184 ] [270])
                (plus:DI (reg:DI 0 ax [orig:269 _183 ] [269])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":169 222 {*adddi_1}
     (nil))
(insn 495 494 496 36 (set (reg/f:DI 0 ax [1689])
        (symbol_ref:DI ("iwl.4192") [flags 0x202]  <var_decl 0x7fd1b2d48cf0 iwl>)) "BNDLYR2.f":169 85 {*movdi_internal}
     (nil))
(insn 496 495 497 36 (set (reg:SF 21 xmm0 [1690])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0  S4 A32])) "BNDLYR2.f":169 131 {*movsf_internal}
     (nil))
(insn 497 496 3113 36 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:270 _184 ] [270])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1689])) [1 iwl S4 A32])
        (reg:SF 21 xmm0 [1690])) "BNDLYR2.f":169 131 {*movsf_internal}
     (nil))
(jump_insn 3113 497 3114 36 (set (pc)
        (label_ref 538)) 683 {jump}
     (nil)
 -> 538)
;;  succ:       41 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1534

(barrier 3114 3113 3112)
;; basic block 37, loop depth 0, maybe hot
;;  prev block 36, next block 38, flags: (RTL, MODIFIED)
;;  pred:       35
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1534
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1691
(code_label 3112 3114 501 37 136 (nil) [1 uses])
(note 501 3112 502 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 502 501 503 37 (set (reg:SF 21 xmm0 [1691])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC4") [flags 0x2]) [0  S4 A32])) "BNDLYR2.f":171 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 503 502 504 37 (set (reg:CCFP 17 flags)
        (unspec:CCFP [
                (compare:CCFP (reg:SF 21 xmm0 [1691])
                    (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                            (const_int -64 [0xffffffffffffffc0])) [1 iwm1+0 S4 A32]))
            ] UNSPEC_NOTRAP)) "BNDLYR2.f":171 54 {*cmpiusf}
     (nil))
(jump_insn 504 503 3022 37 (set (pc)
        (if_then_else (unordered (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 538)
            (pc))) "BNDLYR2.f":171 682 {*jcc}
     (nil)
 -> 538)
;;  succ:       41
;;              38 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1534

;; basic block 38, loop depth 0, maybe hot
;;  prev block 37, next block 39, flags: (RTL, MODIFIED)
;;  pred:       37 (FALLTHRU)
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1534
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1692
(note 3022 504 505 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 505 3022 506 38 (set (reg:SF 21 xmm0 [1692])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC4") [flags 0x2]) [0  S4 A32])) "BNDLYR2.f":171 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 506 505 507 38 (set (reg:CCFP 17 flags)
        (unspec:CCFP [
                (compare:CCFP (reg:SF 21 xmm0 [1692])
                    (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                            (const_int -64 [0xffffffffffffffc0])) [1 iwm1+0 S4 A32]))
            ] UNSPEC_NOTRAP)) "BNDLYR2.f":171 54 {*cmpiusf}
     (nil))
(jump_insn 507 506 511 38 (set (pc)
        (if_then_else (ltgt (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 538)
            (pc))) "BNDLYR2.f":171 682 {*jcc}
     (nil)
 -> 538)
;;  succ:       39 (FALLTHRU)
;;              41
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1534

;; basic block 39, loop depth 0, maybe hot
;;  prev block 38, next block 40, flags: (RTL, MODIFIED)
;;  pred:       38 (FALLTHRU)
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1534
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 271 272 273 274 275 1693 1694 1695 1696
(note 511 507 512 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 512 511 513 39 (set (reg:SI 0 ax [1693])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":171 86 {*movsi_internal}
     (nil))
(insn 513 512 514 39 (set (reg:DI 0 ax [orig:271 _185 ] [271])
        (sign_extend:DI (reg:SI 0 ax [1693]))) "BNDLYR2.f":171 149 {*extendsidi2_rex64}
     (nil))
(insn 514 513 515 39 (parallel [
            (set (reg:DI 1 dx [orig:272 _186 ] [272])
                (mult:DI (reg:DI 0 ax [orig:271 _185 ] [271])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":171 349 {*muldi3_1}
     (nil))
(insn 515 514 516 39 (set (reg:SI 0 ax [1694])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":171 86 {*movsi_internal}
     (nil))
(insn 516 515 517 39 (set (reg:DI 0 ax [orig:273 _187 ] [273])
        (sign_extend:DI (reg:SI 0 ax [1694]))) "BNDLYR2.f":171 149 {*extendsidi2_rex64}
     (nil))
(insn 517 516 518 39 (parallel [
            (set (reg:DI 0 ax [orig:274 _188 ] [274])
                (plus:DI (reg:DI 0 ax [orig:273 _187 ] [273])
                    (reg:DI 1 dx [orig:272 _186 ] [272])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":171 222 {*adddi_1}
     (nil))
(insn 518 517 519 39 (parallel [
            (set (reg:DI 1 dx [orig:275 _189 ] [275])
                (plus:DI (reg:DI 0 ax [orig:274 _188 ] [274])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":171 222 {*adddi_1}
     (nil))
(insn 519 518 520 39 (set (reg/f:DI 0 ax [1695])
        (symbol_ref:DI ("iwl.4192") [flags 0x202]  <var_decl 0x7fd1b2d48cf0 iwl>)) "BNDLYR2.f":171 85 {*movdi_internal}
     (nil))
(insn 520 519 521 39 (set (reg:SF 21 xmm0 [1696])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC4") [flags 0x2]) [0  S4 A32])) "BNDLYR2.f":171 131 {*movsf_internal}
     (nil))
(insn 521 520 3115 39 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:275 _189 ] [275])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1695])) [1 iwl S4 A32])
        (reg:SF 21 xmm0 [1696])) "BNDLYR2.f":171 131 {*movsf_internal}
     (nil))
(jump_insn 3115 521 3116 39 (set (pc)
        (label_ref 538)) 683 {jump}
     (nil)
 -> 538)
;;  succ:       41 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1534

(barrier 3116 3115 3108)
;; basic block 40, loop depth 0, maybe hot
;;  prev block 39, next block 41, flags: (RTL, MODIFIED)
;;  pred:       32
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1534
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 276 277 278 279 280 1697 1698 1699 1700
(code_label 3108 3116 525 40 134 (nil) [1 uses])
(note 525 3108 526 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 526 525 527 40 (set (reg:SI 0 ax [1697])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":174 86 {*movsi_internal}
     (nil))
(insn 527 526 528 40 (set (reg:DI 0 ax [orig:276 _190 ] [276])
        (sign_extend:DI (reg:SI 0 ax [1697]))) "BNDLYR2.f":174 149 {*extendsidi2_rex64}
     (nil))
(insn 528 527 529 40 (parallel [
            (set (reg:DI 1 dx [orig:277 _191 ] [277])
                (mult:DI (reg:DI 0 ax [orig:276 _190 ] [276])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":174 349 {*muldi3_1}
     (nil))
(insn 529 528 530 40 (set (reg:SI 0 ax [1698])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":174 86 {*movsi_internal}
     (nil))
(insn 530 529 531 40 (set (reg:DI 0 ax [orig:278 _192 ] [278])
        (sign_extend:DI (reg:SI 0 ax [1698]))) "BNDLYR2.f":174 149 {*extendsidi2_rex64}
     (nil))
(insn 531 530 532 40 (parallel [
            (set (reg:DI 0 ax [orig:279 _193 ] [279])
                (plus:DI (reg:DI 0 ax [orig:278 _192 ] [278])
                    (reg:DI 1 dx [orig:277 _191 ] [277])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":174 222 {*adddi_1}
     (nil))
(insn 532 531 533 40 (parallel [
            (set (reg:DI 1 dx [orig:280 _194 ] [280])
                (plus:DI (reg:DI 0 ax [orig:279 _193 ] [279])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":174 222 {*adddi_1}
     (nil))
(insn 533 532 534 40 (set (reg/f:DI 0 ax [1699])
        (symbol_ref:DI ("iwl.4192") [flags 0x202]  <var_decl 0x7fd1b2d48cf0 iwl>)) "BNDLYR2.f":174 85 {*movdi_internal}
     (nil))
(insn 534 533 535 40 (set (reg:SF 21 xmm0 [1700])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0  S4 A32])) "BNDLYR2.f":174 131 {*movsf_internal}
     (nil))
(insn 535 534 538 40 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:280 _194 ] [280])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1699])) [1 iwl S4 A32])
        (reg:SF 21 xmm0 [1700])) "BNDLYR2.f":174 131 {*movsf_internal}
     (nil))
;;  succ:       41 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1534

;; basic block 41, loop depth 0, maybe hot
;;  prev block 40, next block 42, flags: (RTL, MODIFIED)
;;  pred:       31
;;              40 (FALLTHRU)
;;              36 [always] 
;;              34 [always] 
;;              37
;;              38
;;              39 [always] 
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1534
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 1701 1702 1703 1704 1705 1706 1707 1708 1709 1710 1711 1712 1713 1714
(code_label 538 535 539 41 20 (nil) [6 uses])
(note 539 538 540 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 540 539 541 41 (set (reg:SI 0 ax [1701])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 l+0 S4 A32])) "BNDLYR2.f":178 86 {*movsi_internal}
     (nil))
(insn 541 540 542 41 (set (reg:DI 0 ax [orig:281 _195 ] [281])
        (sign_extend:DI (reg:SI 0 ax [1701]))) "BNDLYR2.f":178 149 {*extendsidi2_rex64}
     (nil))
(insn 542 541 543 41 (parallel [
            (set (reg:DI 1 dx [orig:282 _196 ] [282])
                (mult:DI (reg:DI 0 ax [orig:281 _195 ] [281])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":178 349 {*muldi3_1}
     (nil))
(insn 543 542 544 41 (set (reg:SI 0 ax [1702])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":178 86 {*movsi_internal}
     (nil))
(insn 544 543 545 41 (set (reg:DI 0 ax [orig:283 _197 ] [283])
        (sign_extend:DI (reg:SI 0 ax [1702]))) "BNDLYR2.f":178 149 {*extendsidi2_rex64}
     (nil))
(insn 545 544 546 41 (parallel [
            (set (reg:DI 0 ax [orig:284 _198 ] [284])
                (mult:DI (reg:DI 0 ax [orig:283 _197 ] [283])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":178 349 {*muldi3_1}
     (nil))
(insn 546 545 547 41 (parallel [
            (set (reg:DI 1 dx [orig:285 _199 ] [285])
                (plus:DI (reg:DI 1 dx [orig:282 _196 ] [282])
                    (reg:DI 0 ax [orig:284 _198 ] [284])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":178 222 {*adddi_1}
     (nil))
(insn 547 546 548 41 (set (reg:SI 0 ax [1703])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":178 86 {*movsi_internal}
     (nil))
(insn 548 547 549 41 (set (reg:DI 0 ax [orig:286 _200 ] [286])
        (sign_extend:DI (reg:SI 0 ax [1703]))) "BNDLYR2.f":178 149 {*extendsidi2_rex64}
     (nil))
(insn 549 548 550 41 (parallel [
            (set (reg:DI 0 ax [orig:287 _201 ] [287])
                (plus:DI (reg:DI 0 ax [orig:286 _200 ] [286])
                    (reg:DI 1 dx [orig:285 _199 ] [285])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":178 222 {*adddi_1}
     (nil))
(insn 550 549 551 41 (parallel [
            (set (reg:DI 1 dx [orig:288 _202 ] [288])
                (plus:DI (reg:DI 0 ax [orig:287 _201 ] [287])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":178 222 {*adddi_1}
     (nil))
(insn 551 550 552 41 (set (reg/f:DI 0 ax [1704])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7fd1b2d2cc60 extra>)) "BNDLYR2.f":178 85 {*movdi_internal}
     (nil))
(insn 552 551 553 41 (set (reg:SF 22 xmm1 [orig:289 _203 ] [289])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:288 _202 ] [288])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1704])) [1 extra.pint S4 A32])) "BNDLYR2.f":178 131 {*movsf_internal}
     (nil))
(insn 553 552 554 41 (set (reg:SI 0 ax [1705])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 l+0 S4 A32])) "BNDLYR2.f":178 86 {*movsi_internal}
     (nil))
(insn 554 553 555 41 (parallel [
            (set (reg:SI 0 ax [orig:290 _204 ] [290])
                (plus:SI (reg:SI 0 ax [1705])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":178 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -20 [0xffffffffffffffec])) [2 l+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 555 554 556 41 (set (reg:DI 0 ax [orig:291 _205 ] [291])
        (sign_extend:DI (reg:SI 0 ax [orig:290 _204 ] [290]))) "BNDLYR2.f":178 149 {*extendsidi2_rex64}
     (nil))
(insn 556 555 557 41 (parallel [
            (set (reg:DI 1 dx [orig:292 _206 ] [292])
                (mult:DI (reg:DI 0 ax [orig:291 _205 ] [291])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":178 349 {*muldi3_1}
     (nil))
(insn 557 556 558 41 (set (reg:SI 0 ax [1706])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":178 86 {*movsi_internal}
     (nil))
(insn 558 557 559 41 (set (reg:DI 0 ax [orig:293 _207 ] [293])
        (sign_extend:DI (reg:SI 0 ax [1706]))) "BNDLYR2.f":178 149 {*extendsidi2_rex64}
     (nil))
(insn 559 558 560 41 (parallel [
            (set (reg:DI 0 ax [orig:294 _208 ] [294])
                (mult:DI (reg:DI 0 ax [orig:293 _207 ] [293])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":178 349 {*muldi3_1}
     (nil))
(insn 560 559 561 41 (parallel [
            (set (reg:DI 1 dx [orig:295 _209 ] [295])
                (plus:DI (reg:DI 1 dx [orig:292 _206 ] [292])
                    (reg:DI 0 ax [orig:294 _208 ] [294])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":178 222 {*adddi_1}
     (nil))
(insn 561 560 562 41 (set (reg:SI 0 ax [1707])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":178 86 {*movsi_internal}
     (nil))
(insn 562 561 563 41 (set (reg:DI 0 ax [orig:296 _210 ] [296])
        (sign_extend:DI (reg:SI 0 ax [1707]))) "BNDLYR2.f":178 149 {*extendsidi2_rex64}
     (nil))
(insn 563 562 564 41 (parallel [
            (set (reg:DI 0 ax [orig:297 _211 ] [297])
                (plus:DI (reg:DI 0 ax [orig:296 _210 ] [296])
                    (reg:DI 1 dx [orig:295 _209 ] [295])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":178 222 {*adddi_1}
     (nil))
(insn 564 563 565 41 (parallel [
            (set (reg:DI 1 dx [orig:298 _212 ] [298])
                (plus:DI (reg:DI 0 ax [orig:297 _211 ] [297])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":178 222 {*adddi_1}
     (nil))
(insn 565 564 566 41 (set (reg/f:DI 0 ax [1708])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7fd1b2d2cc60 extra>)) "BNDLYR2.f":178 85 {*movdi_internal}
     (nil))
(insn 566 565 567 41 (set (reg:SF 21 xmm0 [orig:299 _213 ] [299])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:298 _212 ] [298])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1708])) [1 extra.pint S4 A32])) "BNDLYR2.f":178 131 {*movsf_internal}
     (nil))
(insn 567 566 568 41 (set (reg:SF 21 xmm0 [orig:300 _214 ] [300])
        (plus:SF (reg:SF 21 xmm0 [orig:299 _213 ] [299])
            (reg:SF 22 xmm1 [orig:289 _203 ] [289]))) "BNDLYR2.f":178 838 {*fop_sf_comm}
     (nil))
(insn 568 567 569 41 (set (reg:SF 22 xmm1 [orig:301 _215 ] [301])
        (reg:SF 21 xmm0 [orig:300 _214 ] [300])) "BNDLYR2.f":178 131 {*movsf_internal}
     (nil))
(insn 569 568 570 41 (set (reg:SF 21 xmm0 [1710])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC6") [flags 0x2]) [0  S4 A32])) "BNDLYR2.f":178 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 5.0e-1 [0x0.8p+0])
        (nil)))
(insn 570 569 571 41 (set (reg:SF 21 xmm0 [1709])
        (mult:SF (reg:SF 21 xmm0 [1710])
            (reg:SF 22 xmm1 [orig:301 _215 ] [301]))) "BNDLYR2.f":178 838 {*fop_sf_comm}
     (nil))
(insn 571 570 572 41 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -68 [0xffffffffffffffbc])) [1 pm+0 S4 A32])
        (reg:SF 21 xmm0 [1709])) "BNDLYR2.f":178 131 {*movsf_internal}
     (nil))
(insn 572 571 573 41 (set (reg:SI 0 ax [1711])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 lbnd+0 S4 A32])) "BNDLYR2.f":179 86 {*movsi_internal}
     (nil))
(insn 573 572 574 41 (set (reg:DI 0 ax [orig:302 _216 ] [302])
        (sign_extend:DI (reg:SI 0 ax [1711]))) "BNDLYR2.f":179 149 {*extendsidi2_rex64}
     (nil))
(insn 574 573 575 41 (parallel [
            (set (reg:DI 1 dx [orig:303 _217 ] [303])
                (mult:DI (reg:DI 0 ax [orig:302 _216 ] [302])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":179 349 {*muldi3_1}
     (nil))
(insn 575 574 576 41 (set (reg:SI 0 ax [1712])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":179 86 {*movsi_internal}
     (nil))
(insn 576 575 577 41 (set (reg:DI 0 ax [orig:304 _218 ] [304])
        (sign_extend:DI (reg:SI 0 ax [1712]))) "BNDLYR2.f":179 149 {*extendsidi2_rex64}
     (nil))
(insn 577 576 578 41 (parallel [
            (set (reg:DI 0 ax [orig:305 _219 ] [305])
                (mult:DI (reg:DI 0 ax [orig:304 _218 ] [304])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":179 349 {*muldi3_1}
     (nil))
(insn 578 577 579 41 (parallel [
            (set (reg:DI 1 dx [orig:306 _220 ] [306])
                (plus:DI (reg:DI 1 dx [orig:303 _217 ] [303])
                    (reg:DI 0 ax [orig:305 _219 ] [305])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":179 222 {*adddi_1}
     (nil))
(insn 579 578 580 41 (set (reg:SI 0 ax [1713])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":179 86 {*movsi_internal}
     (nil))
(insn 580 579 581 41 (set (reg:DI 0 ax [orig:307 _221 ] [307])
        (sign_extend:DI (reg:SI 0 ax [1713]))) "BNDLYR2.f":179 149 {*extendsidi2_rex64}
     (nil))
(insn 581 580 582 41 (parallel [
            (set (reg:DI 0 ax [orig:308 _222 ] [308])
                (plus:DI (reg:DI 0 ax [orig:307 _221 ] [307])
                    (reg:DI 1 dx [orig:306 _220 ] [306])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":179 222 {*adddi_1}
     (nil))
(insn 582 581 583 41 (parallel [
            (set (reg:DI 1 dx [orig:309 _223 ] [309])
                (plus:DI (reg:DI 0 ax [orig:308 _222 ] [308])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":179 222 {*adddi_1}
     (nil))
(insn 583 582 584 41 (set (reg/f:DI 0 ax [1714])
        (symbol_ref:DI ("pbint.4202") [flags 0x202]  <var_decl 0x7fd1b2d4d1b0 pbint>)) "BNDLYR2.f":179 85 {*movdi_internal}
     (nil))
(insn 584 583 585 41 (set (reg:SF 21 xmm0 [orig:310 _224 ] [310])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:309 _223 ] [309])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1714])) [1 pbint S4 A32])) "BNDLYR2.f":179 131 {*movsf_internal}
     (nil))
(insn 585 584 586 41 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [orig:310 _224 ] [310])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -68 [0xffffffffffffffbc])) [1 pm+0 S4 A32]))) "BNDLYR2.f":179 53 {*cmpisf}
     (nil))
(jump_insn 586 585 590 41 (set (pc)
        (if_then_else (unlt (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1120)
            (pc))) "BNDLYR2.f":179 682 {*jcc}
     (nil)
 -> 1120)
;;  succ:       42 (FALLTHRU)
;;              57
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1534

;; basic block 42, loop depth 0, maybe hot
;;  prev block 41, next block 43, flags: (RTL, MODIFIED)
;;  pred:       41 (FALLTHRU)
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1534
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 311 312 313 314 315 316 317 318 319 320 1715 1716 1717 1718 1719
(note 590 586 591 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 591 590 592 42 (set (reg:SI 0 ax [1715])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 lbnd+0 S4 A32])) "BNDLYR2.f":179 86 {*movsi_internal}
     (nil))
(insn 592 591 593 42 (parallel [
            (set (reg:SI 0 ax [orig:311 _225 ] [311])
                (plus:SI (reg:SI 0 ax [1715])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":179 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -24 [0xffffffffffffffe8])) [2 lbnd+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 593 592 594 42 (set (reg:DI 0 ax [orig:312 _226 ] [312])
        (sign_extend:DI (reg:SI 0 ax [orig:311 _225 ] [311]))) "BNDLYR2.f":179 149 {*extendsidi2_rex64}
     (nil))
(insn 594 593 595 42 (parallel [
            (set (reg:DI 1 dx [orig:313 _227 ] [313])
                (mult:DI (reg:DI 0 ax [orig:312 _226 ] [312])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":179 349 {*muldi3_1}
     (nil))
(insn 595 594 596 42 (set (reg:SI 0 ax [1716])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":179 86 {*movsi_internal}
     (nil))
(insn 596 595 597 42 (set (reg:DI 0 ax [orig:314 _228 ] [314])
        (sign_extend:DI (reg:SI 0 ax [1716]))) "BNDLYR2.f":179 149 {*extendsidi2_rex64}
     (nil))
(insn 597 596 598 42 (parallel [
            (set (reg:DI 0 ax [orig:315 _229 ] [315])
                (mult:DI (reg:DI 0 ax [orig:314 _228 ] [314])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":179 349 {*muldi3_1}
     (nil))
(insn 598 597 599 42 (parallel [
            (set (reg:DI 1 dx [orig:316 _230 ] [316])
                (plus:DI (reg:DI 1 dx [orig:313 _227 ] [313])
                    (reg:DI 0 ax [orig:315 _229 ] [315])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":179 222 {*adddi_1}
     (nil))
(insn 599 598 600 42 (set (reg:SI 0 ax [1717])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":179 86 {*movsi_internal}
     (nil))
(insn 600 599 601 42 (set (reg:DI 0 ax [orig:317 _231 ] [317])
        (sign_extend:DI (reg:SI 0 ax [1717]))) "BNDLYR2.f":179 149 {*extendsidi2_rex64}
     (nil))
(insn 601 600 602 42 (parallel [
            (set (reg:DI 0 ax [orig:318 _232 ] [318])
                (plus:DI (reg:DI 0 ax [orig:317 _231 ] [317])
                    (reg:DI 1 dx [orig:316 _230 ] [316])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":179 222 {*adddi_1}
     (nil))
(insn 602 601 603 42 (parallel [
            (set (reg:DI 1 dx [orig:319 _233 ] [319])
                (plus:DI (reg:DI 0 ax [orig:318 _232 ] [318])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":179 222 {*adddi_1}
     (nil))
(insn 603 602 604 42 (set (reg/f:DI 0 ax [1718])
        (symbol_ref:DI ("pbint.4202") [flags 0x202]  <var_decl 0x7fd1b2d4d1b0 pbint>)) "BNDLYR2.f":179 85 {*movdi_internal}
     (nil))
(insn 604 603 605 42 (set (reg:SF 22 xmm1 [orig:320 _234 ] [320])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:319 _233 ] [319])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1718])) [1 pbint S4 A32])) "BNDLYR2.f":179 131 {*movsf_internal}
     (nil))
(insn 605 604 606 42 (set (reg:SF 21 xmm0 [1719])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -68 [0xffffffffffffffbc])) [1 pm+0 S4 A32])) "BNDLYR2.f":179 131 {*movsf_internal}
     (nil))
(insn 606 605 607 42 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [1719])
            (reg:SF 22 xmm1 [orig:320 _234 ] [320]))) "BNDLYR2.f":179 53 {*cmpisf}
     (nil))
(jump_insn 607 606 611 42 (set (pc)
        (if_then_else (unlt (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1120)
            (pc))) "BNDLYR2.f":179 682 {*jcc}
     (nil)
 -> 1120)
;;  succ:       43 (FALLTHRU)
;;              57
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1534

;; basic block 43, loop depth 0, maybe hot
;;  prev block 42, next block 44, flags: (RTL, MODIFIED)
;;  pred:       42 (FALLTHRU)
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1534
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431 432 433 434 435 436 437 438 439 440 441 442 443 444 445 446 447 448 449 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467 468 469 470 471 472 473 474 475 476 477 478 479 480 481 482 483 484 485 486 487 488 489 490 491 492 493 494 495 496 497 498 499 500 501 502 503 504 505 506 507 508 509 510 511 512 513 514 515 516 517 518 519 520 521 522 523 524 525 526 527 528 529 1514 1720 1721 1722 1723 1724 1725 1726 1727 1728 1729 1730 1731 1732 1733 1734 1735 1736 1737 1738 1739 1740 1741 1742 1743 1744 1745 1746 1747 1748 1749 1750 1751 1752 1753 1754 1755 1756 1757 1758 1759 1760 1761 1762 1763 1764 1765 1766 1767 1768 1769 1770 1771 1772 1773 1774 1775 1776 1777 1778 1779 1780 1781 1782 1783 1784 1785 1786 1787 1788 1789 1790 1791 1792 1793 1794 1795 1796 1797 1798 1799 1800 1801 1802 1803 1804 1805 1806 1807 1808 1809 1810 1811 1812 1813 1814 1815 1816 1817 1818 1819
(note 611 607 612 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 612 611 613 43 (set (reg:SI 0 ax [1720])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 l+0 S4 A32])) "BNDLYR2.f":181 86 {*movsi_internal}
     (nil))
(insn 613 612 614 43 (parallel [
            (set (reg:SI 0 ax [orig:321 _235 ] [321])
                (plus:SI (reg:SI 0 ax [1720])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":181 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -20 [0xffffffffffffffec])) [2 l+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 614 613 615 43 (set (reg:DI 0 ax [orig:322 _236 ] [322])
        (sign_extend:DI (reg:SI 0 ax [orig:321 _235 ] [321]))) "BNDLYR2.f":181 149 {*extendsidi2_rex64}
     (nil))
(insn 615 614 616 43 (parallel [
            (set (reg:DI 1 dx [orig:323 _237 ] [323])
                (mult:DI (reg:DI 0 ax [orig:322 _236 ] [322])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":181 349 {*muldi3_1}
     (nil))
(insn 616 615 617 43 (set (reg:SI 0 ax [1721])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":181 86 {*movsi_internal}
     (nil))
(insn 617 616 618 43 (set (reg:DI 0 ax [orig:324 _238 ] [324])
        (sign_extend:DI (reg:SI 0 ax [1721]))) "BNDLYR2.f":181 149 {*extendsidi2_rex64}
     (nil))
(insn 618 617 619 43 (parallel [
            (set (reg:DI 0 ax [orig:325 _239 ] [325])
                (mult:DI (reg:DI 0 ax [orig:324 _238 ] [324])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":181 349 {*muldi3_1}
     (nil))
(insn 619 618 620 43 (parallel [
            (set (reg:DI 1 dx [orig:326 _240 ] [326])
                (plus:DI (reg:DI 1 dx [orig:323 _237 ] [323])
                    (reg:DI 0 ax [orig:325 _239 ] [325])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":181 222 {*adddi_1}
     (nil))
(insn 620 619 621 43 (set (reg:SI 0 ax [1722])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":181 86 {*movsi_internal}
     (nil))
(insn 621 620 622 43 (set (reg:DI 0 ax [orig:327 _241 ] [327])
        (sign_extend:DI (reg:SI 0 ax [1722]))) "BNDLYR2.f":181 149 {*extendsidi2_rex64}
     (nil))
(insn 622 621 623 43 (parallel [
            (set (reg:DI 0 ax [orig:328 _242 ] [328])
                (plus:DI (reg:DI 0 ax [orig:327 _241 ] [327])
                    (reg:DI 1 dx [orig:326 _240 ] [326])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":181 222 {*adddi_1}
     (nil))
(insn 623 622 624 43 (parallel [
            (set (reg:DI 1 dx [orig:329 _243 ] [329])
                (plus:DI (reg:DI 0 ax [orig:328 _242 ] [328])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":181 222 {*adddi_1}
     (nil))
(insn 624 623 625 43 (set (reg/f:DI 0 ax [1723])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7fd1b2d2cc60 extra>)) "BNDLYR2.f":181 85 {*movdi_internal}
     (nil))
(insn 625 624 626 43 (set (reg:SF 21 xmm0 [orig:330 _244 ] [330])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:329 _243 ] [329])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1723])) [1 extra.pint S4 A32])) "BNDLYR2.f":181 131 {*movsf_internal}
     (nil))
(insn 626 625 627 43 (set (reg:SI 0 ax [1724])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 l+0 S4 A32])) "BNDLYR2.f":181 86 {*movsi_internal}
     (nil))
(insn 627 626 628 43 (set (reg:DI 0 ax [orig:331 _245 ] [331])
        (sign_extend:DI (reg:SI 0 ax [1724]))) "BNDLYR2.f":181 149 {*extendsidi2_rex64}
     (nil))
(insn 628 627 629 43 (parallel [
            (set (reg:DI 1 dx [orig:332 _246 ] [332])
                (mult:DI (reg:DI 0 ax [orig:331 _245 ] [331])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":181 349 {*muldi3_1}
     (nil))
(insn 629 628 630 43 (set (reg:SI 0 ax [1725])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":181 86 {*movsi_internal}
     (nil))
(insn 630 629 631 43 (set (reg:DI 0 ax [orig:333 _247 ] [333])
        (sign_extend:DI (reg:SI 0 ax [1725]))) "BNDLYR2.f":181 149 {*extendsidi2_rex64}
     (nil))
(insn 631 630 632 43 (parallel [
            (set (reg:DI 0 ax [orig:334 _248 ] [334])
                (mult:DI (reg:DI 0 ax [orig:333 _247 ] [333])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":181 349 {*muldi3_1}
     (nil))
(insn 632 631 633 43 (parallel [
            (set (reg:DI 1 dx [orig:335 _249 ] [335])
                (plus:DI (reg:DI 1 dx [orig:332 _246 ] [332])
                    (reg:DI 0 ax [orig:334 _248 ] [334])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":181 222 {*adddi_1}
     (nil))
(insn 633 632 634 43 (set (reg:SI 0 ax [1726])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":181 86 {*movsi_internal}
     (nil))
(insn 634 633 635 43 (set (reg:DI 0 ax [orig:336 _250 ] [336])
        (sign_extend:DI (reg:SI 0 ax [1726]))) "BNDLYR2.f":181 149 {*extendsidi2_rex64}
     (nil))
(insn 635 634 636 43 (parallel [
            (set (reg:DI 0 ax [orig:337 _251 ] [337])
                (plus:DI (reg:DI 0 ax [orig:336 _250 ] [336])
                    (reg:DI 1 dx [orig:335 _249 ] [335])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":181 222 {*adddi_1}
     (nil))
(insn 636 635 637 43 (parallel [
            (set (reg:DI 1 dx [orig:338 _252 ] [338])
                (plus:DI (reg:DI 0 ax [orig:337 _251 ] [337])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":181 222 {*adddi_1}
     (nil))
(insn 637 636 638 43 (set (reg/f:DI 0 ax [1727])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7fd1b2d2cc60 extra>)) "BNDLYR2.f":181 85 {*movdi_internal}
     (nil))
(insn 638 637 639 43 (set (reg:SF 22 xmm1 [orig:339 _253 ] [339])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:338 _252 ] [338])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1727])) [1 extra.pint S4 A32])) "BNDLYR2.f":181 131 {*movsf_internal}
     (nil))
(insn 639 638 640 43 (set (reg:SF 21 xmm0 [1728])
        (minus:SF (reg:SF 21 xmm0 [orig:330 _244 ] [330])
            (reg:SF 22 xmm1 [orig:339 _253 ] [339]))) "BNDLYR2.f":181 841 {*fop_sf_1}
     (nil))
(insn 640 639 641 43 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [1 dp+0 S4 A32])
        (reg:SF 21 xmm0 [1728])) "BNDLYR2.f":181 131 {*movsf_internal}
     (nil))
(insn 641 640 642 43 (set (reg:SI 0 ax [1729])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 lbnd+0 S4 A32])) "BNDLYR2.f":182 86 {*movsi_internal}
     (nil))
(insn 642 641 643 43 (set (reg:DI 0 ax [orig:340 _254 ] [340])
        (sign_extend:DI (reg:SI 0 ax [1729]))) "BNDLYR2.f":182 149 {*extendsidi2_rex64}
     (nil))
(insn 643 642 644 43 (parallel [
            (set (reg:DI 1 dx [orig:341 _255 ] [341])
                (mult:DI (reg:DI 0 ax [orig:340 _254 ] [340])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":182 349 {*muldi3_1}
     (nil))
(insn 644 643 645 43 (set (reg:SI 0 ax [1730])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":182 86 {*movsi_internal}
     (nil))
(insn 645 644 646 43 (set (reg:DI 0 ax [orig:342 _256 ] [342])
        (sign_extend:DI (reg:SI 0 ax [1730]))) "BNDLYR2.f":182 149 {*extendsidi2_rex64}
     (nil))
(insn 646 645 647 43 (parallel [
            (set (reg:DI 0 ax [orig:343 _257 ] [343])
                (mult:DI (reg:DI 0 ax [orig:342 _256 ] [342])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":182 349 {*muldi3_1}
     (nil))
(insn 647 646 648 43 (parallel [
            (set (reg:DI 1 dx [orig:344 _258 ] [344])
                (plus:DI (reg:DI 1 dx [orig:341 _255 ] [341])
                    (reg:DI 0 ax [orig:343 _257 ] [343])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":182 222 {*adddi_1}
     (nil))
(insn 648 647 649 43 (set (reg:SI 0 ax [1731])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":182 86 {*movsi_internal}
     (nil))
(insn 649 648 650 43 (set (reg:DI 0 ax [orig:345 _259 ] [345])
        (sign_extend:DI (reg:SI 0 ax [1731]))) "BNDLYR2.f":182 149 {*extendsidi2_rex64}
     (nil))
(insn 650 649 651 43 (parallel [
            (set (reg:DI 0 ax [orig:346 _260 ] [346])
                (plus:DI (reg:DI 0 ax [orig:345 _259 ] [345])
                    (reg:DI 1 dx [orig:344 _258 ] [344])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":182 222 {*adddi_1}
     (nil))
(insn 651 650 652 43 (parallel [
            (set (reg:DI 1 dx [orig:347 _261 ] [347])
                (plus:DI (reg:DI 0 ax [orig:346 _260 ] [346])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":182 222 {*adddi_1}
     (nil))
(insn 652 651 653 43 (set (reg/f:DI 0 ax [1732])
        (symbol_ref:DI ("psum.4208") [flags 0x202]  <var_decl 0x7fd1b2d4d480 psum>)) "BNDLYR2.f":182 85 {*movdi_internal}
     (nil))
(insn 653 652 654 43 (set (reg:SF 21 xmm0 [orig:348 _262 ] [348])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:347 _261 ] [347])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1732])) [1 psum S4 A32])) "BNDLYR2.f":182 131 {*movsf_internal}
     (nil))
(insn 654 653 655 43 (set (reg:SI 0 ax [1733])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 lbnd+0 S4 A32])) "BNDLYR2.f":182 86 {*movsi_internal}
     (nil))
(insn 655 654 656 43 (set (reg:DI 0 ax [orig:349 _263 ] [349])
        (sign_extend:DI (reg:SI 0 ax [1733]))) "BNDLYR2.f":182 149 {*extendsidi2_rex64}
     (nil))
(insn 656 655 657 43 (parallel [
            (set (reg:DI 1 dx [orig:350 _264 ] [350])
                (mult:DI (reg:DI 0 ax [orig:349 _263 ] [349])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":182 349 {*muldi3_1}
     (nil))
(insn 657 656 658 43 (set (reg:SI 0 ax [1734])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":182 86 {*movsi_internal}
     (nil))
(insn 658 657 659 43 (set (reg:DI 0 ax [orig:351 _265 ] [351])
        (sign_extend:DI (reg:SI 0 ax [1734]))) "BNDLYR2.f":182 149 {*extendsidi2_rex64}
     (nil))
(insn 659 658 660 43 (parallel [
            (set (reg:DI 0 ax [orig:352 _266 ] [352])
                (mult:DI (reg:DI 0 ax [orig:351 _265 ] [351])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":182 349 {*muldi3_1}
     (nil))
(insn 660 659 661 43 (parallel [
            (set (reg:DI 1 dx [orig:353 _267 ] [353])
                (plus:DI (reg:DI 1 dx [orig:350 _264 ] [350])
                    (reg:DI 0 ax [orig:352 _266 ] [352])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":182 222 {*adddi_1}
     (nil))
(insn 661 660 662 43 (set (reg:SI 0 ax [1735])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":182 86 {*movsi_internal}
     (nil))
(insn 662 661 663 43 (set (reg:DI 0 ax [orig:354 _268 ] [354])
        (sign_extend:DI (reg:SI 0 ax [1735]))) "BNDLYR2.f":182 149 {*extendsidi2_rex64}
     (nil))
(insn 663 662 664 43 (parallel [
            (set (reg:DI 0 ax [orig:355 _269 ] [355])
                (plus:DI (reg:DI 0 ax [orig:354 _268 ] [354])
                    (reg:DI 1 dx [orig:353 _267 ] [353])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":182 222 {*adddi_1}
     (nil))
(insn 664 663 665 43 (parallel [
            (set (reg:DI 1 dx [orig:356 _270 ] [356])
                (plus:DI (reg:DI 0 ax [orig:355 _269 ] [355])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":182 222 {*adddi_1}
     (nil))
(insn 665 664 666 43 (set (reg:SF 21 xmm0 [orig:357 _271 ] [357])
        (plus:SF (reg:SF 21 xmm0 [orig:348 _262 ] [348])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -72 [0xffffffffffffffb8])) [1 dp+0 S4 A32]))) "BNDLYR2.f":182 838 {*fop_sf_comm}
     (nil))
(insn 666 665 667 43 (set (reg/f:DI 0 ax [1736])
        (symbol_ref:DI ("psum.4208") [flags 0x202]  <var_decl 0x7fd1b2d4d480 psum>)) "BNDLYR2.f":182 85 {*movdi_internal}
     (nil))
(insn 667 666 668 43 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:356 _270 ] [356])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1736])) [1 psum S4 A32])
        (reg:SF 21 xmm0 [orig:357 _271 ] [357])) "BNDLYR2.f":182 131 {*movsf_internal}
     (nil))
(insn 668 667 669 43 (set (reg:SI 0 ax [1737])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 lbnd+0 S4 A32])) "BNDLYR2.f":183 86 {*movsi_internal}
     (nil))
(insn 669 668 670 43 (set (reg:DI 0 ax [orig:358 _272 ] [358])
        (sign_extend:DI (reg:SI 0 ax [1737]))) "BNDLYR2.f":183 149 {*extendsidi2_rex64}
     (nil))
(insn 670 669 671 43 (parallel [
            (set (reg:DI 1 dx [orig:359 _273 ] [359])
                (mult:DI (reg:DI 0 ax [orig:358 _272 ] [358])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":183 349 {*muldi3_1}
     (nil))
(insn 671 670 672 43 (set (reg:SI 0 ax [1738])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":183 86 {*movsi_internal}
     (nil))
(insn 672 671 673 43 (set (reg:DI 0 ax [orig:360 _274 ] [360])
        (sign_extend:DI (reg:SI 0 ax [1738]))) "BNDLYR2.f":183 149 {*extendsidi2_rex64}
     (nil))
(insn 673 672 674 43 (parallel [
            (set (reg:DI 0 ax [orig:361 _275 ] [361])
                (mult:DI (reg:DI 0 ax [orig:360 _274 ] [360])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":183 349 {*muldi3_1}
     (nil))
(insn 674 673 675 43 (parallel [
            (set (reg:DI 1 dx [orig:362 _276 ] [362])
                (plus:DI (reg:DI 1 dx [orig:359 _273 ] [359])
                    (reg:DI 0 ax [orig:361 _275 ] [361])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":183 222 {*adddi_1}
     (nil))
(insn 675 674 676 43 (set (reg:SI 0 ax [1739])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":183 86 {*movsi_internal}
     (nil))
(insn 676 675 677 43 (set (reg:DI 0 ax [orig:363 _277 ] [363])
        (sign_extend:DI (reg:SI 0 ax [1739]))) "BNDLYR2.f":183 149 {*extendsidi2_rex64}
     (nil))
(insn 677 676 678 43 (parallel [
            (set (reg:DI 0 ax [orig:364 _278 ] [364])
                (plus:DI (reg:DI 0 ax [orig:363 _277 ] [363])
                    (reg:DI 1 dx [orig:362 _276 ] [362])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":183 222 {*adddi_1}
     (nil))
(insn 678 677 679 43 (parallel [
            (set (reg:DI 1 dx [orig:365 _279 ] [365])
                (plus:DI (reg:DI 0 ax [orig:364 _278 ] [364])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":183 222 {*adddi_1}
     (nil))
(insn 679 678 680 43 (set (reg/f:DI 0 ax [1740])
        (symbol_ref:DI ("nsum.4200") [flags 0x202]  <var_decl 0x7fd1b2d4d120 nsum>)) "BNDLYR2.f":183 85 {*movdi_internal}
     (nil))
(insn 680 679 681 43 (set (reg:SF 22 xmm1 [orig:366 _280 ] [366])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:365 _279 ] [365])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1740])) [1 nsum S4 A32])) "BNDLYR2.f":183 131 {*movsf_internal}
     (nil))
(insn 681 680 682 43 (set (reg:SI 0 ax [1741])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 lbnd+0 S4 A32])) "BNDLYR2.f":183 86 {*movsi_internal}
     (nil))
(insn 682 681 683 43 (set (reg:DI 0 ax [orig:367 _281 ] [367])
        (sign_extend:DI (reg:SI 0 ax [1741]))) "BNDLYR2.f":183 149 {*extendsidi2_rex64}
     (nil))
(insn 683 682 684 43 (parallel [
            (set (reg:DI 1 dx [orig:368 _282 ] [368])
                (mult:DI (reg:DI 0 ax [orig:367 _281 ] [367])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":183 349 {*muldi3_1}
     (nil))
(insn 684 683 685 43 (set (reg:SI 0 ax [1742])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":183 86 {*movsi_internal}
     (nil))
(insn 685 684 686 43 (set (reg:DI 0 ax [orig:369 _283 ] [369])
        (sign_extend:DI (reg:SI 0 ax [1742]))) "BNDLYR2.f":183 149 {*extendsidi2_rex64}
     (nil))
(insn 686 685 687 43 (parallel [
            (set (reg:DI 0 ax [orig:370 _284 ] [370])
                (mult:DI (reg:DI 0 ax [orig:369 _283 ] [369])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":183 349 {*muldi3_1}
     (nil))
(insn 687 686 688 43 (parallel [
            (set (reg:DI 1 dx [orig:371 _285 ] [371])
                (plus:DI (reg:DI 1 dx [orig:368 _282 ] [368])
                    (reg:DI 0 ax [orig:370 _284 ] [370])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":183 222 {*adddi_1}
     (nil))
(insn 688 687 689 43 (set (reg:SI 0 ax [1743])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":183 86 {*movsi_internal}
     (nil))
(insn 689 688 690 43 (set (reg:DI 0 ax [orig:372 _286 ] [372])
        (sign_extend:DI (reg:SI 0 ax [1743]))) "BNDLYR2.f":183 149 {*extendsidi2_rex64}
     (nil))
(insn 690 689 691 43 (parallel [
            (set (reg:DI 0 ax [orig:373 _287 ] [373])
                (plus:DI (reg:DI 0 ax [orig:372 _286 ] [372])
                    (reg:DI 1 dx [orig:371 _285 ] [371])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":183 222 {*adddi_1}
     (nil))
(insn 691 690 692 43 (parallel [
            (set (reg:DI 1 dx [orig:374 _288 ] [374])
                (plus:DI (reg:DI 0 ax [orig:373 _287 ] [373])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":183 222 {*adddi_1}
     (nil))
(insn 692 691 693 43 (set (reg:SF 21 xmm0 [1744])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC4") [flags 0x2]) [0  S4 A32])) "BNDLYR2.f":183 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 693 692 694 43 (set (reg:SF 21 xmm0 [orig:375 _289 ] [375])
        (plus:SF (reg:SF 21 xmm0 [1744])
            (reg:SF 22 xmm1 [orig:366 _280 ] [366]))) "BNDLYR2.f":183 838 {*fop_sf_comm}
     (nil))
(insn 694 693 695 43 (set (reg/f:DI 0 ax [1745])
        (symbol_ref:DI ("nsum.4200") [flags 0x202]  <var_decl 0x7fd1b2d4d120 nsum>)) "BNDLYR2.f":183 85 {*movdi_internal}
     (nil))
(insn 695 694 696 43 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:374 _288 ] [374])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1745])) [1 nsum S4 A32])
        (reg:SF 21 xmm0 [orig:375 _289 ] [375])) "BNDLYR2.f":183 131 {*movsf_internal}
     (nil))
(insn 696 695 697 43 (set (reg:SI 0 ax [1746])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 lbnd+0 S4 A32])) "BNDLYR2.f":184 86 {*movsi_internal}
     (nil))
(insn 697 696 698 43 (set (reg:DI 0 ax [orig:376 _290 ] [376])
        (sign_extend:DI (reg:SI 0 ax [1746]))) "BNDLYR2.f":184 149 {*extendsidi2_rex64}
     (nil))
(insn 698 697 699 43 (parallel [
            (set (reg:DI 1 dx [orig:377 _291 ] [377])
                (mult:DI (reg:DI 0 ax [orig:376 _290 ] [376])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":184 349 {*muldi3_1}
     (nil))
(insn 699 698 700 43 (set (reg:SI 0 ax [1747])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":184 86 {*movsi_internal}
     (nil))
(insn 700 699 701 43 (set (reg:DI 0 ax [orig:378 _292 ] [378])
        (sign_extend:DI (reg:SI 0 ax [1747]))) "BNDLYR2.f":184 149 {*extendsidi2_rex64}
     (nil))
(insn 701 700 702 43 (parallel [
            (set (reg:DI 0 ax [orig:379 _293 ] [379])
                (mult:DI (reg:DI 0 ax [orig:378 _292 ] [378])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":184 349 {*muldi3_1}
     (nil))
(insn 702 701 703 43 (parallel [
            (set (reg:DI 1 dx [orig:380 _294 ] [380])
                (plus:DI (reg:DI 1 dx [orig:377 _291 ] [377])
                    (reg:DI 0 ax [orig:379 _293 ] [379])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":184 222 {*adddi_1}
     (nil))
(insn 703 702 704 43 (set (reg:SI 0 ax [1748])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":184 86 {*movsi_internal}
     (nil))
(insn 704 703 705 43 (set (reg:DI 0 ax [orig:381 _295 ] [381])
        (sign_extend:DI (reg:SI 0 ax [1748]))) "BNDLYR2.f":184 149 {*extendsidi2_rex64}
     (nil))
(insn 705 704 706 43 (parallel [
            (set (reg:DI 0 ax [orig:382 _296 ] [382])
                (plus:DI (reg:DI 0 ax [orig:381 _295 ] [381])
                    (reg:DI 1 dx [orig:380 _294 ] [380])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":184 222 {*adddi_1}
     (nil))
(insn 706 705 707 43 (parallel [
            (set (reg:DI 1 dx [orig:383 _297 ] [383])
                (plus:DI (reg:DI 0 ax [orig:382 _296 ] [382])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":184 222 {*adddi_1}
     (nil))
(insn 707 706 708 43 (set (reg/f:DI 0 ax [1749])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 32 [0x20])) [4 lvlbnd+0 S8 A64])) "BNDLYR2.f":184 85 {*movdi_internal}
     (nil))
(insn 708 707 709 43 (set (reg:SI 2 cx [orig:384 _298 ] [384])
        (mem:SI (plus:DI (mult:DI (reg:DI 1 dx [orig:383 _297 ] [383])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1749])) [2 *lvlbnd_1552(D) S4 A32])) "BNDLYR2.f":184 86 {*movsi_internal}
     (nil))
(insn 709 708 710 43 (set (reg:SI 0 ax [1750])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 lbnd+0 S4 A32])) "BNDLYR2.f":184 86 {*movsi_internal}
     (nil))
(insn 710 709 711 43 (set (reg:DI 0 ax [orig:385 _299 ] [385])
        (sign_extend:DI (reg:SI 0 ax [1750]))) "BNDLYR2.f":184 149 {*extendsidi2_rex64}
     (nil))
(insn 711 710 712 43 (parallel [
            (set (reg:DI 1 dx [orig:386 _300 ] [386])
                (mult:DI (reg:DI 0 ax [orig:385 _299 ] [385])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":184 349 {*muldi3_1}
     (nil))
(insn 712 711 713 43 (set (reg:SI 0 ax [1751])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":184 86 {*movsi_internal}
     (nil))
(insn 713 712 714 43 (set (reg:DI 0 ax [orig:387 _301 ] [387])
        (sign_extend:DI (reg:SI 0 ax [1751]))) "BNDLYR2.f":184 149 {*extendsidi2_rex64}
     (nil))
(insn 714 713 715 43 (parallel [
            (set (reg:DI 0 ax [orig:388 _302 ] [388])
                (mult:DI (reg:DI 0 ax [orig:387 _301 ] [387])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":184 349 {*muldi3_1}
     (nil))
(insn 715 714 716 43 (parallel [
            (set (reg:DI 1 dx [orig:389 _303 ] [389])
                (plus:DI (reg:DI 1 dx [orig:386 _300 ] [386])
                    (reg:DI 0 ax [orig:388 _302 ] [388])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":184 222 {*adddi_1}
     (nil))
(insn 716 715 717 43 (set (reg:SI 0 ax [1752])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":184 86 {*movsi_internal}
     (nil))
(insn 717 716 718 43 (set (reg:DI 0 ax [orig:390 _304 ] [390])
        (sign_extend:DI (reg:SI 0 ax [1752]))) "BNDLYR2.f":184 149 {*extendsidi2_rex64}
     (nil))
(insn 718 717 719 43 (parallel [
            (set (reg:DI 0 ax [orig:391 _305 ] [391])
                (plus:DI (reg:DI 0 ax [orig:390 _304 ] [390])
                    (reg:DI 1 dx [orig:389 _303 ] [389])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":184 222 {*adddi_1}
     (nil))
(insn 719 718 720 43 (parallel [
            (set (reg:DI 1 dx [orig:392 _306 ] [392])
                (plus:DI (reg:DI 0 ax [orig:391 _305 ] [391])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":184 222 {*adddi_1}
     (nil))
(insn 720 719 721 43 (set (reg:SI 0 ax [1753])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 l+0 S4 A32])) "BNDLYR2.f":184 86 {*movsi_internal}
     (nil))
(insn 721 720 722 43 (parallel [
            (set (reg:SI 2 cx [orig:393 _307 ] [393])
                (plus:SI (reg:SI 2 cx [orig:384 _298 ] [384])
                    (reg:SI 0 ax [1753])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":184 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (reg:SI 2 cx [orig:384 _298 ] [384])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -20 [0xffffffffffffffec])) [2 l+0 S4 A32]))
        (nil)))
(insn 722 721 723 43 (set (reg/f:DI 0 ax [1754])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 32 [0x20])) [4 lvlbnd+0 S8 A64])) "BNDLYR2.f":184 85 {*movdi_internal}
     (nil))
(insn 723 722 724 43 (set (mem:SI (plus:DI (mult:DI (reg:DI 1 dx [orig:392 _306 ] [392])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1754])) [2 *lvlbnd_1552(D) S4 A32])
        (reg:SI 2 cx [orig:393 _307 ] [393])) "BNDLYR2.f":184 86 {*movsi_internal}
     (nil))
(insn 724 723 725 43 (set (reg:SI 0 ax [1755])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 lbnd+0 S4 A32])) "BNDLYR2.f":185 86 {*movsi_internal}
     (nil))
(insn 725 724 726 43 (set (reg:DI 0 ax [orig:394 _308 ] [394])
        (sign_extend:DI (reg:SI 0 ax [1755]))) "BNDLYR2.f":185 149 {*extendsidi2_rex64}
     (nil))
(insn 726 725 727 43 (parallel [
            (set (reg:DI 1 dx [orig:395 _309 ] [395])
                (mult:DI (reg:DI 0 ax [orig:394 _308 ] [394])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":185 349 {*muldi3_1}
     (nil))
(insn 727 726 728 43 (set (reg:SI 0 ax [1756])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":185 86 {*movsi_internal}
     (nil))
(insn 728 727 729 43 (set (reg:DI 0 ax [orig:396 _310 ] [396])
        (sign_extend:DI (reg:SI 0 ax [1756]))) "BNDLYR2.f":185 149 {*extendsidi2_rex64}
     (nil))
(insn 729 728 730 43 (parallel [
            (set (reg:DI 0 ax [orig:397 _311 ] [397])
                (mult:DI (reg:DI 0 ax [orig:396 _310 ] [396])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":185 349 {*muldi3_1}
     (nil))
(insn 730 729 731 43 (parallel [
            (set (reg:DI 1 dx [orig:398 _312 ] [398])
                (plus:DI (reg:DI 1 dx [orig:395 _309 ] [395])
                    (reg:DI 0 ax [orig:397 _311 ] [397])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":185 222 {*adddi_1}
     (nil))
(insn 731 730 732 43 (set (reg:SI 0 ax [1757])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":185 86 {*movsi_internal}
     (nil))
(insn 732 731 733 43 (set (reg:DI 0 ax [orig:399 _313 ] [399])
        (sign_extend:DI (reg:SI 0 ax [1757]))) "BNDLYR2.f":185 149 {*extendsidi2_rex64}
     (nil))
(insn 733 732 734 43 (parallel [
            (set (reg:DI 0 ax [orig:400 _314 ] [400])
                (plus:DI (reg:DI 0 ax [orig:399 _313 ] [399])
                    (reg:DI 1 dx [orig:398 _312 ] [398])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":185 222 {*adddi_1}
     (nil))
(insn 734 733 735 43 (parallel [
            (set (reg:DI 1 dx [orig:401 _315 ] [401])
                (plus:DI (reg:DI 0 ax [orig:400 _314 ] [400])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":185 222 {*adddi_1}
     (nil))
(insn 735 734 736 43 (set (reg/f:DI 0 ax [1758])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -160 [0xffffffffffffff60])) [3 tbnd+0 S8 A64])) "BNDLYR2.f":185 85 {*movdi_internal}
     (nil))
(insn 736 735 737 43 (set (reg:SF 22 xmm1 [orig:402 _316 ] [402])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:401 _315 ] [401])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1758])) [1 *tbnd_1539(D) S4 A32])) "BNDLYR2.f":185 131 {*movsf_internal}
     (nil))
(insn 737 736 738 43 (set (reg:SI 0 ax [1759])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 l+0 S4 A32])) "BNDLYR2.f":185 86 {*movsi_internal}
     (nil))
(insn 738 737 739 43 (set (reg:DI 0 ax [orig:403 _317 ] [403])
        (sign_extend:DI (reg:SI 0 ax [1759]))) "BNDLYR2.f":185 149 {*extendsidi2_rex64}
     (nil))
(insn 739 738 740 43 (parallel [
            (set (reg:DI 1 dx [orig:404 _318 ] [404])
                (mult:DI (reg:DI 0 ax [orig:403 _317 ] [403])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":185 349 {*muldi3_1}
     (nil))
(insn 740 739 741 43 (set (reg:SI 0 ax [1760])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":185 86 {*movsi_internal}
     (nil))
(insn 741 740 742 43 (set (reg:DI 0 ax [orig:405 _319 ] [405])
        (sign_extend:DI (reg:SI 0 ax [1760]))) "BNDLYR2.f":185 149 {*extendsidi2_rex64}
     (nil))
(insn 742 741 743 43 (parallel [
            (set (reg:DI 0 ax [orig:406 _320 ] [406])
                (mult:DI (reg:DI 0 ax [orig:405 _319 ] [405])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":185 349 {*muldi3_1}
     (nil))
(insn 743 742 744 43 (parallel [
            (set (reg:DI 1 dx [orig:407 _321 ] [407])
                (plus:DI (reg:DI 1 dx [orig:404 _318 ] [404])
                    (reg:DI 0 ax [orig:406 _320 ] [406])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":185 222 {*adddi_1}
     (nil))
(insn 744 743 745 43 (set (reg:SI 0 ax [1761])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":185 86 {*movsi_internal}
     (nil))
(insn 745 744 746 43 (set (reg:DI 0 ax [orig:408 _322 ] [408])
        (sign_extend:DI (reg:SI 0 ax [1761]))) "BNDLYR2.f":185 149 {*extendsidi2_rex64}
     (nil))
(insn 746 745 747 43 (parallel [
            (set (reg:DI 0 ax [orig:409 _323 ] [409])
                (plus:DI (reg:DI 0 ax [orig:408 _322 ] [408])
                    (reg:DI 1 dx [orig:407 _321 ] [407])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":185 222 {*adddi_1}
     (nil))
(insn 747 746 748 43 (parallel [
            (set (reg:DI 1 dx [orig:410 _324 ] [410])
                (plus:DI (reg:DI 0 ax [orig:409 _323 ] [409])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":185 222 {*adddi_1}
     (nil))
(insn 748 747 749 43 (set (reg/f:DI 0 ax [1762])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7fd1b2d48360 vrbls>)) "BNDLYR2.f":185 85 {*movdi_internal}
     (nil))
(insn 749 748 750 43 (parallel [
            (set (reg:DI 1 dx [1763])
                (plus:DI (reg:DI 1 dx [orig:410 _324 ] [410])
                    (const_int 2340849 [0x23b7f1])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":185 222 {*adddi_1}
     (nil))
(insn 750 749 751 43 (set (reg:SF 21 xmm0 [orig:411 _325 ] [411])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [1763])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1762])) [1 vrbls.t S4 A32])) "BNDLYR2.f":185 131 {*movsf_internal}
     (nil))
(insn 751 750 752 43 (set (reg:SF 21 xmm0 [orig:412 _326 ] [412])
        (mult:SF (reg:SF 21 xmm0 [orig:411 _325 ] [411])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -72 [0xffffffffffffffb8])) [1 dp+0 S4 A32]))) "BNDLYR2.f":185 838 {*fop_sf_comm}
     (nil))
(insn 752 751 753 43 (set (reg:SI 0 ax [1764])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 lbnd+0 S4 A32])) "BNDLYR2.f":185 86 {*movsi_internal}
     (nil))
(insn 753 752 754 43 (set (reg:DI 0 ax [orig:413 _327 ] [413])
        (sign_extend:DI (reg:SI 0 ax [1764]))) "BNDLYR2.f":185 149 {*extendsidi2_rex64}
     (nil))
(insn 754 753 755 43 (parallel [
            (set (reg:DI 1 dx [orig:414 _328 ] [414])
                (mult:DI (reg:DI 0 ax [orig:413 _327 ] [413])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":185 349 {*muldi3_1}
     (nil))
(insn 755 754 756 43 (set (reg:SI 0 ax [1765])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":185 86 {*movsi_internal}
     (nil))
(insn 756 755 757 43 (set (reg:DI 0 ax [orig:415 _329 ] [415])
        (sign_extend:DI (reg:SI 0 ax [1765]))) "BNDLYR2.f":185 149 {*extendsidi2_rex64}
     (nil))
(insn 757 756 758 43 (parallel [
            (set (reg:DI 0 ax [orig:416 _330 ] [416])
                (mult:DI (reg:DI 0 ax [orig:415 _329 ] [415])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":185 349 {*muldi3_1}
     (nil))
(insn 758 757 759 43 (parallel [
            (set (reg:DI 1 dx [orig:417 _331 ] [417])
                (plus:DI (reg:DI 1 dx [orig:414 _328 ] [414])
                    (reg:DI 0 ax [orig:416 _330 ] [416])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":185 222 {*adddi_1}
     (nil))
(insn 759 758 760 43 (set (reg:SI 0 ax [1766])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":185 86 {*movsi_internal}
     (nil))
(insn 760 759 761 43 (set (reg:DI 0 ax [orig:418 _332 ] [418])
        (sign_extend:DI (reg:SI 0 ax [1766]))) "BNDLYR2.f":185 149 {*extendsidi2_rex64}
     (nil))
(insn 761 760 762 43 (parallel [
            (set (reg:DI 0 ax [orig:419 _333 ] [419])
                (plus:DI (reg:DI 0 ax [orig:418 _332 ] [418])
                    (reg:DI 1 dx [orig:417 _331 ] [417])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":185 222 {*adddi_1}
     (nil))
(insn 762 761 763 43 (parallel [
            (set (reg:DI 1 dx [orig:420 _334 ] [420])
                (plus:DI (reg:DI 0 ax [orig:419 _333 ] [419])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":185 222 {*adddi_1}
     (nil))
(insn 763 762 764 43 (set (reg:SF 21 xmm0 [orig:421 _335 ] [421])
        (plus:SF (reg:SF 21 xmm0 [orig:412 _326 ] [412])
            (reg:SF 22 xmm1 [orig:402 _316 ] [402]))) "BNDLYR2.f":185 838 {*fop_sf_comm}
     (nil))
(insn 764 763 765 43 (set (reg/f:DI 0 ax [1767])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -160 [0xffffffffffffff60])) [3 tbnd+0 S8 A64])) "BNDLYR2.f":185 85 {*movdi_internal}
     (nil))
(insn 765 764 766 43 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:420 _334 ] [420])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1767])) [1 *tbnd_1539(D) S4 A32])
        (reg:SF 21 xmm0 [orig:421 _335 ] [421])) "BNDLYR2.f":185 131 {*movsf_internal}
     (nil))
(insn 766 765 767 43 (set (reg:SI 0 ax [1768])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 lbnd+0 S4 A32])) "BNDLYR2.f":186 86 {*movsi_internal}
     (nil))
(insn 767 766 768 43 (set (reg:DI 0 ax [orig:422 _336 ] [422])
        (sign_extend:DI (reg:SI 0 ax [1768]))) "BNDLYR2.f":186 149 {*extendsidi2_rex64}
     (nil))
(insn 768 767 769 43 (parallel [
            (set (reg:DI 1 dx [orig:423 _337 ] [423])
                (mult:DI (reg:DI 0 ax [orig:422 _336 ] [422])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":186 349 {*muldi3_1}
     (nil))
(insn 769 768 770 43 (set (reg:SI 0 ax [1769])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":186 86 {*movsi_internal}
     (nil))
(insn 770 769 771 43 (set (reg:DI 0 ax [orig:424 _338 ] [424])
        (sign_extend:DI (reg:SI 0 ax [1769]))) "BNDLYR2.f":186 149 {*extendsidi2_rex64}
     (nil))
(insn 771 770 772 43 (parallel [
            (set (reg:DI 0 ax [orig:425 _339 ] [425])
                (mult:DI (reg:DI 0 ax [orig:424 _338 ] [424])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":186 349 {*muldi3_1}
     (nil))
(insn 772 771 773 43 (parallel [
            (set (reg:DI 1 dx [orig:426 _340 ] [426])
                (plus:DI (reg:DI 1 dx [orig:423 _337 ] [423])
                    (reg:DI 0 ax [orig:425 _339 ] [425])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":186 222 {*adddi_1}
     (nil))
(insn 773 772 774 43 (set (reg:SI 0 ax [1770])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":186 86 {*movsi_internal}
     (nil))
(insn 774 773 775 43 (set (reg:DI 0 ax [orig:427 _341 ] [427])
        (sign_extend:DI (reg:SI 0 ax [1770]))) "BNDLYR2.f":186 149 {*extendsidi2_rex64}
     (nil))
(insn 775 774 776 43 (parallel [
            (set (reg:DI 0 ax [orig:428 _342 ] [428])
                (plus:DI (reg:DI 0 ax [orig:427 _341 ] [427])
                    (reg:DI 1 dx [orig:426 _340 ] [426])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":186 222 {*adddi_1}
     (nil))
(insn 776 775 777 43 (parallel [
            (set (reg:DI 1 dx [orig:429 _343 ] [429])
                (plus:DI (reg:DI 0 ax [orig:428 _342 ] [428])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":186 222 {*adddi_1}
     (nil))
(insn 777 776 778 43 (set (reg/f:DI 0 ax [1771])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [3 qbnd+0 S8 A64])) "BNDLYR2.f":186 85 {*movdi_internal}
     (nil))
(insn 778 777 779 43 (set (reg:SF 22 xmm1 [orig:430 _344 ] [430])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:429 _343 ] [429])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1771])) [1 *qbnd_1541(D) S4 A32])) "BNDLYR2.f":186 131 {*movsf_internal}
     (nil))
(insn 779 778 780 43 (set (reg:SI 0 ax [1772])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 l+0 S4 A32])) "BNDLYR2.f":186 86 {*movsi_internal}
     (nil))
(insn 780 779 781 43 (set (reg:DI 0 ax [orig:431 _345 ] [431])
        (sign_extend:DI (reg:SI 0 ax [1772]))) "BNDLYR2.f":186 149 {*extendsidi2_rex64}
     (nil))
(insn 781 780 782 43 (parallel [
            (set (reg:DI 1 dx [orig:432 _346 ] [432])
                (mult:DI (reg:DI 0 ax [orig:431 _345 ] [431])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":186 349 {*muldi3_1}
     (nil))
(insn 782 781 783 43 (set (reg:SI 0 ax [1773])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":186 86 {*movsi_internal}
     (nil))
(insn 783 782 784 43 (set (reg:DI 0 ax [orig:433 _347 ] [433])
        (sign_extend:DI (reg:SI 0 ax [1773]))) "BNDLYR2.f":186 149 {*extendsidi2_rex64}
     (nil))
(insn 784 783 785 43 (parallel [
            (set (reg:DI 0 ax [orig:434 _348 ] [434])
                (mult:DI (reg:DI 0 ax [orig:433 _347 ] [433])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":186 349 {*muldi3_1}
     (nil))
(insn 785 784 786 43 (parallel [
            (set (reg:DI 1 dx [orig:435 _349 ] [435])
                (plus:DI (reg:DI 1 dx [orig:432 _346 ] [432])
                    (reg:DI 0 ax [orig:434 _348 ] [434])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":186 222 {*adddi_1}
     (nil))
(insn 786 785 787 43 (set (reg:SI 0 ax [1774])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":186 86 {*movsi_internal}
     (nil))
(insn 787 786 788 43 (set (reg:DI 0 ax [orig:436 _350 ] [436])
        (sign_extend:DI (reg:SI 0 ax [1774]))) "BNDLYR2.f":186 149 {*extendsidi2_rex64}
     (nil))
(insn 788 787 789 43 (parallel [
            (set (reg:DI 0 ax [orig:437 _351 ] [437])
                (plus:DI (reg:DI 0 ax [orig:436 _350 ] [436])
                    (reg:DI 1 dx [orig:435 _349 ] [435])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":186 222 {*adddi_1}
     (nil))
(insn 789 788 790 43 (parallel [
            (set (reg:DI 1 dx [orig:438 _352 ] [438])
                (plus:DI (reg:DI 0 ax [orig:437 _351 ] [437])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":186 222 {*adddi_1}
     (nil))
(insn 790 789 791 43 (set (reg/f:DI 0 ax [1775])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7fd1b2d48360 vrbls>)) "BNDLYR2.f":186 85 {*movdi_internal}
     (nil))
(insn 791 790 792 43 (parallel [
            (set (reg:DI 1 dx [1776])
                (plus:DI (reg:DI 1 dx [orig:438 _352 ] [438])
                    (const_int 3466827 [0x34e64b])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":186 222 {*adddi_1}
     (nil))
(insn 792 791 793 43 (set (reg:SF 21 xmm0 [orig:439 _353 ] [439])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [1776])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1775])) [1 vrbls.q S4 A32])) "BNDLYR2.f":186 131 {*movsf_internal}
     (nil))
(insn 793 792 794 43 (set (reg:SF 21 xmm0 [orig:440 _354 ] [440])
        (mult:SF (reg:SF 21 xmm0 [orig:439 _353 ] [439])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -72 [0xffffffffffffffb8])) [1 dp+0 S4 A32]))) "BNDLYR2.f":186 838 {*fop_sf_comm}
     (nil))
(insn 794 793 795 43 (set (reg:SI 0 ax [1777])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 lbnd+0 S4 A32])) "BNDLYR2.f":186 86 {*movsi_internal}
     (nil))
(insn 795 794 796 43 (set (reg:DI 0 ax [orig:441 _355 ] [441])
        (sign_extend:DI (reg:SI 0 ax [1777]))) "BNDLYR2.f":186 149 {*extendsidi2_rex64}
     (nil))
(insn 796 795 797 43 (parallel [
            (set (reg:DI 1 dx [orig:442 _356 ] [442])
                (mult:DI (reg:DI 0 ax [orig:441 _355 ] [441])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":186 349 {*muldi3_1}
     (nil))
(insn 797 796 798 43 (set (reg:SI 0 ax [1778])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":186 86 {*movsi_internal}
     (nil))
(insn 798 797 799 43 (set (reg:DI 0 ax [orig:443 _357 ] [443])
        (sign_extend:DI (reg:SI 0 ax [1778]))) "BNDLYR2.f":186 149 {*extendsidi2_rex64}
     (nil))
(insn 799 798 800 43 (parallel [
            (set (reg:DI 0 ax [orig:444 _358 ] [444])
                (mult:DI (reg:DI 0 ax [orig:443 _357 ] [443])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":186 349 {*muldi3_1}
     (nil))
(insn 800 799 801 43 (parallel [
            (set (reg:DI 1 dx [orig:445 _359 ] [445])
                (plus:DI (reg:DI 1 dx [orig:442 _356 ] [442])
                    (reg:DI 0 ax [orig:444 _358 ] [444])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":186 222 {*adddi_1}
     (nil))
(insn 801 800 802 43 (set (reg:SI 0 ax [1779])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":186 86 {*movsi_internal}
     (nil))
(insn 802 801 803 43 (set (reg:DI 0 ax [orig:446 _360 ] [446])
        (sign_extend:DI (reg:SI 0 ax [1779]))) "BNDLYR2.f":186 149 {*extendsidi2_rex64}
     (nil))
(insn 803 802 804 43 (parallel [
            (set (reg:DI 0 ax [orig:447 _361 ] [447])
                (plus:DI (reg:DI 0 ax [orig:446 _360 ] [446])
                    (reg:DI 1 dx [orig:445 _359 ] [445])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":186 222 {*adddi_1}
     (nil))
(insn 804 803 805 43 (parallel [
            (set (reg:DI 1 dx [orig:448 _362 ] [448])
                (plus:DI (reg:DI 0 ax [orig:447 _361 ] [447])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":186 222 {*adddi_1}
     (nil))
(insn 805 804 806 43 (set (reg:SF 21 xmm0 [orig:449 _363 ] [449])
        (plus:SF (reg:SF 21 xmm0 [orig:440 _354 ] [440])
            (reg:SF 22 xmm1 [orig:430 _344 ] [430]))) "BNDLYR2.f":186 838 {*fop_sf_comm}
     (nil))
(insn 806 805 807 43 (set (reg/f:DI 0 ax [1780])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [3 qbnd+0 S8 A64])) "BNDLYR2.f":186 85 {*movdi_internal}
     (nil))
(insn 807 806 808 43 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:448 _362 ] [448])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1780])) [1 *qbnd_1541(D) S4 A32])
        (reg:SF 21 xmm0 [orig:449 _363 ] [449])) "BNDLYR2.f":186 131 {*movsf_internal}
     (nil))
(insn 808 807 809 43 (set (reg:SI 0 ax [1781])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 lbnd+0 S4 A32])) "BNDLYR2.f":187 86 {*movsi_internal}
     (nil))
(insn 809 808 810 43 (set (reg:DI 0 ax [orig:450 _364 ] [450])
        (sign_extend:DI (reg:SI 0 ax [1781]))) "BNDLYR2.f":187 149 {*extendsidi2_rex64}
     (nil))
(insn 810 809 811 43 (parallel [
            (set (reg:DI 1 dx [orig:451 _365 ] [451])
                (mult:DI (reg:DI 0 ax [orig:450 _364 ] [450])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":187 349 {*muldi3_1}
     (nil))
(insn 811 810 812 43 (set (reg:SI 0 ax [1782])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":187 86 {*movsi_internal}
     (nil))
(insn 812 811 813 43 (set (reg:DI 0 ax [orig:452 _366 ] [452])
        (sign_extend:DI (reg:SI 0 ax [1782]))) "BNDLYR2.f":187 149 {*extendsidi2_rex64}
     (nil))
(insn 813 812 814 43 (parallel [
            (set (reg:DI 0 ax [orig:453 _367 ] [453])
                (mult:DI (reg:DI 0 ax [orig:452 _366 ] [452])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":187 349 {*muldi3_1}
     (nil))
(insn 814 813 815 43 (parallel [
            (set (reg:DI 1 dx [orig:454 _368 ] [454])
                (plus:DI (reg:DI 1 dx [orig:451 _365 ] [451])
                    (reg:DI 0 ax [orig:453 _367 ] [453])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":187 222 {*adddi_1}
     (nil))
(insn 815 814 816 43 (set (reg:SI 0 ax [1783])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":187 86 {*movsi_internal}
     (nil))
(insn 816 815 817 43 (set (reg:DI 0 ax [orig:455 _369 ] [455])
        (sign_extend:DI (reg:SI 0 ax [1783]))) "BNDLYR2.f":187 149 {*extendsidi2_rex64}
     (nil))
(insn 817 816 818 43 (parallel [
            (set (reg:DI 0 ax [orig:456 _370 ] [456])
                (plus:DI (reg:DI 0 ax [orig:455 _369 ] [455])
                    (reg:DI 1 dx [orig:454 _368 ] [454])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":187 222 {*adddi_1}
     (nil))
(insn 818 817 819 43 (parallel [
            (set (reg:DI 1 dx [orig:457 _371 ] [457])
                (plus:DI (reg:DI 0 ax [orig:456 _370 ] [456])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":187 222 {*adddi_1}
     (nil))
(insn 819 818 820 43 (set (reg/f:DI 0 ax [1784])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 16 [0x10])) [3 omgbnd+0 S8 A64])) "BNDLYR2.f":187 85 {*movdi_internal}
     (nil))
(insn 820 819 821 43 (set (reg:SF 22 xmm1 [orig:458 _372 ] [458])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:457 _371 ] [457])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1784])) [1 *omgbnd_1550(D) S4 A32])) "BNDLYR2.f":187 131 {*movsf_internal}
     (nil))
(insn 821 820 822 43 (set (reg:SI 0 ax [1785])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 l+0 S4 A32])) "BNDLYR2.f":187 86 {*movsi_internal}
     (nil))
(insn 822 821 823 43 (set (reg:DI 0 ax [orig:459 _373 ] [459])
        (sign_extend:DI (reg:SI 0 ax [1785]))) "BNDLYR2.f":187 149 {*extendsidi2_rex64}
     (nil))
(insn 823 822 824 43 (parallel [
            (set (reg:DI 1 dx [orig:460 _374 ] [460])
                (mult:DI (reg:DI 0 ax [orig:459 _373 ] [459])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":187 349 {*muldi3_1}
     (nil))
(insn 824 823 825 43 (set (reg:SI 0 ax [1786])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":187 86 {*movsi_internal}
     (nil))
(insn 825 824 826 43 (set (reg:DI 0 ax [orig:461 _375 ] [461])
        (sign_extend:DI (reg:SI 0 ax [1786]))) "BNDLYR2.f":187 149 {*extendsidi2_rex64}
     (nil))
(insn 826 825 827 43 (parallel [
            (set (reg:DI 0 ax [orig:462 _376 ] [462])
                (mult:DI (reg:DI 0 ax [orig:461 _375 ] [461])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":187 349 {*muldi3_1}
     (nil))
(insn 827 826 828 43 (parallel [
            (set (reg:DI 1 dx [orig:463 _377 ] [463])
                (plus:DI (reg:DI 1 dx [orig:460 _374 ] [460])
                    (reg:DI 0 ax [orig:462 _376 ] [462])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":187 222 {*adddi_1}
     (nil))
(insn 828 827 829 43 (set (reg:SI 0 ax [1787])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":187 86 {*movsi_internal}
     (nil))
(insn 829 828 830 43 (set (reg:DI 0 ax [orig:464 _378 ] [464])
        (sign_extend:DI (reg:SI 0 ax [1787]))) "BNDLYR2.f":187 149 {*extendsidi2_rex64}
     (nil))
(insn 830 829 831 43 (parallel [
            (set (reg:DI 0 ax [orig:465 _379 ] [465])
                (plus:DI (reg:DI 0 ax [orig:464 _378 ] [464])
                    (reg:DI 1 dx [orig:463 _377 ] [463])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":187 222 {*adddi_1}
     (nil))
(insn 831 830 832 43 (parallel [
            (set (reg:DI 1 dx [orig:466 _380 ] [466])
                (plus:DI (reg:DI 0 ax [orig:465 _379 ] [465])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":187 222 {*adddi_1}
     (nil))
(insn 832 831 833 43 (set (reg/f:DI 0 ax [1788])
        (symbol_ref:DI ("omgaot_") [flags 0x202]  <var_decl 0x7fd1b2d3c990 omgaot>)) "BNDLYR2.f":187 85 {*movdi_internal}
     (nil))
(insn 833 832 834 43 (set (reg:SF 21 xmm0 [orig:467 _381 ] [467])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:466 _380 ] [466])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1788])) [1 omgaot.omga S4 A32])) "BNDLYR2.f":187 131 {*movsf_internal}
     (nil))
(insn 834 833 835 43 (set (reg:SF 21 xmm0 [orig:468 _382 ] [468])
        (mult:SF (reg:SF 21 xmm0 [orig:467 _381 ] [467])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -72 [0xffffffffffffffb8])) [1 dp+0 S4 A32]))) "BNDLYR2.f":187 838 {*fop_sf_comm}
     (nil))
(insn 835 834 836 43 (set (reg:SI 0 ax [1789])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 lbnd+0 S4 A32])) "BNDLYR2.f":187 86 {*movsi_internal}
     (nil))
(insn 836 835 837 43 (set (reg:DI 0 ax [orig:469 _383 ] [469])
        (sign_extend:DI (reg:SI 0 ax [1789]))) "BNDLYR2.f":187 149 {*extendsidi2_rex64}
     (nil))
(insn 837 836 838 43 (parallel [
            (set (reg:DI 1 dx [orig:470 _384 ] [470])
                (mult:DI (reg:DI 0 ax [orig:469 _383 ] [469])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":187 349 {*muldi3_1}
     (nil))
(insn 838 837 839 43 (set (reg:SI 0 ax [1790])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":187 86 {*movsi_internal}
     (nil))
(insn 839 838 840 43 (set (reg:DI 0 ax [orig:471 _385 ] [471])
        (sign_extend:DI (reg:SI 0 ax [1790]))) "BNDLYR2.f":187 149 {*extendsidi2_rex64}
     (nil))
(insn 840 839 841 43 (parallel [
            (set (reg:DI 0 ax [orig:472 _386 ] [472])
                (mult:DI (reg:DI 0 ax [orig:471 _385 ] [471])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":187 349 {*muldi3_1}
     (nil))
(insn 841 840 842 43 (parallel [
            (set (reg:DI 1 dx [orig:473 _387 ] [473])
                (plus:DI (reg:DI 1 dx [orig:470 _384 ] [470])
                    (reg:DI 0 ax [orig:472 _386 ] [472])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":187 222 {*adddi_1}
     (nil))
(insn 842 841 843 43 (set (reg:SI 0 ax [1791])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":187 86 {*movsi_internal}
     (nil))
(insn 843 842 844 43 (set (reg:DI 0 ax [orig:474 _388 ] [474])
        (sign_extend:DI (reg:SI 0 ax [1791]))) "BNDLYR2.f":187 149 {*extendsidi2_rex64}
     (nil))
(insn 844 843 845 43 (parallel [
            (set (reg:DI 0 ax [orig:475 _389 ] [475])
                (plus:DI (reg:DI 0 ax [orig:474 _388 ] [474])
                    (reg:DI 1 dx [orig:473 _387 ] [473])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":187 222 {*adddi_1}
     (nil))
(insn 845 844 846 43 (parallel [
            (set (reg:DI 1 dx [orig:476 _390 ] [476])
                (plus:DI (reg:DI 0 ax [orig:475 _389 ] [475])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":187 222 {*adddi_1}
     (nil))
(insn 846 845 847 43 (set (reg:SF 21 xmm0 [orig:477 _391 ] [477])
        (plus:SF (reg:SF 21 xmm0 [orig:468 _382 ] [468])
            (reg:SF 22 xmm1 [orig:458 _372 ] [458]))) "BNDLYR2.f":187 838 {*fop_sf_comm}
     (nil))
(insn 847 846 848 43 (set (reg/f:DI 0 ax [1792])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 16 [0x10])) [3 omgbnd+0 S8 A64])) "BNDLYR2.f":187 85 {*movdi_internal}
     (nil))
(insn 848 847 849 43 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:476 _390 ] [476])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1792])) [1 *omgbnd_1550(D) S4 A32])
        (reg:SF 21 xmm0 [orig:477 _391 ] [477])) "BNDLYR2.f":187 131 {*movsf_internal}
     (nil))
(insn 849 848 850 43 (set (reg:SI 0 ax [1793])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 lbnd+0 S4 A32])) "BNDLYR2.f":189 86 {*movsi_internal}
     (nil))
(insn 850 849 851 43 (set (reg:DI 0 ax [orig:478 _392 ] [478])
        (sign_extend:DI (reg:SI 0 ax [1793]))) "BNDLYR2.f":189 149 {*extendsidi2_rex64}
     (nil))
(insn 851 850 852 43 (parallel [
            (set (reg:DI 1 dx [orig:479 _393 ] [479])
                (mult:DI (reg:DI 0 ax [orig:478 _392 ] [478])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":189 349 {*muldi3_1}
     (nil))
(insn 852 851 853 43 (set (reg:SI 0 ax [1794])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":189 86 {*movsi_internal}
     (nil))
(insn 853 852 854 43 (set (reg:DI 0 ax [orig:480 _394 ] [480])
        (sign_extend:DI (reg:SI 0 ax [1794]))) "BNDLYR2.f":189 149 {*extendsidi2_rex64}
     (nil))
(insn 854 853 855 43 (parallel [
            (set (reg:DI 0 ax [orig:481 _395 ] [481])
                (mult:DI (reg:DI 0 ax [orig:480 _394 ] [480])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":189 349 {*muldi3_1}
     (nil))
(insn 855 854 856 43 (parallel [
            (set (reg:DI 1 dx [orig:482 _396 ] [482])
                (plus:DI (reg:DI 1 dx [orig:479 _393 ] [479])
                    (reg:DI 0 ax [orig:481 _395 ] [481])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":189 222 {*adddi_1}
     (nil))
(insn 856 855 857 43 (set (reg:SI 0 ax [1795])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":189 86 {*movsi_internal}
     (nil))
(insn 857 856 858 43 (set (reg:DI 0 ax [orig:483 _397 ] [483])
        (sign_extend:DI (reg:SI 0 ax [1795]))) "BNDLYR2.f":189 149 {*extendsidi2_rex64}
     (nil))
(insn 858 857 859 43 (parallel [
            (set (reg:DI 0 ax [orig:484 _398 ] [484])
                (plus:DI (reg:DI 0 ax [orig:483 _397 ] [483])
                    (reg:DI 1 dx [orig:482 _396 ] [482])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":189 222 {*adddi_1}
     (nil))
(insn 859 858 860 43 (parallel [
            (set (reg:DI 1 dx [orig:485 _399 ] [485])
                (plus:DI (reg:DI 0 ax [orig:484 _398 ] [484])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":189 222 {*adddi_1}
     (nil))
(insn 860 859 861 43 (set (reg/f:DI 0 ax [1796])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 24 [0x18])) [3 pwtbnd+0 S8 A64])) "BNDLYR2.f":189 85 {*movdi_internal}
     (nil))
(insn 861 860 862 43 (set (reg:SF 22 xmm1 [orig:486 _400 ] [486])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:485 _399 ] [485])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1796])) [1 *pwtbnd_1557(D) S4 A32])) "BNDLYR2.f":189 131 {*movsf_internal}
     (nil))
(insn 862 861 863 43 (set (reg:SI 0 ax [1797])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 l+0 S4 A32])) "BNDLYR2.f":189 86 {*movsi_internal}
     (nil))
(insn 863 862 864 43 (set (reg:DI 0 ax [orig:487 _401 ] [487])
        (sign_extend:DI (reg:SI 0 ax [1797]))) "BNDLYR2.f":189 149 {*extendsidi2_rex64}
     (nil))
(insn 864 863 865 43 (parallel [
            (set (reg:DI 1 dx [orig:488 _402 ] [488])
                (mult:DI (reg:DI 0 ax [orig:487 _401 ] [487])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":189 349 {*muldi3_1}
     (nil))
(insn 865 864 866 43 (set (reg:SI 0 ax [1798])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":189 86 {*movsi_internal}
     (nil))
(insn 866 865 867 43 (set (reg:DI 0 ax [orig:489 _403 ] [489])
        (sign_extend:DI (reg:SI 0 ax [1798]))) "BNDLYR2.f":189 149 {*extendsidi2_rex64}
     (nil))
(insn 867 866 868 43 (parallel [
            (set (reg:DI 0 ax [orig:490 _404 ] [490])
                (mult:DI (reg:DI 0 ax [orig:489 _403 ] [489])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":189 349 {*muldi3_1}
     (nil))
(insn 868 867 869 43 (parallel [
            (set (reg:DI 1 dx [orig:491 _405 ] [491])
                (plus:DI (reg:DI 1 dx [orig:488 _402 ] [488])
                    (reg:DI 0 ax [orig:490 _404 ] [490])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":189 222 {*adddi_1}
     (nil))
(insn 869 868 870 43 (set (reg:SI 0 ax [1799])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":189 86 {*movsi_internal}
     (nil))
(insn 870 869 871 43 (set (reg:DI 0 ax [orig:492 _406 ] [492])
        (sign_extend:DI (reg:SI 0 ax [1799]))) "BNDLYR2.f":189 149 {*extendsidi2_rex64}
     (nil))
(insn 871 870 872 43 (parallel [
            (set (reg:DI 0 ax [orig:493 _407 ] [493])
                (plus:DI (reg:DI 0 ax [orig:492 _406 ] [492])
                    (reg:DI 1 dx [orig:491 _405 ] [491])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":189 222 {*adddi_1}
     (nil))
(insn 872 871 873 43 (parallel [
            (set (reg:DI 1 dx [orig:494 _408 ] [494])
                (plus:DI (reg:DI 0 ax [orig:493 _407 ] [493])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":189 222 {*adddi_1}
     (nil))
(insn 873 872 874 43 (set (reg/f:DI 0 ax [1800])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7fd1b2d48360 vrbls>)) "BNDLYR2.f":189 85 {*movdi_internal}
     (nil))
(insn 874 873 875 43 (parallel [
            (set (reg:DI 1 dx [1801])
                (plus:DI (reg:DI 1 dx [orig:494 _408 ] [494])
                    (const_int 3466827 [0x34e64b])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":189 222 {*adddi_1}
     (nil))
(insn 875 874 876 43 (set (reg:SF 23 xmm2 [orig:495 _409 ] [495])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [1801])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1800])) [1 vrbls.q S4 A32])) "BNDLYR2.f":189 131 {*movsf_internal}
     (nil))
(insn 876 875 877 43 (set (reg:SI 0 ax [1802])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 l+0 S4 A32])) "BNDLYR2.f":189 86 {*movsi_internal}
     (nil))
(insn 877 876 878 43 (set (reg:DI 0 ax [orig:496 _410 ] [496])
        (sign_extend:DI (reg:SI 0 ax [1802]))) "BNDLYR2.f":189 149 {*extendsidi2_rex64}
     (nil))
(insn 878 877 879 43 (parallel [
            (set (reg:DI 1 dx [orig:497 _411 ] [497])
                (mult:DI (reg:DI 0 ax [orig:496 _410 ] [496])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":189 349 {*muldi3_1}
     (nil))
(insn 879 878 880 43 (set (reg:SI 0 ax [1803])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":189 86 {*movsi_internal}
     (nil))
(insn 880 879 881 43 (set (reg:DI 0 ax [orig:498 _412 ] [498])
        (sign_extend:DI (reg:SI 0 ax [1803]))) "BNDLYR2.f":189 149 {*extendsidi2_rex64}
     (nil))
(insn 881 880 882 43 (parallel [
            (set (reg:DI 0 ax [orig:499 _413 ] [499])
                (mult:DI (reg:DI 0 ax [orig:498 _412 ] [498])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":189 349 {*muldi3_1}
     (nil))
(insn 882 881 883 43 (parallel [
            (set (reg:DI 1 dx [orig:500 _414 ] [500])
                (plus:DI (reg:DI 1 dx [orig:497 _411 ] [497])
                    (reg:DI 0 ax [orig:499 _413 ] [499])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":189 222 {*adddi_1}
     (nil))
(insn 883 882 884 43 (set (reg:SI 0 ax [1804])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":189 86 {*movsi_internal}
     (nil))
(insn 884 883 885 43 (set (reg:DI 0 ax [orig:501 _415 ] [501])
        (sign_extend:DI (reg:SI 0 ax [1804]))) "BNDLYR2.f":189 149 {*extendsidi2_rex64}
     (nil))
(insn 885 884 886 43 (parallel [
            (set (reg:DI 0 ax [orig:502 _416 ] [502])
                (plus:DI (reg:DI 0 ax [orig:501 _415 ] [501])
                    (reg:DI 1 dx [orig:500 _414 ] [500])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":189 222 {*adddi_1}
     (nil))
(insn 886 885 887 43 (parallel [
            (set (reg:DI 1 dx [orig:503 _417 ] [503])
                (plus:DI (reg:DI 0 ax [orig:502 _416 ] [502])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":189 222 {*adddi_1}
     (nil))
(insn 887 886 888 43 (set (reg/f:DI 0 ax [1805])
        (symbol_ref:DI ("cldwtr_") [flags 0x202]  <var_decl 0x7fd1b9d92b40 cldwtr>)) "BNDLYR2.f":189 85 {*movdi_internal}
     (nil))
(insn 888 887 889 43 (set (reg:SF 21 xmm0 [orig:504 _418 ] [504])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:503 _417 ] [503])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1805])) [1 cldwtr.cwm S4 A32])) "BNDLYR2.f":189 131 {*movsf_internal}
     (nil))
(insn 889 888 3257 43 (set (reg:SF 21 xmm0 [orig:505 _419 ] [505])
        (plus:SF (reg:SF 21 xmm0 [orig:504 _418 ] [504])
            (reg:SF 23 xmm2 [orig:495 _409 ] [495]))) "BNDLYR2.f":189 838 {*fop_sf_comm}
     (nil))
(insn 3257 889 891 43 (set (reg:SF 23 xmm2 [orig:506 _420 ] [506])
        (reg:SF 21 xmm0 [orig:506 _420 ] [506])) "BNDLYR2.f":189 131 {*movsf_internal}
     (nil))
(insn 891 3257 892 43 (set (reg:SF 23 xmm2 [orig:506 _420 ] [506])
        (mult:SF (reg:SF 23 xmm2 [orig:506 _420 ] [506])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -72 [0xffffffffffffffb8])) [1 dp+0 S4 A32]))) "BNDLYR2.f":189 838 {*fop_sf_comm}
     (nil))
(insn 892 891 893 43 (set (reg:SF 21 xmm0 [1806])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC7") [flags 0x2]) [0  S4 A32])) "BNDLYR2.f":189 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0204081237316131591796875e-1 [0x0.d0fac6p-3])
        (nil)))
(insn 893 892 894 43 (set (reg:SF 21 xmm0 [orig:508 _422 ] [508])
        (mult:SF (reg:SF 21 xmm0 [1806])
            (reg:SF 23 xmm2 [orig:507 _421 ] [507]))) "BNDLYR2.f":189 838 {*fop_sf_comm}
     (nil))
(insn 894 893 895 43 (set (reg:SI 0 ax [1807])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 lbnd+0 S4 A32])) "BNDLYR2.f":189 86 {*movsi_internal}
     (nil))
(insn 895 894 896 43 (set (reg:DI 0 ax [orig:509 _423 ] [509])
        (sign_extend:DI (reg:SI 0 ax [1807]))) "BNDLYR2.f":189 149 {*extendsidi2_rex64}
     (nil))
(insn 896 895 897 43 (parallel [
            (set (reg:DI 1 dx [orig:510 _424 ] [510])
                (mult:DI (reg:DI 0 ax [orig:509 _423 ] [509])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":189 349 {*muldi3_1}
     (nil))
(insn 897 896 898 43 (set (reg:SI 0 ax [1808])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":189 86 {*movsi_internal}
     (nil))
(insn 898 897 899 43 (set (reg:DI 0 ax [orig:511 _425 ] [511])
        (sign_extend:DI (reg:SI 0 ax [1808]))) "BNDLYR2.f":189 149 {*extendsidi2_rex64}
     (nil))
(insn 899 898 900 43 (parallel [
            (set (reg:DI 0 ax [orig:512 _426 ] [512])
                (mult:DI (reg:DI 0 ax [orig:511 _425 ] [511])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":189 349 {*muldi3_1}
     (nil))
(insn 900 899 901 43 (parallel [
            (set (reg:DI 1 dx [orig:513 _427 ] [513])
                (plus:DI (reg:DI 1 dx [orig:510 _424 ] [510])
                    (reg:DI 0 ax [orig:512 _426 ] [512])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":189 222 {*adddi_1}
     (nil))
(insn 901 900 902 43 (set (reg:SI 0 ax [1809])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":189 86 {*movsi_internal}
     (nil))
(insn 902 901 903 43 (set (reg:DI 0 ax [orig:514 _428 ] [514])
        (sign_extend:DI (reg:SI 0 ax [1809]))) "BNDLYR2.f":189 149 {*extendsidi2_rex64}
     (nil))
(insn 903 902 904 43 (parallel [
            (set (reg:DI 0 ax [orig:515 _429 ] [515])
                (plus:DI (reg:DI 0 ax [orig:514 _428 ] [514])
                    (reg:DI 1 dx [orig:513 _427 ] [513])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":189 222 {*adddi_1}
     (nil))
(insn 904 903 905 43 (parallel [
            (set (reg:DI 1 dx [orig:516 _430 ] [516])
                (plus:DI (reg:DI 0 ax [orig:515 _429 ] [515])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":189 222 {*adddi_1}
     (nil))
(insn 905 904 906 43 (set (reg:SF 21 xmm0 [orig:517 _431 ] [517])
        (plus:SF (reg:SF 21 xmm0 [orig:508 _422 ] [508])
            (reg:SF 22 xmm1 [orig:486 _400 ] [486]))) "BNDLYR2.f":189 838 {*fop_sf_comm}
     (nil))
(insn 906 905 907 43 (set (reg/f:DI 0 ax [1810])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 24 [0x18])) [3 pwtbnd+0 S8 A64])) "BNDLYR2.f":189 85 {*movdi_internal}
     (nil))
(insn 907 906 908 43 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:516 _430 ] [516])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1810])) [1 *pwtbnd_1557(D) S4 A32])
        (reg:SF 21 xmm0 [orig:517 _431 ] [517])) "BNDLYR2.f":189 131 {*movsf_internal}
     (nil))
(insn 908 907 909 43 (set (reg:SI 0 ax [1811])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 l+0 S4 A32])) "BNDLYR2.f":191 86 {*movsi_internal}
     (nil))
(insn 909 908 910 43 (set (reg:DI 0 ax [orig:518 _432 ] [518])
        (sign_extend:DI (reg:SI 0 ax [1811]))) "BNDLYR2.f":191 149 {*extendsidi2_rex64}
     (nil))
(insn 910 909 911 43 (parallel [
            (set (reg:DI 1 dx [orig:519 _433 ] [519])
                (mult:DI (reg:DI 0 ax [orig:518 _432 ] [518])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":191 349 {*muldi3_1}
     (nil))
(insn 911 910 912 43 (set (reg:SI 0 ax [1812])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":191 86 {*movsi_internal}
     (nil))
(insn 912 911 913 43 (set (reg:DI 0 ax [orig:520 _434 ] [520])
        (sign_extend:DI (reg:SI 0 ax [1812]))) "BNDLYR2.f":191 149 {*extendsidi2_rex64}
     (nil))
(insn 913 912 914 43 (parallel [
            (set (reg:DI 0 ax [orig:521 _435 ] [521])
                (mult:DI (reg:DI 0 ax [orig:520 _434 ] [520])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":191 349 {*muldi3_1}
     (nil))
(insn 914 913 915 43 (parallel [
            (set (reg:DI 1 dx [orig:522 _436 ] [522])
                (plus:DI (reg:DI 1 dx [orig:519 _433 ] [519])
                    (reg:DI 0 ax [orig:521 _435 ] [521])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":191 222 {*adddi_1}
     (nil))
(insn 915 914 916 43 (set (reg:SI 0 ax [1813])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":191 86 {*movsi_internal}
     (nil))
(insn 916 915 917 43 (set (reg:DI 0 ax [orig:523 _437 ] [523])
        (sign_extend:DI (reg:SI 0 ax [1813]))) "BNDLYR2.f":191 149 {*extendsidi2_rex64}
     (nil))
(insn 917 916 918 43 (parallel [
            (set (reg:DI 0 ax [orig:524 _438 ] [524])
                (plus:DI (reg:DI 0 ax [orig:523 _437 ] [523])
                    (reg:DI 1 dx [orig:522 _436 ] [522])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":191 222 {*adddi_1}
     (nil))
(insn 918 917 919 43 (parallel [
            (set (reg:DI 1 dx [orig:525 _439 ] [525])
                (plus:DI (reg:DI 0 ax [orig:524 _438 ] [524])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":191 222 {*adddi_1}
     (nil))
(insn 919 918 920 43 (set (reg/f:DI 0 ax [1814])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7fd1b2d48360 vrbls>)) "BNDLYR2.f":191 85 {*movdi_internal}
     (nil))
(insn 920 919 921 43 (parallel [
            (set (reg:DI 1 dx [1815])
                (plus:DI (reg:DI 1 dx [orig:525 _439 ] [525])
                    (const_int 2340849 [0x23b7f1])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":191 222 {*adddi_1}
     (nil))
(insn 921 920 922 43 (set (reg:SF 21 xmm0 [orig:526 _440 ] [526])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [1815])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1814])) [1 vrbls.t S4 A32])) "BNDLYR2.f":191 131 {*movsf_internal}
     (nil))
(insn 922 921 923 43 (set (reg:SF 22 xmm1 [1817])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC8") [flags 0x2]) [0  S4 A32])) "BNDLYR2.f":191 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 2.73160003662109375e+2 [0x0.88947bp+9])
        (nil)))
(insn 923 922 924 43 (set (reg:SF 21 xmm0 [1816])
        (minus:SF (reg:SF 21 xmm0 [orig:526 _440 ] [526])
            (reg:SF 22 xmm1 [1817]))) "BNDLYR2.f":191 841 {*fop_sf_1}
     (nil))
(insn 924 923 925 43 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -76 [0xffffffffffffffb4])) [1 tmt0+0 S4 A32])
        (reg:SF 21 xmm0 [1816])) "BNDLYR2.f":191 131 {*movsf_internal}
     (nil))
(insn 925 924 926 43 (set (reg:SF 21 xmm0 [orig:1514 M.0_1467 ] [1514])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -76 [0xffffffffffffffb4])) [1 tmt0+0 S4 A32])) "BNDLYR2.f":192 131 {*movsf_internal}
     (nil))
(insn 926 925 927 43 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [orig:1514 M.0_1467 ] [1514])
            (mem/u/c:SF (symbol_ref/u:DI ("*.LC9") [flags 0x2]) [0  S4 A32]))) "BNDLYR2.f":192 53 {*cmpisf}
     (nil))
(insn 927 926 928 43 (set (reg:QI 0 ax [1818])
        (gt:QI (reg:CCFP 17 flags)
            (const_int 0 [0]))) "BNDLYR2.f":192 678 {*setcc_qi}
     (nil))
(insn 928 927 929 43 (set (reg:SI 1 dx [orig:527 _441 ] [527])
        (zero_extend:SI (reg:QI 0 ax [1818]))) "BNDLYR2.f":192 140 {*zero_extendqisi2}
     (nil))
(insn 929 928 930 43 (set (reg:CCFP 17 flags)
        (unspec:CCFP [
                (compare:CCFP (reg:SF 21 xmm0 [orig:1514 M.0_1467 ] [1514])
                    (reg:SF 21 xmm0 [orig:1514 M.0_1467 ] [1514]))
            ] UNSPEC_NOTRAP)) "BNDLYR2.f":192 54 {*cmpiusf}
     (nil))
(insn 930 929 931 43 (set (reg:QI 0 ax [1819])
        (unordered:QI (reg:CCFP 17 flags)
            (const_int 0 [0]))) "BNDLYR2.f":192 678 {*setcc_qi}
     (nil))
(insn 931 930 932 43 (set (reg:SI 0 ax [orig:528 _442 ] [528])
        (zero_extend:SI (reg:QI 0 ax [1819]))) "BNDLYR2.f":192 140 {*zero_extendqisi2}
     (nil))
(insn 932 931 933 43 (parallel [
            (set (reg:SI 0 ax [orig:529 _443 ] [529])
                (ior:SI (reg:SI 0 ax [orig:528 _442 ] [528])
                    (reg:SI 1 dx [orig:527 _441 ] [527])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":192 450 {*iorsi_1}
     (nil))
(insn 933 932 934 43 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:529 _443 ] [529])
            (const_int 0 [0]))) "BNDLYR2.f":192 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 934 933 935 43 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 937)
            (pc))) "BNDLYR2.f":192 682 {*jcc}
     (nil)
 -> 937)
;;  succ:       44 (FALLTHRU)
;;              45
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1514 1534

;; basic block 44, loop depth 0, maybe hot
;;  prev block 43, next block 45, flags: (RTL, MODIFIED)
;;  pred:       43 (FALLTHRU)
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1534
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 1514
(note 935 934 936 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 936 935 937 44 (set (reg:SF 21 xmm0 [orig:1514 M.0_1467 ] [1514])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC9") [flags 0x2]) [0  S4 A32])) "BNDLYR2.f":192 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF -1.5e+1 [-0x0.fp+4])
        (nil)))
;;  succ:       45 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1514 1534

;; basic block 45, loop depth 0, maybe hot
;;  prev block 44, next block 46, flags: (RTL, MODIFIED)
;;  pred:       43
;;              44 (FALLTHRU)
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1514 1534
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1514
;; lr  def 	 17 [flags] 1820 1821 1822
(code_label 937 936 938 45 32 (nil) [1 uses])
(note 938 937 939 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 939 938 940 45 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -80 [0xffffffffffffffb0])) [1 tmt15+0 S4 A32])
        (reg:SF 21 xmm0 [orig:1514 M.0_1467 ] [1514])) "BNDLYR2.f":192 131 {*movsf_internal}
     (nil))
(insn 940 939 941 45 (set (reg:SF 21 xmm0 [1820])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC10") [flags 0x2]) [0  S4 A32])) "BNDLYR2.f":193 131 {*movsf_internal}
     (nil))
(insn 941 940 942 45 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 ai+0 S4 A32])
        (reg:SF 21 xmm0 [1820])) "BNDLYR2.f":193 131 {*movsf_internal}
     (nil))
(insn 942 941 943 45 (set (reg:SF 21 xmm0 [1821])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC4") [flags 0x2]) [0  S4 A32])) "BNDLYR2.f":194 131 {*movsf_internal}
     (nil))
(insn 943 942 944 45 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 bi+0 S4 A32])
        (reg:SF 21 xmm0 [1821])) "BNDLYR2.f":194 131 {*movsf_internal}
     (nil))
(insn 944 943 945 45 (set (reg:SF 21 xmm0 [1822])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC11") [flags 0x2]) [0  S4 A32])) "BNDLYR2.f":195 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF -2.0e+1 [-0x0.ap+5])
        (nil)))
(insn 945 944 946 45 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [1822])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -76 [0xffffffffffffffb4])) [1 tmt0+0 S4 A32]))) "BNDLYR2.f":195 53 {*cmpisf}
     (nil))
(jump_insn 946 945 950 45 (set (pc)
        (if_then_else (unle (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 955)
            (pc))) "BNDLYR2.f":195 682 {*jcc}
     (nil)
 -> 955)
;;  succ:       46 (FALLTHRU)
;;              47
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1534

;; basic block 46, loop depth 0, maybe hot
;;  prev block 45, next block 47, flags: (RTL, MODIFIED)
;;  pred:       45 (FALLTHRU)
;; bb 46 artificial_defs: { }
;; bb 46 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1534
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 1823 1824
(note 950 946 951 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 951 950 952 46 (set (reg:SF 21 xmm0 [1823])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC12") [flags 0x2]) [0  S4 A32])) "BNDLYR2.f":196 131 {*movsf_internal}
     (nil))
(insn 952 951 953 46 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 ai+0 S4 A32])
        (reg:SF 21 xmm0 [1823])) "BNDLYR2.f":196 131 {*movsf_internal}
     (nil))
(insn 953 952 954 46 (set (reg:SF 21 xmm0 [1824])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC13") [flags 0x2]) [0  S4 A32])) "BNDLYR2.f":197 131 {*movsf_internal}
     (nil))
(insn 954 953 955 46 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 bi+0 S4 A32])
        (reg:SF 21 xmm0 [1824])) "BNDLYR2.f":197 131 {*movsf_internal}
     (nil))
;;  succ:       47 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1534

;; basic block 47, loop depth 0, maybe hot
;;  prev block 46, next block 48, flags: (RTL, MODIFIED)
;;  pred:       46 (FALLTHRU)
;;              45
;; bb 47 artificial_defs: { }
;; bb 47 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1534
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 530 531 532 533 534 535 536 537 538 539 540 541 542 543 544 545 546 547 548 549 550 551 552 553 554 555 556 557 558 1515 1825 1826 1827 1828 1829 1830 1831 1832 1833 1834 1835 1836 1837 1838 1839 1840 1841 1842
(code_label 955 954 956 47 33 (nil) [1 uses])
(note 956 955 957 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 957 956 958 47 (set (reg:SF 21 xmm0 [1825])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC14") [flags 0x2]) [0  S4 A32])) "BNDLYR2.f":200 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 3.799051513671875e+2 [0x0.bdf3dcp+9])
        (nil)))
(insn 958 957 3260 47 (set (reg:SF 21 xmm0 [1825])
        (div:SF (reg:SF 21 xmm0 [1825])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -68 [0xffffffffffffffbc])) [1 pm+0 S4 A32]))) "BNDLYR2.f":200 841 {*fop_sf_1}
     (nil))
(insn 3260 958 3271 47 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -196 [0xffffffffffffff3c])) [13 %sfp+-180 S4 A32])
        (reg:SF 21 xmm0 [1825])) "BNDLYR2.f":200 131 {*movsf_internal}
     (nil))
(note 3271 3260 3267 47 NOTE_INSN_DELETED)
(note 3267 3271 959 47 NOTE_INSN_DELETED)
(insn 959 3267 960 47 (set (reg:SI 0 ax [1826])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 l+0 S4 A32])) "BNDLYR2.f":200 86 {*movsi_internal}
     (nil))
(insn 960 959 961 47 (set (reg:DI 0 ax [orig:531 _445 ] [531])
        (sign_extend:DI (reg:SI 0 ax [1826]))) "BNDLYR2.f":200 149 {*extendsidi2_rex64}
     (nil))
(insn 961 960 962 47 (parallel [
            (set (reg:DI 1 dx [orig:532 _446 ] [532])
                (mult:DI (reg:DI 0 ax [orig:531 _445 ] [531])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":200 349 {*muldi3_1}
     (nil))
(insn 962 961 963 47 (set (reg:SI 0 ax [1827])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":200 86 {*movsi_internal}
     (nil))
(insn 963 962 964 47 (set (reg:DI 0 ax [orig:533 _447 ] [533])
        (sign_extend:DI (reg:SI 0 ax [1827]))) "BNDLYR2.f":200 149 {*extendsidi2_rex64}
     (nil))
(insn 964 963 965 47 (parallel [
            (set (reg:DI 0 ax [orig:534 _448 ] [534])
                (mult:DI (reg:DI 0 ax [orig:533 _447 ] [533])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":200 349 {*muldi3_1}
     (nil))
(insn 965 964 966 47 (parallel [
            (set (reg:DI 1 dx [orig:535 _449 ] [535])
                (plus:DI (reg:DI 1 dx [orig:532 _446 ] [532])
                    (reg:DI 0 ax [orig:534 _448 ] [534])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":200 222 {*adddi_1}
     (nil))
(insn 966 965 967 47 (set (reg:SI 0 ax [1828])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":200 86 {*movsi_internal}
     (nil))
(insn 967 966 968 47 (set (reg:DI 0 ax [orig:536 _450 ] [536])
        (sign_extend:DI (reg:SI 0 ax [1828]))) "BNDLYR2.f":200 149 {*extendsidi2_rex64}
     (nil))
(insn 968 967 969 47 (parallel [
            (set (reg:DI 0 ax [orig:537 _451 ] [537])
                (plus:DI (reg:DI 0 ax [orig:536 _450 ] [536])
                    (reg:DI 1 dx [orig:535 _449 ] [535])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":200 222 {*adddi_1}
     (nil))
(insn 969 968 970 47 (parallel [
            (set (reg:DI 1 dx [orig:538 _452 ] [538])
                (plus:DI (reg:DI 0 ax [orig:537 _451 ] [537])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":200 222 {*adddi_1}
     (nil))
(insn 970 969 971 47 (set (reg/f:DI 0 ax [1829])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7fd1b2d48360 vrbls>)) "BNDLYR2.f":200 85 {*movdi_internal}
     (nil))
(insn 971 970 972 47 (parallel [
            (set (reg:DI 1 dx [1830])
                (plus:DI (reg:DI 1 dx [orig:538 _452 ] [538])
                    (const_int 2340849 [0x23b7f1])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":200 222 {*adddi_1}
     (nil))
(insn 972 971 973 47 (set (reg:SF 21 xmm0 [orig:539 _453 ] [539])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [1830])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1829])) [1 vrbls.t S4 A32])) "BNDLYR2.f":200 131 {*movsf_internal}
     (nil))
(insn 973 972 974 47 (set (reg:SF 22 xmm1 [1831])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC8") [flags 0x2]) [0  S4 A32])) "BNDLYR2.f":200 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 2.73160003662109375e+2 [0x0.88947bp+9])
        (nil)))
(insn 974 973 975 47 (set (reg:SF 21 xmm0 [orig:540 _454 ] [540])
        (minus:SF (reg:SF 21 xmm0 [orig:539 _453 ] [539])
            (reg:SF 22 xmm1 [1831]))) "BNDLYR2.f":200 841 {*fop_sf_1}
     (nil))
(insn 975 974 976 47 (set (reg:SF 22 xmm1 [orig:541 _455 ] [541])
        (reg:SF 21 xmm0 [orig:540 _454 ] [540])) "BNDLYR2.f":200 131 {*movsf_internal}
     (nil))
(insn 976 975 977 47 (set (reg:SF 21 xmm0 [1832])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC15") [flags 0x2]) [0  S4 A32])) "BNDLYR2.f":200 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.72693881988525390625e+1 [0x0.8a27b5p+5])
        (nil)))
(insn 977 976 978 47 (set (reg:SF 21 xmm0 [orig:542 _456 ] [542])
        (mult:SF (reg:SF 21 xmm0 [1832])
            (reg:SF 22 xmm1 [orig:541 _455 ] [541]))) "BNDLYR2.f":200 838 {*fop_sf_comm}
     (nil))
(insn 978 977 979 47 (set (reg:SI 0 ax [1833])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 l+0 S4 A32])) "BNDLYR2.f":200 86 {*movsi_internal}
     (nil))
(insn 979 978 980 47 (set (reg:DI 0 ax [orig:543 _457 ] [543])
        (sign_extend:DI (reg:SI 0 ax [1833]))) "BNDLYR2.f":200 149 {*extendsidi2_rex64}
     (nil))
(insn 980 979 981 47 (parallel [
            (set (reg:DI 1 dx [orig:544 _458 ] [544])
                (mult:DI (reg:DI 0 ax [orig:543 _457 ] [543])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":200 349 {*muldi3_1}
     (nil))
(insn 981 980 982 47 (set (reg:SI 0 ax [1834])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":200 86 {*movsi_internal}
     (nil))
(insn 982 981 983 47 (set (reg:DI 0 ax [orig:545 _459 ] [545])
        (sign_extend:DI (reg:SI 0 ax [1834]))) "BNDLYR2.f":200 149 {*extendsidi2_rex64}
     (nil))
(insn 983 982 984 47 (parallel [
            (set (reg:DI 0 ax [orig:546 _460 ] [546])
                (mult:DI (reg:DI 0 ax [orig:545 _459 ] [545])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":200 349 {*muldi3_1}
     (nil))
(insn 984 983 985 47 (parallel [
            (set (reg:DI 1 dx [orig:547 _461 ] [547])
                (plus:DI (reg:DI 1 dx [orig:544 _458 ] [544])
                    (reg:DI 0 ax [orig:546 _460 ] [546])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":200 222 {*adddi_1}
     (nil))
(insn 985 984 986 47 (set (reg:SI 0 ax [1835])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":200 86 {*movsi_internal}
     (nil))
(insn 986 985 987 47 (set (reg:DI 0 ax [orig:548 _462 ] [548])
        (sign_extend:DI (reg:SI 0 ax [1835]))) "BNDLYR2.f":200 149 {*extendsidi2_rex64}
     (nil))
(insn 987 986 988 47 (parallel [
            (set (reg:DI 0 ax [orig:549 _463 ] [549])
                (plus:DI (reg:DI 0 ax [orig:548 _462 ] [548])
                    (reg:DI 1 dx [orig:547 _461 ] [547])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":200 222 {*adddi_1}
     (nil))
(insn 988 987 989 47 (parallel [
            (set (reg:DI 1 dx [orig:550 _464 ] [550])
                (plus:DI (reg:DI 0 ax [orig:549 _463 ] [549])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":200 222 {*adddi_1}
     (nil))
(insn 989 988 990 47 (set (reg/f:DI 0 ax [1836])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7fd1b2d48360 vrbls>)) "BNDLYR2.f":200 85 {*movdi_internal}
     (nil))
(insn 990 989 991 47 (parallel [
            (set (reg:DI 1 dx [1837])
                (plus:DI (reg:DI 1 dx [orig:550 _464 ] [550])
                    (const_int 2340849 [0x23b7f1])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":200 222 {*adddi_1}
     (nil))
(insn 991 990 992 47 (set (reg:SF 22 xmm1 [orig:551 _465 ] [551])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [1837])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1836])) [1 vrbls.t S4 A32])) "BNDLYR2.f":200 131 {*movsf_internal}
     (nil))
(insn 992 991 993 47 (set (reg:SF 23 xmm2 [1838])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC16") [flags 0x2]) [0  S4 A32])) "BNDLYR2.f":200 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 3.58600006103515625e+1 [0x0.8f70a4p+6])
        (nil)))
(insn 993 992 995 47 (set (reg:SF 22 xmm1 [orig:552 _466 ] [552])
        (minus:SF (reg:SF 22 xmm1 [orig:551 _465 ] [551])
            (reg:SF 23 xmm2 [1838]))) "BNDLYR2.f":200 841 {*fop_sf_1}
     (nil))
(insn 995 993 997 47 (set (reg:SF 21 xmm0 [orig:554 _468 ] [554])
        (div:SF (reg:SF 21 xmm0 [orig:542 _456 ] [542])
            (reg:SF 22 xmm1 [orig:553 _467 ] [553]))) "BNDLYR2.f":200 841 {*fop_sf_1}
     (nil))
(call_insn/u 997 995 3261 47 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("expf") [flags 0x41]  <function_decl 0x7fd1b2b97300 __builtin_expf>) [0 __builtin_expf S1 A8])
            (const_int 0 [0]))) "BNDLYR2.f":200 700 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (nil)))
(note 3261 997 3270 47 NOTE_INSN_DELETED)
(note 3270 3261 999 47 NOTE_INSN_DELETED)
(insn 999 3270 1000 47 (set (reg:SF 21 xmm0 [1839])
        (mult:SF (reg:SF 21 xmm0 [orig:555 _469 ] [555])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -196 [0xffffffffffffff3c])) [13 %sfp+-180 S4 A32]))) "BNDLYR2.f":200 838 {*fop_sf_comm}
     (nil))
(insn 1000 999 1001 47 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -84 [0xffffffffffffffac])) [1 qw+0 S4 A32])
        (reg:SF 21 xmm0 [1839])) "BNDLYR2.f":200 131 {*movsf_internal}
     (nil))
(insn 1001 1000 1002 47 (set (reg:SF 21 xmm0 [orig:1515 M.1_1468 ] [1515])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -76 [0xffffffffffffffb4])) [1 tmt0+0 S4 A32])) "BNDLYR2.f":201 131 {*movsf_internal}
     (nil))
(insn 1002 1001 1003 47 (set (reg:SF 22 xmm1 [1841])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0  S4 A32])) "BNDLYR2.f":201 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 1003 1002 1004 47 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [orig:1515 M.1_1468 ] [1515])
            (reg:SF 22 xmm1 [1841]))) "BNDLYR2.f":201 53 {*cmpisf}
     (nil))
(insn 1004 1003 1005 47 (set (reg:QI 0 ax [1840])
        (gt:QI (reg:CCFP 17 flags)
            (const_int 0 [0]))) "BNDLYR2.f":201 678 {*setcc_qi}
     (nil))
(insn 1005 1004 1006 47 (set (reg:SI 1 dx [orig:556 _470 ] [556])
        (zero_extend:SI (reg:QI 0 ax [1840]))) "BNDLYR2.f":201 140 {*zero_extendqisi2}
     (nil))
(insn 1006 1005 1007 47 (set (reg:CCFP 17 flags)
        (unspec:CCFP [
                (compare:CCFP (reg:SF 21 xmm0 [orig:1515 M.1_1468 ] [1515])
                    (reg:SF 21 xmm0 [orig:1515 M.1_1468 ] [1515]))
            ] UNSPEC_NOTRAP)) "BNDLYR2.f":201 54 {*cmpiusf}
     (nil))
(insn 1007 1006 1008 47 (set (reg:QI 0 ax [1842])
        (unordered:QI (reg:CCFP 17 flags)
            (const_int 0 [0]))) "BNDLYR2.f":201 678 {*setcc_qi}
     (nil))
(insn 1008 1007 1009 47 (set (reg:SI 0 ax [orig:557 _471 ] [557])
        (zero_extend:SI (reg:QI 0 ax [1842]))) "BNDLYR2.f":201 140 {*zero_extendqisi2}
     (nil))
(insn 1009 1008 1010 47 (parallel [
            (set (reg:SI 0 ax [orig:558 _472 ] [558])
                (ior:SI (reg:SI 0 ax [orig:557 _471 ] [557])
                    (reg:SI 1 dx [orig:556 _470 ] [556])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":201 450 {*iorsi_1}
     (nil))
(insn 1010 1009 1011 47 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:558 _472 ] [558])
            (const_int 0 [0]))) "BNDLYR2.f":201 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1011 1010 1012 47 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1014)
            (pc))) "BNDLYR2.f":201 682 {*jcc}
     (nil)
 -> 1014)
;;  succ:       48 (FALLTHRU)
;;              49
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1515 1534

;; basic block 48, loop depth 0, maybe hot
;;  prev block 47, next block 49, flags: (RTL, MODIFIED)
;;  pred:       47 (FALLTHRU)
;; bb 48 artificial_defs: { }
;; bb 48 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1534
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 1515
(note 1012 1011 1013 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 1013 1012 1014 48 (set (reg:SF 21 xmm0 [orig:1515 M.1_1468 ] [1515])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0  S4 A32])) "BNDLYR2.f":201 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
;;  succ:       49 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1515 1534

;; basic block 49, loop depth 0, maybe hot
;;  prev block 48, next block 50, flags: (RTL, MODIFIED)
;;  pred:       47
;;              48 (FALLTHRU)
;; bb 49 artificial_defs: { }
;; bb 49 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1515 1534
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1515
;; lr  def 	 17 [flags] 559 560 561 562 563 564 565 566 567 1843 1844 1845 1846 1847 1848 1849 1850 1851 1852
(code_label 1014 1013 1015 49 35 (nil) [1 uses])
(note 1015 1014 1016 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 1016 1015 1017 49 (set (reg:SF 21 xmm0 [orig:559 _473 ] [559])
        (mult:SF (reg:SF 21 xmm0 [orig:1515 M.1_1468 ] [1515])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -20 [0xffffffffffffffec])) [1 ai+0 S4 A32]))) "BNDLYR2.f":201 838 {*fop_sf_comm}
     (nil))
(insn 1017 1016 1018 49 (set (reg:SF 21 xmm0 [orig:560 _474 ] [560])
        (plus:SF (reg:SF 21 xmm0 [orig:559 _473 ] [559])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -24 [0xffffffffffffffe8])) [1 bi+0 S4 A32]))) "BNDLYR2.f":201 838 {*fop_sf_comm}
     (nil))
(insn 1018 1017 1019 49 (set (reg:SF 22 xmm1 [orig:561 _475 ] [561])
        (reg:SF 21 xmm0 [orig:560 _474 ] [560])) "BNDLYR2.f":201 131 {*movsf_internal}
     (nil))
(insn 1019 1018 1020 49 (set (reg:SF 21 xmm0 [1844])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -84 [0xffffffffffffffac])) [1 qw+0 S4 A32])) "BNDLYR2.f":201 131 {*movsf_internal}
     (nil))
(insn 1020 1019 1021 49 (set (reg:SF 21 xmm0 [1843])
        (mult:SF (reg:SF 21 xmm0 [1844])
            (reg:SF 22 xmm1 [orig:561 _475 ] [561]))) "BNDLYR2.f":201 838 {*fop_sf_comm}
     (nil))
(insn 1021 1020 1022 49 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [1 qi+0 S4 A32])
        (reg:SF 21 xmm0 [1843])) "BNDLYR2.f":201 131 {*movsf_internal}
     (nil))
(insn 1022 1021 1023 49 (set (reg:SF 22 xmm1 [1845])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -80 [0xffffffffffffffb0])) [1 tmt15+0 S4 A32])) "BNDLYR2.f":202 131 {*movsf_internal}
     (nil))
(insn 1023 1022 1024 49 (set (reg:SF 21 xmm0 [1846])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC17") [flags 0x2]) [0  S4 A32])) "BNDLYR2.f":202 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 3.19999991916120052337646484375e-4 [0x0.a7c5acp-11])
        (nil)))
(insn 1024 1023 1025 49 (set (reg:SF 21 xmm0 [orig:562 _476 ] [562])
        (mult:SF (reg:SF 21 xmm0 [1846])
            (reg:SF 22 xmm1 [1845]))) "BNDLYR2.f":202 838 {*fop_sf_comm}
     (nil))
(insn 1025 1024 1026 49 (set (reg:SF 23 xmm2 [1847])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -80 [0xffffffffffffffb0])) [1 tmt15+0 S4 A32])) "BNDLYR2.f":202 131 {*movsf_internal}
     (nil))
(insn 1026 1025 1027 49 (set (reg:SF 22 xmm1 [1848])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC18") [flags 0x2]) [0  S4 A32])) "BNDLYR2.f":202 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.5e+1 [0x0.fp+4])
        (nil)))
(insn 1027 1026 1029 49 (set (reg:SF 22 xmm1 [orig:563 _477 ] [563])
        (plus:SF (reg:SF 22 xmm1 [1848])
            (reg:SF 23 xmm2 [1847]))) "BNDLYR2.f":202 838 {*fop_sf_comm}
     (nil))
(insn 1029 1027 1030 49 (set (reg:SF 22 xmm1 [orig:565 _479 ] [565])
        (mult:SF (reg:SF 22 xmm1 [orig:564 _478 ] [564])
            (reg:SF 21 xmm0 [orig:562 _476 ] [562]))) "BNDLYR2.f":202 838 {*fop_sf_comm}
     (nil))
(insn 1030 1029 1031 49 (set (reg:SF 21 xmm0 [1849])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC4") [flags 0x2]) [0  S4 A32])) "BNDLYR2.f":202 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 1031 1030 1032 49 (set (reg:SF 21 xmm0 [orig:566 _480 ] [566])
        (minus:SF (reg:SF 21 xmm0 [1849])
            (reg:SF 22 xmm1 [orig:565 _479 ] [565]))) "BNDLYR2.f":202 841 {*fop_sf_1}
     (nil))
(insn 1032 1031 1033 49 (set (reg:SF 22 xmm1 [orig:567 _481 ] [567])
        (reg:SF 21 xmm0 [orig:566 _480 ] [566])) "BNDLYR2.f":202 131 {*movsf_internal}
     (nil))
(insn 1033 1032 1034 49 (set (reg:SF 21 xmm0 [1851])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -84 [0xffffffffffffffac])) [1 qw+0 S4 A32])) "BNDLYR2.f":202 131 {*movsf_internal}
     (nil))
(insn 1034 1033 1035 49 (set (reg:SF 21 xmm0 [1850])
        (mult:SF (reg:SF 21 xmm0 [1851])
            (reg:SF 22 xmm1 [orig:567 _481 ] [567]))) "BNDLYR2.f":202 838 {*fop_sf_comm}
     (nil))
(insn 1035 1034 1036 49 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -92 [0xffffffffffffffa4])) [1 qint+0 S4 A32])
        (reg:SF 21 xmm0 [1850])) "BNDLYR2.f":202 131 {*movsf_internal}
     (nil))
(insn 1036 1035 1037 49 (set (reg:SF 21 xmm0 [1852])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC9") [flags 0x2]) [0  S4 A32])) "BNDLYR2.f":203 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF -1.5e+1 [-0x0.fp+4])
        (nil)))
(insn 1037 1036 1038 49 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [1852])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -76 [0xffffffffffffffb4])) [1 tmt0+0 S4 A32]))) "BNDLYR2.f":203 53 {*cmpisf}
     (nil))
(jump_insn 1038 1037 1042 49 (set (pc)
        (if_then_else (unle (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 3117)
            (pc))) "BNDLYR2.f":203 682 {*jcc}
     (nil)
 -> 3117)
;;  succ:       50 (FALLTHRU)
;;              51
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1534

;; basic block 50, loop depth 0, maybe hot
;;  prev block 49, next block 51, flags: (RTL, MODIFIED)
;;  pred:       49 (FALLTHRU)
;; bb 50 artificial_defs: { }
;; bb 50 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1534
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 1853
(note 1042 1038 1043 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 1043 1042 1044 50 (set (reg:SF 21 xmm0 [1853])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [1 qi+0 S4 A32])) "BNDLYR2.f":204 131 {*movsf_internal}
     (nil))
(insn 1044 1043 3118 50 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [1 qsat+0 S4 A32])
        (reg:SF 21 xmm0 [1853])) "BNDLYR2.f":204 131 {*movsf_internal}
     (nil))
(jump_insn 3118 1044 3119 50 (set (pc)
        (label_ref 1087)) 683 {jump}
     (nil)
 -> 1087)
;;  succ:       56 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1534

(barrier 3119 3118 3117)
;; basic block 51, loop depth 0, maybe hot
;;  prev block 50, next block 52, flags: (RTL, MODIFIED)
;;  pred:       49
;; bb 51 artificial_defs: { }
;; bb 51 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1534
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1854 1855
(code_label 3117 3119 1048 51 137 (nil) [1 uses])
(note 1048 3117 1049 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 1049 1048 1050 51 (set (reg:SF 21 xmm0 [1854])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -76 [0xffffffffffffffb4])) [1 tmt0+0 S4 A32])) "BNDLYR2.f":205 131 {*movsf_internal}
     (nil))
(insn 1050 1049 1051 51 (set (reg:SF 22 xmm1 [1855])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0  S4 A32])) "BNDLYR2.f":205 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 1051 1050 1052 51 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [1854])
            (reg:SF 22 xmm1 [1855]))) "BNDLYR2.f":205 53 {*cmpisf}
     (nil))
(jump_insn 1052 1051 1056 51 (set (pc)
        (if_then_else (unlt (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 3120)
            (pc))) "BNDLYR2.f":205 682 {*jcc}
     (nil)
 -> 3120)
;;  succ:       52 (FALLTHRU)
;;              53
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1534

;; basic block 52, loop depth 0, maybe hot
;;  prev block 51, next block 53, flags: (RTL, MODIFIED)
;;  pred:       51 (FALLTHRU)
;; bb 52 artificial_defs: { }
;; bb 52 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1534
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 1856
(note 1056 1052 1057 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 1057 1056 1058 52 (set (reg:SF 21 xmm0 [1856])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -92 [0xffffffffffffffa4])) [1 qint+0 S4 A32])) "BNDLYR2.f":206 131 {*movsf_internal}
     (nil))
(insn 1058 1057 3121 52 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [1 qsat+0 S4 A32])
        (reg:SF 21 xmm0 [1856])) "BNDLYR2.f":206 131 {*movsf_internal}
     (nil))
(jump_insn 3121 1058 3122 52 (set (pc)
        (label_ref 1087)) 683 {jump}
     (nil)
 -> 1087)
;;  succ:       56 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1534

(barrier 3122 3121 3120)
;; basic block 53, loop depth 0, maybe hot
;;  prev block 52, next block 54, flags: (RTL, MODIFIED)
;;  pred:       51
;; bb 53 artificial_defs: { }
;; bb 53 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1534
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 568 569 570 571 572 573 1857 1858 1859 1860
(code_label 3120 3122 1062 53 138 (nil) [1 uses])
(note 1062 3120 1063 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(insn 1063 1062 1064 53 (set (reg:SI 0 ax [1857])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":208 86 {*movsi_internal}
     (nil))
(insn 1064 1063 1065 53 (set (reg:DI 0 ax [orig:568 _482 ] [568])
        (sign_extend:DI (reg:SI 0 ax [1857]))) "BNDLYR2.f":208 149 {*extendsidi2_rex64}
     (nil))
(insn 1065 1064 1066 53 (parallel [
            (set (reg:DI 1 dx [orig:569 _483 ] [569])
                (mult:DI (reg:DI 0 ax [orig:568 _482 ] [568])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":208 349 {*muldi3_1}
     (nil))
(insn 1066 1065 1067 53 (set (reg:SI 0 ax [1858])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":208 86 {*movsi_internal}
     (nil))
(insn 1067 1066 1068 53 (set (reg:DI 0 ax [orig:570 _484 ] [570])
        (sign_extend:DI (reg:SI 0 ax [1858]))) "BNDLYR2.f":208 149 {*extendsidi2_rex64}
     (nil))
(insn 1068 1067 1069 53 (parallel [
            (set (reg:DI 0 ax [orig:571 _485 ] [571])
                (plus:DI (reg:DI 0 ax [orig:570 _484 ] [570])
                    (reg:DI 1 dx [orig:569 _483 ] [569])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":208 222 {*adddi_1}
     (nil))
(insn 1069 1068 1070 53 (parallel [
            (set (reg:DI 1 dx [orig:572 _486 ] [572])
                (plus:DI (reg:DI 0 ax [orig:571 _485 ] [571])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":208 222 {*adddi_1}
     (nil))
(insn 1070 1069 1071 53 (set (reg/f:DI 0 ax [1859])
        (symbol_ref:DI ("iwl.4192") [flags 0x202]  <var_decl 0x7fd1b2d48cf0 iwl>)) "BNDLYR2.f":208 85 {*movdi_internal}
     (nil))
(insn 1071 1070 1072 53 (set (reg:SF 21 xmm0 [orig:573 _487 ] [573])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:572 _486 ] [572])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1859])) [1 iwl S4 A32])) "BNDLYR2.f":208 131 {*movsf_internal}
     (nil))
(insn 1072 1071 1073 53 (set (reg:SF 22 xmm1 [1860])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0  S4 A32])) "BNDLYR2.f":208 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 1073 1072 1074 53 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [orig:573 _487 ] [573])
            (reg:SF 22 xmm1 [1860]))) "BNDLYR2.f":208 53 {*cmpisf}
     (nil))
(jump_insn 1074 1073 1078 53 (set (pc)
        (if_then_else (unle (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 3123)
            (pc))) "BNDLYR2.f":208 682 {*jcc}
     (nil)
 -> 3123)
;;  succ:       54 (FALLTHRU)
;;              55
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1534

;; basic block 54, loop depth 0, maybe hot
;;  prev block 53, next block 55, flags: (RTL, MODIFIED)
;;  pred:       53 (FALLTHRU)
;; bb 54 artificial_defs: { }
;; bb 54 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1534
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 1861
(note 1078 1074 1079 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(insn 1079 1078 1080 54 (set (reg:SF 21 xmm0 [1861])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [1 qi+0 S4 A32])) "BNDLYR2.f":209 131 {*movsf_internal}
     (nil))
(insn 1080 1079 3124 54 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [1 qsat+0 S4 A32])
        (reg:SF 21 xmm0 [1861])) "BNDLYR2.f":209 131 {*movsf_internal}
     (nil))
(jump_insn 3124 1080 3125 54 (set (pc)
        (label_ref 1087)) 683 {jump}
     (nil)
 -> 1087)
;;  succ:       56 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1534

(barrier 3125 3124 3123)
;; basic block 55, loop depth 0, maybe hot
;;  prev block 54, next block 56, flags: (RTL, MODIFIED)
;;  pred:       53
;; bb 55 artificial_defs: { }
;; bb 55 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1534
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 1862
(code_label 3123 3125 1084 55 139 (nil) [1 uses])
(note 1084 3123 1085 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(insn 1085 1084 1086 55 (set (reg:SF 21 xmm0 [1862])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -92 [0xffffffffffffffa4])) [1 qint+0 S4 A32])) "BNDLYR2.f":211 131 {*movsf_internal}
     (nil))
(insn 1086 1085 1087 55 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [1 qsat+0 S4 A32])
        (reg:SF 21 xmm0 [1862])) "BNDLYR2.f":211 131 {*movsf_internal}
     (nil))
;;  succ:       56 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1534

;; basic block 56, loop depth 0, maybe hot
;;  prev block 55, next block 57, flags: (RTL, MODIFIED)
;;  pred:       55 (FALLTHRU)
;;              50 [always] 
;;              52 [always] 
;;              54 [always] 
;; bb 56 artificial_defs: { }
;; bb 56 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1534
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 574 575 576 577 578 579 580 581 582 583 584 585 586 587 588 589 590 591 592 1863 1864 1865 1866 1867 1868 1869 1870 1871 1872
(code_label 1087 1086 1088 56 38 (nil) [3 uses])
(note 1088 1087 1089 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(insn 1089 1088 1090 56 (set (reg:SF 21 xmm0 [1863])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -84 [0xffffffffffffffac])) [1 qw+0 S4 A32])) "BNDLYR2.f":216 131 {*movsf_internal}
     (nil))
(insn 1090 1089 1091 56 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [1 qsat+0 S4 A32])
        (reg:SF 21 xmm0 [1863])) "BNDLYR2.f":216 131 {*movsf_internal}
     (nil))
(insn 1091 1090 1092 56 (set (reg:SI 0 ax [1864])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 lbnd+0 S4 A32])) "BNDLYR2.f":218 86 {*movsi_internal}
     (nil))
(insn 1092 1091 1093 56 (set (reg:DI 0 ax [orig:574 _488 ] [574])
        (sign_extend:DI (reg:SI 0 ax [1864]))) "BNDLYR2.f":218 149 {*extendsidi2_rex64}
     (nil))
(insn 1093 1092 1094 56 (parallel [
            (set (reg:DI 1 dx [orig:575 _489 ] [575])
                (mult:DI (reg:DI 0 ax [orig:574 _488 ] [574])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":218 349 {*muldi3_1}
     (nil))
(insn 1094 1093 1095 56 (set (reg:SI 0 ax [1865])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":218 86 {*movsi_internal}
     (nil))
(insn 1095 1094 1096 56 (set (reg:DI 0 ax [orig:576 _490 ] [576])
        (sign_extend:DI (reg:SI 0 ax [1865]))) "BNDLYR2.f":218 149 {*extendsidi2_rex64}
     (nil))
(insn 1096 1095 1097 56 (parallel [
            (set (reg:DI 0 ax [orig:577 _491 ] [577])
                (mult:DI (reg:DI 0 ax [orig:576 _490 ] [576])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":218 349 {*muldi3_1}
     (nil))
(insn 1097 1096 1098 56 (parallel [
            (set (reg:DI 1 dx [orig:578 _492 ] [578])
                (plus:DI (reg:DI 1 dx [orig:575 _489 ] [575])
                    (reg:DI 0 ax [orig:577 _491 ] [577])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":218 222 {*adddi_1}
     (nil))
(insn 1098 1097 1099 56 (set (reg:SI 0 ax [1866])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":218 86 {*movsi_internal}
     (nil))
(insn 1099 1098 1100 56 (set (reg:DI 0 ax [orig:579 _493 ] [579])
        (sign_extend:DI (reg:SI 0 ax [1866]))) "BNDLYR2.f":218 149 {*extendsidi2_rex64}
     (nil))
(insn 1100 1099 1101 56 (parallel [
            (set (reg:DI 0 ax [orig:580 _494 ] [580])
                (plus:DI (reg:DI 0 ax [orig:579 _493 ] [579])
                    (reg:DI 1 dx [orig:578 _492 ] [578])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":218 222 {*adddi_1}
     (nil))
(insn 1101 1100 1102 56 (parallel [
            (set (reg:DI 1 dx [orig:581 _495 ] [581])
                (plus:DI (reg:DI 0 ax [orig:580 _494 ] [580])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":218 222 {*adddi_1}
     (nil))
(insn 1102 1101 1103 56 (set (reg/f:DI 0 ax [1867])
        (symbol_ref:DI ("qsbnd.4217") [flags 0x202]  <var_decl 0x7fd1b2d4d870 qsbnd>)) "BNDLYR2.f":218 85 {*movdi_internal}
     (nil))
(insn 1103 1102 1104 56 (set (reg:SF 22 xmm1 [orig:582 _496 ] [582])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:581 _495 ] [581])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1867])) [1 qsbnd S4 A32])) "BNDLYR2.f":218 131 {*movsf_internal}
     (nil))
(insn 1104 1103 1105 56 (set (reg:SF 21 xmm0 [1868])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [1 qsat+0 S4 A32])) "BNDLYR2.f":218 131 {*movsf_internal}
     (nil))
(insn 1105 1104 1106 56 (set (reg:SF 21 xmm0 [orig:583 _497 ] [583])
        (mult:SF (reg:SF 21 xmm0 [1868])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -72 [0xffffffffffffffb8])) [1 dp+0 S4 A32]))) "BNDLYR2.f":218 838 {*fop_sf_comm}
     (nil))
(insn 1106 1105 1107 56 (set (reg:SI 0 ax [1869])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 lbnd+0 S4 A32])) "BNDLYR2.f":218 86 {*movsi_internal}
     (nil))
(insn 1107 1106 1108 56 (set (reg:DI 0 ax [orig:584 _498 ] [584])
        (sign_extend:DI (reg:SI 0 ax [1869]))) "BNDLYR2.f":218 149 {*extendsidi2_rex64}
     (nil))
(insn 1108 1107 1109 56 (parallel [
            (set (reg:DI 1 dx [orig:585 _499 ] [585])
                (mult:DI (reg:DI 0 ax [orig:584 _498 ] [584])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":218 349 {*muldi3_1}
     (nil))
(insn 1109 1108 1110 56 (set (reg:SI 0 ax [1870])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":218 86 {*movsi_internal}
     (nil))
(insn 1110 1109 1111 56 (set (reg:DI 0 ax [orig:586 _500 ] [586])
        (sign_extend:DI (reg:SI 0 ax [1870]))) "BNDLYR2.f":218 149 {*extendsidi2_rex64}
     (nil))
(insn 1111 1110 1112 56 (parallel [
            (set (reg:DI 0 ax [orig:587 _501 ] [587])
                (mult:DI (reg:DI 0 ax [orig:586 _500 ] [586])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":218 349 {*muldi3_1}
     (nil))
(insn 1112 1111 1113 56 (parallel [
            (set (reg:DI 1 dx [orig:588 _502 ] [588])
                (plus:DI (reg:DI 1 dx [orig:585 _499 ] [585])
                    (reg:DI 0 ax [orig:587 _501 ] [587])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":218 222 {*adddi_1}
     (nil))
(insn 1113 1112 1114 56 (set (reg:SI 0 ax [1871])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":218 86 {*movsi_internal}
     (nil))
(insn 1114 1113 1115 56 (set (reg:DI 0 ax [orig:589 _503 ] [589])
        (sign_extend:DI (reg:SI 0 ax [1871]))) "BNDLYR2.f":218 149 {*extendsidi2_rex64}
     (nil))
(insn 1115 1114 1116 56 (parallel [
            (set (reg:DI 0 ax [orig:590 _504 ] [590])
                (plus:DI (reg:DI 0 ax [orig:589 _503 ] [589])
                    (reg:DI 1 dx [orig:588 _502 ] [588])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":218 222 {*adddi_1}
     (nil))
(insn 1116 1115 1117 56 (parallel [
            (set (reg:DI 1 dx [orig:591 _505 ] [591])
                (plus:DI (reg:DI 0 ax [orig:590 _504 ] [590])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":218 222 {*adddi_1}
     (nil))
(insn 1117 1116 1118 56 (set (reg:SF 21 xmm0 [orig:592 _506 ] [592])
        (plus:SF (reg:SF 21 xmm0 [orig:583 _497 ] [583])
            (reg:SF 22 xmm1 [orig:582 _496 ] [582]))) "BNDLYR2.f":218 838 {*fop_sf_comm}
     (nil))
(insn 1118 1117 1119 56 (set (reg/f:DI 0 ax [1872])
        (symbol_ref:DI ("qsbnd.4217") [flags 0x202]  <var_decl 0x7fd1b2d4d870 qsbnd>)) "BNDLYR2.f":218 85 {*movdi_internal}
     (nil))
(insn 1119 1118 1120 56 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:591 _505 ] [591])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1872])) [1 qsbnd S4 A32])
        (reg:SF 21 xmm0 [orig:592 _506 ] [592])) "BNDLYR2.f":218 131 {*movsf_internal}
     (nil))
;;  succ:       57 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1534

;; basic block 57, loop depth 0, maybe hot
;;  prev block 56, next block 156, flags: (RTL, MODIFIED)
;;  pred:       56 (FALLTHRU)
;;              41
;;              42
;; bb 57 artificial_defs: { }
;; bb 57 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1534
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 1120 1119 1121 57 29 (nil) [2 uses])
(note 1121 1120 1122 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(insn 1122 1121 3126 57 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":159 221 {*addsi_1}
     (nil))
(jump_insn 3126 1122 3127 57 (set (pc)
        (label_ref 1123)) "BNDLYR2.f":159 683 {jump}
     (nil)
 -> 1123)
;;  succ:       30 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1534

(barrier 3127 3126 3206)
;; basic block 156, loop depth 0, maybe hot
;;  prev block 57, next block 58, flags: (RTL, MODIFIED)
;;  pred:       30
;; bb 156 artificial_defs: { }
;; bb 156 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1534
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 3206 3127 3205 156 153 (nil) [1 uses])
(note 3205 3206 3207 156 [bb 156] NOTE_INSN_BASIC_BLOCK)
(insn 3207 3205 1126 156 (const_int 0 [0]) "BNDLYR2.f":180 718 {nop}
     (nil))
;;  succ:       58 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1534

;; basic block 58, loop depth 0, maybe hot
;;  prev block 156, next block 155, flags: (RTL, MODIFIED)
;;  pred:       156 [always]  (FALLTHRU)
;; bb 58 artificial_defs: { }
;; bb 58 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1534
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 1126 3207 1127 58 19 (nil) [0 uses])
(note 1127 1126 1128 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(insn 1128 1127 3128 58 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":158 221 {*addsi_1}
     (nil))
(jump_insn 3128 1128 3129 58 (set (pc)
        (label_ref 1129)) "BNDLYR2.f":158 683 {jump}
     (nil)
 -> 1129)
;;  succ:       28 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1534

(barrier 3129 3128 3203)
;; basic block 155, loop depth 0, maybe hot
;;  prev block 58, next block 59, flags: (RTL, MODIFIED)
;;  pred:       28
;; bb 155 artificial_defs: { }
;; bb 155 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 3203 3129 3202 155 152 (nil) [1 uses])
(note 3202 3203 3204 155 [bb 155] NOTE_INSN_BASIC_BLOCK)
(insn 3204 3202 1132 155 (const_int 0 [0]) "BNDLYR2.f":159 718 {nop}
     (nil))
;;  succ:       59 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 59, loop depth 0, maybe hot
;;  prev block 155, next block 154, flags: (RTL, MODIFIED)
;;  pred:       155 [always]  (FALLTHRU)
;; bb 59 artificial_defs: { }
;; bb 59 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 1132 3204 1133 59 18 (nil) [0 uses])
(note 1133 1132 1134 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(insn 1134 1133 3130 59 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -36 [0xffffffffffffffdc])) [2 l+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -36 [0xffffffffffffffdc])) [2 l+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":157 221 {*addsi_1}
     (nil))
(jump_insn 3130 1134 3131 59 (set (pc)
        (label_ref 1135)) "BNDLYR2.f":157 683 {jump}
     (nil)
 -> 1135)
;;  succ:       26 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 3131 3130 3200)
;; basic block 154, loop depth 0, maybe hot
;;  prev block 59, next block 60, flags: (RTL, MODIFIED)
;;  pred:       26
;; bb 154 artificial_defs: { }
;; bb 154 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 3200 3131 3199 154 151 (nil) [1 uses])
(note 3199 3200 3201 154 [bb 154] NOTE_INSN_BASIC_BLOCK)
(insn 3201 3199 1138 154 (const_int 0 [0]) "BNDLYR2.f":158 718 {nop}
     (nil))
;;  succ:       60 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 60, loop depth 0, maybe hot
;;  prev block 154, next block 61, flags: (RTL, MODIFIED)
;;  pred:       154 [always]  (FALLTHRU)
;; bb 60 artificial_defs: { }
;; bb 60 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 1138 3201 1139 60 17 (nil) [0 uses])
(note 1139 1138 1140 60 [bb 60] NOTE_INSN_BASIC_BLOCK)
(insn 1140 1139 1159 60 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 l+0 S4 A32])
        (const_int 1 [0x1])) "BNDLYR2.f":226 86 {*movsi_internal}
     (nil))
;;  succ:       61 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 61, loop depth 0, maybe hot
;;  prev block 60, next block 62, flags: (RTL, MODIFIED)
;;  pred:       60 (FALLTHRU)
;;              62 [always] 
;; bb 61 artificial_defs: { }
;; bb 61 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1537 1873
(code_label 1159 1140 1141 61 47 (nil) [1 uses])
(note 1141 1159 1142 61 [bb 61] NOTE_INSN_BASIC_BLOCK)
(insn 1142 1141 1143 61 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -36 [0xffffffffffffffdc])) [2 l+0 S4 A32])
            (const_int 39 [0x27]))) "BNDLYR2.f":226 11 {*cmpsi_1}
     (nil))
(insn 1143 1142 1144 61 (set (reg:QI 0 ax [1873])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "BNDLYR2.f":226 678 {*setcc_qi}
     (nil))
(insn 1144 1143 1145 61 (set (reg:SI 0 ax [orig:1537 _1607 ] [1537])
        (zero_extend:SI (reg:QI 0 ax [1873]))) "BNDLYR2.f":226 140 {*zero_extendqisi2}
     (nil))
(insn 1145 1144 1146 61 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:1537 _1607 ] [1537])
            (const_int 0 [0]))) "BNDLYR2.f":226 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1146 1145 1147 61 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 3209)
            (pc))) "BNDLYR2.f":226 682 {*jcc}
     (nil)
 -> 3209)
;;  succ:       157
;;              62 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 62, loop depth 0, maybe hot
;;  prev block 61, next block 157, flags: (RTL, MODIFIED)
;;  pred:       61 (FALLTHRU)
;; bb 62 artificial_defs: { }
;; bb 62 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 593 594 595 596 1874 1875 1876
(note 1147 1146 1148 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(insn 1148 1147 1149 62 (set (reg:SI 0 ax [1874])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 l+0 S4 A32])) "BNDLYR2.f":227 86 {*movsi_internal}
     (nil))
(insn 1149 1148 1150 62 (set (reg:DI 0 ax [orig:593 _507 ] [593])
        (sign_extend:DI (reg:SI 0 ax [1874]))) "BNDLYR2.f":227 149 {*extendsidi2_rex64}
     (nil))
(insn 1150 1149 1151 62 (parallel [
            (set (reg:DI 0 ax [orig:594 _508 ] [594])
                (plus:DI (reg:DI 0 ax [orig:593 _507 ] [593])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":227 222 {*adddi_1}
     (nil))
(insn 1151 1150 1152 62 (parallel [
            (set (reg:DI 0 ax [orig:595 _509 ] [595])
                (mult:DI (reg:DI 0 ax [orig:594 _508 ] [594])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":227 349 {*muldi3_1}
     (nil))
(insn 1152 1151 1153 62 (parallel [
            (set (reg:DI 1 dx [1875])
                (ashift:DI (reg:DI 0 ax [orig:595 _509 ] [595])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":227 551 {*ashldi3_1}
     (nil))
(insn 1153 1152 1154 62 (set (reg:DI 0 ax [1876])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7fd1b2d2cc60 extra>)) "BNDLYR2.f":227 85 {*movdi_internal}
     (nil))
(insn 1154 1153 1155 62 (parallel [
            (set (reg/f:DI 0 ax [orig:596 _510 ] [596])
                (plus:DI (reg:DI 0 ax [1876])
                    (reg:DI 1 dx [1875])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":227 222 {*adddi_1}
     (nil))
(insn 1155 1154 1156 62 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:596 _510 ] [596])) "BNDLYR2.f":227 85 {*movdi_internal}
     (nil))
(insn 1156 1155 1157 62 (set (reg:QI 0 ax)
        (const_int 0 [0])) "BNDLYR2.f":227 88 {*movqi_internal}
     (nil))
(call_insn 1157 1156 1158 62 (call (mem:QI (symbol_ref:DI ("exch_") [flags 0x41]  <function_decl 0x7fd1b2d1f600 exch>) [0 exch S1 A8])
        (const_int 0 [0])) "BNDLYR2.f":227 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 1158 1157 3132 62 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -36 [0xffffffffffffffdc])) [2 l+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -36 [0xffffffffffffffdc])) [2 l+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":226 221 {*addsi_1}
     (nil))
(jump_insn 3132 1158 3133 62 (set (pc)
        (label_ref 1159)) "BNDLYR2.f":226 683 {jump}
     (nil)
 -> 1159)
;;  succ:       61 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 3133 3132 3209)
;; basic block 157, loop depth 0, maybe hot
;;  prev block 62, next block 63, flags: (RTL, MODIFIED)
;;  pred:       61
;; bb 157 artificial_defs: { }
;; bb 157 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 3209 3133 3208 157 154 (nil) [1 uses])
(note 3208 3209 3210 157 [bb 157] NOTE_INSN_BASIC_BLOCK)
(insn 3210 3208 1162 157 (const_int 0 [0]) "BNDLYR2.f":227 718 {nop}
     (nil))
;;  succ:       63 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 63, loop depth 0, maybe hot
;;  prev block 157, next block 64, flags: (RTL, MODIFIED)
;;  pred:       157 [always]  (FALLTHRU)
;; bb 63 artificial_defs: { }
;; bb 63 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 1162 3210 1163 63 46 (nil) [0 uses])
(note 1163 1162 1164 63 [bb 63] NOTE_INSN_BASIC_BLOCK)
(insn 1164 1163 1513 63 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 l+0 S4 A32])
        (const_int 1 [0x1])) "BNDLYR2.f":230 86 {*movsi_internal}
     (nil))
;;  succ:       64 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 64, loop depth 0, maybe hot
;;  prev block 63, next block 65, flags: (RTL, MODIFIED)
;;  pred:       63 (FALLTHRU)
;;              74 [always] 
;; bb 64 artificial_defs: { }
;; bb 64 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1538 1877
(code_label 1513 1164 1165 64 56 (nil) [1 uses])
(note 1165 1513 1166 64 [bb 64] NOTE_INSN_BASIC_BLOCK)
(insn 1166 1165 1167 64 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -36 [0xffffffffffffffdc])) [2 l+0 S4 A32])
            (const_int 38 [0x26]))) "BNDLYR2.f":230 11 {*cmpsi_1}
     (nil))
(insn 1167 1166 1168 64 (set (reg:QI 0 ax [1877])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "BNDLYR2.f":230 678 {*setcc_qi}
     (nil))
(insn 1168 1167 1169 64 (set (reg:SI 0 ax [orig:1538 _1611 ] [1538])
        (zero_extend:SI (reg:QI 0 ax [1877]))) "BNDLYR2.f":230 140 {*zero_extendqisi2}
     (nil))
(insn 1169 1168 1170 64 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:1538 _1611 ] [1538])
            (const_int 0 [0]))) "BNDLYR2.f":230 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1170 1169 1171 64 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 3212)
            (pc))) "BNDLYR2.f":230 682 {*jcc}
     (nil)
 -> 3212)
;;  succ:       158
;;              65 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 65, loop depth 0, maybe hot
;;  prev block 64, next block 66, flags: (RTL, MODIFIED)
;;  pred:       64 (FALLTHRU)
;; bb 65 artificial_defs: { }
;; bb 65 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 1539 1540
(note 1171 1170 1172 65 [bb 65] NOTE_INSN_BASIC_BLOCK)
(insn 1172 1171 1173 65 (set (reg:SI 1 dx [orig:1539 _1612 ] [1539])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7fd1b2d3cea0 parallel>)
                    (const_int 16 [0x10]))) [2 parallel.jsta_m+0 S4 A128])) "BNDLYR2.f":232 86 {*movsi_internal}
     (nil))
(insn 1173 1172 1174 65 (set (reg:SI 0 ax [orig:1540 _1613 ] [1540])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7fd1b2d3cea0 parallel>)
                    (const_int 20 [0x14]))) [2 parallel.jend_m+0 S4 A32])) "BNDLYR2.f":232 86 {*movsi_internal}
     (nil))
(insn 1174 1173 1507 65 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])
        (reg:SI 1 dx [orig:1539 _1612 ] [1539])) "BNDLYR2.f":232 86 {*movsi_internal}
     (nil))
;;  succ:       66 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1540

;; basic block 66, loop depth 0, maybe hot
;;  prev block 65, next block 67, flags: (RTL, MODIFIED)
;;  pred:       65 (FALLTHRU)
;;              73 [always] 
;; bb 66 artificial_defs: { }
;; bb 66 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1540
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1540
;; lr  def 	 17 [flags] 1541 1878
(code_label 1507 1174 1175 66 55 (nil) [1 uses])
(note 1175 1507 1176 66 [bb 66] NOTE_INSN_BASIC_BLOCK)
(insn 1176 1175 1177 66 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])
            (reg:SI 0 ax [orig:1540 _1613 ] [1540]))) "BNDLYR2.f":232 11 {*cmpsi_1}
     (nil))
(insn 1177 1176 1178 66 (set (reg:QI 1 dx [1878])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "BNDLYR2.f":232 678 {*setcc_qi}
     (nil))
(insn 1178 1177 1179 66 (set (reg:SI 1 dx [orig:1541 _1615 ] [1541])
        (zero_extend:SI (reg:QI 1 dx [1878]))) "BNDLYR2.f":232 140 {*zero_extendqisi2}
     (nil))
(insn 1179 1178 1180 66 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1541 _1615 ] [1541])
            (const_int 0 [0]))) "BNDLYR2.f":232 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1180 1179 1181 66 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 3215)
            (pc))) "BNDLYR2.f":232 682 {*jcc}
     (nil)
 -> 3215)
;;  succ:       159
;;              67 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1540

;; basic block 67, loop depth 0, maybe hot
;;  prev block 66, next block 68, flags: (RTL, MODIFIED)
;;  pred:       66 (FALLTHRU)
;; bb 67 artificial_defs: { }
;; bb 67 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1540
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 1181 1180 1182 67 [bb 67] NOTE_INSN_BASIC_BLOCK)
(insn 1182 1181 1501 67 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])
        (const_int 2 [0x2])) "BNDLYR2.f":233 86 {*movsi_internal}
     (nil))
;;  succ:       68 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1540

;; basic block 68, loop depth 0, maybe hot
;;  prev block 67, next block 69, flags: (RTL, MODIFIED)
;;  pred:       67 (FALLTHRU)
;;              72 [always] 
;; bb 68 artificial_defs: { }
;; bb 68 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1540
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1542 1879
(code_label 1501 1182 1183 68 54 (nil) [1 uses])
(note 1183 1501 1184 68 [bb 68] NOTE_INSN_BASIC_BLOCK)
(insn 1184 1183 1185 68 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])
            (const_int 118 [0x76]))) "BNDLYR2.f":233 11 {*cmpsi_1}
     (nil))
(insn 1185 1184 1186 68 (set (reg:QI 1 dx [1879])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "BNDLYR2.f":233 678 {*setcc_qi}
     (nil))
(insn 1186 1185 1187 68 (set (reg:SI 1 dx [orig:1542 _1617 ] [1542])
        (zero_extend:SI (reg:QI 1 dx [1879]))) "BNDLYR2.f":233 140 {*zero_extendqisi2}
     (nil))
(insn 1187 1186 1188 68 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1542 _1617 ] [1542])
            (const_int 0 [0]))) "BNDLYR2.f":233 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1188 1187 1189 68 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 3218)
            (pc))) "BNDLYR2.f":233 682 {*jcc}
     (nil)
 -> 3218)
;;  succ:       160
;;              69 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1540

;; basic block 69, loop depth 0, maybe hot
;;  prev block 68, next block 70, flags: (RTL, MODIFIED)
;;  pred:       68 (FALLTHRU)
;; bb 69 artificial_defs: { }
;; bb 69 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1540
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 597 598 599 600 601 602 603 604 605 606 607 608 609 610 611 612 613 614 615 616 617 618 619 620 621 622 623 624 625 626 627 628 629 630 631 632 633 634 635 636 637 638 639 640 641 642 643 644 645 646 647 648 649 650 651 652 653 654 655 656 657 658 659 660 661 662 663 664 665 666 667 668 669 670 671 672 673 674 675 676 677 678 679 680 681 682 683 684 685 686 687 688 689 690 691 692 693 694 695 696 697 698 699 700 701 1880 1881 1884 1885 1886 1887 1890 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900 1901 1902 1903 1904 1905 1906 1907 1908 1909 1910 1911 1912 1913 1914 1915 1916 1917 1918 1919 1920 1921 1922 1923 1924 1925 1926 1927 1928 1929 1930 1931 1932 1933 1934 1935 1936
(note 1189 1188 1190 69 [bb 69] NOTE_INSN_BASIC_BLOCK)
(insn 1190 1189 1191 69 (set (reg:SI 1 dx [1880])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":234 86 {*movsi_internal}
     (nil))
(insn 1191 1190 1192 69 (set (reg:DI 1 dx [orig:597 _511 ] [597])
        (sign_extend:DI (reg:SI 1 dx [1880]))) "BNDLYR2.f":234 149 {*extendsidi2_rex64}
     (nil))
(insn 1192 1191 1193 69 (parallel [
            (set (reg:DI 1 dx [orig:598 _512 ] [598])
                (plus:DI (reg:DI 1 dx [orig:597 _511 ] [597])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":234 222 {*adddi_1}
     (nil))
(insn 1193 1192 1194 69 (parallel [
            (set (reg:DI 1 dx [1881])
                (plus:DI (reg:DI 1 dx [orig:598 _512 ] [598])
                    (const_int 498 [0x1f2])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":234 222 {*adddi_1}
     (nil))
(insn 1194 1193 1198 69 (set (reg:SI 2 cx [orig:599 _513 ] [599])
        (mem:SI (plus:DI (mult:DI (reg:DI 1 dx [1881])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("indx_") [flags 0x2]  <var_decl 0x7fd1b2d34a20 indx>)) [2 indx.ive S4 A32])) "BNDLYR2.f":234 86 {*movsi_internal}
     (nil))
(insn 1198 1194 1199 69 (set (reg:SI 1 dx [1885])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":234 86 {*movsi_internal}
     (nil))
(insn 1199 1198 1200 69 (parallel [
            (set (reg:SI 1 dx [1884])
                (plus:SI (reg:SI 1 dx [1885])
                    (reg:SI 2 cx [orig:599 _513 ] [599])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":234 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (reg:SI 2 cx [orig:599 _513 ] [599])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32]))
        (nil)))
(insn 1200 1199 1201 69 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -100 [0xffffffffffffff9c])) [2 ie+0 S4 A32])
        (reg:SI 1 dx [1884])) "BNDLYR2.f":234 86 {*movsi_internal}
     (nil))
(insn 1201 1200 1202 69 (set (reg:SI 1 dx [1886])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":235 86 {*movsi_internal}
     (nil))
(insn 1202 1201 1203 69 (set (reg:DI 1 dx [orig:600 _514 ] [600])
        (sign_extend:DI (reg:SI 1 dx [1886]))) "BNDLYR2.f":235 149 {*extendsidi2_rex64}
     (nil))
(insn 1203 1202 1204 69 (parallel [
            (set (reg:DI 1 dx [orig:601 _515 ] [601])
                (plus:DI (reg:DI 1 dx [orig:600 _514 ] [600])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":235 222 {*adddi_1}
     (nil))
(insn 1204 1203 1205 69 (parallel [
            (set (reg:DI 1 dx [1887])
                (plus:DI (reg:DI 1 dx [orig:601 _515 ] [601])
                    (const_int 747 [0x2eb])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":235 222 {*adddi_1}
     (nil))
(insn 1205 1204 1209 69 (set (reg:SI 2 cx [orig:602 _516 ] [602])
        (mem:SI (plus:DI (mult:DI (reg:DI 1 dx [1887])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("indx_") [flags 0x2]  <var_decl 0x7fd1b2d34a20 indx>)) [2 indx.ivw S4 A32])) "BNDLYR2.f":235 86 {*movsi_internal}
     (nil))
(insn 1209 1205 1210 69 (set (reg:SI 1 dx [1891])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":235 86 {*movsi_internal}
     (nil))
(insn 1210 1209 1211 69 (parallel [
            (set (reg:SI 1 dx [1890])
                (plus:SI (reg:SI 1 dx [1891])
                    (reg:SI 2 cx [orig:602 _516 ] [602])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":235 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (reg:SI 2 cx [orig:602 _516 ] [602])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32]))
        (nil)))
(insn 1211 1210 1212 69 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [2 iw+0 S4 A32])
        (reg:SI 1 dx [1890])) "BNDLYR2.f":235 86 {*movsi_internal}
     (nil))
(insn 1212 1211 1213 69 (set (reg:SI 1 dx [1892])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 l+0 S4 A32])) "BNDLYR2.f":237 86 {*movsi_internal}
     (nil))
(insn 1213 1212 1214 69 (set (reg:DI 1 dx [orig:603 _517 ] [603])
        (sign_extend:DI (reg:SI 1 dx [1892]))) "BNDLYR2.f":237 149 {*extendsidi2_rex64}
     (nil))
(insn 1214 1213 1215 69 (parallel [
            (set (reg:DI 2 cx [orig:604 _518 ] [604])
                (mult:DI (reg:DI 1 dx [orig:603 _517 ] [603])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":237 349 {*muldi3_1}
     (nil))
(insn 1215 1214 1216 69 (set (reg:SI 1 dx [1893])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":237 86 {*movsi_internal}
     (nil))
(insn 1216 1215 1217 69 (set (reg:DI 1 dx [orig:605 _519 ] [605])
        (sign_extend:DI (reg:SI 1 dx [1893]))) "BNDLYR2.f":237 149 {*extendsidi2_rex64}
     (nil))
(insn 1217 1216 1218 69 (parallel [
            (set (reg:DI 1 dx [orig:606 _520 ] [606])
                (mult:DI (reg:DI 1 dx [orig:605 _519 ] [605])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":237 349 {*muldi3_1}
     (nil))
(insn 1218 1217 1219 69 (parallel [
            (set (reg:DI 2 cx [orig:607 _521 ] [607])
                (plus:DI (reg:DI 2 cx [orig:604 _518 ] [604])
                    (reg:DI 1 dx [orig:606 _520 ] [606])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":237 222 {*adddi_1}
     (nil))
(insn 1219 1218 1220 69 (set (reg:SI 1 dx [1894])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [2 iw+0 S4 A32])) "BNDLYR2.f":237 86 {*movsi_internal}
     (nil))
(insn 1220 1219 1221 69 (set (reg:DI 1 dx [orig:608 _522 ] [608])
        (sign_extend:DI (reg:SI 1 dx [1894]))) "BNDLYR2.f":237 149 {*extendsidi2_rex64}
     (nil))
(insn 1221 1220 1222 69 (parallel [
            (set (reg:DI 1 dx [orig:609 _523 ] [609])
                (plus:DI (reg:DI 1 dx [orig:608 _522 ] [608])
                    (reg:DI 2 cx [orig:607 _521 ] [607])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":237 222 {*adddi_1}
     (nil))
(insn 1222 1221 1223 69 (parallel [
            (set (reg:DI 2 cx [orig:610 _524 ] [610])
                (plus:DI (reg:DI 1 dx [orig:609 _523 ] [609])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":237 222 {*adddi_1}
     (nil))
(insn 1223 1222 1224 69 (set (reg/f:DI 1 dx [1895])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7fd1b2d2cc60 extra>)) "BNDLYR2.f":237 85 {*movdi_internal}
     (nil))
(insn 1224 1223 1225 69 (set (reg:SF 22 xmm1 [orig:611 _525 ] [611])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:610 _524 ] [610])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1895])) [1 extra.pint S4 A32])) "BNDLYR2.f":237 131 {*movsf_internal}
     (nil))
(insn 1225 1224 1226 69 (set (reg:SI 1 dx [1896])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 l+0 S4 A32])) "BNDLYR2.f":237 86 {*movsi_internal}
     (nil))
(insn 1226 1225 1227 69 (set (reg:DI 1 dx [orig:612 _526 ] [612])
        (sign_extend:DI (reg:SI 1 dx [1896]))) "BNDLYR2.f":237 149 {*extendsidi2_rex64}
     (nil))
(insn 1227 1226 1228 69 (parallel [
            (set (reg:DI 2 cx [orig:613 _527 ] [613])
                (mult:DI (reg:DI 1 dx [orig:612 _526 ] [612])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":237 349 {*muldi3_1}
     (nil))
(insn 1228 1227 1229 69 (set (reg:SI 1 dx [1897])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":237 86 {*movsi_internal}
     (nil))
(insn 1229 1228 1230 69 (set (reg:DI 1 dx [orig:614 _528 ] [614])
        (sign_extend:DI (reg:SI 1 dx [1897]))) "BNDLYR2.f":237 149 {*extendsidi2_rex64}
     (nil))
(insn 1230 1229 1231 69 (parallel [
            (set (reg:DI 1 dx [orig:615 _529 ] [615])
                (mult:DI (reg:DI 1 dx [orig:614 _528 ] [614])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":237 349 {*muldi3_1}
     (nil))
(insn 1231 1230 1232 69 (parallel [
            (set (reg:DI 2 cx [orig:616 _530 ] [616])
                (plus:DI (reg:DI 2 cx [orig:613 _527 ] [613])
                    (reg:DI 1 dx [orig:615 _529 ] [615])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":237 222 {*adddi_1}
     (nil))
(insn 1232 1231 1233 69 (set (reg:SI 1 dx [1898])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -100 [0xffffffffffffff9c])) [2 ie+0 S4 A32])) "BNDLYR2.f":237 86 {*movsi_internal}
     (nil))
(insn 1233 1232 1234 69 (set (reg:DI 1 dx [orig:617 _531 ] [617])
        (sign_extend:DI (reg:SI 1 dx [1898]))) "BNDLYR2.f":237 149 {*extendsidi2_rex64}
     (nil))
(insn 1234 1233 1235 69 (parallel [
            (set (reg:DI 1 dx [orig:618 _532 ] [618])
                (plus:DI (reg:DI 1 dx [orig:617 _531 ] [617])
                    (reg:DI 2 cx [orig:616 _530 ] [616])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":237 222 {*adddi_1}
     (nil))
(insn 1235 1234 1236 69 (parallel [
            (set (reg:DI 2 cx [orig:619 _533 ] [619])
                (plus:DI (reg:DI 1 dx [orig:618 _532 ] [618])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":237 222 {*adddi_1}
     (nil))
(insn 1236 1235 1237 69 (set (reg/f:DI 1 dx [1899])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7fd1b2d2cc60 extra>)) "BNDLYR2.f":237 85 {*movdi_internal}
     (nil))
(insn 1237 1236 1238 69 (set (reg:SF 21 xmm0 [orig:620 _534 ] [620])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:619 _533 ] [619])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1899])) [1 extra.pint S4 A32])) "BNDLYR2.f":237 131 {*movsf_internal}
     (nil))
(insn 1238 1237 1239 69 (set (reg:SF 22 xmm1 [orig:621 _535 ] [621])
        (plus:SF (reg:SF 22 xmm1 [orig:611 _525 ] [611])
            (reg:SF 21 xmm0 [orig:620 _534 ] [620]))) "BNDLYR2.f":237 838 {*fop_sf_comm}
     (nil))
(insn 1239 1238 1240 69 (set (reg:SI 1 dx [1900])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 l+0 S4 A32])) "BNDLYR2.f":237 86 {*movsi_internal}
     (nil))
(insn 1240 1239 1241 69 (set (reg:DI 1 dx [orig:622 _536 ] [622])
        (sign_extend:DI (reg:SI 1 dx [1900]))) "BNDLYR2.f":237 149 {*extendsidi2_rex64}
     (nil))
(insn 1241 1240 1242 69 (parallel [
            (set (reg:DI 2 cx [orig:623 _537 ] [623])
                (mult:DI (reg:DI 1 dx [orig:622 _536 ] [622])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":237 349 {*muldi3_1}
     (nil))
(insn 1242 1241 1243 69 (set (reg:SI 1 dx [1901])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":237 86 {*movsi_internal}
     (nil))
(insn 1243 1242 1244 69 (parallel [
            (set (reg:SI 1 dx [orig:624 _538 ] [624])
                (plus:SI (reg:SI 1 dx [1901])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":237 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [2 j+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 1244 1243 1245 69 (set (reg:DI 1 dx [orig:625 _539 ] [625])
        (sign_extend:DI (reg:SI 1 dx [orig:624 _538 ] [624]))) "BNDLYR2.f":237 149 {*extendsidi2_rex64}
     (nil))
(insn 1245 1244 1246 69 (parallel [
            (set (reg:DI 1 dx [orig:626 _540 ] [626])
                (mult:DI (reg:DI 1 dx [orig:625 _539 ] [625])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":237 349 {*muldi3_1}
     (nil))
(insn 1246 1245 1247 69 (parallel [
            (set (reg:DI 2 cx [orig:627 _541 ] [627])
                (plus:DI (reg:DI 2 cx [orig:623 _537 ] [623])
                    (reg:DI 1 dx [orig:626 _540 ] [626])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":237 222 {*adddi_1}
     (nil))
(insn 1247 1246 1248 69 (set (reg:SI 1 dx [1902])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":237 86 {*movsi_internal}
     (nil))
(insn 1248 1247 1249 69 (set (reg:DI 1 dx [orig:628 _542 ] [628])
        (sign_extend:DI (reg:SI 1 dx [1902]))) "BNDLYR2.f":237 149 {*extendsidi2_rex64}
     (nil))
(insn 1249 1248 1250 69 (parallel [
            (set (reg:DI 1 dx [orig:629 _543 ] [629])
                (plus:DI (reg:DI 1 dx [orig:628 _542 ] [628])
                    (reg:DI 2 cx [orig:627 _541 ] [627])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":237 222 {*adddi_1}
     (nil))
(insn 1250 1249 1251 69 (parallel [
            (set (reg:DI 2 cx [orig:630 _544 ] [630])
                (plus:DI (reg:DI 1 dx [orig:629 _543 ] [629])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":237 222 {*adddi_1}
     (nil))
(insn 1251 1250 1252 69 (set (reg/f:DI 1 dx [1903])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7fd1b2d2cc60 extra>)) "BNDLYR2.f":237 85 {*movdi_internal}
     (nil))
(insn 1252 1251 1253 69 (set (reg:SF 21 xmm0 [orig:631 _545 ] [631])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:630 _544 ] [630])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1903])) [1 extra.pint S4 A32])) "BNDLYR2.f":237 131 {*movsf_internal}
     (nil))
(insn 1253 1252 1254 69 (set (reg:SF 22 xmm1 [orig:632 _546 ] [632])
        (plus:SF (reg:SF 22 xmm1 [orig:621 _535 ] [621])
            (reg:SF 21 xmm0 [orig:631 _545 ] [631]))) "BNDLYR2.f":237 838 {*fop_sf_comm}
     (nil))
(insn 1254 1253 1255 69 (set (reg:SI 1 dx [1904])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 l+0 S4 A32])) "BNDLYR2.f":237 86 {*movsi_internal}
     (nil))
(insn 1255 1254 1256 69 (set (reg:DI 1 dx [orig:633 _547 ] [633])
        (sign_extend:DI (reg:SI 1 dx [1904]))) "BNDLYR2.f":237 149 {*extendsidi2_rex64}
     (nil))
(insn 1256 1255 1257 69 (parallel [
            (set (reg:DI 2 cx [orig:634 _548 ] [634])
                (mult:DI (reg:DI 1 dx [orig:633 _547 ] [633])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":237 349 {*muldi3_1}
     (nil))
(insn 1257 1256 1258 69 (set (reg:SI 1 dx [1905])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":237 86 {*movsi_internal}
     (nil))
(insn 1258 1257 1259 69 (parallel [
            (set (reg:SI 1 dx [orig:635 _549 ] [635])
                (plus:SI (reg:SI 1 dx [1905])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":237 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [2 j+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 1259 1258 1260 69 (set (reg:DI 1 dx [orig:636 _550 ] [636])
        (sign_extend:DI (reg:SI 1 dx [orig:635 _549 ] [635]))) "BNDLYR2.f":237 149 {*extendsidi2_rex64}
     (nil))
(insn 1260 1259 1261 69 (parallel [
            (set (reg:DI 1 dx [orig:637 _551 ] [637])
                (mult:DI (reg:DI 1 dx [orig:636 _550 ] [636])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":237 349 {*muldi3_1}
     (nil))
(insn 1261 1260 1262 69 (parallel [
            (set (reg:DI 2 cx [orig:638 _552 ] [638])
                (plus:DI (reg:DI 2 cx [orig:634 _548 ] [634])
                    (reg:DI 1 dx [orig:637 _551 ] [637])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":237 222 {*adddi_1}
     (nil))
(insn 1262 1261 1263 69 (set (reg:SI 1 dx [1906])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":237 86 {*movsi_internal}
     (nil))
(insn 1263 1262 1264 69 (set (reg:DI 1 dx [orig:639 _553 ] [639])
        (sign_extend:DI (reg:SI 1 dx [1906]))) "BNDLYR2.f":237 149 {*extendsidi2_rex64}
     (nil))
(insn 1264 1263 1265 69 (parallel [
            (set (reg:DI 1 dx [orig:640 _554 ] [640])
                (plus:DI (reg:DI 1 dx [orig:639 _553 ] [639])
                    (reg:DI 2 cx [orig:638 _552 ] [638])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":237 222 {*adddi_1}
     (nil))
(insn 1265 1264 1266 69 (parallel [
            (set (reg:DI 2 cx [orig:641 _555 ] [641])
                (plus:DI (reg:DI 1 dx [orig:640 _554 ] [640])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":237 222 {*adddi_1}
     (nil))
(insn 1266 1265 1267 69 (set (reg/f:DI 1 dx [1907])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7fd1b2d2cc60 extra>)) "BNDLYR2.f":237 85 {*movdi_internal}
     (nil))
(insn 1267 1266 1268 69 (set (reg:SF 21 xmm0 [orig:642 _556 ] [642])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:641 _555 ] [641])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1907])) [1 extra.pint S4 A32])) "BNDLYR2.f":237 131 {*movsf_internal}
     (nil))
(insn 1268 1267 1269 69 (set (reg:SF 21 xmm0 [orig:643 _557 ] [643])
        (plus:SF (reg:SF 21 xmm0 [orig:642 _556 ] [642])
            (reg:SF 22 xmm1 [orig:632 _546 ] [632]))) "BNDLYR2.f":237 838 {*fop_sf_comm}
     (nil))
(insn 1269 1268 1270 69 (set (reg:SF 22 xmm1 [orig:644 _558 ] [644])
        (reg:SF 21 xmm0 [orig:643 _557 ] [643])) "BNDLYR2.f":237 131 {*movsf_internal}
     (nil))
(insn 1270 1269 1271 69 (set (reg:SF 21 xmm0 [1909])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC19") [flags 0x2]) [0  S4 A32])) "BNDLYR2.f":237 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 2.5e-1 [0x0.8p-1])
        (nil)))
(insn 1271 1270 1272 69 (set (reg:SF 21 xmm0 [1908])
        (mult:SF (reg:SF 21 xmm0 [1909])
            (reg:SF 22 xmm1 [orig:644 _558 ] [644]))) "BNDLYR2.f":237 838 {*fop_sf_comm}
     (nil))
(insn 1272 1271 1273 69 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -108 [0xffffffffffffff94])) [1 pv1+0 S4 A32])
        (reg:SF 21 xmm0 [1908])) "BNDLYR2.f":237 131 {*movsf_internal}
     (nil))
(insn 1273 1272 1274 69 (set (reg:SI 1 dx [1910])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 l+0 S4 A32])) "BNDLYR2.f":239 86 {*movsi_internal}
     (nil))
(insn 1274 1273 1275 69 (parallel [
            (set (reg:SI 1 dx [orig:645 _559 ] [645])
                (plus:SI (reg:SI 1 dx [1910])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":239 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -20 [0xffffffffffffffec])) [2 l+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 1275 1274 1276 69 (set (reg:DI 1 dx [orig:646 _560 ] [646])
        (sign_extend:DI (reg:SI 1 dx [orig:645 _559 ] [645]))) "BNDLYR2.f":239 149 {*extendsidi2_rex64}
     (nil))
(insn 1276 1275 1277 69 (parallel [
            (set (reg:DI 2 cx [orig:647 _561 ] [647])
                (mult:DI (reg:DI 1 dx [orig:646 _560 ] [646])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":239 349 {*muldi3_1}
     (nil))
(insn 1277 1276 1278 69 (set (reg:SI 1 dx [1911])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":239 86 {*movsi_internal}
     (nil))
(insn 1278 1277 1279 69 (set (reg:DI 1 dx [orig:648 _562 ] [648])
        (sign_extend:DI (reg:SI 1 dx [1911]))) "BNDLYR2.f":239 149 {*extendsidi2_rex64}
     (nil))
(insn 1279 1278 1280 69 (parallel [
            (set (reg:DI 1 dx [orig:649 _563 ] [649])
                (mult:DI (reg:DI 1 dx [orig:648 _562 ] [648])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":239 349 {*muldi3_1}
     (nil))
(insn 1280 1279 1281 69 (parallel [
            (set (reg:DI 2 cx [orig:650 _564 ] [650])
                (plus:DI (reg:DI 2 cx [orig:647 _561 ] [647])
                    (reg:DI 1 dx [orig:649 _563 ] [649])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":239 222 {*adddi_1}
     (nil))
(insn 1281 1280 1282 69 (set (reg:SI 1 dx [1912])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [2 iw+0 S4 A32])) "BNDLYR2.f":239 86 {*movsi_internal}
     (nil))
(insn 1282 1281 1283 69 (set (reg:DI 1 dx [orig:651 _565 ] [651])
        (sign_extend:DI (reg:SI 1 dx [1912]))) "BNDLYR2.f":239 149 {*extendsidi2_rex64}
     (nil))
(insn 1283 1282 1284 69 (parallel [
            (set (reg:DI 1 dx [orig:652 _566 ] [652])
                (plus:DI (reg:DI 1 dx [orig:651 _565 ] [651])
                    (reg:DI 2 cx [orig:650 _564 ] [650])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":239 222 {*adddi_1}
     (nil))
(insn 1284 1283 1285 69 (parallel [
            (set (reg:DI 2 cx [orig:653 _567 ] [653])
                (plus:DI (reg:DI 1 dx [orig:652 _566 ] [652])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":239 222 {*adddi_1}
     (nil))
(insn 1285 1284 1286 69 (set (reg/f:DI 1 dx [1913])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7fd1b2d2cc60 extra>)) "BNDLYR2.f":239 85 {*movdi_internal}
     (nil))
(insn 1286 1285 1287 69 (set (reg:SF 22 xmm1 [orig:654 _568 ] [654])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:653 _567 ] [653])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1913])) [1 extra.pint S4 A32])) "BNDLYR2.f":239 131 {*movsf_internal}
     (nil))
(insn 1287 1286 1288 69 (set (reg:SI 1 dx [1914])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 l+0 S4 A32])) "BNDLYR2.f":239 86 {*movsi_internal}
     (nil))
(insn 1288 1287 1289 69 (parallel [
            (set (reg:SI 1 dx [orig:655 _569 ] [655])
                (plus:SI (reg:SI 1 dx [1914])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":239 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -20 [0xffffffffffffffec])) [2 l+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 1289 1288 1290 69 (set (reg:DI 1 dx [orig:656 _570 ] [656])
        (sign_extend:DI (reg:SI 1 dx [orig:655 _569 ] [655]))) "BNDLYR2.f":239 149 {*extendsidi2_rex64}
     (nil))
(insn 1290 1289 1291 69 (parallel [
            (set (reg:DI 2 cx [orig:657 _571 ] [657])
                (mult:DI (reg:DI 1 dx [orig:656 _570 ] [656])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":239 349 {*muldi3_1}
     (nil))
(insn 1291 1290 1292 69 (set (reg:SI 1 dx [1915])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":239 86 {*movsi_internal}
     (nil))
(insn 1292 1291 1293 69 (set (reg:DI 1 dx [orig:658 _572 ] [658])
        (sign_extend:DI (reg:SI 1 dx [1915]))) "BNDLYR2.f":239 149 {*extendsidi2_rex64}
     (nil))
(insn 1293 1292 1294 69 (parallel [
            (set (reg:DI 1 dx [orig:659 _573 ] [659])
                (mult:DI (reg:DI 1 dx [orig:658 _572 ] [658])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":239 349 {*muldi3_1}
     (nil))
(insn 1294 1293 1295 69 (parallel [
            (set (reg:DI 2 cx [orig:660 _574 ] [660])
                (plus:DI (reg:DI 2 cx [orig:657 _571 ] [657])
                    (reg:DI 1 dx [orig:659 _573 ] [659])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":239 222 {*adddi_1}
     (nil))
(insn 1295 1294 1296 69 (set (reg:SI 1 dx [1916])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -100 [0xffffffffffffff9c])) [2 ie+0 S4 A32])) "BNDLYR2.f":239 86 {*movsi_internal}
     (nil))
(insn 1296 1295 1297 69 (set (reg:DI 1 dx [orig:661 _575 ] [661])
        (sign_extend:DI (reg:SI 1 dx [1916]))) "BNDLYR2.f":239 149 {*extendsidi2_rex64}
     (nil))
(insn 1297 1296 1298 69 (parallel [
            (set (reg:DI 1 dx [orig:662 _576 ] [662])
                (plus:DI (reg:DI 1 dx [orig:661 _575 ] [661])
                    (reg:DI 2 cx [orig:660 _574 ] [660])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":239 222 {*adddi_1}
     (nil))
(insn 1298 1297 1299 69 (parallel [
            (set (reg:DI 2 cx [orig:663 _577 ] [663])
                (plus:DI (reg:DI 1 dx [orig:662 _576 ] [662])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":239 222 {*adddi_1}
     (nil))
(insn 1299 1298 1300 69 (set (reg/f:DI 1 dx [1917])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7fd1b2d2cc60 extra>)) "BNDLYR2.f":239 85 {*movdi_internal}
     (nil))
(insn 1300 1299 1301 69 (set (reg:SF 21 xmm0 [orig:664 _578 ] [664])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:663 _577 ] [663])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1917])) [1 extra.pint S4 A32])) "BNDLYR2.f":239 131 {*movsf_internal}
     (nil))
(insn 1301 1300 1302 69 (set (reg:SF 22 xmm1 [orig:665 _579 ] [665])
        (plus:SF (reg:SF 22 xmm1 [orig:654 _568 ] [654])
            (reg:SF 21 xmm0 [orig:664 _578 ] [664]))) "BNDLYR2.f":239 838 {*fop_sf_comm}
     (nil))
(insn 1302 1301 1303 69 (set (reg:SI 1 dx [1918])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 l+0 S4 A32])) "BNDLYR2.f":239 86 {*movsi_internal}
     (nil))
(insn 1303 1302 1304 69 (parallel [
            (set (reg:SI 1 dx [orig:666 _580 ] [666])
                (plus:SI (reg:SI 1 dx [1918])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":239 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -20 [0xffffffffffffffec])) [2 l+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 1304 1303 1305 69 (set (reg:DI 1 dx [orig:667 _581 ] [667])
        (sign_extend:DI (reg:SI 1 dx [orig:666 _580 ] [666]))) "BNDLYR2.f":239 149 {*extendsidi2_rex64}
     (nil))
(insn 1305 1304 1306 69 (parallel [
            (set (reg:DI 2 cx [orig:668 _582 ] [668])
                (mult:DI (reg:DI 1 dx [orig:667 _581 ] [667])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":239 349 {*muldi3_1}
     (nil))
(insn 1306 1305 1307 69 (set (reg:SI 1 dx [1919])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":239 86 {*movsi_internal}
     (nil))
(insn 1307 1306 1308 69 (parallel [
            (set (reg:SI 1 dx [orig:669 _583 ] [669])
                (plus:SI (reg:SI 1 dx [1919])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":239 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [2 j+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 1308 1307 1309 69 (set (reg:DI 1 dx [orig:670 _584 ] [670])
        (sign_extend:DI (reg:SI 1 dx [orig:669 _583 ] [669]))) "BNDLYR2.f":239 149 {*extendsidi2_rex64}
     (nil))
(insn 1309 1308 1310 69 (parallel [
            (set (reg:DI 1 dx [orig:671 _585 ] [671])
                (mult:DI (reg:DI 1 dx [orig:670 _584 ] [670])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":239 349 {*muldi3_1}
     (nil))
(insn 1310 1309 1311 69 (parallel [
            (set (reg:DI 2 cx [orig:672 _586 ] [672])
                (plus:DI (reg:DI 2 cx [orig:668 _582 ] [668])
                    (reg:DI 1 dx [orig:671 _585 ] [671])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":239 222 {*adddi_1}
     (nil))
(insn 1311 1310 1312 69 (set (reg:SI 1 dx [1920])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":239 86 {*movsi_internal}
     (nil))
(insn 1312 1311 1313 69 (set (reg:DI 1 dx [orig:673 _587 ] [673])
        (sign_extend:DI (reg:SI 1 dx [1920]))) "BNDLYR2.f":239 149 {*extendsidi2_rex64}
     (nil))
(insn 1313 1312 1314 69 (parallel [
            (set (reg:DI 1 dx [orig:674 _588 ] [674])
                (plus:DI (reg:DI 1 dx [orig:673 _587 ] [673])
                    (reg:DI 2 cx [orig:672 _586 ] [672])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":239 222 {*adddi_1}
     (nil))
(insn 1314 1313 1315 69 (parallel [
            (set (reg:DI 2 cx [orig:675 _589 ] [675])
                (plus:DI (reg:DI 1 dx [orig:674 _588 ] [674])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":239 222 {*adddi_1}
     (nil))
(insn 1315 1314 1316 69 (set (reg/f:DI 1 dx [1921])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7fd1b2d2cc60 extra>)) "BNDLYR2.f":239 85 {*movdi_internal}
     (nil))
(insn 1316 1315 1317 69 (set (reg:SF 21 xmm0 [orig:676 _590 ] [676])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:675 _589 ] [675])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1921])) [1 extra.pint S4 A32])) "BNDLYR2.f":239 131 {*movsf_internal}
     (nil))
(insn 1317 1316 1318 69 (set (reg:SF 22 xmm1 [orig:677 _591 ] [677])
        (plus:SF (reg:SF 22 xmm1 [orig:665 _579 ] [665])
            (reg:SF 21 xmm0 [orig:676 _590 ] [676]))) "BNDLYR2.f":239 838 {*fop_sf_comm}
     (nil))
(insn 1318 1317 1319 69 (set (reg:SI 1 dx [1922])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 l+0 S4 A32])) "BNDLYR2.f":239 86 {*movsi_internal}
     (nil))
(insn 1319 1318 1320 69 (parallel [
            (set (reg:SI 1 dx [orig:678 _592 ] [678])
                (plus:SI (reg:SI 1 dx [1922])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":239 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -20 [0xffffffffffffffec])) [2 l+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 1320 1319 1321 69 (set (reg:DI 1 dx [orig:679 _593 ] [679])
        (sign_extend:DI (reg:SI 1 dx [orig:678 _592 ] [678]))) "BNDLYR2.f":239 149 {*extendsidi2_rex64}
     (nil))
(insn 1321 1320 1322 69 (parallel [
            (set (reg:DI 2 cx [orig:680 _594 ] [680])
                (mult:DI (reg:DI 1 dx [orig:679 _593 ] [679])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":239 349 {*muldi3_1}
     (nil))
(insn 1322 1321 1323 69 (set (reg:SI 1 dx [1923])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":239 86 {*movsi_internal}
     (nil))
(insn 1323 1322 1324 69 (parallel [
            (set (reg:SI 1 dx [orig:681 _595 ] [681])
                (plus:SI (reg:SI 1 dx [1923])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":239 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [2 j+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 1324 1323 1325 69 (set (reg:DI 1 dx [orig:682 _596 ] [682])
        (sign_extend:DI (reg:SI 1 dx [orig:681 _595 ] [681]))) "BNDLYR2.f":239 149 {*extendsidi2_rex64}
     (nil))
(insn 1325 1324 1326 69 (parallel [
            (set (reg:DI 1 dx [orig:683 _597 ] [683])
                (mult:DI (reg:DI 1 dx [orig:682 _596 ] [682])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":239 349 {*muldi3_1}
     (nil))
(insn 1326 1325 1327 69 (parallel [
            (set (reg:DI 2 cx [orig:684 _598 ] [684])
                (plus:DI (reg:DI 2 cx [orig:680 _594 ] [680])
                    (reg:DI 1 dx [orig:683 _597 ] [683])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":239 222 {*adddi_1}
     (nil))
(insn 1327 1326 1328 69 (set (reg:SI 1 dx [1924])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":239 86 {*movsi_internal}
     (nil))
(insn 1328 1327 1329 69 (set (reg:DI 1 dx [orig:685 _599 ] [685])
        (sign_extend:DI (reg:SI 1 dx [1924]))) "BNDLYR2.f":239 149 {*extendsidi2_rex64}
     (nil))
(insn 1329 1328 1330 69 (parallel [
            (set (reg:DI 1 dx [orig:686 _600 ] [686])
                (plus:DI (reg:DI 1 dx [orig:685 _599 ] [685])
                    (reg:DI 2 cx [orig:684 _598 ] [684])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":239 222 {*adddi_1}
     (nil))
(insn 1330 1329 1331 69 (parallel [
            (set (reg:DI 2 cx [orig:687 _601 ] [687])
                (plus:DI (reg:DI 1 dx [orig:686 _600 ] [686])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":239 222 {*adddi_1}
     (nil))
(insn 1331 1330 1332 69 (set (reg/f:DI 1 dx [1925])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7fd1b2d2cc60 extra>)) "BNDLYR2.f":239 85 {*movdi_internal}
     (nil))
(insn 1332 1331 1333 69 (set (reg:SF 21 xmm0 [orig:688 _602 ] [688])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:687 _601 ] [687])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1925])) [1 extra.pint S4 A32])) "BNDLYR2.f":239 131 {*movsf_internal}
     (nil))
(insn 1333 1332 1334 69 (set (reg:SF 21 xmm0 [orig:689 _603 ] [689])
        (plus:SF (reg:SF 21 xmm0 [orig:688 _602 ] [688])
            (reg:SF 22 xmm1 [orig:677 _591 ] [677]))) "BNDLYR2.f":239 838 {*fop_sf_comm}
     (nil))
(insn 1334 1333 1335 69 (set (reg:SF 22 xmm1 [orig:690 _604 ] [690])
        (reg:SF 21 xmm0 [orig:689 _603 ] [689])) "BNDLYR2.f":239 131 {*movsf_internal}
     (nil))
(insn 1335 1334 1336 69 (set (reg:SF 21 xmm0 [1927])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC19") [flags 0x2]) [0  S4 A32])) "BNDLYR2.f":239 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 2.5e-1 [0x0.8p-1])
        (nil)))
(insn 1336 1335 1337 69 (set (reg:SF 21 xmm0 [1926])
        (mult:SF (reg:SF 21 xmm0 [1927])
            (reg:SF 22 xmm1 [orig:690 _604 ] [690]))) "BNDLYR2.f":239 838 {*fop_sf_comm}
     (nil))
(insn 1337 1336 1338 69 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [1 pv2+0 S4 A32])
        (reg:SF 21 xmm0 [1926])) "BNDLYR2.f":239 131 {*movsf_internal}
     (nil))
(insn 1338 1337 1339 69 (set (reg:SF 21 xmm0 [1929])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [1 pv2+0 S4 A32])) "BNDLYR2.f":240 131 {*movsf_internal}
     (nil))
(insn 1339 1338 1340 69 (set (reg:SF 21 xmm0 [1928])
        (minus:SF (reg:SF 21 xmm0 [1929])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -108 [0xffffffffffffff94])) [1 pv1+0 S4 A32]))) "BNDLYR2.f":240 841 {*fop_sf_1}
     (nil))
(insn 1340 1339 1341 69 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [1 dp+0 S4 A32])
        (reg:SF 21 xmm0 [1928])) "BNDLYR2.f":240 131 {*movsf_internal}
     (nil))
(insn 1341 1340 1342 69 (set (reg:SF 21 xmm0 [1930])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -108 [0xffffffffffffff94])) [1 pv1+0 S4 A32])) "BNDLYR2.f":241 131 {*movsf_internal}
     (nil))
(insn 1342 1341 1343 69 (set (reg:SF 21 xmm0 [orig:691 _605 ] [691])
        (plus:SF (reg:SF 21 xmm0 [1930])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -112 [0xffffffffffffff90])) [1 pv2+0 S4 A32]))) "BNDLYR2.f":241 838 {*fop_sf_comm}
     (nil))
(insn 1343 1342 1344 69 (set (reg:SF 22 xmm1 [orig:692 _606 ] [692])
        (reg:SF 21 xmm0 [orig:691 _605 ] [691])) "BNDLYR2.f":241 131 {*movsf_internal}
     (nil))
(insn 1344 1343 1345 69 (set (reg:SF 21 xmm0 [1932])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC6") [flags 0x2]) [0  S4 A32])) "BNDLYR2.f":241 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 5.0e-1 [0x0.8p+0])
        (nil)))
(insn 1345 1344 1346 69 (set (reg:SF 21 xmm0 [1931])
        (mult:SF (reg:SF 21 xmm0 [1932])
            (reg:SF 22 xmm1 [orig:692 _606 ] [692]))) "BNDLYR2.f":241 838 {*fop_sf_comm}
     (nil))
(insn 1346 1345 1347 69 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -116 [0xffffffffffffff8c])) [1 pmv+0 S4 A32])
        (reg:SF 21 xmm0 [1931])) "BNDLYR2.f":241 131 {*movsf_internal}
     (nil))
(insn 1347 1346 1348 69 (set (reg:SI 1 dx [1933])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 lbnd+0 S4 A32])) "BNDLYR2.f":242 86 {*movsi_internal}
     (nil))
(insn 1348 1347 1349 69 (set (reg:DI 1 dx [orig:693 _607 ] [693])
        (sign_extend:DI (reg:SI 1 dx [1933]))) "BNDLYR2.f":242 149 {*extendsidi2_rex64}
     (nil))
(insn 1349 1348 1350 69 (parallel [
            (set (reg:DI 2 cx [orig:694 _608 ] [694])
                (mult:DI (reg:DI 1 dx [orig:693 _607 ] [693])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":242 349 {*muldi3_1}
     (nil))
(insn 1350 1349 1351 69 (set (reg:SI 1 dx [1934])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":242 86 {*movsi_internal}
     (nil))
(insn 1351 1350 1352 69 (set (reg:DI 1 dx [orig:695 _609 ] [695])
        (sign_extend:DI (reg:SI 1 dx [1934]))) "BNDLYR2.f":242 149 {*extendsidi2_rex64}
     (nil))
(insn 1352 1351 1353 69 (parallel [
            (set (reg:DI 1 dx [orig:696 _610 ] [696])
                (mult:DI (reg:DI 1 dx [orig:695 _609 ] [695])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":242 349 {*muldi3_1}
     (nil))
(insn 1353 1352 1354 69 (parallel [
            (set (reg:DI 2 cx [orig:697 _611 ] [697])
                (plus:DI (reg:DI 2 cx [orig:694 _608 ] [694])
                    (reg:DI 1 dx [orig:696 _610 ] [696])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":242 222 {*adddi_1}
     (nil))
(insn 1354 1353 1355 69 (set (reg:SI 1 dx [1935])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [2 iw+0 S4 A32])) "BNDLYR2.f":242 86 {*movsi_internal}
     (nil))
(insn 1355 1354 1356 69 (set (reg:DI 1 dx [orig:698 _612 ] [698])
        (sign_extend:DI (reg:SI 1 dx [1935]))) "BNDLYR2.f":242 149 {*extendsidi2_rex64}
     (nil))
(insn 1356 1355 1357 69 (parallel [
            (set (reg:DI 1 dx [orig:699 _613 ] [699])
                (plus:DI (reg:DI 1 dx [orig:698 _612 ] [698])
                    (reg:DI 2 cx [orig:697 _611 ] [697])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":242 222 {*adddi_1}
     (nil))
(insn 1357 1356 1358 69 (parallel [
            (set (reg:DI 2 cx [orig:700 _614 ] [700])
                (plus:DI (reg:DI 1 dx [orig:699 _613 ] [699])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":242 222 {*adddi_1}
     (nil))
(insn 1358 1357 1359 69 (set (reg/f:DI 1 dx [1936])
        (symbol_ref:DI ("pbint.4202") [flags 0x202]  <var_decl 0x7fd1b2d4d1b0 pbint>)) "BNDLYR2.f":242 85 {*movdi_internal}
     (nil))
(insn 1359 1358 1360 69 (set (reg:SF 21 xmm0 [orig:701 _615 ] [701])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:700 _614 ] [700])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1936])) [1 pbint S4 A32])) "BNDLYR2.f":242 131 {*movsf_internal}
     (nil))
(insn 1360 1359 1361 69 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [orig:701 _615 ] [701])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -116 [0xffffffffffffff8c])) [1 pmv+0 S4 A32]))) "BNDLYR2.f":242 53 {*cmpisf}
     (nil))
(jump_insn 1361 1360 1365 69 (set (pc)
        (if_then_else (unlt (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1498)
            (pc))) "BNDLYR2.f":242 682 {*jcc}
     (nil)
 -> 1498)
;;  succ:       70 (FALLTHRU)
;;              72
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1540

;; basic block 70, loop depth 0, maybe hot
;;  prev block 69, next block 71, flags: (RTL, MODIFIED)
;;  pred:       69 (FALLTHRU)
;; bb 70 artificial_defs: { }
;; bb 70 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1540
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 702 703 704 705 706 707 708 709 710 711 1937 1938 1939 1940 1941
(note 1365 1361 1366 70 [bb 70] NOTE_INSN_BASIC_BLOCK)
(insn 1366 1365 1367 70 (set (reg:SI 1 dx [1937])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 lbnd+0 S4 A32])) "BNDLYR2.f":242 86 {*movsi_internal}
     (nil))
(insn 1367 1366 1368 70 (parallel [
            (set (reg:SI 1 dx [orig:702 _616 ] [702])
                (plus:SI (reg:SI 1 dx [1937])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":242 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -24 [0xffffffffffffffe8])) [2 lbnd+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 1368 1367 1369 70 (set (reg:DI 1 dx [orig:703 _617 ] [703])
        (sign_extend:DI (reg:SI 1 dx [orig:702 _616 ] [702]))) "BNDLYR2.f":242 149 {*extendsidi2_rex64}
     (nil))
(insn 1369 1368 1370 70 (parallel [
            (set (reg:DI 2 cx [orig:704 _618 ] [704])
                (mult:DI (reg:DI 1 dx [orig:703 _617 ] [703])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":242 349 {*muldi3_1}
     (nil))
(insn 1370 1369 1371 70 (set (reg:SI 1 dx [1938])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":242 86 {*movsi_internal}
     (nil))
(insn 1371 1370 1372 70 (set (reg:DI 1 dx [orig:705 _619 ] [705])
        (sign_extend:DI (reg:SI 1 dx [1938]))) "BNDLYR2.f":242 149 {*extendsidi2_rex64}
     (nil))
(insn 1372 1371 1373 70 (parallel [
            (set (reg:DI 1 dx [orig:706 _620 ] [706])
                (mult:DI (reg:DI 1 dx [orig:705 _619 ] [705])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":242 349 {*muldi3_1}
     (nil))
(insn 1373 1372 1374 70 (parallel [
            (set (reg:DI 2 cx [orig:707 _621 ] [707])
                (plus:DI (reg:DI 2 cx [orig:704 _618 ] [704])
                    (reg:DI 1 dx [orig:706 _620 ] [706])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":242 222 {*adddi_1}
     (nil))
(insn 1374 1373 1375 70 (set (reg:SI 1 dx [1939])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [2 iw+0 S4 A32])) "BNDLYR2.f":242 86 {*movsi_internal}
     (nil))
(insn 1375 1374 1376 70 (set (reg:DI 1 dx [orig:708 _622 ] [708])
        (sign_extend:DI (reg:SI 1 dx [1939]))) "BNDLYR2.f":242 149 {*extendsidi2_rex64}
     (nil))
(insn 1376 1375 1377 70 (parallel [
            (set (reg:DI 1 dx [orig:709 _623 ] [709])
                (plus:DI (reg:DI 1 dx [orig:708 _622 ] [708])
                    (reg:DI 2 cx [orig:707 _621 ] [707])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":242 222 {*adddi_1}
     (nil))
(insn 1377 1376 1378 70 (parallel [
            (set (reg:DI 2 cx [orig:710 _624 ] [710])
                (plus:DI (reg:DI 1 dx [orig:709 _623 ] [709])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":242 222 {*adddi_1}
     (nil))
(insn 1378 1377 1379 70 (set (reg/f:DI 1 dx [1940])
        (symbol_ref:DI ("pbint.4202") [flags 0x202]  <var_decl 0x7fd1b2d4d1b0 pbint>)) "BNDLYR2.f":242 85 {*movdi_internal}
     (nil))
(insn 1379 1378 1380 70 (set (reg:SF 22 xmm1 [orig:711 _625 ] [711])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:710 _624 ] [710])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1940])) [1 pbint S4 A32])) "BNDLYR2.f":242 131 {*movsf_internal}
     (nil))
(insn 1380 1379 1381 70 (set (reg:SF 21 xmm0 [1941])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -116 [0xffffffffffffff8c])) [1 pmv+0 S4 A32])) "BNDLYR2.f":242 131 {*movsf_internal}
     (nil))
(insn 1381 1380 1382 70 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [1941])
            (reg:SF 22 xmm1 [orig:711 _625 ] [711]))) "BNDLYR2.f":242 53 {*cmpisf}
     (nil))
(jump_insn 1382 1381 1386 70 (set (pc)
        (if_then_else (unlt (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1498)
            (pc))) "BNDLYR2.f":242 682 {*jcc}
     (nil)
 -> 1498)
;;  succ:       71 (FALLTHRU)
;;              72
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1540

;; basic block 71, loop depth 0, maybe hot
;;  prev block 70, next block 72, flags: (RTL, MODIFIED)
;;  pred:       70 (FALLTHRU)
;; bb 71 artificial_defs: { }
;; bb 71 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1540
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 712 713 714 715 716 717 718 719 720 721 722 723 724 725 726 727 728 729 730 731 732 733 734 735 736 737 738 739 740 741 742 743 744 745 746 747 748 749 750 751 752 753 754 755 756 757 758 759 760 761 762 763 764 765 766 767 768 769 770 771 772 773 774 775 776 777 778 779 780 781 782 783 784 785 1942 1943 1944 1945 1946 1947 1948 1949 1950 1951 1952 1953 1954 1955 1956 1957 1958 1959 1960 1961 1962 1963 1964 1965 1966 1967 1968 1969 1970 1971 1972 1973 1974 1975
(note 1386 1382 1387 71 [bb 71] NOTE_INSN_BASIC_BLOCK)
(insn 1387 1386 1388 71 (set (reg:SI 1 dx [1942])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 lbnd+0 S4 A32])) "BNDLYR2.f":244 86 {*movsi_internal}
     (nil))
(insn 1388 1387 1389 71 (set (reg:DI 1 dx [orig:712 _626 ] [712])
        (sign_extend:DI (reg:SI 1 dx [1942]))) "BNDLYR2.f":244 149 {*extendsidi2_rex64}
     (nil))
(insn 1389 1388 1390 71 (parallel [
            (set (reg:DI 2 cx [orig:713 _627 ] [713])
                (mult:DI (reg:DI 1 dx [orig:712 _626 ] [712])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":244 349 {*muldi3_1}
     (nil))
(insn 1390 1389 1391 71 (set (reg:SI 1 dx [1943])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":244 86 {*movsi_internal}
     (nil))
(insn 1391 1390 1392 71 (set (reg:DI 1 dx [orig:714 _628 ] [714])
        (sign_extend:DI (reg:SI 1 dx [1943]))) "BNDLYR2.f":244 149 {*extendsidi2_rex64}
     (nil))
(insn 1392 1391 1393 71 (parallel [
            (set (reg:DI 1 dx [orig:715 _629 ] [715])
                (mult:DI (reg:DI 1 dx [orig:714 _628 ] [714])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":244 349 {*muldi3_1}
     (nil))
(insn 1393 1392 1394 71 (parallel [
            (set (reg:DI 2 cx [orig:716 _630 ] [716])
                (plus:DI (reg:DI 2 cx [orig:713 _627 ] [713])
                    (reg:DI 1 dx [orig:715 _629 ] [715])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":244 222 {*adddi_1}
     (nil))
(insn 1394 1393 1395 71 (set (reg:SI 1 dx [1944])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":244 86 {*movsi_internal}
     (nil))
(insn 1395 1394 1396 71 (set (reg:DI 1 dx [orig:717 _631 ] [717])
        (sign_extend:DI (reg:SI 1 dx [1944]))) "BNDLYR2.f":244 149 {*extendsidi2_rex64}
     (nil))
(insn 1396 1395 1397 71 (parallel [
            (set (reg:DI 1 dx [orig:718 _632 ] [718])
                (plus:DI (reg:DI 1 dx [orig:717 _631 ] [717])
                    (reg:DI 2 cx [orig:716 _630 ] [716])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":244 222 {*adddi_1}
     (nil))
(insn 1397 1396 1398 71 (parallel [
            (set (reg:DI 2 cx [orig:719 _633 ] [719])
                (plus:DI (reg:DI 1 dx [orig:718 _632 ] [718])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":244 222 {*adddi_1}
     (nil))
(insn 1398 1397 1399 71 (set (reg/f:DI 1 dx [1945])
        (symbol_ref:DI ("pvsum.4212") [flags 0x202]  <var_decl 0x7fd1b2d4d630 pvsum>)) "BNDLYR2.f":244 85 {*movdi_internal}
     (nil))
(insn 1399 1398 1400 71 (set (reg:SF 21 xmm0 [orig:720 _634 ] [720])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:719 _633 ] [719])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1945])) [1 pvsum S4 A32])) "BNDLYR2.f":244 131 {*movsf_internal}
     (nil))
(insn 1400 1399 1401 71 (set (reg:SI 1 dx [1946])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 lbnd+0 S4 A32])) "BNDLYR2.f":244 86 {*movsi_internal}
     (nil))
(insn 1401 1400 1402 71 (set (reg:DI 1 dx [orig:721 _635 ] [721])
        (sign_extend:DI (reg:SI 1 dx [1946]))) "BNDLYR2.f":244 149 {*extendsidi2_rex64}
     (nil))
(insn 1402 1401 1403 71 (parallel [
            (set (reg:DI 2 cx [orig:722 _636 ] [722])
                (mult:DI (reg:DI 1 dx [orig:721 _635 ] [721])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":244 349 {*muldi3_1}
     (nil))
(insn 1403 1402 1404 71 (set (reg:SI 1 dx [1947])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":244 86 {*movsi_internal}
     (nil))
(insn 1404 1403 1405 71 (set (reg:DI 1 dx [orig:723 _637 ] [723])
        (sign_extend:DI (reg:SI 1 dx [1947]))) "BNDLYR2.f":244 149 {*extendsidi2_rex64}
     (nil))
(insn 1405 1404 1406 71 (parallel [
            (set (reg:DI 1 dx [orig:724 _638 ] [724])
                (mult:DI (reg:DI 1 dx [orig:723 _637 ] [723])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":244 349 {*muldi3_1}
     (nil))
(insn 1406 1405 1407 71 (parallel [
            (set (reg:DI 2 cx [orig:725 _639 ] [725])
                (plus:DI (reg:DI 2 cx [orig:722 _636 ] [722])
                    (reg:DI 1 dx [orig:724 _638 ] [724])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":244 222 {*adddi_1}
     (nil))
(insn 1407 1406 1408 71 (set (reg:SI 1 dx [1948])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":244 86 {*movsi_internal}
     (nil))
(insn 1408 1407 1409 71 (set (reg:DI 1 dx [orig:726 _640 ] [726])
        (sign_extend:DI (reg:SI 1 dx [1948]))) "BNDLYR2.f":244 149 {*extendsidi2_rex64}
     (nil))
(insn 1409 1408 1410 71 (parallel [
            (set (reg:DI 1 dx [orig:727 _641 ] [727])
                (plus:DI (reg:DI 1 dx [orig:726 _640 ] [726])
                    (reg:DI 2 cx [orig:725 _639 ] [725])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":244 222 {*adddi_1}
     (nil))
(insn 1410 1409 1411 71 (parallel [
            (set (reg:DI 2 cx [orig:728 _642 ] [728])
                (plus:DI (reg:DI 1 dx [orig:727 _641 ] [727])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":244 222 {*adddi_1}
     (nil))
(insn 1411 1410 1412 71 (set (reg:SF 21 xmm0 [orig:729 _643 ] [729])
        (plus:SF (reg:SF 21 xmm0 [orig:720 _634 ] [720])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -72 [0xffffffffffffffb8])) [1 dp+0 S4 A32]))) "BNDLYR2.f":244 838 {*fop_sf_comm}
     (nil))
(insn 1412 1411 1413 71 (set (reg/f:DI 1 dx [1949])
        (symbol_ref:DI ("pvsum.4212") [flags 0x202]  <var_decl 0x7fd1b2d4d630 pvsum>)) "BNDLYR2.f":244 85 {*movdi_internal}
     (nil))
(insn 1413 1412 1414 71 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:728 _642 ] [728])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1949])) [1 pvsum S4 A32])
        (reg:SF 21 xmm0 [orig:729 _643 ] [729])) "BNDLYR2.f":244 131 {*movsf_internal}
     (nil))
(insn 1414 1413 1415 71 (set (reg:SI 1 dx [1950])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 lbnd+0 S4 A32])) "BNDLYR2.f":245 86 {*movsi_internal}
     (nil))
(insn 1415 1414 1416 71 (set (reg:DI 1 dx [orig:730 _644 ] [730])
        (sign_extend:DI (reg:SI 1 dx [1950]))) "BNDLYR2.f":245 149 {*extendsidi2_rex64}
     (nil))
(insn 1416 1415 1417 71 (parallel [
            (set (reg:DI 2 cx [orig:731 _645 ] [731])
                (mult:DI (reg:DI 1 dx [orig:730 _644 ] [730])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":245 349 {*muldi3_1}
     (nil))
(insn 1417 1416 1418 71 (set (reg:SI 1 dx [1951])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":245 86 {*movsi_internal}
     (nil))
(insn 1418 1417 1419 71 (set (reg:DI 1 dx [orig:732 _646 ] [732])
        (sign_extend:DI (reg:SI 1 dx [1951]))) "BNDLYR2.f":245 149 {*extendsidi2_rex64}
     (nil))
(insn 1419 1418 1420 71 (parallel [
            (set (reg:DI 1 dx [orig:733 _647 ] [733])
                (mult:DI (reg:DI 1 dx [orig:732 _646 ] [732])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":245 349 {*muldi3_1}
     (nil))
(insn 1420 1419 1421 71 (parallel [
            (set (reg:DI 2 cx [orig:734 _648 ] [734])
                (plus:DI (reg:DI 2 cx [orig:731 _645 ] [731])
                    (reg:DI 1 dx [orig:733 _647 ] [733])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":245 222 {*adddi_1}
     (nil))
(insn 1421 1420 1422 71 (set (reg:SI 1 dx [1952])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":245 86 {*movsi_internal}
     (nil))
(insn 1422 1421 1423 71 (set (reg:DI 1 dx [orig:735 _649 ] [735])
        (sign_extend:DI (reg:SI 1 dx [1952]))) "BNDLYR2.f":245 149 {*extendsidi2_rex64}
     (nil))
(insn 1423 1422 1424 71 (parallel [
            (set (reg:DI 1 dx [orig:736 _650 ] [736])
                (plus:DI (reg:DI 1 dx [orig:735 _649 ] [735])
                    (reg:DI 2 cx [orig:734 _648 ] [734])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":245 222 {*adddi_1}
     (nil))
(insn 1424 1423 1425 71 (parallel [
            (set (reg:DI 2 cx [orig:737 _651 ] [737])
                (plus:DI (reg:DI 1 dx [orig:736 _650 ] [736])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":245 222 {*adddi_1}
     (nil))
(insn 1425 1424 1426 71 (set (reg/f:DI 1 dx [1953])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [3 ubnd+0 S8 A64])) "BNDLYR2.f":245 85 {*movdi_internal}
     (nil))
(insn 1426 1425 1427 71 (set (reg:SF 22 xmm1 [orig:738 _652 ] [738])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:737 _651 ] [737])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1953])) [1 *ubnd_1546(D) S4 A32])) "BNDLYR2.f":245 131 {*movsf_internal}
     (nil))
(insn 1427 1426 1428 71 (set (reg:SI 1 dx [1954])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 l+0 S4 A32])) "BNDLYR2.f":245 86 {*movsi_internal}
     (nil))
(insn 1428 1427 1429 71 (set (reg:DI 1 dx [orig:739 _653 ] [739])
        (sign_extend:DI (reg:SI 1 dx [1954]))) "BNDLYR2.f":245 149 {*extendsidi2_rex64}
     (nil))
(insn 1429 1428 1430 71 (parallel [
            (set (reg:DI 2 cx [orig:740 _654 ] [740])
                (mult:DI (reg:DI 1 dx [orig:739 _653 ] [739])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":245 349 {*muldi3_1}
     (nil))
(insn 1430 1429 1431 71 (set (reg:SI 1 dx [1955])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":245 86 {*movsi_internal}
     (nil))
(insn 1431 1430 1432 71 (set (reg:DI 1 dx [orig:741 _655 ] [741])
        (sign_extend:DI (reg:SI 1 dx [1955]))) "BNDLYR2.f":245 149 {*extendsidi2_rex64}
     (nil))
(insn 1432 1431 1433 71 (parallel [
            (set (reg:DI 1 dx [orig:742 _656 ] [742])
                (mult:DI (reg:DI 1 dx [orig:741 _655 ] [741])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":245 349 {*muldi3_1}
     (nil))
(insn 1433 1432 1434 71 (parallel [
            (set (reg:DI 2 cx [orig:743 _657 ] [743])
                (plus:DI (reg:DI 2 cx [orig:740 _654 ] [740])
                    (reg:DI 1 dx [orig:742 _656 ] [742])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":245 222 {*adddi_1}
     (nil))
(insn 1434 1433 1435 71 (set (reg:SI 1 dx [1956])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":245 86 {*movsi_internal}
     (nil))
(insn 1435 1434 1436 71 (set (reg:DI 1 dx [orig:744 _658 ] [744])
        (sign_extend:DI (reg:SI 1 dx [1956]))) "BNDLYR2.f":245 149 {*extendsidi2_rex64}
     (nil))
(insn 1436 1435 1437 71 (parallel [
            (set (reg:DI 1 dx [orig:745 _659 ] [745])
                (plus:DI (reg:DI 1 dx [orig:744 _658 ] [744])
                    (reg:DI 2 cx [orig:743 _657 ] [743])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":245 222 {*adddi_1}
     (nil))
(insn 1437 1436 1438 71 (parallel [
            (set (reg:DI 2 cx [orig:746 _660 ] [746])
                (plus:DI (reg:DI 1 dx [orig:745 _659 ] [745])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":245 222 {*adddi_1}
     (nil))
(insn 1438 1437 1439 71 (set (reg/f:DI 1 dx [1957])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7fd1b2d48360 vrbls>)) "BNDLYR2.f":245 85 {*movdi_internal}
     (nil))
(insn 1439 1438 1440 71 (parallel [
            (set (reg:DI 2 cx [1958])
                (plus:DI (reg:DI 2 cx [orig:746 _660 ] [746])
                    (const_int 88893 [0x15b3d])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":245 222 {*adddi_1}
     (nil))
(insn 1440 1439 1441 71 (set (reg:SF 21 xmm0 [orig:747 _661 ] [747])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [1958])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1957])) [1 vrbls.u S4 A32])) "BNDLYR2.f":245 131 {*movsf_internal}
     (nil))
(insn 1441 1440 1442 71 (set (reg:SF 21 xmm0 [orig:748 _662 ] [748])
        (mult:SF (reg:SF 21 xmm0 [orig:747 _661 ] [747])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -72 [0xffffffffffffffb8])) [1 dp+0 S4 A32]))) "BNDLYR2.f":245 838 {*fop_sf_comm}
     (nil))
(insn 1442 1441 1443 71 (set (reg:SI 1 dx [1959])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 lbnd+0 S4 A32])) "BNDLYR2.f":245 86 {*movsi_internal}
     (nil))
(insn 1443 1442 1444 71 (set (reg:DI 1 dx [orig:749 _663 ] [749])
        (sign_extend:DI (reg:SI 1 dx [1959]))) "BNDLYR2.f":245 149 {*extendsidi2_rex64}
     (nil))
(insn 1444 1443 1445 71 (parallel [
            (set (reg:DI 2 cx [orig:750 _664 ] [750])
                (mult:DI (reg:DI 1 dx [orig:749 _663 ] [749])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":245 349 {*muldi3_1}
     (nil))
(insn 1445 1444 1446 71 (set (reg:SI 1 dx [1960])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":245 86 {*movsi_internal}
     (nil))
(insn 1446 1445 1447 71 (set (reg:DI 1 dx [orig:751 _665 ] [751])
        (sign_extend:DI (reg:SI 1 dx [1960]))) "BNDLYR2.f":245 149 {*extendsidi2_rex64}
     (nil))
(insn 1447 1446 1448 71 (parallel [
            (set (reg:DI 1 dx [orig:752 _666 ] [752])
                (mult:DI (reg:DI 1 dx [orig:751 _665 ] [751])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":245 349 {*muldi3_1}
     (nil))
(insn 1448 1447 1449 71 (parallel [
            (set (reg:DI 2 cx [orig:753 _667 ] [753])
                (plus:DI (reg:DI 2 cx [orig:750 _664 ] [750])
                    (reg:DI 1 dx [orig:752 _666 ] [752])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":245 222 {*adddi_1}
     (nil))
(insn 1449 1448 1450 71 (set (reg:SI 1 dx [1961])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":245 86 {*movsi_internal}
     (nil))
(insn 1450 1449 1451 71 (set (reg:DI 1 dx [orig:754 _668 ] [754])
        (sign_extend:DI (reg:SI 1 dx [1961]))) "BNDLYR2.f":245 149 {*extendsidi2_rex64}
     (nil))
(insn 1451 1450 1452 71 (parallel [
            (set (reg:DI 1 dx [orig:755 _669 ] [755])
                (plus:DI (reg:DI 1 dx [orig:754 _668 ] [754])
                    (reg:DI 2 cx [orig:753 _667 ] [753])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":245 222 {*adddi_1}
     (nil))
(insn 1452 1451 1453 71 (parallel [
            (set (reg:DI 2 cx [orig:756 _670 ] [756])
                (plus:DI (reg:DI 1 dx [orig:755 _669 ] [755])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":245 222 {*adddi_1}
     (nil))
(insn 1453 1452 1454 71 (set (reg:SF 21 xmm0 [orig:757 _671 ] [757])
        (plus:SF (reg:SF 21 xmm0 [orig:748 _662 ] [748])
            (reg:SF 22 xmm1 [orig:738 _652 ] [738]))) "BNDLYR2.f":245 838 {*fop_sf_comm}
     (nil))
(insn 1454 1453 1455 71 (set (reg/f:DI 1 dx [1962])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [3 ubnd+0 S8 A64])) "BNDLYR2.f":245 85 {*movdi_internal}
     (nil))
(insn 1455 1454 1456 71 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:756 _670 ] [756])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1962])) [1 *ubnd_1546(D) S4 A32])
        (reg:SF 21 xmm0 [orig:757 _671 ] [757])) "BNDLYR2.f":245 131 {*movsf_internal}
     (nil))
(insn 1456 1455 1457 71 (set (reg:SI 1 dx [1963])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 lbnd+0 S4 A32])) "BNDLYR2.f":246 86 {*movsi_internal}
     (nil))
(insn 1457 1456 1458 71 (set (reg:DI 1 dx [orig:758 _672 ] [758])
        (sign_extend:DI (reg:SI 1 dx [1963]))) "BNDLYR2.f":246 149 {*extendsidi2_rex64}
     (nil))
(insn 1458 1457 1459 71 (parallel [
            (set (reg:DI 2 cx [orig:759 _673 ] [759])
                (mult:DI (reg:DI 1 dx [orig:758 _672 ] [758])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":246 349 {*muldi3_1}
     (nil))
(insn 1459 1458 1460 71 (set (reg:SI 1 dx [1964])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":246 86 {*movsi_internal}
     (nil))
(insn 1460 1459 1461 71 (set (reg:DI 1 dx [orig:760 _674 ] [760])
        (sign_extend:DI (reg:SI 1 dx [1964]))) "BNDLYR2.f":246 149 {*extendsidi2_rex64}
     (nil))
(insn 1461 1460 1462 71 (parallel [
            (set (reg:DI 1 dx [orig:761 _675 ] [761])
                (mult:DI (reg:DI 1 dx [orig:760 _674 ] [760])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":246 349 {*muldi3_1}
     (nil))
(insn 1462 1461 1463 71 (parallel [
            (set (reg:DI 2 cx [orig:762 _676 ] [762])
                (plus:DI (reg:DI 2 cx [orig:759 _673 ] [759])
                    (reg:DI 1 dx [orig:761 _675 ] [761])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":246 222 {*adddi_1}
     (nil))
(insn 1463 1462 1464 71 (set (reg:SI 1 dx [1965])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":246 86 {*movsi_internal}
     (nil))
(insn 1464 1463 1465 71 (set (reg:DI 1 dx [orig:763 _677 ] [763])
        (sign_extend:DI (reg:SI 1 dx [1965]))) "BNDLYR2.f":246 149 {*extendsidi2_rex64}
     (nil))
(insn 1465 1464 1466 71 (parallel [
            (set (reg:DI 1 dx [orig:764 _678 ] [764])
                (plus:DI (reg:DI 1 dx [orig:763 _677 ] [763])
                    (reg:DI 2 cx [orig:762 _676 ] [762])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":246 222 {*adddi_1}
     (nil))
(insn 1466 1465 1467 71 (parallel [
            (set (reg:DI 2 cx [orig:765 _679 ] [765])
                (plus:DI (reg:DI 1 dx [orig:764 _678 ] [764])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":246 222 {*adddi_1}
     (nil))
(insn 1467 1466 1468 71 (set (reg/f:DI 1 dx [1966])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [3 vbnd+0 S8 A64])) "BNDLYR2.f":246 85 {*movdi_internal}
     (nil))
(insn 1468 1467 1469 71 (set (reg:SF 22 xmm1 [orig:766 _680 ] [766])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:765 _679 ] [765])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1966])) [1 *vbnd_1548(D) S4 A32])) "BNDLYR2.f":246 131 {*movsf_internal}
     (nil))
(insn 1469 1468 1470 71 (set (reg:SI 1 dx [1967])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 l+0 S4 A32])) "BNDLYR2.f":246 86 {*movsi_internal}
     (nil))
(insn 1470 1469 1471 71 (set (reg:DI 1 dx [orig:767 _681 ] [767])
        (sign_extend:DI (reg:SI 1 dx [1967]))) "BNDLYR2.f":246 149 {*extendsidi2_rex64}
     (nil))
(insn 1471 1470 1472 71 (parallel [
            (set (reg:DI 2 cx [orig:768 _682 ] [768])
                (mult:DI (reg:DI 1 dx [orig:767 _681 ] [767])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":246 349 {*muldi3_1}
     (nil))
(insn 1472 1471 1473 71 (set (reg:SI 1 dx [1968])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":246 86 {*movsi_internal}
     (nil))
(insn 1473 1472 1474 71 (set (reg:DI 1 dx [orig:769 _683 ] [769])
        (sign_extend:DI (reg:SI 1 dx [1968]))) "BNDLYR2.f":246 149 {*extendsidi2_rex64}
     (nil))
(insn 1474 1473 1475 71 (parallel [
            (set (reg:DI 1 dx [orig:770 _684 ] [770])
                (mult:DI (reg:DI 1 dx [orig:769 _683 ] [769])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":246 349 {*muldi3_1}
     (nil))
(insn 1475 1474 1476 71 (parallel [
            (set (reg:DI 2 cx [orig:771 _685 ] [771])
                (plus:DI (reg:DI 2 cx [orig:768 _682 ] [768])
                    (reg:DI 1 dx [orig:770 _684 ] [770])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":246 222 {*adddi_1}
     (nil))
(insn 1476 1475 1477 71 (set (reg:SI 1 dx [1969])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":246 86 {*movsi_internal}
     (nil))
(insn 1477 1476 1478 71 (set (reg:DI 1 dx [orig:772 _686 ] [772])
        (sign_extend:DI (reg:SI 1 dx [1969]))) "BNDLYR2.f":246 149 {*extendsidi2_rex64}
     (nil))
(insn 1478 1477 1479 71 (parallel [
            (set (reg:DI 1 dx [orig:773 _687 ] [773])
                (plus:DI (reg:DI 1 dx [orig:772 _686 ] [772])
                    (reg:DI 2 cx [orig:771 _685 ] [771])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":246 222 {*adddi_1}
     (nil))
(insn 1479 1478 1480 71 (parallel [
            (set (reg:DI 2 cx [orig:774 _688 ] [774])
                (plus:DI (reg:DI 1 dx [orig:773 _687 ] [773])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":246 222 {*adddi_1}
     (nil))
(insn 1480 1479 1481 71 (set (reg/f:DI 1 dx [1970])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7fd1b2d48360 vrbls>)) "BNDLYR2.f":246 85 {*movdi_internal}
     (nil))
(insn 1481 1480 1482 71 (parallel [
            (set (reg:DI 2 cx [1971])
                (plus:DI (reg:DI 2 cx [orig:774 _688 ] [774])
                    (const_int 1214871 [0x128997])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":246 222 {*adddi_1}
     (nil))
(insn 1482 1481 1483 71 (set (reg:SF 21 xmm0 [orig:775 _689 ] [775])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [1971])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1970])) [1 vrbls.v S4 A32])) "BNDLYR2.f":246 131 {*movsf_internal}
     (nil))
(insn 1483 1482 1484 71 (set (reg:SF 21 xmm0 [orig:776 _690 ] [776])
        (mult:SF (reg:SF 21 xmm0 [orig:775 _689 ] [775])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -72 [0xffffffffffffffb8])) [1 dp+0 S4 A32]))) "BNDLYR2.f":246 838 {*fop_sf_comm}
     (nil))
(insn 1484 1483 1485 71 (set (reg:SI 1 dx [1972])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 lbnd+0 S4 A32])) "BNDLYR2.f":246 86 {*movsi_internal}
     (nil))
(insn 1485 1484 1486 71 (set (reg:DI 1 dx [orig:777 _691 ] [777])
        (sign_extend:DI (reg:SI 1 dx [1972]))) "BNDLYR2.f":246 149 {*extendsidi2_rex64}
     (nil))
(insn 1486 1485 1487 71 (parallel [
            (set (reg:DI 2 cx [orig:778 _692 ] [778])
                (mult:DI (reg:DI 1 dx [orig:777 _691 ] [777])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":246 349 {*muldi3_1}
     (nil))
(insn 1487 1486 1488 71 (set (reg:SI 1 dx [1973])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":246 86 {*movsi_internal}
     (nil))
(insn 1488 1487 1489 71 (set (reg:DI 1 dx [orig:779 _693 ] [779])
        (sign_extend:DI (reg:SI 1 dx [1973]))) "BNDLYR2.f":246 149 {*extendsidi2_rex64}
     (nil))
(insn 1489 1488 1490 71 (parallel [
            (set (reg:DI 1 dx [orig:780 _694 ] [780])
                (mult:DI (reg:DI 1 dx [orig:779 _693 ] [779])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":246 349 {*muldi3_1}
     (nil))
(insn 1490 1489 1491 71 (parallel [
            (set (reg:DI 2 cx [orig:781 _695 ] [781])
                (plus:DI (reg:DI 2 cx [orig:778 _692 ] [778])
                    (reg:DI 1 dx [orig:780 _694 ] [780])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":246 222 {*adddi_1}
     (nil))
(insn 1491 1490 1492 71 (set (reg:SI 1 dx [1974])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":246 86 {*movsi_internal}
     (nil))
(insn 1492 1491 1493 71 (set (reg:DI 1 dx [orig:782 _696 ] [782])
        (sign_extend:DI (reg:SI 1 dx [1974]))) "BNDLYR2.f":246 149 {*extendsidi2_rex64}
     (nil))
(insn 1493 1492 1494 71 (parallel [
            (set (reg:DI 1 dx [orig:783 _697 ] [783])
                (plus:DI (reg:DI 1 dx [orig:782 _696 ] [782])
                    (reg:DI 2 cx [orig:781 _695 ] [781])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":246 222 {*adddi_1}
     (nil))
(insn 1494 1493 1495 71 (parallel [
            (set (reg:DI 2 cx [orig:784 _698 ] [784])
                (plus:DI (reg:DI 1 dx [orig:783 _697 ] [783])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":246 222 {*adddi_1}
     (nil))
(insn 1495 1494 1496 71 (set (reg:SF 21 xmm0 [orig:785 _699 ] [785])
        (plus:SF (reg:SF 21 xmm0 [orig:776 _690 ] [776])
            (reg:SF 22 xmm1 [orig:766 _680 ] [766]))) "BNDLYR2.f":246 838 {*fop_sf_comm}
     (nil))
(insn 1496 1495 1497 71 (set (reg/f:DI 1 dx [1975])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [3 vbnd+0 S8 A64])) "BNDLYR2.f":246 85 {*movdi_internal}
     (nil))
(insn 1497 1496 1498 71 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:784 _698 ] [784])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1975])) [1 *vbnd_1548(D) S4 A32])
        (reg:SF 21 xmm0 [orig:785 _699 ] [785])) "BNDLYR2.f":246 131 {*movsf_internal}
     (nil))
;;  succ:       72 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1540

;; basic block 72, loop depth 0, maybe hot
;;  prev block 71, next block 160, flags: (RTL, MODIFIED)
;;  pred:       71 (FALLTHRU)
;;              69
;;              70
;; bb 72 artificial_defs: { }
;; bb 72 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1540
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 1498 1497 1499 72 51 (nil) [2 uses])
(note 1499 1498 1500 72 [bb 72] NOTE_INSN_BASIC_BLOCK)
(insn 1500 1499 3134 72 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":233 221 {*addsi_1}
     (nil))
(jump_insn 3134 1500 3135 72 (set (pc)
        (label_ref 1501)) "BNDLYR2.f":233 683 {jump}
     (nil)
 -> 1501)
;;  succ:       68 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1540

(barrier 3135 3134 3218)
;; basic block 160, loop depth 0, maybe hot
;;  prev block 72, next block 73, flags: (RTL, MODIFIED)
;;  pred:       68
;; bb 160 artificial_defs: { }
;; bb 160 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1540
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 3218 3135 3217 160 157 (nil) [1 uses])
(note 3217 3218 3219 160 [bb 160] NOTE_INSN_BASIC_BLOCK)
(insn 3219 3217 1504 160 (const_int 0 [0]) "BNDLYR2.f":243 718 {nop}
     (nil))
;;  succ:       73 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1540

;; basic block 73, loop depth 0, maybe hot
;;  prev block 160, next block 159, flags: (RTL, MODIFIED)
;;  pred:       160 [always]  (FALLTHRU)
;; bb 73 artificial_defs: { }
;; bb 73 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1540
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 1504 3219 1505 73 50 (nil) [0 uses])
(note 1505 1504 1506 73 [bb 73] NOTE_INSN_BASIC_BLOCK)
(insn 1506 1505 3136 73 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":232 221 {*addsi_1}
     (nil))
(jump_insn 3136 1506 3137 73 (set (pc)
        (label_ref 1507)) "BNDLYR2.f":232 683 {jump}
     (nil)
 -> 1507)
;;  succ:       66 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1540

(barrier 3137 3136 3215)
;; basic block 159, loop depth 0, maybe hot
;;  prev block 73, next block 74, flags: (RTL, MODIFIED)
;;  pred:       66
;; bb 159 artificial_defs: { }
;; bb 159 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 3215 3137 3214 159 156 (nil) [1 uses])
(note 3214 3215 3216 159 [bb 159] NOTE_INSN_BASIC_BLOCK)
(insn 3216 3214 1510 159 (const_int 0 [0]) "BNDLYR2.f":233 718 {nop}
     (nil))
;;  succ:       74 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 74, loop depth 0, maybe hot
;;  prev block 159, next block 158, flags: (RTL, MODIFIED)
;;  pred:       159 [always]  (FALLTHRU)
;; bb 74 artificial_defs: { }
;; bb 74 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 1510 3216 1511 74 49 (nil) [0 uses])
(note 1511 1510 1512 74 [bb 74] NOTE_INSN_BASIC_BLOCK)
(insn 1512 1511 3138 74 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -36 [0xffffffffffffffdc])) [2 l+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -36 [0xffffffffffffffdc])) [2 l+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":230 221 {*addsi_1}
     (nil))
(jump_insn 3138 1512 3139 74 (set (pc)
        (label_ref 1513)) "BNDLYR2.f":230 683 {jump}
     (nil)
 -> 1513)
;;  succ:       64 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 3139 3138 3212)
;; basic block 158, loop depth 0, maybe hot
;;  prev block 74, next block 75, flags: (RTL, MODIFIED)
;;  pred:       64
;; bb 158 artificial_defs: { }
;; bb 158 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 3212 3139 3211 158 155 (nil) [1 uses])
(note 3211 3212 3213 158 [bb 158] NOTE_INSN_BASIC_BLOCK)
(insn 3213 3211 1516 158 (const_int 0 [0]) "BNDLYR2.f":232 718 {nop}
     (nil))
;;  succ:       75 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 75, loop depth 0, maybe hot
;;  prev block 158, next block 151, flags: (RTL, MODIFIED)
;;  pred:       158 [always]  (FALLTHRU)
;; bb 75 artificial_defs: { }
;; bb 75 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 1516 3213 1517 75 48 (nil) [0 uses])
(note 1517 1516 1518 75 [bb 75] NOTE_INSN_BASIC_BLOCK)
(insn 1518 1517 3140 75 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -40 [0xffffffffffffffd8])) [2 lbnd+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -40 [0xffffffffffffffd8])) [2 lbnd+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":137 221 {*addsi_1}
     (nil))
(jump_insn 3140 1518 3141 75 (set (pc)
        (label_ref 1519)) "BNDLYR2.f":137 683 {jump}
     (nil)
 -> 1519)
;;  succ:       18 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 3141 3140 3191)
;; basic block 151, loop depth 0, maybe hot
;;  prev block 75, next block 76, flags: (RTL, MODIFIED)
;;  pred:       18
;; bb 151 artificial_defs: { }
;; bb 151 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 3191 3141 3190 151 148 (nil) [1 uses])
(note 3190 3191 3192 151 [bb 151] NOTE_INSN_BASIC_BLOCK)
(insn 3192 3190 1522 151 (const_int 0 [0]) "BNDLYR2.f":230 718 {nop}
     (nil))
;;  succ:       76 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 76, loop depth 0, maybe hot
;;  prev block 151, next block 77, flags: (RTL, MODIFIED)
;;  pred:       151 [always]  (FALLTHRU)
;; bb 76 artificial_defs: { }
;; bb 76 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 1522 3192 1523 76 12 (nil) [0 uses])
(note 1523 1522 1524 76 [bb 76] NOTE_INSN_BASIC_BLOCK)
(insn 1524 1523 1923 76 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 lbnd+0 S4 A32])
        (const_int 1 [0x1])) "BNDLYR2.f":256 86 {*movsi_internal}
     (nil))
;;  succ:       77 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 77, loop depth 0, maybe hot
;;  prev block 76, next block 78, flags: (RTL, MODIFIED)
;;  pred:       76 (FALLTHRU)
;;              96 [always] 
;; bb 77 artificial_defs: { }
;; bb 77 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1543 1976
(code_label 1923 1524 1525 77 71 (nil) [1 uses])
(note 1525 1923 1526 77 [bb 77] NOTE_INSN_BASIC_BLOCK)
(insn 1526 1525 1527 77 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -40 [0xffffffffffffffd8])) [2 lbnd+0 S4 A32])
            (const_int 6 [0x6]))) "BNDLYR2.f":256 11 {*cmpsi_1}
     (nil))
(insn 1527 1526 1528 77 (set (reg:QI 0 ax [1976])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "BNDLYR2.f":256 678 {*setcc_qi}
     (nil))
(insn 1528 1527 1529 77 (set (reg:SI 0 ax [orig:1543 _1632 ] [1543])
        (zero_extend:SI (reg:QI 0 ax [1976]))) "BNDLYR2.f":256 140 {*zero_extendqisi2}
     (nil))
(insn 1529 1528 1530 77 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:1543 _1632 ] [1543])
            (const_int 0 [0]))) "BNDLYR2.f":256 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1530 1529 1531 77 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 3221)
            (pc))) "BNDLYR2.f":256 682 {*jcc}
     (nil)
 -> 3221)
;;  succ:       161
;;              78 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 78, loop depth 0, maybe hot
;;  prev block 77, next block 79, flags: (RTL, MODIFIED)
;;  pred:       77 (FALLTHRU)
;; bb 78 artificial_defs: { }
;; bb 78 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 1544 1545
(note 1531 1530 1532 78 [bb 78] NOTE_INSN_BASIC_BLOCK)
(insn 1532 1531 1533 78 (set (reg:SI 1 dx [orig:1544 _1633 ] [1544])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7fd1b2d3cea0 parallel>)
                    (const_int 8 [0x8]))) [2 parallel.jsta+0 S4 A64])) "BNDLYR2.f":257 86 {*movsi_internal}
     (nil))
(insn 1533 1532 1534 78 (set (reg:SI 0 ax [orig:1545 _1634 ] [1545])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7fd1b2d3cea0 parallel>)
                    (const_int 12 [0xc]))) [2 parallel.jend+0 S4 A32])) "BNDLYR2.f":257 86 {*movsi_internal}
     (nil))
(insn 1534 1533 1792 78 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])
        (reg:SI 1 dx [orig:1544 _1633 ] [1544])) "BNDLYR2.f":257 86 {*movsi_internal}
     (nil))
;;  succ:       79 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1545

;; basic block 79, loop depth 0, maybe hot
;;  prev block 78, next block 80, flags: (RTL, MODIFIED)
;;  pred:       78 (FALLTHRU)
;;              86 [always] 
;; bb 79 artificial_defs: { }
;; bb 79 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1545
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1545
;; lr  def 	 17 [flags] 1546 1977
(code_label 1792 1534 1535 79 64 (nil) [1 uses])
(note 1535 1792 1536 79 [bb 79] NOTE_INSN_BASIC_BLOCK)
(insn 1536 1535 1537 79 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])
            (reg:SI 0 ax [orig:1545 _1634 ] [1545]))) "BNDLYR2.f":257 11 {*cmpsi_1}
     (nil))
(insn 1537 1536 1538 79 (set (reg:QI 1 dx [1977])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "BNDLYR2.f":257 678 {*setcc_qi}
     (nil))
(insn 1538 1537 1539 79 (set (reg:SI 1 dx [orig:1546 _1636 ] [1546])
        (zero_extend:SI (reg:QI 1 dx [1977]))) "BNDLYR2.f":257 140 {*zero_extendqisi2}
     (nil))
(insn 1539 1538 1540 79 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1546 _1636 ] [1546])
            (const_int 0 [0]))) "BNDLYR2.f":257 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1540 1539 1541 79 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 3224)
            (pc))) "BNDLYR2.f":257 682 {*jcc}
     (nil)
 -> 3224)
;;  succ:       162
;;              80 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1545

;; basic block 80, loop depth 0, maybe hot
;;  prev block 79, next block 81, flags: (RTL, MODIFIED)
;;  pred:       79 (FALLTHRU)
;; bb 80 artificial_defs: { }
;; bb 80 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1545
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 1541 1540 1542 80 [bb 80] NOTE_INSN_BASIC_BLOCK)
(insn 1542 1541 1786 80 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])
        (const_int 1 [0x1])) "BNDLYR2.f":258 86 {*movsi_internal}
     (nil))
;;  succ:       81 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1545

;; basic block 81, loop depth 0, maybe hot
;;  prev block 80, next block 82, flags: (RTL, MODIFIED)
;;  pred:       80 (FALLTHRU)
;;              85 [always] 
;; bb 81 artificial_defs: { }
;; bb 81 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1545
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1547 1978
(code_label 1786 1542 1543 81 63 (nil) [1 uses])
(note 1543 1786 1544 81 [bb 81] NOTE_INSN_BASIC_BLOCK)
(insn 1544 1543 1545 81 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])
            (const_int 119 [0x77]))) "BNDLYR2.f":258 11 {*cmpsi_1}
     (nil))
(insn 1545 1544 1546 81 (set (reg:QI 1 dx [1978])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "BNDLYR2.f":258 678 {*setcc_qi}
     (nil))
(insn 1546 1545 1547 81 (set (reg:SI 1 dx [orig:1547 _1638 ] [1547])
        (zero_extend:SI (reg:QI 1 dx [1978]))) "BNDLYR2.f":258 140 {*zero_extendqisi2}
     (nil))
(insn 1547 1546 1548 81 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1547 _1638 ] [1547])
            (const_int 0 [0]))) "BNDLYR2.f":258 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1548 1547 1549 81 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 3227)
            (pc))) "BNDLYR2.f":258 682 {*jcc}
     (nil)
 -> 3227)
;;  succ:       163
;;              82 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1545

;; basic block 82, loop depth 0, maybe hot
;;  prev block 81, next block 83, flags: (RTL, MODIFIED)
;;  pred:       81 (FALLTHRU)
;; bb 82 artificial_defs: { }
;; bb 82 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1545
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 786 787 788 789 790 791 792 793 794 1979 1980 1981 1982 1983
(note 1549 1548 1550 82 [bb 82] NOTE_INSN_BASIC_BLOCK)
(insn 1550 1549 1551 82 (set (reg:SI 1 dx [1979])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 lbnd+0 S4 A32])) "BNDLYR2.f":259 86 {*movsi_internal}
     (nil))
(insn 1551 1550 1552 82 (set (reg:DI 1 dx [orig:786 _700 ] [786])
        (sign_extend:DI (reg:SI 1 dx [1979]))) "BNDLYR2.f":259 149 {*extendsidi2_rex64}
     (nil))
(insn 1552 1551 1553 82 (parallel [
            (set (reg:DI 2 cx [orig:787 _701 ] [787])
                (mult:DI (reg:DI 1 dx [orig:786 _700 ] [786])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":259 349 {*muldi3_1}
     (nil))
(insn 1553 1552 1554 82 (set (reg:SI 1 dx [1980])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":259 86 {*movsi_internal}
     (nil))
(insn 1554 1553 1555 82 (set (reg:DI 1 dx [orig:788 _702 ] [788])
        (sign_extend:DI (reg:SI 1 dx [1980]))) "BNDLYR2.f":259 149 {*extendsidi2_rex64}
     (nil))
(insn 1555 1554 1556 82 (parallel [
            (set (reg:DI 1 dx [orig:789 _703 ] [789])
                (mult:DI (reg:DI 1 dx [orig:788 _702 ] [788])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":259 349 {*muldi3_1}
     (nil))
(insn 1556 1555 1557 82 (parallel [
            (set (reg:DI 2 cx [orig:790 _704 ] [790])
                (plus:DI (reg:DI 2 cx [orig:787 _701 ] [787])
                    (reg:DI 1 dx [orig:789 _703 ] [789])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":259 222 {*adddi_1}
     (nil))
(insn 1557 1556 1558 82 (set (reg:SI 1 dx [1981])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":259 86 {*movsi_internal}
     (nil))
(insn 1558 1557 1559 82 (set (reg:DI 1 dx [orig:791 _705 ] [791])
        (sign_extend:DI (reg:SI 1 dx [1981]))) "BNDLYR2.f":259 149 {*extendsidi2_rex64}
     (nil))
(insn 1559 1558 1560 82 (parallel [
            (set (reg:DI 1 dx [orig:792 _706 ] [792])
                (plus:DI (reg:DI 1 dx [orig:791 _705 ] [791])
                    (reg:DI 2 cx [orig:790 _704 ] [790])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":259 222 {*adddi_1}
     (nil))
(insn 1560 1559 1561 82 (parallel [
            (set (reg:DI 2 cx [orig:793 _707 ] [793])
                (plus:DI (reg:DI 1 dx [orig:792 _706 ] [792])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":259 222 {*adddi_1}
     (nil))
(insn 1561 1560 1562 82 (set (reg/f:DI 1 dx [1982])
        (symbol_ref:DI ("psum.4208") [flags 0x202]  <var_decl 0x7fd1b2d4d480 psum>)) "BNDLYR2.f":259 85 {*movdi_internal}
     (nil))
(insn 1562 1561 1563 82 (set (reg:SF 21 xmm0 [orig:794 _708 ] [794])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:793 _707 ] [793])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1982])) [1 psum S4 A32])) "BNDLYR2.f":259 131 {*movsf_internal}
     (nil))
(insn 1563 1562 1564 82 (set (reg:SF 22 xmm1 [1983])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0  S4 A32])) "BNDLYR2.f":259 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 1564 1563 1565 82 (set (reg:CCFP 17 flags)
        (unspec:CCFP [
                (compare:CCFP (reg:SF 21 xmm0 [orig:794 _708 ] [794])
                    (reg:SF 22 xmm1 [1983]))
            ] UNSPEC_NOTRAP)) "BNDLYR2.f":259 54 {*cmpiusf}
     (nil))
(jump_insn 1565 1564 3041 82 (set (pc)
        (if_then_else (unordered (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 3081)
            (pc))) "BNDLYR2.f":259 682 {*jcc}
     (nil)
 -> 3081)
;;  succ:       84
;;              83 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 794 1545

;; basic block 83, loop depth 0, maybe hot
;;  prev block 82, next block 84, flags: (RTL, MODIFIED)
;;  pred:       82 (FALLTHRU)
;; bb 83 artificial_defs: { }
;; bb 83 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 794 1545
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 794
;; lr  def 	 17 [flags] 1984
(note 3041 1565 1566 83 [bb 83] NOTE_INSN_BASIC_BLOCK)
(insn 1566 3041 1567 83 (set (reg:SF 22 xmm1 [1984])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0  S4 A32])) "BNDLYR2.f":259 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 1567 1566 1568 83 (set (reg:CCFP 17 flags)
        (unspec:CCFP [
                (compare:CCFP (reg:SF 21 xmm0 [orig:794 _708 ] [794])
                    (reg:SF 22 xmm1 [1984]))
            ] UNSPEC_NOTRAP)) "BNDLYR2.f":259 54 {*cmpiusf}
     (nil))
(jump_insn 1568 1567 3081 83 (set (pc)
        (if_then_else (uneq (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1783)
            (pc))) "BNDLYR2.f":259 682 {*jcc}
     (nil)
 -> 1783)
;;  succ:       84 (FALLTHRU)
;;              85
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1545

;; basic block 84, loop depth 0, maybe hot
;;  prev block 83, next block 85, flags: (RTL, MODIFIED)
;;  pred:       83 (FALLTHRU)
;;              82
;; bb 84 artificial_defs: { }
;; bb 84 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1545
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 795 796 797 798 799 800 801 802 803 804 805 806 807 808 809 810 811 812 813 814 815 816 817 818 819 820 821 822 823 824 825 826 827 828 829 830 831 832 833 834 835 836 837 838 839 840 841 842 843 844 845 846 847 848 849 850 851 852 853 854 855 856 857 858 859 860 861 862 863 864 865 866 867 868 869 870 871 872 873 874 875 876 877 878 879 880 881 882 883 884 885 886 887 888 889 890 891 892 893 894 895 896 897 898 899 900 901 902 903 904 905 906 907 908 909 910 911 912 913 914 915 916 917 918 919 920 921 922 923 924 925 926 927 928 929 930 931 932 933 934 1985 1986 1987 1988 1989 1990 1991 1992 1993 1994 1995 1996 1997 1998 1999 2000 2001 2002 2003 2004 2005 2006 2007 2008 2009 2010 2011 2012 2013 2014 2015 2016 2017 2018 2019 2020 2021 2022 2023 2024 2025 2026 2027 2028 2029 2030 2031 2032 2033 2034 2035 2036 2037 2038 2039 2040 2041 2042 2043 2044 2045 2046 2047
(code_label 3081 1568 1572 84 122 (nil) [1 uses])
(note 1572 3081 1573 84 [bb 84] NOTE_INSN_BASIC_BLOCK)
(insn 1573 1572 1574 84 (set (reg:SI 1 dx [1985])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 lbnd+0 S4 A32])) "BNDLYR2.f":260 86 {*movsi_internal}
     (nil))
(insn 1574 1573 1575 84 (set (reg:DI 1 dx [orig:795 _709 ] [795])
        (sign_extend:DI (reg:SI 1 dx [1985]))) "BNDLYR2.f":260 149 {*extendsidi2_rex64}
     (nil))
(insn 1575 1574 1576 84 (parallel [
            (set (reg:DI 2 cx [orig:796 _710 ] [796])
                (mult:DI (reg:DI 1 dx [orig:795 _709 ] [795])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":260 349 {*muldi3_1}
     (nil))
(insn 1576 1575 1577 84 (set (reg:SI 1 dx [1986])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":260 86 {*movsi_internal}
     (nil))
(insn 1577 1576 1578 84 (set (reg:DI 1 dx [orig:797 _711 ] [797])
        (sign_extend:DI (reg:SI 1 dx [1986]))) "BNDLYR2.f":260 149 {*extendsidi2_rex64}
     (nil))
(insn 1578 1577 1579 84 (parallel [
            (set (reg:DI 1 dx [orig:798 _712 ] [798])
                (mult:DI (reg:DI 1 dx [orig:797 _711 ] [797])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":260 349 {*muldi3_1}
     (nil))
(insn 1579 1578 1580 84 (parallel [
            (set (reg:DI 2 cx [orig:799 _713 ] [799])
                (plus:DI (reg:DI 2 cx [orig:796 _710 ] [796])
                    (reg:DI 1 dx [orig:798 _712 ] [798])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":260 222 {*adddi_1}
     (nil))
(insn 1580 1579 1581 84 (set (reg:SI 1 dx [1987])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":260 86 {*movsi_internal}
     (nil))
(insn 1581 1580 1582 84 (set (reg:DI 1 dx [orig:800 _714 ] [800])
        (sign_extend:DI (reg:SI 1 dx [1987]))) "BNDLYR2.f":260 149 {*extendsidi2_rex64}
     (nil))
(insn 1582 1581 1583 84 (parallel [
            (set (reg:DI 1 dx [orig:801 _715 ] [801])
                (plus:DI (reg:DI 1 dx [orig:800 _714 ] [800])
                    (reg:DI 2 cx [orig:799 _713 ] [799])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":260 222 {*adddi_1}
     (nil))
(insn 1583 1582 1584 84 (parallel [
            (set (reg:DI 2 cx [orig:802 _716 ] [802])
                (plus:DI (reg:DI 1 dx [orig:801 _715 ] [801])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":260 222 {*adddi_1}
     (nil))
(insn 1584 1583 1585 84 (set (reg/f:DI 1 dx [1988])
        (symbol_ref:DI ("psum.4208") [flags 0x202]  <var_decl 0x7fd1b2d4d480 psum>)) "BNDLYR2.f":260 85 {*movdi_internal}
     (nil))
(insn 1585 1584 1586 84 (set (reg:SF 22 xmm1 [orig:803 _717 ] [803])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:802 _716 ] [802])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1988])) [1 psum S4 A32])) "BNDLYR2.f":260 131 {*movsf_internal}
     (nil))
(insn 1586 1585 1587 84 (set (reg:SF 21 xmm0 [1990])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC4") [flags 0x2]) [0  S4 A32])) "BNDLYR2.f":260 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 1587 1586 1588 84 (set (reg:SF 21 xmm0 [1989])
        (div:SF (reg:SF 21 xmm0 [1990])
            (reg:SF 22 xmm1 [orig:803 _717 ] [803]))) "BNDLYR2.f":260 841 {*fop_sf_1}
     (nil))
(insn 1588 1587 1589 84 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [1 rpsum+0 S4 A32])
        (reg:SF 21 xmm0 [1989])) "BNDLYR2.f":260 131 {*movsf_internal}
     (nil))
(insn 1589 1588 1590 84 (set (reg:SI 1 dx [1991])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 lbnd+0 S4 A32])) "BNDLYR2.f":261 86 {*movsi_internal}
     (nil))
(insn 1590 1589 1591 84 (set (reg:DI 1 dx [orig:804 _718 ] [804])
        (sign_extend:DI (reg:SI 1 dx [1991]))) "BNDLYR2.f":261 149 {*extendsidi2_rex64}
     (nil))
(insn 1591 1590 1592 84 (parallel [
            (set (reg:DI 2 cx [orig:805 _719 ] [805])
                (mult:DI (reg:DI 1 dx [orig:804 _718 ] [804])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":261 349 {*muldi3_1}
     (nil))
(insn 1592 1591 1593 84 (set (reg:SI 1 dx [1992])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":261 86 {*movsi_internal}
     (nil))
(insn 1593 1592 1594 84 (set (reg:DI 1 dx [orig:806 _720 ] [806])
        (sign_extend:DI (reg:SI 1 dx [1992]))) "BNDLYR2.f":261 149 {*extendsidi2_rex64}
     (nil))
(insn 1594 1593 1595 84 (parallel [
            (set (reg:DI 1 dx [orig:807 _721 ] [807])
                (mult:DI (reg:DI 1 dx [orig:806 _720 ] [806])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":261 349 {*muldi3_1}
     (nil))
(insn 1595 1594 1596 84 (parallel [
            (set (reg:DI 2 cx [orig:808 _722 ] [808])
                (plus:DI (reg:DI 2 cx [orig:805 _719 ] [805])
                    (reg:DI 1 dx [orig:807 _721 ] [807])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":261 222 {*adddi_1}
     (nil))
(insn 1596 1595 1597 84 (set (reg:SI 1 dx [1993])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":261 86 {*movsi_internal}
     (nil))
(insn 1597 1596 1598 84 (set (reg:DI 1 dx [orig:809 _723 ] [809])
        (sign_extend:DI (reg:SI 1 dx [1993]))) "BNDLYR2.f":261 149 {*extendsidi2_rex64}
     (nil))
(insn 1598 1597 1599 84 (parallel [
            (set (reg:DI 1 dx [orig:810 _724 ] [810])
                (plus:DI (reg:DI 1 dx [orig:809 _723 ] [809])
                    (reg:DI 2 cx [orig:808 _722 ] [808])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":261 222 {*adddi_1}
     (nil))
(insn 1599 1598 1600 84 (parallel [
            (set (reg:DI 2 cx [orig:811 _725 ] [811])
                (plus:DI (reg:DI 1 dx [orig:810 _724 ] [810])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":261 222 {*adddi_1}
     (nil))
(insn 1600 1599 1601 84 (set (reg/f:DI 1 dx [1994])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 32 [0x20])) [4 lvlbnd+0 S8 A64])) "BNDLYR2.f":261 85 {*movdi_internal}
     (nil))
(insn 1601 1600 1602 84 (set (reg:SI 1 dx [orig:812 _726 ] [812])
        (mem:SI (plus:DI (mult:DI (reg:DI 2 cx [orig:811 _725 ] [811])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1994])) [2 *lvlbnd_1552(D) S4 A32])) "BNDLYR2.f":261 86 {*movsi_internal}
     (nil))
(insn 1602 1601 1603 84 (set (reg:SF 21 xmm0 [orig:813 _727 ] [813])
        (float:SF (reg:SI 1 dx [orig:812 _726 ] [812]))) "BNDLYR2.f":261 203 {*floatsisf2_mixed}
     (nil))
(insn 1603 1602 1604 84 (set (reg:SI 1 dx [1995])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 lbnd+0 S4 A32])) "BNDLYR2.f":261 86 {*movsi_internal}
     (nil))
(insn 1604 1603 1605 84 (set (reg:DI 1 dx [orig:814 _728 ] [814])
        (sign_extend:DI (reg:SI 1 dx [1995]))) "BNDLYR2.f":261 149 {*extendsidi2_rex64}
     (nil))
(insn 1605 1604 1606 84 (parallel [
            (set (reg:DI 2 cx [orig:815 _729 ] [815])
                (mult:DI (reg:DI 1 dx [orig:814 _728 ] [814])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":261 349 {*muldi3_1}
     (nil))
(insn 1606 1605 1607 84 (set (reg:SI 1 dx [1996])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":261 86 {*movsi_internal}
     (nil))
(insn 1607 1606 1608 84 (set (reg:DI 1 dx [orig:816 _730 ] [816])
        (sign_extend:DI (reg:SI 1 dx [1996]))) "BNDLYR2.f":261 149 {*extendsidi2_rex64}
     (nil))
(insn 1608 1607 1609 84 (parallel [
            (set (reg:DI 1 dx [orig:817 _731 ] [817])
                (mult:DI (reg:DI 1 dx [orig:816 _730 ] [816])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":261 349 {*muldi3_1}
     (nil))
(insn 1609 1608 1610 84 (parallel [
            (set (reg:DI 2 cx [orig:818 _732 ] [818])
                (plus:DI (reg:DI 2 cx [orig:815 _729 ] [815])
                    (reg:DI 1 dx [orig:817 _731 ] [817])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":261 222 {*adddi_1}
     (nil))
(insn 1610 1609 1611 84 (set (reg:SI 1 dx [1997])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":261 86 {*movsi_internal}
     (nil))
(insn 1611 1610 1612 84 (set (reg:DI 1 dx [orig:819 _733 ] [819])
        (sign_extend:DI (reg:SI 1 dx [1997]))) "BNDLYR2.f":261 149 {*extendsidi2_rex64}
     (nil))
(insn 1612 1611 1613 84 (parallel [
            (set (reg:DI 1 dx [orig:820 _734 ] [820])
                (plus:DI (reg:DI 1 dx [orig:819 _733 ] [819])
                    (reg:DI 2 cx [orig:818 _732 ] [818])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":261 222 {*adddi_1}
     (nil))
(insn 1613 1612 1614 84 (parallel [
            (set (reg:DI 2 cx [orig:821 _735 ] [821])
                (plus:DI (reg:DI 1 dx [orig:820 _734 ] [820])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":261 222 {*adddi_1}
     (nil))
(insn 1614 1613 1615 84 (set (reg/f:DI 1 dx [1998])
        (symbol_ref:DI ("nsum.4200") [flags 0x202]  <var_decl 0x7fd1b2d4d120 nsum>)) "BNDLYR2.f":261 85 {*movdi_internal}
     (nil))
(insn 1615 1614 1616 84 (set (reg:SF 22 xmm1 [orig:822 _736 ] [822])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:821 _735 ] [821])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1998])) [1 nsum S4 A32])) "BNDLYR2.f":261 131 {*movsf_internal}
     (nil))
(insn 1616 1615 1617 84 (set (reg:SF 21 xmm0 [orig:823 _737 ] [823])
        (div:SF (reg:SF 21 xmm0 [orig:813 _727 ] [813])
            (reg:SF 22 xmm1 [orig:822 _736 ] [822]))) "BNDLYR2.f":261 841 {*fop_sf_1}
     (nil))
(insn 1617 1616 1618 84 (set (reg:SI 1 dx [1999])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 lbnd+0 S4 A32])) "BNDLYR2.f":261 86 {*movsi_internal}
     (nil))
(insn 1618 1617 1619 84 (set (reg:DI 1 dx [orig:824 _738 ] [824])
        (sign_extend:DI (reg:SI 1 dx [1999]))) "BNDLYR2.f":261 149 {*extendsidi2_rex64}
     (nil))
(insn 1619 1618 1620 84 (parallel [
            (set (reg:DI 2 cx [orig:825 _739 ] [825])
                (mult:DI (reg:DI 1 dx [orig:824 _738 ] [824])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":261 349 {*muldi3_1}
     (nil))
(insn 1620 1619 1621 84 (set (reg:SI 1 dx [2000])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":261 86 {*movsi_internal}
     (nil))
(insn 1621 1620 1622 84 (set (reg:DI 1 dx [orig:826 _740 ] [826])
        (sign_extend:DI (reg:SI 1 dx [2000]))) "BNDLYR2.f":261 149 {*extendsidi2_rex64}
     (nil))
(insn 1622 1621 1623 84 (parallel [
            (set (reg:DI 1 dx [orig:827 _741 ] [827])
                (mult:DI (reg:DI 1 dx [orig:826 _740 ] [826])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":261 349 {*muldi3_1}
     (nil))
(insn 1623 1622 1624 84 (parallel [
            (set (reg:DI 2 cx [orig:828 _742 ] [828])
                (plus:DI (reg:DI 2 cx [orig:825 _739 ] [825])
                    (reg:DI 1 dx [orig:827 _741 ] [827])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":261 222 {*adddi_1}
     (nil))
(insn 1624 1623 1625 84 (set (reg:SI 1 dx [2001])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":261 86 {*movsi_internal}
     (nil))
(insn 1625 1624 1626 84 (set (reg:DI 1 dx [orig:829 _743 ] [829])
        (sign_extend:DI (reg:SI 1 dx [2001]))) "BNDLYR2.f":261 149 {*extendsidi2_rex64}
     (nil))
(insn 1626 1625 1627 84 (parallel [
            (set (reg:DI 1 dx [orig:830 _744 ] [830])
                (plus:DI (reg:DI 1 dx [orig:829 _743 ] [829])
                    (reg:DI 2 cx [orig:828 _742 ] [828])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":261 222 {*adddi_1}
     (nil))
(insn 1627 1626 1628 84 (parallel [
            (set (reg:DI 4 si [orig:831 _745 ] [831])
                (plus:DI (reg:DI 1 dx [orig:830 _744 ] [830])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":261 222 {*adddi_1}
     (nil))
(insn 1628 1627 1629 84 (set (reg:SI 2 cx [orig:832 _746 ] [832])
        (fix:SI (reg:SF 21 xmm0 [orig:823 _737 ] [823]))) "BNDLYR2.f":261 174 {fix_truncsfsi_sse}
     (nil))
(insn 1629 1628 1630 84 (set (reg/f:DI 1 dx [2002])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 32 [0x20])) [4 lvlbnd+0 S8 A64])) "BNDLYR2.f":261 85 {*movdi_internal}
     (nil))
(insn 1630 1629 1631 84 (set (mem:SI (plus:DI (mult:DI (reg:DI 4 si [orig:831 _745 ] [831])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [2002])) [2 *lvlbnd_1552(D) S4 A32])
        (reg:SI 2 cx [orig:832 _746 ] [832])) "BNDLYR2.f":261 86 {*movsi_internal}
     (nil))
(insn 1631 1630 1632 84 (set (reg:SI 1 dx [2003])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 lbnd+0 S4 A32])) "BNDLYR2.f":262 86 {*movsi_internal}
     (nil))
(insn 1632 1631 1633 84 (set (reg:DI 1 dx [orig:833 _747 ] [833])
        (sign_extend:DI (reg:SI 1 dx [2003]))) "BNDLYR2.f":262 149 {*extendsidi2_rex64}
     (nil))
(insn 1633 1632 1634 84 (parallel [
            (set (reg:DI 2 cx [orig:834 _748 ] [834])
                (mult:DI (reg:DI 1 dx [orig:833 _747 ] [833])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":262 349 {*muldi3_1}
     (nil))
(insn 1634 1633 1635 84 (set (reg:SI 1 dx [2004])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":262 86 {*movsi_internal}
     (nil))
(insn 1635 1634 1636 84 (set (reg:DI 1 dx [orig:835 _749 ] [835])
        (sign_extend:DI (reg:SI 1 dx [2004]))) "BNDLYR2.f":262 149 {*extendsidi2_rex64}
     (nil))
(insn 1636 1635 1637 84 (parallel [
            (set (reg:DI 1 dx [orig:836 _750 ] [836])
                (mult:DI (reg:DI 1 dx [orig:835 _749 ] [835])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":262 349 {*muldi3_1}
     (nil))
(insn 1637 1636 1638 84 (parallel [
            (set (reg:DI 2 cx [orig:837 _751 ] [837])
                (plus:DI (reg:DI 2 cx [orig:834 _748 ] [834])
                    (reg:DI 1 dx [orig:836 _750 ] [836])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":262 222 {*adddi_1}
     (nil))
(insn 1638 1637 1639 84 (set (reg:SI 1 dx [2005])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":262 86 {*movsi_internal}
     (nil))
(insn 1639 1638 1640 84 (set (reg:DI 1 dx [orig:838 _752 ] [838])
        (sign_extend:DI (reg:SI 1 dx [2005]))) "BNDLYR2.f":262 149 {*extendsidi2_rex64}
     (nil))
(insn 1640 1639 1641 84 (parallel [
            (set (reg:DI 1 dx [orig:839 _753 ] [839])
                (plus:DI (reg:DI 1 dx [orig:838 _752 ] [838])
                    (reg:DI 2 cx [orig:837 _751 ] [837])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":262 222 {*adddi_1}
     (nil))
(insn 1641 1640 1642 84 (parallel [
            (set (reg:DI 2 cx [orig:840 _754 ] [840])
                (plus:DI (reg:DI 1 dx [orig:839 _753 ] [839])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":262 222 {*adddi_1}
     (nil))
(insn 1642 1641 1643 84 (set (reg/f:DI 1 dx [2006])
        (symbol_ref:DI ("pbint.4202") [flags 0x202]  <var_decl 0x7fd1b2d4d1b0 pbint>)) "BNDLYR2.f":262 85 {*movdi_internal}
     (nil))
(insn 1643 1642 1644 84 (set (reg:SF 22 xmm1 [orig:841 _755 ] [841])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:840 _754 ] [840])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [2006])) [1 pbint S4 A32])) "BNDLYR2.f":262 131 {*movsf_internal}
     (nil))
(insn 1644 1643 1645 84 (set (reg:SI 1 dx [2007])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 lbnd+0 S4 A32])) "BNDLYR2.f":262 86 {*movsi_internal}
     (nil))
(insn 1645 1644 1646 84 (parallel [
            (set (reg:SI 1 dx [orig:842 _756 ] [842])
                (plus:SI (reg:SI 1 dx [2007])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":262 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -24 [0xffffffffffffffe8])) [2 lbnd+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 1646 1645 1647 84 (set (reg:DI 1 dx [orig:843 _757 ] [843])
        (sign_extend:DI (reg:SI 1 dx [orig:842 _756 ] [842]))) "BNDLYR2.f":262 149 {*extendsidi2_rex64}
     (nil))
(insn 1647 1646 1648 84 (parallel [
            (set (reg:DI 2 cx [orig:844 _758 ] [844])
                (mult:DI (reg:DI 1 dx [orig:843 _757 ] [843])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":262 349 {*muldi3_1}
     (nil))
(insn 1648 1647 1649 84 (set (reg:SI 1 dx [2008])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":262 86 {*movsi_internal}
     (nil))
(insn 1649 1648 1650 84 (set (reg:DI 1 dx [orig:845 _759 ] [845])
        (sign_extend:DI (reg:SI 1 dx [2008]))) "BNDLYR2.f":262 149 {*extendsidi2_rex64}
     (nil))
(insn 1650 1649 1651 84 (parallel [
            (set (reg:DI 1 dx [orig:846 _760 ] [846])
                (mult:DI (reg:DI 1 dx [orig:845 _759 ] [845])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":262 349 {*muldi3_1}
     (nil))
(insn 1651 1650 1652 84 (parallel [
            (set (reg:DI 2 cx [orig:847 _761 ] [847])
                (plus:DI (reg:DI 2 cx [orig:844 _758 ] [844])
                    (reg:DI 1 dx [orig:846 _760 ] [846])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":262 222 {*adddi_1}
     (nil))
(insn 1652 1651 1653 84 (set (reg:SI 1 dx [2009])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":262 86 {*movsi_internal}
     (nil))
(insn 1653 1652 1654 84 (set (reg:DI 1 dx [orig:848 _762 ] [848])
        (sign_extend:DI (reg:SI 1 dx [2009]))) "BNDLYR2.f":262 149 {*extendsidi2_rex64}
     (nil))
(insn 1654 1653 1655 84 (parallel [
            (set (reg:DI 1 dx [orig:849 _763 ] [849])
                (plus:DI (reg:DI 1 dx [orig:848 _762 ] [848])
                    (reg:DI 2 cx [orig:847 _761 ] [847])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":262 222 {*adddi_1}
     (nil))
(insn 1655 1654 1656 84 (parallel [
            (set (reg:DI 2 cx [orig:850 _764 ] [850])
                (plus:DI (reg:DI 1 dx [orig:849 _763 ] [849])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":262 222 {*adddi_1}
     (nil))
(insn 1656 1655 1657 84 (set (reg/f:DI 1 dx [2010])
        (symbol_ref:DI ("pbint.4202") [flags 0x202]  <var_decl 0x7fd1b2d4d1b0 pbint>)) "BNDLYR2.f":262 85 {*movdi_internal}
     (nil))
(insn 1657 1656 1658 84 (set (reg:SF 21 xmm0 [orig:851 _765 ] [851])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:850 _764 ] [850])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [2010])) [1 pbint S4 A32])) "BNDLYR2.f":262 131 {*movsf_internal}
     (nil))
(insn 1658 1657 1659 84 (set (reg:SF 21 xmm0 [orig:852 _766 ] [852])
        (plus:SF (reg:SF 21 xmm0 [orig:851 _765 ] [851])
            (reg:SF 22 xmm1 [orig:841 _755 ] [841]))) "BNDLYR2.f":262 838 {*fop_sf_comm}
     (nil))
(insn 1659 1658 1660 84 (set (reg:SF 22 xmm1 [orig:853 _767 ] [853])
        (reg:SF 21 xmm0 [orig:852 _766 ] [852])) "BNDLYR2.f":262 131 {*movsf_internal}
     (nil))
(insn 1660 1659 1661 84 (set (reg:SI 1 dx [2011])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 lbnd+0 S4 A32])) "BNDLYR2.f":262 86 {*movsi_internal}
     (nil))
(insn 1661 1660 1662 84 (set (reg:DI 1 dx [orig:854 _768 ] [854])
        (sign_extend:DI (reg:SI 1 dx [2011]))) "BNDLYR2.f":262 149 {*extendsidi2_rex64}
     (nil))
(insn 1662 1661 1663 84 (parallel [
            (set (reg:DI 2 cx [orig:855 _769 ] [855])
                (mult:DI (reg:DI 1 dx [orig:854 _768 ] [854])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":262 349 {*muldi3_1}
     (nil))
(insn 1663 1662 1664 84 (set (reg:SI 1 dx [2012])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":262 86 {*movsi_internal}
     (nil))
(insn 1664 1663 1665 84 (set (reg:DI 1 dx [orig:856 _770 ] [856])
        (sign_extend:DI (reg:SI 1 dx [2012]))) "BNDLYR2.f":262 149 {*extendsidi2_rex64}
     (nil))
(insn 1665 1664 1666 84 (parallel [
            (set (reg:DI 1 dx [orig:857 _771 ] [857])
                (mult:DI (reg:DI 1 dx [orig:856 _770 ] [856])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":262 349 {*muldi3_1}
     (nil))
(insn 1666 1665 1667 84 (parallel [
            (set (reg:DI 2 cx [orig:858 _772 ] [858])
                (plus:DI (reg:DI 2 cx [orig:855 _769 ] [855])
                    (reg:DI 1 dx [orig:857 _771 ] [857])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":262 222 {*adddi_1}
     (nil))
(insn 1667 1666 1668 84 (set (reg:SI 1 dx [2013])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":262 86 {*movsi_internal}
     (nil))
(insn 1668 1667 1669 84 (set (reg:DI 1 dx [orig:859 _773 ] [859])
        (sign_extend:DI (reg:SI 1 dx [2013]))) "BNDLYR2.f":262 149 {*extendsidi2_rex64}
     (nil))
(insn 1669 1668 1670 84 (parallel [
            (set (reg:DI 1 dx [orig:860 _774 ] [860])
                (plus:DI (reg:DI 1 dx [orig:859 _773 ] [859])
                    (reg:DI 2 cx [orig:858 _772 ] [858])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":262 222 {*adddi_1}
     (nil))
(insn 1670 1669 1671 84 (parallel [
            (set (reg:DI 2 cx [orig:861 _775 ] [861])
                (plus:DI (reg:DI 1 dx [orig:860 _774 ] [860])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":262 222 {*adddi_1}
     (nil))
(insn 1671 1670 1672 84 (set (reg:SF 21 xmm0 [2014])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC6") [flags 0x2]) [0  S4 A32])) "BNDLYR2.f":262 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 5.0e-1 [0x0.8p+0])
        (nil)))
(insn 1672 1671 1673 84 (set (reg:SF 21 xmm0 [orig:862 _776 ] [862])
        (mult:SF (reg:SF 21 xmm0 [2014])
            (reg:SF 22 xmm1 [orig:853 _767 ] [853]))) "BNDLYR2.f":262 838 {*fop_sf_comm}
     (nil))
(insn 1673 1672 1674 84 (set (reg/f:DI 1 dx [2015])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -152 [0xffffffffffffff68])) [3 pbnd+0 S8 A64])) "BNDLYR2.f":262 85 {*movdi_internal}
     (nil))
(insn 1674 1673 1675 84 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:861 _775 ] [861])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [2015])) [1 *pbnd_1537(D) S4 A32])
        (reg:SF 21 xmm0 [orig:862 _776 ] [862])) "BNDLYR2.f":262 131 {*movsf_internal}
     (nil))
(insn 1675 1674 1676 84 (set (reg:SI 1 dx [2016])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 lbnd+0 S4 A32])) "BNDLYR2.f":263 86 {*movsi_internal}
     (nil))
(insn 1676 1675 1677 84 (set (reg:DI 1 dx [orig:863 _777 ] [863])
        (sign_extend:DI (reg:SI 1 dx [2016]))) "BNDLYR2.f":263 149 {*extendsidi2_rex64}
     (nil))
(insn 1677 1676 1678 84 (parallel [
            (set (reg:DI 2 cx [orig:864 _778 ] [864])
                (mult:DI (reg:DI 1 dx [orig:863 _777 ] [863])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":263 349 {*muldi3_1}
     (nil))
(insn 1678 1677 1679 84 (set (reg:SI 1 dx [2017])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":263 86 {*movsi_internal}
     (nil))
(insn 1679 1678 1680 84 (set (reg:DI 1 dx [orig:865 _779 ] [865])
        (sign_extend:DI (reg:SI 1 dx [2017]))) "BNDLYR2.f":263 149 {*extendsidi2_rex64}
     (nil))
(insn 1680 1679 1681 84 (parallel [
            (set (reg:DI 1 dx [orig:866 _780 ] [866])
                (mult:DI (reg:DI 1 dx [orig:865 _779 ] [865])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":263 349 {*muldi3_1}
     (nil))
(insn 1681 1680 1682 84 (parallel [
            (set (reg:DI 2 cx [orig:867 _781 ] [867])
                (plus:DI (reg:DI 2 cx [orig:864 _778 ] [864])
                    (reg:DI 1 dx [orig:866 _780 ] [866])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":263 222 {*adddi_1}
     (nil))
(insn 1682 1681 1683 84 (set (reg:SI 1 dx [2018])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":263 86 {*movsi_internal}
     (nil))
(insn 1683 1682 1684 84 (set (reg:DI 1 dx [orig:868 _782 ] [868])
        (sign_extend:DI (reg:SI 1 dx [2018]))) "BNDLYR2.f":263 149 {*extendsidi2_rex64}
     (nil))
(insn 1684 1683 1685 84 (parallel [
            (set (reg:DI 1 dx [orig:869 _783 ] [869])
                (plus:DI (reg:DI 1 dx [orig:868 _782 ] [868])
                    (reg:DI 2 cx [orig:867 _781 ] [867])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":263 222 {*adddi_1}
     (nil))
(insn 1685 1684 1686 84 (parallel [
            (set (reg:DI 2 cx [orig:870 _784 ] [870])
                (plus:DI (reg:DI 1 dx [orig:869 _783 ] [869])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":263 222 {*adddi_1}
     (nil))
(insn 1686 1685 1687 84 (set (reg/f:DI 1 dx [2019])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -160 [0xffffffffffffff60])) [3 tbnd+0 S8 A64])) "BNDLYR2.f":263 85 {*movdi_internal}
     (nil))
(insn 1687 1686 1688 84 (set (reg:SF 21 xmm0 [orig:871 _785 ] [871])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:870 _784 ] [870])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [2019])) [1 *tbnd_1539(D) S4 A32])) "BNDLYR2.f":263 131 {*movsf_internal}
     (nil))
(insn 1688 1687 1689 84 (set (reg:SI 1 dx [2020])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 lbnd+0 S4 A32])) "BNDLYR2.f":263 86 {*movsi_internal}
     (nil))
(insn 1689 1688 1690 84 (set (reg:DI 1 dx [orig:872 _786 ] [872])
        (sign_extend:DI (reg:SI 1 dx [2020]))) "BNDLYR2.f":263 149 {*extendsidi2_rex64}
     (nil))
(insn 1690 1689 1691 84 (parallel [
            (set (reg:DI 2 cx [orig:873 _787 ] [873])
                (mult:DI (reg:DI 1 dx [orig:872 _786 ] [872])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":263 349 {*muldi3_1}
     (nil))
(insn 1691 1690 1692 84 (set (reg:SI 1 dx [2021])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":263 86 {*movsi_internal}
     (nil))
(insn 1692 1691 1693 84 (set (reg:DI 1 dx [orig:874 _788 ] [874])
        (sign_extend:DI (reg:SI 1 dx [2021]))) "BNDLYR2.f":263 149 {*extendsidi2_rex64}
     (nil))
(insn 1693 1692 1694 84 (parallel [
            (set (reg:DI 1 dx [orig:875 _789 ] [875])
                (mult:DI (reg:DI 1 dx [orig:874 _788 ] [874])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":263 349 {*muldi3_1}
     (nil))
(insn 1694 1693 1695 84 (parallel [
            (set (reg:DI 2 cx [orig:876 _790 ] [876])
                (plus:DI (reg:DI 2 cx [orig:873 _787 ] [873])
                    (reg:DI 1 dx [orig:875 _789 ] [875])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":263 222 {*adddi_1}
     (nil))
(insn 1695 1694 1696 84 (set (reg:SI 1 dx [2022])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":263 86 {*movsi_internal}
     (nil))
(insn 1696 1695 1697 84 (set (reg:DI 1 dx [orig:877 _791 ] [877])
        (sign_extend:DI (reg:SI 1 dx [2022]))) "BNDLYR2.f":263 149 {*extendsidi2_rex64}
     (nil))
(insn 1697 1696 1698 84 (parallel [
            (set (reg:DI 1 dx [orig:878 _792 ] [878])
                (plus:DI (reg:DI 1 dx [orig:877 _791 ] [877])
                    (reg:DI 2 cx [orig:876 _790 ] [876])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":263 222 {*adddi_1}
     (nil))
(insn 1698 1697 1699 84 (parallel [
            (set (reg:DI 2 cx [orig:879 _793 ] [879])
                (plus:DI (reg:DI 1 dx [orig:878 _792 ] [878])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":263 222 {*adddi_1}
     (nil))
(insn 1699 1698 1700 84 (set (reg:SF 21 xmm0 [orig:880 _794 ] [880])
        (mult:SF (reg:SF 21 xmm0 [orig:871 _785 ] [871])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -120 [0xffffffffffffff88])) [1 rpsum+0 S4 A32]))) "BNDLYR2.f":263 838 {*fop_sf_comm}
     (nil))
(insn 1700 1699 1701 84 (set (reg/f:DI 1 dx [2023])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -160 [0xffffffffffffff60])) [3 tbnd+0 S8 A64])) "BNDLYR2.f":263 85 {*movdi_internal}
     (nil))
(insn 1701 1700 1702 84 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:879 _793 ] [879])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [2023])) [1 *tbnd_1539(D) S4 A32])
        (reg:SF 21 xmm0 [orig:880 _794 ] [880])) "BNDLYR2.f":263 131 {*movsf_internal}
     (nil))
(insn 1702 1701 1703 84 (set (reg:SI 1 dx [2024])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 lbnd+0 S4 A32])) "BNDLYR2.f":264 86 {*movsi_internal}
     (nil))
(insn 1703 1702 1704 84 (set (reg:DI 1 dx [orig:881 _795 ] [881])
        (sign_extend:DI (reg:SI 1 dx [2024]))) "BNDLYR2.f":264 149 {*extendsidi2_rex64}
     (nil))
(insn 1704 1703 1705 84 (parallel [
            (set (reg:DI 2 cx [orig:882 _796 ] [882])
                (mult:DI (reg:DI 1 dx [orig:881 _795 ] [881])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":264 349 {*muldi3_1}
     (nil))
(insn 1705 1704 1706 84 (set (reg:SI 1 dx [2025])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":264 86 {*movsi_internal}
     (nil))
(insn 1706 1705 1707 84 (set (reg:DI 1 dx [orig:883 _797 ] [883])
        (sign_extend:DI (reg:SI 1 dx [2025]))) "BNDLYR2.f":264 149 {*extendsidi2_rex64}
     (nil))
(insn 1707 1706 1708 84 (parallel [
            (set (reg:DI 1 dx [orig:884 _798 ] [884])
                (mult:DI (reg:DI 1 dx [orig:883 _797 ] [883])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":264 349 {*muldi3_1}
     (nil))
(insn 1708 1707 1709 84 (parallel [
            (set (reg:DI 2 cx [orig:885 _799 ] [885])
                (plus:DI (reg:DI 2 cx [orig:882 _796 ] [882])
                    (reg:DI 1 dx [orig:884 _798 ] [884])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":264 222 {*adddi_1}
     (nil))
(insn 1709 1708 1710 84 (set (reg:SI 1 dx [2026])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":264 86 {*movsi_internal}
     (nil))
(insn 1710 1709 1711 84 (set (reg:DI 1 dx [orig:886 _800 ] [886])
        (sign_extend:DI (reg:SI 1 dx [2026]))) "BNDLYR2.f":264 149 {*extendsidi2_rex64}
     (nil))
(insn 1711 1710 1712 84 (parallel [
            (set (reg:DI 1 dx [orig:887 _801 ] [887])
                (plus:DI (reg:DI 1 dx [orig:886 _800 ] [886])
                    (reg:DI 2 cx [orig:885 _799 ] [885])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":264 222 {*adddi_1}
     (nil))
(insn 1712 1711 1713 84 (parallel [
            (set (reg:DI 2 cx [orig:888 _802 ] [888])
                (plus:DI (reg:DI 1 dx [orig:887 _801 ] [887])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":264 222 {*adddi_1}
     (nil))
(insn 1713 1712 1714 84 (set (reg/f:DI 1 dx [2027])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [3 qbnd+0 S8 A64])) "BNDLYR2.f":264 85 {*movdi_internal}
     (nil))
(insn 1714 1713 1715 84 (set (reg:SF 21 xmm0 [orig:889 _803 ] [889])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:888 _802 ] [888])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [2027])) [1 *qbnd_1541(D) S4 A32])) "BNDLYR2.f":264 131 {*movsf_internal}
     (nil))
(insn 1715 1714 1716 84 (set (reg:SI 1 dx [2028])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 lbnd+0 S4 A32])) "BNDLYR2.f":264 86 {*movsi_internal}
     (nil))
(insn 1716 1715 1717 84 (set (reg:DI 1 dx [orig:890 _804 ] [890])
        (sign_extend:DI (reg:SI 1 dx [2028]))) "BNDLYR2.f":264 149 {*extendsidi2_rex64}
     (nil))
(insn 1717 1716 1718 84 (parallel [
            (set (reg:DI 2 cx [orig:891 _805 ] [891])
                (mult:DI (reg:DI 1 dx [orig:890 _804 ] [890])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":264 349 {*muldi3_1}
     (nil))
(insn 1718 1717 1719 84 (set (reg:SI 1 dx [2029])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":264 86 {*movsi_internal}
     (nil))
(insn 1719 1718 1720 84 (set (reg:DI 1 dx [orig:892 _806 ] [892])
        (sign_extend:DI (reg:SI 1 dx [2029]))) "BNDLYR2.f":264 149 {*extendsidi2_rex64}
     (nil))
(insn 1720 1719 1721 84 (parallel [
            (set (reg:DI 1 dx [orig:893 _807 ] [893])
                (mult:DI (reg:DI 1 dx [orig:892 _806 ] [892])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":264 349 {*muldi3_1}
     (nil))
(insn 1721 1720 1722 84 (parallel [
            (set (reg:DI 2 cx [orig:894 _808 ] [894])
                (plus:DI (reg:DI 2 cx [orig:891 _805 ] [891])
                    (reg:DI 1 dx [orig:893 _807 ] [893])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":264 222 {*adddi_1}
     (nil))
(insn 1722 1721 1723 84 (set (reg:SI 1 dx [2030])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":264 86 {*movsi_internal}
     (nil))
(insn 1723 1722 1724 84 (set (reg:DI 1 dx [orig:895 _809 ] [895])
        (sign_extend:DI (reg:SI 1 dx [2030]))) "BNDLYR2.f":264 149 {*extendsidi2_rex64}
     (nil))
(insn 1724 1723 1725 84 (parallel [
            (set (reg:DI 1 dx [orig:896 _810 ] [896])
                (plus:DI (reg:DI 1 dx [orig:895 _809 ] [895])
                    (reg:DI 2 cx [orig:894 _808 ] [894])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":264 222 {*adddi_1}
     (nil))
(insn 1725 1724 1726 84 (parallel [
            (set (reg:DI 2 cx [orig:897 _811 ] [897])
                (plus:DI (reg:DI 1 dx [orig:896 _810 ] [896])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":264 222 {*adddi_1}
     (nil))
(insn 1726 1725 1727 84 (set (reg:SF 21 xmm0 [orig:898 _812 ] [898])
        (mult:SF (reg:SF 21 xmm0 [orig:889 _803 ] [889])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -120 [0xffffffffffffff88])) [1 rpsum+0 S4 A32]))) "BNDLYR2.f":264 838 {*fop_sf_comm}
     (nil))
(insn 1727 1726 1728 84 (set (reg/f:DI 1 dx [2031])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [3 qbnd+0 S8 A64])) "BNDLYR2.f":264 85 {*movdi_internal}
     (nil))
(insn 1728 1727 1729 84 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:897 _811 ] [897])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [2031])) [1 *qbnd_1541(D) S4 A32])
        (reg:SF 21 xmm0 [orig:898 _812 ] [898])) "BNDLYR2.f":264 131 {*movsf_internal}
     (nil))
(insn 1729 1728 1730 84 (set (reg:SI 1 dx [2032])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 lbnd+0 S4 A32])) "BNDLYR2.f":265 86 {*movsi_internal}
     (nil))
(insn 1730 1729 1731 84 (set (reg:DI 1 dx [orig:899 _813 ] [899])
        (sign_extend:DI (reg:SI 1 dx [2032]))) "BNDLYR2.f":265 149 {*extendsidi2_rex64}
     (nil))
(insn 1731 1730 1732 84 (parallel [
            (set (reg:DI 2 cx [orig:900 _814 ] [900])
                (mult:DI (reg:DI 1 dx [orig:899 _813 ] [899])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":265 349 {*muldi3_1}
     (nil))
(insn 1732 1731 1733 84 (set (reg:SI 1 dx [2033])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":265 86 {*movsi_internal}
     (nil))
(insn 1733 1732 1734 84 (set (reg:DI 1 dx [orig:901 _815 ] [901])
        (sign_extend:DI (reg:SI 1 dx [2033]))) "BNDLYR2.f":265 149 {*extendsidi2_rex64}
     (nil))
(insn 1734 1733 1735 84 (parallel [
            (set (reg:DI 1 dx [orig:902 _816 ] [902])
                (mult:DI (reg:DI 1 dx [orig:901 _815 ] [901])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":265 349 {*muldi3_1}
     (nil))
(insn 1735 1734 1736 84 (parallel [
            (set (reg:DI 2 cx [orig:903 _817 ] [903])
                (plus:DI (reg:DI 2 cx [orig:900 _814 ] [900])
                    (reg:DI 1 dx [orig:902 _816 ] [902])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":265 222 {*adddi_1}
     (nil))
(insn 1736 1735 1737 84 (set (reg:SI 1 dx [2034])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":265 86 {*movsi_internal}
     (nil))
(insn 1737 1736 1738 84 (set (reg:DI 1 dx [orig:904 _818 ] [904])
        (sign_extend:DI (reg:SI 1 dx [2034]))) "BNDLYR2.f":265 149 {*extendsidi2_rex64}
     (nil))
(insn 1738 1737 1739 84 (parallel [
            (set (reg:DI 1 dx [orig:905 _819 ] [905])
                (plus:DI (reg:DI 1 dx [orig:904 _818 ] [904])
                    (reg:DI 2 cx [orig:903 _817 ] [903])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":265 222 {*adddi_1}
     (nil))
(insn 1739 1738 1740 84 (parallel [
            (set (reg:DI 2 cx [orig:906 _820 ] [906])
                (plus:DI (reg:DI 1 dx [orig:905 _819 ] [905])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":265 222 {*adddi_1}
     (nil))
(insn 1740 1739 1741 84 (set (reg/f:DI 1 dx [2035])
        (symbol_ref:DI ("qsbnd.4217") [flags 0x202]  <var_decl 0x7fd1b2d4d870 qsbnd>)) "BNDLYR2.f":265 85 {*movdi_internal}
     (nil))
(insn 1741 1740 1742 84 (set (reg:SF 21 xmm0 [orig:907 _821 ] [907])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:906 _820 ] [906])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [2035])) [1 qsbnd S4 A32])) "BNDLYR2.f":265 131 {*movsf_internal}
     (nil))
(insn 1742 1741 1743 84 (set (reg:SI 1 dx [2036])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 lbnd+0 S4 A32])) "BNDLYR2.f":265 86 {*movsi_internal}
     (nil))
(insn 1743 1742 1744 84 (set (reg:DI 1 dx [orig:908 _822 ] [908])
        (sign_extend:DI (reg:SI 1 dx [2036]))) "BNDLYR2.f":265 149 {*extendsidi2_rex64}
     (nil))
(insn 1744 1743 1745 84 (parallel [
            (set (reg:DI 2 cx [orig:909 _823 ] [909])
                (mult:DI (reg:DI 1 dx [orig:908 _822 ] [908])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":265 349 {*muldi3_1}
     (nil))
(insn 1745 1744 1746 84 (set (reg:SI 1 dx [2037])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":265 86 {*movsi_internal}
     (nil))
(insn 1746 1745 1747 84 (set (reg:DI 1 dx [orig:910 _824 ] [910])
        (sign_extend:DI (reg:SI 1 dx [2037]))) "BNDLYR2.f":265 149 {*extendsidi2_rex64}
     (nil))
(insn 1747 1746 1748 84 (parallel [
            (set (reg:DI 1 dx [orig:911 _825 ] [911])
                (mult:DI (reg:DI 1 dx [orig:910 _824 ] [910])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":265 349 {*muldi3_1}
     (nil))
(insn 1748 1747 1749 84 (parallel [
            (set (reg:DI 2 cx [orig:912 _826 ] [912])
                (plus:DI (reg:DI 2 cx [orig:909 _823 ] [909])
                    (reg:DI 1 dx [orig:911 _825 ] [911])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":265 222 {*adddi_1}
     (nil))
(insn 1749 1748 1750 84 (set (reg:SI 1 dx [2038])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":265 86 {*movsi_internal}
     (nil))
(insn 1750 1749 1751 84 (set (reg:DI 1 dx [orig:913 _827 ] [913])
        (sign_extend:DI (reg:SI 1 dx [2038]))) "BNDLYR2.f":265 149 {*extendsidi2_rex64}
     (nil))
(insn 1751 1750 1752 84 (parallel [
            (set (reg:DI 1 dx [orig:914 _828 ] [914])
                (plus:DI (reg:DI 1 dx [orig:913 _827 ] [913])
                    (reg:DI 2 cx [orig:912 _826 ] [912])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":265 222 {*adddi_1}
     (nil))
(insn 1752 1751 1753 84 (parallel [
            (set (reg:DI 2 cx [orig:915 _829 ] [915])
                (plus:DI (reg:DI 1 dx [orig:914 _828 ] [914])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":265 222 {*adddi_1}
     (nil))
(insn 1753 1752 1754 84 (set (reg:SF 21 xmm0 [orig:916 _830 ] [916])
        (mult:SF (reg:SF 21 xmm0 [orig:907 _821 ] [907])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -120 [0xffffffffffffff88])) [1 rpsum+0 S4 A32]))) "BNDLYR2.f":265 838 {*fop_sf_comm}
     (nil))
(insn 1754 1753 1755 84 (set (reg/f:DI 1 dx [2039])
        (symbol_ref:DI ("qsbnd.4217") [flags 0x202]  <var_decl 0x7fd1b2d4d870 qsbnd>)) "BNDLYR2.f":265 85 {*movdi_internal}
     (nil))
(insn 1755 1754 1756 84 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:915 _829 ] [915])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [2039])) [1 qsbnd S4 A32])
        (reg:SF 21 xmm0 [orig:916 _830 ] [916])) "BNDLYR2.f":265 131 {*movsf_internal}
     (nil))
(insn 1756 1755 1757 84 (set (reg:SI 1 dx [2040])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 lbnd+0 S4 A32])) "BNDLYR2.f":266 86 {*movsi_internal}
     (nil))
(insn 1757 1756 1758 84 (set (reg:DI 1 dx [orig:917 _831 ] [917])
        (sign_extend:DI (reg:SI 1 dx [2040]))) "BNDLYR2.f":266 149 {*extendsidi2_rex64}
     (nil))
(insn 1758 1757 1759 84 (parallel [
            (set (reg:DI 2 cx [orig:918 _832 ] [918])
                (mult:DI (reg:DI 1 dx [orig:917 _831 ] [917])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":266 349 {*muldi3_1}
     (nil))
(insn 1759 1758 1760 84 (set (reg:SI 1 dx [2041])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":266 86 {*movsi_internal}
     (nil))
(insn 1760 1759 1761 84 (set (reg:DI 1 dx [orig:919 _833 ] [919])
        (sign_extend:DI (reg:SI 1 dx [2041]))) "BNDLYR2.f":266 149 {*extendsidi2_rex64}
     (nil))
(insn 1761 1760 1762 84 (parallel [
            (set (reg:DI 1 dx [orig:920 _834 ] [920])
                (mult:DI (reg:DI 1 dx [orig:919 _833 ] [919])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":266 349 {*muldi3_1}
     (nil))
(insn 1762 1761 1763 84 (parallel [
            (set (reg:DI 2 cx [orig:921 _835 ] [921])
                (plus:DI (reg:DI 2 cx [orig:918 _832 ] [918])
                    (reg:DI 1 dx [orig:920 _834 ] [920])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":266 222 {*adddi_1}
     (nil))
(insn 1763 1762 1764 84 (set (reg:SI 1 dx [2042])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":266 86 {*movsi_internal}
     (nil))
(insn 1764 1763 1765 84 (set (reg:DI 1 dx [orig:922 _836 ] [922])
        (sign_extend:DI (reg:SI 1 dx [2042]))) "BNDLYR2.f":266 149 {*extendsidi2_rex64}
     (nil))
(insn 1765 1764 1766 84 (parallel [
            (set (reg:DI 1 dx [orig:923 _837 ] [923])
                (plus:DI (reg:DI 1 dx [orig:922 _836 ] [922])
                    (reg:DI 2 cx [orig:921 _835 ] [921])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":266 222 {*adddi_1}
     (nil))
(insn 1766 1765 1767 84 (parallel [
            (set (reg:DI 2 cx [orig:924 _838 ] [924])
                (plus:DI (reg:DI 1 dx [orig:923 _837 ] [923])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":266 222 {*adddi_1}
     (nil))
(insn 1767 1766 1768 84 (set (reg/f:DI 1 dx [2043])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 16 [0x10])) [3 omgbnd+0 S8 A64])) "BNDLYR2.f":266 85 {*movdi_internal}
     (nil))
(insn 1768 1767 1769 84 (set (reg:SF 21 xmm0 [orig:925 _839 ] [925])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:924 _838 ] [924])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [2043])) [1 *omgbnd_1550(D) S4 A32])) "BNDLYR2.f":266 131 {*movsf_internal}
     (nil))
(insn 1769 1768 1770 84 (set (reg:SI 1 dx [2044])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 lbnd+0 S4 A32])) "BNDLYR2.f":266 86 {*movsi_internal}
     (nil))
(insn 1770 1769 1771 84 (set (reg:DI 1 dx [orig:926 _840 ] [926])
        (sign_extend:DI (reg:SI 1 dx [2044]))) "BNDLYR2.f":266 149 {*extendsidi2_rex64}
     (nil))
(insn 1771 1770 1772 84 (parallel [
            (set (reg:DI 2 cx [orig:927 _841 ] [927])
                (mult:DI (reg:DI 1 dx [orig:926 _840 ] [926])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":266 349 {*muldi3_1}
     (nil))
(insn 1772 1771 1773 84 (set (reg:SI 1 dx [2045])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":266 86 {*movsi_internal}
     (nil))
(insn 1773 1772 1774 84 (set (reg:DI 1 dx [orig:928 _842 ] [928])
        (sign_extend:DI (reg:SI 1 dx [2045]))) "BNDLYR2.f":266 149 {*extendsidi2_rex64}
     (nil))
(insn 1774 1773 1775 84 (parallel [
            (set (reg:DI 1 dx [orig:929 _843 ] [929])
                (mult:DI (reg:DI 1 dx [orig:928 _842 ] [928])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":266 349 {*muldi3_1}
     (nil))
(insn 1775 1774 1776 84 (parallel [
            (set (reg:DI 2 cx [orig:930 _844 ] [930])
                (plus:DI (reg:DI 2 cx [orig:927 _841 ] [927])
                    (reg:DI 1 dx [orig:929 _843 ] [929])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":266 222 {*adddi_1}
     (nil))
(insn 1776 1775 1777 84 (set (reg:SI 1 dx [2046])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":266 86 {*movsi_internal}
     (nil))
(insn 1777 1776 1778 84 (set (reg:DI 1 dx [orig:931 _845 ] [931])
        (sign_extend:DI (reg:SI 1 dx [2046]))) "BNDLYR2.f":266 149 {*extendsidi2_rex64}
     (nil))
(insn 1778 1777 1779 84 (parallel [
            (set (reg:DI 1 dx [orig:932 _846 ] [932])
                (plus:DI (reg:DI 1 dx [orig:931 _845 ] [931])
                    (reg:DI 2 cx [orig:930 _844 ] [930])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":266 222 {*adddi_1}
     (nil))
(insn 1779 1778 1780 84 (parallel [
            (set (reg:DI 2 cx [orig:933 _847 ] [933])
                (plus:DI (reg:DI 1 dx [orig:932 _846 ] [932])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":266 222 {*adddi_1}
     (nil))
(insn 1780 1779 1781 84 (set (reg:SF 21 xmm0 [orig:934 _848 ] [934])
        (mult:SF (reg:SF 21 xmm0 [orig:925 _839 ] [925])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -120 [0xffffffffffffff88])) [1 rpsum+0 S4 A32]))) "BNDLYR2.f":266 838 {*fop_sf_comm}
     (nil))
(insn 1781 1780 1782 84 (set (reg/f:DI 1 dx [2047])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 16 [0x10])) [3 omgbnd+0 S8 A64])) "BNDLYR2.f":266 85 {*movdi_internal}
     (nil))
(insn 1782 1781 1783 84 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:933 _847 ] [933])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [2047])) [1 *omgbnd_1550(D) S4 A32])
        (reg:SF 21 xmm0 [orig:934 _848 ] [934])) "BNDLYR2.f":266 131 {*movsf_internal}
     (nil))
;;  succ:       85 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1545

;; basic block 85, loop depth 0, maybe hot
;;  prev block 84, next block 163, flags: (RTL, MODIFIED)
;;  pred:       84 (FALLTHRU)
;;              83
;; bb 85 artificial_defs: { }
;; bb 85 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1545
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 1783 1782 1784 85 61 (nil) [1 uses])
(note 1784 1783 1785 85 [bb 85] NOTE_INSN_BASIC_BLOCK)
(insn 1785 1784 3142 85 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":258 221 {*addsi_1}
     (nil))
(jump_insn 3142 1785 3143 85 (set (pc)
        (label_ref 1786)) "BNDLYR2.f":258 683 {jump}
     (nil)
 -> 1786)
;;  succ:       81 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1545

(barrier 3143 3142 3227)
;; basic block 163, loop depth 0, maybe hot
;;  prev block 85, next block 86, flags: (RTL, MODIFIED)
;;  pred:       81
;; bb 163 artificial_defs: { }
;; bb 163 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1545
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 3227 3143 3226 163 160 (nil) [1 uses])
(note 3226 3227 3228 163 [bb 163] NOTE_INSN_BASIC_BLOCK)
(insn 3228 3226 1789 163 (const_int 0 [0]) "BNDLYR2.f":259 718 {nop}
     (nil))
;;  succ:       86 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1545

;; basic block 86, loop depth 0, maybe hot
;;  prev block 163, next block 162, flags: (RTL, MODIFIED)
;;  pred:       163 [always]  (FALLTHRU)
;; bb 86 artificial_defs: { }
;; bb 86 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1545
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 1789 3228 1790 86 60 (nil) [0 uses])
(note 1790 1789 1791 86 [bb 86] NOTE_INSN_BASIC_BLOCK)
(insn 1791 1790 3144 86 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":257 221 {*addsi_1}
     (nil))
(jump_insn 3144 1791 3145 86 (set (pc)
        (label_ref 1792)) "BNDLYR2.f":257 683 {jump}
     (nil)
 -> 1792)
;;  succ:       79 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1545

(barrier 3145 3144 3224)
;; basic block 162, loop depth 0, maybe hot
;;  prev block 86, next block 87, flags: (RTL, MODIFIED)
;;  pred:       79
;; bb 162 artificial_defs: { }
;; bb 162 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 3224 3145 3223 162 159 (nil) [1 uses])
(note 3223 3224 3225 162 [bb 162] NOTE_INSN_BASIC_BLOCK)
(insn 3225 3223 1795 162 (const_int 0 [0]) "BNDLYR2.f":258 718 {nop}
     (nil))
;;  succ:       87 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 87, loop depth 0, maybe hot
;;  prev block 162, next block 88, flags: (RTL, MODIFIED)
;;  pred:       162 [always]  (FALLTHRU)
;; bb 87 artificial_defs: { }
;; bb 87 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 1548 1549
(code_label 1795 3225 1796 87 59 (nil) [0 uses])
(note 1796 1795 1797 87 [bb 87] NOTE_INSN_BASIC_BLOCK)
(insn 1797 1796 1798 87 (set (reg:SI 1 dx [orig:1548 _1648 ] [1548])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7fd1b2d3cea0 parallel>)
                    (const_int 16 [0x10]))) [2 parallel.jsta_m+0 S4 A128])) "BNDLYR2.f":271 86 {*movsi_internal}
     (nil))
(insn 1798 1797 1799 87 (set (reg:SI 0 ax [orig:1549 _1649 ] [1549])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7fd1b2d3cea0 parallel>)
                    (const_int 20 [0x14]))) [2 parallel.jend_m+0 S4 A32])) "BNDLYR2.f":271 86 {*movsi_internal}
     (nil))
(insn 1799 1798 1917 87 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])
        (reg:SI 1 dx [orig:1548 _1648 ] [1548])) "BNDLYR2.f":271 86 {*movsi_internal}
     (nil))
;;  succ:       88 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1549

;; basic block 88, loop depth 0, maybe hot
;;  prev block 87, next block 89, flags: (RTL, MODIFIED)
;;  pred:       87 (FALLTHRU)
;;              95 [always] 
;; bb 88 artificial_defs: { }
;; bb 88 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1549
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1549
;; lr  def 	 17 [flags] 1550 2048
(code_label 1917 1799 1800 88 70 (nil) [1 uses])
(note 1800 1917 1801 88 [bb 88] NOTE_INSN_BASIC_BLOCK)
(insn 1801 1800 1802 88 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])
            (reg:SI 0 ax [orig:1549 _1649 ] [1549]))) "BNDLYR2.f":271 11 {*cmpsi_1}
     (nil))
(insn 1802 1801 1803 88 (set (reg:QI 1 dx [2048])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "BNDLYR2.f":271 678 {*setcc_qi}
     (nil))
(insn 1803 1802 1804 88 (set (reg:SI 1 dx [orig:1550 _1651 ] [1550])
        (zero_extend:SI (reg:QI 1 dx [2048]))) "BNDLYR2.f":271 140 {*zero_extendqisi2}
     (nil))
(insn 1804 1803 1805 88 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1550 _1651 ] [1550])
            (const_int 0 [0]))) "BNDLYR2.f":271 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1805 1804 1806 88 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 3230)
            (pc))) "BNDLYR2.f":271 682 {*jcc}
     (nil)
 -> 3230)
;;  succ:       164
;;              89 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1549

;; basic block 89, loop depth 0, maybe hot
;;  prev block 88, next block 90, flags: (RTL, MODIFIED)
;;  pred:       88 (FALLTHRU)
;; bb 89 artificial_defs: { }
;; bb 89 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1549
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 1806 1805 1807 89 [bb 89] NOTE_INSN_BASIC_BLOCK)
(insn 1807 1806 1911 89 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])
        (const_int 2 [0x2])) "BNDLYR2.f":272 86 {*movsi_internal}
     (nil))
;;  succ:       90 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1549

;; basic block 90, loop depth 0, maybe hot
;;  prev block 89, next block 91, flags: (RTL, MODIFIED)
;;  pred:       89 (FALLTHRU)
;;              94 [always] 
;; bb 90 artificial_defs: { }
;; bb 90 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1549
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1551 2049
(code_label 1911 1807 1808 90 69 (nil) [1 uses])
(note 1808 1911 1809 90 [bb 90] NOTE_INSN_BASIC_BLOCK)
(insn 1809 1808 1810 90 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])
            (const_int 118 [0x76]))) "BNDLYR2.f":272 11 {*cmpsi_1}
     (nil))
(insn 1810 1809 1811 90 (set (reg:QI 1 dx [2049])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "BNDLYR2.f":272 678 {*setcc_qi}
     (nil))
(insn 1811 1810 1812 90 (set (reg:SI 1 dx [orig:1551 _1653 ] [1551])
        (zero_extend:SI (reg:QI 1 dx [2049]))) "BNDLYR2.f":272 140 {*zero_extendqisi2}
     (nil))
(insn 1812 1811 1813 90 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1551 _1653 ] [1551])
            (const_int 0 [0]))) "BNDLYR2.f":272 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1813 1812 1814 90 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 3233)
            (pc))) "BNDLYR2.f":272 682 {*jcc}
     (nil)
 -> 3233)
;;  succ:       165
;;              91 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1549

;; basic block 91, loop depth 0, maybe hot
;;  prev block 90, next block 92, flags: (RTL, MODIFIED)
;;  pred:       90 (FALLTHRU)
;; bb 91 artificial_defs: { }
;; bb 91 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1549
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 935 936 937 938 939 940 941 942 943 2050 2051 2052 2053 2054
(note 1814 1813 1815 91 [bb 91] NOTE_INSN_BASIC_BLOCK)
(insn 1815 1814 1816 91 (set (reg:SI 1 dx [2050])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 lbnd+0 S4 A32])) "BNDLYR2.f":273 86 {*movsi_internal}
     (nil))
(insn 1816 1815 1817 91 (set (reg:DI 1 dx [orig:935 _849 ] [935])
        (sign_extend:DI (reg:SI 1 dx [2050]))) "BNDLYR2.f":273 149 {*extendsidi2_rex64}
     (nil))
(insn 1817 1816 1818 91 (parallel [
            (set (reg:DI 2 cx [orig:936 _850 ] [936])
                (mult:DI (reg:DI 1 dx [orig:935 _849 ] [935])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":273 349 {*muldi3_1}
     (nil))
(insn 1818 1817 1819 91 (set (reg:SI 1 dx [2051])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":273 86 {*movsi_internal}
     (nil))
(insn 1819 1818 1820 91 (set (reg:DI 1 dx [orig:937 _851 ] [937])
        (sign_extend:DI (reg:SI 1 dx [2051]))) "BNDLYR2.f":273 149 {*extendsidi2_rex64}
     (nil))
(insn 1820 1819 1821 91 (parallel [
            (set (reg:DI 1 dx [orig:938 _852 ] [938])
                (mult:DI (reg:DI 1 dx [orig:937 _851 ] [937])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":273 349 {*muldi3_1}
     (nil))
(insn 1821 1820 1822 91 (parallel [
            (set (reg:DI 2 cx [orig:939 _853 ] [939])
                (plus:DI (reg:DI 2 cx [orig:936 _850 ] [936])
                    (reg:DI 1 dx [orig:938 _852 ] [938])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":273 222 {*adddi_1}
     (nil))
(insn 1822 1821 1823 91 (set (reg:SI 1 dx [2052])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":273 86 {*movsi_internal}
     (nil))
(insn 1823 1822 1824 91 (set (reg:DI 1 dx [orig:940 _854 ] [940])
        (sign_extend:DI (reg:SI 1 dx [2052]))) "BNDLYR2.f":273 149 {*extendsidi2_rex64}
     (nil))
(insn 1824 1823 1825 91 (parallel [
            (set (reg:DI 1 dx [orig:941 _855 ] [941])
                (plus:DI (reg:DI 1 dx [orig:940 _854 ] [940])
                    (reg:DI 2 cx [orig:939 _853 ] [939])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":273 222 {*adddi_1}
     (nil))
(insn 1825 1824 1826 91 (parallel [
            (set (reg:DI 2 cx [orig:942 _856 ] [942])
                (plus:DI (reg:DI 1 dx [orig:941 _855 ] [941])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":273 222 {*adddi_1}
     (nil))
(insn 1826 1825 1827 91 (set (reg/f:DI 1 dx [2053])
        (symbol_ref:DI ("pvsum.4212") [flags 0x202]  <var_decl 0x7fd1b2d4d630 pvsum>)) "BNDLYR2.f":273 85 {*movdi_internal}
     (nil))
(insn 1827 1826 1828 91 (set (reg:SF 21 xmm0 [orig:943 _857 ] [943])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:942 _856 ] [942])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [2053])) [1 pvsum S4 A32])) "BNDLYR2.f":273 131 {*movsf_internal}
     (nil))
(insn 1828 1827 1829 91 (set (reg:SF 22 xmm1 [2054])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0  S4 A32])) "BNDLYR2.f":273 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 1829 1828 1830 91 (set (reg:CCFP 17 flags)
        (unspec:CCFP [
                (compare:CCFP (reg:SF 21 xmm0 [orig:943 _857 ] [943])
                    (reg:SF 22 xmm1 [2054]))
            ] UNSPEC_NOTRAP)) "BNDLYR2.f":273 54 {*cmpiusf}
     (nil))
(jump_insn 1830 1829 3044 91 (set (pc)
        (if_then_else (unordered (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 3082)
            (pc))) "BNDLYR2.f":273 682 {*jcc}
     (nil)
 -> 3082)
;;  succ:       93
;;              92 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 943 1549

;; basic block 92, loop depth 0, maybe hot
;;  prev block 91, next block 93, flags: (RTL, MODIFIED)
;;  pred:       91 (FALLTHRU)
;; bb 92 artificial_defs: { }
;; bb 92 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 943 1549
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 943
;; lr  def 	 17 [flags] 2055
(note 3044 1830 1831 92 [bb 92] NOTE_INSN_BASIC_BLOCK)
(insn 1831 3044 1832 92 (set (reg:SF 22 xmm1 [2055])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0  S4 A32])) "BNDLYR2.f":273 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 1832 1831 1833 92 (set (reg:CCFP 17 flags)
        (unspec:CCFP [
                (compare:CCFP (reg:SF 21 xmm0 [orig:943 _857 ] [943])
                    (reg:SF 22 xmm1 [2055]))
            ] UNSPEC_NOTRAP)) "BNDLYR2.f":273 54 {*cmpiusf}
     (nil))
(jump_insn 1833 1832 3082 92 (set (pc)
        (if_then_else (uneq (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1908)
            (pc))) "BNDLYR2.f":273 682 {*jcc}
     (nil)
 -> 1908)
;;  succ:       93 (FALLTHRU)
;;              94
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1549

;; basic block 93, loop depth 0, maybe hot
;;  prev block 92, next block 94, flags: (RTL, MODIFIED)
;;  pred:       92 (FALLTHRU)
;;              91
;; bb 93 artificial_defs: { }
;; bb 93 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1549
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 944 945 946 947 948 949 950 951 952 953 954 955 956 957 958 959 960 961 962 963 964 965 966 967 968 969 970 971 972 973 974 975 976 977 978 979 980 981 982 983 984 985 986 987 988 2056 2057 2058 2059 2060 2061 2062 2063 2064 2065 2066 2067 2068 2069 2070 2071 2072 2073 2074 2075 2076 2077
(code_label 3082 1833 1837 93 123 (nil) [1 uses])
(note 1837 3082 1838 93 [bb 93] NOTE_INSN_BASIC_BLOCK)
(insn 1838 1837 1839 93 (set (reg:SI 1 dx [2056])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 lbnd+0 S4 A32])) "BNDLYR2.f":274 86 {*movsi_internal}
     (nil))
(insn 1839 1838 1840 93 (set (reg:DI 1 dx [orig:944 _858 ] [944])
        (sign_extend:DI (reg:SI 1 dx [2056]))) "BNDLYR2.f":274 149 {*extendsidi2_rex64}
     (nil))
(insn 1840 1839 1841 93 (parallel [
            (set (reg:DI 2 cx [orig:945 _859 ] [945])
                (mult:DI (reg:DI 1 dx [orig:944 _858 ] [944])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":274 349 {*muldi3_1}
     (nil))
(insn 1841 1840 1842 93 (set (reg:SI 1 dx [2057])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":274 86 {*movsi_internal}
     (nil))
(insn 1842 1841 1843 93 (set (reg:DI 1 dx [orig:946 _860 ] [946])
        (sign_extend:DI (reg:SI 1 dx [2057]))) "BNDLYR2.f":274 149 {*extendsidi2_rex64}
     (nil))
(insn 1843 1842 1844 93 (parallel [
            (set (reg:DI 1 dx [orig:947 _861 ] [947])
                (mult:DI (reg:DI 1 dx [orig:946 _860 ] [946])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":274 349 {*muldi3_1}
     (nil))
(insn 1844 1843 1845 93 (parallel [
            (set (reg:DI 2 cx [orig:948 _862 ] [948])
                (plus:DI (reg:DI 2 cx [orig:945 _859 ] [945])
                    (reg:DI 1 dx [orig:947 _861 ] [947])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":274 222 {*adddi_1}
     (nil))
(insn 1845 1844 1846 93 (set (reg:SI 1 dx [2058])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":274 86 {*movsi_internal}
     (nil))
(insn 1846 1845 1847 93 (set (reg:DI 1 dx [orig:949 _863 ] [949])
        (sign_extend:DI (reg:SI 1 dx [2058]))) "BNDLYR2.f":274 149 {*extendsidi2_rex64}
     (nil))
(insn 1847 1846 1848 93 (parallel [
            (set (reg:DI 1 dx [orig:950 _864 ] [950])
                (plus:DI (reg:DI 1 dx [orig:949 _863 ] [949])
                    (reg:DI 2 cx [orig:948 _862 ] [948])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":274 222 {*adddi_1}
     (nil))
(insn 1848 1847 1849 93 (parallel [
            (set (reg:DI 2 cx [orig:951 _865 ] [951])
                (plus:DI (reg:DI 1 dx [orig:950 _864 ] [950])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":274 222 {*adddi_1}
     (nil))
(insn 1849 1848 1850 93 (set (reg/f:DI 1 dx [2059])
        (symbol_ref:DI ("pvsum.4212") [flags 0x202]  <var_decl 0x7fd1b2d4d630 pvsum>)) "BNDLYR2.f":274 85 {*movdi_internal}
     (nil))
(insn 1850 1849 1851 93 (set (reg:SF 22 xmm1 [orig:952 _866 ] [952])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:951 _865 ] [951])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [2059])) [1 pvsum S4 A32])) "BNDLYR2.f":274 131 {*movsf_internal}
     (nil))
(insn 1851 1850 1852 93 (set (reg:SF 21 xmm0 [2061])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC4") [flags 0x2]) [0  S4 A32])) "BNDLYR2.f":274 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 1852 1851 1853 93 (set (reg:SF 21 xmm0 [2060])
        (div:SF (reg:SF 21 xmm0 [2061])
            (reg:SF 22 xmm1 [orig:952 _866 ] [952]))) "BNDLYR2.f":274 841 {*fop_sf_1}
     (nil))
(insn 1853 1852 1854 93 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -124 [0xffffffffffffff84])) [1 rpvsum+0 S4 A32])
        (reg:SF 21 xmm0 [2060])) "BNDLYR2.f":274 131 {*movsf_internal}
     (nil))
(insn 1854 1853 1855 93 (set (reg:SI 1 dx [2062])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 lbnd+0 S4 A32])) "BNDLYR2.f":275 86 {*movsi_internal}
     (nil))
(insn 1855 1854 1856 93 (set (reg:DI 1 dx [orig:953 _867 ] [953])
        (sign_extend:DI (reg:SI 1 dx [2062]))) "BNDLYR2.f":275 149 {*extendsidi2_rex64}
     (nil))
(insn 1856 1855 1857 93 (parallel [
            (set (reg:DI 2 cx [orig:954 _868 ] [954])
                (mult:DI (reg:DI 1 dx [orig:953 _867 ] [953])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":275 349 {*muldi3_1}
     (nil))
(insn 1857 1856 1858 93 (set (reg:SI 1 dx [2063])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":275 86 {*movsi_internal}
     (nil))
(insn 1858 1857 1859 93 (set (reg:DI 1 dx [orig:955 _869 ] [955])
        (sign_extend:DI (reg:SI 1 dx [2063]))) "BNDLYR2.f":275 149 {*extendsidi2_rex64}
     (nil))
(insn 1859 1858 1860 93 (parallel [
            (set (reg:DI 1 dx [orig:956 _870 ] [956])
                (mult:DI (reg:DI 1 dx [orig:955 _869 ] [955])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":275 349 {*muldi3_1}
     (nil))
(insn 1860 1859 1861 93 (parallel [
            (set (reg:DI 2 cx [orig:957 _871 ] [957])
                (plus:DI (reg:DI 2 cx [orig:954 _868 ] [954])
                    (reg:DI 1 dx [orig:956 _870 ] [956])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":275 222 {*adddi_1}
     (nil))
(insn 1861 1860 1862 93 (set (reg:SI 1 dx [2064])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":275 86 {*movsi_internal}
     (nil))
(insn 1862 1861 1863 93 (set (reg:DI 1 dx [orig:958 _872 ] [958])
        (sign_extend:DI (reg:SI 1 dx [2064]))) "BNDLYR2.f":275 149 {*extendsidi2_rex64}
     (nil))
(insn 1863 1862 1864 93 (parallel [
            (set (reg:DI 1 dx [orig:959 _873 ] [959])
                (plus:DI (reg:DI 1 dx [orig:958 _872 ] [958])
                    (reg:DI 2 cx [orig:957 _871 ] [957])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":275 222 {*adddi_1}
     (nil))
(insn 1864 1863 1865 93 (parallel [
            (set (reg:DI 2 cx [orig:960 _874 ] [960])
                (plus:DI (reg:DI 1 dx [orig:959 _873 ] [959])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":275 222 {*adddi_1}
     (nil))
(insn 1865 1864 1866 93 (set (reg/f:DI 1 dx [2065])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [3 ubnd+0 S8 A64])) "BNDLYR2.f":275 85 {*movdi_internal}
     (nil))
(insn 1866 1865 1867 93 (set (reg:SF 21 xmm0 [orig:961 _875 ] [961])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:960 _874 ] [960])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [2065])) [1 *ubnd_1546(D) S4 A32])) "BNDLYR2.f":275 131 {*movsf_internal}
     (nil))
(insn 1867 1866 1868 93 (set (reg:SI 1 dx [2066])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 lbnd+0 S4 A32])) "BNDLYR2.f":275 86 {*movsi_internal}
     (nil))
(insn 1868 1867 1869 93 (set (reg:DI 1 dx [orig:962 _876 ] [962])
        (sign_extend:DI (reg:SI 1 dx [2066]))) "BNDLYR2.f":275 149 {*extendsidi2_rex64}
     (nil))
(insn 1869 1868 1870 93 (parallel [
            (set (reg:DI 2 cx [orig:963 _877 ] [963])
                (mult:DI (reg:DI 1 dx [orig:962 _876 ] [962])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":275 349 {*muldi3_1}
     (nil))
(insn 1870 1869 1871 93 (set (reg:SI 1 dx [2067])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":275 86 {*movsi_internal}
     (nil))
(insn 1871 1870 1872 93 (set (reg:DI 1 dx [orig:964 _878 ] [964])
        (sign_extend:DI (reg:SI 1 dx [2067]))) "BNDLYR2.f":275 149 {*extendsidi2_rex64}
     (nil))
(insn 1872 1871 1873 93 (parallel [
            (set (reg:DI 1 dx [orig:965 _879 ] [965])
                (mult:DI (reg:DI 1 dx [orig:964 _878 ] [964])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":275 349 {*muldi3_1}
     (nil))
(insn 1873 1872 1874 93 (parallel [
            (set (reg:DI 2 cx [orig:966 _880 ] [966])
                (plus:DI (reg:DI 2 cx [orig:963 _877 ] [963])
                    (reg:DI 1 dx [orig:965 _879 ] [965])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":275 222 {*adddi_1}
     (nil))
(insn 1874 1873 1875 93 (set (reg:SI 1 dx [2068])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":275 86 {*movsi_internal}
     (nil))
(insn 1875 1874 1876 93 (set (reg:DI 1 dx [orig:967 _881 ] [967])
        (sign_extend:DI (reg:SI 1 dx [2068]))) "BNDLYR2.f":275 149 {*extendsidi2_rex64}
     (nil))
(insn 1876 1875 1877 93 (parallel [
            (set (reg:DI 1 dx [orig:968 _882 ] [968])
                (plus:DI (reg:DI 1 dx [orig:967 _881 ] [967])
                    (reg:DI 2 cx [orig:966 _880 ] [966])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":275 222 {*adddi_1}
     (nil))
(insn 1877 1876 1878 93 (parallel [
            (set (reg:DI 2 cx [orig:969 _883 ] [969])
                (plus:DI (reg:DI 1 dx [orig:968 _882 ] [968])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":275 222 {*adddi_1}
     (nil))
(insn 1878 1877 1879 93 (set (reg:SF 21 xmm0 [orig:970 _884 ] [970])
        (mult:SF (reg:SF 21 xmm0 [orig:961 _875 ] [961])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -124 [0xffffffffffffff84])) [1 rpvsum+0 S4 A32]))) "BNDLYR2.f":275 838 {*fop_sf_comm}
     (nil))
(insn 1879 1878 1880 93 (set (reg/f:DI 1 dx [2069])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [3 ubnd+0 S8 A64])) "BNDLYR2.f":275 85 {*movdi_internal}
     (nil))
(insn 1880 1879 1881 93 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:969 _883 ] [969])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [2069])) [1 *ubnd_1546(D) S4 A32])
        (reg:SF 21 xmm0 [orig:970 _884 ] [970])) "BNDLYR2.f":275 131 {*movsf_internal}
     (nil))
(insn 1881 1880 1882 93 (set (reg:SI 1 dx [2070])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 lbnd+0 S4 A32])) "BNDLYR2.f":276 86 {*movsi_internal}
     (nil))
(insn 1882 1881 1883 93 (set (reg:DI 1 dx [orig:971 _885 ] [971])
        (sign_extend:DI (reg:SI 1 dx [2070]))) "BNDLYR2.f":276 149 {*extendsidi2_rex64}
     (nil))
(insn 1883 1882 1884 93 (parallel [
            (set (reg:DI 2 cx [orig:972 _886 ] [972])
                (mult:DI (reg:DI 1 dx [orig:971 _885 ] [971])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":276 349 {*muldi3_1}
     (nil))
(insn 1884 1883 1885 93 (set (reg:SI 1 dx [2071])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":276 86 {*movsi_internal}
     (nil))
(insn 1885 1884 1886 93 (set (reg:DI 1 dx [orig:973 _887 ] [973])
        (sign_extend:DI (reg:SI 1 dx [2071]))) "BNDLYR2.f":276 149 {*extendsidi2_rex64}
     (nil))
(insn 1886 1885 1887 93 (parallel [
            (set (reg:DI 1 dx [orig:974 _888 ] [974])
                (mult:DI (reg:DI 1 dx [orig:973 _887 ] [973])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":276 349 {*muldi3_1}
     (nil))
(insn 1887 1886 1888 93 (parallel [
            (set (reg:DI 2 cx [orig:975 _889 ] [975])
                (plus:DI (reg:DI 2 cx [orig:972 _886 ] [972])
                    (reg:DI 1 dx [orig:974 _888 ] [974])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":276 222 {*adddi_1}
     (nil))
(insn 1888 1887 1889 93 (set (reg:SI 1 dx [2072])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":276 86 {*movsi_internal}
     (nil))
(insn 1889 1888 1890 93 (set (reg:DI 1 dx [orig:976 _890 ] [976])
        (sign_extend:DI (reg:SI 1 dx [2072]))) "BNDLYR2.f":276 149 {*extendsidi2_rex64}
     (nil))
(insn 1890 1889 1891 93 (parallel [
            (set (reg:DI 1 dx [orig:977 _891 ] [977])
                (plus:DI (reg:DI 1 dx [orig:976 _890 ] [976])
                    (reg:DI 2 cx [orig:975 _889 ] [975])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":276 222 {*adddi_1}
     (nil))
(insn 1891 1890 1892 93 (parallel [
            (set (reg:DI 2 cx [orig:978 _892 ] [978])
                (plus:DI (reg:DI 1 dx [orig:977 _891 ] [977])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":276 222 {*adddi_1}
     (nil))
(insn 1892 1891 1893 93 (set (reg/f:DI 1 dx [2073])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [3 vbnd+0 S8 A64])) "BNDLYR2.f":276 85 {*movdi_internal}
     (nil))
(insn 1893 1892 1894 93 (set (reg:SF 21 xmm0 [orig:979 _893 ] [979])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:978 _892 ] [978])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [2073])) [1 *vbnd_1548(D) S4 A32])) "BNDLYR2.f":276 131 {*movsf_internal}
     (nil))
(insn 1894 1893 1895 93 (set (reg:SI 1 dx [2074])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 lbnd+0 S4 A32])) "BNDLYR2.f":276 86 {*movsi_internal}
     (nil))
(insn 1895 1894 1896 93 (set (reg:DI 1 dx [orig:980 _894 ] [980])
        (sign_extend:DI (reg:SI 1 dx [2074]))) "BNDLYR2.f":276 149 {*extendsidi2_rex64}
     (nil))
(insn 1896 1895 1897 93 (parallel [
            (set (reg:DI 2 cx [orig:981 _895 ] [981])
                (mult:DI (reg:DI 1 dx [orig:980 _894 ] [980])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":276 349 {*muldi3_1}
     (nil))
(insn 1897 1896 1898 93 (set (reg:SI 1 dx [2075])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":276 86 {*movsi_internal}
     (nil))
(insn 1898 1897 1899 93 (set (reg:DI 1 dx [orig:982 _896 ] [982])
        (sign_extend:DI (reg:SI 1 dx [2075]))) "BNDLYR2.f":276 149 {*extendsidi2_rex64}
     (nil))
(insn 1899 1898 1900 93 (parallel [
            (set (reg:DI 1 dx [orig:983 _897 ] [983])
                (mult:DI (reg:DI 1 dx [orig:982 _896 ] [982])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":276 349 {*muldi3_1}
     (nil))
(insn 1900 1899 1901 93 (parallel [
            (set (reg:DI 2 cx [orig:984 _898 ] [984])
                (plus:DI (reg:DI 2 cx [orig:981 _895 ] [981])
                    (reg:DI 1 dx [orig:983 _897 ] [983])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":276 222 {*adddi_1}
     (nil))
(insn 1901 1900 1902 93 (set (reg:SI 1 dx [2076])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":276 86 {*movsi_internal}
     (nil))
(insn 1902 1901 1903 93 (set (reg:DI 1 dx [orig:985 _899 ] [985])
        (sign_extend:DI (reg:SI 1 dx [2076]))) "BNDLYR2.f":276 149 {*extendsidi2_rex64}
     (nil))
(insn 1903 1902 1904 93 (parallel [
            (set (reg:DI 1 dx [orig:986 _900 ] [986])
                (plus:DI (reg:DI 1 dx [orig:985 _899 ] [985])
                    (reg:DI 2 cx [orig:984 _898 ] [984])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":276 222 {*adddi_1}
     (nil))
(insn 1904 1903 1905 93 (parallel [
            (set (reg:DI 2 cx [orig:987 _901 ] [987])
                (plus:DI (reg:DI 1 dx [orig:986 _900 ] [986])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":276 222 {*adddi_1}
     (nil))
(insn 1905 1904 1906 93 (set (reg:SF 21 xmm0 [orig:988 _902 ] [988])
        (mult:SF (reg:SF 21 xmm0 [orig:979 _893 ] [979])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -124 [0xffffffffffffff84])) [1 rpvsum+0 S4 A32]))) "BNDLYR2.f":276 838 {*fop_sf_comm}
     (nil))
(insn 1906 1905 1907 93 (set (reg/f:DI 1 dx [2077])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [3 vbnd+0 S8 A64])) "BNDLYR2.f":276 85 {*movdi_internal}
     (nil))
(insn 1907 1906 1908 93 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:987 _901 ] [987])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [2077])) [1 *vbnd_1548(D) S4 A32])
        (reg:SF 21 xmm0 [orig:988 _902 ] [988])) "BNDLYR2.f":276 131 {*movsf_internal}
     (nil))
;;  succ:       94 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1549

;; basic block 94, loop depth 0, maybe hot
;;  prev block 93, next block 165, flags: (RTL, MODIFIED)
;;  pred:       93 (FALLTHRU)
;;              92
;; bb 94 artificial_defs: { }
;; bb 94 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1549
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 1908 1907 1909 94 67 (nil) [1 uses])
(note 1909 1908 1910 94 [bb 94] NOTE_INSN_BASIC_BLOCK)
(insn 1910 1909 3146 94 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":272 221 {*addsi_1}
     (nil))
(jump_insn 3146 1910 3147 94 (set (pc)
        (label_ref 1911)) "BNDLYR2.f":272 683 {jump}
     (nil)
 -> 1911)
;;  succ:       90 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1549

(barrier 3147 3146 3233)
;; basic block 165, loop depth 0, maybe hot
;;  prev block 94, next block 95, flags: (RTL, MODIFIED)
;;  pred:       90
;; bb 165 artificial_defs: { }
;; bb 165 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1549
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 3233 3147 3232 165 162 (nil) [1 uses])
(note 3232 3233 3234 165 [bb 165] NOTE_INSN_BASIC_BLOCK)
(insn 3234 3232 1914 165 (const_int 0 [0]) "BNDLYR2.f":273 718 {nop}
     (nil))
;;  succ:       95 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1549

;; basic block 95, loop depth 0, maybe hot
;;  prev block 165, next block 164, flags: (RTL, MODIFIED)
;;  pred:       165 [always]  (FALLTHRU)
;; bb 95 artificial_defs: { }
;; bb 95 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1549
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 1914 3234 1915 95 66 (nil) [0 uses])
(note 1915 1914 1916 95 [bb 95] NOTE_INSN_BASIC_BLOCK)
(insn 1916 1915 3148 95 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":271 221 {*addsi_1}
     (nil))
(jump_insn 3148 1916 3149 95 (set (pc)
        (label_ref 1917)) "BNDLYR2.f":271 683 {jump}
     (nil)
 -> 1917)
;;  succ:       88 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1549

(barrier 3149 3148 3230)
;; basic block 164, loop depth 0, maybe hot
;;  prev block 95, next block 96, flags: (RTL, MODIFIED)
;;  pred:       88
;; bb 164 artificial_defs: { }
;; bb 164 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 3230 3149 3229 164 161 (nil) [1 uses])
(note 3229 3230 3231 164 [bb 164] NOTE_INSN_BASIC_BLOCK)
(insn 3231 3229 1920 164 (const_int 0 [0]) "BNDLYR2.f":272 718 {nop}
     (nil))
;;  succ:       96 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 96, loop depth 0, maybe hot
;;  prev block 164, next block 161, flags: (RTL, MODIFIED)
;;  pred:       164 [always]  (FALLTHRU)
;; bb 96 artificial_defs: { }
;; bb 96 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 1920 3231 1921 96 65 (nil) [0 uses])
(note 1921 1920 1922 96 [bb 96] NOTE_INSN_BASIC_BLOCK)
(insn 1922 1921 3150 96 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -40 [0xffffffffffffffd8])) [2 lbnd+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -40 [0xffffffffffffffd8])) [2 lbnd+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":256 221 {*addsi_1}
     (nil))
(jump_insn 3150 1922 3151 96 (set (pc)
        (label_ref 1923)) "BNDLYR2.f":256 683 {jump}
     (nil)
 -> 1923)
;;  succ:       77 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 3151 3150 3221)
;; basic block 161, loop depth 0, maybe hot
;;  prev block 96, next block 97, flags: (RTL, MODIFIED)
;;  pred:       77
;; bb 161 artificial_defs: { }
;; bb 161 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 3221 3151 3220 161 158 (nil) [1 uses])
(note 3220 3221 3222 161 [bb 161] NOTE_INSN_BASIC_BLOCK)
(insn 3222 3220 1926 161 (const_int 0 [0]) "BNDLYR2.f":271 718 {nop}
     (nil))
;;  succ:       97 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 97, loop depth 0, maybe hot
;;  prev block 161, next block 98, flags: (RTL, MODIFIED)
;;  pred:       161 [always]  (FALLTHRU)
;; bb 97 artificial_defs: { }
;; bb 97 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 1926 3222 1927 97 58 (nil) [0 uses])
(note 1927 1926 1928 97 [bb 97] NOTE_INSN_BASIC_BLOCK)
(insn 1928 1927 3007 97 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 lbnd+0 S4 A32])
        (const_int 1 [0x1])) "BNDLYR2.f":288 86 {*movsi_internal}
     (nil))
;;  succ:       98 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 98, loop depth 0, maybe hot
;;  prev block 97, next block 99, flags: (RTL, MODIFIED)
;;  pred:       97 (FALLTHRU)
;;              144 [always] 
;; bb 98 artificial_defs: { }
;; bb 98 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1552 2078
(code_label 3007 1928 1929 98 108 (nil) [1 uses])
(note 1929 3007 1930 98 [bb 98] NOTE_INSN_BASIC_BLOCK)
(insn 1930 1929 1931 98 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -40 [0xffffffffffffffd8])) [2 lbnd+0 S4 A32])
            (const_int 6 [0x6]))) "BNDLYR2.f":288 11 {*cmpsi_1}
     (nil))
(insn 1931 1930 1932 98 (set (reg:QI 0 ax [2078])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "BNDLYR2.f":288 678 {*setcc_qi}
     (nil))
(insn 1932 1931 1933 98 (set (reg:SI 0 ax [orig:1552 _1661 ] [1552])
        (zero_extend:SI (reg:QI 0 ax [2078]))) "BNDLYR2.f":288 140 {*zero_extendqisi2}
     (nil))
(insn 1933 1932 1934 98 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:1552 _1661 ] [1552])
            (const_int 0 [0]))) "BNDLYR2.f":288 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1934 1933 1935 98 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 3236)
            (pc))) "BNDLYR2.f":288 682 {*jcc}
     (nil)
 -> 3236)
;;  succ:       166
;;              99 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 99, loop depth 0, maybe hot
;;  prev block 98, next block 100, flags: (RTL, MODIFIED)
;;  pred:       98 (FALLTHRU)
;; bb 99 artificial_defs: { }
;; bb 99 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 1553 1554
(note 1935 1934 1936 99 [bb 99] NOTE_INSN_BASIC_BLOCK)
(insn 1936 1935 1937 99 (set (reg:SI 0 ax [orig:1553 _1662 ] [1553])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7fd1b2d3cea0 parallel>)
                    (const_int 8 [0x8]))) [2 parallel.jsta+0 S4 A64])) "BNDLYR2.f":289 86 {*movsi_internal}
     (nil))
(insn 1937 1936 1938 99 (set (reg:SI 3 bx [orig:1554 _1663 ] [1554])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7fd1b2d3cea0 parallel>)
                    (const_int 12 [0xc]))) [2 parallel.jend+0 S4 A32])) "BNDLYR2.f":289 86 {*movsi_internal}
     (nil))
(insn 1938 1937 2699 99 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])
        (reg:SI 0 ax [orig:1553 _1662 ] [1553])) "BNDLYR2.f":289 86 {*movsi_internal}
     (nil))
;;  succ:       100 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1554

;; basic block 100, loop depth 0, maybe hot
;;  prev block 99, next block 101, flags: (RTL, MODIFIED)
;;  pred:       99 (FALLTHRU)
;;              129 [always] 
;; bb 100 artificial_defs: { }
;; bb 100 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1554
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1554
;; lr  def 	 17 [flags] 1555 2079
(code_label 2699 1938 1939 100 97 (nil) [1 uses])
(note 1939 2699 1940 100 [bb 100] NOTE_INSN_BASIC_BLOCK)
(insn 1940 1939 1941 100 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])
            (reg:SI 3 bx [orig:1554 _1663 ] [1554]))) "BNDLYR2.f":289 11 {*cmpsi_1}
     (nil))
(insn 1941 1940 1942 100 (set (reg:QI 0 ax [2079])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "BNDLYR2.f":289 678 {*setcc_qi}
     (nil))
(insn 1942 1941 1943 100 (set (reg:SI 0 ax [orig:1555 _1665 ] [1555])
        (zero_extend:SI (reg:QI 0 ax [2079]))) "BNDLYR2.f":289 140 {*zero_extendqisi2}
     (nil))
(insn 1943 1942 1944 100 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:1555 _1665 ] [1555])
            (const_int 0 [0]))) "BNDLYR2.f":289 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1944 1943 1945 100 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 3239)
            (pc))) "BNDLYR2.f":289 682 {*jcc}
     (nil)
 -> 3239)
;;  succ:       167
;;              101 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1554

;; basic block 101, loop depth 0, maybe hot
;;  prev block 100, next block 102, flags: (RTL, MODIFIED)
;;  pred:       100 (FALLTHRU)
;; bb 101 artificial_defs: { }
;; bb 101 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1554
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 1945 1944 1946 101 [bb 101] NOTE_INSN_BASIC_BLOCK)
(insn 1946 1945 2693 101 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])
        (const_int 1 [0x1])) "BNDLYR2.f":290 86 {*movsi_internal}
     (nil))
;;  succ:       102 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1554

;; basic block 102, loop depth 0, maybe hot
;;  prev block 101, next block 103, flags: (RTL, MODIFIED)
;;  pred:       101 (FALLTHRU)
;;              128 [always] 
;; bb 102 artificial_defs: { }
;; bb 102 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1554
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1556 2080
(code_label 2693 1946 1947 102 96 (nil) [1 uses])
(note 1947 2693 1948 102 [bb 102] NOTE_INSN_BASIC_BLOCK)
(insn 1948 1947 1949 102 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])
            (const_int 119 [0x77]))) "BNDLYR2.f":290 11 {*cmpsi_1}
     (nil))
(insn 1949 1948 1950 102 (set (reg:QI 0 ax [2080])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "BNDLYR2.f":290 678 {*setcc_qi}
     (nil))
(insn 1950 1949 1951 102 (set (reg:SI 0 ax [orig:1556 _1667 ] [1556])
        (zero_extend:SI (reg:QI 0 ax [2080]))) "BNDLYR2.f":290 140 {*zero_extendqisi2}
     (nil))
(insn 1951 1950 1952 102 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:1556 _1667 ] [1556])
            (const_int 0 [0]))) "BNDLYR2.f":290 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1952 1951 1953 102 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 3242)
            (pc))) "BNDLYR2.f":290 682 {*jcc}
     (nil)
 -> 3242)
;;  succ:       168
;;              103 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1554

;; basic block 103, loop depth 0, maybe hot
;;  prev block 102, next block 104, flags: (RTL, MODIFIED)
;;  pred:       102 (FALLTHRU)
;; bb 103 artificial_defs: { }
;; bb 103 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1554
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 989 990 991 992 993 994 995 996 997 2081 2082 2083 2084 2085
(note 1953 1952 1954 103 [bb 103] NOTE_INSN_BASIC_BLOCK)
(insn 1954 1953 1955 103 (set (reg:SI 0 ax [2081])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 lbnd+0 S4 A32])) "BNDLYR2.f":291 86 {*movsi_internal}
     (nil))
(insn 1955 1954 1956 103 (set (reg:DI 0 ax [orig:989 _903 ] [989])
        (sign_extend:DI (reg:SI 0 ax [2081]))) "BNDLYR2.f":291 149 {*extendsidi2_rex64}
     (nil))
(insn 1956 1955 1957 103 (parallel [
            (set (reg:DI 1 dx [orig:990 _904 ] [990])
                (mult:DI (reg:DI 0 ax [orig:989 _903 ] [989])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":291 349 {*muldi3_1}
     (nil))
(insn 1957 1956 1958 103 (set (reg:SI 0 ax [2082])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":291 86 {*movsi_internal}
     (nil))
(insn 1958 1957 1959 103 (set (reg:DI 0 ax [orig:991 _905 ] [991])
        (sign_extend:DI (reg:SI 0 ax [2082]))) "BNDLYR2.f":291 149 {*extendsidi2_rex64}
     (nil))
(insn 1959 1958 1960 103 (parallel [
            (set (reg:DI 0 ax [orig:992 _906 ] [992])
                (mult:DI (reg:DI 0 ax [orig:991 _905 ] [991])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":291 349 {*muldi3_1}
     (nil))
(insn 1960 1959 1961 103 (parallel [
            (set (reg:DI 1 dx [orig:993 _907 ] [993])
                (plus:DI (reg:DI 1 dx [orig:990 _904 ] [990])
                    (reg:DI 0 ax [orig:992 _906 ] [992])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":291 222 {*adddi_1}
     (nil))
(insn 1961 1960 1962 103 (set (reg:SI 0 ax [2083])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":291 86 {*movsi_internal}
     (nil))
(insn 1962 1961 1963 103 (set (reg:DI 0 ax [orig:994 _908 ] [994])
        (sign_extend:DI (reg:SI 0 ax [2083]))) "BNDLYR2.f":291 149 {*extendsidi2_rex64}
     (nil))
(insn 1963 1962 1964 103 (parallel [
            (set (reg:DI 0 ax [orig:995 _909 ] [995])
                (plus:DI (reg:DI 0 ax [orig:994 _908 ] [994])
                    (reg:DI 1 dx [orig:993 _907 ] [993])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":291 222 {*adddi_1}
     (nil))
(insn 1964 1963 1965 103 (parallel [
            (set (reg:DI 1 dx [orig:996 _910 ] [996])
                (plus:DI (reg:DI 0 ax [orig:995 _909 ] [995])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":291 222 {*adddi_1}
     (nil))
(insn 1965 1964 1966 103 (set (reg/f:DI 0 ax [2084])
        (symbol_ref:DI ("psum.4208") [flags 0x202]  <var_decl 0x7fd1b2d4d480 psum>)) "BNDLYR2.f":291 85 {*movdi_internal}
     (nil))
(insn 1966 1965 1967 103 (set (reg:SF 21 xmm0 [orig:997 _911 ] [997])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:996 _910 ] [996])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [2084])) [1 psum S4 A32])) "BNDLYR2.f":291 131 {*movsf_internal}
     (nil))
(insn 1967 1966 1968 103 (set (reg:SF 22 xmm1 [2085])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0  S4 A32])) "BNDLYR2.f":291 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 1968 1967 1969 103 (set (reg:CCFP 17 flags)
        (unspec:CCFP [
                (compare:CCFP (reg:SF 21 xmm0 [orig:997 _911 ] [997])
                    (reg:SF 22 xmm1 [2085]))
            ] UNSPEC_NOTRAP)) "BNDLYR2.f":291 54 {*cmpiusf}
     (nil))
(jump_insn 1969 1968 3047 103 (set (pc)
        (if_then_else (unordered (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref 2498)
            (pc))) "BNDLYR2.f":291 682 {*jcc}
     (nil)
 -> 2498)
;;  succ:       124
;;              104 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 997 1554

;; basic block 104, loop depth 0, maybe hot
;;  prev block 103, next block 105, flags: (RTL, MODIFIED)
;;  pred:       103 (FALLTHRU)
;; bb 104 artificial_defs: { }
;; bb 104 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 997 1554
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 997
;; lr  def 	 17 [flags] 2086
(note 3047 1969 1970 104 [bb 104] NOTE_INSN_BASIC_BLOCK)
(insn 1970 3047 1971 104 (set (reg:SF 22 xmm1 [2086])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0  S4 A32])) "BNDLYR2.f":291 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 1971 1970 1972 104 (set (reg:CCFP 17 flags)
        (unspec:CCFP [
                (compare:CCFP (reg:SF 21 xmm0 [orig:997 _911 ] [997])
                    (reg:SF 22 xmm1 [2086]))
            ] UNSPEC_NOTRAP)) "BNDLYR2.f":291 54 {*cmpiusf}
     (nil))
(jump_insn 1972 1971 1976 104 (set (pc)
        (if_then_else (ltgt (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 2498)
            (pc))) "BNDLYR2.f":291 682 {*jcc}
     (nil)
 -> 2498)
;;  succ:       105 (FALLTHRU)
;;              124
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1554

;; basic block 105, loop depth 0, maybe hot
;;  prev block 104, next block 106, flags: (RTL, MODIFIED)
;;  pred:       104 (FALLTHRU)
;; bb 105 artificial_defs: { }
;; bb 105 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1554
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 998 999 1000 1001 1002 1003 1004 1005 1006 1007 1008 1009 1010 1011 1012 1013 1014 1015 1016 1017 1018 1019 1020 1021 1022 1023 1024 1025 1026 1027 2087 2088 2089 2090 2091 2092 2093 2094 2095 2096 2097 2098 2099 2100
(note 1976 1972 1977 105 [bb 105] NOTE_INSN_BASIC_BLOCK)
(insn 1977 1976 1978 105 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 l+0 S4 A32])
        (const_int 38 [0x26])) "BNDLYR2.f":292 86 {*movsi_internal}
     (nil))
(insn 1978 1977 1979 105 (set (reg:SF 21 xmm0 [2087])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC20") [flags 0x2]) [0  S4 A32])) "BNDLYR2.f":293 131 {*movsf_internal}
     (nil))
(insn 1979 1978 1980 105 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [1 pmin+0 S4 A32])
        (reg:SF 21 xmm0 [2087])) "BNDLYR2.f":293 131 {*movsf_internal}
     (nil))
(insn 1980 1979 1981 105 (set (reg:SI 0 ax [2088])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 lbnd+0 S4 A32])) "BNDLYR2.f":294 86 {*movsi_internal}
     (nil))
(insn 1981 1980 1982 105 (set (reg:DI 0 ax [orig:998 _912 ] [998])
        (sign_extend:DI (reg:SI 0 ax [2088]))) "BNDLYR2.f":294 149 {*extendsidi2_rex64}
     (nil))
(insn 1982 1981 1983 105 (parallel [
            (set (reg:DI 1 dx [orig:999 _913 ] [999])
                (mult:DI (reg:DI 0 ax [orig:998 _912 ] [998])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":294 349 {*muldi3_1}
     (nil))
(insn 1983 1982 1984 105 (set (reg:SI 0 ax [2089])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":294 86 {*movsi_internal}
     (nil))
(insn 1984 1983 1985 105 (set (reg:DI 0 ax [orig:1000 _914 ] [1000])
        (sign_extend:DI (reg:SI 0 ax [2089]))) "BNDLYR2.f":294 149 {*extendsidi2_rex64}
     (nil))
(insn 1985 1984 1986 105 (parallel [
            (set (reg:DI 0 ax [orig:1001 _915 ] [1001])
                (mult:DI (reg:DI 0 ax [orig:1000 _914 ] [1000])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":294 349 {*muldi3_1}
     (nil))
(insn 1986 1985 1987 105 (parallel [
            (set (reg:DI 1 dx [orig:1002 _916 ] [1002])
                (plus:DI (reg:DI 1 dx [orig:999 _913 ] [999])
                    (reg:DI 0 ax [orig:1001 _915 ] [1001])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":294 222 {*adddi_1}
     (nil))
(insn 1987 1986 1988 105 (set (reg:SI 0 ax [2090])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":294 86 {*movsi_internal}
     (nil))
(insn 1988 1987 1989 105 (set (reg:DI 0 ax [orig:1003 _917 ] [1003])
        (sign_extend:DI (reg:SI 0 ax [2090]))) "BNDLYR2.f":294 149 {*extendsidi2_rex64}
     (nil))
(insn 1989 1988 1990 105 (parallel [
            (set (reg:DI 0 ax [orig:1004 _918 ] [1004])
                (plus:DI (reg:DI 0 ax [orig:1003 _917 ] [1003])
                    (reg:DI 1 dx [orig:1002 _916 ] [1002])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":294 222 {*adddi_1}
     (nil))
(insn 1990 1989 1991 105 (parallel [
            (set (reg:DI 1 dx [orig:1005 _919 ] [1005])
                (plus:DI (reg:DI 0 ax [orig:1004 _918 ] [1004])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":294 222 {*adddi_1}
     (nil))
(insn 1991 1990 1992 105 (set (reg/f:DI 0 ax [2091])
        (symbol_ref:DI ("pbint.4202") [flags 0x202]  <var_decl 0x7fd1b2d4d1b0 pbint>)) "BNDLYR2.f":294 85 {*movdi_internal}
     (nil))
(insn 1992 1991 1993 105 (set (reg:SF 22 xmm1 [orig:1006 _920 ] [1006])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:1005 _919 ] [1005])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [2091])) [1 pbint S4 A32])) "BNDLYR2.f":294 131 {*movsf_internal}
     (nil))
(insn 1993 1992 1994 105 (set (reg:SI 0 ax [2092])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 lbnd+0 S4 A32])) "BNDLYR2.f":294 86 {*movsi_internal}
     (nil))
(insn 1994 1993 1995 105 (parallel [
            (set (reg:SI 0 ax [orig:1007 _921 ] [1007])
                (plus:SI (reg:SI 0 ax [2092])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":294 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -24 [0xffffffffffffffe8])) [2 lbnd+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 1995 1994 1996 105 (set (reg:DI 0 ax [orig:1008 _922 ] [1008])
        (sign_extend:DI (reg:SI 0 ax [orig:1007 _921 ] [1007]))) "BNDLYR2.f":294 149 {*extendsidi2_rex64}
     (nil))
(insn 1996 1995 1997 105 (parallel [
            (set (reg:DI 1 dx [orig:1009 _923 ] [1009])
                (mult:DI (reg:DI 0 ax [orig:1008 _922 ] [1008])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":294 349 {*muldi3_1}
     (nil))
(insn 1997 1996 1998 105 (set (reg:SI 0 ax [2093])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":294 86 {*movsi_internal}
     (nil))
(insn 1998 1997 1999 105 (set (reg:DI 0 ax [orig:1010 _924 ] [1010])
        (sign_extend:DI (reg:SI 0 ax [2093]))) "BNDLYR2.f":294 149 {*extendsidi2_rex64}
     (nil))
(insn 1999 1998 2000 105 (parallel [
            (set (reg:DI 0 ax [orig:1011 _925 ] [1011])
                (mult:DI (reg:DI 0 ax [orig:1010 _924 ] [1010])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":294 349 {*muldi3_1}
     (nil))
(insn 2000 1999 2001 105 (parallel [
            (set (reg:DI 1 dx [orig:1012 _926 ] [1012])
                (plus:DI (reg:DI 1 dx [orig:1009 _923 ] [1009])
                    (reg:DI 0 ax [orig:1011 _925 ] [1011])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":294 222 {*adddi_1}
     (nil))
(insn 2001 2000 2002 105 (set (reg:SI 0 ax [2094])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":294 86 {*movsi_internal}
     (nil))
(insn 2002 2001 2003 105 (set (reg:DI 0 ax [orig:1013 _927 ] [1013])
        (sign_extend:DI (reg:SI 0 ax [2094]))) "BNDLYR2.f":294 149 {*extendsidi2_rex64}
     (nil))
(insn 2003 2002 2004 105 (parallel [
            (set (reg:DI 0 ax [orig:1014 _928 ] [1014])
                (plus:DI (reg:DI 0 ax [orig:1013 _927 ] [1013])
                    (reg:DI 1 dx [orig:1012 _926 ] [1012])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":294 222 {*adddi_1}
     (nil))
(insn 2004 2003 2005 105 (parallel [
            (set (reg:DI 1 dx [orig:1015 _929 ] [1015])
                (plus:DI (reg:DI 0 ax [orig:1014 _928 ] [1014])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":294 222 {*adddi_1}
     (nil))
(insn 2005 2004 2006 105 (set (reg/f:DI 0 ax [2095])
        (symbol_ref:DI ("pbint.4202") [flags 0x202]  <var_decl 0x7fd1b2d4d1b0 pbint>)) "BNDLYR2.f":294 85 {*movdi_internal}
     (nil))
(insn 2006 2005 2007 105 (set (reg:SF 21 xmm0 [orig:1016 _930 ] [1016])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:1015 _929 ] [1015])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [2095])) [1 pbint S4 A32])) "BNDLYR2.f":294 131 {*movsf_internal}
     (nil))
(insn 2007 2006 2008 105 (set (reg:SF 21 xmm0 [orig:1017 _931 ] [1017])
        (plus:SF (reg:SF 21 xmm0 [orig:1016 _930 ] [1016])
            (reg:SF 22 xmm1 [orig:1006 _920 ] [1006]))) "BNDLYR2.f":294 838 {*fop_sf_comm}
     (nil))
(insn 2008 2007 2009 105 (set (reg:SF 22 xmm1 [orig:1018 _932 ] [1018])
        (reg:SF 21 xmm0 [orig:1017 _931 ] [1017])) "BNDLYR2.f":294 131 {*movsf_internal}
     (nil))
(insn 2009 2008 2010 105 (set (reg:SI 0 ax [2096])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 lbnd+0 S4 A32])) "BNDLYR2.f":294 86 {*movsi_internal}
     (nil))
(insn 2010 2009 2011 105 (set (reg:DI 0 ax [orig:1019 _933 ] [1019])
        (sign_extend:DI (reg:SI 0 ax [2096]))) "BNDLYR2.f":294 149 {*extendsidi2_rex64}
     (nil))
(insn 2011 2010 2012 105 (parallel [
            (set (reg:DI 1 dx [orig:1020 _934 ] [1020])
                (mult:DI (reg:DI 0 ax [orig:1019 _933 ] [1019])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":294 349 {*muldi3_1}
     (nil))
(insn 2012 2011 2013 105 (set (reg:SI 0 ax [2097])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":294 86 {*movsi_internal}
     (nil))
(insn 2013 2012 2014 105 (set (reg:DI 0 ax [orig:1021 _935 ] [1021])
        (sign_extend:DI (reg:SI 0 ax [2097]))) "BNDLYR2.f":294 149 {*extendsidi2_rex64}
     (nil))
(insn 2014 2013 2015 105 (parallel [
            (set (reg:DI 0 ax [orig:1022 _936 ] [1022])
                (mult:DI (reg:DI 0 ax [orig:1021 _935 ] [1021])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":294 349 {*muldi3_1}
     (nil))
(insn 2015 2014 2016 105 (parallel [
            (set (reg:DI 1 dx [orig:1023 _937 ] [1023])
                (plus:DI (reg:DI 1 dx [orig:1020 _934 ] [1020])
                    (reg:DI 0 ax [orig:1022 _936 ] [1022])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":294 222 {*adddi_1}
     (nil))
(insn 2016 2015 2017 105 (set (reg:SI 0 ax [2098])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":294 86 {*movsi_internal}
     (nil))
(insn 2017 2016 2018 105 (set (reg:DI 0 ax [orig:1024 _938 ] [1024])
        (sign_extend:DI (reg:SI 0 ax [2098]))) "BNDLYR2.f":294 149 {*extendsidi2_rex64}
     (nil))
(insn 2018 2017 2019 105 (parallel [
            (set (reg:DI 0 ax [orig:1025 _939 ] [1025])
                (plus:DI (reg:DI 0 ax [orig:1024 _938 ] [1024])
                    (reg:DI 1 dx [orig:1023 _937 ] [1023])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":294 222 {*adddi_1}
     (nil))
(insn 2019 2018 2020 105 (parallel [
            (set (reg:DI 1 dx [orig:1026 _940 ] [1026])
                (plus:DI (reg:DI 0 ax [orig:1025 _939 ] [1025])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":294 222 {*adddi_1}
     (nil))
(insn 2020 2019 2021 105 (set (reg:SF 21 xmm0 [2099])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC6") [flags 0x2]) [0  S4 A32])) "BNDLYR2.f":294 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 5.0e-1 [0x0.8p+0])
        (nil)))
(insn 2021 2020 2022 105 (set (reg:SF 21 xmm0 [orig:1027 _941 ] [1027])
        (mult:SF (reg:SF 21 xmm0 [2099])
            (reg:SF 22 xmm1 [orig:1018 _932 ] [1018]))) "BNDLYR2.f":294 838 {*fop_sf_comm}
     (nil))
(insn 2022 2021 2023 105 (set (reg/f:DI 0 ax [2100])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -152 [0xffffffffffffff68])) [3 pbnd+0 S8 A64])) "BNDLYR2.f":294 85 {*movdi_internal}
     (nil))
(insn 2023 2022 2024 105 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:1026 _940 ] [1026])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [2100])) [1 *pbnd_1537(D) S4 A32])
        (reg:SF 21 xmm0 [orig:1027 _941 ] [1027])) "BNDLYR2.f":294 131 {*movsf_internal}
     (nil))
(insn 2024 2023 2096 105 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [2 ll+0 S4 A32])
        (const_int 1 [0x1])) "BNDLYR2.f":296 86 {*movsi_internal}
     (nil))
;;  succ:       106 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1554

;; basic block 106, loop depth 0, maybe hot
;;  prev block 105, next block 107, flags: (RTL, MODIFIED)
;;  pred:       105 (FALLTHRU)
;;              109 [always] 
;; bb 106 artificial_defs: { }
;; bb 106 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1554
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1557 2101
(code_label 2096 2024 2025 106 80 (nil) [1 uses])
(note 2025 2096 2026 106 [bb 106] NOTE_INSN_BASIC_BLOCK)
(insn 2026 2025 2027 106 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -44 [0xffffffffffffffd4])) [2 ll+0 S4 A32])
            (const_int 38 [0x26]))) "BNDLYR2.f":296 11 {*cmpsi_1}
     (nil))
(insn 2027 2026 2028 106 (set (reg:QI 0 ax [2101])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "BNDLYR2.f":296 678 {*setcc_qi}
     (nil))
(insn 2028 2027 2029 106 (set (reg:SI 0 ax [orig:1557 _1672 ] [1557])
        (zero_extend:SI (reg:QI 0 ax [2101]))) "BNDLYR2.f":296 140 {*zero_extendqisi2}
     (nil))
(insn 2029 2028 2030 106 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:1557 _1672 ] [1557])
            (const_int 0 [0]))) "BNDLYR2.f":296 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 2030 2029 2031 106 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 3245)
            (pc))) "BNDLYR2.f":296 682 {*jcc}
     (nil)
 -> 3245)
;;  succ:       169
;;              107 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1554

;; basic block 107, loop depth 0, maybe hot
;;  prev block 106, next block 108, flags: (RTL, MODIFIED)
;;  pred:       106 (FALLTHRU)
;; bb 107 artificial_defs: { }
;; bb 107 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1554
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1028 1029 1030 1031 1032 1033 1034 1035 1036 1037 1038 1039 1040 1041 1042 1043 1044 1045 1046 1047 1048 1049 1050 1051 1052 1053 1054 1055 1056 1057 1058 2102 2103 2104 2105 2106 2107 2108 2109 2110 2111 2112 2113 2114 2115 2116 2117 2118 2119
(note 2031 2030 2032 107 [bb 107] NOTE_INSN_BASIC_BLOCK)
(insn 2032 2031 2033 107 (set (reg:SI 0 ax [2102])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [2 ll+0 S4 A32])) "BNDLYR2.f":297 86 {*movsi_internal}
     (nil))
(insn 2033 2032 2034 107 (set (reg:DI 0 ax [orig:1028 _942 ] [1028])
        (sign_extend:DI (reg:SI 0 ax [2102]))) "BNDLYR2.f":297 149 {*extendsidi2_rex64}
     (nil))
(insn 2034 2033 2035 107 (parallel [
            (set (reg:DI 1 dx [orig:1029 _943 ] [1029])
                (mult:DI (reg:DI 0 ax [orig:1028 _942 ] [1028])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":297 349 {*muldi3_1}
     (nil))
(insn 2035 2034 2036 107 (set (reg:SI 0 ax [2103])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":297 86 {*movsi_internal}
     (nil))
(insn 2036 2035 2037 107 (set (reg:DI 0 ax [orig:1030 _944 ] [1030])
        (sign_extend:DI (reg:SI 0 ax [2103]))) "BNDLYR2.f":297 149 {*extendsidi2_rex64}
     (nil))
(insn 2037 2036 2038 107 (parallel [
            (set (reg:DI 0 ax [orig:1031 _945 ] [1031])
                (mult:DI (reg:DI 0 ax [orig:1030 _944 ] [1030])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":297 349 {*muldi3_1}
     (nil))
(insn 2038 2037 2039 107 (parallel [
            (set (reg:DI 1 dx [orig:1032 _946 ] [1032])
                (plus:DI (reg:DI 1 dx [orig:1029 _943 ] [1029])
                    (reg:DI 0 ax [orig:1031 _945 ] [1031])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":297 222 {*adddi_1}
     (nil))
(insn 2039 2038 2040 107 (set (reg:SI 0 ax [2104])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":297 86 {*movsi_internal}
     (nil))
(insn 2040 2039 2041 107 (set (reg:DI 0 ax [orig:1033 _947 ] [1033])
        (sign_extend:DI (reg:SI 0 ax [2104]))) "BNDLYR2.f":297 149 {*extendsidi2_rex64}
     (nil))
(insn 2041 2040 2042 107 (parallel [
            (set (reg:DI 0 ax [orig:1034 _948 ] [1034])
                (plus:DI (reg:DI 0 ax [orig:1033 _947 ] [1033])
                    (reg:DI 1 dx [orig:1032 _946 ] [1032])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":297 222 {*adddi_1}
     (nil))
(insn 2042 2041 2043 107 (parallel [
            (set (reg:DI 1 dx [orig:1035 _949 ] [1035])
                (plus:DI (reg:DI 0 ax [orig:1034 _948 ] [1034])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":297 222 {*adddi_1}
     (nil))
(insn 2043 2042 2044 107 (set (reg/f:DI 0 ax [2105])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7fd1b2d2cc60 extra>)) "BNDLYR2.f":297 85 {*movdi_internal}
     (nil))
(insn 2044 2043 2045 107 (set (reg:SF 22 xmm1 [orig:1036 _950 ] [1036])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:1035 _949 ] [1035])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [2105])) [1 extra.pint S4 A32])) "BNDLYR2.f":297 131 {*movsf_internal}
     (nil))
(insn 2045 2044 2046 107 (set (reg:SI 0 ax [2106])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [2 ll+0 S4 A32])) "BNDLYR2.f":297 86 {*movsi_internal}
     (nil))
(insn 2046 2045 2047 107 (parallel [
            (set (reg:SI 0 ax [orig:1037 _951 ] [1037])
                (plus:SI (reg:SI 0 ax [2106])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":297 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -28 [0xffffffffffffffe4])) [2 ll+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 2047 2046 2048 107 (set (reg:DI 0 ax [orig:1038 _952 ] [1038])
        (sign_extend:DI (reg:SI 0 ax [orig:1037 _951 ] [1037]))) "BNDLYR2.f":297 149 {*extendsidi2_rex64}
     (nil))
(insn 2048 2047 2049 107 (parallel [
            (set (reg:DI 1 dx [orig:1039 _953 ] [1039])
                (mult:DI (reg:DI 0 ax [orig:1038 _952 ] [1038])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":297 349 {*muldi3_1}
     (nil))
(insn 2049 2048 2050 107 (set (reg:SI 0 ax [2107])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":297 86 {*movsi_internal}
     (nil))
(insn 2050 2049 2051 107 (set (reg:DI 0 ax [orig:1040 _954 ] [1040])
        (sign_extend:DI (reg:SI 0 ax [2107]))) "BNDLYR2.f":297 149 {*extendsidi2_rex64}
     (nil))
(insn 2051 2050 2052 107 (parallel [
            (set (reg:DI 0 ax [orig:1041 _955 ] [1041])
                (mult:DI (reg:DI 0 ax [orig:1040 _954 ] [1040])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":297 349 {*muldi3_1}
     (nil))
(insn 2052 2051 2053 107 (parallel [
            (set (reg:DI 1 dx [orig:1042 _956 ] [1042])
                (plus:DI (reg:DI 1 dx [orig:1039 _953 ] [1039])
                    (reg:DI 0 ax [orig:1041 _955 ] [1041])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":297 222 {*adddi_1}
     (nil))
(insn 2053 2052 2054 107 (set (reg:SI 0 ax [2108])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":297 86 {*movsi_internal}
     (nil))
(insn 2054 2053 2055 107 (set (reg:DI 0 ax [orig:1043 _957 ] [1043])
        (sign_extend:DI (reg:SI 0 ax [2108]))) "BNDLYR2.f":297 149 {*extendsidi2_rex64}
     (nil))
(insn 2055 2054 2056 107 (parallel [
            (set (reg:DI 0 ax [orig:1044 _958 ] [1044])
                (plus:DI (reg:DI 0 ax [orig:1043 _957 ] [1043])
                    (reg:DI 1 dx [orig:1042 _956 ] [1042])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":297 222 {*adddi_1}
     (nil))
(insn 2056 2055 2057 107 (parallel [
            (set (reg:DI 1 dx [orig:1045 _959 ] [1045])
                (plus:DI (reg:DI 0 ax [orig:1044 _958 ] [1044])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":297 222 {*adddi_1}
     (nil))
(insn 2057 2056 2058 107 (set (reg/f:DI 0 ax [2109])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7fd1b2d2cc60 extra>)) "BNDLYR2.f":297 85 {*movdi_internal}
     (nil))
(insn 2058 2057 2059 107 (set (reg:SF 21 xmm0 [orig:1046 _960 ] [1046])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:1045 _959 ] [1045])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [2109])) [1 extra.pint S4 A32])) "BNDLYR2.f":297 131 {*movsf_internal}
     (nil))
(insn 2059 2058 2060 107 (set (reg:SF 21 xmm0 [orig:1047 _961 ] [1047])
        (plus:SF (reg:SF 21 xmm0 [orig:1046 _960 ] [1046])
            (reg:SF 22 xmm1 [orig:1036 _950 ] [1036]))) "BNDLYR2.f":297 838 {*fop_sf_comm}
     (nil))
(insn 2060 2059 2061 107 (set (reg:SF 22 xmm1 [orig:1048 _962 ] [1048])
        (reg:SF 21 xmm0 [orig:1047 _961 ] [1047])) "BNDLYR2.f":297 131 {*movsf_internal}
     (nil))
(insn 2061 2060 2062 107 (set (reg:SF 21 xmm0 [2111])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC6") [flags 0x2]) [0  S4 A32])) "BNDLYR2.f":297 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 5.0e-1 [0x0.8p+0])
        (nil)))
(insn 2062 2061 2063 107 (set (reg:SF 21 xmm0 [2110])
        (mult:SF (reg:SF 21 xmm0 [2111])
            (reg:SF 22 xmm1 [orig:1048 _962 ] [1048]))) "BNDLYR2.f":297 838 {*fop_sf_comm}
     (nil))
(insn 2063 2062 2064 107 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -68 [0xffffffffffffffbc])) [1 pm+0 S4 A32])
        (reg:SF 21 xmm0 [2110])) "BNDLYR2.f":297 131 {*movsf_internal}
     (nil))
(insn 2064 2063 2065 107 (set (reg:SI 0 ax [2112])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 lbnd+0 S4 A32])) "BNDLYR2.f":298 86 {*movsi_internal}
     (nil))
(insn 2065 2064 2066 107 (set (reg:DI 0 ax [orig:1049 _963 ] [1049])
        (sign_extend:DI (reg:SI 0 ax [2112]))) "BNDLYR2.f":298 149 {*extendsidi2_rex64}
     (nil))
(insn 2066 2065 2067 107 (parallel [
            (set (reg:DI 1 dx [orig:1050 _964 ] [1050])
                (mult:DI (reg:DI 0 ax [orig:1049 _963 ] [1049])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":298 349 {*muldi3_1}
     (nil))
(insn 2067 2066 2068 107 (set (reg:SI 0 ax [2113])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":298 86 {*movsi_internal}
     (nil))
(insn 2068 2067 2069 107 (set (reg:DI 0 ax [orig:1051 _965 ] [1051])
        (sign_extend:DI (reg:SI 0 ax [2113]))) "BNDLYR2.f":298 149 {*extendsidi2_rex64}
     (nil))
(insn 2069 2068 2070 107 (parallel [
            (set (reg:DI 0 ax [orig:1052 _966 ] [1052])
                (mult:DI (reg:DI 0 ax [orig:1051 _965 ] [1051])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":298 349 {*muldi3_1}
     (nil))
(insn 2070 2069 2071 107 (parallel [
            (set (reg:DI 1 dx [orig:1053 _967 ] [1053])
                (plus:DI (reg:DI 1 dx [orig:1050 _964 ] [1050])
                    (reg:DI 0 ax [orig:1052 _966 ] [1052])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":298 222 {*adddi_1}
     (nil))
(insn 2071 2070 2072 107 (set (reg:SI 0 ax [2114])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":298 86 {*movsi_internal}
     (nil))
(insn 2072 2071 2073 107 (set (reg:DI 0 ax [orig:1054 _968 ] [1054])
        (sign_extend:DI (reg:SI 0 ax [2114]))) "BNDLYR2.f":298 149 {*extendsidi2_rex64}
     (nil))
(insn 2073 2072 2074 107 (parallel [
            (set (reg:DI 0 ax [orig:1055 _969 ] [1055])
                (plus:DI (reg:DI 0 ax [orig:1054 _968 ] [1054])
                    (reg:DI 1 dx [orig:1053 _967 ] [1053])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":298 222 {*adddi_1}
     (nil))
(insn 2074 2073 2075 107 (parallel [
            (set (reg:DI 1 dx [orig:1056 _970 ] [1056])
                (plus:DI (reg:DI 0 ax [orig:1055 _969 ] [1055])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":298 222 {*adddi_1}
     (nil))
(insn 2075 2074 2076 107 (set (reg/f:DI 0 ax [2115])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -152 [0xffffffffffffff68])) [3 pbnd+0 S8 A64])) "BNDLYR2.f":298 85 {*movdi_internal}
     (nil))
(insn 2076 2075 2077 107 (set (reg:SF 22 xmm1 [orig:1057 _971 ] [1057])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:1056 _970 ] [1056])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [2115])) [1 *pbnd_1537(D) S4 A32])) "BNDLYR2.f":298 131 {*movsf_internal}
     (nil))
(insn 2077 2076 2078 107 (set (reg:SF 21 xmm0 [2116])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -68 [0xffffffffffffffbc])) [1 pm+0 S4 A32])) "BNDLYR2.f":298 131 {*movsf_internal}
     (nil))
(insn 2078 2077 2079 107 (set (reg:SF 21 xmm0 [orig:1058 _972 ] [1058])
        (minus:SF (reg:SF 21 xmm0 [2116])
            (reg:SF 22 xmm1 [orig:1057 _971 ] [1057]))) "BNDLYR2.f":298 841 {*fop_sf_1}
     (nil))
(insn 2079 2078 2080 107 (set (reg:V4SF 22 xmm1 [2118])
        (mem/u/c:V4SF (symbol_ref/u:DI ("*.LC21") [flags 0x2]) [0  S16 A128])) "BNDLYR2.f":298 1282 {movv4sf_internal}
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF +QNaN [+QNaN])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 2080 2079 2081 107 (parallel [
            (set (reg:SF 21 xmm0 [2117])
                (abs:SF (reg:SF 21 xmm0 [orig:1058 _972 ] [1058])))
            (use (reg:V4SF 22 xmm1 [2118]))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":298 507 {*absnegsf2}
     (expr_list:REG_EQUAL (abs:SF (reg:SF 21 xmm0 [orig:1058 _972 ] [1058]))
        (nil)))
(insn 2081 2080 2082 107 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -128 [0xffffffffffffff80])) [1 delp+0 S4 A32])
        (reg:SF 21 xmm0 [2117])) "BNDLYR2.f":298 131 {*movsf_internal}
     (nil))
(insn 2082 2081 2083 107 (set (reg:SF 21 xmm0 [2119])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [1 pmin+0 S4 A32])) "BNDLYR2.f":299 131 {*movsf_internal}
     (nil))
(insn 2083 2082 2084 107 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [2119])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -128 [0xffffffffffffff80])) [1 delp+0 S4 A32]))) "BNDLYR2.f":299 53 {*cmpisf}
     (nil))
(jump_insn 2084 2083 2088 107 (set (pc)
        (if_then_else (unle (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 2093)
            (pc))) "BNDLYR2.f":299 682 {*jcc}
     (nil)
 -> 2093)
;;  succ:       108 (FALLTHRU)
;;              109
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1554

;; basic block 108, loop depth 0, maybe hot
;;  prev block 107, next block 109, flags: (RTL, MODIFIED)
;;  pred:       107 (FALLTHRU)
;; bb 108 artificial_defs: { }
;; bb 108 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1554
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 2120 2121
(note 2088 2084 2089 108 [bb 108] NOTE_INSN_BASIC_BLOCK)
(insn 2089 2088 2090 108 (set (reg:SF 21 xmm0 [2120])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -128 [0xffffffffffffff80])) [1 delp+0 S4 A32])) "BNDLYR2.f":300 131 {*movsf_internal}
     (nil))
(insn 2090 2089 2091 108 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [1 pmin+0 S4 A32])
        (reg:SF 21 xmm0 [2120])) "BNDLYR2.f":300 131 {*movsf_internal}
     (nil))
(insn 2091 2090 2092 108 (set (reg:SI 0 ax [2121])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [2 ll+0 S4 A32])) "BNDLYR2.f":301 86 {*movsi_internal}
     (nil))
(insn 2092 2091 2093 108 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 l+0 S4 A32])
        (reg:SI 0 ax [2121])) "BNDLYR2.f":301 86 {*movsi_internal}
     (nil))
;;  succ:       109 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1554

;; basic block 109, loop depth 0, maybe hot
;;  prev block 108, next block 169, flags: (RTL, MODIFIED)
;;  pred:       108 (FALLTHRU)
;;              107
;; bb 109 artificial_defs: { }
;; bb 109 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1554
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 2093 2092 2094 109 78 (nil) [1 uses])
(note 2094 2093 2095 109 [bb 109] NOTE_INSN_BASIC_BLOCK)
(insn 2095 2094 3152 109 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -44 [0xffffffffffffffd4])) [2 ll+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -44 [0xffffffffffffffd4])) [2 ll+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":296 221 {*addsi_1}
     (nil))
(jump_insn 3152 2095 3153 109 (set (pc)
        (label_ref 2096)) "BNDLYR2.f":296 683 {jump}
     (nil)
 -> 2096)
;;  succ:       106 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1554

(barrier 3153 3152 3245)
;; basic block 169, loop depth 0, maybe hot
;;  prev block 109, next block 110, flags: (RTL, MODIFIED)
;;  pred:       106
;; bb 169 artificial_defs: { }
;; bb 169 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1554
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 3245 3153 3244 169 166 (nil) [1 uses])
(note 3244 3245 3246 169 [bb 169] NOTE_INSN_BASIC_BLOCK)
(insn 3246 3244 2099 169 (const_int 0 [0]) "BNDLYR2.f":299 718 {nop}
     (nil))
;;  succ:       110 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1554

;; basic block 110, loop depth 0, maybe hot
;;  prev block 169, next block 111, flags: (RTL, MODIFIED)
;;  pred:       169 [always]  (FALLTHRU)
;; bb 110 artificial_defs: { }
;; bb 110 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1554
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1059 1060 1061 1062 1063 1064 1065 1066 1067 1068 1069 1070 1071 1072 1073 1074 1075 1076 1077 1078 1079 1080 1081 1082 1083 1084 1085 1086 1087 1088 1089 1090 1091 1092 1093 1094 1095 1096 1097 1098 1099 1100 1101 1102 1103 1104 1105 1106 1107 1108 1109 1110 1111 1112 1113 1114 1115 1116 1117 1118 1119 1120 1121 1122 1123 1124 1125 1126 1127 1128 1129 1130 1131 1132 1133 1134 1135 1136 1137 1138 1139 1140 1141 1142 1143 1144 1145 1146 1147 1148 1149 1150 1151 1152 1516 2122 2123 2124 2125 2126 2127 2128 2129 2130 2131 2132 2133 2134 2135 2136 2137 2138 2139 2140 2141 2142 2143 2144 2145 2146 2147 2148 2149 2150 2151 2152 2153 2154 2155 2156 2157 2158 2159 2160 2161 2162 2163 2164 2165 2166 2167 2168 2169 2170 2171 2172
(code_label 2099 3246 2100 110 77 (nil) [0 uses])
(note 2100 2099 2101 110 [bb 110] NOTE_INSN_BASIC_BLOCK)
(insn 2101 2100 2102 110 (set (reg:SI 0 ax [2122])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 l+0 S4 A32])) "BNDLYR2.f":305 86 {*movsi_internal}
     (nil))
(insn 2102 2101 2103 110 (parallel [
            (set (reg:SI 0 ax [orig:1059 _973 ] [1059])
                (plus:SI (reg:SI 0 ax [2122])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":305 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -20 [0xffffffffffffffec])) [2 l+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 2103 2102 2104 110 (set (reg:DI 0 ax [orig:1060 _974 ] [1060])
        (sign_extend:DI (reg:SI 0 ax [orig:1059 _973 ] [1059]))) "BNDLYR2.f":305 149 {*extendsidi2_rex64}
     (nil))
(insn 2104 2103 2105 110 (parallel [
            (set (reg:DI 1 dx [orig:1061 _975 ] [1061])
                (mult:DI (reg:DI 0 ax [orig:1060 _974 ] [1060])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":305 349 {*muldi3_1}
     (nil))
(insn 2105 2104 2106 110 (set (reg:SI 0 ax [2123])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":305 86 {*movsi_internal}
     (nil))
(insn 2106 2105 2107 110 (set (reg:DI 0 ax [orig:1062 _976 ] [1062])
        (sign_extend:DI (reg:SI 0 ax [2123]))) "BNDLYR2.f":305 149 {*extendsidi2_rex64}
     (nil))
(insn 2107 2106 2108 110 (parallel [
            (set (reg:DI 0 ax [orig:1063 _977 ] [1063])
                (mult:DI (reg:DI 0 ax [orig:1062 _976 ] [1062])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":305 349 {*muldi3_1}
     (nil))
(insn 2108 2107 2109 110 (parallel [
            (set (reg:DI 1 dx [orig:1064 _978 ] [1064])
                (plus:DI (reg:DI 1 dx [orig:1061 _975 ] [1061])
                    (reg:DI 0 ax [orig:1063 _977 ] [1063])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":305 222 {*adddi_1}
     (nil))
(insn 2109 2108 2110 110 (set (reg:SI 0 ax [2124])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":305 86 {*movsi_internal}
     (nil))
(insn 2110 2109 2111 110 (set (reg:DI 0 ax [orig:1065 _979 ] [1065])
        (sign_extend:DI (reg:SI 0 ax [2124]))) "BNDLYR2.f":305 149 {*extendsidi2_rex64}
     (nil))
(insn 2111 2110 2112 110 (parallel [
            (set (reg:DI 0 ax [orig:1066 _980 ] [1066])
                (plus:DI (reg:DI 0 ax [orig:1065 _979 ] [1065])
                    (reg:DI 1 dx [orig:1064 _978 ] [1064])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":305 222 {*adddi_1}
     (nil))
(insn 2112 2111 2113 110 (parallel [
            (set (reg:DI 1 dx [orig:1067 _981 ] [1067])
                (plus:DI (reg:DI 0 ax [orig:1066 _980 ] [1066])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":305 222 {*adddi_1}
     (nil))
(insn 2113 2112 2114 110 (set (reg/f:DI 0 ax [2125])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7fd1b2d2cc60 extra>)) "BNDLYR2.f":305 85 {*movdi_internal}
     (nil))
(insn 2114 2113 2115 110 (set (reg:SF 21 xmm0 [orig:1068 _982 ] [1068])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:1067 _981 ] [1067])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [2125])) [1 extra.pint S4 A32])) "BNDLYR2.f":305 131 {*movsf_internal}
     (nil))
(insn 2115 2114 2116 110 (set (reg:SI 0 ax [2126])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 l+0 S4 A32])) "BNDLYR2.f":305 86 {*movsi_internal}
     (nil))
(insn 2116 2115 2117 110 (set (reg:DI 0 ax [orig:1069 _983 ] [1069])
        (sign_extend:DI (reg:SI 0 ax [2126]))) "BNDLYR2.f":305 149 {*extendsidi2_rex64}
     (nil))
(insn 2117 2116 2118 110 (parallel [
            (set (reg:DI 1 dx [orig:1070 _984 ] [1070])
                (mult:DI (reg:DI 0 ax [orig:1069 _983 ] [1069])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":305 349 {*muldi3_1}
     (nil))
(insn 2118 2117 2119 110 (set (reg:SI 0 ax [2127])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":305 86 {*movsi_internal}
     (nil))
(insn 2119 2118 2120 110 (set (reg:DI 0 ax [orig:1071 _985 ] [1071])
        (sign_extend:DI (reg:SI 0 ax [2127]))) "BNDLYR2.f":305 149 {*extendsidi2_rex64}
     (nil))
(insn 2120 2119 2121 110 (parallel [
            (set (reg:DI 0 ax [orig:1072 _986 ] [1072])
                (mult:DI (reg:DI 0 ax [orig:1071 _985 ] [1071])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":305 349 {*muldi3_1}
     (nil))
(insn 2121 2120 2122 110 (parallel [
            (set (reg:DI 1 dx [orig:1073 _987 ] [1073])
                (plus:DI (reg:DI 1 dx [orig:1070 _984 ] [1070])
                    (reg:DI 0 ax [orig:1072 _986 ] [1072])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":305 222 {*adddi_1}
     (nil))
(insn 2122 2121 2123 110 (set (reg:SI 0 ax [2128])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":305 86 {*movsi_internal}
     (nil))
(insn 2123 2122 2124 110 (set (reg:DI 0 ax [orig:1074 _988 ] [1074])
        (sign_extend:DI (reg:SI 0 ax [2128]))) "BNDLYR2.f":305 149 {*extendsidi2_rex64}
     (nil))
(insn 2124 2123 2125 110 (parallel [
            (set (reg:DI 0 ax [orig:1075 _989 ] [1075])
                (plus:DI (reg:DI 0 ax [orig:1074 _988 ] [1074])
                    (reg:DI 1 dx [orig:1073 _987 ] [1073])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":305 222 {*adddi_1}
     (nil))
(insn 2125 2124 2126 110 (parallel [
            (set (reg:DI 1 dx [orig:1076 _990 ] [1076])
                (plus:DI (reg:DI 0 ax [orig:1075 _989 ] [1075])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":305 222 {*adddi_1}
     (nil))
(insn 2126 2125 2127 110 (set (reg/f:DI 0 ax [2129])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7fd1b2d2cc60 extra>)) "BNDLYR2.f":305 85 {*movdi_internal}
     (nil))
(insn 2127 2126 2128 110 (set (reg:SF 22 xmm1 [orig:1077 _991 ] [1077])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:1076 _990 ] [1076])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [2129])) [1 extra.pint S4 A32])) "BNDLYR2.f":305 131 {*movsf_internal}
     (nil))
(insn 2128 2127 2129 110 (set (reg:SF 21 xmm0 [2130])
        (minus:SF (reg:SF 21 xmm0 [orig:1068 _982 ] [1068])
            (reg:SF 22 xmm1 [orig:1077 _991 ] [1077]))) "BNDLYR2.f":305 841 {*fop_sf_1}
     (nil))
(insn 2129 2128 2130 110 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [1 dp+0 S4 A32])
        (reg:SF 21 xmm0 [2130])) "BNDLYR2.f":305 131 {*movsf_internal}
     (nil))
(insn 2130 2129 2131 110 (set (reg:SI 0 ax [2131])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 l+0 S4 A32])) "BNDLYR2.f":306 86 {*movsi_internal}
     (nil))
(insn 2131 2130 2132 110 (set (reg:DI 0 ax [orig:1078 _992 ] [1078])
        (sign_extend:DI (reg:SI 0 ax [2131]))) "BNDLYR2.f":306 149 {*extendsidi2_rex64}
     (nil))
(insn 2132 2131 2133 110 (parallel [
            (set (reg:DI 1 dx [orig:1079 _993 ] [1079])
                (mult:DI (reg:DI 0 ax [orig:1078 _992 ] [1078])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":306 349 {*muldi3_1}
     (nil))
(insn 2133 2132 2134 110 (set (reg:SI 0 ax [2132])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":306 86 {*movsi_internal}
     (nil))
(insn 2134 2133 2135 110 (set (reg:DI 0 ax [orig:1080 _994 ] [1080])
        (sign_extend:DI (reg:SI 0 ax [2132]))) "BNDLYR2.f":306 149 {*extendsidi2_rex64}
     (nil))
(insn 2135 2134 2136 110 (parallel [
            (set (reg:DI 0 ax [orig:1081 _995 ] [1081])
                (mult:DI (reg:DI 0 ax [orig:1080 _994 ] [1080])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":306 349 {*muldi3_1}
     (nil))
(insn 2136 2135 2137 110 (parallel [
            (set (reg:DI 1 dx [orig:1082 _996 ] [1082])
                (plus:DI (reg:DI 1 dx [orig:1079 _993 ] [1079])
                    (reg:DI 0 ax [orig:1081 _995 ] [1081])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":306 222 {*adddi_1}
     (nil))
(insn 2137 2136 2138 110 (set (reg:SI 0 ax [2133])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":306 86 {*movsi_internal}
     (nil))
(insn 2138 2137 2139 110 (set (reg:DI 0 ax [orig:1083 _997 ] [1083])
        (sign_extend:DI (reg:SI 0 ax [2133]))) "BNDLYR2.f":306 149 {*extendsidi2_rex64}
     (nil))
(insn 2139 2138 2140 110 (parallel [
            (set (reg:DI 0 ax [orig:1084 _998 ] [1084])
                (plus:DI (reg:DI 0 ax [orig:1083 _997 ] [1083])
                    (reg:DI 1 dx [orig:1082 _996 ] [1082])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":306 222 {*adddi_1}
     (nil))
(insn 2140 2139 2141 110 (parallel [
            (set (reg:DI 1 dx [orig:1085 _999 ] [1085])
                (plus:DI (reg:DI 0 ax [orig:1084 _998 ] [1084])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":306 222 {*adddi_1}
     (nil))
(insn 2141 2140 2142 110 (set (reg/f:DI 0 ax [2134])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7fd1b2d2cc60 extra>)) "BNDLYR2.f":306 85 {*movdi_internal}
     (nil))
(insn 2142 2141 2143 110 (set (reg:SF 22 xmm1 [orig:1086 _1000 ] [1086])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:1085 _999 ] [1085])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [2134])) [1 extra.pint S4 A32])) "BNDLYR2.f":306 131 {*movsf_internal}
     (nil))
(insn 2143 2142 2144 110 (set (reg:SI 0 ax [2135])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 l+0 S4 A32])) "BNDLYR2.f":306 86 {*movsi_internal}
     (nil))
(insn 2144 2143 2145 110 (parallel [
            (set (reg:SI 0 ax [orig:1087 _1001 ] [1087])
                (plus:SI (reg:SI 0 ax [2135])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":306 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -20 [0xffffffffffffffec])) [2 l+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 2145 2144 2146 110 (set (reg:DI 0 ax [orig:1088 _1002 ] [1088])
        (sign_extend:DI (reg:SI 0 ax [orig:1087 _1001 ] [1087]))) "BNDLYR2.f":306 149 {*extendsidi2_rex64}
     (nil))
(insn 2146 2145 2147 110 (parallel [
            (set (reg:DI 1 dx [orig:1089 _1003 ] [1089])
                (mult:DI (reg:DI 0 ax [orig:1088 _1002 ] [1088])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":306 349 {*muldi3_1}
     (nil))
(insn 2147 2146 2148 110 (set (reg:SI 0 ax [2136])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":306 86 {*movsi_internal}
     (nil))
(insn 2148 2147 2149 110 (set (reg:DI 0 ax [orig:1090 _1004 ] [1090])
        (sign_extend:DI (reg:SI 0 ax [2136]))) "BNDLYR2.f":306 149 {*extendsidi2_rex64}
     (nil))
(insn 2149 2148 2150 110 (parallel [
            (set (reg:DI 0 ax [orig:1091 _1005 ] [1091])
                (mult:DI (reg:DI 0 ax [orig:1090 _1004 ] [1090])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":306 349 {*muldi3_1}
     (nil))
(insn 2150 2149 2151 110 (parallel [
            (set (reg:DI 1 dx [orig:1092 _1006 ] [1092])
                (plus:DI (reg:DI 1 dx [orig:1089 _1003 ] [1089])
                    (reg:DI 0 ax [orig:1091 _1005 ] [1091])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":306 222 {*adddi_1}
     (nil))
(insn 2151 2150 2152 110 (set (reg:SI 0 ax [2137])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":306 86 {*movsi_internal}
     (nil))
(insn 2152 2151 2153 110 (set (reg:DI 0 ax [orig:1093 _1007 ] [1093])
        (sign_extend:DI (reg:SI 0 ax [2137]))) "BNDLYR2.f":306 149 {*extendsidi2_rex64}
     (nil))
(insn 2153 2152 2154 110 (parallel [
            (set (reg:DI 0 ax [orig:1094 _1008 ] [1094])
                (plus:DI (reg:DI 0 ax [orig:1093 _1007 ] [1093])
                    (reg:DI 1 dx [orig:1092 _1006 ] [1092])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":306 222 {*adddi_1}
     (nil))
(insn 2154 2153 2155 110 (parallel [
            (set (reg:DI 1 dx [orig:1095 _1009 ] [1095])
                (plus:DI (reg:DI 0 ax [orig:1094 _1008 ] [1094])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":306 222 {*adddi_1}
     (nil))
(insn 2155 2154 2156 110 (set (reg/f:DI 0 ax [2138])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7fd1b2d2cc60 extra>)) "BNDLYR2.f":306 85 {*movdi_internal}
     (nil))
(insn 2156 2155 2157 110 (set (reg:SF 21 xmm0 [orig:1096 _1010 ] [1096])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:1095 _1009 ] [1095])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [2138])) [1 extra.pint S4 A32])) "BNDLYR2.f":306 131 {*movsf_internal}
     (nil))
(insn 2157 2156 2158 110 (set (reg:SF 21 xmm0 [orig:1097 _1011 ] [1097])
        (plus:SF (reg:SF 21 xmm0 [orig:1096 _1010 ] [1096])
            (reg:SF 22 xmm1 [orig:1086 _1000 ] [1086]))) "BNDLYR2.f":306 838 {*fop_sf_comm}
     (nil))
(insn 2158 2157 2159 110 (set (reg:SF 22 xmm1 [orig:1098 _1012 ] [1098])
        (reg:SF 21 xmm0 [orig:1097 _1011 ] [1097])) "BNDLYR2.f":306 131 {*movsf_internal}
     (nil))
(insn 2159 2158 2160 110 (set (reg:SF 21 xmm0 [2140])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC6") [flags 0x2]) [0  S4 A32])) "BNDLYR2.f":306 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 5.0e-1 [0x0.8p+0])
        (nil)))
(insn 2160 2159 2161 110 (set (reg:SF 21 xmm0 [2139])
        (mult:SF (reg:SF 21 xmm0 [2140])
            (reg:SF 22 xmm1 [orig:1098 _1012 ] [1098]))) "BNDLYR2.f":306 838 {*fop_sf_comm}
     (nil))
(insn 2161 2160 2162 110 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -68 [0xffffffffffffffbc])) [1 pm+0 S4 A32])
        (reg:SF 21 xmm0 [2139])) "BNDLYR2.f":306 131 {*movsf_internal}
     (nil))
(insn 2162 2161 2163 110 (set (reg:SI 0 ax [2141])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 lbnd+0 S4 A32])) "BNDLYR2.f":307 86 {*movsi_internal}
     (nil))
(insn 2163 2162 2164 110 (set (reg:DI 0 ax [orig:1099 _1013 ] [1099])
        (sign_extend:DI (reg:SI 0 ax [2141]))) "BNDLYR2.f":307 149 {*extendsidi2_rex64}
     (nil))
(insn 2164 2163 2165 110 (parallel [
            (set (reg:DI 1 dx [orig:1100 _1014 ] [1100])
                (mult:DI (reg:DI 0 ax [orig:1099 _1013 ] [1099])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":307 349 {*muldi3_1}
     (nil))
(insn 2165 2164 2166 110 (set (reg:SI 0 ax [2142])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":307 86 {*movsi_internal}
     (nil))
(insn 2166 2165 2167 110 (set (reg:DI 0 ax [orig:1101 _1015 ] [1101])
        (sign_extend:DI (reg:SI 0 ax [2142]))) "BNDLYR2.f":307 149 {*extendsidi2_rex64}
     (nil))
(insn 2167 2166 2168 110 (parallel [
            (set (reg:DI 0 ax [orig:1102 _1016 ] [1102])
                (mult:DI (reg:DI 0 ax [orig:1101 _1015 ] [1101])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":307 349 {*muldi3_1}
     (nil))
(insn 2168 2167 2169 110 (parallel [
            (set (reg:DI 1 dx [orig:1103 _1017 ] [1103])
                (plus:DI (reg:DI 1 dx [orig:1100 _1014 ] [1100])
                    (reg:DI 0 ax [orig:1102 _1016 ] [1102])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":307 222 {*adddi_1}
     (nil))
(insn 2169 2168 2170 110 (set (reg:SI 0 ax [2143])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":307 86 {*movsi_internal}
     (nil))
(insn 2170 2169 2171 110 (set (reg:DI 0 ax [orig:1104 _1018 ] [1104])
        (sign_extend:DI (reg:SI 0 ax [2143]))) "BNDLYR2.f":307 149 {*extendsidi2_rex64}
     (nil))
(insn 2171 2170 2172 110 (parallel [
            (set (reg:DI 0 ax [orig:1105 _1019 ] [1105])
                (plus:DI (reg:DI 0 ax [orig:1104 _1018 ] [1104])
                    (reg:DI 1 dx [orig:1103 _1017 ] [1103])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":307 222 {*adddi_1}
     (nil))
(insn 2172 2171 2173 110 (parallel [
            (set (reg:DI 2 cx [orig:1106 _1020 ] [1106])
                (plus:DI (reg:DI 0 ax [orig:1105 _1019 ] [1105])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":307 222 {*adddi_1}
     (nil))
(insn 2173 2172 2174 110 (set (reg/f:DI 0 ax [2144])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 32 [0x20])) [4 lvlbnd+0 S8 A64])) "BNDLYR2.f":307 85 {*movdi_internal}
     (nil))
(insn 2174 2173 2175 110 (set (reg:SI 1 dx [2145])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 l+0 S4 A32])) "BNDLYR2.f":307 86 {*movsi_internal}
     (nil))
(insn 2175 2174 2176 110 (set (mem:SI (plus:DI (mult:DI (reg:DI 2 cx [orig:1106 _1020 ] [1106])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [2144])) [2 *lvlbnd_1552(D) S4 A32])
        (reg:SI 1 dx [2145])) "BNDLYR2.f":307 86 {*movsi_internal}
     (nil))
(insn 2176 2175 2177 110 (set (reg:SI 0 ax [2146])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 l+0 S4 A32])) "BNDLYR2.f":308 86 {*movsi_internal}
     (nil))
(insn 2177 2176 2178 110 (set (reg:DI 0 ax [orig:1107 _1021 ] [1107])
        (sign_extend:DI (reg:SI 0 ax [2146]))) "BNDLYR2.f":308 149 {*extendsidi2_rex64}
     (nil))
(insn 2178 2177 2179 110 (parallel [
            (set (reg:DI 1 dx [orig:1108 _1022 ] [1108])
                (mult:DI (reg:DI 0 ax [orig:1107 _1021 ] [1107])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":308 349 {*muldi3_1}
     (nil))
(insn 2179 2178 2180 110 (set (reg:SI 0 ax [2147])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":308 86 {*movsi_internal}
     (nil))
(insn 2180 2179 2181 110 (set (reg:DI 0 ax [orig:1109 _1023 ] [1109])
        (sign_extend:DI (reg:SI 0 ax [2147]))) "BNDLYR2.f":308 149 {*extendsidi2_rex64}
     (nil))
(insn 2181 2180 2182 110 (parallel [
            (set (reg:DI 0 ax [orig:1110 _1024 ] [1110])
                (mult:DI (reg:DI 0 ax [orig:1109 _1023 ] [1109])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":308 349 {*muldi3_1}
     (nil))
(insn 2182 2181 2183 110 (parallel [
            (set (reg:DI 1 dx [orig:1111 _1025 ] [1111])
                (plus:DI (reg:DI 1 dx [orig:1108 _1022 ] [1108])
                    (reg:DI 0 ax [orig:1110 _1024 ] [1110])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":308 222 {*adddi_1}
     (nil))
(insn 2183 2182 2184 110 (set (reg:SI 0 ax [2148])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":308 86 {*movsi_internal}
     (nil))
(insn 2184 2183 2185 110 (set (reg:DI 0 ax [orig:1112 _1026 ] [1112])
        (sign_extend:DI (reg:SI 0 ax [2148]))) "BNDLYR2.f":308 149 {*extendsidi2_rex64}
     (nil))
(insn 2185 2184 2186 110 (parallel [
            (set (reg:DI 0 ax [orig:1113 _1027 ] [1113])
                (plus:DI (reg:DI 0 ax [orig:1112 _1026 ] [1112])
                    (reg:DI 1 dx [orig:1111 _1025 ] [1111])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":308 222 {*adddi_1}
     (nil))
(insn 2186 2185 2187 110 (parallel [
            (set (reg:DI 2 cx [orig:1114 _1028 ] [1114])
                (plus:DI (reg:DI 0 ax [orig:1113 _1027 ] [1113])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":308 222 {*adddi_1}
     (nil))
(insn 2187 2186 2188 110 (set (reg:SI 0 ax [2149])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 lbnd+0 S4 A32])) "BNDLYR2.f":308 86 {*movsi_internal}
     (nil))
(insn 2188 2187 2189 110 (set (reg:DI 0 ax [orig:1115 _1029 ] [1115])
        (sign_extend:DI (reg:SI 0 ax [2149]))) "BNDLYR2.f":308 149 {*extendsidi2_rex64}
     (nil))
(insn 2189 2188 2190 110 (parallel [
            (set (reg:DI 1 dx [orig:1116 _1030 ] [1116])
                (mult:DI (reg:DI 0 ax [orig:1115 _1029 ] [1115])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":308 349 {*muldi3_1}
     (nil))
(insn 2190 2189 2191 110 (set (reg:SI 0 ax [2150])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":308 86 {*movsi_internal}
     (nil))
(insn 2191 2190 2192 110 (set (reg:DI 0 ax [orig:1117 _1031 ] [1117])
        (sign_extend:DI (reg:SI 0 ax [2150]))) "BNDLYR2.f":308 149 {*extendsidi2_rex64}
     (nil))
(insn 2192 2191 2193 110 (parallel [
            (set (reg:DI 0 ax [orig:1118 _1032 ] [1118])
                (mult:DI (reg:DI 0 ax [orig:1117 _1031 ] [1117])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":308 349 {*muldi3_1}
     (nil))
(insn 2193 2192 2194 110 (parallel [
            (set (reg:DI 1 dx [orig:1119 _1033 ] [1119])
                (plus:DI (reg:DI 1 dx [orig:1116 _1030 ] [1116])
                    (reg:DI 0 ax [orig:1118 _1032 ] [1118])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":308 222 {*adddi_1}
     (nil))
(insn 2194 2193 2195 110 (set (reg:SI 0 ax [2151])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":308 86 {*movsi_internal}
     (nil))
(insn 2195 2194 2196 110 (set (reg:DI 0 ax [orig:1120 _1034 ] [1120])
        (sign_extend:DI (reg:SI 0 ax [2151]))) "BNDLYR2.f":308 149 {*extendsidi2_rex64}
     (nil))
(insn 2196 2195 2197 110 (parallel [
            (set (reg:DI 0 ax [orig:1121 _1035 ] [1121])
                (plus:DI (reg:DI 0 ax [orig:1120 _1034 ] [1120])
                    (reg:DI 1 dx [orig:1119 _1033 ] [1119])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":308 222 {*adddi_1}
     (nil))
(insn 2197 2196 2198 110 (parallel [
            (set (reg:DI 1 dx [orig:1122 _1036 ] [1122])
                (plus:DI (reg:DI 0 ax [orig:1121 _1035 ] [1121])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":308 222 {*adddi_1}
     (nil))
(insn 2198 2197 2199 110 (set (reg/f:DI 0 ax [2152])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7fd1b2d48360 vrbls>)) "BNDLYR2.f":308 85 {*movdi_internal}
     (nil))
(insn 2199 2198 2200 110 (parallel [
            (set (reg:DI 2 cx [2153])
                (plus:DI (reg:DI 2 cx [orig:1114 _1028 ] [1114])
                    (const_int 2340849 [0x23b7f1])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":308 222 {*adddi_1}
     (nil))
(insn 2200 2199 2201 110 (set (reg:SF 21 xmm0 [orig:1123 _1037 ] [1123])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [2153])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [2152])) [1 vrbls.t S4 A32])) "BNDLYR2.f":308 131 {*movsf_internal}
     (nil))
(insn 2201 2200 2202 110 (set (reg/f:DI 0 ax [2154])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -160 [0xffffffffffffff60])) [3 tbnd+0 S8 A64])) "BNDLYR2.f":308 85 {*movdi_internal}
     (nil))
(insn 2202 2201 2203 110 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:1122 _1036 ] [1122])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [2154])) [1 *tbnd_1539(D) S4 A32])
        (reg:SF 21 xmm0 [orig:1123 _1037 ] [1123])) "BNDLYR2.f":308 131 {*movsf_internal}
     (nil))
(insn 2203 2202 2204 110 (set (reg:SI 0 ax [2155])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 l+0 S4 A32])) "BNDLYR2.f":309 86 {*movsi_internal}
     (nil))
(insn 2204 2203 2205 110 (set (reg:DI 0 ax [orig:1124 _1038 ] [1124])
        (sign_extend:DI (reg:SI 0 ax [2155]))) "BNDLYR2.f":309 149 {*extendsidi2_rex64}
     (nil))
(insn 2205 2204 2206 110 (parallel [
            (set (reg:DI 1 dx [orig:1125 _1039 ] [1125])
                (mult:DI (reg:DI 0 ax [orig:1124 _1038 ] [1124])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":309 349 {*muldi3_1}
     (nil))
(insn 2206 2205 2207 110 (set (reg:SI 0 ax [2156])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":309 86 {*movsi_internal}
     (nil))
(insn 2207 2206 2208 110 (set (reg:DI 0 ax [orig:1126 _1040 ] [1126])
        (sign_extend:DI (reg:SI 0 ax [2156]))) "BNDLYR2.f":309 149 {*extendsidi2_rex64}
     (nil))
(insn 2208 2207 2209 110 (parallel [
            (set (reg:DI 0 ax [orig:1127 _1041 ] [1127])
                (mult:DI (reg:DI 0 ax [orig:1126 _1040 ] [1126])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":309 349 {*muldi3_1}
     (nil))
(insn 2209 2208 2210 110 (parallel [
            (set (reg:DI 1 dx [orig:1128 _1042 ] [1128])
                (plus:DI (reg:DI 1 dx [orig:1125 _1039 ] [1125])
                    (reg:DI 0 ax [orig:1127 _1041 ] [1127])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":309 222 {*adddi_1}
     (nil))
(insn 2210 2209 2211 110 (set (reg:SI 0 ax [2157])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":309 86 {*movsi_internal}
     (nil))
(insn 2211 2210 2212 110 (set (reg:DI 0 ax [orig:1129 _1043 ] [1129])
        (sign_extend:DI (reg:SI 0 ax [2157]))) "BNDLYR2.f":309 149 {*extendsidi2_rex64}
     (nil))
(insn 2212 2211 2213 110 (parallel [
            (set (reg:DI 0 ax [orig:1130 _1044 ] [1130])
                (plus:DI (reg:DI 0 ax [orig:1129 _1043 ] [1129])
                    (reg:DI 1 dx [orig:1128 _1042 ] [1128])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":309 222 {*adddi_1}
     (nil))
(insn 2213 2212 2214 110 (parallel [
            (set (reg:DI 2 cx [orig:1131 _1045 ] [1131])
                (plus:DI (reg:DI 0 ax [orig:1130 _1044 ] [1130])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":309 222 {*adddi_1}
     (nil))
(insn 2214 2213 2215 110 (set (reg:SI 0 ax [2158])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 lbnd+0 S4 A32])) "BNDLYR2.f":309 86 {*movsi_internal}
     (nil))
(insn 2215 2214 2216 110 (set (reg:DI 0 ax [orig:1132 _1046 ] [1132])
        (sign_extend:DI (reg:SI 0 ax [2158]))) "BNDLYR2.f":309 149 {*extendsidi2_rex64}
     (nil))
(insn 2216 2215 2217 110 (parallel [
            (set (reg:DI 1 dx [orig:1133 _1047 ] [1133])
                (mult:DI (reg:DI 0 ax [orig:1132 _1046 ] [1132])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":309 349 {*muldi3_1}
     (nil))
(insn 2217 2216 2218 110 (set (reg:SI 0 ax [2159])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":309 86 {*movsi_internal}
     (nil))
(insn 2218 2217 2219 110 (set (reg:DI 0 ax [orig:1134 _1048 ] [1134])
        (sign_extend:DI (reg:SI 0 ax [2159]))) "BNDLYR2.f":309 149 {*extendsidi2_rex64}
     (nil))
(insn 2219 2218 2220 110 (parallel [
            (set (reg:DI 0 ax [orig:1135 _1049 ] [1135])
                (mult:DI (reg:DI 0 ax [orig:1134 _1048 ] [1134])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":309 349 {*muldi3_1}
     (nil))
(insn 2220 2219 2221 110 (parallel [
            (set (reg:DI 1 dx [orig:1136 _1050 ] [1136])
                (plus:DI (reg:DI 1 dx [orig:1133 _1047 ] [1133])
                    (reg:DI 0 ax [orig:1135 _1049 ] [1135])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":309 222 {*adddi_1}
     (nil))
(insn 2221 2220 2222 110 (set (reg:SI 0 ax [2160])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":309 86 {*movsi_internal}
     (nil))
(insn 2222 2221 2223 110 (set (reg:DI 0 ax [orig:1137 _1051 ] [1137])
        (sign_extend:DI (reg:SI 0 ax [2160]))) "BNDLYR2.f":309 149 {*extendsidi2_rex64}
     (nil))
(insn 2223 2222 2224 110 (parallel [
            (set (reg:DI 0 ax [orig:1138 _1052 ] [1138])
                (plus:DI (reg:DI 0 ax [orig:1137 _1051 ] [1137])
                    (reg:DI 1 dx [orig:1136 _1050 ] [1136])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":309 222 {*adddi_1}
     (nil))
(insn 2224 2223 2225 110 (parallel [
            (set (reg:DI 1 dx [orig:1139 _1053 ] [1139])
                (plus:DI (reg:DI 0 ax [orig:1138 _1052 ] [1138])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":309 222 {*adddi_1}
     (nil))
(insn 2225 2224 2226 110 (set (reg/f:DI 0 ax [2161])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7fd1b2d48360 vrbls>)) "BNDLYR2.f":309 85 {*movdi_internal}
     (nil))
(insn 2226 2225 2227 110 (parallel [
            (set (reg:DI 2 cx [2162])
                (plus:DI (reg:DI 2 cx [orig:1131 _1045 ] [1131])
                    (const_int 3466827 [0x34e64b])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":309 222 {*adddi_1}
     (nil))
(insn 2227 2226 2228 110 (set (reg:SF 21 xmm0 [orig:1140 _1054 ] [1140])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [2162])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [2161])) [1 vrbls.q S4 A32])) "BNDLYR2.f":309 131 {*movsf_internal}
     (nil))
(insn 2228 2227 2229 110 (set (reg/f:DI 0 ax [2163])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [3 qbnd+0 S8 A64])) "BNDLYR2.f":309 85 {*movdi_internal}
     (nil))
(insn 2229 2228 2230 110 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:1139 _1053 ] [1139])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [2163])) [1 *qbnd_1541(D) S4 A32])
        (reg:SF 21 xmm0 [orig:1140 _1054 ] [1140])) "BNDLYR2.f":309 131 {*movsf_internal}
     (nil))
(insn 2230 2229 2231 110 (set (reg:SI 0 ax [2164])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 l+0 S4 A32])) "BNDLYR2.f":311 86 {*movsi_internal}
     (nil))
(insn 2231 2230 2232 110 (set (reg:DI 0 ax [orig:1141 _1055 ] [1141])
        (sign_extend:DI (reg:SI 0 ax [2164]))) "BNDLYR2.f":311 149 {*extendsidi2_rex64}
     (nil))
(insn 2232 2231 2233 110 (parallel [
            (set (reg:DI 1 dx [orig:1142 _1056 ] [1142])
                (mult:DI (reg:DI 0 ax [orig:1141 _1055 ] [1141])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":311 349 {*muldi3_1}
     (nil))
(insn 2233 2232 2234 110 (set (reg:SI 0 ax [2165])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":311 86 {*movsi_internal}
     (nil))
(insn 2234 2233 2235 110 (set (reg:DI 0 ax [orig:1143 _1057 ] [1143])
        (sign_extend:DI (reg:SI 0 ax [2165]))) "BNDLYR2.f":311 149 {*extendsidi2_rex64}
     (nil))
(insn 2235 2234 2236 110 (parallel [
            (set (reg:DI 0 ax [orig:1144 _1058 ] [1144])
                (mult:DI (reg:DI 0 ax [orig:1143 _1057 ] [1143])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":311 349 {*muldi3_1}
     (nil))
(insn 2236 2235 2237 110 (parallel [
            (set (reg:DI 1 dx [orig:1145 _1059 ] [1145])
                (plus:DI (reg:DI 1 dx [orig:1142 _1056 ] [1142])
                    (reg:DI 0 ax [orig:1144 _1058 ] [1144])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":311 222 {*adddi_1}
     (nil))
(insn 2237 2236 2238 110 (set (reg:SI 0 ax [2166])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":311 86 {*movsi_internal}
     (nil))
(insn 2238 2237 2239 110 (set (reg:DI 0 ax [orig:1146 _1060 ] [1146])
        (sign_extend:DI (reg:SI 0 ax [2166]))) "BNDLYR2.f":311 149 {*extendsidi2_rex64}
     (nil))
(insn 2239 2238 2240 110 (parallel [
            (set (reg:DI 0 ax [orig:1147 _1061 ] [1147])
                (plus:DI (reg:DI 0 ax [orig:1146 _1060 ] [1146])
                    (reg:DI 1 dx [orig:1145 _1059 ] [1145])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":311 222 {*adddi_1}
     (nil))
(insn 2240 2239 2241 110 (parallel [
            (set (reg:DI 1 dx [orig:1148 _1062 ] [1148])
                (plus:DI (reg:DI 0 ax [orig:1147 _1061 ] [1147])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":311 222 {*adddi_1}
     (nil))
(insn 2241 2240 2242 110 (set (reg/f:DI 0 ax [2167])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7fd1b2d48360 vrbls>)) "BNDLYR2.f":311 85 {*movdi_internal}
     (nil))
(insn 2242 2241 2243 110 (parallel [
            (set (reg:DI 1 dx [2168])
                (plus:DI (reg:DI 1 dx [orig:1148 _1062 ] [1148])
                    (const_int 2340849 [0x23b7f1])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":311 222 {*adddi_1}
     (nil))
(insn 2243 2242 2244 110 (set (reg:SF 21 xmm0 [orig:1149 _1063 ] [1149])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [2168])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [2167])) [1 vrbls.t S4 A32])) "BNDLYR2.f":311 131 {*movsf_internal}
     (nil))
(insn 2244 2243 2245 110 (set (reg:SF 22 xmm1 [2170])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC8") [flags 0x2]) [0  S4 A32])) "BNDLYR2.f":311 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 2.73160003662109375e+2 [0x0.88947bp+9])
        (nil)))
(insn 2245 2244 2246 110 (set (reg:SF 21 xmm0 [2169])
        (minus:SF (reg:SF 21 xmm0 [orig:1149 _1063 ] [1149])
            (reg:SF 22 xmm1 [2170]))) "BNDLYR2.f":311 841 {*fop_sf_1}
     (nil))
(insn 2246 2245 2247 110 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -76 [0xffffffffffffffb4])) [1 tmt0+0 S4 A32])
        (reg:SF 21 xmm0 [2169])) "BNDLYR2.f":311 131 {*movsf_internal}
     (nil))
(insn 2247 2246 2248 110 (set (reg:SF 21 xmm0 [orig:1516 M.2_1469 ] [1516])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -76 [0xffffffffffffffb4])) [1 tmt0+0 S4 A32])) "BNDLYR2.f":312 131 {*movsf_internal}
     (nil))
(insn 2248 2247 2249 110 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [orig:1516 M.2_1469 ] [1516])
            (mem/u/c:SF (symbol_ref/u:DI ("*.LC9") [flags 0x2]) [0  S4 A32]))) "BNDLYR2.f":312 53 {*cmpisf}
     (nil))
(insn 2249 2248 2250 110 (set (reg:QI 0 ax [2171])
        (gt:QI (reg:CCFP 17 flags)
            (const_int 0 [0]))) "BNDLYR2.f":312 678 {*setcc_qi}
     (nil))
(insn 2250 2249 2251 110 (set (reg:SI 1 dx [orig:1150 _1064 ] [1150])
        (zero_extend:SI (reg:QI 0 ax [2171]))) "BNDLYR2.f":312 140 {*zero_extendqisi2}
     (nil))
(insn 2251 2250 2252 110 (set (reg:CCFP 17 flags)
        (unspec:CCFP [
                (compare:CCFP (reg:SF 21 xmm0 [orig:1516 M.2_1469 ] [1516])
                    (reg:SF 21 xmm0 [orig:1516 M.2_1469 ] [1516]))
            ] UNSPEC_NOTRAP)) "BNDLYR2.f":312 54 {*cmpiusf}
     (nil))
(insn 2252 2251 2253 110 (set (reg:QI 0 ax [2172])
        (unordered:QI (reg:CCFP 17 flags)
            (const_int 0 [0]))) "BNDLYR2.f":312 678 {*setcc_qi}
     (nil))
(insn 2253 2252 2254 110 (set (reg:SI 0 ax [orig:1151 _1065 ] [1151])
        (zero_extend:SI (reg:QI 0 ax [2172]))) "BNDLYR2.f":312 140 {*zero_extendqisi2}
     (nil))
(insn 2254 2253 2255 110 (parallel [
            (set (reg:SI 0 ax [orig:1152 _1066 ] [1152])
                (ior:SI (reg:SI 0 ax [orig:1151 _1065 ] [1151])
                    (reg:SI 1 dx [orig:1150 _1064 ] [1150])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":312 450 {*iorsi_1}
     (nil))
(insn 2255 2254 2256 110 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:1152 _1066 ] [1152])
            (const_int 0 [0]))) "BNDLYR2.f":312 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 2256 2255 2257 110 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 2259)
            (pc))) "BNDLYR2.f":312 682 {*jcc}
     (nil)
 -> 2259)
;;  succ:       111 (FALLTHRU)
;;              112
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1516 1554

;; basic block 111, loop depth 0, maybe hot
;;  prev block 110, next block 112, flags: (RTL, MODIFIED)
;;  pred:       110 (FALLTHRU)
;; bb 111 artificial_defs: { }
;; bb 111 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1554
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 1516
(note 2257 2256 2258 111 [bb 111] NOTE_INSN_BASIC_BLOCK)
(insn 2258 2257 2259 111 (set (reg:SF 21 xmm0 [orig:1516 M.2_1469 ] [1516])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC9") [flags 0x2]) [0  S4 A32])) "BNDLYR2.f":312 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF -1.5e+1 [-0x0.fp+4])
        (nil)))
;;  succ:       112 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1516 1554

;; basic block 112, loop depth 0, maybe hot
;;  prev block 111, next block 113, flags: (RTL, MODIFIED)
;;  pred:       110
;;              111 (FALLTHRU)
;; bb 112 artificial_defs: { }
;; bb 112 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1516 1554
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1516
;; lr  def 	 17 [flags] 2173 2174 2175
(code_label 2259 2258 2260 112 81 (nil) [1 uses])
(note 2260 2259 2261 112 [bb 112] NOTE_INSN_BASIC_BLOCK)
(insn 2261 2260 2262 112 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -80 [0xffffffffffffffb0])) [1 tmt15+0 S4 A32])
        (reg:SF 21 xmm0 [orig:1516 M.2_1469 ] [1516])) "BNDLYR2.f":312 131 {*movsf_internal}
     (nil))
(insn 2262 2261 2263 112 (set (reg:SF 21 xmm0 [2173])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC10") [flags 0x2]) [0  S4 A32])) "BNDLYR2.f":313 131 {*movsf_internal}
     (nil))
(insn 2263 2262 2264 112 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 ai+0 S4 A32])
        (reg:SF 21 xmm0 [2173])) "BNDLYR2.f":313 131 {*movsf_internal}
     (nil))
(insn 2264 2263 2265 112 (set (reg:SF 21 xmm0 [2174])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC4") [flags 0x2]) [0  S4 A32])) "BNDLYR2.f":314 131 {*movsf_internal}
     (nil))
(insn 2265 2264 2266 112 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 bi+0 S4 A32])
        (reg:SF 21 xmm0 [2174])) "BNDLYR2.f":314 131 {*movsf_internal}
     (nil))
(insn 2266 2265 2267 112 (set (reg:SF 21 xmm0 [2175])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC11") [flags 0x2]) [0  S4 A32])) "BNDLYR2.f":315 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF -2.0e+1 [-0x0.ap+5])
        (nil)))
(insn 2267 2266 2268 112 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [2175])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -76 [0xffffffffffffffb4])) [1 tmt0+0 S4 A32]))) "BNDLYR2.f":315 53 {*cmpisf}
     (nil))
(jump_insn 2268 2267 2272 112 (set (pc)
        (if_then_else (unle (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 2277)
            (pc))) "BNDLYR2.f":315 682 {*jcc}
     (nil)
 -> 2277)
;;  succ:       113 (FALLTHRU)
;;              114
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1554

;; basic block 113, loop depth 0, maybe hot
;;  prev block 112, next block 114, flags: (RTL, MODIFIED)
;;  pred:       112 (FALLTHRU)
;; bb 113 artificial_defs: { }
;; bb 113 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1554
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 2176 2177
(note 2272 2268 2273 113 [bb 113] NOTE_INSN_BASIC_BLOCK)
(insn 2273 2272 2274 113 (set (reg:SF 21 xmm0 [2176])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC12") [flags 0x2]) [0  S4 A32])) "BNDLYR2.f":316 131 {*movsf_internal}
     (nil))
(insn 2274 2273 2275 113 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 ai+0 S4 A32])
        (reg:SF 21 xmm0 [2176])) "BNDLYR2.f":316 131 {*movsf_internal}
     (nil))
(insn 2275 2274 2276 113 (set (reg:SF 21 xmm0 [2177])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC13") [flags 0x2]) [0  S4 A32])) "BNDLYR2.f":317 131 {*movsf_internal}
     (nil))
(insn 2276 2275 2277 113 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 bi+0 S4 A32])
        (reg:SF 21 xmm0 [2177])) "BNDLYR2.f":317 131 {*movsf_internal}
     (nil))
;;  succ:       114 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1554

;; basic block 114, loop depth 0, maybe hot
;;  prev block 113, next block 115, flags: (RTL, MODIFIED)
;;  pred:       113 (FALLTHRU)
;;              112
;; bb 114 artificial_defs: { }
;; bb 114 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1554
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 1153 1154 1155 1156 1157 1158 1159 1160 1161 1162 1163 1164 1165 1166 1167 1168 1169 1170 1171 1172 1173 1174 1175 1176 1177 1178 1179 1180 1181 1517 2178 2179 2180 2181 2182 2183 2184 2185 2186 2187 2188 2189 2190 2191 2192 2193 2194 2195
(code_label 2277 2276 2278 114 82 (nil) [1 uses])
(note 2278 2277 2279 114 [bb 114] NOTE_INSN_BASIC_BLOCK)
(insn 2279 2278 2280 114 (set (reg:SF 21 xmm0 [2178])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC14") [flags 0x2]) [0  S4 A32])) "BNDLYR2.f":320 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 3.799051513671875e+2 [0x0.bdf3dcp+9])
        (nil)))
(insn 2280 2279 3263 114 (set (reg:SF 21 xmm0 [2178])
        (div:SF (reg:SF 21 xmm0 [2178])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -68 [0xffffffffffffffbc])) [1 pm+0 S4 A32]))) "BNDLYR2.f":320 841 {*fop_sf_1}
     (nil))
(insn 3263 2280 3272 114 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -196 [0xffffffffffffff3c])) [13 %sfp+-180 S4 A32])
        (reg:SF 21 xmm0 [2178])) "BNDLYR2.f":320 131 {*movsf_internal}
     (nil))
(note 3272 3263 3268 114 NOTE_INSN_DELETED)
(note 3268 3272 2281 114 NOTE_INSN_DELETED)
(insn 2281 3268 2282 114 (set (reg:SI 0 ax [2179])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 l+0 S4 A32])) "BNDLYR2.f":320 86 {*movsi_internal}
     (nil))
(insn 2282 2281 2283 114 (set (reg:DI 0 ax [orig:1154 _1068 ] [1154])
        (sign_extend:DI (reg:SI 0 ax [2179]))) "BNDLYR2.f":320 149 {*extendsidi2_rex64}
     (nil))
(insn 2283 2282 2284 114 (parallel [
            (set (reg:DI 1 dx [orig:1155 _1069 ] [1155])
                (mult:DI (reg:DI 0 ax [orig:1154 _1068 ] [1154])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":320 349 {*muldi3_1}
     (nil))
(insn 2284 2283 2285 114 (set (reg:SI 0 ax [2180])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":320 86 {*movsi_internal}
     (nil))
(insn 2285 2284 2286 114 (set (reg:DI 0 ax [orig:1156 _1070 ] [1156])
        (sign_extend:DI (reg:SI 0 ax [2180]))) "BNDLYR2.f":320 149 {*extendsidi2_rex64}
     (nil))
(insn 2286 2285 2287 114 (parallel [
            (set (reg:DI 0 ax [orig:1157 _1071 ] [1157])
                (mult:DI (reg:DI 0 ax [orig:1156 _1070 ] [1156])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":320 349 {*muldi3_1}
     (nil))
(insn 2287 2286 2288 114 (parallel [
            (set (reg:DI 1 dx [orig:1158 _1072 ] [1158])
                (plus:DI (reg:DI 1 dx [orig:1155 _1069 ] [1155])
                    (reg:DI 0 ax [orig:1157 _1071 ] [1157])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":320 222 {*adddi_1}
     (nil))
(insn 2288 2287 2289 114 (set (reg:SI 0 ax [2181])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":320 86 {*movsi_internal}
     (nil))
(insn 2289 2288 2290 114 (set (reg:DI 0 ax [orig:1159 _1073 ] [1159])
        (sign_extend:DI (reg:SI 0 ax [2181]))) "BNDLYR2.f":320 149 {*extendsidi2_rex64}
     (nil))
(insn 2290 2289 2291 114 (parallel [
            (set (reg:DI 0 ax [orig:1160 _1074 ] [1160])
                (plus:DI (reg:DI 0 ax [orig:1159 _1073 ] [1159])
                    (reg:DI 1 dx [orig:1158 _1072 ] [1158])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":320 222 {*adddi_1}
     (nil))
(insn 2291 2290 2292 114 (parallel [
            (set (reg:DI 1 dx [orig:1161 _1075 ] [1161])
                (plus:DI (reg:DI 0 ax [orig:1160 _1074 ] [1160])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":320 222 {*adddi_1}
     (nil))
(insn 2292 2291 2293 114 (set (reg/f:DI 0 ax [2182])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7fd1b2d48360 vrbls>)) "BNDLYR2.f":320 85 {*movdi_internal}
     (nil))
(insn 2293 2292 2294 114 (parallel [
            (set (reg:DI 1 dx [2183])
                (plus:DI (reg:DI 1 dx [orig:1161 _1075 ] [1161])
                    (const_int 2340849 [0x23b7f1])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":320 222 {*adddi_1}
     (nil))
(insn 2294 2293 2295 114 (set (reg:SF 21 xmm0 [orig:1162 _1076 ] [1162])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [2183])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [2182])) [1 vrbls.t S4 A32])) "BNDLYR2.f":320 131 {*movsf_internal}
     (nil))
(insn 2295 2294 2296 114 (set (reg:SF 22 xmm1 [2184])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC8") [flags 0x2]) [0  S4 A32])) "BNDLYR2.f":320 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 2.73160003662109375e+2 [0x0.88947bp+9])
        (nil)))
(insn 2296 2295 2297 114 (set (reg:SF 21 xmm0 [orig:1163 _1077 ] [1163])
        (minus:SF (reg:SF 21 xmm0 [orig:1162 _1076 ] [1162])
            (reg:SF 22 xmm1 [2184]))) "BNDLYR2.f":320 841 {*fop_sf_1}
     (nil))
(insn 2297 2296 2298 114 (set (reg:SF 22 xmm1 [orig:1164 _1078 ] [1164])
        (reg:SF 21 xmm0 [orig:1163 _1077 ] [1163])) "BNDLYR2.f":320 131 {*movsf_internal}
     (nil))
(insn 2298 2297 2299 114 (set (reg:SF 21 xmm0 [2185])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC15") [flags 0x2]) [0  S4 A32])) "BNDLYR2.f":320 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.72693881988525390625e+1 [0x0.8a27b5p+5])
        (nil)))
(insn 2299 2298 2300 114 (set (reg:SF 21 xmm0 [orig:1165 _1079 ] [1165])
        (mult:SF (reg:SF 21 xmm0 [2185])
            (reg:SF 22 xmm1 [orig:1164 _1078 ] [1164]))) "BNDLYR2.f":320 838 {*fop_sf_comm}
     (nil))
(insn 2300 2299 2301 114 (set (reg:SI 0 ax [2186])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 l+0 S4 A32])) "BNDLYR2.f":320 86 {*movsi_internal}
     (nil))
(insn 2301 2300 2302 114 (set (reg:DI 0 ax [orig:1166 _1080 ] [1166])
        (sign_extend:DI (reg:SI 0 ax [2186]))) "BNDLYR2.f":320 149 {*extendsidi2_rex64}
     (nil))
(insn 2302 2301 2303 114 (parallel [
            (set (reg:DI 1 dx [orig:1167 _1081 ] [1167])
                (mult:DI (reg:DI 0 ax [orig:1166 _1080 ] [1166])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":320 349 {*muldi3_1}
     (nil))
(insn 2303 2302 2304 114 (set (reg:SI 0 ax [2187])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":320 86 {*movsi_internal}
     (nil))
(insn 2304 2303 2305 114 (set (reg:DI 0 ax [orig:1168 _1082 ] [1168])
        (sign_extend:DI (reg:SI 0 ax [2187]))) "BNDLYR2.f":320 149 {*extendsidi2_rex64}
     (nil))
(insn 2305 2304 2306 114 (parallel [
            (set (reg:DI 0 ax [orig:1169 _1083 ] [1169])
                (mult:DI (reg:DI 0 ax [orig:1168 _1082 ] [1168])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":320 349 {*muldi3_1}
     (nil))
(insn 2306 2305 2307 114 (parallel [
            (set (reg:DI 1 dx [orig:1170 _1084 ] [1170])
                (plus:DI (reg:DI 1 dx [orig:1167 _1081 ] [1167])
                    (reg:DI 0 ax [orig:1169 _1083 ] [1169])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":320 222 {*adddi_1}
     (nil))
(insn 2307 2306 2308 114 (set (reg:SI 0 ax [2188])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":320 86 {*movsi_internal}
     (nil))
(insn 2308 2307 2309 114 (set (reg:DI 0 ax [orig:1171 _1085 ] [1171])
        (sign_extend:DI (reg:SI 0 ax [2188]))) "BNDLYR2.f":320 149 {*extendsidi2_rex64}
     (nil))
(insn 2309 2308 2310 114 (parallel [
            (set (reg:DI 0 ax [orig:1172 _1086 ] [1172])
                (plus:DI (reg:DI 0 ax [orig:1171 _1085 ] [1171])
                    (reg:DI 1 dx [orig:1170 _1084 ] [1170])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":320 222 {*adddi_1}
     (nil))
(insn 2310 2309 2311 114 (parallel [
            (set (reg:DI 1 dx [orig:1173 _1087 ] [1173])
                (plus:DI (reg:DI 0 ax [orig:1172 _1086 ] [1172])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":320 222 {*adddi_1}
     (nil))
(insn 2311 2310 2312 114 (set (reg/f:DI 0 ax [2189])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7fd1b2d48360 vrbls>)) "BNDLYR2.f":320 85 {*movdi_internal}
     (nil))
(insn 2312 2311 2313 114 (parallel [
            (set (reg:DI 1 dx [2190])
                (plus:DI (reg:DI 1 dx [orig:1173 _1087 ] [1173])
                    (const_int 2340849 [0x23b7f1])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":320 222 {*adddi_1}
     (nil))
(insn 2313 2312 2314 114 (set (reg:SF 22 xmm1 [orig:1174 _1088 ] [1174])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [2190])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [2189])) [1 vrbls.t S4 A32])) "BNDLYR2.f":320 131 {*movsf_internal}
     (nil))
(insn 2314 2313 2315 114 (set (reg:SF 23 xmm2 [2191])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC16") [flags 0x2]) [0  S4 A32])) "BNDLYR2.f":320 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 3.58600006103515625e+1 [0x0.8f70a4p+6])
        (nil)))
(insn 2315 2314 2317 114 (set (reg:SF 22 xmm1 [orig:1175 _1089 ] [1175])
        (minus:SF (reg:SF 22 xmm1 [orig:1174 _1088 ] [1174])
            (reg:SF 23 xmm2 [2191]))) "BNDLYR2.f":320 841 {*fop_sf_1}
     (nil))
(insn 2317 2315 2319 114 (set (reg:SF 21 xmm0 [orig:1177 _1091 ] [1177])
        (div:SF (reg:SF 21 xmm0 [orig:1165 _1079 ] [1165])
            (reg:SF 22 xmm1 [orig:1176 _1090 ] [1176]))) "BNDLYR2.f":320 841 {*fop_sf_1}
     (nil))
(call_insn/u 2319 2317 3264 114 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("expf") [flags 0x41]  <function_decl 0x7fd1b2b97300 __builtin_expf>) [0 __builtin_expf S1 A8])
            (const_int 0 [0]))) "BNDLYR2.f":320 700 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (nil)))
(note 3264 2319 3269 114 NOTE_INSN_DELETED)
(note 3269 3264 2321 114 NOTE_INSN_DELETED)
(insn 2321 3269 2322 114 (set (reg:SF 21 xmm0 [2192])
        (mult:SF (reg:SF 21 xmm0 [orig:1178 _1092 ] [1178])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -196 [0xffffffffffffff3c])) [13 %sfp+-180 S4 A32]))) "BNDLYR2.f":320 838 {*fop_sf_comm}
     (nil))
(insn 2322 2321 2323 114 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -84 [0xffffffffffffffac])) [1 qw+0 S4 A32])
        (reg:SF 21 xmm0 [2192])) "BNDLYR2.f":320 131 {*movsf_internal}
     (nil))
(insn 2323 2322 2324 114 (set (reg:SF 21 xmm0 [orig:1517 M.3_1470 ] [1517])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -76 [0xffffffffffffffb4])) [1 tmt0+0 S4 A32])) "BNDLYR2.f":321 131 {*movsf_internal}
     (nil))
(insn 2324 2323 2325 114 (set (reg:SF 22 xmm1 [2194])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0  S4 A32])) "BNDLYR2.f":321 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 2325 2324 2326 114 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [orig:1517 M.3_1470 ] [1517])
            (reg:SF 22 xmm1 [2194]))) "BNDLYR2.f":321 53 {*cmpisf}
     (nil))
(insn 2326 2325 2327 114 (set (reg:QI 0 ax [2193])
        (gt:QI (reg:CCFP 17 flags)
            (const_int 0 [0]))) "BNDLYR2.f":321 678 {*setcc_qi}
     (nil))
(insn 2327 2326 2328 114 (set (reg:SI 1 dx [orig:1179 _1093 ] [1179])
        (zero_extend:SI (reg:QI 0 ax [2193]))) "BNDLYR2.f":321 140 {*zero_extendqisi2}
     (nil))
(insn 2328 2327 2329 114 (set (reg:CCFP 17 flags)
        (unspec:CCFP [
                (compare:CCFP (reg:SF 21 xmm0 [orig:1517 M.3_1470 ] [1517])
                    (reg:SF 21 xmm0 [orig:1517 M.3_1470 ] [1517]))
            ] UNSPEC_NOTRAP)) "BNDLYR2.f":321 54 {*cmpiusf}
     (nil))
(insn 2329 2328 2330 114 (set (reg:QI 0 ax [2195])
        (unordered:QI (reg:CCFP 17 flags)
            (const_int 0 [0]))) "BNDLYR2.f":321 678 {*setcc_qi}
     (nil))
(insn 2330 2329 2331 114 (set (reg:SI 0 ax [orig:1180 _1094 ] [1180])
        (zero_extend:SI (reg:QI 0 ax [2195]))) "BNDLYR2.f":321 140 {*zero_extendqisi2}
     (nil))
(insn 2331 2330 2332 114 (parallel [
            (set (reg:SI 0 ax [orig:1181 _1095 ] [1181])
                (ior:SI (reg:SI 0 ax [orig:1180 _1094 ] [1180])
                    (reg:SI 1 dx [orig:1179 _1093 ] [1179])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":321 450 {*iorsi_1}
     (nil))
(insn 2332 2331 2333 114 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:1181 _1095 ] [1181])
            (const_int 0 [0]))) "BNDLYR2.f":321 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 2333 2332 2334 114 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 2336)
            (pc))) "BNDLYR2.f":321 682 {*jcc}
     (nil)
 -> 2336)
;;  succ:       115 (FALLTHRU)
;;              116
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1517 1554

;; basic block 115, loop depth 0, maybe hot
;;  prev block 114, next block 116, flags: (RTL, MODIFIED)
;;  pred:       114 (FALLTHRU)
;; bb 115 artificial_defs: { }
;; bb 115 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1554
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 1517
(note 2334 2333 2335 115 [bb 115] NOTE_INSN_BASIC_BLOCK)
(insn 2335 2334 2336 115 (set (reg:SF 21 xmm0 [orig:1517 M.3_1470 ] [1517])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0  S4 A32])) "BNDLYR2.f":321 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
;;  succ:       116 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1517 1554

;; basic block 116, loop depth 0, maybe hot
;;  prev block 115, next block 117, flags: (RTL, MODIFIED)
;;  pred:       114
;;              115 (FALLTHRU)
;; bb 116 artificial_defs: { }
;; bb 116 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1517 1554
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1517
;; lr  def 	 17 [flags] 1182 1183 1184 1185 1186 1187 1188 1189 1190 2196 2197 2198 2199 2200 2201 2202 2203 2204 2205
(code_label 2336 2335 2337 116 84 (nil) [1 uses])
(note 2337 2336 2338 116 [bb 116] NOTE_INSN_BASIC_BLOCK)
(insn 2338 2337 2339 116 (set (reg:SF 21 xmm0 [orig:1182 _1096 ] [1182])
        (mult:SF (reg:SF 21 xmm0 [orig:1517 M.3_1470 ] [1517])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -20 [0xffffffffffffffec])) [1 ai+0 S4 A32]))) "BNDLYR2.f":321 838 {*fop_sf_comm}
     (nil))
(insn 2339 2338 2340 116 (set (reg:SF 21 xmm0 [orig:1183 _1097 ] [1183])
        (plus:SF (reg:SF 21 xmm0 [orig:1182 _1096 ] [1182])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -24 [0xffffffffffffffe8])) [1 bi+0 S4 A32]))) "BNDLYR2.f":321 838 {*fop_sf_comm}
     (nil))
(insn 2340 2339 2341 116 (set (reg:SF 22 xmm1 [orig:1184 _1098 ] [1184])
        (reg:SF 21 xmm0 [orig:1183 _1097 ] [1183])) "BNDLYR2.f":321 131 {*movsf_internal}
     (nil))
(insn 2341 2340 2342 116 (set (reg:SF 21 xmm0 [2197])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -84 [0xffffffffffffffac])) [1 qw+0 S4 A32])) "BNDLYR2.f":321 131 {*movsf_internal}
     (nil))
(insn 2342 2341 2343 116 (set (reg:SF 21 xmm0 [2196])
        (mult:SF (reg:SF 21 xmm0 [2197])
            (reg:SF 22 xmm1 [orig:1184 _1098 ] [1184]))) "BNDLYR2.f":321 838 {*fop_sf_comm}
     (nil))
(insn 2343 2342 2344 116 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [1 qi+0 S4 A32])
        (reg:SF 21 xmm0 [2196])) "BNDLYR2.f":321 131 {*movsf_internal}
     (nil))
(insn 2344 2343 2345 116 (set (reg:SF 22 xmm1 [2198])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -80 [0xffffffffffffffb0])) [1 tmt15+0 S4 A32])) "BNDLYR2.f":322 131 {*movsf_internal}
     (nil))
(insn 2345 2344 2346 116 (set (reg:SF 21 xmm0 [2199])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC17") [flags 0x2]) [0  S4 A32])) "BNDLYR2.f":322 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 3.19999991916120052337646484375e-4 [0x0.a7c5acp-11])
        (nil)))
(insn 2346 2345 2347 116 (set (reg:SF 21 xmm0 [orig:1185 _1099 ] [1185])
        (mult:SF (reg:SF 21 xmm0 [2199])
            (reg:SF 22 xmm1 [2198]))) "BNDLYR2.f":322 838 {*fop_sf_comm}
     (nil))
(insn 2347 2346 2348 116 (set (reg:SF 23 xmm2 [2200])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -80 [0xffffffffffffffb0])) [1 tmt15+0 S4 A32])) "BNDLYR2.f":322 131 {*movsf_internal}
     (nil))
(insn 2348 2347 2349 116 (set (reg:SF 22 xmm1 [2201])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC18") [flags 0x2]) [0  S4 A32])) "BNDLYR2.f":322 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.5e+1 [0x0.fp+4])
        (nil)))
(insn 2349 2348 2351 116 (set (reg:SF 22 xmm1 [orig:1186 _1100 ] [1186])
        (plus:SF (reg:SF 22 xmm1 [2201])
            (reg:SF 23 xmm2 [2200]))) "BNDLYR2.f":322 838 {*fop_sf_comm}
     (nil))
(insn 2351 2349 2352 116 (set (reg:SF 22 xmm1 [orig:1188 _1102 ] [1188])
        (mult:SF (reg:SF 22 xmm1 [orig:1187 _1101 ] [1187])
            (reg:SF 21 xmm0 [orig:1185 _1099 ] [1185]))) "BNDLYR2.f":322 838 {*fop_sf_comm}
     (nil))
(insn 2352 2351 2353 116 (set (reg:SF 21 xmm0 [2202])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC4") [flags 0x2]) [0  S4 A32])) "BNDLYR2.f":322 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 2353 2352 2354 116 (set (reg:SF 21 xmm0 [orig:1189 _1103 ] [1189])
        (minus:SF (reg:SF 21 xmm0 [2202])
            (reg:SF 22 xmm1 [orig:1188 _1102 ] [1188]))) "BNDLYR2.f":322 841 {*fop_sf_1}
     (nil))
(insn 2354 2353 2355 116 (set (reg:SF 22 xmm1 [orig:1190 _1104 ] [1190])
        (reg:SF 21 xmm0 [orig:1189 _1103 ] [1189])) "BNDLYR2.f":322 131 {*movsf_internal}
     (nil))
(insn 2355 2354 2356 116 (set (reg:SF 21 xmm0 [2204])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -84 [0xffffffffffffffac])) [1 qw+0 S4 A32])) "BNDLYR2.f":322 131 {*movsf_internal}
     (nil))
(insn 2356 2355 2357 116 (set (reg:SF 21 xmm0 [2203])
        (mult:SF (reg:SF 21 xmm0 [2204])
            (reg:SF 22 xmm1 [orig:1190 _1104 ] [1190]))) "BNDLYR2.f":322 838 {*fop_sf_comm}
     (nil))
(insn 2357 2356 2358 116 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -92 [0xffffffffffffffa4])) [1 qint+0 S4 A32])
        (reg:SF 21 xmm0 [2203])) "BNDLYR2.f":322 131 {*movsf_internal}
     (nil))
(insn 2358 2357 2359 116 (set (reg:SF 21 xmm0 [2205])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC9") [flags 0x2]) [0  S4 A32])) "BNDLYR2.f":323 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF -1.5e+1 [-0x0.fp+4])
        (nil)))
(insn 2359 2358 2360 116 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [2205])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -76 [0xffffffffffffffb4])) [1 tmt0+0 S4 A32]))) "BNDLYR2.f":323 53 {*cmpisf}
     (nil))
(jump_insn 2360 2359 2364 116 (set (pc)
        (if_then_else (unle (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 3154)
            (pc))) "BNDLYR2.f":323 682 {*jcc}
     (nil)
 -> 3154)
;;  succ:       117 (FALLTHRU)
;;              118
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1554

;; basic block 117, loop depth 0, maybe hot
;;  prev block 116, next block 118, flags: (RTL, MODIFIED)
;;  pred:       116 (FALLTHRU)
;; bb 117 artificial_defs: { }
;; bb 117 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1554
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 2206
(note 2364 2360 2365 117 [bb 117] NOTE_INSN_BASIC_BLOCK)
(insn 2365 2364 2366 117 (set (reg:SF 21 xmm0 [2206])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [1 qi+0 S4 A32])) "BNDLYR2.f":324 131 {*movsf_internal}
     (nil))
(insn 2366 2365 3155 117 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [1 qsat+0 S4 A32])
        (reg:SF 21 xmm0 [2206])) "BNDLYR2.f":324 131 {*movsf_internal}
     (nil))
(jump_insn 3155 2366 3156 117 (set (pc)
        (label_ref 2409)) 683 {jump}
     (nil)
 -> 2409)
;;  succ:       123 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1554

(barrier 3156 3155 3154)
;; basic block 118, loop depth 0, maybe hot
;;  prev block 117, next block 119, flags: (RTL, MODIFIED)
;;  pred:       116
;; bb 118 artificial_defs: { }
;; bb 118 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1554
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 2207 2208
(code_label 3154 3156 2370 118 140 (nil) [1 uses])
(note 2370 3154 2371 118 [bb 118] NOTE_INSN_BASIC_BLOCK)
(insn 2371 2370 2372 118 (set (reg:SF 21 xmm0 [2207])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -76 [0xffffffffffffffb4])) [1 tmt0+0 S4 A32])) "BNDLYR2.f":325 131 {*movsf_internal}
     (nil))
(insn 2372 2371 2373 118 (set (reg:SF 22 xmm1 [2208])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0  S4 A32])) "BNDLYR2.f":325 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 2373 2372 2374 118 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [2207])
            (reg:SF 22 xmm1 [2208]))) "BNDLYR2.f":325 53 {*cmpisf}
     (nil))
(jump_insn 2374 2373 2378 118 (set (pc)
        (if_then_else (unlt (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 3157)
            (pc))) "BNDLYR2.f":325 682 {*jcc}
     (nil)
 -> 3157)
;;  succ:       119 (FALLTHRU)
;;              120
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1554

;; basic block 119, loop depth 0, maybe hot
;;  prev block 118, next block 120, flags: (RTL, MODIFIED)
;;  pred:       118 (FALLTHRU)
;; bb 119 artificial_defs: { }
;; bb 119 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1554
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 2209
(note 2378 2374 2379 119 [bb 119] NOTE_INSN_BASIC_BLOCK)
(insn 2379 2378 2380 119 (set (reg:SF 21 xmm0 [2209])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -92 [0xffffffffffffffa4])) [1 qint+0 S4 A32])) "BNDLYR2.f":326 131 {*movsf_internal}
     (nil))
(insn 2380 2379 3158 119 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [1 qsat+0 S4 A32])
        (reg:SF 21 xmm0 [2209])) "BNDLYR2.f":326 131 {*movsf_internal}
     (nil))
(jump_insn 3158 2380 3159 119 (set (pc)
        (label_ref 2409)) 683 {jump}
     (nil)
 -> 2409)
;;  succ:       123 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1554

(barrier 3159 3158 3157)
;; basic block 120, loop depth 0, maybe hot
;;  prev block 119, next block 121, flags: (RTL, MODIFIED)
;;  pred:       118
;; bb 120 artificial_defs: { }
;; bb 120 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1554
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1191 1192 1193 1194 1195 1196 2210 2211 2212 2213
(code_label 3157 3159 2384 120 141 (nil) [1 uses])
(note 2384 3157 2385 120 [bb 120] NOTE_INSN_BASIC_BLOCK)
(insn 2385 2384 2386 120 (set (reg:SI 0 ax [2210])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":328 86 {*movsi_internal}
     (nil))
(insn 2386 2385 2387 120 (set (reg:DI 0 ax [orig:1191 _1105 ] [1191])
        (sign_extend:DI (reg:SI 0 ax [2210]))) "BNDLYR2.f":328 149 {*extendsidi2_rex64}
     (nil))
(insn 2387 2386 2388 120 (parallel [
            (set (reg:DI 1 dx [orig:1192 _1106 ] [1192])
                (mult:DI (reg:DI 0 ax [orig:1191 _1105 ] [1191])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":328 349 {*muldi3_1}
     (nil))
(insn 2388 2387 2389 120 (set (reg:SI 0 ax [2211])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":328 86 {*movsi_internal}
     (nil))
(insn 2389 2388 2390 120 (set (reg:DI 0 ax [orig:1193 _1107 ] [1193])
        (sign_extend:DI (reg:SI 0 ax [2211]))) "BNDLYR2.f":328 149 {*extendsidi2_rex64}
     (nil))
(insn 2390 2389 2391 120 (parallel [
            (set (reg:DI 0 ax [orig:1194 _1108 ] [1194])
                (plus:DI (reg:DI 0 ax [orig:1193 _1107 ] [1193])
                    (reg:DI 1 dx [orig:1192 _1106 ] [1192])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":328 222 {*adddi_1}
     (nil))
(insn 2391 2390 2392 120 (parallel [
            (set (reg:DI 1 dx [orig:1195 _1109 ] [1195])
                (plus:DI (reg:DI 0 ax [orig:1194 _1108 ] [1194])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":328 222 {*adddi_1}
     (nil))
(insn 2392 2391 2393 120 (set (reg/f:DI 0 ax [2212])
        (symbol_ref:DI ("iwl.4192") [flags 0x202]  <var_decl 0x7fd1b2d48cf0 iwl>)) "BNDLYR2.f":328 85 {*movdi_internal}
     (nil))
(insn 2393 2392 2394 120 (set (reg:SF 21 xmm0 [orig:1196 _1110 ] [1196])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:1195 _1109 ] [1195])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [2212])) [1 iwl S4 A32])) "BNDLYR2.f":328 131 {*movsf_internal}
     (nil))
(insn 2394 2393 2395 120 (set (reg:SF 22 xmm1 [2213])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0  S4 A32])) "BNDLYR2.f":328 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 2395 2394 2396 120 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [orig:1196 _1110 ] [1196])
            (reg:SF 22 xmm1 [2213]))) "BNDLYR2.f":328 53 {*cmpisf}
     (nil))
(jump_insn 2396 2395 2400 120 (set (pc)
        (if_then_else (unle (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 3160)
            (pc))) "BNDLYR2.f":328 682 {*jcc}
     (nil)
 -> 3160)
;;  succ:       121 (FALLTHRU)
;;              122
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1554

;; basic block 121, loop depth 0, maybe hot
;;  prev block 120, next block 122, flags: (RTL, MODIFIED)
;;  pred:       120 (FALLTHRU)
;; bb 121 artificial_defs: { }
;; bb 121 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1554
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 2214
(note 2400 2396 2401 121 [bb 121] NOTE_INSN_BASIC_BLOCK)
(insn 2401 2400 2402 121 (set (reg:SF 21 xmm0 [2214])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [1 qi+0 S4 A32])) "BNDLYR2.f":329 131 {*movsf_internal}
     (nil))
(insn 2402 2401 3161 121 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [1 qsat+0 S4 A32])
        (reg:SF 21 xmm0 [2214])) "BNDLYR2.f":329 131 {*movsf_internal}
     (nil))
(jump_insn 3161 2402 3162 121 (set (pc)
        (label_ref 2409)) 683 {jump}
     (nil)
 -> 2409)
;;  succ:       123 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1554

(barrier 3162 3161 3160)
;; basic block 122, loop depth 0, maybe hot
;;  prev block 121, next block 123, flags: (RTL, MODIFIED)
;;  pred:       120
;; bb 122 artificial_defs: { }
;; bb 122 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1554
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 2215
(code_label 3160 3162 2406 122 142 (nil) [1 uses])
(note 2406 3160 2407 122 [bb 122] NOTE_INSN_BASIC_BLOCK)
(insn 2407 2406 2408 122 (set (reg:SF 21 xmm0 [2215])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -92 [0xffffffffffffffa4])) [1 qint+0 S4 A32])) "BNDLYR2.f":331 131 {*movsf_internal}
     (nil))
(insn 2408 2407 2409 122 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [1 qsat+0 S4 A32])
        (reg:SF 21 xmm0 [2215])) "BNDLYR2.f":331 131 {*movsf_internal}
     (nil))
;;  succ:       123 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1554

;; basic block 123, loop depth 0, maybe hot
;;  prev block 122, next block 124, flags: (RTL, MODIFIED)
;;  pred:       122 (FALLTHRU)
;;              117 [always] 
;;              119 [always] 
;;              121 [always] 
;; bb 123 artificial_defs: { }
;; bb 123 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1554
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1197 1198 1199 1200 1201 1202 1203 1204 1205 1206 1207 1208 1209 1210 1211 1212 1213 1214 1215 1216 1217 1218 1219 1220 1221 1222 1223 1224 1225 1226 1227 1228 1229 1230 1231 1232 1233 1234 1235 1236 1237 1238 1239 1240 1241 1242 1243 1244 1245 1246 1247 1248 1249 1250 1251 2216 2217 2218 2219 2220 2221 2222 2223 2224 2225 2226 2227 2228 2229 2230 2231 2232 2233 2234 2235 2236 2237 2238 2239 2240 2241 2242 2243
(code_label 2409 2408 2410 123 87 (nil) [3 uses])
(note 2410 2409 2411 123 [bb 123] NOTE_INSN_BASIC_BLOCK)
(insn 2411 2410 2412 123 (set (reg:SF 21 xmm0 [2216])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -84 [0xffffffffffffffac])) [1 qw+0 S4 A32])) "BNDLYR2.f":336 131 {*movsf_internal}
     (nil))
(insn 2412 2411 2413 123 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [1 qsat+0 S4 A32])
        (reg:SF 21 xmm0 [2216])) "BNDLYR2.f":336 131 {*movsf_internal}
     (nil))
(insn 2413 2412 2414 123 (set (reg:SI 0 ax [2217])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 lbnd+0 S4 A32])) "BNDLYR2.f":338 86 {*movsi_internal}
     (nil))
(insn 2414 2413 2415 123 (set (reg:DI 0 ax [orig:1197 _1111 ] [1197])
        (sign_extend:DI (reg:SI 0 ax [2217]))) "BNDLYR2.f":338 149 {*extendsidi2_rex64}
     (nil))
(insn 2415 2414 2416 123 (parallel [
            (set (reg:DI 1 dx [orig:1198 _1112 ] [1198])
                (mult:DI (reg:DI 0 ax [orig:1197 _1111 ] [1197])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":338 349 {*muldi3_1}
     (nil))
(insn 2416 2415 2417 123 (set (reg:SI 0 ax [2218])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":338 86 {*movsi_internal}
     (nil))
(insn 2417 2416 2418 123 (set (reg:DI 0 ax [orig:1199 _1113 ] [1199])
        (sign_extend:DI (reg:SI 0 ax [2218]))) "BNDLYR2.f":338 149 {*extendsidi2_rex64}
     (nil))
(insn 2418 2417 2419 123 (parallel [
            (set (reg:DI 0 ax [orig:1200 _1114 ] [1200])
                (mult:DI (reg:DI 0 ax [orig:1199 _1113 ] [1199])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":338 349 {*muldi3_1}
     (nil))
(insn 2419 2418 2420 123 (parallel [
            (set (reg:DI 1 dx [orig:1201 _1115 ] [1201])
                (plus:DI (reg:DI 1 dx [orig:1198 _1112 ] [1198])
                    (reg:DI 0 ax [orig:1200 _1114 ] [1200])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":338 222 {*adddi_1}
     (nil))
(insn 2420 2419 2421 123 (set (reg:SI 0 ax [2219])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":338 86 {*movsi_internal}
     (nil))
(insn 2421 2420 2422 123 (set (reg:DI 0 ax [orig:1202 _1116 ] [1202])
        (sign_extend:DI (reg:SI 0 ax [2219]))) "BNDLYR2.f":338 149 {*extendsidi2_rex64}
     (nil))
(insn 2422 2421 2423 123 (parallel [
            (set (reg:DI 0 ax [orig:1203 _1117 ] [1203])
                (plus:DI (reg:DI 0 ax [orig:1202 _1116 ] [1202])
                    (reg:DI 1 dx [orig:1201 _1115 ] [1201])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":338 222 {*adddi_1}
     (nil))
(insn 2423 2422 2424 123 (parallel [
            (set (reg:DI 1 dx [orig:1204 _1118 ] [1204])
                (plus:DI (reg:DI 0 ax [orig:1203 _1117 ] [1203])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":338 222 {*adddi_1}
     (nil))
(insn 2424 2423 2425 123 (set (reg/f:DI 0 ax [2220])
        (symbol_ref:DI ("qsbnd.4217") [flags 0x202]  <var_decl 0x7fd1b2d4d870 qsbnd>)) "BNDLYR2.f":338 85 {*movdi_internal}
     (nil))
(insn 2425 2424 2426 123 (set (reg:SF 21 xmm0 [2221])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [1 qsat+0 S4 A32])) "BNDLYR2.f":338 131 {*movsf_internal}
     (nil))
(insn 2426 2425 2427 123 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:1204 _1118 ] [1204])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [2220])) [1 qsbnd S4 A32])
        (reg:SF 21 xmm0 [2221])) "BNDLYR2.f":338 131 {*movsf_internal}
     (nil))
(insn 2427 2426 2428 123 (set (reg:SI 0 ax [2222])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 l+0 S4 A32])) "BNDLYR2.f":339 86 {*movsi_internal}
     (nil))
(insn 2428 2427 2429 123 (set (reg:DI 0 ax [orig:1205 _1119 ] [1205])
        (sign_extend:DI (reg:SI 0 ax [2222]))) "BNDLYR2.f":339 149 {*extendsidi2_rex64}
     (nil))
(insn 2429 2428 2430 123 (parallel [
            (set (reg:DI 1 dx [orig:1206 _1120 ] [1206])
                (mult:DI (reg:DI 0 ax [orig:1205 _1119 ] [1205])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":339 349 {*muldi3_1}
     (nil))
(insn 2430 2429 2431 123 (set (reg:SI 0 ax [2223])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":339 86 {*movsi_internal}
     (nil))
(insn 2431 2430 2432 123 (set (reg:DI 0 ax [orig:1207 _1121 ] [1207])
        (sign_extend:DI (reg:SI 0 ax [2223]))) "BNDLYR2.f":339 149 {*extendsidi2_rex64}
     (nil))
(insn 2432 2431 2433 123 (parallel [
            (set (reg:DI 0 ax [orig:1208 _1122 ] [1208])
                (mult:DI (reg:DI 0 ax [orig:1207 _1121 ] [1207])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":339 349 {*muldi3_1}
     (nil))
(insn 2433 2432 2434 123 (parallel [
            (set (reg:DI 1 dx [orig:1209 _1123 ] [1209])
                (plus:DI (reg:DI 1 dx [orig:1206 _1120 ] [1206])
                    (reg:DI 0 ax [orig:1208 _1122 ] [1208])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":339 222 {*adddi_1}
     (nil))
(insn 2434 2433 2435 123 (set (reg:SI 0 ax [2224])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":339 86 {*movsi_internal}
     (nil))
(insn 2435 2434 2436 123 (set (reg:DI 0 ax [orig:1210 _1124 ] [1210])
        (sign_extend:DI (reg:SI 0 ax [2224]))) "BNDLYR2.f":339 149 {*extendsidi2_rex64}
     (nil))
(insn 2436 2435 2437 123 (parallel [
            (set (reg:DI 0 ax [orig:1211 _1125 ] [1211])
                (plus:DI (reg:DI 0 ax [orig:1210 _1124 ] [1210])
                    (reg:DI 1 dx [orig:1209 _1123 ] [1209])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":339 222 {*adddi_1}
     (nil))
(insn 2437 2436 2438 123 (parallel [
            (set (reg:DI 2 cx [orig:1212 _1126 ] [1212])
                (plus:DI (reg:DI 0 ax [orig:1211 _1125 ] [1211])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":339 222 {*adddi_1}
     (nil))
(insn 2438 2437 2439 123 (set (reg:SI 0 ax [2225])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 lbnd+0 S4 A32])) "BNDLYR2.f":339 86 {*movsi_internal}
     (nil))
(insn 2439 2438 2440 123 (set (reg:DI 0 ax [orig:1213 _1127 ] [1213])
        (sign_extend:DI (reg:SI 0 ax [2225]))) "BNDLYR2.f":339 149 {*extendsidi2_rex64}
     (nil))
(insn 2440 2439 2441 123 (parallel [
            (set (reg:DI 1 dx [orig:1214 _1128 ] [1214])
                (mult:DI (reg:DI 0 ax [orig:1213 _1127 ] [1213])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":339 349 {*muldi3_1}
     (nil))
(insn 2441 2440 2442 123 (set (reg:SI 0 ax [2226])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":339 86 {*movsi_internal}
     (nil))
(insn 2442 2441 2443 123 (set (reg:DI 0 ax [orig:1215 _1129 ] [1215])
        (sign_extend:DI (reg:SI 0 ax [2226]))) "BNDLYR2.f":339 149 {*extendsidi2_rex64}
     (nil))
(insn 2443 2442 2444 123 (parallel [
            (set (reg:DI 0 ax [orig:1216 _1130 ] [1216])
                (mult:DI (reg:DI 0 ax [orig:1215 _1129 ] [1215])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":339 349 {*muldi3_1}
     (nil))
(insn 2444 2443 2445 123 (parallel [
            (set (reg:DI 1 dx [orig:1217 _1131 ] [1217])
                (plus:DI (reg:DI 1 dx [orig:1214 _1128 ] [1214])
                    (reg:DI 0 ax [orig:1216 _1130 ] [1216])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":339 222 {*adddi_1}
     (nil))
(insn 2445 2444 2446 123 (set (reg:SI 0 ax [2227])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":339 86 {*movsi_internal}
     (nil))
(insn 2446 2445 2447 123 (set (reg:DI 0 ax [orig:1218 _1132 ] [1218])
        (sign_extend:DI (reg:SI 0 ax [2227]))) "BNDLYR2.f":339 149 {*extendsidi2_rex64}
     (nil))
(insn 2447 2446 2448 123 (parallel [
            (set (reg:DI 0 ax [orig:1219 _1133 ] [1219])
                (plus:DI (reg:DI 0 ax [orig:1218 _1132 ] [1218])
                    (reg:DI 1 dx [orig:1217 _1131 ] [1217])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":339 222 {*adddi_1}
     (nil))
(insn 2448 2447 2449 123 (parallel [
            (set (reg:DI 1 dx [orig:1220 _1134 ] [1220])
                (plus:DI (reg:DI 0 ax [orig:1219 _1133 ] [1219])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":339 222 {*adddi_1}
     (nil))
(insn 2449 2448 2450 123 (set (reg/f:DI 0 ax [2228])
        (symbol_ref:DI ("omgaot_") [flags 0x202]  <var_decl 0x7fd1b2d3c990 omgaot>)) "BNDLYR2.f":339 85 {*movdi_internal}
     (nil))
(insn 2450 2449 2451 123 (set (reg:SF 21 xmm0 [orig:1221 _1135 ] [1221])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:1212 _1126 ] [1212])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [2228])) [1 omgaot.omga S4 A32])) "BNDLYR2.f":339 131 {*movsf_internal}
     (nil))
(insn 2451 2450 2452 123 (set (reg/f:DI 0 ax [2229])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 16 [0x10])) [3 omgbnd+0 S8 A64])) "BNDLYR2.f":339 85 {*movdi_internal}
     (nil))
(insn 2452 2451 2453 123 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:1220 _1134 ] [1220])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [2229])) [1 *omgbnd_1550(D) S4 A32])
        (reg:SF 21 xmm0 [orig:1221 _1135 ] [1221])) "BNDLYR2.f":339 131 {*movsf_internal}
     (nil))
(insn 2453 2452 2454 123 (set (reg:SI 0 ax [2230])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 l+0 S4 A32])) "BNDLYR2.f":340 86 {*movsi_internal}
     (nil))
(insn 2454 2453 2455 123 (set (reg:DI 0 ax [orig:1222 _1136 ] [1222])
        (sign_extend:DI (reg:SI 0 ax [2230]))) "BNDLYR2.f":340 149 {*extendsidi2_rex64}
     (nil))
(insn 2455 2454 2456 123 (parallel [
            (set (reg:DI 1 dx [orig:1223 _1137 ] [1223])
                (mult:DI (reg:DI 0 ax [orig:1222 _1136 ] [1222])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":340 349 {*muldi3_1}
     (nil))
(insn 2456 2455 2457 123 (set (reg:SI 0 ax [2231])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":340 86 {*movsi_internal}
     (nil))
(insn 2457 2456 2458 123 (set (reg:DI 0 ax [orig:1224 _1138 ] [1224])
        (sign_extend:DI (reg:SI 0 ax [2231]))) "BNDLYR2.f":340 149 {*extendsidi2_rex64}
     (nil))
(insn 2458 2457 2459 123 (parallel [
            (set (reg:DI 0 ax [orig:1225 _1139 ] [1225])
                (mult:DI (reg:DI 0 ax [orig:1224 _1138 ] [1224])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":340 349 {*muldi3_1}
     (nil))
(insn 2459 2458 2460 123 (parallel [
            (set (reg:DI 1 dx [orig:1226 _1140 ] [1226])
                (plus:DI (reg:DI 1 dx [orig:1223 _1137 ] [1223])
                    (reg:DI 0 ax [orig:1225 _1139 ] [1225])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":340 222 {*adddi_1}
     (nil))
(insn 2460 2459 2461 123 (set (reg:SI 0 ax [2232])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":340 86 {*movsi_internal}
     (nil))
(insn 2461 2460 2462 123 (set (reg:DI 0 ax [orig:1227 _1141 ] [1227])
        (sign_extend:DI (reg:SI 0 ax [2232]))) "BNDLYR2.f":340 149 {*extendsidi2_rex64}
     (nil))
(insn 2462 2461 2463 123 (parallel [
            (set (reg:DI 0 ax [orig:1228 _1142 ] [1228])
                (plus:DI (reg:DI 0 ax [orig:1227 _1141 ] [1227])
                    (reg:DI 1 dx [orig:1226 _1140 ] [1226])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":340 222 {*adddi_1}
     (nil))
(insn 2463 2462 2464 123 (parallel [
            (set (reg:DI 1 dx [orig:1229 _1143 ] [1229])
                (plus:DI (reg:DI 0 ax [orig:1228 _1142 ] [1228])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":340 222 {*adddi_1}
     (nil))
(insn 2464 2463 2465 123 (set (reg/f:DI 0 ax [2233])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7fd1b2d48360 vrbls>)) "BNDLYR2.f":340 85 {*movdi_internal}
     (nil))
(insn 2465 2464 2466 123 (parallel [
            (set (reg:DI 1 dx [2234])
                (plus:DI (reg:DI 1 dx [orig:1229 _1143 ] [1229])
                    (const_int 3466827 [0x34e64b])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":340 222 {*adddi_1}
     (nil))
(insn 2466 2465 2467 123 (set (reg:SF 22 xmm1 [orig:1230 _1144 ] [1230])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [2234])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [2233])) [1 vrbls.q S4 A32])) "BNDLYR2.f":340 131 {*movsf_internal}
     (nil))
(insn 2467 2466 2468 123 (set (reg:SI 0 ax [2235])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 l+0 S4 A32])) "BNDLYR2.f":340 86 {*movsi_internal}
     (nil))
(insn 2468 2467 2469 123 (set (reg:DI 0 ax [orig:1231 _1145 ] [1231])
        (sign_extend:DI (reg:SI 0 ax [2235]))) "BNDLYR2.f":340 149 {*extendsidi2_rex64}
     (nil))
(insn 2469 2468 2470 123 (parallel [
            (set (reg:DI 1 dx [orig:1232 _1146 ] [1232])
                (mult:DI (reg:DI 0 ax [orig:1231 _1145 ] [1231])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":340 349 {*muldi3_1}
     (nil))
(insn 2470 2469 2471 123 (set (reg:SI 0 ax [2236])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":340 86 {*movsi_internal}
     (nil))
(insn 2471 2470 2472 123 (set (reg:DI 0 ax [orig:1233 _1147 ] [1233])
        (sign_extend:DI (reg:SI 0 ax [2236]))) "BNDLYR2.f":340 149 {*extendsidi2_rex64}
     (nil))
(insn 2472 2471 2473 123 (parallel [
            (set (reg:DI 0 ax [orig:1234 _1148 ] [1234])
                (mult:DI (reg:DI 0 ax [orig:1233 _1147 ] [1233])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":340 349 {*muldi3_1}
     (nil))
(insn 2473 2472 2474 123 (parallel [
            (set (reg:DI 1 dx [orig:1235 _1149 ] [1235])
                (plus:DI (reg:DI 1 dx [orig:1232 _1146 ] [1232])
                    (reg:DI 0 ax [orig:1234 _1148 ] [1234])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":340 222 {*adddi_1}
     (nil))
(insn 2474 2473 2475 123 (set (reg:SI 0 ax [2237])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":340 86 {*movsi_internal}
     (nil))
(insn 2475 2474 2476 123 (set (reg:DI 0 ax [orig:1236 _1150 ] [1236])
        (sign_extend:DI (reg:SI 0 ax [2237]))) "BNDLYR2.f":340 149 {*extendsidi2_rex64}
     (nil))
(insn 2476 2475 2477 123 (parallel [
            (set (reg:DI 0 ax [orig:1237 _1151 ] [1237])
                (plus:DI (reg:DI 0 ax [orig:1236 _1150 ] [1236])
                    (reg:DI 1 dx [orig:1235 _1149 ] [1235])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":340 222 {*adddi_1}
     (nil))
(insn 2477 2476 2478 123 (parallel [
            (set (reg:DI 1 dx [orig:1238 _1152 ] [1238])
                (plus:DI (reg:DI 0 ax [orig:1237 _1151 ] [1237])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":340 222 {*adddi_1}
     (nil))
(insn 2478 2477 2479 123 (set (reg/f:DI 0 ax [2238])
        (symbol_ref:DI ("cldwtr_") [flags 0x202]  <var_decl 0x7fd1b9d92b40 cldwtr>)) "BNDLYR2.f":340 85 {*movdi_internal}
     (nil))
(insn 2479 2478 2480 123 (set (reg:SF 21 xmm0 [orig:1239 _1153 ] [1239])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:1238 _1152 ] [1238])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [2238])) [1 cldwtr.cwm S4 A32])) "BNDLYR2.f":340 131 {*movsf_internal}
     (nil))
(insn 2480 2479 3265 123 (set (reg:SF 21 xmm0 [orig:1240 _1154 ] [1240])
        (plus:SF (reg:SF 21 xmm0 [orig:1239 _1153 ] [1239])
            (reg:SF 22 xmm1 [orig:1230 _1144 ] [1230]))) "BNDLYR2.f":340 838 {*fop_sf_comm}
     (nil))
(insn 3265 2480 2482 123 (set (reg:SF 22 xmm1 [orig:1241 _1155 ] [1241])
        (reg:SF 21 xmm0 [orig:1241 _1155 ] [1241])) "BNDLYR2.f":340 131 {*movsf_internal}
     (nil))
(insn 2482 3265 2483 123 (set (reg:SF 22 xmm1 [orig:1241 _1155 ] [1241])
        (mult:SF (reg:SF 22 xmm1 [orig:1241 _1155 ] [1241])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -72 [0xffffffffffffffb8])) [1 dp+0 S4 A32]))) "BNDLYR2.f":340 838 {*fop_sf_comm}
     (nil))
(insn 2483 2482 2484 123 (set (reg:SI 0 ax [2239])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 lbnd+0 S4 A32])) "BNDLYR2.f":340 86 {*movsi_internal}
     (nil))
(insn 2484 2483 2485 123 (set (reg:DI 0 ax [orig:1243 _1157 ] [1243])
        (sign_extend:DI (reg:SI 0 ax [2239]))) "BNDLYR2.f":340 149 {*extendsidi2_rex64}
     (nil))
(insn 2485 2484 2486 123 (parallel [
            (set (reg:DI 1 dx [orig:1244 _1158 ] [1244])
                (mult:DI (reg:DI 0 ax [orig:1243 _1157 ] [1243])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":340 349 {*muldi3_1}
     (nil))
(insn 2486 2485 2487 123 (set (reg:SI 0 ax [2240])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":340 86 {*movsi_internal}
     (nil))
(insn 2487 2486 2488 123 (set (reg:DI 0 ax [orig:1245 _1159 ] [1245])
        (sign_extend:DI (reg:SI 0 ax [2240]))) "BNDLYR2.f":340 149 {*extendsidi2_rex64}
     (nil))
(insn 2488 2487 2489 123 (parallel [
            (set (reg:DI 0 ax [orig:1246 _1160 ] [1246])
                (mult:DI (reg:DI 0 ax [orig:1245 _1159 ] [1245])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":340 349 {*muldi3_1}
     (nil))
(insn 2489 2488 2490 123 (parallel [
            (set (reg:DI 1 dx [orig:1247 _1161 ] [1247])
                (plus:DI (reg:DI 1 dx [orig:1244 _1158 ] [1244])
                    (reg:DI 0 ax [orig:1246 _1160 ] [1246])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":340 222 {*adddi_1}
     (nil))
(insn 2490 2489 2491 123 (set (reg:SI 0 ax [2241])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":340 86 {*movsi_internal}
     (nil))
(insn 2491 2490 2492 123 (set (reg:DI 0 ax [orig:1248 _1162 ] [1248])
        (sign_extend:DI (reg:SI 0 ax [2241]))) "BNDLYR2.f":340 149 {*extendsidi2_rex64}
     (nil))
(insn 2492 2491 2493 123 (parallel [
            (set (reg:DI 0 ax [orig:1249 _1163 ] [1249])
                (plus:DI (reg:DI 0 ax [orig:1248 _1162 ] [1248])
                    (reg:DI 1 dx [orig:1247 _1161 ] [1247])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":340 222 {*adddi_1}
     (nil))
(insn 2493 2492 2494 123 (parallel [
            (set (reg:DI 1 dx [orig:1250 _1164 ] [1250])
                (plus:DI (reg:DI 0 ax [orig:1249 _1163 ] [1249])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":340 222 {*adddi_1}
     (nil))
(insn 2494 2493 2495 123 (set (reg:SF 21 xmm0 [2242])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC7") [flags 0x2]) [0  S4 A32])) "BNDLYR2.f":340 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0204081237316131591796875e-1 [0x0.d0fac6p-3])
        (nil)))
(insn 2495 2494 2496 123 (set (reg:SF 21 xmm0 [orig:1251 _1165 ] [1251])
        (mult:SF (reg:SF 21 xmm0 [2242])
            (reg:SF 22 xmm1 [orig:1242 _1156 ] [1242]))) "BNDLYR2.f":340 838 {*fop_sf_comm}
     (nil))
(insn 2496 2495 2497 123 (set (reg/f:DI 0 ax [2243])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 24 [0x18])) [3 pwtbnd+0 S8 A64])) "BNDLYR2.f":340 85 {*movdi_internal}
     (nil))
(insn 2497 2496 2498 123 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:1250 _1164 ] [1250])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [2243])) [1 *pwtbnd_1557(D) S4 A32])
        (reg:SF 21 xmm0 [orig:1251 _1165 ] [1251])) "BNDLYR2.f":340 131 {*movsf_internal}
     (nil))
;;  succ:       124 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1554

;; basic block 124, loop depth 0, maybe hot
;;  prev block 123, next block 125, flags: (RTL, MODIFIED)
;;  pred:       123 (FALLTHRU)
;;              103
;;              104
;; bb 124 artificial_defs: { }
;; bb 124 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1554
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1252 1253 1254 1255 1256 1257 1258 1259 1260 1261 1262 1263 1264 1265 1266 1267 1268 1269 1270 1271 1272 1273 1274 1275 1276 1277 1278 1279 1280 1281 1282 1283 1284 1285 1286 1287 2244 2245 2246 2247 2248 2249 2250 2251 2252 2253 2254 2255 2256 2257 2258 2259 2260
(code_label 2498 2497 2499 124 75 (nil) [2 uses])
(note 2499 2498 2500 124 [bb 124] NOTE_INSN_BASIC_BLOCK)
(insn 2500 2499 2501 124 (set (reg:SI 0 ax [2244])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 lbnd+0 S4 A32])) "BNDLYR2.f":345 86 {*movsi_internal}
     (nil))
(insn 2501 2500 2502 124 (set (reg:DI 0 ax [orig:1252 _1166 ] [1252])
        (sign_extend:DI (reg:SI 0 ax [2244]))) "BNDLYR2.f":345 149 {*extendsidi2_rex64}
     (nil))
(insn 2502 2501 2503 124 (parallel [
            (set (reg:DI 1 dx [orig:1253 _1167 ] [1253])
                (mult:DI (reg:DI 0 ax [orig:1252 _1166 ] [1252])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":345 349 {*muldi3_1}
     (nil))
(insn 2503 2502 2504 124 (set (reg:SI 0 ax [2245])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":345 86 {*movsi_internal}
     (nil))
(insn 2504 2503 2505 124 (set (reg:DI 0 ax [orig:1254 _1168 ] [1254])
        (sign_extend:DI (reg:SI 0 ax [2245]))) "BNDLYR2.f":345 149 {*extendsidi2_rex64}
     (nil))
(insn 2505 2504 2506 124 (parallel [
            (set (reg:DI 0 ax [orig:1255 _1169 ] [1255])
                (mult:DI (reg:DI 0 ax [orig:1254 _1168 ] [1254])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":345 349 {*muldi3_1}
     (nil))
(insn 2506 2505 2507 124 (parallel [
            (set (reg:DI 1 dx [orig:1256 _1170 ] [1256])
                (plus:DI (reg:DI 1 dx [orig:1253 _1167 ] [1253])
                    (reg:DI 0 ax [orig:1255 _1169 ] [1255])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":345 222 {*adddi_1}
     (nil))
(insn 2507 2506 2508 124 (set (reg:SI 0 ax [2246])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":345 86 {*movsi_internal}
     (nil))
(insn 2508 2507 2509 124 (set (reg:DI 0 ax [orig:1257 _1171 ] [1257])
        (sign_extend:DI (reg:SI 0 ax [2246]))) "BNDLYR2.f":345 149 {*extendsidi2_rex64}
     (nil))
(insn 2509 2508 2510 124 (parallel [
            (set (reg:DI 0 ax [orig:1258 _1172 ] [1258])
                (plus:DI (reg:DI 0 ax [orig:1257 _1171 ] [1257])
                    (reg:DI 1 dx [orig:1256 _1170 ] [1256])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":345 222 {*adddi_1}
     (nil))
(insn 2510 2509 2511 124 (parallel [
            (set (reg:DI 1 dx [orig:1259 _1173 ] [1259])
                (plus:DI (reg:DI 0 ax [orig:1258 _1172 ] [1258])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":345 222 {*adddi_1}
     (nil))
(insn 2511 2510 2512 124 (set (reg/f:DI 0 ax [2247])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [3 qbnd+0 S8 A64])) "BNDLYR2.f":345 85 {*movdi_internal}
     (nil))
(insn 2512 2511 2513 124 (set (reg:SF 21 xmm0 [orig:1260 _1174 ] [1260])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:1259 _1173 ] [1259])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [2247])) [1 *qbnd_1541(D) S4 A32])) "BNDLYR2.f":345 131 {*movsf_internal}
     (nil))
(insn 2513 2512 2514 124 (set (reg:SI 0 ax [2248])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 lbnd+0 S4 A32])) "BNDLYR2.f":345 86 {*movsi_internal}
     (nil))
(insn 2514 2513 2515 124 (set (reg:DI 0 ax [orig:1261 _1175 ] [1261])
        (sign_extend:DI (reg:SI 0 ax [2248]))) "BNDLYR2.f":345 149 {*extendsidi2_rex64}
     (nil))
(insn 2515 2514 2516 124 (parallel [
            (set (reg:DI 1 dx [orig:1262 _1176 ] [1262])
                (mult:DI (reg:DI 0 ax [orig:1261 _1175 ] [1261])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":345 349 {*muldi3_1}
     (nil))
(insn 2516 2515 2517 124 (set (reg:SI 0 ax [2249])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":345 86 {*movsi_internal}
     (nil))
(insn 2517 2516 2518 124 (set (reg:DI 0 ax [orig:1263 _1177 ] [1263])
        (sign_extend:DI (reg:SI 0 ax [2249]))) "BNDLYR2.f":345 149 {*extendsidi2_rex64}
     (nil))
(insn 2518 2517 2519 124 (parallel [
            (set (reg:DI 0 ax [orig:1264 _1178 ] [1264])
                (mult:DI (reg:DI 0 ax [orig:1263 _1177 ] [1263])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":345 349 {*muldi3_1}
     (nil))
(insn 2519 2518 2520 124 (parallel [
            (set (reg:DI 1 dx [orig:1265 _1179 ] [1265])
                (plus:DI (reg:DI 1 dx [orig:1262 _1176 ] [1262])
                    (reg:DI 0 ax [orig:1264 _1178 ] [1264])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":345 222 {*adddi_1}
     (nil))
(insn 2520 2519 2521 124 (set (reg:SI 0 ax [2250])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":345 86 {*movsi_internal}
     (nil))
(insn 2521 2520 2522 124 (set (reg:DI 0 ax [orig:1266 _1180 ] [1266])
        (sign_extend:DI (reg:SI 0 ax [2250]))) "BNDLYR2.f":345 149 {*extendsidi2_rex64}
     (nil))
(insn 2522 2521 2523 124 (parallel [
            (set (reg:DI 0 ax [orig:1267 _1181 ] [1267])
                (plus:DI (reg:DI 0 ax [orig:1266 _1180 ] [1266])
                    (reg:DI 1 dx [orig:1265 _1179 ] [1265])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":345 222 {*adddi_1}
     (nil))
(insn 2523 2522 2524 124 (parallel [
            (set (reg:DI 1 dx [orig:1268 _1182 ] [1268])
                (plus:DI (reg:DI 0 ax [orig:1267 _1181 ] [1267])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":345 222 {*adddi_1}
     (nil))
(insn 2524 2523 2525 124 (set (reg/f:DI 0 ax [2251])
        (symbol_ref:DI ("qsbnd.4217") [flags 0x202]  <var_decl 0x7fd1b2d4d870 qsbnd>)) "BNDLYR2.f":345 85 {*movdi_internal}
     (nil))
(insn 2525 2524 2526 124 (set (reg:SF 22 xmm1 [orig:1269 _1183 ] [1269])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:1268 _1182 ] [1268])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [2251])) [1 qsbnd S4 A32])) "BNDLYR2.f":345 131 {*movsf_internal}
     (nil))
(insn 2526 2525 2527 124 (set (reg:SI 0 ax [2252])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 lbnd+0 S4 A32])) "BNDLYR2.f":345 86 {*movsi_internal}
     (nil))
(insn 2527 2526 2528 124 (set (reg:DI 0 ax [orig:1270 _1184 ] [1270])
        (sign_extend:DI (reg:SI 0 ax [2252]))) "BNDLYR2.f":345 149 {*extendsidi2_rex64}
     (nil))
(insn 2528 2527 2529 124 (parallel [
            (set (reg:DI 1 dx [orig:1271 _1185 ] [1271])
                (mult:DI (reg:DI 0 ax [orig:1270 _1184 ] [1270])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":345 349 {*muldi3_1}
     (nil))
(insn 2529 2528 2530 124 (set (reg:SI 0 ax [2253])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":345 86 {*movsi_internal}
     (nil))
(insn 2530 2529 2531 124 (set (reg:DI 0 ax [orig:1272 _1186 ] [1272])
        (sign_extend:DI (reg:SI 0 ax [2253]))) "BNDLYR2.f":345 149 {*extendsidi2_rex64}
     (nil))
(insn 2531 2530 2532 124 (parallel [
            (set (reg:DI 0 ax [orig:1273 _1187 ] [1273])
                (mult:DI (reg:DI 0 ax [orig:1272 _1186 ] [1272])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":345 349 {*muldi3_1}
     (nil))
(insn 2532 2531 2533 124 (parallel [
            (set (reg:DI 1 dx [orig:1274 _1188 ] [1274])
                (plus:DI (reg:DI 1 dx [orig:1271 _1185 ] [1271])
                    (reg:DI 0 ax [orig:1273 _1187 ] [1273])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":345 222 {*adddi_1}
     (nil))
(insn 2533 2532 2534 124 (set (reg:SI 0 ax [2254])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":345 86 {*movsi_internal}
     (nil))
(insn 2534 2533 2535 124 (set (reg:DI 0 ax [orig:1275 _1189 ] [1275])
        (sign_extend:DI (reg:SI 0 ax [2254]))) "BNDLYR2.f":345 149 {*extendsidi2_rex64}
     (nil))
(insn 2535 2534 2536 124 (parallel [
            (set (reg:DI 0 ax [orig:1276 _1190 ] [1276])
                (plus:DI (reg:DI 0 ax [orig:1275 _1189 ] [1275])
                    (reg:DI 1 dx [orig:1274 _1188 ] [1274])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":345 222 {*adddi_1}
     (nil))
(insn 2536 2535 2537 124 (parallel [
            (set (reg:DI 1 dx [orig:1277 _1191 ] [1277])
                (plus:DI (reg:DI 0 ax [orig:1276 _1190 ] [1276])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":345 222 {*adddi_1}
     (nil))
(insn 2537 2536 2538 124 (set (reg:SF 21 xmm0 [orig:1278 _1192 ] [1278])
        (div:SF (reg:SF 21 xmm0 [orig:1260 _1174 ] [1260])
            (reg:SF 22 xmm1 [orig:1269 _1183 ] [1269]))) "BNDLYR2.f":345 841 {*fop_sf_1}
     (nil))
(insn 2538 2537 2539 124 (set (reg/f:DI 0 ax [2255])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -176 [0xffffffffffffff50])) [3 rhbnd+0 S8 A64])) "BNDLYR2.f":345 85 {*movdi_internal}
     (nil))
(insn 2539 2538 2540 124 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:1277 _1191 ] [1277])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [2255])) [1 *rhbnd_1544(D) S4 A32])
        (reg:SF 21 xmm0 [orig:1278 _1192 ] [1278])) "BNDLYR2.f":345 131 {*movsf_internal}
     (nil))
(insn 2540 2539 2541 124 (set (reg:SI 0 ax [2256])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 lbnd+0 S4 A32])) "BNDLYR2.f":346 86 {*movsi_internal}
     (nil))
(insn 2541 2540 2542 124 (set (reg:DI 0 ax [orig:1279 _1193 ] [1279])
        (sign_extend:DI (reg:SI 0 ax [2256]))) "BNDLYR2.f":346 149 {*extendsidi2_rex64}
     (nil))
(insn 2542 2541 2543 124 (parallel [
            (set (reg:DI 1 dx [orig:1280 _1194 ] [1280])
                (mult:DI (reg:DI 0 ax [orig:1279 _1193 ] [1279])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":346 349 {*muldi3_1}
     (nil))
(insn 2543 2542 2544 124 (set (reg:SI 0 ax [2257])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":346 86 {*movsi_internal}
     (nil))
(insn 2544 2543 2545 124 (set (reg:DI 0 ax [orig:1281 _1195 ] [1281])
        (sign_extend:DI (reg:SI 0 ax [2257]))) "BNDLYR2.f":346 149 {*extendsidi2_rex64}
     (nil))
(insn 2545 2544 2546 124 (parallel [
            (set (reg:DI 0 ax [orig:1282 _1196 ] [1282])
                (mult:DI (reg:DI 0 ax [orig:1281 _1195 ] [1281])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":346 349 {*muldi3_1}
     (nil))
(insn 2546 2545 2547 124 (parallel [
            (set (reg:DI 1 dx [orig:1283 _1197 ] [1283])
                (plus:DI (reg:DI 1 dx [orig:1280 _1194 ] [1280])
                    (reg:DI 0 ax [orig:1282 _1196 ] [1282])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":346 222 {*adddi_1}
     (nil))
(insn 2547 2546 2548 124 (set (reg:SI 0 ax [2258])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":346 86 {*movsi_internal}
     (nil))
(insn 2548 2547 2549 124 (set (reg:DI 0 ax [orig:1284 _1198 ] [1284])
        (sign_extend:DI (reg:SI 0 ax [2258]))) "BNDLYR2.f":346 149 {*extendsidi2_rex64}
     (nil))
(insn 2549 2548 2550 124 (parallel [
            (set (reg:DI 0 ax [orig:1285 _1199 ] [1285])
                (plus:DI (reg:DI 0 ax [orig:1284 _1198 ] [1284])
                    (reg:DI 1 dx [orig:1283 _1197 ] [1283])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":346 222 {*adddi_1}
     (nil))
(insn 2550 2549 2551 124 (parallel [
            (set (reg:DI 1 dx [orig:1286 _1200 ] [1286])
                (plus:DI (reg:DI 0 ax [orig:1285 _1199 ] [1285])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":346 222 {*adddi_1}
     (nil))
(insn 2551 2550 2552 124 (set (reg/f:DI 0 ax [2259])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -176 [0xffffffffffffff50])) [3 rhbnd+0 S8 A64])) "BNDLYR2.f":346 85 {*movdi_internal}
     (nil))
(insn 2552 2551 2553 124 (set (reg:SF 21 xmm0 [orig:1287 _1201 ] [1287])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:1286 _1200 ] [1286])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [2259])) [1 *rhbnd_1544(D) S4 A32])) "BNDLYR2.f":346 131 {*movsf_internal}
     (nil))
(insn 2553 2552 2554 124 (set (reg:SF 22 xmm1 [2260])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC4") [flags 0x2]) [0  S4 A32])) "BNDLYR2.f":346 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 2554 2553 2555 124 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [orig:1287 _1201 ] [1287])
            (reg:SF 22 xmm1 [2260]))) "BNDLYR2.f":346 53 {*cmpisf}
     (nil))
(jump_insn 2555 2554 2559 124 (set (pc)
        (if_then_else (unle (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 2614)
            (pc))) "BNDLYR2.f":346 682 {*jcc}
     (nil)
 -> 2614)
;;  succ:       125 (FALLTHRU)
;;              126
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1554

;; basic block 125, loop depth 0, maybe hot
;;  prev block 124, next block 126, flags: (RTL, MODIFIED)
;;  pred:       124 (FALLTHRU)
;; bb 125 artificial_defs: { }
;; bb 125 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1554
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1288 1289 1290 1291 1292 1293 1294 1295 1296 1297 1298 1299 1300 1301 1302 1303 1304 1305 1306 1307 1308 1309 1310 1311 1312 1313 1314 1315 1316 1317 1318 1319 1320 1321 1322 2261 2262 2263 2264 2265 2266 2267 2268 2269 2270 2271 2272 2273 2274 2275 2276 2277
(note 2559 2555 2560 125 [bb 125] NOTE_INSN_BASIC_BLOCK)
(insn 2560 2559 2561 125 (set (reg:SI 0 ax [2261])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 lbnd+0 S4 A32])) "BNDLYR2.f":347 86 {*movsi_internal}
     (nil))
(insn 2561 2560 2562 125 (set (reg:DI 0 ax [orig:1288 _1202 ] [1288])
        (sign_extend:DI (reg:SI 0 ax [2261]))) "BNDLYR2.f":347 149 {*extendsidi2_rex64}
     (nil))
(insn 2562 2561 2563 125 (parallel [
            (set (reg:DI 1 dx [orig:1289 _1203 ] [1289])
                (mult:DI (reg:DI 0 ax [orig:1288 _1202 ] [1288])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":347 349 {*muldi3_1}
     (nil))
(insn 2563 2562 2564 125 (set (reg:SI 0 ax [2262])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":347 86 {*movsi_internal}
     (nil))
(insn 2564 2563 2565 125 (set (reg:DI 0 ax [orig:1290 _1204 ] [1290])
        (sign_extend:DI (reg:SI 0 ax [2262]))) "BNDLYR2.f":347 149 {*extendsidi2_rex64}
     (nil))
(insn 2565 2564 2566 125 (parallel [
            (set (reg:DI 0 ax [orig:1291 _1205 ] [1291])
                (mult:DI (reg:DI 0 ax [orig:1290 _1204 ] [1290])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":347 349 {*muldi3_1}
     (nil))
(insn 2566 2565 2567 125 (parallel [
            (set (reg:DI 1 dx [orig:1292 _1206 ] [1292])
                (plus:DI (reg:DI 1 dx [orig:1289 _1203 ] [1289])
                    (reg:DI 0 ax [orig:1291 _1205 ] [1291])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":347 222 {*adddi_1}
     (nil))
(insn 2567 2566 2568 125 (set (reg:SI 0 ax [2263])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":347 86 {*movsi_internal}
     (nil))
(insn 2568 2567 2569 125 (set (reg:DI 0 ax [orig:1293 _1207 ] [1293])
        (sign_extend:DI (reg:SI 0 ax [2263]))) "BNDLYR2.f":347 149 {*extendsidi2_rex64}
     (nil))
(insn 2569 2568 2570 125 (parallel [
            (set (reg:DI 0 ax [orig:1294 _1208 ] [1294])
                (plus:DI (reg:DI 0 ax [orig:1293 _1207 ] [1293])
                    (reg:DI 1 dx [orig:1292 _1206 ] [1292])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":347 222 {*adddi_1}
     (nil))
(insn 2570 2569 2571 125 (parallel [
            (set (reg:DI 1 dx [orig:1295 _1209 ] [1295])
                (plus:DI (reg:DI 0 ax [orig:1294 _1208 ] [1294])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":347 222 {*adddi_1}
     (nil))
(insn 2571 2570 2572 125 (set (reg/f:DI 0 ax [2264])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -176 [0xffffffffffffff50])) [3 rhbnd+0 S8 A64])) "BNDLYR2.f":347 85 {*movdi_internal}
     (nil))
(insn 2572 2571 2573 125 (set (reg:SF 21 xmm0 [2265])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC4") [flags 0x2]) [0  S4 A32])) "BNDLYR2.f":347 131 {*movsf_internal}
     (nil))
(insn 2573 2572 2574 125 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:1295 _1209 ] [1295])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [2264])) [1 *rhbnd_1544(D) S4 A32])
        (reg:SF 21 xmm0 [2265])) "BNDLYR2.f":347 131 {*movsf_internal}
     (nil))
(insn 2574 2573 2575 125 (set (reg:SI 0 ax [2266])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 lbnd+0 S4 A32])) "BNDLYR2.f":348 86 {*movsi_internal}
     (nil))
(insn 2575 2574 2576 125 (set (reg:DI 0 ax [orig:1296 _1210 ] [1296])
        (sign_extend:DI (reg:SI 0 ax [2266]))) "BNDLYR2.f":348 149 {*extendsidi2_rex64}
     (nil))
(insn 2576 2575 2577 125 (parallel [
            (set (reg:DI 1 dx [orig:1297 _1211 ] [1297])
                (mult:DI (reg:DI 0 ax [orig:1296 _1210 ] [1296])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":348 349 {*muldi3_1}
     (nil))
(insn 2577 2576 2578 125 (set (reg:SI 0 ax [2267])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":348 86 {*movsi_internal}
     (nil))
(insn 2578 2577 2579 125 (set (reg:DI 0 ax [orig:1298 _1212 ] [1298])
        (sign_extend:DI (reg:SI 0 ax [2267]))) "BNDLYR2.f":348 149 {*extendsidi2_rex64}
     (nil))
(insn 2579 2578 2580 125 (parallel [
            (set (reg:DI 0 ax [orig:1299 _1213 ] [1299])
                (mult:DI (reg:DI 0 ax [orig:1298 _1212 ] [1298])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":348 349 {*muldi3_1}
     (nil))
(insn 2580 2579 2581 125 (parallel [
            (set (reg:DI 1 dx [orig:1300 _1214 ] [1300])
                (plus:DI (reg:DI 1 dx [orig:1297 _1211 ] [1297])
                    (reg:DI 0 ax [orig:1299 _1213 ] [1299])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":348 222 {*adddi_1}
     (nil))
(insn 2581 2580 2582 125 (set (reg:SI 0 ax [2268])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":348 86 {*movsi_internal}
     (nil))
(insn 2582 2581 2583 125 (set (reg:DI 0 ax [orig:1301 _1215 ] [1301])
        (sign_extend:DI (reg:SI 0 ax [2268]))) "BNDLYR2.f":348 149 {*extendsidi2_rex64}
     (nil))
(insn 2583 2582 2584 125 (parallel [
            (set (reg:DI 0 ax [orig:1302 _1216 ] [1302])
                (plus:DI (reg:DI 0 ax [orig:1301 _1215 ] [1301])
                    (reg:DI 1 dx [orig:1300 _1214 ] [1300])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":348 222 {*adddi_1}
     (nil))
(insn 2584 2583 2585 125 (parallel [
            (set (reg:DI 1 dx [orig:1303 _1217 ] [1303])
                (plus:DI (reg:DI 0 ax [orig:1302 _1216 ] [1302])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":348 222 {*adddi_1}
     (nil))
(insn 2585 2584 2586 125 (set (reg/f:DI 0 ax [2269])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -176 [0xffffffffffffff50])) [3 rhbnd+0 S8 A64])) "BNDLYR2.f":348 85 {*movdi_internal}
     (nil))
(insn 2586 2585 2587 125 (set (reg:SF 22 xmm1 [orig:1304 _1218 ] [1304])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:1303 _1217 ] [1303])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [2269])) [1 *rhbnd_1544(D) S4 A32])) "BNDLYR2.f":348 131 {*movsf_internal}
     (nil))
(insn 2587 2586 2588 125 (set (reg:SI 0 ax [2270])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 lbnd+0 S4 A32])) "BNDLYR2.f":348 86 {*movsi_internal}
     (nil))
(insn 2588 2587 2589 125 (set (reg:DI 0 ax [orig:1305 _1219 ] [1305])
        (sign_extend:DI (reg:SI 0 ax [2270]))) "BNDLYR2.f":348 149 {*extendsidi2_rex64}
     (nil))
(insn 2589 2588 2590 125 (parallel [
            (set (reg:DI 1 dx [orig:1306 _1220 ] [1306])
                (mult:DI (reg:DI 0 ax [orig:1305 _1219 ] [1305])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":348 349 {*muldi3_1}
     (nil))
(insn 2590 2589 2591 125 (set (reg:SI 0 ax [2271])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":348 86 {*movsi_internal}
     (nil))
(insn 2591 2590 2592 125 (set (reg:DI 0 ax [orig:1307 _1221 ] [1307])
        (sign_extend:DI (reg:SI 0 ax [2271]))) "BNDLYR2.f":348 149 {*extendsidi2_rex64}
     (nil))
(insn 2592 2591 2593 125 (parallel [
            (set (reg:DI 0 ax [orig:1308 _1222 ] [1308])
                (mult:DI (reg:DI 0 ax [orig:1307 _1221 ] [1307])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":348 349 {*muldi3_1}
     (nil))
(insn 2593 2592 2594 125 (parallel [
            (set (reg:DI 1 dx [orig:1309 _1223 ] [1309])
                (plus:DI (reg:DI 1 dx [orig:1306 _1220 ] [1306])
                    (reg:DI 0 ax [orig:1308 _1222 ] [1308])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":348 222 {*adddi_1}
     (nil))
(insn 2594 2593 2595 125 (set (reg:SI 0 ax [2272])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":348 86 {*movsi_internal}
     (nil))
(insn 2595 2594 2596 125 (set (reg:DI 0 ax [orig:1310 _1224 ] [1310])
        (sign_extend:DI (reg:SI 0 ax [2272]))) "BNDLYR2.f":348 149 {*extendsidi2_rex64}
     (nil))
(insn 2596 2595 2597 125 (parallel [
            (set (reg:DI 0 ax [orig:1311 _1225 ] [1311])
                (plus:DI (reg:DI 0 ax [orig:1310 _1224 ] [1310])
                    (reg:DI 1 dx [orig:1309 _1223 ] [1309])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":348 222 {*adddi_1}
     (nil))
(insn 2597 2596 2598 125 (parallel [
            (set (reg:DI 1 dx [orig:1312 _1226 ] [1312])
                (plus:DI (reg:DI 0 ax [orig:1311 _1225 ] [1311])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":348 222 {*adddi_1}
     (nil))
(insn 2598 2597 2599 125 (set (reg/f:DI 0 ax [2273])
        (symbol_ref:DI ("qsbnd.4217") [flags 0x202]  <var_decl 0x7fd1b2d4d870 qsbnd>)) "BNDLYR2.f":348 85 {*movdi_internal}
     (nil))
(insn 2599 2598 2600 125 (set (reg:SF 21 xmm0 [orig:1313 _1227 ] [1313])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:1312 _1226 ] [1312])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [2273])) [1 qsbnd S4 A32])) "BNDLYR2.f":348 131 {*movsf_internal}
     (nil))
(insn 2600 2599 2601 125 (set (reg:SI 0 ax [2274])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 lbnd+0 S4 A32])) "BNDLYR2.f":348 86 {*movsi_internal}
     (nil))
(insn 2601 2600 2602 125 (set (reg:DI 0 ax [orig:1314 _1228 ] [1314])
        (sign_extend:DI (reg:SI 0 ax [2274]))) "BNDLYR2.f":348 149 {*extendsidi2_rex64}
     (nil))
(insn 2602 2601 2603 125 (parallel [
            (set (reg:DI 1 dx [orig:1315 _1229 ] [1315])
                (mult:DI (reg:DI 0 ax [orig:1314 _1228 ] [1314])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":348 349 {*muldi3_1}
     (nil))
(insn 2603 2602 2604 125 (set (reg:SI 0 ax [2275])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":348 86 {*movsi_internal}
     (nil))
(insn 2604 2603 2605 125 (set (reg:DI 0 ax [orig:1316 _1230 ] [1316])
        (sign_extend:DI (reg:SI 0 ax [2275]))) "BNDLYR2.f":348 149 {*extendsidi2_rex64}
     (nil))
(insn 2605 2604 2606 125 (parallel [
            (set (reg:DI 0 ax [orig:1317 _1231 ] [1317])
                (mult:DI (reg:DI 0 ax [orig:1316 _1230 ] [1316])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":348 349 {*muldi3_1}
     (nil))
(insn 2606 2605 2607 125 (parallel [
            (set (reg:DI 1 dx [orig:1318 _1232 ] [1318])
                (plus:DI (reg:DI 1 dx [orig:1315 _1229 ] [1315])
                    (reg:DI 0 ax [orig:1317 _1231 ] [1317])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":348 222 {*adddi_1}
     (nil))
(insn 2607 2606 2608 125 (set (reg:SI 0 ax [2276])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":348 86 {*movsi_internal}
     (nil))
(insn 2608 2607 2609 125 (set (reg:DI 0 ax [orig:1319 _1233 ] [1319])
        (sign_extend:DI (reg:SI 0 ax [2276]))) "BNDLYR2.f":348 149 {*extendsidi2_rex64}
     (nil))
(insn 2609 2608 2610 125 (parallel [
            (set (reg:DI 0 ax [orig:1320 _1234 ] [1320])
                (plus:DI (reg:DI 0 ax [orig:1319 _1233 ] [1319])
                    (reg:DI 1 dx [orig:1318 _1232 ] [1318])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":348 222 {*adddi_1}
     (nil))
(insn 2610 2609 2611 125 (parallel [
            (set (reg:DI 1 dx [orig:1321 _1235 ] [1321])
                (plus:DI (reg:DI 0 ax [orig:1320 _1234 ] [1320])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":348 222 {*adddi_1}
     (nil))
(insn 2611 2610 2612 125 (set (reg:SF 21 xmm0 [orig:1322 _1236 ] [1322])
        (mult:SF (reg:SF 21 xmm0 [orig:1313 _1227 ] [1313])
            (reg:SF 22 xmm1 [orig:1304 _1218 ] [1304]))) "BNDLYR2.f":348 838 {*fop_sf_comm}
     (nil))
(insn 2612 2611 2613 125 (set (reg/f:DI 0 ax [2277])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [3 qbnd+0 S8 A64])) "BNDLYR2.f":348 85 {*movdi_internal}
     (nil))
(insn 2613 2612 2614 125 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:1321 _1235 ] [1321])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [2277])) [1 *qbnd_1541(D) S4 A32])
        (reg:SF 21 xmm0 [orig:1322 _1236 ] [1322])) "BNDLYR2.f":348 131 {*movsf_internal}
     (nil))
;;  succ:       126 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1554

;; basic block 126, loop depth 0, maybe hot
;;  prev block 125, next block 127, flags: (RTL, MODIFIED)
;;  pred:       125 (FALLTHRU)
;;              124
;; bb 126 artificial_defs: { }
;; bb 126 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1554
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1323 1324 1325 1326 1327 1328 1329 1330 1331 2278 2279 2280 2281 2282
(code_label 2614 2613 2615 126 92 (nil) [1 uses])
(note 2615 2614 2616 126 [bb 126] NOTE_INSN_BASIC_BLOCK)
(insn 2616 2615 2617 126 (set (reg:SI 0 ax [2278])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 lbnd+0 S4 A32])) "BNDLYR2.f":350 86 {*movsi_internal}
     (nil))
(insn 2617 2616 2618 126 (set (reg:DI 0 ax [orig:1323 _1237 ] [1323])
        (sign_extend:DI (reg:SI 0 ax [2278]))) "BNDLYR2.f":350 149 {*extendsidi2_rex64}
     (nil))
(insn 2618 2617 2619 126 (parallel [
            (set (reg:DI 1 dx [orig:1324 _1238 ] [1324])
                (mult:DI (reg:DI 0 ax [orig:1323 _1237 ] [1323])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":350 349 {*muldi3_1}
     (nil))
(insn 2619 2618 2620 126 (set (reg:SI 0 ax [2279])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":350 86 {*movsi_internal}
     (nil))
(insn 2620 2619 2621 126 (set (reg:DI 0 ax [orig:1325 _1239 ] [1325])
        (sign_extend:DI (reg:SI 0 ax [2279]))) "BNDLYR2.f":350 149 {*extendsidi2_rex64}
     (nil))
(insn 2621 2620 2622 126 (parallel [
            (set (reg:DI 0 ax [orig:1326 _1240 ] [1326])
                (mult:DI (reg:DI 0 ax [orig:1325 _1239 ] [1325])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":350 349 {*muldi3_1}
     (nil))
(insn 2622 2621 2623 126 (parallel [
            (set (reg:DI 1 dx [orig:1327 _1241 ] [1327])
                (plus:DI (reg:DI 1 dx [orig:1324 _1238 ] [1324])
                    (reg:DI 0 ax [orig:1326 _1240 ] [1326])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":350 222 {*adddi_1}
     (nil))
(insn 2623 2622 2624 126 (set (reg:SI 0 ax [2280])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":350 86 {*movsi_internal}
     (nil))
(insn 2624 2623 2625 126 (set (reg:DI 0 ax [orig:1328 _1242 ] [1328])
        (sign_extend:DI (reg:SI 0 ax [2280]))) "BNDLYR2.f":350 149 {*extendsidi2_rex64}
     (nil))
(insn 2625 2624 2626 126 (parallel [
            (set (reg:DI 0 ax [orig:1329 _1243 ] [1329])
                (plus:DI (reg:DI 0 ax [orig:1328 _1242 ] [1328])
                    (reg:DI 1 dx [orig:1327 _1241 ] [1327])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":350 222 {*adddi_1}
     (nil))
(insn 2626 2625 2627 126 (parallel [
            (set (reg:DI 1 dx [orig:1330 _1244 ] [1330])
                (plus:DI (reg:DI 0 ax [orig:1329 _1243 ] [1329])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":350 222 {*adddi_1}
     (nil))
(insn 2627 2626 2628 126 (set (reg/f:DI 0 ax [2281])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -176 [0xffffffffffffff50])) [3 rhbnd+0 S8 A64])) "BNDLYR2.f":350 85 {*movdi_internal}
     (nil))
(insn 2628 2627 2629 126 (set (reg:SF 22 xmm1 [orig:1331 _1245 ] [1331])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:1330 _1244 ] [1330])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [2281])) [1 *rhbnd_1544(D) S4 A32])) "BNDLYR2.f":350 131 {*movsf_internal}
     (nil))
(insn 2629 2628 2630 126 (set (reg:SF 21 xmm0 [2282])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC22") [flags 0x2]) [0  S4 A32])) "BNDLYR2.f":350 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 9.99999977648258209228515625e-3 [0x0.a3d70ap-6])
        (nil)))
(insn 2630 2629 2631 126 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [2282])
            (reg:SF 22 xmm1 [orig:1331 _1245 ] [1331]))) "BNDLYR2.f":350 53 {*cmpisf}
     (nil))
(jump_insn 2631 2630 2635 126 (set (pc)
        (if_then_else (unle (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 2690)
            (pc))) "BNDLYR2.f":350 682 {*jcc}
     (nil)
 -> 2690)
;;  succ:       127 (FALLTHRU)
;;              128
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1554

;; basic block 127, loop depth 0, maybe hot
;;  prev block 126, next block 128, flags: (RTL, MODIFIED)
;;  pred:       126 (FALLTHRU)
;; bb 127 artificial_defs: { }
;; bb 127 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1554
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1332 1333 1334 1335 1336 1337 1338 1339 1340 1341 1342 1343 1344 1345 1346 1347 1348 1349 1350 1351 1352 1353 1354 1355 1356 1357 1358 1359 1360 1361 1362 1363 1364 1365 1366 2283 2284 2285 2286 2287 2288 2289 2290 2291 2292 2293 2294 2295 2296 2297 2298 2299
(note 2635 2631 2636 127 [bb 127] NOTE_INSN_BASIC_BLOCK)
(insn 2636 2635 2637 127 (set (reg:SI 0 ax [2283])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 lbnd+0 S4 A32])) "BNDLYR2.f":351 86 {*movsi_internal}
     (nil))
(insn 2637 2636 2638 127 (set (reg:DI 0 ax [orig:1332 _1246 ] [1332])
        (sign_extend:DI (reg:SI 0 ax [2283]))) "BNDLYR2.f":351 149 {*extendsidi2_rex64}
     (nil))
(insn 2638 2637 2639 127 (parallel [
            (set (reg:DI 1 dx [orig:1333 _1247 ] [1333])
                (mult:DI (reg:DI 0 ax [orig:1332 _1246 ] [1332])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":351 349 {*muldi3_1}
     (nil))
(insn 2639 2638 2640 127 (set (reg:SI 0 ax [2284])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":351 86 {*movsi_internal}
     (nil))
(insn 2640 2639 2641 127 (set (reg:DI 0 ax [orig:1334 _1248 ] [1334])
        (sign_extend:DI (reg:SI 0 ax [2284]))) "BNDLYR2.f":351 149 {*extendsidi2_rex64}
     (nil))
(insn 2641 2640 2642 127 (parallel [
            (set (reg:DI 0 ax [orig:1335 _1249 ] [1335])
                (mult:DI (reg:DI 0 ax [orig:1334 _1248 ] [1334])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":351 349 {*muldi3_1}
     (nil))
(insn 2642 2641 2643 127 (parallel [
            (set (reg:DI 1 dx [orig:1336 _1250 ] [1336])
                (plus:DI (reg:DI 1 dx [orig:1333 _1247 ] [1333])
                    (reg:DI 0 ax [orig:1335 _1249 ] [1335])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":351 222 {*adddi_1}
     (nil))
(insn 2643 2642 2644 127 (set (reg:SI 0 ax [2285])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":351 86 {*movsi_internal}
     (nil))
(insn 2644 2643 2645 127 (set (reg:DI 0 ax [orig:1337 _1251 ] [1337])
        (sign_extend:DI (reg:SI 0 ax [2285]))) "BNDLYR2.f":351 149 {*extendsidi2_rex64}
     (nil))
(insn 2645 2644 2646 127 (parallel [
            (set (reg:DI 0 ax [orig:1338 _1252 ] [1338])
                (plus:DI (reg:DI 0 ax [orig:1337 _1251 ] [1337])
                    (reg:DI 1 dx [orig:1336 _1250 ] [1336])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":351 222 {*adddi_1}
     (nil))
(insn 2646 2645 2647 127 (parallel [
            (set (reg:DI 1 dx [orig:1339 _1253 ] [1339])
                (plus:DI (reg:DI 0 ax [orig:1338 _1252 ] [1338])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":351 222 {*adddi_1}
     (nil))
(insn 2647 2646 2648 127 (set (reg/f:DI 0 ax [2286])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -176 [0xffffffffffffff50])) [3 rhbnd+0 S8 A64])) "BNDLYR2.f":351 85 {*movdi_internal}
     (nil))
(insn 2648 2647 2649 127 (set (reg:SF 21 xmm0 [2287])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC22") [flags 0x2]) [0  S4 A32])) "BNDLYR2.f":351 131 {*movsf_internal}
     (nil))
(insn 2649 2648 2650 127 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:1339 _1253 ] [1339])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [2286])) [1 *rhbnd_1544(D) S4 A32])
        (reg:SF 21 xmm0 [2287])) "BNDLYR2.f":351 131 {*movsf_internal}
     (nil))
(insn 2650 2649 2651 127 (set (reg:SI 0 ax [2288])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 lbnd+0 S4 A32])) "BNDLYR2.f":352 86 {*movsi_internal}
     (nil))
(insn 2651 2650 2652 127 (set (reg:DI 0 ax [orig:1340 _1254 ] [1340])
        (sign_extend:DI (reg:SI 0 ax [2288]))) "BNDLYR2.f":352 149 {*extendsidi2_rex64}
     (nil))
(insn 2652 2651 2653 127 (parallel [
            (set (reg:DI 1 dx [orig:1341 _1255 ] [1341])
                (mult:DI (reg:DI 0 ax [orig:1340 _1254 ] [1340])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":352 349 {*muldi3_1}
     (nil))
(insn 2653 2652 2654 127 (set (reg:SI 0 ax [2289])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":352 86 {*movsi_internal}
     (nil))
(insn 2654 2653 2655 127 (set (reg:DI 0 ax [orig:1342 _1256 ] [1342])
        (sign_extend:DI (reg:SI 0 ax [2289]))) "BNDLYR2.f":352 149 {*extendsidi2_rex64}
     (nil))
(insn 2655 2654 2656 127 (parallel [
            (set (reg:DI 0 ax [orig:1343 _1257 ] [1343])
                (mult:DI (reg:DI 0 ax [orig:1342 _1256 ] [1342])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":352 349 {*muldi3_1}
     (nil))
(insn 2656 2655 2657 127 (parallel [
            (set (reg:DI 1 dx [orig:1344 _1258 ] [1344])
                (plus:DI (reg:DI 1 dx [orig:1341 _1255 ] [1341])
                    (reg:DI 0 ax [orig:1343 _1257 ] [1343])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":352 222 {*adddi_1}
     (nil))
(insn 2657 2656 2658 127 (set (reg:SI 0 ax [2290])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":352 86 {*movsi_internal}
     (nil))
(insn 2658 2657 2659 127 (set (reg:DI 0 ax [orig:1345 _1259 ] [1345])
        (sign_extend:DI (reg:SI 0 ax [2290]))) "BNDLYR2.f":352 149 {*extendsidi2_rex64}
     (nil))
(insn 2659 2658 2660 127 (parallel [
            (set (reg:DI 0 ax [orig:1346 _1260 ] [1346])
                (plus:DI (reg:DI 0 ax [orig:1345 _1259 ] [1345])
                    (reg:DI 1 dx [orig:1344 _1258 ] [1344])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":352 222 {*adddi_1}
     (nil))
(insn 2660 2659 2661 127 (parallel [
            (set (reg:DI 1 dx [orig:1347 _1261 ] [1347])
                (plus:DI (reg:DI 0 ax [orig:1346 _1260 ] [1346])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":352 222 {*adddi_1}
     (nil))
(insn 2661 2660 2662 127 (set (reg/f:DI 0 ax [2291])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -176 [0xffffffffffffff50])) [3 rhbnd+0 S8 A64])) "BNDLYR2.f":352 85 {*movdi_internal}
     (nil))
(insn 2662 2661 2663 127 (set (reg:SF 22 xmm1 [orig:1348 _1262 ] [1348])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:1347 _1261 ] [1347])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [2291])) [1 *rhbnd_1544(D) S4 A32])) "BNDLYR2.f":352 131 {*movsf_internal}
     (nil))
(insn 2663 2662 2664 127 (set (reg:SI 0 ax [2292])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 lbnd+0 S4 A32])) "BNDLYR2.f":352 86 {*movsi_internal}
     (nil))
(insn 2664 2663 2665 127 (set (reg:DI 0 ax [orig:1349 _1263 ] [1349])
        (sign_extend:DI (reg:SI 0 ax [2292]))) "BNDLYR2.f":352 149 {*extendsidi2_rex64}
     (nil))
(insn 2665 2664 2666 127 (parallel [
            (set (reg:DI 1 dx [orig:1350 _1264 ] [1350])
                (mult:DI (reg:DI 0 ax [orig:1349 _1263 ] [1349])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":352 349 {*muldi3_1}
     (nil))
(insn 2666 2665 2667 127 (set (reg:SI 0 ax [2293])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":352 86 {*movsi_internal}
     (nil))
(insn 2667 2666 2668 127 (set (reg:DI 0 ax [orig:1351 _1265 ] [1351])
        (sign_extend:DI (reg:SI 0 ax [2293]))) "BNDLYR2.f":352 149 {*extendsidi2_rex64}
     (nil))
(insn 2668 2667 2669 127 (parallel [
            (set (reg:DI 0 ax [orig:1352 _1266 ] [1352])
                (mult:DI (reg:DI 0 ax [orig:1351 _1265 ] [1351])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":352 349 {*muldi3_1}
     (nil))
(insn 2669 2668 2670 127 (parallel [
            (set (reg:DI 1 dx [orig:1353 _1267 ] [1353])
                (plus:DI (reg:DI 1 dx [orig:1350 _1264 ] [1350])
                    (reg:DI 0 ax [orig:1352 _1266 ] [1352])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":352 222 {*adddi_1}
     (nil))
(insn 2670 2669 2671 127 (set (reg:SI 0 ax [2294])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":352 86 {*movsi_internal}
     (nil))
(insn 2671 2670 2672 127 (set (reg:DI 0 ax [orig:1354 _1268 ] [1354])
        (sign_extend:DI (reg:SI 0 ax [2294]))) "BNDLYR2.f":352 149 {*extendsidi2_rex64}
     (nil))
(insn 2672 2671 2673 127 (parallel [
            (set (reg:DI 0 ax [orig:1355 _1269 ] [1355])
                (plus:DI (reg:DI 0 ax [orig:1354 _1268 ] [1354])
                    (reg:DI 1 dx [orig:1353 _1267 ] [1353])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":352 222 {*adddi_1}
     (nil))
(insn 2673 2672 2674 127 (parallel [
            (set (reg:DI 1 dx [orig:1356 _1270 ] [1356])
                (plus:DI (reg:DI 0 ax [orig:1355 _1269 ] [1355])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":352 222 {*adddi_1}
     (nil))
(insn 2674 2673 2675 127 (set (reg/f:DI 0 ax [2295])
        (symbol_ref:DI ("qsbnd.4217") [flags 0x202]  <var_decl 0x7fd1b2d4d870 qsbnd>)) "BNDLYR2.f":352 85 {*movdi_internal}
     (nil))
(insn 2675 2674 2676 127 (set (reg:SF 21 xmm0 [orig:1357 _1271 ] [1357])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:1356 _1270 ] [1356])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [2295])) [1 qsbnd S4 A32])) "BNDLYR2.f":352 131 {*movsf_internal}
     (nil))
(insn 2676 2675 2677 127 (set (reg:SI 0 ax [2296])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 lbnd+0 S4 A32])) "BNDLYR2.f":352 86 {*movsi_internal}
     (nil))
(insn 2677 2676 2678 127 (set (reg:DI 0 ax [orig:1358 _1272 ] [1358])
        (sign_extend:DI (reg:SI 0 ax [2296]))) "BNDLYR2.f":352 149 {*extendsidi2_rex64}
     (nil))
(insn 2678 2677 2679 127 (parallel [
            (set (reg:DI 1 dx [orig:1359 _1273 ] [1359])
                (mult:DI (reg:DI 0 ax [orig:1358 _1272 ] [1358])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":352 349 {*muldi3_1}
     (nil))
(insn 2679 2678 2680 127 (set (reg:SI 0 ax [2297])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":352 86 {*movsi_internal}
     (nil))
(insn 2680 2679 2681 127 (set (reg:DI 0 ax [orig:1360 _1274 ] [1360])
        (sign_extend:DI (reg:SI 0 ax [2297]))) "BNDLYR2.f":352 149 {*extendsidi2_rex64}
     (nil))
(insn 2681 2680 2682 127 (parallel [
            (set (reg:DI 0 ax [orig:1361 _1275 ] [1361])
                (mult:DI (reg:DI 0 ax [orig:1360 _1274 ] [1360])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":352 349 {*muldi3_1}
     (nil))
(insn 2682 2681 2683 127 (parallel [
            (set (reg:DI 1 dx [orig:1362 _1276 ] [1362])
                (plus:DI (reg:DI 1 dx [orig:1359 _1273 ] [1359])
                    (reg:DI 0 ax [orig:1361 _1275 ] [1361])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":352 222 {*adddi_1}
     (nil))
(insn 2683 2682 2684 127 (set (reg:SI 0 ax [2298])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":352 86 {*movsi_internal}
     (nil))
(insn 2684 2683 2685 127 (set (reg:DI 0 ax [orig:1363 _1277 ] [1363])
        (sign_extend:DI (reg:SI 0 ax [2298]))) "BNDLYR2.f":352 149 {*extendsidi2_rex64}
     (nil))
(insn 2685 2684 2686 127 (parallel [
            (set (reg:DI 0 ax [orig:1364 _1278 ] [1364])
                (plus:DI (reg:DI 0 ax [orig:1363 _1277 ] [1363])
                    (reg:DI 1 dx [orig:1362 _1276 ] [1362])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":352 222 {*adddi_1}
     (nil))
(insn 2686 2685 2687 127 (parallel [
            (set (reg:DI 1 dx [orig:1365 _1279 ] [1365])
                (plus:DI (reg:DI 0 ax [orig:1364 _1278 ] [1364])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":352 222 {*adddi_1}
     (nil))
(insn 2687 2686 2688 127 (set (reg:SF 21 xmm0 [orig:1366 _1280 ] [1366])
        (mult:SF (reg:SF 21 xmm0 [orig:1357 _1271 ] [1357])
            (reg:SF 22 xmm1 [orig:1348 _1262 ] [1348]))) "BNDLYR2.f":352 838 {*fop_sf_comm}
     (nil))
(insn 2688 2687 2689 127 (set (reg/f:DI 0 ax [2299])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [3 qbnd+0 S8 A64])) "BNDLYR2.f":352 85 {*movdi_internal}
     (nil))
(insn 2689 2688 2690 127 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:1365 _1279 ] [1365])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [2299])) [1 *qbnd_1541(D) S4 A32])
        (reg:SF 21 xmm0 [orig:1366 _1280 ] [1366])) "BNDLYR2.f":352 131 {*movsf_internal}
     (nil))
;;  succ:       128 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1554

;; basic block 128, loop depth 0, maybe hot
;;  prev block 127, next block 168, flags: (RTL, MODIFIED)
;;  pred:       127 (FALLTHRU)
;;              126
;; bb 128 artificial_defs: { }
;; bb 128 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1554
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 2690 2689 2691 128 94 (nil) [1 uses])
(note 2691 2690 2692 128 [bb 128] NOTE_INSN_BASIC_BLOCK)
(insn 2692 2691 3163 128 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":290 221 {*addsi_1}
     (nil))
(jump_insn 3163 2692 3164 128 (set (pc)
        (label_ref 2693)) "BNDLYR2.f":290 683 {jump}
     (nil)
 -> 2693)
;;  succ:       102 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1554

(barrier 3164 3163 3242)
;; basic block 168, loop depth 0, maybe hot
;;  prev block 128, next block 129, flags: (RTL, MODIFIED)
;;  pred:       102
;; bb 168 artificial_defs: { }
;; bb 168 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1554
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 3242 3164 3241 168 165 (nil) [1 uses])
(note 3241 3242 3243 168 [bb 168] NOTE_INSN_BASIC_BLOCK)
(insn 3243 3241 2696 168 (const_int 0 [0]) "BNDLYR2.f":350 718 {nop}
     (nil))
;;  succ:       129 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1554

;; basic block 129, loop depth 0, maybe hot
;;  prev block 168, next block 167, flags: (RTL, MODIFIED)
;;  pred:       168 [always]  (FALLTHRU)
;; bb 129 artificial_defs: { }
;; bb 129 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1554
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 2696 3243 2697 129 74 (nil) [0 uses])
(note 2697 2696 2698 129 [bb 129] NOTE_INSN_BASIC_BLOCK)
(insn 2698 2697 3165 129 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":289 221 {*addsi_1}
     (nil))
(jump_insn 3165 2698 3166 129 (set (pc)
        (label_ref 2699)) "BNDLYR2.f":289 683 {jump}
     (nil)
 -> 2699)
;;  succ:       100 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1554

(barrier 3166 3165 3239)
;; basic block 167, loop depth 0, maybe hot
;;  prev block 129, next block 130, flags: (RTL, MODIFIED)
;;  pred:       100
;; bb 167 artificial_defs: { }
;; bb 167 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 3239 3166 3238 167 164 (nil) [1 uses])
(note 3238 3239 3240 167 [bb 167] NOTE_INSN_BASIC_BLOCK)
(insn 3240 3238 2702 167 (const_int 0 [0]) "BNDLYR2.f":290 718 {nop}
     (nil))
;;  succ:       130 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 130, loop depth 0, maybe hot
;;  prev block 167, next block 131, flags: (RTL, MODIFIED)
;;  pred:       167 [always]  (FALLTHRU)
;; bb 130 artificial_defs: { }
;; bb 130 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 1558 1559
(code_label 2702 3240 2703 130 73 (nil) [0 uses])
(note 2703 2702 2704 130 [bb 130] NOTE_INSN_BASIC_BLOCK)
(insn 2704 2703 2705 130 (set (reg:SI 1 dx [orig:1558 _1711 ] [1558])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7fd1b2d3cea0 parallel>)
                    (const_int 16 [0x10]))) [2 parallel.jsta_m+0 S4 A128])) "BNDLYR2.f":357 86 {*movsi_internal}
     (nil))
(insn 2705 2704 2706 130 (set (reg:SI 0 ax [orig:1559 _1712 ] [1559])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7fd1b2d3cea0 parallel>)
                    (const_int 20 [0x14]))) [2 parallel.jend_m+0 S4 A32])) "BNDLYR2.f":357 86 {*movsi_internal}
     (nil))
(insn 2706 2705 3001 130 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])
        (reg:SI 1 dx [orig:1558 _1711 ] [1558])) "BNDLYR2.f":357 86 {*movsi_internal}
     (nil))
;;  succ:       131 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1559

;; basic block 131, loop depth 0, maybe hot
;;  prev block 130, next block 132, flags: (RTL, MODIFIED)
;;  pred:       130 (FALLTHRU)
;;              143 [always] 
;; bb 131 artificial_defs: { }
;; bb 131 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1559
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1559
;; lr  def 	 17 [flags] 1560 2300
(code_label 3001 2706 2707 131 107 (nil) [1 uses])
(note 2707 3001 2708 131 [bb 131] NOTE_INSN_BASIC_BLOCK)
(insn 2708 2707 2709 131 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])
            (reg:SI 0 ax [orig:1559 _1712 ] [1559]))) "BNDLYR2.f":357 11 {*cmpsi_1}
     (nil))
(insn 2709 2708 2710 131 (set (reg:QI 1 dx [2300])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "BNDLYR2.f":357 678 {*setcc_qi}
     (nil))
(insn 2710 2709 2711 131 (set (reg:SI 1 dx [orig:1560 _1714 ] [1560])
        (zero_extend:SI (reg:QI 1 dx [2300]))) "BNDLYR2.f":357 140 {*zero_extendqisi2}
     (nil))
(insn 2711 2710 2712 131 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1560 _1714 ] [1560])
            (const_int 0 [0]))) "BNDLYR2.f":357 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 2712 2711 2713 131 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 3248)
            (pc))) "BNDLYR2.f":357 682 {*jcc}
     (nil)
 -> 3248)
;;  succ:       170
;;              132 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1559

;; basic block 132, loop depth 0, maybe hot
;;  prev block 131, next block 133, flags: (RTL, MODIFIED)
;;  pred:       131 (FALLTHRU)
;; bb 132 artificial_defs: { }
;; bb 132 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1559
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 2713 2712 2714 132 [bb 132] NOTE_INSN_BASIC_BLOCK)
(insn 2714 2713 2995 132 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])
        (const_int 2 [0x2])) "BNDLYR2.f":358 86 {*movsi_internal}
     (nil))
;;  succ:       133 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1559

;; basic block 133, loop depth 0, maybe hot
;;  prev block 132, next block 134, flags: (RTL, MODIFIED)
;;  pred:       132 (FALLTHRU)
;;              142 [always] 
;; bb 133 artificial_defs: { }
;; bb 133 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1559
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1561 2301
(code_label 2995 2714 2715 133 106 (nil) [1 uses])
(note 2715 2995 2716 133 [bb 133] NOTE_INSN_BASIC_BLOCK)
(insn 2716 2715 2717 133 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])
            (const_int 118 [0x76]))) "BNDLYR2.f":358 11 {*cmpsi_1}
     (nil))
(insn 2717 2716 2718 133 (set (reg:QI 1 dx [2301])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "BNDLYR2.f":358 678 {*setcc_qi}
     (nil))
(insn 2718 2717 2719 133 (set (reg:SI 1 dx [orig:1561 _1716 ] [1561])
        (zero_extend:SI (reg:QI 1 dx [2301]))) "BNDLYR2.f":358 140 {*zero_extendqisi2}
     (nil))
(insn 2719 2718 2720 133 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1561 _1716 ] [1561])
            (const_int 0 [0]))) "BNDLYR2.f":358 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 2720 2719 2721 133 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 3251)
            (pc))) "BNDLYR2.f":358 682 {*jcc}
     (nil)
 -> 3251)
;;  succ:       171
;;              134 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1559

;; basic block 134, loop depth 0, maybe hot
;;  prev block 133, next block 135, flags: (RTL, MODIFIED)
;;  pred:       133 (FALLTHRU)
;; bb 134 artificial_defs: { }
;; bb 134 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1559
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1367 1368 1369 1370 1371 1372 1373 1374 1375 2302 2303 2304 2305 2306
(note 2721 2720 2722 134 [bb 134] NOTE_INSN_BASIC_BLOCK)
(insn 2722 2721 2723 134 (set (reg:SI 1 dx [2302])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 lbnd+0 S4 A32])) "BNDLYR2.f":359 86 {*movsi_internal}
     (nil))
(insn 2723 2722 2724 134 (set (reg:DI 1 dx [orig:1367 _1281 ] [1367])
        (sign_extend:DI (reg:SI 1 dx [2302]))) "BNDLYR2.f":359 149 {*extendsidi2_rex64}
     (nil))
(insn 2724 2723 2725 134 (parallel [
            (set (reg:DI 2 cx [orig:1368 _1282 ] [1368])
                (mult:DI (reg:DI 1 dx [orig:1367 _1281 ] [1367])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":359 349 {*muldi3_1}
     (nil))
(insn 2725 2724 2726 134 (set (reg:SI 1 dx [2303])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":359 86 {*movsi_internal}
     (nil))
(insn 2726 2725 2727 134 (set (reg:DI 1 dx [orig:1369 _1283 ] [1369])
        (sign_extend:DI (reg:SI 1 dx [2303]))) "BNDLYR2.f":359 149 {*extendsidi2_rex64}
     (nil))
(insn 2727 2726 2728 134 (parallel [
            (set (reg:DI 1 dx [orig:1370 _1284 ] [1370])
                (mult:DI (reg:DI 1 dx [orig:1369 _1283 ] [1369])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":359 349 {*muldi3_1}
     (nil))
(insn 2728 2727 2729 134 (parallel [
            (set (reg:DI 2 cx [orig:1371 _1285 ] [1371])
                (plus:DI (reg:DI 2 cx [orig:1368 _1282 ] [1368])
                    (reg:DI 1 dx [orig:1370 _1284 ] [1370])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":359 222 {*adddi_1}
     (nil))
(insn 2729 2728 2730 134 (set (reg:SI 1 dx [2304])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":359 86 {*movsi_internal}
     (nil))
(insn 2730 2729 2731 134 (set (reg:DI 1 dx [orig:1372 _1286 ] [1372])
        (sign_extend:DI (reg:SI 1 dx [2304]))) "BNDLYR2.f":359 149 {*extendsidi2_rex64}
     (nil))
(insn 2731 2730 2732 134 (parallel [
            (set (reg:DI 1 dx [orig:1373 _1287 ] [1373])
                (plus:DI (reg:DI 1 dx [orig:1372 _1286 ] [1372])
                    (reg:DI 2 cx [orig:1371 _1285 ] [1371])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":359 222 {*adddi_1}
     (nil))
(insn 2732 2731 2733 134 (parallel [
            (set (reg:DI 2 cx [orig:1374 _1288 ] [1374])
                (plus:DI (reg:DI 1 dx [orig:1373 _1287 ] [1373])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":359 222 {*adddi_1}
     (nil))
(insn 2733 2732 2734 134 (set (reg/f:DI 1 dx [2305])
        (symbol_ref:DI ("pvsum.4212") [flags 0x202]  <var_decl 0x7fd1b2d4d630 pvsum>)) "BNDLYR2.f":359 85 {*movdi_internal}
     (nil))
(insn 2734 2733 2735 134 (set (reg:SF 21 xmm0 [orig:1375 _1289 ] [1375])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:1374 _1288 ] [1374])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [2305])) [1 pvsum S4 A32])) "BNDLYR2.f":359 131 {*movsf_internal}
     (nil))
(insn 2735 2734 2736 134 (set (reg:SF 22 xmm1 [2306])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0  S4 A32])) "BNDLYR2.f":359 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 2736 2735 2737 134 (set (reg:CCFP 17 flags)
        (unspec:CCFP [
                (compare:CCFP (reg:SF 21 xmm0 [orig:1375 _1289 ] [1375])
                    (reg:SF 22 xmm1 [2306]))
            ] UNSPEC_NOTRAP)) "BNDLYR2.f":359 54 {*cmpiusf}
     (nil))
(jump_insn 2737 2736 3064 134 (set (pc)
        (if_then_else (unordered (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref 2992)
            (pc))) "BNDLYR2.f":359 682 {*jcc}
     (nil)
 -> 2992)
;;  succ:       142
;;              135 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1375 1559

;; basic block 135, loop depth 0, maybe hot
;;  prev block 134, next block 136, flags: (RTL, MODIFIED)
;;  pred:       134 (FALLTHRU)
;; bb 135 artificial_defs: { }
;; bb 135 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1375 1559
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1375
;; lr  def 	 17 [flags] 2307
(note 3064 2737 2738 135 [bb 135] NOTE_INSN_BASIC_BLOCK)
(insn 2738 3064 2739 135 (set (reg:SF 22 xmm1 [2307])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0  S4 A32])) "BNDLYR2.f":359 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 2739 2738 2740 135 (set (reg:CCFP 17 flags)
        (unspec:CCFP [
                (compare:CCFP (reg:SF 21 xmm0 [orig:1375 _1289 ] [1375])
                    (reg:SF 22 xmm1 [2307]))
            ] UNSPEC_NOTRAP)) "BNDLYR2.f":359 54 {*cmpiusf}
     (nil))
(jump_insn 2740 2739 2744 135 (set (pc)
        (if_then_else (ltgt (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 2992)
            (pc))) "BNDLYR2.f":359 682 {*jcc}
     (nil)
 -> 2992)
;;  succ:       136 (FALLTHRU)
;;              142
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1559

;; basic block 136, loop depth 0, maybe hot
;;  prev block 135, next block 137, flags: (RTL, MODIFIED)
;;  pred:       135 (FALLTHRU)
;; bb 136 artificial_defs: { }
;; bb 136 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1559
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1376 1377 1378 1379 1380 1381 2308 2309 2310 2313 2314 2315 2316 2319 2320
(note 2744 2740 2745 136 [bb 136] NOTE_INSN_BASIC_BLOCK)
(insn 2745 2744 2746 136 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [2 lv+0 S4 A32])
        (const_int 38 [0x26])) "BNDLYR2.f":360 86 {*movsi_internal}
     (nil))
(insn 2746 2745 2747 136 (set (reg:SF 21 xmm0 [2308])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC20") [flags 0x2]) [0  S4 A32])) "BNDLYR2.f":361 131 {*movsf_internal}
     (nil))
(insn 2747 2746 2748 136 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [1 pminv+0 S4 A32])
        (reg:SF 21 xmm0 [2308])) "BNDLYR2.f":361 131 {*movsf_internal}
     (nil))
(insn 2748 2747 2749 136 (set (reg:SI 1 dx [2309])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":362 86 {*movsi_internal}
     (nil))
(insn 2749 2748 2750 136 (set (reg:DI 1 dx [orig:1376 _1290 ] [1376])
        (sign_extend:DI (reg:SI 1 dx [2309]))) "BNDLYR2.f":362 149 {*extendsidi2_rex64}
     (nil))
(insn 2750 2749 2751 136 (parallel [
            (set (reg:DI 1 dx [orig:1377 _1291 ] [1377])
                (plus:DI (reg:DI 1 dx [orig:1376 _1290 ] [1376])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":362 222 {*adddi_1}
     (nil))
(insn 2751 2750 2752 136 (parallel [
            (set (reg:DI 1 dx [2310])
                (plus:DI (reg:DI 1 dx [orig:1377 _1291 ] [1377])
                    (const_int 498 [0x1f2])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":362 222 {*adddi_1}
     (nil))
(insn 2752 2751 2756 136 (set (reg:SI 2 cx [orig:1378 _1292 ] [1378])
        (mem:SI (plus:DI (mult:DI (reg:DI 1 dx [2310])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("indx_") [flags 0x2]  <var_decl 0x7fd1b2d34a20 indx>)) [2 indx.ive S4 A32])) "BNDLYR2.f":362 86 {*movsi_internal}
     (nil))
(insn 2756 2752 2757 136 (set (reg:SI 1 dx [2314])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":362 86 {*movsi_internal}
     (nil))
(insn 2757 2756 2758 136 (parallel [
            (set (reg:SI 1 dx [2313])
                (plus:SI (reg:SI 1 dx [2314])
                    (reg:SI 2 cx [orig:1378 _1292 ] [1378])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":362 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (reg:SI 2 cx [orig:1378 _1292 ] [1378])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32]))
        (nil)))
(insn 2758 2757 2759 136 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -100 [0xffffffffffffff9c])) [2 ie+0 S4 A32])
        (reg:SI 1 dx [2313])) "BNDLYR2.f":362 86 {*movsi_internal}
     (nil))
(insn 2759 2758 2760 136 (set (reg:SI 1 dx [2315])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":363 86 {*movsi_internal}
     (nil))
(insn 2760 2759 2761 136 (set (reg:DI 1 dx [orig:1379 _1293 ] [1379])
        (sign_extend:DI (reg:SI 1 dx [2315]))) "BNDLYR2.f":363 149 {*extendsidi2_rex64}
     (nil))
(insn 2761 2760 2762 136 (parallel [
            (set (reg:DI 1 dx [orig:1380 _1294 ] [1380])
                (plus:DI (reg:DI 1 dx [orig:1379 _1293 ] [1379])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":363 222 {*adddi_1}
     (nil))
(insn 2762 2761 2763 136 (parallel [
            (set (reg:DI 1 dx [2316])
                (plus:DI (reg:DI 1 dx [orig:1380 _1294 ] [1380])
                    (const_int 747 [0x2eb])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":363 222 {*adddi_1}
     (nil))
(insn 2763 2762 2767 136 (set (reg:SI 2 cx [orig:1381 _1295 ] [1381])
        (mem:SI (plus:DI (mult:DI (reg:DI 1 dx [2316])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("indx_") [flags 0x2]  <var_decl 0x7fd1b2d34a20 indx>)) [2 indx.ivw S4 A32])) "BNDLYR2.f":363 86 {*movsi_internal}
     (nil))
(insn 2767 2763 2768 136 (set (reg:SI 1 dx [2320])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":363 86 {*movsi_internal}
     (nil))
(insn 2768 2767 2769 136 (parallel [
            (set (reg:SI 1 dx [2319])
                (plus:SI (reg:SI 1 dx [2320])
                    (reg:SI 2 cx [orig:1381 _1295 ] [1381])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":363 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (reg:SI 2 cx [orig:1381 _1295 ] [1381])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [2 i+0 S4 A32]))
        (nil)))
(insn 2769 2768 2770 136 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [2 iw+0 S4 A32])
        (reg:SI 1 dx [2319])) "BNDLYR2.f":363 86 {*movsi_internal}
     (nil))
(insn 2770 2769 2933 136 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [2 ll+0 S4 A32])
        (const_int 1 [0x1])) "BNDLYR2.f":367 86 {*movsi_internal}
     (nil))
;;  succ:       137 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1559

;; basic block 137, loop depth 0, maybe hot
;;  prev block 136, next block 138, flags: (RTL, MODIFIED)
;;  pred:       136 (FALLTHRU)
;;              140 [always] 
;; bb 137 artificial_defs: { }
;; bb 137 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1559
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1562 2321
(code_label 2933 2770 2771 137 105 (nil) [1 uses])
(note 2771 2933 2772 137 [bb 137] NOTE_INSN_BASIC_BLOCK)
(insn 2772 2771 2773 137 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -44 [0xffffffffffffffd4])) [2 ll+0 S4 A32])
            (const_int 38 [0x26]))) "BNDLYR2.f":367 11 {*cmpsi_1}
     (nil))
(insn 2773 2772 2774 137 (set (reg:QI 1 dx [2321])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "BNDLYR2.f":367 678 {*setcc_qi}
     (nil))
(insn 2774 2773 2775 137 (set (reg:SI 1 dx [orig:1562 _1722 ] [1562])
        (zero_extend:SI (reg:QI 1 dx [2321]))) "BNDLYR2.f":367 140 {*zero_extendqisi2}
     (nil))
(insn 2775 2774 2776 137 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1562 _1722 ] [1562])
            (const_int 0 [0]))) "BNDLYR2.f":367 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 2776 2775 2777 137 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 3254)
            (pc))) "BNDLYR2.f":367 682 {*jcc}
     (nil)
 -> 3254)
;;  succ:       172
;;              138 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1559

;; basic block 138, loop depth 0, maybe hot
;;  prev block 137, next block 139, flags: (RTL, MODIFIED)
;;  pred:       137 (FALLTHRU)
;; bb 138 artificial_defs: { }
;; bb 138 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1559
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1382 1383 1384 1385 1386 1387 1388 1389 1390 1391 1392 1393 1394 1395 1396 1397 1398 1399 1400 1401 1402 1403 1404 1405 1406 1407 1408 1409 1410 1411 1412 1413 1414 1415 1416 1417 1418 1419 1420 1421 1422 1423 1424 1425 1426 1427 1428 1429 1430 1431 1432 1433 1434 1435 1436 1437 1438 1439 1440 1441 1442 1443 1444 1445 1446 1447 1448 1449 1450 1451 1452 1453 1454 1455 1456 1457 1458 1459 1460 1461 1462 1463 1464 1465 1466 1467 1468 1469 1470 1471 1472 1473 1474 1475 1476 1477 1478 1479 2322 2323 2324 2325 2326 2327 2328 2329 2330 2331 2332 2333 2334 2335 2336 2337 2338 2339 2340 2341 2342 2343 2344 2345 2346 2347 2348 2349 2350 2351 2352 2353 2354 2355 2356 2357 2358 2359 2360 2361 2362 2363
(note 2777 2776 2778 138 [bb 138] NOTE_INSN_BASIC_BLOCK)
(insn 2778 2777 2779 138 (set (reg:SI 1 dx [2322])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [2 ll+0 S4 A32])) "BNDLYR2.f":371 86 {*movsi_internal}
     (nil))
(insn 2779 2778 2780 138 (set (reg:DI 1 dx [orig:1382 _1296 ] [1382])
        (sign_extend:DI (reg:SI 1 dx [2322]))) "BNDLYR2.f":371 149 {*extendsidi2_rex64}
     (nil))
(insn 2780 2779 2781 138 (parallel [
            (set (reg:DI 2 cx [orig:1383 _1297 ] [1383])
                (mult:DI (reg:DI 1 dx [orig:1382 _1296 ] [1382])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":371 349 {*muldi3_1}
     (nil))
(insn 2781 2780 2782 138 (set (reg:SI 1 dx [2323])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":371 86 {*movsi_internal}
     (nil))
(insn 2782 2781 2783 138 (set (reg:DI 1 dx [orig:1384 _1298 ] [1384])
        (sign_extend:DI (reg:SI 1 dx [2323]))) "BNDLYR2.f":371 149 {*extendsidi2_rex64}
     (nil))
(insn 2783 2782 2784 138 (parallel [
            (set (reg:DI 1 dx [orig:1385 _1299 ] [1385])
                (mult:DI (reg:DI 1 dx [orig:1384 _1298 ] [1384])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":371 349 {*muldi3_1}
     (nil))
(insn 2784 2783 2785 138 (parallel [
            (set (reg:DI 2 cx [orig:1386 _1300 ] [1386])
                (plus:DI (reg:DI 2 cx [orig:1383 _1297 ] [1383])
                    (reg:DI 1 dx [orig:1385 _1299 ] [1385])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":371 222 {*adddi_1}
     (nil))
(insn 2785 2784 2786 138 (set (reg:SI 1 dx [2324])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [2 iw+0 S4 A32])) "BNDLYR2.f":371 86 {*movsi_internal}
     (nil))
(insn 2786 2785 2787 138 (set (reg:DI 1 dx [orig:1387 _1301 ] [1387])
        (sign_extend:DI (reg:SI 1 dx [2324]))) "BNDLYR2.f":371 149 {*extendsidi2_rex64}
     (nil))
(insn 2787 2786 2788 138 (parallel [
            (set (reg:DI 1 dx [orig:1388 _1302 ] [1388])
                (plus:DI (reg:DI 1 dx [orig:1387 _1301 ] [1387])
                    (reg:DI 2 cx [orig:1386 _1300 ] [1386])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":371 222 {*adddi_1}
     (nil))
(insn 2788 2787 2789 138 (parallel [
            (set (reg:DI 2 cx [orig:1389 _1303 ] [1389])
                (plus:DI (reg:DI 1 dx [orig:1388 _1302 ] [1388])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":371 222 {*adddi_1}
     (nil))
(insn 2789 2788 2790 138 (set (reg/f:DI 1 dx [2325])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7fd1b2d2cc60 extra>)) "BNDLYR2.f":371 85 {*movdi_internal}
     (nil))
(insn 2790 2789 2791 138 (set (reg:SF 22 xmm1 [orig:1390 _1304 ] [1390])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:1389 _1303 ] [1389])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [2325])) [1 extra.pint S4 A32])) "BNDLYR2.f":371 131 {*movsf_internal}
     (nil))
(insn 2791 2790 2792 138 (set (reg:SI 1 dx [2326])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [2 ll+0 S4 A32])) "BNDLYR2.f":371 86 {*movsi_internal}
     (nil))
(insn 2792 2791 2793 138 (set (reg:DI 1 dx [orig:1391 _1305 ] [1391])
        (sign_extend:DI (reg:SI 1 dx [2326]))) "BNDLYR2.f":371 149 {*extendsidi2_rex64}
     (nil))
(insn 2793 2792 2794 138 (parallel [
            (set (reg:DI 2 cx [orig:1392 _1306 ] [1392])
                (mult:DI (reg:DI 1 dx [orig:1391 _1305 ] [1391])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":371 349 {*muldi3_1}
     (nil))
(insn 2794 2793 2795 138 (set (reg:SI 1 dx [2327])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":371 86 {*movsi_internal}
     (nil))
(insn 2795 2794 2796 138 (set (reg:DI 1 dx [orig:1393 _1307 ] [1393])
        (sign_extend:DI (reg:SI 1 dx [2327]))) "BNDLYR2.f":371 149 {*extendsidi2_rex64}
     (nil))
(insn 2796 2795 2797 138 (parallel [
            (set (reg:DI 1 dx [orig:1394 _1308 ] [1394])
                (mult:DI (reg:DI 1 dx [orig:1393 _1307 ] [1393])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":371 349 {*muldi3_1}
     (nil))
(insn 2797 2796 2798 138 (parallel [
            (set (reg:DI 2 cx [orig:1395 _1309 ] [1395])
                (plus:DI (reg:DI 2 cx [orig:1392 _1306 ] [1392])
                    (reg:DI 1 dx [orig:1394 _1308 ] [1394])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":371 222 {*adddi_1}
     (nil))
(insn 2798 2797 2799 138 (set (reg:SI 1 dx [2328])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -100 [0xffffffffffffff9c])) [2 ie+0 S4 A32])) "BNDLYR2.f":371 86 {*movsi_internal}
     (nil))
(insn 2799 2798 2800 138 (set (reg:DI 1 dx [orig:1396 _1310 ] [1396])
        (sign_extend:DI (reg:SI 1 dx [2328]))) "BNDLYR2.f":371 149 {*extendsidi2_rex64}
     (nil))
(insn 2800 2799 2801 138 (parallel [
            (set (reg:DI 1 dx [orig:1397 _1311 ] [1397])
                (plus:DI (reg:DI 1 dx [orig:1396 _1310 ] [1396])
                    (reg:DI 2 cx [orig:1395 _1309 ] [1395])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":371 222 {*adddi_1}
     (nil))
(insn 2801 2800 2802 138 (parallel [
            (set (reg:DI 2 cx [orig:1398 _1312 ] [1398])
                (plus:DI (reg:DI 1 dx [orig:1397 _1311 ] [1397])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":371 222 {*adddi_1}
     (nil))
(insn 2802 2801 2803 138 (set (reg/f:DI 1 dx [2329])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7fd1b2d2cc60 extra>)) "BNDLYR2.f":371 85 {*movdi_internal}
     (nil))
(insn 2803 2802 2804 138 (set (reg:SF 21 xmm0 [orig:1399 _1313 ] [1399])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:1398 _1312 ] [1398])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [2329])) [1 extra.pint S4 A32])) "BNDLYR2.f":371 131 {*movsf_internal}
     (nil))
(insn 2804 2803 2805 138 (set (reg:SF 22 xmm1 [orig:1400 _1314 ] [1400])
        (plus:SF (reg:SF 22 xmm1 [orig:1390 _1304 ] [1390])
            (reg:SF 21 xmm0 [orig:1399 _1313 ] [1399]))) "BNDLYR2.f":371 838 {*fop_sf_comm}
     (nil))
(insn 2805 2804 2806 138 (set (reg:SI 1 dx [2330])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [2 ll+0 S4 A32])) "BNDLYR2.f":371 86 {*movsi_internal}
     (nil))
(insn 2806 2805 2807 138 (set (reg:DI 1 dx [orig:1401 _1315 ] [1401])
        (sign_extend:DI (reg:SI 1 dx [2330]))) "BNDLYR2.f":371 149 {*extendsidi2_rex64}
     (nil))
(insn 2807 2806 2808 138 (parallel [
            (set (reg:DI 2 cx [orig:1402 _1316 ] [1402])
                (mult:DI (reg:DI 1 dx [orig:1401 _1315 ] [1401])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":371 349 {*muldi3_1}
     (nil))
(insn 2808 2807 2809 138 (set (reg:SI 1 dx [2331])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":371 86 {*movsi_internal}
     (nil))
(insn 2809 2808 2810 138 (parallel [
            (set (reg:SI 1 dx [orig:1403 _1317 ] [1403])
                (plus:SI (reg:SI 1 dx [2331])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":371 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [2 j+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 2810 2809 2811 138 (set (reg:DI 1 dx [orig:1404 _1318 ] [1404])
        (sign_extend:DI (reg:SI 1 dx [orig:1403 _1317 ] [1403]))) "BNDLYR2.f":371 149 {*extendsidi2_rex64}
     (nil))
(insn 2811 2810 2812 138 (parallel [
            (set (reg:DI 1 dx [orig:1405 _1319 ] [1405])
                (mult:DI (reg:DI 1 dx [orig:1404 _1318 ] [1404])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":371 349 {*muldi3_1}
     (nil))
(insn 2812 2811 2813 138 (parallel [
            (set (reg:DI 2 cx [orig:1406 _1320 ] [1406])
                (plus:DI (reg:DI 2 cx [orig:1402 _1316 ] [1402])
                    (reg:DI 1 dx [orig:1405 _1319 ] [1405])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":371 222 {*adddi_1}
     (nil))
(insn 2813 2812 2814 138 (set (reg:SI 1 dx [2332])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":371 86 {*movsi_internal}
     (nil))
(insn 2814 2813 2815 138 (set (reg:DI 1 dx [orig:1407 _1321 ] [1407])
        (sign_extend:DI (reg:SI 1 dx [2332]))) "BNDLYR2.f":371 149 {*extendsidi2_rex64}
     (nil))
(insn 2815 2814 2816 138 (parallel [
            (set (reg:DI 1 dx [orig:1408 _1322 ] [1408])
                (plus:DI (reg:DI 1 dx [orig:1407 _1321 ] [1407])
                    (reg:DI 2 cx [orig:1406 _1320 ] [1406])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":371 222 {*adddi_1}
     (nil))
(insn 2816 2815 2817 138 (parallel [
            (set (reg:DI 2 cx [orig:1409 _1323 ] [1409])
                (plus:DI (reg:DI 1 dx [orig:1408 _1322 ] [1408])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":371 222 {*adddi_1}
     (nil))
(insn 2817 2816 2818 138 (set (reg/f:DI 1 dx [2333])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7fd1b2d2cc60 extra>)) "BNDLYR2.f":371 85 {*movdi_internal}
     (nil))
(insn 2818 2817 2819 138 (set (reg:SF 21 xmm0 [orig:1410 _1324 ] [1410])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:1409 _1323 ] [1409])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [2333])) [1 extra.pint S4 A32])) "BNDLYR2.f":371 131 {*movsf_internal}
     (nil))
(insn 2819 2818 2820 138 (set (reg:SF 22 xmm1 [orig:1411 _1325 ] [1411])
        (plus:SF (reg:SF 22 xmm1 [orig:1400 _1314 ] [1400])
            (reg:SF 21 xmm0 [orig:1410 _1324 ] [1410]))) "BNDLYR2.f":371 838 {*fop_sf_comm}
     (nil))
(insn 2820 2819 2821 138 (set (reg:SI 1 dx [2334])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [2 ll+0 S4 A32])) "BNDLYR2.f":371 86 {*movsi_internal}
     (nil))
(insn 2821 2820 2822 138 (set (reg:DI 1 dx [orig:1412 _1326 ] [1412])
        (sign_extend:DI (reg:SI 1 dx [2334]))) "BNDLYR2.f":371 149 {*extendsidi2_rex64}
     (nil))
(insn 2822 2821 2823 138 (parallel [
            (set (reg:DI 2 cx [orig:1413 _1327 ] [1413])
                (mult:DI (reg:DI 1 dx [orig:1412 _1326 ] [1412])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":371 349 {*muldi3_1}
     (nil))
(insn 2823 2822 2824 138 (set (reg:SI 1 dx [2335])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":371 86 {*movsi_internal}
     (nil))
(insn 2824 2823 2825 138 (parallel [
            (set (reg:SI 1 dx [orig:1414 _1328 ] [1414])
                (plus:SI (reg:SI 1 dx [2335])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":371 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [2 j+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 2825 2824 2826 138 (set (reg:DI 1 dx [orig:1415 _1329 ] [1415])
        (sign_extend:DI (reg:SI 1 dx [orig:1414 _1328 ] [1414]))) "BNDLYR2.f":371 149 {*extendsidi2_rex64}
     (nil))
(insn 2826 2825 2827 138 (parallel [
            (set (reg:DI 1 dx [orig:1416 _1330 ] [1416])
                (mult:DI (reg:DI 1 dx [orig:1415 _1329 ] [1415])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":371 349 {*muldi3_1}
     (nil))
(insn 2827 2826 2828 138 (parallel [
            (set (reg:DI 2 cx [orig:1417 _1331 ] [1417])
                (plus:DI (reg:DI 2 cx [orig:1413 _1327 ] [1413])
                    (reg:DI 1 dx [orig:1416 _1330 ] [1416])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":371 222 {*adddi_1}
     (nil))
(insn 2828 2827 2829 138 (set (reg:SI 1 dx [2336])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":371 86 {*movsi_internal}
     (nil))
(insn 2829 2828 2830 138 (set (reg:DI 1 dx [orig:1418 _1332 ] [1418])
        (sign_extend:DI (reg:SI 1 dx [2336]))) "BNDLYR2.f":371 149 {*extendsidi2_rex64}
     (nil))
(insn 2830 2829 2831 138 (parallel [
            (set (reg:DI 1 dx [orig:1419 _1333 ] [1419])
                (plus:DI (reg:DI 1 dx [orig:1418 _1332 ] [1418])
                    (reg:DI 2 cx [orig:1417 _1331 ] [1417])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":371 222 {*adddi_1}
     (nil))
(insn 2831 2830 2832 138 (parallel [
            (set (reg:DI 2 cx [orig:1420 _1334 ] [1420])
                (plus:DI (reg:DI 1 dx [orig:1419 _1333 ] [1419])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":371 222 {*adddi_1}
     (nil))
(insn 2832 2831 2833 138 (set (reg/f:DI 1 dx [2337])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7fd1b2d2cc60 extra>)) "BNDLYR2.f":371 85 {*movdi_internal}
     (nil))
(insn 2833 2832 2834 138 (set (reg:SF 21 xmm0 [orig:1421 _1335 ] [1421])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:1420 _1334 ] [1420])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [2337])) [1 extra.pint S4 A32])) "BNDLYR2.f":371 131 {*movsf_internal}
     (nil))
(insn 2834 2833 2835 138 (set (reg:SF 22 xmm1 [orig:1422 _1336 ] [1422])
        (plus:SF (reg:SF 22 xmm1 [orig:1411 _1325 ] [1411])
            (reg:SF 21 xmm0 [orig:1421 _1335 ] [1421]))) "BNDLYR2.f":371 838 {*fop_sf_comm}
     (nil))
(insn 2835 2834 2836 138 (set (reg:SI 1 dx [2338])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [2 ll+0 S4 A32])) "BNDLYR2.f":371 86 {*movsi_internal}
     (nil))
(insn 2836 2835 2837 138 (parallel [
            (set (reg:SI 1 dx [orig:1423 _1337 ] [1423])
                (plus:SI (reg:SI 1 dx [2338])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":371 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -28 [0xffffffffffffffe4])) [2 ll+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 2837 2836 2838 138 (set (reg:DI 1 dx [orig:1424 _1338 ] [1424])
        (sign_extend:DI (reg:SI 1 dx [orig:1423 _1337 ] [1423]))) "BNDLYR2.f":371 149 {*extendsidi2_rex64}
     (nil))
(insn 2838 2837 2839 138 (parallel [
            (set (reg:DI 2 cx [orig:1425 _1339 ] [1425])
                (mult:DI (reg:DI 1 dx [orig:1424 _1338 ] [1424])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":371 349 {*muldi3_1}
     (nil))
(insn 2839 2838 2840 138 (set (reg:SI 1 dx [2339])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":371 86 {*movsi_internal}
     (nil))
(insn 2840 2839 2841 138 (set (reg:DI 1 dx [orig:1426 _1340 ] [1426])
        (sign_extend:DI (reg:SI 1 dx [2339]))) "BNDLYR2.f":371 149 {*extendsidi2_rex64}
     (nil))
(insn 2841 2840 2842 138 (parallel [
            (set (reg:DI 1 dx [orig:1427 _1341 ] [1427])
                (mult:DI (reg:DI 1 dx [orig:1426 _1340 ] [1426])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":371 349 {*muldi3_1}
     (nil))
(insn 2842 2841 2843 138 (parallel [
            (set (reg:DI 2 cx [orig:1428 _1342 ] [1428])
                (plus:DI (reg:DI 2 cx [orig:1425 _1339 ] [1425])
                    (reg:DI 1 dx [orig:1427 _1341 ] [1427])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":371 222 {*adddi_1}
     (nil))
(insn 2843 2842 2844 138 (set (reg:SI 1 dx [2340])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [2 iw+0 S4 A32])) "BNDLYR2.f":371 86 {*movsi_internal}
     (nil))
(insn 2844 2843 2845 138 (set (reg:DI 1 dx [orig:1429 _1343 ] [1429])
        (sign_extend:DI (reg:SI 1 dx [2340]))) "BNDLYR2.f":371 149 {*extendsidi2_rex64}
     (nil))
(insn 2845 2844 2846 138 (parallel [
            (set (reg:DI 1 dx [orig:1430 _1344 ] [1430])
                (plus:DI (reg:DI 1 dx [orig:1429 _1343 ] [1429])
                    (reg:DI 2 cx [orig:1428 _1342 ] [1428])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":371 222 {*adddi_1}
     (nil))
(insn 2846 2845 2847 138 (parallel [
            (set (reg:DI 2 cx [orig:1431 _1345 ] [1431])
                (plus:DI (reg:DI 1 dx [orig:1430 _1344 ] [1430])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":371 222 {*adddi_1}
     (nil))
(insn 2847 2846 2848 138 (set (reg/f:DI 1 dx [2341])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7fd1b2d2cc60 extra>)) "BNDLYR2.f":371 85 {*movdi_internal}
     (nil))
(insn 2848 2847 2849 138 (set (reg:SF 21 xmm0 [orig:1432 _1346 ] [1432])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:1431 _1345 ] [1431])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [2341])) [1 extra.pint S4 A32])) "BNDLYR2.f":371 131 {*movsf_internal}
     (nil))
(insn 2849 2848 2850 138 (set (reg:SF 22 xmm1 [orig:1433 _1347 ] [1433])
        (plus:SF (reg:SF 22 xmm1 [orig:1422 _1336 ] [1422])
            (reg:SF 21 xmm0 [orig:1432 _1346 ] [1432]))) "BNDLYR2.f":371 838 {*fop_sf_comm}
     (nil))
(insn 2850 2849 2851 138 (set (reg:SI 1 dx [2342])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [2 ll+0 S4 A32])) "BNDLYR2.f":371 86 {*movsi_internal}
     (nil))
(insn 2851 2850 2852 138 (parallel [
            (set (reg:SI 1 dx [orig:1434 _1348 ] [1434])
                (plus:SI (reg:SI 1 dx [2342])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":371 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -28 [0xffffffffffffffe4])) [2 ll+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 2852 2851 2853 138 (set (reg:DI 1 dx [orig:1435 _1349 ] [1435])
        (sign_extend:DI (reg:SI 1 dx [orig:1434 _1348 ] [1434]))) "BNDLYR2.f":371 149 {*extendsidi2_rex64}
     (nil))
(insn 2853 2852 2854 138 (parallel [
            (set (reg:DI 2 cx [orig:1436 _1350 ] [1436])
                (mult:DI (reg:DI 1 dx [orig:1435 _1349 ] [1435])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":371 349 {*muldi3_1}
     (nil))
(insn 2854 2853 2855 138 (set (reg:SI 1 dx [2343])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":371 86 {*movsi_internal}
     (nil))
(insn 2855 2854 2856 138 (set (reg:DI 1 dx [orig:1437 _1351 ] [1437])
        (sign_extend:DI (reg:SI 1 dx [2343]))) "BNDLYR2.f":371 149 {*extendsidi2_rex64}
     (nil))
(insn 2856 2855 2857 138 (parallel [
            (set (reg:DI 1 dx [orig:1438 _1352 ] [1438])
                (mult:DI (reg:DI 1 dx [orig:1437 _1351 ] [1437])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":371 349 {*muldi3_1}
     (nil))
(insn 2857 2856 2858 138 (parallel [
            (set (reg:DI 2 cx [orig:1439 _1353 ] [1439])
                (plus:DI (reg:DI 2 cx [orig:1436 _1350 ] [1436])
                    (reg:DI 1 dx [orig:1438 _1352 ] [1438])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":371 222 {*adddi_1}
     (nil))
(insn 2858 2857 2859 138 (set (reg:SI 1 dx [2344])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -100 [0xffffffffffffff9c])) [2 ie+0 S4 A32])) "BNDLYR2.f":371 86 {*movsi_internal}
     (nil))
(insn 2859 2858 2860 138 (set (reg:DI 1 dx [orig:1440 _1354 ] [1440])
        (sign_extend:DI (reg:SI 1 dx [2344]))) "BNDLYR2.f":371 149 {*extendsidi2_rex64}
     (nil))
(insn 2860 2859 2861 138 (parallel [
            (set (reg:DI 1 dx [orig:1441 _1355 ] [1441])
                (plus:DI (reg:DI 1 dx [orig:1440 _1354 ] [1440])
                    (reg:DI 2 cx [orig:1439 _1353 ] [1439])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":371 222 {*adddi_1}
     (nil))
(insn 2861 2860 2862 138 (parallel [
            (set (reg:DI 2 cx [orig:1442 _1356 ] [1442])
                (plus:DI (reg:DI 1 dx [orig:1441 _1355 ] [1441])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":371 222 {*adddi_1}
     (nil))
(insn 2862 2861 2863 138 (set (reg/f:DI 1 dx [2345])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7fd1b2d2cc60 extra>)) "BNDLYR2.f":371 85 {*movdi_internal}
     (nil))
(insn 2863 2862 2864 138 (set (reg:SF 21 xmm0 [orig:1443 _1357 ] [1443])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:1442 _1356 ] [1442])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [2345])) [1 extra.pint S4 A32])) "BNDLYR2.f":371 131 {*movsf_internal}
     (nil))
(insn 2864 2863 2865 138 (set (reg:SF 22 xmm1 [orig:1444 _1358 ] [1444])
        (plus:SF (reg:SF 22 xmm1 [orig:1433 _1347 ] [1433])
            (reg:SF 21 xmm0 [orig:1443 _1357 ] [1443]))) "BNDLYR2.f":371 838 {*fop_sf_comm}
     (nil))
(insn 2865 2864 2866 138 (set (reg:SI 1 dx [2346])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [2 ll+0 S4 A32])) "BNDLYR2.f":371 86 {*movsi_internal}
     (nil))
(insn 2866 2865 2867 138 (parallel [
            (set (reg:SI 1 dx [orig:1445 _1359 ] [1445])
                (plus:SI (reg:SI 1 dx [2346])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":371 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -28 [0xffffffffffffffe4])) [2 ll+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 2867 2866 2868 138 (set (reg:DI 1 dx [orig:1446 _1360 ] [1446])
        (sign_extend:DI (reg:SI 1 dx [orig:1445 _1359 ] [1445]))) "BNDLYR2.f":371 149 {*extendsidi2_rex64}
     (nil))
(insn 2868 2867 2869 138 (parallel [
            (set (reg:DI 2 cx [orig:1447 _1361 ] [1447])
                (mult:DI (reg:DI 1 dx [orig:1446 _1360 ] [1446])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":371 349 {*muldi3_1}
     (nil))
(insn 2869 2868 2870 138 (set (reg:SI 1 dx [2347])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":371 86 {*movsi_internal}
     (nil))
(insn 2870 2869 2871 138 (parallel [
            (set (reg:SI 1 dx [orig:1448 _1362 ] [1448])
                (plus:SI (reg:SI 1 dx [2347])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":371 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [2 j+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 2871 2870 2872 138 (set (reg:DI 1 dx [orig:1449 _1363 ] [1449])
        (sign_extend:DI (reg:SI 1 dx [orig:1448 _1362 ] [1448]))) "BNDLYR2.f":371 149 {*extendsidi2_rex64}
     (nil))
(insn 2872 2871 2873 138 (parallel [
            (set (reg:DI 1 dx [orig:1450 _1364 ] [1450])
                (mult:DI (reg:DI 1 dx [orig:1449 _1363 ] [1449])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":371 349 {*muldi3_1}
     (nil))
(insn 2873 2872 2874 138 (parallel [
            (set (reg:DI 2 cx [orig:1451 _1365 ] [1451])
                (plus:DI (reg:DI 2 cx [orig:1447 _1361 ] [1447])
                    (reg:DI 1 dx [orig:1450 _1364 ] [1450])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":371 222 {*adddi_1}
     (nil))
(insn 2874 2873 2875 138 (set (reg:SI 1 dx [2348])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":371 86 {*movsi_internal}
     (nil))
(insn 2875 2874 2876 138 (set (reg:DI 1 dx [orig:1452 _1366 ] [1452])
        (sign_extend:DI (reg:SI 1 dx [2348]))) "BNDLYR2.f":371 149 {*extendsidi2_rex64}
     (nil))
(insn 2876 2875 2877 138 (parallel [
            (set (reg:DI 1 dx [orig:1453 _1367 ] [1453])
                (plus:DI (reg:DI 1 dx [orig:1452 _1366 ] [1452])
                    (reg:DI 2 cx [orig:1451 _1365 ] [1451])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":371 222 {*adddi_1}
     (nil))
(insn 2877 2876 2878 138 (parallel [
            (set (reg:DI 2 cx [orig:1454 _1368 ] [1454])
                (plus:DI (reg:DI 1 dx [orig:1453 _1367 ] [1453])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":371 222 {*adddi_1}
     (nil))
(insn 2878 2877 2879 138 (set (reg/f:DI 1 dx [2349])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7fd1b2d2cc60 extra>)) "BNDLYR2.f":371 85 {*movdi_internal}
     (nil))
(insn 2879 2878 2880 138 (set (reg:SF 21 xmm0 [orig:1455 _1369 ] [1455])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:1454 _1368 ] [1454])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [2349])) [1 extra.pint S4 A32])) "BNDLYR2.f":371 131 {*movsf_internal}
     (nil))
(insn 2880 2879 2881 138 (set (reg:SF 22 xmm1 [orig:1456 _1370 ] [1456])
        (plus:SF (reg:SF 22 xmm1 [orig:1444 _1358 ] [1444])
            (reg:SF 21 xmm0 [orig:1455 _1369 ] [1455]))) "BNDLYR2.f":371 838 {*fop_sf_comm}
     (nil))
(insn 2881 2880 2882 138 (set (reg:SI 1 dx [2350])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [2 ll+0 S4 A32])) "BNDLYR2.f":371 86 {*movsi_internal}
     (nil))
(insn 2882 2881 2883 138 (parallel [
            (set (reg:SI 1 dx [orig:1457 _1371 ] [1457])
                (plus:SI (reg:SI 1 dx [2350])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":371 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -28 [0xffffffffffffffe4])) [2 ll+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 2883 2882 2884 138 (set (reg:DI 1 dx [orig:1458 _1372 ] [1458])
        (sign_extend:DI (reg:SI 1 dx [orig:1457 _1371 ] [1457]))) "BNDLYR2.f":371 149 {*extendsidi2_rex64}
     (nil))
(insn 2884 2883 2885 138 (parallel [
            (set (reg:DI 2 cx [orig:1459 _1373 ] [1459])
                (mult:DI (reg:DI 1 dx [orig:1458 _1372 ] [1458])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":371 349 {*muldi3_1}
     (nil))
(insn 2885 2884 2886 138 (set (reg:SI 1 dx [2351])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":371 86 {*movsi_internal}
     (nil))
(insn 2886 2885 2887 138 (parallel [
            (set (reg:SI 1 dx [orig:1460 _1374 ] [1460])
                (plus:SI (reg:SI 1 dx [2351])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":371 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [2 j+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 2887 2886 2888 138 (set (reg:DI 1 dx [orig:1461 _1375 ] [1461])
        (sign_extend:DI (reg:SI 1 dx [orig:1460 _1374 ] [1460]))) "BNDLYR2.f":371 149 {*extendsidi2_rex64}
     (nil))
(insn 2888 2887 2889 138 (parallel [
            (set (reg:DI 1 dx [orig:1462 _1376 ] [1462])
                (mult:DI (reg:DI 1 dx [orig:1461 _1375 ] [1461])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":371 349 {*muldi3_1}
     (nil))
(insn 2889 2888 2890 138 (parallel [
            (set (reg:DI 2 cx [orig:1463 _1377 ] [1463])
                (plus:DI (reg:DI 2 cx [orig:1459 _1373 ] [1459])
                    (reg:DI 1 dx [orig:1462 _1376 ] [1462])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":371 222 {*adddi_1}
     (nil))
(insn 2890 2889 2891 138 (set (reg:SI 1 dx [2352])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":371 86 {*movsi_internal}
     (nil))
(insn 2891 2890 2892 138 (set (reg:DI 1 dx [orig:1464 _1378 ] [1464])
        (sign_extend:DI (reg:SI 1 dx [2352]))) "BNDLYR2.f":371 149 {*extendsidi2_rex64}
     (nil))
(insn 2892 2891 2893 138 (parallel [
            (set (reg:DI 1 dx [orig:1465 _1379 ] [1465])
                (plus:DI (reg:DI 1 dx [orig:1464 _1378 ] [1464])
                    (reg:DI 2 cx [orig:1463 _1377 ] [1463])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":371 222 {*adddi_1}
     (nil))
(insn 2893 2892 2894 138 (parallel [
            (set (reg:DI 2 cx [orig:1466 _1380 ] [1466])
                (plus:DI (reg:DI 1 dx [orig:1465 _1379 ] [1465])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":371 222 {*adddi_1}
     (nil))
(insn 2894 2893 2895 138 (set (reg/f:DI 1 dx [2353])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7fd1b2d2cc60 extra>)) "BNDLYR2.f":371 85 {*movdi_internal}
     (nil))
(insn 2895 2894 2896 138 (set (reg:SF 21 xmm0 [orig:1467 _1381 ] [1467])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:1466 _1380 ] [1466])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [2353])) [1 extra.pint S4 A32])) "BNDLYR2.f":371 131 {*movsf_internal}
     (nil))
(insn 2896 2895 2897 138 (set (reg:SF 21 xmm0 [orig:1468 _1382 ] [1468])
        (plus:SF (reg:SF 21 xmm0 [orig:1467 _1381 ] [1467])
            (reg:SF 22 xmm1 [orig:1456 _1370 ] [1456]))) "BNDLYR2.f":371 838 {*fop_sf_comm}
     (nil))
(insn 2897 2896 2898 138 (set (reg:SF 22 xmm1 [orig:1469 _1383 ] [1469])
        (reg:SF 21 xmm0 [orig:1468 _1382 ] [1468])) "BNDLYR2.f":371 131 {*movsf_internal}
     (nil))
(insn 2898 2897 2899 138 (set (reg:SF 21 xmm0 [2355])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC23") [flags 0x2]) [0  S4 A32])) "BNDLYR2.f":371 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.25e-1 [0x0.8p-2])
        (nil)))
(insn 2899 2898 2900 138 (set (reg:SF 21 xmm0 [2354])
        (mult:SF (reg:SF 21 xmm0 [2355])
            (reg:SF 22 xmm1 [orig:1469 _1383 ] [1469]))) "BNDLYR2.f":371 838 {*fop_sf_comm}
     (nil))
(insn 2900 2899 2901 138 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -116 [0xffffffffffffff8c])) [1 pmv+0 S4 A32])
        (reg:SF 21 xmm0 [2354])) "BNDLYR2.f":371 131 {*movsf_internal}
     (nil))
(insn 2901 2900 2902 138 (set (reg:SI 1 dx [2356])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 lbnd+0 S4 A32])) "BNDLYR2.f":372 86 {*movsi_internal}
     (nil))
(insn 2902 2901 2903 138 (set (reg:DI 1 dx [orig:1470 _1384 ] [1470])
        (sign_extend:DI (reg:SI 1 dx [2356]))) "BNDLYR2.f":372 149 {*extendsidi2_rex64}
     (nil))
(insn 2903 2902 2904 138 (parallel [
            (set (reg:DI 2 cx [orig:1471 _1385 ] [1471])
                (mult:DI (reg:DI 1 dx [orig:1470 _1384 ] [1470])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":372 349 {*muldi3_1}
     (nil))
(insn 2904 2903 2905 138 (set (reg:SI 1 dx [2357])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":372 86 {*movsi_internal}
     (nil))
(insn 2905 2904 2906 138 (set (reg:DI 1 dx [orig:1472 _1386 ] [1472])
        (sign_extend:DI (reg:SI 1 dx [2357]))) "BNDLYR2.f":372 149 {*extendsidi2_rex64}
     (nil))
(insn 2906 2905 2907 138 (parallel [
            (set (reg:DI 1 dx [orig:1473 _1387 ] [1473])
                (mult:DI (reg:DI 1 dx [orig:1472 _1386 ] [1472])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":372 349 {*muldi3_1}
     (nil))
(insn 2907 2906 2908 138 (parallel [
            (set (reg:DI 2 cx [orig:1474 _1388 ] [1474])
                (plus:DI (reg:DI 2 cx [orig:1471 _1385 ] [1471])
                    (reg:DI 1 dx [orig:1473 _1387 ] [1473])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":372 222 {*adddi_1}
     (nil))
(insn 2908 2907 2909 138 (set (reg:SI 1 dx [2358])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":372 86 {*movsi_internal}
     (nil))
(insn 2909 2908 2910 138 (set (reg:DI 1 dx [orig:1475 _1389 ] [1475])
        (sign_extend:DI (reg:SI 1 dx [2358]))) "BNDLYR2.f":372 149 {*extendsidi2_rex64}
     (nil))
(insn 2910 2909 2911 138 (parallel [
            (set (reg:DI 1 dx [orig:1476 _1390 ] [1476])
                (plus:DI (reg:DI 1 dx [orig:1475 _1389 ] [1475])
                    (reg:DI 2 cx [orig:1474 _1388 ] [1474])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":372 222 {*adddi_1}
     (nil))
(insn 2911 2910 2912 138 (parallel [
            (set (reg:DI 2 cx [orig:1477 _1391 ] [1477])
                (plus:DI (reg:DI 1 dx [orig:1476 _1390 ] [1476])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":372 222 {*adddi_1}
     (nil))
(insn 2912 2911 2913 138 (set (reg/f:DI 1 dx [2359])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -152 [0xffffffffffffff68])) [3 pbnd+0 S8 A64])) "BNDLYR2.f":372 85 {*movdi_internal}
     (nil))
(insn 2913 2912 2914 138 (set (reg:SF 22 xmm1 [orig:1478 _1392 ] [1478])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:1477 _1391 ] [1477])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [2359])) [1 *pbnd_1537(D) S4 A32])) "BNDLYR2.f":372 131 {*movsf_internal}
     (nil))
(insn 2914 2913 2915 138 (set (reg:SF 21 xmm0 [2360])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -116 [0xffffffffffffff8c])) [1 pmv+0 S4 A32])) "BNDLYR2.f":372 131 {*movsf_internal}
     (nil))
(insn 2915 2914 2916 138 (set (reg:SF 21 xmm0 [orig:1479 _1393 ] [1479])
        (minus:SF (reg:SF 21 xmm0 [2360])
            (reg:SF 22 xmm1 [orig:1478 _1392 ] [1478]))) "BNDLYR2.f":372 841 {*fop_sf_1}
     (nil))
(insn 2916 2915 2917 138 (set (reg:V4SF 22 xmm1 [2362])
        (mem/u/c:V4SF (symbol_ref/u:DI ("*.LC21") [flags 0x2]) [0  S16 A128])) "BNDLYR2.f":372 1282 {movv4sf_internal}
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF +QNaN [+QNaN])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 2917 2916 2918 138 (parallel [
            (set (reg:SF 21 xmm0 [2361])
                (abs:SF (reg:SF 21 xmm0 [orig:1479 _1393 ] [1479])))
            (use (reg:V4SF 22 xmm1 [2362]))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":372 507 {*absnegsf2}
     (expr_list:REG_EQUAL (abs:SF (reg:SF 21 xmm0 [orig:1479 _1393 ] [1479]))
        (nil)))
(insn 2918 2917 2919 138 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -132 [0xffffffffffffff7c])) [1 delpv+0 S4 A32])
        (reg:SF 21 xmm0 [2361])) "BNDLYR2.f":372 131 {*movsf_internal}
     (nil))
(insn 2919 2918 2920 138 (set (reg:SF 21 xmm0 [2363])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [1 pminv+0 S4 A32])) "BNDLYR2.f":373 131 {*movsf_internal}
     (nil))
(insn 2920 2919 2921 138 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [2363])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -132 [0xffffffffffffff7c])) [1 delpv+0 S4 A32]))) "BNDLYR2.f":373 53 {*cmpisf}
     (nil))
(jump_insn 2921 2920 2925 138 (set (pc)
        (if_then_else (unle (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 2930)
            (pc))) "BNDLYR2.f":373 682 {*jcc}
     (nil)
 -> 2930)
;;  succ:       139 (FALLTHRU)
;;              140
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1559

;; basic block 139, loop depth 0, maybe hot
;;  prev block 138, next block 140, flags: (RTL, MODIFIED)
;;  pred:       138 (FALLTHRU)
;; bb 139 artificial_defs: { }
;; bb 139 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1559
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 2364 2365
(note 2925 2921 2926 139 [bb 139] NOTE_INSN_BASIC_BLOCK)
(insn 2926 2925 2927 139 (set (reg:SF 21 xmm0 [2364])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -132 [0xffffffffffffff7c])) [1 delpv+0 S4 A32])) "BNDLYR2.f":374 131 {*movsf_internal}
     (nil))
(insn 2927 2926 2928 139 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [1 pminv+0 S4 A32])
        (reg:SF 21 xmm0 [2364])) "BNDLYR2.f":374 131 {*movsf_internal}
     (nil))
(insn 2928 2927 2929 139 (set (reg:SI 1 dx [2365])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [2 ll+0 S4 A32])) "BNDLYR2.f":375 86 {*movsi_internal}
     (nil))
(insn 2929 2928 2930 139 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [2 lv+0 S4 A32])
        (reg:SI 1 dx [2365])) "BNDLYR2.f":375 86 {*movsi_internal}
     (nil))
;;  succ:       140 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1559

;; basic block 140, loop depth 0, maybe hot
;;  prev block 139, next block 172, flags: (RTL, MODIFIED)
;;  pred:       139 (FALLTHRU)
;;              138
;; bb 140 artificial_defs: { }
;; bb 140 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1559
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 2930 2929 2931 140 103 (nil) [1 uses])
(note 2931 2930 2932 140 [bb 140] NOTE_INSN_BASIC_BLOCK)
(insn 2932 2931 3167 140 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -44 [0xffffffffffffffd4])) [2 ll+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -44 [0xffffffffffffffd4])) [2 ll+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":367 221 {*addsi_1}
     (nil))
(jump_insn 3167 2932 3168 140 (set (pc)
        (label_ref 2933)) "BNDLYR2.f":367 683 {jump}
     (nil)
 -> 2933)
;;  succ:       137 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1559

(barrier 3168 3167 3254)
;; basic block 172, loop depth 0, maybe hot
;;  prev block 140, next block 141, flags: (RTL, MODIFIED)
;;  pred:       137
;; bb 172 artificial_defs: { }
;; bb 172 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1559
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 3254 3168 3253 172 169 (nil) [1 uses])
(note 3253 3254 3255 172 [bb 172] NOTE_INSN_BASIC_BLOCK)
(insn 3255 3253 2936 172 (const_int 0 [0]) "BNDLYR2.f":373 718 {nop}
     (nil))
;;  succ:       141 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1559

;; basic block 141, loop depth 0, maybe hot
;;  prev block 172, next block 142, flags: (RTL, MODIFIED)
;;  pred:       172 [always]  (FALLTHRU)
;; bb 141 artificial_defs: { }
;; bb 141 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1559
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1480 1481 1482 1483 1484 1485 1486 1487 1488 1489 1490 1491 1492 1493 1494 1495 1496 1497 1498 1499 1500 1501 1502 1503 1504 1505 1506 1507 1508 1509 1510 1511 1512 1513 2366 2367 2368 2369 2370 2371 2372 2373 2374 2375 2376 2377 2378 2379 2380 2381 2382 2383
(code_label 2936 3255 2937 141 102 (nil) [0 uses])
(note 2937 2936 2938 141 [bb 141] NOTE_INSN_BASIC_BLOCK)
(insn 2938 2937 2939 141 (set (reg:SI 1 dx [2366])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [2 lv+0 S4 A32])) "BNDLYR2.f":379 86 {*movsi_internal}
     (nil))
(insn 2939 2938 2940 141 (set (reg:DI 1 dx [orig:1480 _1394 ] [1480])
        (sign_extend:DI (reg:SI 1 dx [2366]))) "BNDLYR2.f":379 149 {*extendsidi2_rex64}
     (nil))
(insn 2940 2939 2941 141 (parallel [
            (set (reg:DI 2 cx [orig:1481 _1395 ] [1481])
                (mult:DI (reg:DI 1 dx [orig:1480 _1394 ] [1480])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":379 349 {*muldi3_1}
     (nil))
(insn 2941 2940 2942 141 (set (reg:SI 1 dx [2367])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":379 86 {*movsi_internal}
     (nil))
(insn 2942 2941 2943 141 (set (reg:DI 1 dx [orig:1482 _1396 ] [1482])
        (sign_extend:DI (reg:SI 1 dx [2367]))) "BNDLYR2.f":379 149 {*extendsidi2_rex64}
     (nil))
(insn 2943 2942 2944 141 (parallel [
            (set (reg:DI 1 dx [orig:1483 _1397 ] [1483])
                (mult:DI (reg:DI 1 dx [orig:1482 _1396 ] [1482])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":379 349 {*muldi3_1}
     (nil))
(insn 2944 2943 2945 141 (parallel [
            (set (reg:DI 2 cx [orig:1484 _1398 ] [1484])
                (plus:DI (reg:DI 2 cx [orig:1481 _1395 ] [1481])
                    (reg:DI 1 dx [orig:1483 _1397 ] [1483])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":379 222 {*adddi_1}
     (nil))
(insn 2945 2944 2946 141 (set (reg:SI 1 dx [2368])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":379 86 {*movsi_internal}
     (nil))
(insn 2946 2945 2947 141 (set (reg:DI 1 dx [orig:1485 _1399 ] [1485])
        (sign_extend:DI (reg:SI 1 dx [2368]))) "BNDLYR2.f":379 149 {*extendsidi2_rex64}
     (nil))
(insn 2947 2946 2948 141 (parallel [
            (set (reg:DI 1 dx [orig:1486 _1400 ] [1486])
                (plus:DI (reg:DI 1 dx [orig:1485 _1399 ] [1485])
                    (reg:DI 2 cx [orig:1484 _1398 ] [1484])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":379 222 {*adddi_1}
     (nil))
(insn 2948 2947 2949 141 (parallel [
            (set (reg:DI 4 si [orig:1487 _1401 ] [1487])
                (plus:DI (reg:DI 1 dx [orig:1486 _1400 ] [1486])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":379 222 {*adddi_1}
     (nil))
(insn 2949 2948 2950 141 (set (reg:SI 1 dx [2369])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 lbnd+0 S4 A32])) "BNDLYR2.f":379 86 {*movsi_internal}
     (nil))
(insn 2950 2949 2951 141 (set (reg:DI 1 dx [orig:1488 _1402 ] [1488])
        (sign_extend:DI (reg:SI 1 dx [2369]))) "BNDLYR2.f":379 149 {*extendsidi2_rex64}
     (nil))
(insn 2951 2950 2952 141 (parallel [
            (set (reg:DI 2 cx [orig:1489 _1403 ] [1489])
                (mult:DI (reg:DI 1 dx [orig:1488 _1402 ] [1488])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":379 349 {*muldi3_1}
     (nil))
(insn 2952 2951 2953 141 (set (reg:SI 1 dx [2370])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":379 86 {*movsi_internal}
     (nil))
(insn 2953 2952 2954 141 (set (reg:DI 1 dx [orig:1490 _1404 ] [1490])
        (sign_extend:DI (reg:SI 1 dx [2370]))) "BNDLYR2.f":379 149 {*extendsidi2_rex64}
     (nil))
(insn 2954 2953 2955 141 (parallel [
            (set (reg:DI 1 dx [orig:1491 _1405 ] [1491])
                (mult:DI (reg:DI 1 dx [orig:1490 _1404 ] [1490])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":379 349 {*muldi3_1}
     (nil))
(insn 2955 2954 2956 141 (parallel [
            (set (reg:DI 2 cx [orig:1492 _1406 ] [1492])
                (plus:DI (reg:DI 2 cx [orig:1489 _1403 ] [1489])
                    (reg:DI 1 dx [orig:1491 _1405 ] [1491])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":379 222 {*adddi_1}
     (nil))
(insn 2956 2955 2957 141 (set (reg:SI 1 dx [2371])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":379 86 {*movsi_internal}
     (nil))
(insn 2957 2956 2958 141 (set (reg:DI 1 dx [orig:1493 _1407 ] [1493])
        (sign_extend:DI (reg:SI 1 dx [2371]))) "BNDLYR2.f":379 149 {*extendsidi2_rex64}
     (nil))
(insn 2958 2957 2959 141 (parallel [
            (set (reg:DI 1 dx [orig:1494 _1408 ] [1494])
                (plus:DI (reg:DI 1 dx [orig:1493 _1407 ] [1493])
                    (reg:DI 2 cx [orig:1492 _1406 ] [1492])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":379 222 {*adddi_1}
     (nil))
(insn 2959 2958 2960 141 (parallel [
            (set (reg:DI 2 cx [orig:1495 _1409 ] [1495])
                (plus:DI (reg:DI 1 dx [orig:1494 _1408 ] [1494])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":379 222 {*adddi_1}
     (nil))
(insn 2960 2959 2961 141 (set (reg/f:DI 1 dx [2372])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7fd1b2d48360 vrbls>)) "BNDLYR2.f":379 85 {*movdi_internal}
     (nil))
(insn 2961 2960 2962 141 (parallel [
            (set (reg:DI 4 si [2373])
                (plus:DI (reg:DI 4 si [orig:1487 _1401 ] [1487])
                    (const_int 88893 [0x15b3d])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":379 222 {*adddi_1}
     (nil))
(insn 2962 2961 2963 141 (set (reg:SF 21 xmm0 [orig:1496 _1410 ] [1496])
        (mem:SF (plus:DI (mult:DI (reg:DI 4 si [2373])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [2372])) [1 vrbls.u S4 A32])) "BNDLYR2.f":379 131 {*movsf_internal}
     (nil))
(insn 2963 2962 2964 141 (set (reg/f:DI 1 dx [2374])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [3 ubnd+0 S8 A64])) "BNDLYR2.f":379 85 {*movdi_internal}
     (nil))
(insn 2964 2963 2965 141 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:1495 _1409 ] [1495])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [2374])) [1 *ubnd_1546(D) S4 A32])
        (reg:SF 21 xmm0 [orig:1496 _1410 ] [1496])) "BNDLYR2.f":379 131 {*movsf_internal}
     (nil))
(insn 2965 2964 2966 141 (set (reg:SI 1 dx [2375])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [2 lv+0 S4 A32])) "BNDLYR2.f":380 86 {*movsi_internal}
     (nil))
(insn 2966 2965 2967 141 (set (reg:DI 1 dx [orig:1497 _1411 ] [1497])
        (sign_extend:DI (reg:SI 1 dx [2375]))) "BNDLYR2.f":380 149 {*extendsidi2_rex64}
     (nil))
(insn 2967 2966 2968 141 (parallel [
            (set (reg:DI 2 cx [orig:1498 _1412 ] [1498])
                (mult:DI (reg:DI 1 dx [orig:1497 _1411 ] [1497])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":380 349 {*muldi3_1}
     (nil))
(insn 2968 2967 2969 141 (set (reg:SI 1 dx [2376])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":380 86 {*movsi_internal}
     (nil))
(insn 2969 2968 2970 141 (set (reg:DI 1 dx [orig:1499 _1413 ] [1499])
        (sign_extend:DI (reg:SI 1 dx [2376]))) "BNDLYR2.f":380 149 {*extendsidi2_rex64}
     (nil))
(insn 2970 2969 2971 141 (parallel [
            (set (reg:DI 1 dx [orig:1500 _1414 ] [1500])
                (mult:DI (reg:DI 1 dx [orig:1499 _1413 ] [1499])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":380 349 {*muldi3_1}
     (nil))
(insn 2971 2970 2972 141 (parallel [
            (set (reg:DI 2 cx [orig:1501 _1415 ] [1501])
                (plus:DI (reg:DI 2 cx [orig:1498 _1412 ] [1498])
                    (reg:DI 1 dx [orig:1500 _1414 ] [1500])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":380 222 {*adddi_1}
     (nil))
(insn 2972 2971 2973 141 (set (reg:SI 1 dx [2377])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":380 86 {*movsi_internal}
     (nil))
(insn 2973 2972 2974 141 (set (reg:DI 1 dx [orig:1502 _1416 ] [1502])
        (sign_extend:DI (reg:SI 1 dx [2377]))) "BNDLYR2.f":380 149 {*extendsidi2_rex64}
     (nil))
(insn 2974 2973 2975 141 (parallel [
            (set (reg:DI 1 dx [orig:1503 _1417 ] [1503])
                (plus:DI (reg:DI 1 dx [orig:1502 _1416 ] [1502])
                    (reg:DI 2 cx [orig:1501 _1415 ] [1501])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":380 222 {*adddi_1}
     (nil))
(insn 2975 2974 2976 141 (parallel [
            (set (reg:DI 4 si [orig:1504 _1418 ] [1504])
                (plus:DI (reg:DI 1 dx [orig:1503 _1417 ] [1503])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":380 222 {*adddi_1}
     (nil))
(insn 2976 2975 2977 141 (set (reg:SI 1 dx [2378])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 lbnd+0 S4 A32])) "BNDLYR2.f":380 86 {*movsi_internal}
     (nil))
(insn 2977 2976 2978 141 (set (reg:DI 1 dx [orig:1505 _1419 ] [1505])
        (sign_extend:DI (reg:SI 1 dx [2378]))) "BNDLYR2.f":380 149 {*extendsidi2_rex64}
     (nil))
(insn 2978 2977 2979 141 (parallel [
            (set (reg:DI 2 cx [orig:1506 _1420 ] [1506])
                (mult:DI (reg:DI 1 dx [orig:1505 _1419 ] [1505])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":380 349 {*muldi3_1}
     (nil))
(insn 2979 2978 2980 141 (set (reg:SI 1 dx [2379])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BNDLYR2.f":380 86 {*movsi_internal}
     (nil))
(insn 2980 2979 2981 141 (set (reg:DI 1 dx [orig:1507 _1421 ] [1507])
        (sign_extend:DI (reg:SI 1 dx [2379]))) "BNDLYR2.f":380 149 {*extendsidi2_rex64}
     (nil))
(insn 2981 2980 2982 141 (parallel [
            (set (reg:DI 1 dx [orig:1508 _1422 ] [1508])
                (mult:DI (reg:DI 1 dx [orig:1507 _1421 ] [1507])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":380 349 {*muldi3_1}
     (nil))
(insn 2982 2981 2983 141 (parallel [
            (set (reg:DI 2 cx [orig:1509 _1423 ] [1509])
                (plus:DI (reg:DI 2 cx [orig:1506 _1420 ] [1506])
                    (reg:DI 1 dx [orig:1508 _1422 ] [1508])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":380 222 {*adddi_1}
     (nil))
(insn 2983 2982 2984 141 (set (reg:SI 1 dx [2380])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BNDLYR2.f":380 86 {*movsi_internal}
     (nil))
(insn 2984 2983 2985 141 (set (reg:DI 1 dx [orig:1510 _1424 ] [1510])
        (sign_extend:DI (reg:SI 1 dx [2380]))) "BNDLYR2.f":380 149 {*extendsidi2_rex64}
     (nil))
(insn 2985 2984 2986 141 (parallel [
            (set (reg:DI 1 dx [orig:1511 _1425 ] [1511])
                (plus:DI (reg:DI 1 dx [orig:1510 _1424 ] [1510])
                    (reg:DI 2 cx [orig:1509 _1423 ] [1509])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":380 222 {*adddi_1}
     (nil))
(insn 2986 2985 2987 141 (parallel [
            (set (reg:DI 2 cx [orig:1512 _1426 ] [1512])
                (plus:DI (reg:DI 1 dx [orig:1511 _1425 ] [1511])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":380 222 {*adddi_1}
     (nil))
(insn 2987 2986 2988 141 (set (reg/f:DI 1 dx [2381])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7fd1b2d48360 vrbls>)) "BNDLYR2.f":380 85 {*movdi_internal}
     (nil))
(insn 2988 2987 2989 141 (parallel [
            (set (reg:DI 4 si [2382])
                (plus:DI (reg:DI 4 si [orig:1504 _1418 ] [1504])
                    (const_int 1214871 [0x128997])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":380 222 {*adddi_1}
     (nil))
(insn 2989 2988 2990 141 (set (reg:SF 21 xmm0 [orig:1513 _1427 ] [1513])
        (mem:SF (plus:DI (mult:DI (reg:DI 4 si [2382])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [2381])) [1 vrbls.v S4 A32])) "BNDLYR2.f":380 131 {*movsf_internal}
     (nil))
(insn 2990 2989 2991 141 (set (reg/f:DI 1 dx [2383])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [3 vbnd+0 S8 A64])) "BNDLYR2.f":380 85 {*movdi_internal}
     (nil))
(insn 2991 2990 2992 141 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:1512 _1426 ] [1512])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [2383])) [1 *vbnd_1548(D) S4 A32])
        (reg:SF 21 xmm0 [orig:1513 _1427 ] [1513])) "BNDLYR2.f":380 131 {*movsf_internal}
     (nil))
;;  succ:       142 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1559

;; basic block 142, loop depth 0, maybe hot
;;  prev block 141, next block 171, flags: (RTL, MODIFIED)
;;  pred:       141 (FALLTHRU)
;;              134
;;              135
;; bb 142 artificial_defs: { }
;; bb 142 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1559
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 2992 2991 2993 142 100 (nil) [2 uses])
(note 2993 2992 2994 142 [bb 142] NOTE_INSN_BASIC_BLOCK)
(insn 2994 2993 3169 142 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":358 221 {*addsi_1}
     (nil))
(jump_insn 3169 2994 3170 142 (set (pc)
        (label_ref 2995)) "BNDLYR2.f":358 683 {jump}
     (nil)
 -> 2995)
;;  succ:       133 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1559

(barrier 3170 3169 3251)
;; basic block 171, loop depth 0, maybe hot
;;  prev block 142, next block 143, flags: (RTL, MODIFIED)
;;  pred:       133
;; bb 171 artificial_defs: { }
;; bb 171 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1559
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 3251 3170 3250 171 168 (nil) [1 uses])
(note 3250 3251 3252 171 [bb 171] NOTE_INSN_BASIC_BLOCK)
(insn 3252 3250 2998 171 (const_int 0 [0]) "BNDLYR2.f":359 718 {nop}
     (nil))
;;  succ:       143 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1559

;; basic block 143, loop depth 0, maybe hot
;;  prev block 171, next block 170, flags: (RTL, MODIFIED)
;;  pred:       171 [always]  (FALLTHRU)
;; bb 143 artificial_defs: { }
;; bb 143 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1559
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 2998 3252 2999 143 99 (nil) [0 uses])
(note 2999 2998 3000 143 [bb 143] NOTE_INSN_BASIC_BLOCK)
(insn 3000 2999 3171 143 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":357 221 {*addsi_1}
     (nil))
(jump_insn 3171 3000 3172 143 (set (pc)
        (label_ref 3001)) "BNDLYR2.f":357 683 {jump}
     (nil)
 -> 3001)
;;  succ:       131 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1559

(barrier 3172 3171 3248)
;; basic block 170, loop depth 0, maybe hot
;;  prev block 143, next block 144, flags: (RTL, MODIFIED)
;;  pred:       131
;; bb 170 artificial_defs: { }
;; bb 170 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 3248 3172 3247 170 167 (nil) [1 uses])
(note 3247 3248 3249 170 [bb 170] NOTE_INSN_BASIC_BLOCK)
(insn 3249 3247 3004 170 (const_int 0 [0]) "BNDLYR2.f":358 718 {nop}
     (nil))
;;  succ:       144 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 144, loop depth 0, maybe hot
;;  prev block 170, next block 166, flags: (RTL, MODIFIED)
;;  pred:       170 [always]  (FALLTHRU)
;; bb 144 artificial_defs: { }
;; bb 144 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 3004 3249 3005 144 98 (nil) [0 uses])
(note 3005 3004 3006 144 [bb 144] NOTE_INSN_BASIC_BLOCK)
(insn 3006 3005 3173 144 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -40 [0xffffffffffffffd8])) [2 lbnd+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -40 [0xffffffffffffffd8])) [2 lbnd+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "BNDLYR2.f":288 221 {*addsi_1}
     (nil))
(jump_insn 3173 3006 3174 144 (set (pc)
        (label_ref 3007)) "BNDLYR2.f":288 683 {jump}
     (nil)
 -> 3007)
;;  succ:       98 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 3174 3173 3236)
;; basic block 166, loop depth 0, maybe hot
;;  prev block 144, next block 145, flags: (RTL, MODIFIED)
;;  pred:       98
;; bb 166 artificial_defs: { }
;; bb 166 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 3236 3174 3235 166 163 (nil) [1 uses])
(note 3235 3236 3237 166 [bb 166] NOTE_INSN_BASIC_BLOCK)
(insn 3237 3235 3010 166 (const_int 0 [0]) "BNDLYR2.f":357 718 {nop}
     (nil))
;;  succ:       145 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 145, loop depth 0, maybe hot
;;  prev block 166, next block 1, flags: (RTL, MODIFIED)
;;  pred:       166 [always]  (FALLTHRU)
;; bb 145 artificial_defs: { }
;; bb 145 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 3010 3237 3011 145 72 (nil) [0 uses])
(note 3011 3010 3093 145 [bb 145] NOTE_INSN_BASIC_BLOCK)
(insn 3093 3011 3256 145 (const_int 0 [0]) "BNDLYR2.f":388 718 {nop}
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(note 3256 3093 0 NOTE_INSN_DELETED)
