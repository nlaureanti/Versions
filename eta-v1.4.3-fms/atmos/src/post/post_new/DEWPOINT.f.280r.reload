
;; Function dewpoint (dewpoint_, funcdef_no=0, decl_uid=3768, cgraph_uid=0, symbol_order=0)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=8224, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 20 to 7 (offset=8176, prev_offset=0)
Can eliminate 20 to 6 (offset=-32, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 3:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 4:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 5:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 9:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 11:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 12:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 13:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 15:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 14:  (0) r {*cmpdi_ccno_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 16:  (0) =r  (2) rm  (3) 0 {*movdicc_noc}
      Creating newreg=260 from oldreg=173, assigning class GENERAL_REGS to r260
   16: r260:DI={(flags:CCGOC>=0)?r149:DI:r260:DI}
      REG_DEAD r173:DI
      REG_DEAD r149:DI
      REG_DEAD flags:CCGOC
    Inserting insn reload before:
  319: r260:DI=r173:DI
    Inserting insn reload after:
  320: r150:DI=r260:DI

            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 17:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 18:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 19:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 20:  (0) m  (1) re {*movdi_internal}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 2 in insn 21:  (0) r  (1) 0  (2) mr {*muldi3_1}
      Creating newreg=261 from oldreg=151, assigning class GENERAL_REGS to r261
   21: {r261:DI=r261:DI*[frame:DI-0x48];clobber flags:CC;}
      REG_UNUSED flags:CC
    Inserting insn reload before:
  321: r261:DI=r150:DI
    Inserting insn reload after:
  322: r151:DI=r261:DI

          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 23:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 22:  (0) r {*cmpdi_ccno_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 24:  (0) r  (2) 0  (3) rm {*movdicc_noc}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 27:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 28:  (0) r  (1) Z {*movdi_internal}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 32:  (0) =rm  (1) 0 {*one_cmpldi2_1}
      Creating newreg=262 from oldreg=156, assigning class GENERAL_REGS to r262
   32: r262:DI=~r262:DI
    Inserting insn reload before:
  323: r262:DI=r150:DI
    Inserting insn reload after:
  324: r156:DI=r262:DI

            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 33:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 34:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 35:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 36:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 37:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 39:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 38:  (0) r {*cmpdi_ccno_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 40:  (0) =r  (2) rm  (3) 0 {*movdicc_noc}
      Creating newreg=263 from oldreg=179, assigning class GENERAL_REGS to r263
   40: r263:DI={(flags:CCGOC>=0)?r157:DI:r263:DI}
      REG_DEAD r179:DI
      REG_DEAD r157:DI
      REG_DEAD flags:CCGOC
    Inserting insn reload before:
  325: r263:DI=r179:DI
    Inserting insn reload after:
  326: r158:DI=r263:DI

            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 41:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 42:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 43:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 44:  (0) m  (1) re {*movdi_internal}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 2 in insn 45:  (0) r  (1) 0  (2) mr {*muldi3_1}
      Creating newreg=264 from oldreg=159, assigning class GENERAL_REGS to r264
   45: {r264:DI=r264:DI*[frame:DI-0x58];clobber flags:CC;}
      REG_UNUSED flags:CC
    Inserting insn reload before:
  327: r264:DI=r158:DI
    Inserting insn reload after:
  328: r159:DI=r264:DI

          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 47:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 46:  (0) r {*cmpdi_ccno_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 48:  (0) r  (2) 0  (3) rm {*movdicc_noc}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 51:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 52:  (0) r  (1) Z {*movdi_internal}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 56:  (0) =rm  (1) 0 {*one_cmpldi2_1}
      Creating newreg=265 from oldreg=164, assigning class GENERAL_REGS to r265
   56: r265:DI=~r265:DI
    Inserting insn reload before:
  329: r265:DI=r158:DI
    Inserting insn reload after:
  330: r164:DI=r265:DI

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 57:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 58:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 59:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 60:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 61:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 62:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 63:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 64:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 65:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 67:  (1) rBwBz {*call_value}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
          alt=0,overall=1229,losers=4,rld_nregs=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
          alt=1,overall=628,losers=3,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=1214,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            Cycle danger: overall += LRA_MAX_REJECT
          alt=4,overall=1227,losers=2,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=7,overall=621,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
          alt=8,overall=13,losers=1,rld_nregs=0
            Staticly defined alt reject+=6
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 68:  (0) ?r  (1) Yj {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 69:  (0) ?m  (1) rF {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 70:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 71:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 72:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 73:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 74:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 75:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 76:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 77:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 78:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 79:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 80:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 81:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 82:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 84:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 85:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 86:  (0) x  (1) 0  (2) xm {*fop_sf_1}
          alt=2,overall=6,losers=1,rld_nregs=1
	 Choosing alt 2 in insn 88:  (0) x  (1) 0  (2) xm {*fop_sf_1}
      Creating newreg=266 from oldreg=98, assigning class SSE_REGS to r266
   88: r266:SF=r266:SF/r100:SF
      REG_DEAD r100:SF
      REG_DEAD r98:SF
    Inserting insn reload before:
  331: r266:SF=r98:SF
    Inserting insn reload after:
  332: r198:SF=r266:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 89:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 90:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 91:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 92:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 93:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 94:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 95:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 97:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 98:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 99:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 100:  (0) r {*cmpsi_ccno_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 103:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 104:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 105:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 106:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 108:  (1) rBwBz {*call_value}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 110:  (0) x  (1) 0  (2) xm {*fop_sf_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 111:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 112:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 114:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 116:  (1) rBwBz {*call_value}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 118:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 119:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 120:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 121:  (0) x  (1) 0  (2) xm {*fop_sf_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 122:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 123:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 124:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 125:  (0) x  (1) 0  (2) xm {*fop_sf_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 127:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 128:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 129:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 130:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 131:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 132:  (0) v  (1) m {*movsf_internal}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 133:  (0) v  (1) vm {movv4sf_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 134:  (0) Yv  (1) Yv  (2) 0 {*absnegsf2}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 135:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 136:  (0) v  (1) vm {*cmpisf}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 139:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 140:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 141:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 147:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 148:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 149:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 150:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 151:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 152:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 153:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 154:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 155:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 161:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 162:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 163:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 164:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 165:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=267 from oldreg=225, assigning class SSE_REGS to r267
  165: r267:SF=r267:SF*[frame:DI-0x5c]
      REG_DEAD r225:SF
    Inserting insn reload before:
  333: r267:SF=r225:SF
    Inserting insn reload after:
  334: r112:SF=r267:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 166:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 167:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 168:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 169:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 170:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 171:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 172:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 173:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 175:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 176:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 177:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 178:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 181:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 182:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 183:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 185:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 186:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 187:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 188:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 191:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 192:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 193
	 Choosing alt 2 in insn 193:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 194:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 195:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 196:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 197:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 198:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 199:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 200:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 201:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 203:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 204:  (0) v  (1) vm {*cmpisf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 205:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 206:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 207:  (0) v  (1) vm {*cmpiusf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 208:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 209:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 210
	 Choosing alt 0 in insn 210:  (0) =r  (1) %0  (2) rme {*iorsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 211:  (0) r {*cmpsi_ccno_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 214:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 217:  (0) v  (1) vm {*cmpisf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 218:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 219:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 220:  (0) v  (1) vm {*cmpiusf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 221:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 222:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 223
	 Choosing alt 0 in insn 223:  (0) =r  (1) %0  (2) rme {*iorsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 224:  (0) r {*cmpsi_ccno_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 227:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 230:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 231:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 232:  (0) v  (1) m {*movsf_internal}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 234:  (0) v  (1) vm {movv4sf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 235:  (0) =v  (1) vm {*vec_extractv4sf_0}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 236:  (0) =x  (1) %0  (2) x {*andsf3}
      Creating newreg=268 from oldreg=246, assigning class SSE_REGS to r268
  236: r268:SF=r268:SF&r248:SF
    Inserting insn reload before:
  335: r268:SF=r245:SF
    Inserting insn reload after:
  336: r246:SF=r268:SF

          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 237:  (0) v  (1) vm {*cmpiusf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 239:  (0) =r  (1) v {fix_truncsfsi_sse}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 240:  (0) v  (1) r {*floatsisf2_mixed}
          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 241:  (0) =x  (1) 0  (2) x {*andnotsf3}
      Creating newreg=269 from oldreg=248, assigning class SSE_REGS to r269
  241: r269:SF=~r269:SF&r243:SF
      REG_DEAD r248:SF
      REG_DEAD r243:SF
    Inserting insn reload before:
  337: r269:SF=r248:SF
    Inserting insn reload after:
  338: r250:SF=r269:SF

          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
	 Choosing alt 0 in insn 242:  (0) =x  (1) %0  (2) x {*iorsf3}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 245:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 246:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 247:  (0) =r  (1) v {fix_truncsfsi_sse}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 248:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 249:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 250:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 251:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 252:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 253:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 254:  (0) x  (1) 0  (2) xm {*fop_sf_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 256:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 257:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 258:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 259:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 260:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 261:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 262:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 263:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 264:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 265:  (0) x  (1) 0  (2) xm {*fop_sf_1}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 267
	 Choosing alt 1 in insn 267:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 268:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 269:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 270
	 Choosing alt 2 in insn 270:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 271:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 272:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 273:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 274:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 275
	 Choosing alt 1 in insn 275:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 276:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 277:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 278:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 284:  (0) rm  (1) 0  (2) re {*addsi_1}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #1: **********

EBB 2
EBB 3 4
EBB 5 6
EBB 22
EBB 7
EBB 21
EBB 8
EBB 9 10
EBB 11 12 13
EBB 14 15
EBB 16 17
EBB 18
EBB 24
EBB 19
EBB 23
EBB 20

********** Pseudo live ranges #1: **********

  BB 20
   Insn 297: point = 0, n_alt = -1
  BB 23
   Insn 314: point = 0, n_alt = -1
  BB 9
   Insn 179: point = 0, n_alt = -1
   Insn 178: point = 0, n_alt = 0
   Insn 177: point = 1, n_alt = 0
   Insn 176: point = 3, n_alt = 0
   Insn 175: point = 4, n_alt = 0
  BB 19
   Insn 304: point = 5, n_alt = -1
   Insn 284: point = 5, n_alt = 1
  BB 24
   Insn 317: point = 6, n_alt = -1
  BB 11
   Insn 189: point = 7, n_alt = -1
   Insn 188: point = 7, n_alt = 0
   Insn 187: point = 8, n_alt = 0
   Insn 186: point = 10, n_alt = 0
   Insn 185: point = 11, n_alt = 0
  BB 18
   Insn 302: point = 12, n_alt = -1
   Insn 278: point = 12, n_alt = 1
   Insn 277: point = 12, n_alt = 8
   Insn 276: point = 13, n_alt = 3
   Insn 275: point = 14, n_alt = 1
   Insn 274: point = 16, n_alt = 0
   Insn 273: point = 18, n_alt = 1
   Insn 272: point = 20, n_alt = 0
   Insn 271: point = 21, n_alt = 3
   Insn 270: point = 23, n_alt = 2
   Insn 269: point = 25, n_alt = 1
   Insn 268: point = 27, n_alt = 0
   Insn 267: point = 28, n_alt = 1
   Insn 266: point = 30, n_alt = -2
   Insn 265: point = 32, n_alt = 2
   Insn 264: point = 34, n_alt = 7
   Insn 263: point = 36, n_alt = 0
   Insn 262: point = 38, n_alt = 1
   Insn 261: point = 40, n_alt = 0
   Insn 260: point = 41, n_alt = 7
   Insn 259: point = 43, n_alt = 0
   Insn 258: point = 45, n_alt = 1
   Insn 257: point = 47, n_alt = 0
   Insn 256: point = 49, n_alt = 0
   Insn 255: point = 50, n_alt = -2
   Insn 254: point = 52, n_alt = 2
   Insn 253: point = 54, n_alt = 7
   Insn 252: point = 55, n_alt = 7
   Insn 251: point = 57, n_alt = 0
   Insn 250: point = 59, n_alt = 1
   Insn 249: point = 61, n_alt = 0
   Insn 248: point = 62, n_alt = 1
   Insn 247: point = 63, n_alt = 0
   Insn 246: point = 65, n_alt = 7
   Insn 245: point = 66, n_alt = 8
   Insn 244: point = 67, n_alt = -2
  BB 17
   Insn 242: point = 70, n_alt = 0
   Insn 338: point = 71, n_alt = -2
	Hard reg 22 is preferable by r269 with profit 1000
   Insn 241: point = 73, n_alt = 0
   Insn 337: point = 74, n_alt = -2
	Hard reg 22 is preferable by r269 with profit 1000
	Hard reg 23 is preferable by r269 with profit 1000
   Insn 240: point = 76, n_alt = 1
   Insn 239: point = 78, n_alt = 0
  BB 16
   Insn 238: point = 81, n_alt = -1
   Insn 237: point = 81, n_alt = 1
   Insn 336: point = 82, n_alt = -2
	Hard reg 25 is preferable by r268 with profit 1000
   Insn 236: point = 84, n_alt = 0
   Insn 335: point = 84, n_alt = -2
   Insn 235: point = 85, n_alt = 0
   Insn 234: point = 87, n_alt = 2
   Insn 233: point = 88, n_alt = -2
   Insn 232: point = 89, n_alt = 7
   Insn 231: point = 90, n_alt = 7
   Insn 230: point = 91, n_alt = 8
  BB 15
   Insn 227: point = 93, n_alt = 7
  BB 14
   Insn 225: point = 95, n_alt = -1
   Insn 224: point = 95, n_alt = 0
   Insn 223: point = 96, n_alt = 0
   Insn 222: point = 98, n_alt = 0
   Insn 221: point = 100, n_alt = 0
   Insn 220: point = 101, n_alt = 1
   Insn 219: point = 101, n_alt = 0
   Insn 218: point = 103, n_alt = 0
   Insn 217: point = 104, n_alt = 1
  BB 13
   Insn 214: point = 105, n_alt = 7
  BB 12
   Insn 212: point = 107, n_alt = -1
   Insn 211: point = 107, n_alt = 0
   Insn 210: point = 108, n_alt = 0
   Insn 209: point = 110, n_alt = 0
   Insn 208: point = 112, n_alt = 0
   Insn 207: point = 113, n_alt = 1
   Insn 206: point = 113, n_alt = 0
   Insn 205: point = 115, n_alt = 0
   Insn 204: point = 116, n_alt = 1
   Insn 203: point = 117, n_alt = 7
   Insn 202: point = 118, n_alt = -2
   Insn 201: point = 120, n_alt = 1
   Insn 200: point = 122, n_alt = 1
   Insn 199: point = 124, n_alt = 7
   Insn 198: point = 126, n_alt = 3
   Insn 197: point = 127, n_alt = 0
   Insn 196: point = 129, n_alt = 1
   Insn 195: point = 131, n_alt = 0
   Insn 194: point = 132, n_alt = 3
   Insn 193: point = 134, n_alt = 2
   Insn 192: point = 136, n_alt = 1
   Insn 191: point = 138, n_alt = 0
  BB 10
   Insn 183: point = 140, n_alt = 1
   Insn 182: point = 140, n_alt = 0
   Insn 181: point = 142, n_alt = 3
  BB 8
   Insn 173: point = 144, n_alt = 1
   Insn 172: point = 145, n_alt = 0
   Insn 171: point = 146, n_alt = 0
   Insn 170: point = 147, n_alt = 8
   Insn 169: point = 148, n_alt = 7
   Insn 168: point = 149, n_alt = 8
   Insn 167: point = 150, n_alt = 2
   Insn 166: point = 152, n_alt = 7
   Insn 334: point = 153, n_alt = -2
	Hard reg 22 is preferable by r267 with profit 1000
   Insn 165: point = 155, n_alt = 1
   Insn 333: point = 155, n_alt = -2
	Hard reg 22 is preferable by r267 with profit 1000
	Hard reg 21 is preferable by r267 with profit 1000
   Insn 164: point = 157, n_alt = 7
   Insn 163: point = 158, n_alt = 8
   Insn 162: point = 159, n_alt = 2
   Insn 161: point = 161, n_alt = 7
  BB 21
   Insn 308: point = 163, n_alt = -1
  BB 3
   Insn 101: point = 164, n_alt = -1
   Insn 100: point = 164, n_alt = 0
   Insn 99: point = 165, n_alt = 0
   Insn 98: point = 167, n_alt = 0
   Insn 97: point = 168, n_alt = 0
  BB 7
   Insn 300: point = 169, n_alt = -1
   Insn 155: point = 169, n_alt = 1
   Insn 154: point = 169, n_alt = 8
   Insn 153: point = 170, n_alt = 7
   Insn 152: point = 171, n_alt = 0
   Insn 151: point = 173, n_alt = 0
   Insn 150: point = 175, n_alt = 0
   Insn 149: point = 176, n_alt = 8
   Insn 148: point = 177, n_alt = 2
   Insn 147: point = 179, n_alt = 7
  BB 22
   Insn 311: point = 181, n_alt = -1
  BB 5
   Insn 137: point = 182, n_alt = -1
   Insn 136: point = 182, n_alt = 1
   Insn 135: point = 183, n_alt = 7
   Insn 134: point = 184, n_alt = 1
   Insn 133: point = 186, n_alt = 2
   Insn 132: point = 187, n_alt = 7
   Insn 131: point = 188, n_alt = 8
   Insn 130: point = 189, n_alt = 2
   Insn 129: point = 191, n_alt = 7
   Insn 128: point = 192, n_alt = 8
   Insn 127: point = 193, n_alt = 2
   Insn 126: point = 195, n_alt = -2
   Insn 125: point = 197, n_alt = 2
   Insn 124: point = 199, n_alt = 7
   Insn 123: point = 200, n_alt = 8
   Insn 122: point = 201, n_alt = 2
   Insn 121: point = 203, n_alt = 2
   Insn 120: point = 205, n_alt = 1
   Insn 119: point = 207, n_alt = 7
   Insn 118: point = 208, n_alt = 1
   Insn 117: point = 210, n_alt = -2
   Insn 116: point = 211, n_alt = 0
   Insn 115: point = 211, n_alt = -2
   Insn 114: point = 212, n_alt = 7
  BB 6
   Insn 298: point = 214, n_alt = -1
   Insn 141: point = 214, n_alt = 8
   Insn 140: point = 215, n_alt = 2
   Insn 139: point = 217, n_alt = 7
  BB 4
   Insn 112: point = 219, n_alt = 8
   Insn 111: point = 220, n_alt = 2
   Insn 110: point = 222, n_alt = 2
   Insn 109: point = 224, n_alt = -2
   Insn 108: point = 225, n_alt = 0
   Insn 107: point = 225, n_alt = -2
   Insn 106: point = 226, n_alt = 7
   Insn 105: point = 227, n_alt = 8
   Insn 104: point = 228, n_alt = 1
   Insn 103: point = 230, n_alt = 7
  BB 2
   Insn 95: point = 232, n_alt = 1
   Insn 94: point = 232, n_alt = 8
   Insn 93: point = 233, n_alt = 2
   Insn 92: point = 235, n_alt = 7
   Insn 91: point = 236, n_alt = 8
   Insn 90: point = 237, n_alt = 7
   Insn 89: point = 238, n_alt = 8
   Insn 332: point = 239, n_alt = -2
	Hard reg 21 is preferable by r266 with profit 1000
   Insn 88: point = 241, n_alt = 2
   Insn 331: point = 242, n_alt = -2
	Hard reg 21 is preferable by r266 with profit 1000
	Hard reg 23 is preferable by r266 with profit 1000
   Insn 87: point = 244, n_alt = -2
   Insn 86: point = 246, n_alt = 2
   Insn 85: point = 248, n_alt = 7
   Insn 84: point = 249, n_alt = 7
   Insn 83: point = 250, n_alt = -2
   Insn 82: point = 252, n_alt = 2
   Insn 81: point = 254, n_alt = 7
   Insn 80: point = 255, n_alt = 8
   Insn 79: point = 256, n_alt = 7
   Insn 78: point = 257, n_alt = 8
   Insn 77: point = 258, n_alt = 7
   Insn 76: point = 259, n_alt = 8
   Insn 75: point = 260, n_alt = 1
   Insn 74: point = 262, n_alt = 7
   Insn 73: point = 263, n_alt = 8
   Insn 72: point = 264, n_alt = 7
   Insn 71: point = 265, n_alt = 8
   Insn 70: point = 266, n_alt = 7
   Insn 69: point = 267, n_alt = 4
   Insn 68: point = 268, n_alt = 9
   Insn 67: point = 269, n_alt = 0
   Insn 66: point = 269, n_alt = -2
   Insn 65: point = 270, n_alt = 7
   Insn 64: point = 271, n_alt = 8
   Insn 63: point = 272, n_alt = 7
   Insn 62: point = 273, n_alt = 8
   Insn 61: point = 274, n_alt = 7
   Insn 60: point = 275, n_alt = 8
   Insn 59: point = 276, n_alt = 7
   Insn 58: point = 277, n_alt = 8
   Insn 57: point = 278, n_alt = 7
   Insn 330: point = 279, n_alt = -2
	Hard reg 43 is preferable by r265 with profit 1000
   Insn 56: point = 281, n_alt = 0
   Insn 329: point = 281, n_alt = -2
   Insn 52: point = 282, n_alt = 2
   Insn 51: point = 283, n_alt = 3
   Insn 50: point = 284, n_alt = -2
   Insn 48: point = 286, n_alt = 1
   Insn 46: point = 288, n_alt = 0
   Insn 47: point = 288, n_alt = 2
   Insn 328: point = 289, n_alt = -2
	Hard reg 0 is preferable by r264 with profit 1000
   Insn 45: point = 291, n_alt = 2
   Insn 327: point = 291, n_alt = -2
   Insn 44: point = 292, n_alt = 5
   Insn 43: point = 293, n_alt = 0
   Insn 42: point = 295, n_alt = 0
   Insn 41: point = 297, n_alt = 3
   Insn 326: point = 298, n_alt = -2
	Hard reg 41 is preferable by r263 with profit 1000
   Insn 40: point = 300, n_alt = 0
   Insn 325: point = 301, n_alt = -2
	Hard reg 41 is preferable by r263 with profit 1000
	Hard reg 1 is preferable by r263 with profit 1000
   Insn 38: point = 303, n_alt = 0
   Insn 39: point = 303, n_alt = 2
   Insn 37: point = 304, n_alt = 3
   Insn 36: point = 305, n_alt = 5
   Insn 35: point = 306, n_alt = 0
   Insn 34: point = 308, n_alt = 0
   Insn 33: point = 310, n_alt = 3
   Insn 324: point = 311, n_alt = -2
	Hard reg 42 is preferable by r262 with profit 1000
   Insn 32: point = 313, n_alt = 0
   Insn 323: point = 313, n_alt = -2
   Insn 28: point = 314, n_alt = 2
   Insn 27: point = 315, n_alt = 3
   Insn 26: point = 316, n_alt = -2
   Insn 24: point = 318, n_alt = 1
   Insn 22: point = 320, n_alt = 0
   Insn 23: point = 320, n_alt = 2
   Insn 322: point = 321, n_alt = -2
	Hard reg 0 is preferable by r261 with profit 1000
   Insn 21: point = 323, n_alt = 2
   Insn 321: point = 323, n_alt = -2
   Insn 20: point = 324, n_alt = 5
   Insn 19: point = 325, n_alt = 0
   Insn 18: point = 327, n_alt = 0
   Insn 17: point = 329, n_alt = 3
   Insn 320: point = 330, n_alt = -2
	Hard reg 3 is preferable by r260 with profit 1000
   Insn 16: point = 332, n_alt = 0
   Insn 319: point = 333, n_alt = -2
	Hard reg 3 is preferable by r260 with profit 1000
	Hard reg 1 is preferable by r260 with profit 1000
   Insn 14: point = 335, n_alt = 0
   Insn 15: point = 335, n_alt = 2
   Insn 13: point = 336, n_alt = 3
   Insn 12: point = 337, n_alt = 5
   Insn 11: point = 338, n_alt = 0
   Insn 10: point = 340, n_alt = 0
   Insn 9: point = 342, n_alt = 3
   Insn 5: point = 343, n_alt = 5
   Insn 4: point = 343, n_alt = 5
   Insn 3: point = 343, n_alt = 5
   Insn 2: point = 343, n_alt = 5
 r87: [339..340]
 r88: [326..327]
 r89: [315..316]
 r90: [314..343]
 r92: [307..308]
 r93: [294..295]
 r94: [283..284]
 r95: [282..343]
 r97: [251..252]
 r98: [243..250]
 r99: [245..246]
 r100: [241..244]
 r101: [223..224]
 r102: [221..222]
 r103: [209..210]
 r104: [204..208]
 r105: [204..205]
 r106: [202..203]
 r107: [196..197]
 r108: [194..195]
 r109: [182..184]
 r110: [172..173]
 r111: [169..171]
 r112: [151..153]
 r113: [135..136]
 r114: [133..134]
 r115: [128..132]
 r116: [128..129]
 r117: [125..127]
 r118: [123..124]
 r119: [121..122]
 r120: [119..120]
 r121: [109..113]
 r122: [109..110]
 r123: [107..108]
 r124: [97..101]
 r125: [97..98]
 r126: [95..96]
 r127: [58..59]
 r128: [56..57]
 r129: [15..55]
 r130: [51..52]
 r131: [29..50]
 r132: [46..47]
 r133: [44..45]
 r134: [42..43]
 r135: [33..41]
 r136: [37..38]
 r137: [35..36]
 r138: [33..34]
 r139: [31..32]
 r140: [29..30]
 r141: [15..28]
 r142: [24..25]
 r143: [22..23]
 r144: [17..21]
 r145: [17..18]
 r146: [12..16]
 r147: [12..14]
 r148: [107..118] [95..105] [91..93]
 r149: [332..336]
 r150: [0..330]
 r151: [319..321]
 r152: [317..318]
 r156: [0..311]
 r157: [300..304]
 r158: [0..298]
 r159: [287..289]
 r160: [285..286]
 r164: [0..279]
 r165: [164..165]
 r166: [144..146]
 r167: [0..145]
 r168: [0..1]
 r169: [7..140]
 r170: [7..8]
 r171: [341..342]
 r172: [337..338]
 r173: [334..335]
 r174: [328..329]
 r175: [324..325]
 r176: [319..320]
 r177: [309..310]
 r178: [305..306]
 r179: [302..303]
 r180: [296..297]
 r181: [292..293]
 r182: [287..288]
 r183: [277..278]
 r184: [275..276]
 r185: [273..274]
 r186: [271..272]
 r187: [269..270]
 r188: [267..268]
 r189: [265..266]
 r190: [263..264]
 r191: [259..260]
 r192: [261..262]
 r193: [257..258]
 r194: [255..256]
 r195: [253..254]
 r196: [247..249]
 r197: [247..248]
 r198: [238..239]
 r199: [236..237]
 r200: [232..233]
 r201: [234..235]
 r202: [166..167]
 r203: [227..228]
 r204: [229..230]
 r205: [225..226]
 r206: [219..220]
 r207: [211..212]
 r208: [206..207]
 r209: [200..201]
 r210: [198..199]
 r211: [192..193]
 r212: [188..189]
 r213: [190..191]
 r214: [185..187]
 r215: [185..186]
 r216: [182..183]
 r217: [214..215]
 r218: [216..217]
 r219: [176..177]
 r220: [178..179]
 r221: [174..175]
 r222: [169..170]
 r223: [158..159]
 r224: [160..161]
 r225: [156..157]
 r226: [149..150]
 r227: [151..152]
 r228: [147..148]
 r229: [2..3]
 r230: [141..142]
 r231: [9..10]
 r232: [137..138]
 r233: [130..131]
 r234: [125..126]
 r236: [114..115]
 r237: [116..117]
 r238: [111..112]
 r240: [102..103]
 r241: [99..100]
 r242: [66..67]
 r243: [73..90]
 r244: [81..89]
 r245: [79..88] [68..76]
 r246: [81..82]
 r247: [86..87]
 r248: [75..85]
 r249: [77..78]
 r250: [70..71]
 r251: [64..65]
 r252: [62..63]
 r253: [60..61]
 r254: [53..54]
 r255: [48..49]
 r256: [39..40]
 r257: [26..27]
 r258: [19..20]
 r259: [12..13]
 r260: [331..333]
 r261: [322..323]
 r262: [312..313]
 r263: [299..301]
 r264: [290..291]
 r265: [280..281]
 r266: [240..242]
 r267: [154..155]
 r268: [83..84]
 r269: [72..74]
Compressing live ranges: from 344 to 282 - 81%
Ranges after the compression:
 r87: [278..279]
 r88: [268..269]
 r89: [258..259]
 r90: [258..281]
 r92: [252..253]
 r93: [242..243]
 r94: [232..233]
 r95: [232..281]
 r97: [202..203]
 r98: [196..201]
 r99: [198..199]
 r100: [194..197]
 r101: [178..179]
 r102: [176..177]
 r103: [166..167]
 r104: [162..165]
 r105: [162..163]
 r106: [160..161]
 r107: [154..155]
 r108: [152..153]
 r109: [142..143]
 r110: [134..135]
 r111: [132..133]
 r112: [118..119]
 r113: [106..107]
 r114: [104..105]
 r115: [100..103]
 r116: [100..101]
 r117: [98..99]
 r118: [96..97]
 r119: [94..95]
 r120: [92..93]
 r121: [84..87]
 r122: [84..85]
 r123: [82..83]
 r124: [76..79]
 r125: [76..77]
 r126: [74..75]
 r127: [48..49]
 r128: [46..47]
 r129: [10..45]
 r130: [42..43]
 r131: [22..41]
 r132: [38..39]
 r133: [36..37]
 r134: [34..35]
 r135: [26..33]
 r136: [30..31]
 r137: [28..29]
 r138: [26..27]
 r139: [24..25]
 r140: [22..23]
 r141: [10..21]
 r142: [18..19]
 r143: [16..17]
 r144: [12..15]
 r145: [12..13]
 r146: [8..11]
 r147: [8..9]
 r148: [72..91]
 r149: [272..275]
 r150: [0..271]
 r151: [262..263]
 r152: [260..261]
 r156: [0..255]
 r157: [246..249]
 r158: [0..245]
 r159: [236..237]
 r160: [234..235]
 r164: [0..229]
 r165: [128..129]
 r166: [112..113]
 r167: [0..113]
 r168: [0..1]
 r169: [4..109]
 r170: [4..5]
 r171: [280..281]
 r172: [276..277]
 r173: [274..275]
 r174: [270..271]
 r175: [266..267]
 r176: [262..263]
 r177: [254..255]
 r178: [250..251]
 r179: [248..249]
 r180: [244..245]
 r181: [240..241]
 r182: [236..237]
 r183: [228..229]
 r184: [226..227]
 r185: [224..225]
 r186: [222..223]
 r187: [220..221]
 r188: [218..219]
 r189: [216..217]
 r190: [214..215]
 r191: [210..211]
 r192: [212..213]
 r193: [208..209]
 r194: [206..207]
 r195: [204..205]
 r196: [200..201]
 r197: [200..201]
 r198: [192..193]
 r199: [190..191]
 r200: [186..187]
 r201: [188..189]
 r202: [130..131]
 r203: [182..183]
 r204: [184..185]
 r205: [180..181]
 r206: [174..175]
 r207: [168..169]
 r208: [164..165]
 r209: [158..159]
 r210: [156..157]
 r211: [150..151]
 r212: [146..147]
 r213: [148..149]
 r214: [144..145]
 r215: [144..145]
 r216: [142..143]
 r217: [170..171]
 r218: [172..173]
 r219: [138..139]
 r220: [140..141]
 r221: [136..137]
 r222: [132..133]
 r223: [124..125]
 r224: [126..127]
 r225: [122..123]
 r226: [116..117]
 r227: [118..119]
 r228: [114..115]
 r229: [2..3]
 r230: [110..111]
 r231: [6..7]
 r232: [108..109]
 r233: [102..103]
 r234: [98..99]
 r236: [88..89]
 r237: [90..91]
 r238: [86..87]
 r240: [80..81]
 r241: [78..79]
 r242: [56..57]
 r243: [60..71]
 r244: [66..71]
 r245: [66..71] [58..63]
 r246: [66..67]
 r247: [70..71]
 r248: [62..69]
 r249: [64..65]
 r250: [58..59]
 r251: [54..55]
 r252: [52..53]
 r253: [50..51]
 r254: [44..45]
 r255: [40..41]
 r256: [32..33]
 r257: [20..21]
 r258: [14..15]
 r259: [8..9]
 r260: [272..273]
 r261: [264..265]
 r262: [256..257]
 r263: [246..247]
 r264: [238..239]
 r265: [230..231]
 r266: [194..195]
 r267: [120..121]
 r268: [68..69]
 r269: [60..61]

********** Assignment #1: **********

	 Assigning to 260 (cl=GENERAL_REGS, orig=173, freq=3000, tfirst=260, tfreq=3000)...
	   Assign 3 to reload r260 (freq=3000)
	 Assigning to 261 (cl=GENERAL_REGS, orig=151, freq=3000, tfirst=261, tfreq=3000)...
	   Assign 0 to reload r261 (freq=3000)
	 Assigning to 262 (cl=GENERAL_REGS, orig=156, freq=3000, tfirst=262, tfreq=3000)...
	   Assign 42 to reload r262 (freq=3000)
	 Assigning to 263 (cl=GENERAL_REGS, orig=179, freq=3000, tfirst=263, tfreq=3000)...
	   Assign 1 to reload r263 (freq=3000)
	 Assigning to 264 (cl=GENERAL_REGS, orig=159, freq=3000, tfirst=264, tfreq=3000)...
	   Assign 0 to reload r264 (freq=3000)
	 Assigning to 265 (cl=GENERAL_REGS, orig=164, freq=3000, tfirst=265, tfreq=3000)...
	   Assign 43 to reload r265 (freq=3000)
	 Assigning to 266 (cl=SSE_REGS, orig=98, freq=3000, tfirst=266, tfreq=3000)...
	   Assign 23 to reload r266 (freq=3000)
	 Assigning to 267 (cl=SSE_REGS, orig=225, freq=3000, tfirst=267, tfreq=3000)...
	   Assign 22 to reload r267 (freq=3000)
	 Assigning to 268 (cl=SSE_REGS, orig=246, freq=3000, tfirst=268, tfreq=3000)...
	   Assign 25 to reload r268 (freq=3000)
	 Assigning to 269 (cl=SSE_REGS, orig=248, freq=3000, tfirst=269, tfreq=3000)...
	   Assign 23 to reload r269 (freq=3000)

********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 6
	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=8224, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 20 to 7 (offset=8176, prev_offset=0)
Can eliminate 20 to 6 (offset=-32, prev_offset=-32)
changing reg in insn 10
changing reg in insn 11
changing reg in insn 18
changing reg in insn 19
changing reg in insn 26
changing reg in insn 27
changing reg in insn 28
changing reg in insn 27
changing reg in insn 34
changing reg in insn 35
changing reg in insn 42
changing reg in insn 43
changing reg in insn 50
changing reg in insn 51
changing reg in insn 52
changing reg in insn 51
changing reg in insn 82
changing reg in insn 83
changing reg in insn 83
changing reg in insn 86
changing reg in insn 87
changing reg in insn 87
changing reg in insn 88
changing reg in insn 109
changing reg in insn 110
changing reg in insn 110
changing reg in insn 111
changing reg in insn 117
changing reg in insn 118
changing reg in insn 118
changing reg in insn 121
changing reg in insn 120
changing reg in insn 121
changing reg in insn 121
changing reg in insn 122
changing reg in insn 125
changing reg in insn 126
changing reg in insn 126
changing reg in insn 127
changing reg in insn 134
changing reg in insn 136
changing reg in insn 151
changing reg in insn 152
changing reg in insn 152
changing reg in insn 154
changing reg in insn 167
changing reg in insn 192
changing reg in insn 193
changing reg in insn 194
changing reg in insn 194
changing reg in insn 197
changing reg in insn 196
changing reg in insn 197
changing reg in insn 197
changing reg in insn 199
changing reg in insn 199
changing reg in insn 200
changing reg in insn 200
changing reg in insn 201
changing reg in insn 201
changing reg in insn 202
changing reg in insn 206
changing reg in insn 209
changing reg in insn 210
changing reg in insn 211
changing reg in insn 219
changing reg in insn 222
changing reg in insn 223
changing reg in insn 224
changing reg in insn 250
changing reg in insn 251
changing reg in insn 251
changing reg in insn 252
changing reg in insn 252
changing reg in insn 254
changing reg in insn 255
changing reg in insn 255
changing reg in insn 257
changing reg in insn 258
changing reg in insn 258
changing reg in insn 259
changing reg in insn 259
changing reg in insn 260
changing reg in insn 260
changing reg in insn 265
changing reg in insn 262
changing reg in insn 263
changing reg in insn 263
changing reg in insn 264
changing reg in insn 264
changing reg in insn 265
changing reg in insn 265
changing reg in insn 266
changing reg in insn 266
changing reg in insn 267
changing reg in insn 269
changing reg in insn 270
changing reg in insn 271
changing reg in insn 271
changing reg in insn 274
changing reg in insn 273
changing reg in insn 274
changing reg in insn 274
changing reg in insn 277
changing reg in insn 275
changing reg in insn 277
changing reg in insn 227
changing reg in insn 214
changing reg in insn 202
changing reg in insn 230
changing reg in insn 220
changing reg in insn 220
changing reg in insn 217
changing reg in insn 207
changing reg in insn 207
changing reg in insn 204
changing reg in insn 13
changing reg in insn 16
changing reg in insn 14
changing reg in insn 24
changing reg in insn 22
changing reg in insn 24
changing reg in insn 26
changing reg in insn 194
changing reg in insn 37
changing reg in insn 40
changing reg in insn 38
changing reg in insn 48
changing reg in insn 46
changing reg in insn 48
changing reg in insn 50
changing reg in insn 271
changing reg in insn 99
changing reg in insn 100
changing reg in insn 171
changing reg in insn 173
changing reg in insn 172
changing reg in insn 175
changing reg in insn 177
changing reg in insn 178
changing reg in insn 182
changing reg in insn 185
changing reg in insn 187
changing reg in insn 188
changing reg in insn 9
changing reg in insn 10
changing reg in insn 11
changing reg in insn 12
changing reg in insn 15
changing reg in insn 17
changing reg in insn 18
changing reg in insn 19
changing reg in insn 20
changing reg in insn 23
changing reg in insn 24
changing reg in insn 33
changing reg in insn 34
changing reg in insn 35
changing reg in insn 36
changing reg in insn 39
changing reg in insn 41
changing reg in insn 42
changing reg in insn 43
changing reg in insn 44
changing reg in insn 47
changing reg in insn 48
changing reg in insn 57
changing reg in insn 58
changing reg in insn 59
changing reg in insn 60
changing reg in insn 61
changing reg in insn 62
changing reg in insn 63
changing reg in insn 64
changing reg in insn 65
changing reg in insn 66
changing reg in insn 68
changing reg in insn 69
changing reg in insn 70
changing reg in insn 71
changing reg in insn 72
changing reg in insn 73
changing reg in insn 75
changing reg in insn 76
changing reg in insn 74
changing reg in insn 75
changing reg in insn 77
changing reg in insn 78
changing reg in insn 79
changing reg in insn 80
changing reg in insn 81
changing reg in insn 82
changing reg in insn 84
changing reg in insn 86
changing reg in insn 85
changing reg in insn 86
changing reg in insn 89
changing reg in insn 90
changing reg in insn 91
changing reg in insn 93
changing reg in insn 94
changing reg in insn 92
changing reg in insn 93
changing reg in insn 98
changing reg in insn 99
changing reg in insn 104
changing reg in insn 105
changing reg in insn 103
changing reg in insn 104
changing reg in insn 106
changing reg in insn 107
changing reg in insn 111
changing reg in insn 112
changing reg in insn 114
changing reg in insn 115
changing reg in insn 119
changing reg in insn 120
changing reg in insn 122
changing reg in insn 123
changing reg in insn 124
changing reg in insn 125
changing reg in insn 127
changing reg in insn 128
changing reg in insn 130
changing reg in insn 131
changing reg in insn 129
changing reg in insn 130
changing reg in insn 132
changing reg in insn 134
changing reg in insn 134
changing reg in insn 133
changing reg in insn 134
changing reg in insn 135
changing reg in insn 136
changing reg in insn 140
changing reg in insn 141
changing reg in insn 139
changing reg in insn 140
changing reg in insn 148
changing reg in insn 149
changing reg in insn 147
changing reg in insn 148
changing reg in insn 150
changing reg in insn 151
changing reg in insn 153
changing reg in insn 154
changing reg in insn 162
changing reg in insn 163
changing reg in insn 161
changing reg in insn 162
changing reg in insn 164
changing reg in insn 167
changing reg in insn 168
changing reg in insn 166
changing reg in insn 167
changing reg in insn 169
changing reg in insn 170
changing reg in insn 176
changing reg in insn 177
changing reg in insn 181
changing reg in insn 182
changing reg in insn 186
changing reg in insn 187
changing reg in insn 191
changing reg in insn 192
changing reg in insn 195
changing reg in insn 196
changing reg in insn 198
changing reg in insn 199
changing reg in insn 205
changing reg in insn 206
changing reg in insn 203
changing reg in insn 204
changing reg in insn 208
changing reg in insn 209
changing reg in insn 218
changing reg in insn 219
changing reg in insn 221
changing reg in insn 222
changing reg in insn 244
changing reg in insn 245
changing reg in insn 231
changing reg in insn 241
changing reg in insn 233
changing reg in insn 232
changing reg in insn 237
changing reg in insn 242
changing reg in insn 240
changing reg in insn 233
changing reg in insn 244
changing reg in insn 242
changing reg in insn 239
changing reg in insn 237
changing reg in insn 234
changing reg in insn 235
changing reg in insn 235
changing reg in insn 236
changing reg in insn 239
changing reg in insn 240
changing reg in insn 242
changing reg in insn 246
changing reg in insn 247
changing reg in insn 247
changing reg in insn 248
changing reg in insn 249
changing reg in insn 250
changing reg in insn 253
changing reg in insn 254
changing reg in insn 256
changing reg in insn 257
changing reg in insn 261
changing reg in insn 262
changing reg in insn 268
changing reg in insn 269
changing reg in insn 272
changing reg in insn 273
changing reg in insn 276
changing reg in insn 277
deleting insn with uid = 320.
deleting insn with uid = 322.
deleting insn with uid = 26.
deleting insn with uid = 324.
deleting insn with uid = 325.
deleting insn with uid = 328.
deleting insn with uid = 50.
deleting insn with uid = 330.
deleting insn with uid = 66.
deleting insn with uid = 87.
deleting insn with uid = 331.
deleting insn with uid = 107.
deleting insn with uid = 109.
deleting insn with uid = 115.
deleting insn with uid = 117.
deleting insn with uid = 126.
deleting insn with uid = 334.
deleting insn with uid = 202.
deleting insn with uid = 336.
deleting insn with uid = 337.
deleting insn with uid = 244.
deleting insn with uid = 266.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 67.
verify found no changes in insn with uid = 108.
verify found no changes in insn with uid = 116.


dewpoint

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14]
;;  ref usage 	r0={31d,31u} r1={47d,44u} r2={5d,2u} r3={2d,4u} r4={10d,7u} r5={4d,1u} r6={1d,134u} r7={1d,27u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r17={40d,18u} r18={3d} r19={3d} r20={1d,1u,1e} r21={65d,69u,1e} r22={15d,12u} r23={10d,7u} r24={6d,2u} r25={6d,2u} r26={4d} r27={4d} r28={4d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={5d} r38={5d} r39={4d} r40={4d} r41={1d,3u} r42={2d,2u} r43={2d,2u} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} 
;;    total ref usage 811{441d,368u,2e} in 249{246 regular + 3 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90 95
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90 95
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 92 93 94 97 98 99 100 149 150 151 152 156 157 158 159 160 164 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201
(note 7 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 7 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8184 [0xffffffffffffe008])) [4 vp+0 S8 A64])
        (reg:DI 5 di [ vp ])) "DEWPOINT.f":1 85 {*movdi_internal}
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8192 [0xffffffffffffe000])) [4 td+0 S8 A64])
        (reg:DI 4 si [ td ])) "DEWPOINT.f":1 85 {*movdi_internal}
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8200 [0xffffffffffffdff8])) [5 im+0 S8 A64])
        (reg:DI 1 dx [ im ])) "DEWPOINT.f":1 85 {*movdi_internal}
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8208 [0xffffffffffffdff0])) [5 jm+0 S8 A64])
        (reg:DI 2 cx [ jm ])) "DEWPOINT.f":1 85 {*movdi_internal}
     (nil))
(note 6 5 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 6 10 2 (set (reg/f:DI 0 ax [171])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8200 [0xffffffffffffdff8])) [5 im+0 S8 A64])) "DEWPOINT.f":1 85 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:SI 0 ax [orig:87 _1 ] [87])
        (mem:SI (reg/f:DI 0 ax [171]) [1 *im_74(D)+0 S4 A32])) "DEWPOINT.f":1 86 {*movsi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:DI 0 ax [172])
        (sign_extend:DI (reg:SI 0 ax [orig:87 _1 ] [87]))) "DEWPOINT.f":1 149 {*extendsidi2_rex64}
     (nil))
(insn 12 11 13 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [3 ubound.5+0 S8 A64])
        (reg:DI 0 ax [172])) "DEWPOINT.f":1 85 {*movdi_internal}
     (nil))
(insn 13 12 15 2 (set (reg:DI 0 ax [orig:149 stride.7_76 ] [149])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [3 ubound.5+0 S8 A64])) "DEWPOINT.f":1 85 {*movdi_internal}
     (nil))
(insn 15 13 14 2 (set (reg:DI 1 dx [173])
        (const_int 0 [0])) "DEWPOINT.f":1 85 {*movdi_internal}
     (nil))
(insn 14 15 319 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 0 ax [orig:149 stride.7_76 ] [149])
            (const_int 0 [0]))) "DEWPOINT.f":1 8 {*cmpdi_ccno_1}
     (nil))
(insn 319 14 16 2 (set (reg:DI 3 bx [173])
        (reg:DI 1 dx [173])) "DEWPOINT.f":1 85 {*movdi_internal}
     (nil))
(insn 16 319 17 2 (set (reg:DI 3 bx [173])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 0 ax [orig:149 stride.7_76 ] [149])
            (reg:DI 3 bx [173]))) "DEWPOINT.f":1 1003 {*movdicc_noc}
     (nil))
(insn 17 16 18 2 (set (reg/f:DI 0 ax [174])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8208 [0xffffffffffffdff0])) [5 jm+0 S8 A64])) "DEWPOINT.f":1 85 {*movdi_internal}
     (nil))
(insn 18 17 19 2 (set (reg:SI 0 ax [orig:88 _2 ] [88])
        (mem:SI (reg/f:DI 0 ax [174]) [1 *jm_78(D)+0 S4 A32])) "DEWPOINT.f":1 86 {*movsi_internal}
     (nil))
(insn 19 18 20 2 (set (reg:DI 0 ax [175])
        (sign_extend:DI (reg:SI 0 ax [orig:88 _2 ] [88]))) "DEWPOINT.f":1 149 {*extendsidi2_rex64}
     (nil))
(insn 20 19 321 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [3 ubound.6+0 S8 A64])
        (reg:DI 0 ax [175])) "DEWPOINT.f":1 85 {*movdi_internal}
     (nil))
(insn 321 20 21 2 (set (reg:DI 0 ax [orig:151 size.9_80 ] [151])
        (reg:DI 3 bx [orig:150 stride.7_77 ] [150])) "DEWPOINT.f":1 85 {*movdi_internal}
     (nil))
(insn 21 321 23 2 (parallel [
            (set (reg:DI 0 ax [orig:151 size.9_80 ] [151])
                (mult:DI (reg:DI 0 ax [orig:151 size.9_80 ] [151])
                    (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                            (const_int -72 [0xffffffffffffffb8])) [3 ubound.6+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) "DEWPOINT.f":1 349 {*muldi3_1}
     (nil))
(insn 23 21 22 2 (set (reg:DI 1 dx [176])
        (const_int 0 [0])) "DEWPOINT.f":1 85 {*movdi_internal}
     (nil))
(insn 22 23 24 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 0 ax [orig:151 size.9_80 ] [151])
            (const_int 0 [0]))) "DEWPOINT.f":1 8 {*cmpdi_ccno_1}
     (nil))
(insn 24 22 27 2 (set (reg:DI 0 ax [orig:152 size.9_81 ] [152])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 0 ax [orig:151 size.9_80 ] [151])
            (reg:DI 1 dx [176]))) "DEWPOINT.f":1 1003 {*movdicc_noc}
     (nil))
(insn 27 24 28 2 (set (reg:DI 39 r10 [orig:90 _4 ] [90])
        (reg:DI 0 ax [orig:89 size.12_3 ] [89])) "DEWPOINT.f":1 85 {*movdi_internal}
     (nil))
(insn 28 27 323 2 (set (reg:DI 40 r11 [ _4+8 ])
        (const_int 0 [0])) "DEWPOINT.f":1 85 {*movdi_internal}
     (nil))
(insn 323 28 32 2 (set (reg:DI 42 r13 [orig:156 offset.8_85 ] [156])
        (reg:DI 3 bx [orig:150 stride.7_77 ] [150])) "DEWPOINT.f":1 85 {*movdi_internal}
     (nil))
(insn 32 323 33 2 (set (reg:DI 42 r13 [orig:156 offset.8_85 ] [156])
        (not:DI (reg:DI 42 r13 [orig:156 offset.8_85 ] [156]))) "DEWPOINT.f":1 532 {*one_cmpldi2_1}
     (nil))
(insn 33 32 34 2 (set (reg/f:DI 0 ax [177])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8200 [0xffffffffffffdff8])) [5 im+0 S8 A64])) "DEWPOINT.f":1 85 {*movdi_internal}
     (nil))
(insn 34 33 35 2 (set (reg:SI 0 ax [orig:92 _6 ] [92])
        (mem:SI (reg/f:DI 0 ax [177]) [1 *im_74(D)+0 S4 A32])) "DEWPOINT.f":1 86 {*movsi_internal}
     (nil))
(insn 35 34 36 2 (set (reg:DI 0 ax [178])
        (sign_extend:DI (reg:SI 0 ax [orig:92 _6 ] [92]))) "DEWPOINT.f":1 149 {*extendsidi2_rex64}
     (nil))
(insn 36 35 37 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -80 [0xffffffffffffffb0])) [3 ubound.0+0 S8 A64])
        (reg:DI 0 ax [178])) "DEWPOINT.f":1 85 {*movdi_internal}
     (nil))
(insn 37 36 39 2 (set (reg:DI 0 ax [orig:157 stride.2_87 ] [157])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -80 [0xffffffffffffffb0])) [3 ubound.0+0 S8 A64])) "DEWPOINT.f":1 85 {*movdi_internal}
     (nil))
(insn 39 37 38 2 (set (reg:DI 1 dx [179])
        (const_int 0 [0])) "DEWPOINT.f":1 85 {*movdi_internal}
     (nil))
(insn 38 39 40 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 0 ax [orig:157 stride.2_87 ] [157])
            (const_int 0 [0]))) "DEWPOINT.f":1 8 {*cmpdi_ccno_1}
     (nil))
(insn 40 38 326 2 (set (reg:DI 1 dx [179])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 0 ax [orig:157 stride.2_87 ] [157])
            (reg:DI 1 dx [179]))) "DEWPOINT.f":1 1003 {*movdicc_noc}
     (nil))
(insn 326 40 41 2 (set (reg:DI 41 r12 [orig:158 stride.2_88 ] [158])
        (reg:DI 1 dx [179])) "DEWPOINT.f":1 85 {*movdi_internal}
     (nil))
(insn 41 326 42 2 (set (reg/f:DI 0 ax [180])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8208 [0xffffffffffffdff0])) [5 jm+0 S8 A64])) "DEWPOINT.f":1 85 {*movdi_internal}
     (nil))
(insn 42 41 43 2 (set (reg:SI 0 ax [orig:93 _7 ] [93])
        (mem:SI (reg/f:DI 0 ax [180]) [1 *jm_78(D)+0 S4 A32])) "DEWPOINT.f":1 86 {*movsi_internal}
     (nil))
(insn 43 42 44 2 (set (reg:DI 0 ax [181])
        (sign_extend:DI (reg:SI 0 ax [orig:93 _7 ] [93]))) "DEWPOINT.f":1 149 {*extendsidi2_rex64}
     (nil))
(insn 44 43 327 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [3 ubound.1+0 S8 A64])
        (reg:DI 0 ax [181])) "DEWPOINT.f":1 85 {*movdi_internal}
     (nil))
(insn 327 44 45 2 (set (reg:DI 0 ax [orig:159 size.4_90 ] [159])
        (reg:DI 41 r12 [orig:158 stride.2_88 ] [158])) "DEWPOINT.f":1 85 {*movdi_internal}
     (nil))
(insn 45 327 47 2 (parallel [
            (set (reg:DI 0 ax [orig:159 size.4_90 ] [159])
                (mult:DI (reg:DI 0 ax [orig:159 size.4_90 ] [159])
                    (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                            (const_int -88 [0xffffffffffffffa8])) [3 ubound.1+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) "DEWPOINT.f":1 349 {*muldi3_1}
     (nil))
(insn 47 45 46 2 (set (reg:DI 1 dx [182])
        (const_int 0 [0])) "DEWPOINT.f":1 85 {*movdi_internal}
     (nil))
(insn 46 47 48 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 0 ax [orig:159 size.4_90 ] [159])
            (const_int 0 [0]))) "DEWPOINT.f":1 8 {*cmpdi_ccno_1}
     (nil))
(insn 48 46 51 2 (set (reg:DI 0 ax [orig:160 size.4_91 ] [160])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 0 ax [orig:159 size.4_90 ] [159])
            (reg:DI 1 dx [182]))) "DEWPOINT.f":1 1003 {*movdicc_noc}
     (nil))
(insn 51 48 52 2 (set (reg:DI 37 r8 [orig:95 _9 ] [95])
        (reg:DI 0 ax [orig:94 size.14_8 ] [94])) "DEWPOINT.f":1 85 {*movdi_internal}
     (nil))
(insn 52 51 329 2 (set (reg:DI 38 r9 [ _9+8 ])
        (const_int 0 [0])) "DEWPOINT.f":1 85 {*movdi_internal}
     (nil))
(insn 329 52 56 2 (set (reg:DI 43 r14 [orig:164 offset.3_95 ] [164])
        (reg:DI 41 r12 [orig:158 stride.2_88 ] [158])) "DEWPOINT.f":1 85 {*movdi_internal}
     (nil))
(insn 56 329 57 2 (set (reg:DI 43 r14 [orig:164 offset.3_95 ] [164])
        (not:DI (reg:DI 43 r14 [orig:164 offset.3_95 ] [164]))) "DEWPOINT.f":1 532 {*one_cmpldi2_1}
     (nil))
(insn 57 56 58 2 (set (reg:SF 21 xmm0 [183])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) "DEWPOINT.f":77 131 {*movsf_internal}
     (nil))
(insn 58 57 59 2 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -92 [0xffffffffffffffa4])) [2 rvp1+0 S4 A32])
        (reg:SF 21 xmm0 [183])) "DEWPOINT.f":77 131 {*movsf_internal}
     (nil))
(insn 59 58 60 2 (set (reg:SF 21 xmm0 [184])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S4 A32])) "DEWPOINT.f":78 131 {*movsf_internal}
     (nil))
(insn 60 59 61 2 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [2 rvp2+0 S4 A32])
        (reg:SF 21 xmm0 [184])) "DEWPOINT.f":78 131 {*movsf_internal}
     (nil))
(insn 61 60 62 2 (set (reg:SF 21 xmm0 [185])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0  S4 A32])) "DEWPOINT.f":80 131 {*movsf_internal}
     (nil))
(insn 62 61 63 2 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -100 [0xffffffffffffff9c])) [2 rt3+0 S4 A32])
        (reg:SF 21 xmm0 [185])) "DEWPOINT.f":80 131 {*movsf_internal}
     (nil))
(insn 63 62 64 2 (set (reg:SF 21 xmm0 [186])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC3") [flags 0x2]) [0  S4 A32])) "DEWPOINT.f":82 131 {*movsf_internal}
     (nil))
(insn 64 63 65 2 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [2 rvp3+0 S4 A32])
        (reg:SF 21 xmm0 [186])) "DEWPOINT.f":82 131 {*movsf_internal}
     (nil))
(insn 65 64 67 2 (set (reg:SF 21 xmm0 [187])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [2 rvp3+0 S4 A32])) "DEWPOINT.f":83 131 {*movsf_internal}
     (nil))
(call_insn/u 67 65 68 2 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("logf") [flags 0x41]  <function_decl 0x7f4856421900 __builtin_logf>) [0 __builtin_logf S1 A8])
            (const_int 0 [0]))) "DEWPOINT.f":83 700 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (nil)))
(insn 68 67 69 2 (set (reg:SF 0 ax [188])
        (reg:SF 21 xmm0)) "DEWPOINT.f":83 131 {*movsf_internal}
     (nil))
(insn 69 68 70 2 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -108 [0xffffffffffffff94])) [2 rlog3+0 S4 A32])
        (reg:SF 0 ax [188])) "DEWPOINT.f":83 131 {*movsf_internal}
     (nil))
(insn 70 69 71 2 (set (reg:SF 21 xmm0 [189])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC4") [flags 0x2]) [0  S4 A32])) "DEWPOINT.f":85 131 {*movsf_internal}
     (nil))
(insn 71 70 72 2 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [2 ra+0 S4 A32])
        (reg:SF 21 xmm0 [189])) "DEWPOINT.f":85 131 {*movsf_internal}
     (nil))
(insn 72 71 73 2 (set (reg:SF 21 xmm0 [190])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [0  S4 A32])) "DEWPOINT.f":87 131 {*movsf_internal}
     (nil))
(insn 73 72 74 2 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -116 [0xffffffffffffff8c])) [2 rb+0 S4 A32])
        (reg:SF 21 xmm0 [190])) "DEWPOINT.f":87 131 {*movsf_internal}
     (nil))
(insn 74 73 75 2 (set (reg:SF 21 xmm0 [192])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [2 ra+0 S4 A32])) "DEWPOINT.f":88 131 {*movsf_internal}
     (nil))
(insn 75 74 76 2 (set (reg:SF 21 xmm0 [191])
        (plus:SF (reg:SF 21 xmm0 [192])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -116 [0xffffffffffffff8c])) [2 rb+0 S4 A32]))) "DEWPOINT.f":88 838 {*fop_sf_comm}
     (nil))
(insn 76 75 77 2 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 rapb+0 S4 A32])
        (reg:SF 21 xmm0 [191])) "DEWPOINT.f":88 131 {*movsf_internal}
     (nil))
(insn 77 76 78 2 (set (reg:SF 21 xmm0 [193])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC6") [flags 0x2]) [0  S4 A32])) "DEWPOINT.f":90 131 {*movsf_internal}
     (nil))
(insn 78 77 79 2 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -124 [0xffffffffffffff84])) [2 rtest+0 S4 A32])
        (reg:SF 21 xmm0 [193])) "DEWPOINT.f":90 131 {*movsf_internal}
     (nil))
(insn 79 78 80 2 (set (reg:SF 21 xmm0 [194])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC7") [flags 0x2]) [0  S4 A32])) "DEWPOINT.f":93 131 {*movsf_internal}
     (nil))
(insn 80 79 81 2 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -128 [0xffffffffffffff80])) [2 rnt+0 S4 A32])
        (reg:SF 21 xmm0 [194])) "DEWPOINT.f":93 131 {*movsf_internal}
     (nil))
(insn 81 80 82 2 (set (reg:SF 21 xmm0 [195])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [2 rvp2+0 S4 A32])) "DEWPOINT.f":95 131 {*movsf_internal}
     (nil))
(insn 82 81 83 2 (set (reg:SF 21 xmm0 [orig:97 _11 ] [97])
        (minus:SF (reg:SF 21 xmm0 [195])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -92 [0xffffffffffffffa4])) [2 rvp1+0 S4 A32]))) "DEWPOINT.f":95 841 {*fop_sf_1}
     (nil))
(insn 83 82 84 2 (set (reg:SF 23 xmm2 [orig:98 _12 ] [98])
        (reg:SF 21 xmm0 [orig:97 _11 ] [97])) "DEWPOINT.f":95 131 {*movsf_internal}
     (nil))
(insn 84 83 85 2 (set (reg:SF 21 xmm0 [196])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -128 [0xffffffffffffff80])) [2 rnt+0 S4 A32])) "DEWPOINT.f":95 131 {*movsf_internal}
     (nil))
(insn 85 84 86 2 (set (reg:SF 22 xmm1 [197])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC8") [flags 0x2]) [0  S4 A32])) "DEWPOINT.f":95 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 86 85 88 2 (set (reg:SF 21 xmm0 [orig:99 _13 ] [99])
        (minus:SF (reg:SF 21 xmm0 [196])
            (reg:SF 22 xmm1 [197]))) "DEWPOINT.f":95 841 {*fop_sf_1}
     (nil))
(insn 88 86 332 2 (set (reg:SF 23 xmm2 [orig:98 _12 ] [98])
        (div:SF (reg:SF 23 xmm2 [orig:98 _12 ] [98])
            (reg:SF 21 xmm0 [orig:100 _14 ] [100]))) "DEWPOINT.f":95 841 {*fop_sf_1}
     (nil))
(insn 332 88 89 2 (set (reg:SF 21 xmm0 [198])
        (reg:SF 23 xmm2 [orig:98 _12 ] [98])) "DEWPOINT.f":95 131 {*movsf_internal}
     (nil))
(insn 89 332 90 2 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -132 [0xffffffffffffff7c])) [2 rdvp+0 S4 A32])
        (reg:SF 21 xmm0 [198])) "DEWPOINT.f":95 131 {*movsf_internal}
     (nil))
(insn 90 89 91 2 (set (reg:SF 21 xmm0 [199])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC8") [flags 0x2]) [0  S4 A32])) "DEWPOINT.f":97 131 {*movsf_internal}
     (nil))
(insn 91 90 92 2 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [2 rgs+0 S4 A32])
        (reg:SF 21 xmm0 [199])) "DEWPOINT.f":97 131 {*movsf_internal}
     (nil))
(insn 92 91 93 2 (set (reg:SF 21 xmm0 [201])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -92 [0xffffffffffffffa4])) [2 rvp1+0 S4 A32])) "DEWPOINT.f":98 131 {*movsf_internal}
     (nil))
(insn 93 92 94 2 (set (reg:SF 21 xmm0 [200])
        (minus:SF (reg:SF 21 xmm0 [201])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -132 [0xffffffffffffff7c])) [2 rdvp+0 S4 A32]))) "DEWPOINT.f":98 841 {*fop_sf_1}
     (nil))
(insn 94 93 95 2 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 rvp+0 S4 A32])
        (reg:SF 21 xmm0 [200])) "DEWPOINT.f":98 131 {*movsf_internal}
     (nil))
(insn 95 94 156 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 nn+0 S4 A32])
        (const_int 1 [0x1])) "DEWPOINT.f":100 86 {*movsi_internal}
     (nil))
;;  succ:       3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 150 156 158 164

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;;              7 [always] 
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 150 156 158 164
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 165 202
(code_label 156 95 96 3 5 (nil) [1 uses])
(note 96 156 97 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 97 96 98 3 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -44 [0xffffffffffffffd4])) [1 nn+0 S4 A32])
            (const_int 2000 [0x7d0]))) "DEWPOINT.f":100 11 {*cmpsi_1}
     (nil))
(insn 98 97 99 3 (set (reg:QI 0 ax [202])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "DEWPOINT.f":100 678 {*setcc_qi}
     (nil))
(insn 99 98 100 3 (set (reg:SI 0 ax [orig:165 _110 ] [165])
        (zero_extend:SI (reg:QI 0 ax [202]))) "DEWPOINT.f":100 140 {*zero_extendqisi2}
     (nil))
(insn 100 99 101 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:165 _110 ] [165])
            (const_int 0 [0]))) "DEWPOINT.f":100 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 101 100 102 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 307)
            (pc))) "DEWPOINT.f":100 682 {*jcc}
     (nil)
 -> 307)
;;  succ:       21
;;              4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 150 156 158 164

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 150 156 158 164
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 101 102 203 204 205 206
(note 102 101 103 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 103 102 104 4 (set (reg:SF 21 xmm0 [204])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 rvp+0 S4 A32])) "DEWPOINT.f":101 131 {*movsf_internal}
     (nil))
(insn 104 103 105 4 (set (reg:SF 21 xmm0 [203])
        (plus:SF (reg:SF 21 xmm0 [204])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -132 [0xffffffffffffff7c])) [2 rdvp+0 S4 A32]))) "DEWPOINT.f":101 838 {*fop_sf_comm}
     (nil))
(insn 105 104 106 4 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 rvp+0 S4 A32])
        (reg:SF 21 xmm0 [203])) "DEWPOINT.f":101 131 {*movsf_internal}
     (nil))
(insn 106 105 108 4 (set (reg:SF 21 xmm0 [205])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 rvp+0 S4 A32])) "DEWPOINT.f":102 131 {*movsf_internal}
     (nil))
(call_insn/u 108 106 110 4 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("logf") [flags 0x41]  <function_decl 0x7f4856421900 __builtin_logf>) [0 __builtin_logf S1 A8])
            (const_int 0 [0]))) "DEWPOINT.f":102 700 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (nil)))
(insn 110 108 111 4 (set (reg:SF 21 xmm0 [orig:102 _16 ] [102])
        (minus:SF (reg:SF 21 xmm0 [orig:101 _15 ] [101])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -108 [0xffffffffffffff94])) [2 rlog3+0 S4 A32]))) "DEWPOINT.f":102 841 {*fop_sf_1}
     (nil))
(insn 111 110 112 4 (set (reg:SF 21 xmm0 [206])
        (minus:SF (reg:SF 21 xmm0 [orig:102 _16 ] [102])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -120 [0xffffffffffffff88])) [2 rapb+0 S4 A32]))) "DEWPOINT.f":102 841 {*fop_sf_1}
     (nil))
(insn 112 111 142 4 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -136 [0xffffffffffffff78])) [2 rlvp+0 S4 A32])
        (reg:SF 21 xmm0 [206])) "DEWPOINT.f":102 131 {*movsf_internal}
     (nil))
;;  succ:       5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 150 156 158 164

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;;              6 [always] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 150 156 158 164
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 103 104 105 106 107 108 109 207 208 209 210 211 212 213 214 215 216
(code_label 142 112 113 5 4 (nil) [1 uses])
(note 113 142 114 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 114 113 116 5 (set (reg:SF 21 xmm0 [207])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [2 rgs+0 S4 A32])) "DEWPOINT.f":104 131 {*movsf_internal}
     (nil))
(call_insn/u 116 114 118 5 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("logf") [flags 0x41]  <function_decl 0x7f4856421900 __builtin_logf>) [0 __builtin_logf S1 A8])
            (const_int 0 [0]))) "DEWPOINT.f":104 700 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (nil)))
(insn 118 116 119 5 (set (reg:SF 21 xmm0 [orig:104 _18 ] [104])
        (mult:SF (reg:SF 21 xmm0 [orig:103 _17 ] [103])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -112 [0xffffffffffffff90])) [2 ra+0 S4 A32]))) "DEWPOINT.f":104 838 {*fop_sf_comm}
     (nil))
(insn 119 118 120 5 (set (reg:SF 22 xmm1 [208])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 rapb+0 S4 A32])) "DEWPOINT.f":104 131 {*movsf_internal}
     (nil))
(insn 120 119 121 5 (set (reg:SF 22 xmm1 [orig:105 _19 ] [105])
        (mult:SF (reg:SF 22 xmm1 [208])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -48 [0xffffffffffffffd0])) [2 rgs+0 S4 A32]))) "DEWPOINT.f":104 838 {*fop_sf_comm}
     (nil))
(insn 121 120 122 5 (set (reg:SF 21 xmm0 [orig:106 _20 ] [106])
        (minus:SF (reg:SF 21 xmm0 [orig:104 _18 ] [104])
            (reg:SF 22 xmm1 [orig:105 _19 ] [105]))) "DEWPOINT.f":104 841 {*fop_sf_1}
     (nil))
(insn 122 121 123 5 (set (reg:SF 21 xmm0 [209])
        (minus:SF (reg:SF 21 xmm0 [orig:106 _20 ] [106])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -136 [0xffffffffffffff78])) [2 rlvp+0 S4 A32]))) "DEWPOINT.f":104 841 {*fop_sf_1}
     (nil))
(insn 123 122 124 5 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -140 [0xffffffffffffff74])) [2 rn+0 S4 A32])
        (reg:SF 21 xmm0 [209])) "DEWPOINT.f":104 131 {*movsf_internal}
     (nil))
(insn 124 123 125 5 (set (reg:SF 21 xmm0 [210])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [2 ra+0 S4 A32])) "DEWPOINT.f":107 131 {*movsf_internal}
     (nil))
(insn 125 124 127 5 (set (reg:SF 21 xmm0 [orig:107 _21 ] [107])
        (div:SF (reg:SF 21 xmm0 [210])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -48 [0xffffffffffffffd0])) [2 rgs+0 S4 A32]))) "DEWPOINT.f":107 841 {*fop_sf_1}
     (nil))
(insn 127 125 128 5 (set (reg:SF 21 xmm0 [211])
        (minus:SF (reg:SF 21 xmm0 [orig:108 _22 ] [108])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -120 [0xffffffffffffff88])) [2 rapb+0 S4 A32]))) "DEWPOINT.f":107 841 {*fop_sf_1}
     (nil))
(insn 128 127 129 5 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -144 [0xffffffffffffff70])) [2 rd+0 S4 A32])
        (reg:SF 21 xmm0 [211])) "DEWPOINT.f":107 131 {*movsf_internal}
     (nil))
(insn 129 128 130 5 (set (reg:SF 21 xmm0 [213])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -140 [0xffffffffffffff74])) [2 rn+0 S4 A32])) "DEWPOINT.f":109 131 {*movsf_internal}
     (nil))
(insn 130 129 131 5 (set (reg:SF 21 xmm0 [212])
        (div:SF (reg:SF 21 xmm0 [213])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -144 [0xffffffffffffff70])) [2 rd+0 S4 A32]))) "DEWPOINT.f":109 841 {*fop_sf_1}
     (nil))
(insn 131 130 132 5 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -148 [0xffffffffffffff6c])) [2 rch+0 S4 A32])
        (reg:SF 21 xmm0 [212])) "DEWPOINT.f":109 131 {*movsf_internal}
     (nil))
(insn 132 131 133 5 (set (reg:SF 21 xmm0 [214])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -148 [0xffffffffffffff6c])) [2 rch+0 S4 A32])) "DEWPOINT.f":110 131 {*movsf_internal}
     (nil))
(insn 133 132 134 5 (set (reg:V4SF 22 xmm1 [215])
        (mem/u/c:V4SF (symbol_ref/u:DI ("*.LC9") [flags 0x2]) [0  S16 A128])) "DEWPOINT.f":110 1282 {movv4sf_internal}
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF +QNaN [+QNaN])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 134 133 135 5 (parallel [
            (set (reg:SF 22 xmm1 [orig:109 _23 ] [109])
                (abs:SF (reg:SF 21 xmm0 [214])))
            (use (reg:V4SF 22 xmm1 [215]))
            (clobber (reg:CC 17 flags))
        ]) "DEWPOINT.f":110 507 {*absnegsf2}
     (expr_list:REG_EQUAL (abs:SF (reg:SF 21 xmm0 [214]))
        (nil)))
(insn 135 134 136 5 (set (reg:SF 21 xmm0 [216])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -124 [0xffffffffffffff84])) [2 rtest+0 S4 A32])) "DEWPOINT.f":110 131 {*movsf_internal}
     (nil))
(insn 136 135 137 5 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [216])
            (reg:SF 22 xmm1 [orig:109 _23 ] [109]))) "DEWPOINT.f":110 53 {*cmpisf}
     (nil))
(jump_insn 137 136 138 5 (set (pc)
        (if_then_else (gt (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 310)
            (pc))) "DEWPOINT.f":110 682 {*jcc}
     (nil)
 -> 310)
;;  succ:       22
;;              6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 150 156 158 164

;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 22, flags: (RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 150 156 158 164
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 217 218
(note 138 137 139 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 139 138 140 6 (set (reg:SF 21 xmm0 [218])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [2 rgs+0 S4 A32])) "DEWPOINT.f":112 131 {*movsf_internal}
     (nil))
(insn 140 139 141 6 (set (reg:SF 21 xmm0 [217])
        (minus:SF (reg:SF 21 xmm0 [218])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -148 [0xffffffffffffff6c])) [2 rch+0 S4 A32]))) "DEWPOINT.f":112 841 {*fop_sf_1}
     (nil))
(insn 141 140 298 6 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [2 rgs+0 S4 A32])
        (reg:SF 21 xmm0 [217])) "DEWPOINT.f":112 131 {*movsf_internal}
     (nil))
(jump_insn 298 141 299 6 (set (pc)
        (label_ref 142)) "DEWPOINT.f":113 683 {jump}
     (nil)
 -> 142)
;;  succ:       5 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 150 156 158 164

(barrier 299 298 310)
;; basic block 22, loop depth 0, maybe hot
;;  prev block 6, next block 7, flags: (RTL, MODIFIED)
;;  pred:       5
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 150 156 158 164
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 310 299 309 22 15 (nil) [1 uses])
(note 309 310 311 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 311 309 145 22 (const_int 0 [0]) "DEWPOINT.f":113 718 {nop}
     (nil))
;;  succ:       7 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 150 156 158 164

;; basic block 7, loop depth 0, maybe hot
;;  prev block 22, next block 21, flags: (RTL, MODIFIED)
;;  pred:       22 [always]  (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 150 156 158 164
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 110 111 219 220 221 222
(code_label 145 311 146 7 3 (nil) [0 uses])
(note 146 145 147 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 147 146 148 7 (set (reg:SF 21 xmm0 [220])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -100 [0xffffffffffffff9c])) [2 rt3+0 S4 A32])) "DEWPOINT.f":116 131 {*movsf_internal}
     (nil))
(insn 148 147 149 7 (set (reg:SF 21 xmm0 [219])
        (div:SF (reg:SF 21 xmm0 [220])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -48 [0xffffffffffffffd0])) [2 rgs+0 S4 A32]))) "DEWPOINT.f":116 841 {*fop_sf_1}
     (nil))
(insn 149 148 150 7 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -152 [0xffffffffffffff68])) [2 rt+0 S4 A32])
        (reg:SF 21 xmm0 [219])) "DEWPOINT.f":116 131 {*movsf_internal}
     (nil))
(insn 150 149 151 7 (set (reg:SI 0 ax [221])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 nn+0 S4 A32])) "DEWPOINT.f":117 86 {*movsi_internal}
     (nil))
(insn 151 150 152 7 (set (reg:DI 0 ax [orig:110 _24 ] [110])
        (sign_extend:DI (reg:SI 0 ax [221]))) "DEWPOINT.f":117 149 {*extendsidi2_rex64}
     (nil))
(insn 152 151 153 7 (parallel [
            (set (reg:DI 0 ax [orig:111 _25 ] [111])
                (plus:DI (reg:DI 0 ax [orig:110 _24 ] [110])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "DEWPOINT.f":117 222 {*adddi_1}
     (nil))
(insn 153 152 154 7 (set (reg:SF 21 xmm0 [222])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -152 [0xffffffffffffff68])) [2 rt+0 S4 A32])) "DEWPOINT.f":117 131 {*movsf_internal}
     (nil))
(insn 154 153 155 7 (set (mem:SF (plus:DI (plus:DI (mult:DI (reg:DI 0 ax [orig:111 _25 ] [111])
                        (const_int 4 [0x4]))
                    (reg/f:DI 6 bp))
                (const_int -8176 [0xffffffffffffe010])) [2 tdp S4 A32])
        (reg:SF 21 xmm0 [222])) "DEWPOINT.f":117 131 {*movsf_internal}
     (nil))
(insn 155 154 300 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -44 [0xffffffffffffffd4])) [1 nn+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -44 [0xffffffffffffffd4])) [1 nn+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "DEWPOINT.f":100 221 {*addsi_1}
     (nil))
(jump_insn 300 155 301 7 (set (pc)
        (label_ref 156)) "DEWPOINT.f":100 683 {jump}
     (nil)
 -> 156)
;;  succ:       3 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 150 156 158 164

(barrier 301 300 307)
;; basic block 21, loop depth 0, maybe hot
;;  prev block 7, next block 8, flags: (RTL, MODIFIED)
;;  pred:       3
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 150 156 158 164
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 307 301 306 21 14 (nil) [1 uses])
(note 306 307 308 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 308 306 159 21 (const_int 0 [0]) "DEWPOINT.f":119 718 {nop}
     (nil))
;;  succ:       8 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 150 156 158 164

;; basic block 8, loop depth 0, maybe hot
;;  prev block 21, next block 9, flags: (RTL, MODIFIED)
;;  pred:       21 [always]  (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 150 156 158 164
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 112 166 167 223 224 225 226 227 228
(code_label 159 308 160 8 2 (nil) [0 uses])
(note 160 159 161 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 161 160 162 8 (set (reg:SF 21 xmm0 [224])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC8") [flags 0x2]) [0  S4 A32])) "DEWPOINT.f":126 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 162 161 163 8 (set (reg:SF 21 xmm0 [223])
        (div:SF (reg:SF 21 xmm0 [224])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -132 [0xffffffffffffff7c])) [2 rdvp+0 S4 A32]))) "DEWPOINT.f":126 841 {*fop_sf_1}
     (nil))
(insn 163 162 164 8 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -156 [0xffffffffffffff64])) [2 a+0 S4 A32])
        (reg:SF 21 xmm0 [223])) "DEWPOINT.f":126 131 {*movsf_internal}
     (nil))
(insn 164 163 333 8 (set (reg:SF 21 xmm0 [225])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -156 [0xffffffffffffff64])) [2 a+0 S4 A32])) "DEWPOINT.f":127 131 {*movsf_internal}
     (nil))
(insn 333 164 165 8 (set (reg:SF 22 xmm1 [225])
        (reg:SF 21 xmm0 [225])) "DEWPOINT.f":127 131 {*movsf_internal}
     (nil))
(insn 165 333 166 8 (set (reg:SF 22 xmm1 [225])
        (mult:SF (reg:SF 22 xmm1 [225])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -92 [0xffffffffffffffa4])) [2 rvp1+0 S4 A32]))) "DEWPOINT.f":127 838 {*fop_sf_comm}
     (nil))
(insn 166 165 167 8 (set (reg:SF 21 xmm0 [227])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC8") [flags 0x2]) [0  S4 A32])) "DEWPOINT.f":127 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 167 166 168 8 (set (reg:SF 21 xmm0 [226])
        (minus:SF (reg:SF 21 xmm0 [227])
            (reg:SF 22 xmm1 [orig:112 _26 ] [112]))) "DEWPOINT.f":127 841 {*fop_sf_1}
     (nil))
(insn 168 167 169 8 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -160 [0xffffffffffffff60])) [2 b+0 S4 A32])
        (reg:SF 21 xmm0 [226])) "DEWPOINT.f":127 131 {*movsf_internal}
     (nil))
(insn 169 168 170 8 (set (reg:SF 21 xmm0 [228])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC10") [flags 0x2]) [0  S4 A32])) "DEWPOINT.f":128 131 {*movsf_internal}
     (nil))
(insn 170 169 171 8 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -164 [0xffffffffffffff5c])) [2 dntm1+0 S4 A32])
        (reg:SF 21 xmm0 [228])) "DEWPOINT.f":128 131 {*movsf_internal}
     (nil))
(insn 171 170 172 8 (set (reg:SI 1 dx [orig:166 _123 ] [166])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f48565b0870 parallel>)
                    (const_int 8 [0x8]))) [1 parallel.jsta+0 S4 A64])) "DEWPOINT.f":134 86 {*movsi_internal}
     (nil))
(insn 172 171 173 8 (set (reg:SI 0 ax [orig:167 _124 ] [167])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f48565b0870 parallel>)
                    (const_int 12 [0xc]))) [1 parallel.jend+0 S4 A32])) "DEWPOINT.f":134 86 {*movsi_internal}
     (nil))
(insn 173 172 285 8 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 j+0 S4 A32])
        (reg:SI 1 dx [orig:166 _123 ] [166])) "DEWPOINT.f":134 86 {*movsi_internal}
     (nil))
;;  succ:       9 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 150 156 158 164 167

;; basic block 9, loop depth 0, maybe hot
;;  prev block 8, next block 10, flags: (RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;;              19 [always] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 150 156 158 164 167
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 167
;; lr  def 	 17 [flags] 168 229
(code_label 285 173 174 9 12 (nil) [1 uses])
(note 174 285 175 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 175 174 176 9 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -40 [0xffffffffffffffd8])) [1 j+0 S4 A32])
            (reg:SI 0 ax [orig:167 _124 ] [167]))) "DEWPOINT.f":134 11 {*cmpsi_1}
     (nil))
(insn 176 175 177 9 (set (reg:QI 1 dx [229])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "DEWPOINT.f":134 678 {*setcc_qi}
     (nil))
(insn 177 176 178 9 (set (reg:SI 1 dx [orig:168 _126 ] [168])
        (zero_extend:SI (reg:QI 1 dx [229]))) "DEWPOINT.f":134 140 {*zero_extendqisi2}
     (nil))
(insn 178 177 179 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:168 _126 ] [168])
            (const_int 0 [0]))) "DEWPOINT.f":134 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 179 178 180 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 313)
            (pc))) "DEWPOINT.f":134 682 {*jcc}
     (nil)
 -> 313)
;;  succ:       23
;;              10 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 150 156 158 164 167

;; basic block 10, loop depth 0, maybe hot
;;  prev block 9, next block 11, flags: (RTL, MODIFIED)
;;  pred:       9 (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 150 156 158 164 167
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 169 230
(note 180 179 181 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 181 180 182 10 (set (reg/f:DI 1 dx [230])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8200 [0xffffffffffffdff8])) [5 im+0 S8 A64])) "DEWPOINT.f":135 85 {*movdi_internal}
     (nil))
(insn 182 181 183 10 (set (reg:SI 2 cx [orig:169 _127 ] [169])
        (mem:SI (reg/f:DI 1 dx [230]) [1 *im_74(D)+0 S4 A32])) "DEWPOINT.f":135 86 {*movsi_internal}
     (nil))
(insn 183 182 279 10 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
        (const_int 1 [0x1])) "DEWPOINT.f":135 86 {*movsi_internal}
     (nil))
;;  succ:       11 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 150 156 158 164 167 169

;; basic block 11, loop depth 0, maybe hot
;;  prev block 10, next block 12, flags: (RTL, MODIFIED)
;;  pred:       10 (FALLTHRU)
;;              18 [always] 
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 150 156 158 164 167 169
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 169
;; lr  def 	 17 [flags] 170 231
(code_label 279 183 184 11 11 (nil) [1 uses])
(note 184 279 185 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 185 184 186 11 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
            (reg:SI 2 cx [orig:169 _127 ] [169]))) "DEWPOINT.f":135 11 {*cmpsi_1}
     (nil))
(insn 186 185 187 11 (set (reg:QI 1 dx [231])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "DEWPOINT.f":135 678 {*setcc_qi}
     (nil))
(insn 187 186 188 11 (set (reg:SI 1 dx [orig:170 _129 ] [170])
        (zero_extend:SI (reg:QI 1 dx [231]))) "DEWPOINT.f":135 140 {*zero_extendqisi2}
     (nil))
(insn 188 187 189 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:170 _129 ] [170])
            (const_int 0 [0]))) "DEWPOINT.f":135 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 189 188 190 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 316)
            (pc))) "DEWPOINT.f":135 682 {*jcc}
     (nil)
 -> 316)
;;  succ:       24
;;              12 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 150 156 158 164 167 169

;; basic block 12, loop depth 0, maybe hot
;;  prev block 11, next block 13, flags: (RTL, MODIFIED)
;;  pred:       11 (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 150 156 158 164 167 169
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 150 156
;; lr  def 	 17 [flags] 113 114 115 116 117 118 119 120 121 122 123 148 232 233 234 236 237 238
(note 190 189 191 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 191 190 192 12 (set (reg:SI 1 dx [232])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 j+0 S4 A32])) "DEWPOINT.f":136 86 {*movsi_internal}
     (nil))
(insn 192 191 193 12 (set (reg:DI 1 dx [orig:113 _27 ] [113])
        (sign_extend:DI (reg:SI 1 dx [232]))) "DEWPOINT.f":136 149 {*extendsidi2_rex64}
     (nil))
(insn 193 192 194 12 (parallel [
            (set (reg:DI 1 dx [orig:114 _28 ] [114])
                (mult:DI (reg:DI 1 dx [orig:113 _27 ] [113])
                    (reg:DI 3 bx [orig:150 stride.7_77 ] [150])))
            (clobber (reg:CC 17 flags))
        ]) "DEWPOINT.f":136 349 {*muldi3_1}
     (nil))
(insn 194 193 195 12 (parallel [
            (set (reg:DI 4 si [orig:115 _29 ] [115])
                (plus:DI (reg:DI 42 r13 [orig:156 offset.8_85 ] [156])
                    (reg:DI 1 dx [orig:114 _28 ] [114])))
            (clobber (reg:CC 17 flags))
        ]) "DEWPOINT.f":136 222 {*adddi_1}
     (nil))
(insn 195 194 196 12 (set (reg:SI 1 dx [233])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "DEWPOINT.f":136 86 {*movsi_internal}
     (nil))
(insn 196 195 197 12 (set (reg:DI 1 dx [orig:116 _30 ] [116])
        (sign_extend:DI (reg:SI 1 dx [233]))) "DEWPOINT.f":136 149 {*extendsidi2_rex64}
     (nil))
(insn 197 196 198 12 (parallel [
            (set (reg:DI 4 si [orig:117 _31 ] [117])
                (plus:DI (reg:DI 4 si [orig:115 _29 ] [115])
                    (reg:DI 1 dx [orig:116 _30 ] [116])))
            (clobber (reg:CC 17 flags))
        ]) "DEWPOINT.f":136 222 {*adddi_1}
     (nil))
(insn 198 197 199 12 (set (reg/f:DI 1 dx [234])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8184 [0xffffffffffffe008])) [4 vp+0 S8 A64])) "DEWPOINT.f":136 85 {*movdi_internal}
     (nil))
(insn 199 198 200 12 (set (reg:SF 21 xmm0 [orig:118 _32 ] [118])
        (mem:SF (plus:DI (mult:DI (reg:DI 4 si [orig:117 _31 ] [117])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [234])) [2 *vp_130(D) S4 A32])) "DEWPOINT.f":136 131 {*movsf_internal}
     (nil))
(insn 200 199 201 12 (set (reg:SF 21 xmm0 [orig:119 _33 ] [119])
        (mult:SF (reg:SF 21 xmm0 [orig:118 _32 ] [118])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -156 [0xffffffffffffff64])) [2 a+0 S4 A32]))) "DEWPOINT.f":136 838 {*fop_sf_comm}
     (nil))
(insn 201 200 203 12 (set (reg:SF 21 xmm0 [orig:120 _34 ] [120])
        (plus:SF (reg:SF 21 xmm0 [orig:119 _33 ] [119])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -160 [0xffffffffffffff60])) [2 b+0 S4 A32]))) "DEWPOINT.f":136 838 {*fop_sf_comm}
     (nil))
(insn 203 201 204 12 (set (reg:SF 22 xmm1 [237])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC8") [flags 0x2]) [0  S4 A32])) "DEWPOINT.f":136 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 204 203 205 12 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 22 xmm1 [237])
            (reg:SF 21 xmm0 [orig:148 M.10_68 ] [148]))) "DEWPOINT.f":136 53 {*cmpisf}
     (nil))
(insn 205 204 206 12 (set (reg:QI 1 dx [236])
        (gt:QI (reg:CCFP 17 flags)
            (const_int 0 [0]))) "DEWPOINT.f":136 678 {*setcc_qi}
     (nil))
(insn 206 205 207 12 (set (reg:SI 4 si [orig:121 _35 ] [121])
        (zero_extend:SI (reg:QI 1 dx [236]))) "DEWPOINT.f":136 140 {*zero_extendqisi2}
     (nil))
(insn 207 206 208 12 (set (reg:CCFP 17 flags)
        (unspec:CCFP [
                (compare:CCFP (reg:SF 21 xmm0 [orig:148 M.10_68 ] [148])
                    (reg:SF 21 xmm0 [orig:148 M.10_68 ] [148]))
            ] UNSPEC_NOTRAP)) "DEWPOINT.f":136 54 {*cmpiusf}
     (nil))
(insn 208 207 209 12 (set (reg:QI 1 dx [238])
        (unordered:QI (reg:CCFP 17 flags)
            (const_int 0 [0]))) "DEWPOINT.f":136 678 {*setcc_qi}
     (nil))
(insn 209 208 210 12 (set (reg:SI 1 dx [orig:122 _36 ] [122])
        (zero_extend:SI (reg:QI 1 dx [238]))) "DEWPOINT.f":136 140 {*zero_extendqisi2}
     (nil))
(insn 210 209 211 12 (parallel [
            (set (reg:SI 1 dx [orig:123 _37 ] [123])
                (ior:SI (reg:SI 1 dx [orig:122 _36 ] [122])
                    (reg:SI 4 si [orig:121 _35 ] [121])))
            (clobber (reg:CC 17 flags))
        ]) "DEWPOINT.f":136 450 {*iorsi_1}
     (nil))
(insn 211 210 212 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:123 _37 ] [123])
            (const_int 0 [0]))) "DEWPOINT.f":136 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 212 211 213 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 215)
            (pc))) "DEWPOINT.f":136 682 {*jcc}
     (nil)
 -> 215)
;;  succ:       13 (FALLTHRU)
;;              14
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 148 150 156 158 164 167 169

;; basic block 13, loop depth 0, maybe hot
;;  prev block 12, next block 14, flags: (RTL, MODIFIED)
;;  pred:       12 (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 150 156 158 164 167 169
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 148
(note 213 212 214 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 214 213 215 13 (set (reg:SF 21 xmm0 [orig:148 M.10_68 ] [148])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC8") [flags 0x2]) [0  S4 A32])) "DEWPOINT.f":136 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
;;  succ:       14 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 148 150 156 158 164 167 169

;; basic block 14, loop depth 0, maybe hot
;;  prev block 13, next block 15, flags: (RTL, MODIFIED)
;;  pred:       12
;;              13 (FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 148 150 156 158 164 167 169
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 148
;; lr  def 	 17 [flags] 124 125 126 240 241
(code_label 215 214 216 14 8 (nil) [1 uses])
(note 216 215 217 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 217 216 218 14 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [orig:148 M.10_68 ] [148])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -164 [0xffffffffffffff5c])) [2 dntm1+0 S4 A32]))) "DEWPOINT.f":136 53 {*cmpisf}
     (nil))
(insn 218 217 219 14 (set (reg:QI 1 dx [240])
        (gt:QI (reg:CCFP 17 flags)
            (const_int 0 [0]))) "DEWPOINT.f":136 678 {*setcc_qi}
     (nil))
(insn 219 218 220 14 (set (reg:SI 4 si [orig:124 _38 ] [124])
        (zero_extend:SI (reg:QI 1 dx [240]))) "DEWPOINT.f":136 140 {*zero_extendqisi2}
     (nil))
(insn 220 219 221 14 (set (reg:CCFP 17 flags)
        (unspec:CCFP [
                (compare:CCFP (reg:SF 21 xmm0 [orig:148 M.10_68 ] [148])
                    (reg:SF 21 xmm0 [orig:148 M.10_68 ] [148]))
            ] UNSPEC_NOTRAP)) "DEWPOINT.f":136 54 {*cmpiusf}
     (nil))
(insn 221 220 222 14 (set (reg:QI 1 dx [241])
        (unordered:QI (reg:CCFP 17 flags)
            (const_int 0 [0]))) "DEWPOINT.f":136 678 {*setcc_qi}
     (nil))
(insn 222 221 223 14 (set (reg:SI 1 dx [orig:125 _39 ] [125])
        (zero_extend:SI (reg:QI 1 dx [241]))) "DEWPOINT.f":136 140 {*zero_extendqisi2}
     (nil))
(insn 223 222 224 14 (parallel [
            (set (reg:SI 1 dx [orig:126 _40 ] [126])
                (ior:SI (reg:SI 1 dx [orig:125 _39 ] [125])
                    (reg:SI 4 si [orig:124 _38 ] [124])))
            (clobber (reg:CC 17 flags))
        ]) "DEWPOINT.f":136 450 {*iorsi_1}
     (nil))
(insn 224 223 225 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:126 _40 ] [126])
            (const_int 0 [0]))) "DEWPOINT.f":136 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 225 224 226 14 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 228)
            (pc))) "DEWPOINT.f":136 682 {*jcc}
     (nil)
 -> 228)
;;  succ:       15 (FALLTHRU)
;;              16
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 148 150 156 158 164 167 169

;; basic block 15, loop depth 0, maybe hot
;;  prev block 14, next block 16, flags: (RTL, MODIFIED)
;;  pred:       14 (FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 150 156 158 164 167 169
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 148
(note 226 225 227 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 227 226 228 15 (set (reg:SF 21 xmm0 [orig:148 M.10_68 ] [148])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -164 [0xffffffffffffff5c])) [2 dntm1+0 S4 A32])) "DEWPOINT.f":136 131 {*movsf_internal}
     (nil))
;;  succ:       16 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 148 150 156 158 164 167 169

;; basic block 16, loop depth 0, maybe hot
;;  prev block 15, next block 17, flags: (RTL, MODIFIED)
;;  pred:       14
;;              15 (FALLTHRU)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 148 150 156 158 164 167 169
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 148
;; lr  def 	 17 [flags] 243 244 245 246 247 248
(code_label 228 227 229 16 9 (nil) [1 uses])
(note 229 228 230 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 230 229 231 16 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [2 w1+0 S4 A32])
        (reg:SF 21 xmm0 [orig:148 M.10_68 ] [148])) "DEWPOINT.f":136 131 {*movsf_internal}
     (nil))
(insn 231 230 232 16 (set (reg:SF 22 xmm1 [243])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [2 w1+0 S4 A32])) "DEWPOINT.f":137 131 {*movsf_internal}
     (nil))
(insn 232 231 233 16 (set (reg:SF 24 xmm3 [244])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC11") [flags 0x2]) [0  S4 A32])) "DEWPOINT.f":137 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 8.388608e+6 [0x0.8p+24])
        (nil)))
(insn 233 232 234 16 (set (reg:SF 21 xmm0 [245])
        (reg:SF 22 xmm1 [243])) "DEWPOINT.f":137 131 {*movsf_internal}
     (nil))
(insn 234 233 235 16 (set (reg:V4SF 23 xmm2 [247])
        (mem/u/c:V4SF (symbol_ref/u:DI ("*.LC9") [flags 0x2]) [0  S16 A128])) "DEWPOINT.f":137 1282 {movv4sf_internal}
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF +QNaN [+QNaN])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 235 234 335 16 (set (reg:SF 23 xmm2 [248])
        (vec_select:SF (reg:V4SF 23 xmm2 [247])
            (parallel [
                    (const_int 0 [0])
                ]))) "DEWPOINT.f":137 2527 {*vec_extractv4sf_0}
     (nil))
(insn 335 235 236 16 (set (reg:SF 25 xmm4 [246])
        (reg:SF 21 xmm0 [245])) "DEWPOINT.f":137 131 {*movsf_internal}
     (nil))
(insn 236 335 237 16 (set (reg:SF 25 xmm4 [246])
        (and:SF (reg:SF 25 xmm4 [246])
            (reg:SF 23 xmm2 [248]))) "DEWPOINT.f":137 1849 {*andsf3}
     (nil))
(insn 237 236 238 16 (set (reg:CCFP 17 flags)
        (unspec:CCFP [
                (compare:CCFP (reg:SF 24 xmm3 [244])
                    (reg:SF 25 xmm4 [246]))
            ] UNSPEC_NOTRAP)) "DEWPOINT.f":137 54 {*cmpiusf}
     (nil))
(jump_insn 238 237 295 16 (set (pc)
        (if_then_else (unle (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref 243)
            (pc))) "DEWPOINT.f":137 682 {*jcc}
     (nil)
 -> 243)
;;  succ:       18
;;              17 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 150 156 158 164 167 169 243 245 248

;; basic block 17, loop depth 0, maybe hot
;;  prev block 16, next block 18, flags: (RTL, MODIFIED)
;;  pred:       16 (FALLTHRU)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 150 156 158 164 167 169 243 245 248
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 243 245 248
;; lr  def 	 245 249 250
(note 295 238 239 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 239 295 240 17 (set (reg:SI 1 dx [249])
        (fix:SI (reg:SF 21 xmm0 [245]))) "DEWPOINT.f":137 174 {fix_truncsfsi_sse}
     (nil))
(insn 240 239 241 17 (set (reg:SF 21 xmm0 [245])
        (float:SF (reg:SI 1 dx [249]))) "DEWPOINT.f":137 203 {*floatsisf2_mixed}
     (nil))
(insn 241 240 338 17 (set (reg:SF 23 xmm2 [248])
        (and:SF (not:SF (reg:SF 23 xmm2 [248]))
            (reg:SF 22 xmm1 [243]))) "DEWPOINT.f":137 1846 {*andnotsf3}
     (nil))
(insn 338 241 242 17 (set (reg:SF 22 xmm1 [250])
        (reg:SF 23 xmm2 [248])) "DEWPOINT.f":137 131 {*movsf_internal}
     (nil))
(insn 242 338 243 17 (set (reg:SF 21 xmm0 [245])
        (ior:SF (reg:SF 21 xmm0 [245])
            (reg:SF 22 xmm1 [250]))) "DEWPOINT.f":137 1850 {*iorsf3}
     (nil))
;;  succ:       18 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 150 156 158 164 167 169 245

;; basic block 18, loop depth 0, maybe hot
;;  prev block 17, next block 24, flags: (RTL, MODIFIED)
;;  pred:       16
;;              17 (FALLTHRU)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 150 156 158 164 167 169 245
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 158 164 245
;; lr  def 	 17 [flags] 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 242 251 252 253 254 255 256 257 258 259
(code_label 243 242 296 18 10 (nil) [1 uses])
(note 296 243 245 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 245 296 246 18 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -172 [0xffffffffffffff54])) [2 w2+0 S4 A32])
        (reg:SF 21 xmm0 [242])) "DEWPOINT.f":137 131 {*movsf_internal}
     (nil))
(insn 246 245 247 18 (set (reg:SF 21 xmm0 [251])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -172 [0xffffffffffffff54])) [2 w2+0 S4 A32])) "DEWPOINT.f":138 131 {*movsf_internal}
     (nil))
(insn 247 246 248 18 (set (reg:SI 1 dx [252])
        (fix:SI (reg:SF 21 xmm0 [251]))) "DEWPOINT.f":138 174 {fix_truncsfsi_sse}
     (nil))
(insn 248 247 249 18 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -176 [0xffffffffffffff50])) [1 jnt+0 S4 A32])
        (reg:SI 1 dx [252])) "DEWPOINT.f":138 86 {*movsi_internal}
     (nil))
(insn 249 248 250 18 (set (reg:SI 1 dx [253])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -176 [0xffffffffffffff50])) [1 jnt+0 S4 A32])) "DEWPOINT.f":139 86 {*movsi_internal}
     (nil))
(insn 250 249 251 18 (set (reg:DI 1 dx [orig:127 _41 ] [127])
        (sign_extend:DI (reg:SI 1 dx [253]))) "DEWPOINT.f":139 149 {*extendsidi2_rex64}
     (nil))
(insn 251 250 252 18 (parallel [
            (set (reg:DI 1 dx [orig:128 _42 ] [128])
                (plus:DI (reg:DI 1 dx [orig:127 _41 ] [127])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "DEWPOINT.f":139 222 {*adddi_1}
     (nil))
(insn 252 251 253 18 (set (reg:SF 22 xmm1 [orig:129 _43 ] [129])
        (mem:SF (plus:DI (plus:DI (mult:DI (reg:DI 1 dx [orig:128 _42 ] [128])
                        (const_int 4 [0x4]))
                    (reg/f:DI 6 bp))
                (const_int -8176 [0xffffffffffffe010])) [2 tdp S4 A32])) "DEWPOINT.f":139 131 {*movsf_internal}
     (nil))
(insn 253 252 254 18 (set (reg:SF 21 xmm0 [254])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [2 w1+0 S4 A32])) "DEWPOINT.f":139 131 {*movsf_internal}
     (nil))
(insn 254 253 255 18 (set (reg:SF 21 xmm0 [orig:130 _44 ] [130])
        (minus:SF (reg:SF 21 xmm0 [254])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -172 [0xffffffffffffff54])) [2 w2+0 S4 A32]))) "DEWPOINT.f":139 841 {*fop_sf_1}
     (nil))
(insn 255 254 256 18 (set (reg:SF 24 xmm3 [orig:131 _45 ] [131])
        (reg:SF 21 xmm0 [orig:130 _44 ] [130])) "DEWPOINT.f":139 131 {*movsf_internal}
     (nil))
(insn 256 255 257 18 (set (reg:SI 1 dx [255])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -176 [0xffffffffffffff50])) [1 jnt+0 S4 A32])) "DEWPOINT.f":139 86 {*movsi_internal}
     (nil))
(insn 257 256 258 18 (parallel [
            (set (reg:SI 1 dx [orig:132 _46 ] [132])
                (plus:SI (reg:SI 1 dx [255])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "DEWPOINT.f":139 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -144 [0xffffffffffffff70])) [1 jnt+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 258 257 259 18 (set (reg:DI 1 dx [orig:133 _47 ] [133])
        (sign_extend:DI (reg:SI 1 dx [orig:132 _46 ] [132]))) "DEWPOINT.f":139 149 {*extendsidi2_rex64}
     (nil))
(insn 259 258 260 18 (parallel [
            (set (reg:DI 1 dx [orig:134 _48 ] [134])
                (plus:DI (reg:DI 1 dx [orig:133 _47 ] [133])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "DEWPOINT.f":139 222 {*adddi_1}
     (nil))
(insn 260 259 261 18 (set (reg:SF 21 xmm0 [orig:135 _49 ] [135])
        (mem:SF (plus:DI (plus:DI (mult:DI (reg:DI 1 dx [orig:134 _48 ] [134])
                        (const_int 4 [0x4]))
                    (reg/f:DI 6 bp))
                (const_int -8176 [0xffffffffffffe010])) [2 tdp S4 A32])) "DEWPOINT.f":139 131 {*movsf_internal}
     (nil))
(insn 261 260 262 18 (set (reg:SI 1 dx [256])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -176 [0xffffffffffffff50])) [1 jnt+0 S4 A32])) "DEWPOINT.f":139 86 {*movsi_internal}
     (nil))
(insn 262 261 263 18 (set (reg:DI 1 dx [orig:136 _50 ] [136])
        (sign_extend:DI (reg:SI 1 dx [256]))) "DEWPOINT.f":139 149 {*extendsidi2_rex64}
     (nil))
(insn 263 262 264 18 (parallel [
            (set (reg:DI 1 dx [orig:137 _51 ] [137])
                (plus:DI (reg:DI 1 dx [orig:136 _50 ] [136])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "DEWPOINT.f":139 222 {*adddi_1}
     (nil))
(insn 264 263 265 18 (set (reg:SF 23 xmm2 [orig:138 _52 ] [138])
        (mem:SF (plus:DI (plus:DI (mult:DI (reg:DI 1 dx [orig:137 _51 ] [137])
                        (const_int 4 [0x4]))
                    (reg/f:DI 6 bp))
                (const_int -8176 [0xffffffffffffe010])) [2 tdp S4 A32])) "DEWPOINT.f":139 131 {*movsf_internal}
     (nil))
(insn 265 264 267 18 (set (reg:SF 21 xmm0 [orig:139 _53 ] [139])
        (minus:SF (reg:SF 21 xmm0 [orig:135 _49 ] [135])
            (reg:SF 23 xmm2 [orig:138 _52 ] [138]))) "DEWPOINT.f":139 841 {*fop_sf_1}
     (nil))
(insn 267 265 268 18 (set (reg:SF 21 xmm0 [orig:141 _55 ] [141])
        (mult:SF (reg:SF 21 xmm0 [orig:140 _54 ] [140])
            (reg:SF 24 xmm3 [orig:131 _45 ] [131]))) "DEWPOINT.f":139 838 {*fop_sf_comm}
     (nil))
(insn 268 267 269 18 (set (reg:SI 1 dx [257])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 j+0 S4 A32])) "DEWPOINT.f":139 86 {*movsi_internal}
     (nil))
(insn 269 268 270 18 (set (reg:DI 1 dx [orig:142 _56 ] [142])
        (sign_extend:DI (reg:SI 1 dx [257]))) "DEWPOINT.f":139 149 {*extendsidi2_rex64}
     (nil))
(insn 270 269 271 18 (parallel [
            (set (reg:DI 1 dx [orig:143 _57 ] [143])
                (mult:DI (reg:DI 1 dx [orig:142 _56 ] [142])
                    (reg:DI 41 r12 [orig:158 stride.2_88 ] [158])))
            (clobber (reg:CC 17 flags))
        ]) "DEWPOINT.f":139 349 {*muldi3_1}
     (nil))
(insn 271 270 272 18 (parallel [
            (set (reg:DI 4 si [orig:144 _58 ] [144])
                (plus:DI (reg:DI 43 r14 [orig:164 offset.3_95 ] [164])
                    (reg:DI 1 dx [orig:143 _57 ] [143])))
            (clobber (reg:CC 17 flags))
        ]) "DEWPOINT.f":139 222 {*adddi_1}
     (nil))
(insn 272 271 273 18 (set (reg:SI 1 dx [258])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "DEWPOINT.f":139 86 {*movsi_internal}
     (nil))
(insn 273 272 274 18 (set (reg:DI 1 dx [orig:145 _59 ] [145])
        (sign_extend:DI (reg:SI 1 dx [258]))) "DEWPOINT.f":139 149 {*extendsidi2_rex64}
     (nil))
(insn 274 273 275 18 (parallel [
            (set (reg:DI 4 si [orig:146 _60 ] [146])
                (plus:DI (reg:DI 4 si [orig:144 _58 ] [144])
                    (reg:DI 1 dx [orig:145 _59 ] [145])))
            (clobber (reg:CC 17 flags))
        ]) "DEWPOINT.f":139 222 {*adddi_1}
     (nil))
(insn 275 274 276 18 (set (reg:SF 21 xmm0 [orig:147 _61 ] [147])
        (plus:SF (reg:SF 21 xmm0 [orig:141 _55 ] [141])
            (reg:SF 22 xmm1 [orig:129 _43 ] [129]))) "DEWPOINT.f":139 838 {*fop_sf_comm}
     (nil))
(insn 276 275 277 18 (set (reg/f:DI 1 dx [259])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8192 [0xffffffffffffe000])) [4 td+0 S8 A64])) "DEWPOINT.f":139 85 {*movdi_internal}
     (nil))
(insn 277 276 278 18 (set (mem:SF (plus:DI (mult:DI (reg:DI 4 si [orig:146 _60 ] [146])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [259])) [2 *td_139(D) S4 A32])
        (reg:SF 21 xmm0 [orig:147 _61 ] [147])) "DEWPOINT.f":139 131 {*movsf_internal}
     (nil))
(insn 278 277 302 18 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "DEWPOINT.f":135 221 {*addsi_1}
     (nil))
(jump_insn 302 278 303 18 (set (pc)
        (label_ref 279)) "DEWPOINT.f":135 683 {jump}
     (nil)
 -> 279)
;;  succ:       11 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 150 156 158 164 167 169

(barrier 303 302 316)
;; basic block 24, loop depth 0, maybe hot
;;  prev block 18, next block 19, flags: (RTL, MODIFIED)
;;  pred:       11
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 150 156 158 164 167
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 316 303 315 24 17 (nil) [1 uses])
(note 315 316 317 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 317 315 282 24 (const_int 0 [0]) "DEWPOINT.f":139 718 {nop}
     (nil))
;;  succ:       19 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 150 156 158 164 167

;; basic block 19, loop depth 0, maybe hot
;;  prev block 24, next block 23, flags: (RTL, MODIFIED)
;;  pred:       24 [always]  (FALLTHRU)
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 150 156 158 164 167
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 282 317 283 19 7 (nil) [0 uses])
(note 283 282 284 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 284 283 304 19 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -40 [0xffffffffffffffd8])) [1 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -40 [0xffffffffffffffd8])) [1 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "DEWPOINT.f":134 221 {*addsi_1}
     (nil))
(jump_insn 304 284 305 19 (set (pc)
        (label_ref 285)) "DEWPOINT.f":134 683 {jump}
     (nil)
 -> 285)
;;  succ:       9 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 150 156 158 164 167

(barrier 305 304 313)
;; basic block 23, loop depth 0, maybe hot
;;  prev block 19, next block 20, flags: (RTL, MODIFIED)
;;  pred:       9
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 313 305 312 23 16 (nil) [1 uses])
(note 312 313 314 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 314 312 288 23 (const_int 0 [0]) "DEWPOINT.f":135 718 {nop}
     (nil))
;;  succ:       20 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 20, loop depth 0, maybe hot
;;  prev block 23, next block 1, flags: (RTL, MODIFIED)
;;  pred:       23 [always]  (FALLTHRU)
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 288 314 289 20 6 (nil) [0 uses])
(note 289 288 297 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 297 289 318 20 (const_int 0 [0]) "DEWPOINT.f":144 718 {nop}
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(note 318 297 0 NOTE_INSN_DELETED)
