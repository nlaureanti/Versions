
;; Function calpw (calpw_, funcdef_no=0, decl_uid=3769, cgraph_uid=0, symbol_order=0)

calpw (real(kind=4)[29631] * restrict pw)
{
  logical(kind=4) D.4015;
  logical(kind=4) D.4012;
  integer(kind=4) D.4009;
  integer(kind=4) D.4008;
  logical(kind=4) D.4007;
  integer(kind=4) l;
  integer(kind=4) j;
  integer(kind=4) i;
  real(kind=4) dp;
  static real(kind=4) q[1125978] [value-expr: vrbls.q];
  static real(kind=4) t[1125978] [value-expr: vrbls.t];
  static real(kind=4) v[1125978] [value-expr: vrbls.v];
  static real(kind=4) u[1125978] [value-expr: vrbls.u];
  static real(kind=4) fis[29631] [value-expr: vrbls.fis];
  static real(kind=4) res[29631] [value-expr: vrbls.res];
  static real(kind=4) pd[29631] [value-expr: vrbls.pd];
  static integer(kind=4) jend_2u [value-expr: parallel.jend_2u];
  static integer(kind=4) jsta_2l [value-expr: parallel.jsta_2l];
  static integer(kind=4) idsp[1024] [value-expr: parallel.idsp];
  static integer(kind=4) icnt[1024] [value-expr: parallel.icnt];
  static integer(kind=4) idn [value-expr: parallel.idn];
  static integer(kind=4) iup [value-expr: parallel.iup];
  static integer(kind=4) jend_m2 [value-expr: parallel.jend_m2];
  static integer(kind=4) jsta_m2 [value-expr: parallel.jsta_m2];
  static integer(kind=4) jend_m [value-expr: parallel.jend_m];
  static integer(kind=4) jsta_m [value-expr: parallel.jsta_m];
  static integer(kind=4) jend [value-expr: parallel.jend];
  static integer(kind=4) jsta [value-expr: parallel.jsta];
  static integer(kind=4) me [value-expr: parallel.me];
  static integer(kind=4) num_procs [value-expr: parallel.num_procs];
  static real(kind=4) vtm[1125978] [value-expr: masks.vtm];
  static real(kind=4) htm[1125978] [value-expr: masks.htm];
  static real(kind=4) sice[29631] [value-expr: masks.sice];
  static real(kind=4) sm[29631] [value-expr: masks.sm];
  static real(kind=4) vbm3[29631] [value-expr: masks.vbm3];
  static real(kind=4) vbm2[29631] [value-expr: masks.vbm2];
  static real(kind=4) hbm2[29631] [value-expr: masks.hbm2];
  static integer(kind=4) lmv[29631] [value-expr: loops.lmv];
  static integer(kind=4) lmh[29631] [value-expr: loops.lmh];
  static integer(kind=4) jra[484] [value-expr: loops.jra];
  static integer(kind=4) ivha[484] [value-expr: loops.ivha];
  static integer(kind=4) ivla[484] [value-expr: loops.ivla];
  static integer(kind=4) ihha[484] [value-expr: loops.ihha];
  static integer(kind=4) ihla[484] [value-expr: loops.ihla];
  static integer(kind=4) maxwv[29631] [value-expr: extra.maxwv];
  static integer(kind=4) maxwu[29631] [value-expr: extra.maxwu];
  static real(kind=4) tlmax[29631] [value-expr: extra.tlmax];
  static real(kind=4) tlmin[29631] [value-expr: extra.tlmin];
  static real(kind=4) stdrd [value-expr: extra.stdrd];
  static real(kind=4) oldrd [value-expr: extra.oldrd];
  static real(kind=4) z1000[29631] [value-expr: extra.z1000];
  static real(kind=4) qsl[29631] [value-expr: extra.qsl];
  static real(kind=4) fsl[29631] [value-expr: extra.fsl];
  static real(kind=4) ttv[29631] [value-expr: extra.ttv];
  static real(kind=4) tsl[29631] [value-expr: extra.tsl];
  static real(kind=4) pfsl[29631] [value-expr: extra.pfsl];
  static real(kind=4) ptsl[29631] [value-expr: extra.ptsl];
  static real(kind=4) pslp[29631] [value-expr: extra.pslp];
  static real(kind=4) pdvp1[29631] [value-expr: extra.pdvp1];
  static real(kind=4) pdsl[29631] [value-expr: extra.pdsl];
  static real(kind=4) t500[29631] [value-expr: extra.t500];
  static real(kind=4) slp[29631] [value-expr: extra.slp];
  static integer(kind=4) kmnt[1121266] [value-expr: extra.kmnt];
  static integer(kind=4) kmntm[38] [value-expr: extra.kmntm];
  static real(kind=4) zint[1155609] [value-expr: extra.zint];
  static real(kind=4) alpint[1155609] [value-expr: extra.alpint];
  static real(kind=4) pint[1155609] [value-expr: extra.pint];
  static logical(kind=4) spline [value-expr: ctlblk.spline];
  static integer(kind=4) nradl [value-expr: ctlblk.nradl];
  static integer(kind=4) nrads [value-expr: ctlblk.nrads];
  static integer(kind=4) nphs [value-expr: ctlblk.nphs];
  static integer(kind=4) ncp [value-expr: ctlblk.ncp];
  static integer(kind=4) nshde [value-expr: ctlblk.nshde];
  static integer(kind=4) nboco [value-expr: ctlblk.nboco];
  static integer(kind=4) idtad [value-expr: ctlblk.idtad];
  static integer(kind=4) nprec [value-expr: ctlblk.nprec];
  static integer(kind=4) nddamp [value-expr: ctlblk.nddamp];
  static integer(kind=4) ntstm [value-expr: ctlblk.ntstm];
  static integer(kind=4) ntsd [value-expr: ctlblk.ntsd];
  static real(kind=4) dt [value-expr: ctlblk.dt];
  static integer(kind=4) iout [value-expr: ctlblk.iout];
  static integer(kind=4) list [value-expr: ctlblk.list];
  static integer(kind=4) nbc [value-expr: ctlblk.nbc];
  static integer(kind=4) nfcst [value-expr: ctlblk.nfcst];
  static real(kind=4) restrt [value-expr: ctlblk.restrt];
  static real(kind=4) first [value-expr: ctlblk.first];
  static integer(kind=4) ihrst [value-expr: ctlblk.ihrst];
  static integer(kind=4) idat[3] [value-expr: ctlblk.idat];
  static real(kind=4) run [value-expr: ctlblk.run];
  static real(kind=4) sigma [value-expr: ctlblk.sigma];
  static real(kind=4) sr[29631] [value-expr: cldwtr.sr];
  static integer(kind=4) lc[29631] [value-expr: cldwtr.lc];
  static real(kind=4) ul[76] [value-expr: cldwtr.ul];
  static real(kind=4) u00[29631] [value-expr: cldwtr.u00];
  static real(kind=4) cwm[1125978] [value-expr: cldwtr.cwm];
  integer(kind=4) _1;
  integer(kind=8) _2;
  integer(kind=8) _3;
  integer(kind=8) _4;
  integer(kind=8) _5;
  integer(kind=8) _6;
  integer(kind=8) _7;
  integer(kind=8) _8;
  integer(kind=8) _9;
  real(kind=4) _10;
  integer(kind=8) _11;
  integer(kind=8) _12;
  integer(kind=8) _13;
  integer(kind=8) _14;
  integer(kind=8) _15;
  integer(kind=8) _16;
  integer(kind=8) _17;
  integer(kind=8) _18;
  real(kind=4) _19;
  integer(kind=8) _20;
  integer(kind=8) _21;
  integer(kind=8) _22;
  integer(kind=8) _23;
  integer(kind=8) _24;
  real(kind=4) _25;
  integer(kind=8) _26;
  integer(kind=8) _27;
  integer(kind=8) _28;
  integer(kind=8) _29;
  integer(kind=8) _30;
  integer(kind=8) _31;
  integer(kind=8) _32;
  integer(kind=8) _33;
  real(kind=4) _34;
  integer(kind=8) _35;
  integer(kind=8) _36;
  integer(kind=8) _37;
  integer(kind=8) _38;
  integer(kind=8) _39;
  integer(kind=8) _40;
  integer(kind=8) _41;
  integer(kind=8) _42;
  real(kind=4) _43;
  real(kind=4) _44;
  real(kind=4) _45;
  real(kind=4) _46;
  real(kind=4) _47;
  integer(kind=8) _48;
  integer(kind=8) _49;
  integer(kind=8) _50;
  integer(kind=8) _51;
  integer(kind=8) _52;
  integer(kind=8) _53;
  integer(kind=8) _54;
  integer(kind=8) _55;
  real(kind=4) _56;
  real(kind=4) _57;
  integer(kind=8) _58;
  integer(kind=8) _59;
  integer(kind=8) _60;
  integer(kind=8) _61;
  integer(kind=8) _62;
  real(kind=4) _63;
  logical(kind=4) _74;
  integer(kind=4) _75;
  integer(kind=4) _76;
  logical(kind=4) _78;
  logical(kind=4) _80;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  __builtin_memset (pw_71(D), 0, 118524);
  l_73 = 1;
;;    succ:       3

;;   basic block 3, loop depth 1
;;    pred:       2
;;                10
  # l_66 = PHI <l_73(2), l_85(10)>
  _74 = l_66 > 38;
  if (_74 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 4>; [INV]
;;    succ:       11
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  _75 = parallel.jsta;
  _76 = parallel.jend;
  j_77 = _75;
;;    succ:       5

;;   basic block 5, loop depth 2
;;    pred:       4
;;                9
  # j_65 = PHI <j_77(4), j_84(9)>
  _78 = j_65 > _76;
  if (_78 != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 6>; [INV]
;;    succ:       10
;;                6

;;   basic block 6, loop depth 2
;;    pred:       5
  i_79 = 1;
;;    succ:       7

;;   basic block 7, loop depth 3
;;    pred:       6
;;                8
  # i_64 = PHI <i_79(6), i_83(8)>
  _80 = i_64 > 119;
  if (_80 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 8>; [INV]
;;    succ:       9
;;                8

;;   basic block 8, loop depth 3
;;    pred:       7
  _1 = l_66 + 1;
  _2 = (integer(kind=8)) _1;
  _3 = _2 * 29631;
  _4 = (integer(kind=8)) j_65;
  _5 = _4 * 119;
  _6 = _3 + _5;
  _7 = (integer(kind=8)) i_64;
  _8 = _6 + _7;
  _9 = _8 + -29751;
  _10 = extra.pint[_9];
  _11 = (integer(kind=8)) l_66;
  _12 = _11 * 29631;
  _13 = (integer(kind=8)) j_65;
  _14 = _13 * 119;
  _15 = _12 + _14;
  _16 = (integer(kind=8)) i_64;
  _17 = _15 + _16;
  _18 = _17 + -29751;
  _19 = extra.pint[_18];
  dp_81 = _10 - _19;
  _20 = (integer(kind=8)) j_65;
  _21 = _20 * 119;
  _22 = (integer(kind=8)) i_64;
  _23 = _21 + _22;
  _24 = _23 + -120;
  _25 = *pw_71(D)[_24];
  _26 = (integer(kind=8)) l_66;
  _27 = _26 * 29631;
  _28 = (integer(kind=8)) j_65;
  _29 = _28 * 119;
  _30 = _27 + _29;
  _31 = (integer(kind=8)) i_64;
  _32 = _30 + _31;
  _33 = _32 + -29751;
  _34 = vrbls.q[_33];
  _35 = (integer(kind=8)) l_66;
  _36 = _35 * 29631;
  _37 = (integer(kind=8)) j_65;
  _38 = _37 * 119;
  _39 = _36 + _38;
  _40 = (integer(kind=8)) i_64;
  _41 = _39 + _40;
  _42 = _41 + -29751;
  _43 = cldwtr.cwm[_42];
  _44 = _34 + _43;
  _45 = ((_44));
  _46 = dp_81 * _45;
  _47 = _46 * 1.0204081237316131591796875e-1;
  _48 = (integer(kind=8)) l_66;
  _49 = _48 * 29631;
  _50 = (integer(kind=8)) j_65;
  _51 = _50 * 119;
  _52 = _49 + _51;
  _53 = (integer(kind=8)) i_64;
  _54 = _52 + _53;
  _55 = _54 + -29751;
  _56 = masks.htm[_55];
  _57 = _47 * _56;
  _58 = (integer(kind=8)) j_65;
  _59 = _58 * 119;
  _60 = (integer(kind=8)) i_64;
  _61 = _59 + _60;
  _62 = _61 + -120;
  _63 = _25 + _57;
  *pw_71(D)[_62] = _63;
  i_83 = i_64 + 1;
  goto <bb 7>; [INV]
;;    succ:       7

;;   basic block 9, loop depth 2
;;    pred:       7
  j_84 = j_65 + 1;
  goto <bb 5>; [INV]
;;    succ:       5

;;   basic block 10, loop depth 1
;;    pred:       5
  l_85 = l_66 + 1;
  goto <bb 3>; [INV]
;;    succ:       3

;;   basic block 11, loop depth 0
;;    pred:       3
;;    succ:       12

;;   basic block 12, loop depth 0
;;    pred:       11
<L12>:
  return;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 2 (_2 - 2 )
Partition 3 (_3 - 3 )
Partition 4 (_4 - 4 )
Partition 5 (_5 - 5 )
Partition 6 (_6 - 6 )
Partition 7 (_7 - 7 )
Partition 8 (_8 - 8 )
Partition 9 (_9 - 9 )
Partition 10 (_10 - 10 )
Partition 11 (_11 - 11 )
Partition 12 (_12 - 12 )
Partition 13 (_13 - 13 )
Partition 14 (_14 - 14 )
Partition 15 (_15 - 15 )
Partition 16 (_16 - 16 )
Partition 17 (_17 - 17 )
Partition 18 (_18 - 18 )
Partition 19 (_19 - 19 )
Partition 20 (_20 - 20 )
Partition 21 (_21 - 21 )
Partition 22 (_22 - 22 )
Partition 23 (_23 - 23 )
Partition 24 (_24 - 24 )
Partition 25 (_25 - 25 )
Partition 26 (_26 - 26 )
Partition 27 (_27 - 27 )
Partition 28 (_28 - 28 )
Partition 29 (_29 - 29 )
Partition 30 (_30 - 30 )
Partition 31 (_31 - 31 )
Partition 32 (_32 - 32 )
Partition 33 (_33 - 33 )
Partition 34 (_34 - 34 )
Partition 35 (_35 - 35 )
Partition 36 (_36 - 36 )
Partition 37 (_37 - 37 )
Partition 38 (_38 - 38 )
Partition 39 (_39 - 39 )
Partition 40 (_40 - 40 )
Partition 41 (_41 - 41 )
Partition 42 (_42 - 42 )
Partition 43 (_43 - 43 )
Partition 44 (_44 - 44 )
Partition 45 (_45 - 45 )
Partition 46 (_46 - 46 )
Partition 47 (_47 - 47 )
Partition 48 (_48 - 48 )
Partition 49 (_49 - 49 )
Partition 50 (_50 - 50 )
Partition 51 (_51 - 51 )
Partition 52 (_52 - 52 )
Partition 53 (_53 - 53 )
Partition 54 (_54 - 54 )
Partition 55 (_55 - 55 )
Partition 56 (_56 - 56 )
Partition 57 (_57 - 57 )
Partition 58 (_58 - 58 )
Partition 59 (_59 - 59 )
Partition 60 (_60 - 60 )
Partition 61 (_61 - 61 )
Partition 62 (_62 - 62 )
Partition 63 (_63 - 63 )
Partition 64 (i_64 - 64 )
Partition 65 (j_65 - 65 )
Partition 66 (l_66 - 66 )
Partition 71 (pw_71(D) - 71 )
Partition 73 (l_73 - 73 )
Partition 74 (_74 - 74 )
Partition 75 (_75 - 75 )
Partition 76 (_76 - 76 )
Partition 77 (j_77 - 77 )
Partition 78 (_78 - 78 )
Partition 79 (i_79 - 79 )
Partition 80 (_80 - 80 )
Partition 81 (dp_81 - 81 )
Partition 83 (i_83 - 83 )
Partition 84 (j_84 - 84 )
Partition 85 (l_85 - 85 )


Coalescible Partition map 

Partition 0, base 0 (i_64 - 64 79 83 )
Partition 1, base 1 (j_65 - 65 77 84 )
Partition 2, base 2 (l_66 - 66 73 85 )
Partition 3, base 3 (pw_71(D) - 71 )


Partition map 

Partition 0 (i_64 - 64 )
Partition 1 (j_65 - 65 )
Partition 2 (l_66 - 66 )
Partition 3 (pw_71(D) - 71 )
Partition 4 (l_73 - 73 )
Partition 5 (j_77 - 77 )
Partition 6 (i_79 - 79 )
Partition 7 (i_83 - 83 )
Partition 8 (j_84 - 84 )
Partition 9 (l_85 - 85 )


Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483646, 0) l_66 <-> l_73
(2147483646, 0) l_66 <-> l_85
(2147483646, 0) j_65 <-> j_77
(2147483646, 0) j_65 <-> j_84
(2147483646, 0) i_64 <-> i_79
(2147483646, 0) i_64 <-> i_83

Partition map 

Partition 0 (i_64 - 64 )
Partition 1 (j_65 - 65 )
Partition 2 (l_66 - 66 )
Partition 3 (pw_71(D) - 71 )
Partition 4 (l_73 - 73 )
Partition 5 (j_77 - 77 )
Partition 6 (i_79 - 79 )
Partition 7 (i_83 - 83 )
Partition 8 (j_84 - 84 )
Partition 9 (l_85 - 85 )

Coalesce list: (66)l_66 & (73)l_73 [map: 2, 4] : Success -> 2
Coalesce list: (66)l_66 & (85)l_85 [map: 2, 9] : Success -> 2
Coalesce list: (65)j_65 & (77)j_77 [map: 1, 5] : Success -> 1
Coalesce list: (65)j_65 & (84)j_84 [map: 1, 8] : Success -> 1
Coalesce list: (64)i_64 & (79)i_79 [map: 0, 6] : Success -> 0
Coalesce list: (64)i_64 & (83)i_83 [map: 0, 7] : Success -> 0
After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (_2 - 2 )
Partition 2 (_3 - 3 )
Partition 3 (_4 - 4 )
Partition 4 (_5 - 5 )
Partition 5 (_6 - 6 )
Partition 6 (_7 - 7 )
Partition 7 (_8 - 8 )
Partition 8 (_9 - 9 )
Partition 9 (_10 - 10 )
Partition 10 (_11 - 11 )
Partition 11 (_12 - 12 )
Partition 12 (_13 - 13 )
Partition 13 (_14 - 14 )
Partition 14 (_15 - 15 )
Partition 15 (_16 - 16 )
Partition 16 (_17 - 17 )
Partition 17 (_18 - 18 )
Partition 18 (_19 - 19 )
Partition 19 (_20 - 20 )
Partition 20 (_21 - 21 )
Partition 21 (_22 - 22 )
Partition 22 (_23 - 23 )
Partition 23 (_24 - 24 )
Partition 24 (_25 - 25 )
Partition 25 (_26 - 26 )
Partition 26 (_27 - 27 )
Partition 27 (_28 - 28 )
Partition 28 (_29 - 29 )
Partition 29 (_30 - 30 )
Partition 30 (_31 - 31 )
Partition 31 (_32 - 32 )
Partition 32 (_33 - 33 )
Partition 33 (_34 - 34 )
Partition 34 (_35 - 35 )
Partition 35 (_36 - 36 )
Partition 36 (_37 - 37 )
Partition 37 (_38 - 38 )
Partition 38 (_39 - 39 )
Partition 39 (_40 - 40 )
Partition 40 (_41 - 41 )
Partition 41 (_42 - 42 )
Partition 42 (_43 - 43 )
Partition 43 (_44 - 44 )
Partition 44 (_45 - 45 )
Partition 45 (_46 - 46 )
Partition 46 (_47 - 47 )
Partition 47 (_48 - 48 )
Partition 48 (_49 - 49 )
Partition 49 (_50 - 50 )
Partition 50 (_51 - 51 )
Partition 51 (_52 - 52 )
Partition 52 (_53 - 53 )
Partition 53 (_54 - 54 )
Partition 54 (_55 - 55 )
Partition 55 (_56 - 56 )
Partition 56 (_57 - 57 )
Partition 57 (_58 - 58 )
Partition 58 (_59 - 59 )
Partition 59 (_60 - 60 )
Partition 60 (_61 - 61 )
Partition 61 (_62 - 62 )
Partition 62 (_63 - 63 )
Partition 63 (i_64 - 64 79 83 )
Partition 64 (j_65 - 65 77 84 )
Partition 65 (l_66 - 66 73 85 )
Partition 66 (pw_71(D) - 71 )
Partition 67 (_74 - 74 )
Partition 68 (_75 - 75 )
Partition 69 (_76 - 76 )
Partition 70 (_78 - 78 )
Partition 71 (_80 - 80 )
Partition 72 (dp_81 - 81 )

calpw (real(kind=4)[29631] * restrict pw)
{
  logical(kind=4) D.4015;
  logical(kind=4) D.4012;
  integer(kind=4) D.4009;
  integer(kind=4) D.4008;
  logical(kind=4) D.4007;
  integer(kind=4) l;
  integer(kind=4) j;
  integer(kind=4) i;
  real(kind=4) dp;
  static real(kind=4) q[1125978] [value-expr: vrbls.q];
  static real(kind=4) t[1125978] [value-expr: vrbls.t];
  static real(kind=4) v[1125978] [value-expr: vrbls.v];
  static real(kind=4) u[1125978] [value-expr: vrbls.u];
  static real(kind=4) fis[29631] [value-expr: vrbls.fis];
  static real(kind=4) res[29631] [value-expr: vrbls.res];
  static real(kind=4) pd[29631] [value-expr: vrbls.pd];
  static integer(kind=4) jend_2u [value-expr: parallel.jend_2u];
  static integer(kind=4) jsta_2l [value-expr: parallel.jsta_2l];
  static integer(kind=4) idsp[1024] [value-expr: parallel.idsp];
  static integer(kind=4) icnt[1024] [value-expr: parallel.icnt];
  static integer(kind=4) idn [value-expr: parallel.idn];
  static integer(kind=4) iup [value-expr: parallel.iup];
  static integer(kind=4) jend_m2 [value-expr: parallel.jend_m2];
  static integer(kind=4) jsta_m2 [value-expr: parallel.jsta_m2];
  static integer(kind=4) jend_m [value-expr: parallel.jend_m];
  static integer(kind=4) jsta_m [value-expr: parallel.jsta_m];
  static integer(kind=4) jend [value-expr: parallel.jend];
  static integer(kind=4) jsta [value-expr: parallel.jsta];
  static integer(kind=4) me [value-expr: parallel.me];
  static integer(kind=4) num_procs [value-expr: parallel.num_procs];
  static real(kind=4) vtm[1125978] [value-expr: masks.vtm];
  static real(kind=4) htm[1125978] [value-expr: masks.htm];
  static real(kind=4) sice[29631] [value-expr: masks.sice];
  static real(kind=4) sm[29631] [value-expr: masks.sm];
  static real(kind=4) vbm3[29631] [value-expr: masks.vbm3];
  static real(kind=4) vbm2[29631] [value-expr: masks.vbm2];
  static real(kind=4) hbm2[29631] [value-expr: masks.hbm2];
  static integer(kind=4) lmv[29631] [value-expr: loops.lmv];
  static integer(kind=4) lmh[29631] [value-expr: loops.lmh];
  static integer(kind=4) jra[484] [value-expr: loops.jra];
  static integer(kind=4) ivha[484] [value-expr: loops.ivha];
  static integer(kind=4) ivla[484] [value-expr: loops.ivla];
  static integer(kind=4) ihha[484] [value-expr: loops.ihha];
  static integer(kind=4) ihla[484] [value-expr: loops.ihla];
  static integer(kind=4) maxwv[29631] [value-expr: extra.maxwv];
  static integer(kind=4) maxwu[29631] [value-expr: extra.maxwu];
  static real(kind=4) tlmax[29631] [value-expr: extra.tlmax];
  static real(kind=4) tlmin[29631] [value-expr: extra.tlmin];
  static real(kind=4) stdrd [value-expr: extra.stdrd];
  static real(kind=4) oldrd [value-expr: extra.oldrd];
  static real(kind=4) z1000[29631] [value-expr: extra.z1000];
  static real(kind=4) qsl[29631] [value-expr: extra.qsl];
  static real(kind=4) fsl[29631] [value-expr: extra.fsl];
  static real(kind=4) ttv[29631] [value-expr: extra.ttv];
  static real(kind=4) tsl[29631] [value-expr: extra.tsl];
  static real(kind=4) pfsl[29631] [value-expr: extra.pfsl];
  static real(kind=4) ptsl[29631] [value-expr: extra.ptsl];
  static real(kind=4) pslp[29631] [value-expr: extra.pslp];
  static real(kind=4) pdvp1[29631] [value-expr: extra.pdvp1];
  static real(kind=4) pdsl[29631] [value-expr: extra.pdsl];
  static real(kind=4) t500[29631] [value-expr: extra.t500];
  static real(kind=4) slp[29631] [value-expr: extra.slp];
  static integer(kind=4) kmnt[1121266] [value-expr: extra.kmnt];
  static integer(kind=4) kmntm[38] [value-expr: extra.kmntm];
  static real(kind=4) zint[1155609] [value-expr: extra.zint];
  static real(kind=4) alpint[1155609] [value-expr: extra.alpint];
  static real(kind=4) pint[1155609] [value-expr: extra.pint];
  static logical(kind=4) spline [value-expr: ctlblk.spline];
  static integer(kind=4) nradl [value-expr: ctlblk.nradl];
  static integer(kind=4) nrads [value-expr: ctlblk.nrads];
  static integer(kind=4) nphs [value-expr: ctlblk.nphs];
  static integer(kind=4) ncp [value-expr: ctlblk.ncp];
  static integer(kind=4) nshde [value-expr: ctlblk.nshde];
  static integer(kind=4) nboco [value-expr: ctlblk.nboco];
  static integer(kind=4) idtad [value-expr: ctlblk.idtad];
  static integer(kind=4) nprec [value-expr: ctlblk.nprec];
  static integer(kind=4) nddamp [value-expr: ctlblk.nddamp];
  static integer(kind=4) ntstm [value-expr: ctlblk.ntstm];
  static integer(kind=4) ntsd [value-expr: ctlblk.ntsd];
  static real(kind=4) dt [value-expr: ctlblk.dt];
  static integer(kind=4) iout [value-expr: ctlblk.iout];
  static integer(kind=4) list [value-expr: ctlblk.list];
  static integer(kind=4) nbc [value-expr: ctlblk.nbc];
  static integer(kind=4) nfcst [value-expr: ctlblk.nfcst];
  static real(kind=4) restrt [value-expr: ctlblk.restrt];
  static real(kind=4) first [value-expr: ctlblk.first];
  static integer(kind=4) ihrst [value-expr: ctlblk.ihrst];
  static integer(kind=4) idat[3] [value-expr: ctlblk.idat];
  static real(kind=4) run [value-expr: ctlblk.run];
  static real(kind=4) sigma [value-expr: ctlblk.sigma];
  static real(kind=4) sr[29631] [value-expr: cldwtr.sr];
  static integer(kind=4) lc[29631] [value-expr: cldwtr.lc];
  static real(kind=4) ul[76] [value-expr: cldwtr.ul];
  static real(kind=4) u00[29631] [value-expr: cldwtr.u00];
  static real(kind=4) cwm[1125978] [value-expr: cldwtr.cwm];
  integer(kind=4) _1;
  integer(kind=8) _2;
  integer(kind=8) _3;
  integer(kind=8) _4;
  integer(kind=8) _5;
  integer(kind=8) _6;
  integer(kind=8) _7;
  integer(kind=8) _8;
  integer(kind=8) _9;
  real(kind=4) _10;
  integer(kind=8) _11;
  integer(kind=8) _12;
  integer(kind=8) _13;
  integer(kind=8) _14;
  integer(kind=8) _15;
  integer(kind=8) _16;
  integer(kind=8) _17;
  integer(kind=8) _18;
  real(kind=4) _19;
  integer(kind=8) _20;
  integer(kind=8) _21;
  integer(kind=8) _22;
  integer(kind=8) _23;
  integer(kind=8) _24;
  real(kind=4) _25;
  integer(kind=8) _26;
  integer(kind=8) _27;
  integer(kind=8) _28;
  integer(kind=8) _29;
  integer(kind=8) _30;
  integer(kind=8) _31;
  integer(kind=8) _32;
  integer(kind=8) _33;
  real(kind=4) _34;
  integer(kind=8) _35;
  integer(kind=8) _36;
  integer(kind=8) _37;
  integer(kind=8) _38;
  integer(kind=8) _39;
  integer(kind=8) _40;
  integer(kind=8) _41;
  integer(kind=8) _42;
  real(kind=4) _43;
  real(kind=4) _44;
  real(kind=4) _45;
  real(kind=4) _46;
  real(kind=4) _47;
  integer(kind=8) _48;
  integer(kind=8) _49;
  integer(kind=8) _50;
  integer(kind=8) _51;
  integer(kind=8) _52;
  integer(kind=8) _53;
  integer(kind=8) _54;
  integer(kind=8) _55;
  real(kind=4) _56;
  real(kind=4) _57;
  integer(kind=8) _58;
  integer(kind=8) _59;
  integer(kind=8) _60;
  integer(kind=8) _61;
  integer(kind=8) _62;
  real(kind=4) _63;
  logical(kind=4) _74;
  integer(kind=4) _75;
  integer(kind=4) _76;
  logical(kind=4) _78;
  logical(kind=4) _80;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  __builtin_memset (pw_71(D), 0, 118524);
  l_73 = 1;
;;    succ:       3

;;   basic block 3, loop depth 1
;;    pred:       2
;;                10
  # l_66 = PHI <l_73(2), l_85(10)>
  _74 = l_66 > 38;
  if (_74 != 0)
    goto <bb 11>; [INV]
  else
    goto <bb 4>; [INV]
;;    succ:       11
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  _75 = parallel.jsta;
  _76 = parallel.jend;
  j_77 = _75;
;;    succ:       5

;;   basic block 5, loop depth 2
;;    pred:       4
;;                9
  # j_65 = PHI <j_77(4), j_84(9)>
  _78 = j_65 > _76;
  if (_78 != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 6>; [INV]
;;    succ:       10
;;                6

;;   basic block 6, loop depth 2
;;    pred:       5
  i_79 = 1;
;;    succ:       7

;;   basic block 7, loop depth 3
;;    pred:       6
;;                8
  # i_64 = PHI <i_79(6), i_83(8)>
  _80 = i_64 > 119;
  if (_80 != 0)
    goto <bb 9>; [INV]
  else
    goto <bb 8>; [INV]
;;    succ:       9
;;                8

;;   basic block 8, loop depth 3
;;    pred:       7
  _1 = l_66 + 1;
  _2 = (integer(kind=8)) _1;
  _3 = _2 * 29631;
  _4 = (integer(kind=8)) j_65;
  _5 = _4 * 119;
  _6 = _3 + _5;
  _7 = (integer(kind=8)) i_64;
  _8 = _6 + _7;
  _9 = _8 + -29751;
  _10 = extra.pint[_9];
  _11 = (integer(kind=8)) l_66;
  _12 = _11 * 29631;
  _13 = (integer(kind=8)) j_65;
  _14 = _13 * 119;
  _15 = _12 + _14;
  _16 = (integer(kind=8)) i_64;
  _17 = _15 + _16;
  _18 = _17 + -29751;
  _19 = extra.pint[_18];
  dp_81 = _10 - _19;
  _20 = (integer(kind=8)) j_65;
  _21 = _20 * 119;
  _22 = (integer(kind=8)) i_64;
  _23 = _21 + _22;
  _24 = _23 + -120;
  _25 = *pw_71(D)[_24];
  _26 = (integer(kind=8)) l_66;
  _27 = _26 * 29631;
  _28 = (integer(kind=8)) j_65;
  _29 = _28 * 119;
  _30 = _27 + _29;
  _31 = (integer(kind=8)) i_64;
  _32 = _30 + _31;
  _33 = _32 + -29751;
  _34 = vrbls.q[_33];
  _35 = (integer(kind=8)) l_66;
  _36 = _35 * 29631;
  _37 = (integer(kind=8)) j_65;
  _38 = _37 * 119;
  _39 = _36 + _38;
  _40 = (integer(kind=8)) i_64;
  _41 = _39 + _40;
  _42 = _41 + -29751;
  _43 = cldwtr.cwm[_42];
  _44 = _34 + _43;
  _45 = ((_44));
  _46 = dp_81 * _45;
  _47 = _46 * 1.0204081237316131591796875e-1;
  _48 = (integer(kind=8)) l_66;
  _49 = _48 * 29631;
  _50 = (integer(kind=8)) j_65;
  _51 = _50 * 119;
  _52 = _49 + _51;
  _53 = (integer(kind=8)) i_64;
  _54 = _52 + _53;
  _55 = _54 + -29751;
  _56 = masks.htm[_55];
  _57 = _47 * _56;
  _58 = (integer(kind=8)) j_65;
  _59 = _58 * 119;
  _60 = (integer(kind=8)) i_64;
  _61 = _59 + _60;
  _62 = _61 + -120;
  _63 = _25 + _57;
  *pw_71(D)[_62] = _63;
  i_83 = i_64 + 1;
  goto <bb 7>; [INV]
;;    succ:       7

;;   basic block 9, loop depth 2
;;    pred:       7
  j_84 = j_65 + 1;
  goto <bb 5>; [INV]
;;    succ:       5

;;   basic block 10, loop depth 1
;;    pred:       5
  l_85 = l_66 + 1;
  goto <bb 3>; [INV]
;;    succ:       3

;;   basic block 11, loop depth 0
;;    pred:       3
;;    succ:       12

;;   basic block 12, loop depth 0
;;    pred:       11
<L12>:
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; __builtin_memset (pw_71(D), 0, 118524);

(insn 6 5 7 (set (reg/f:DI 155)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [3 pw+0 S8 A64])) "CALPW.f":82 -1
     (nil))

(insn 7 6 8 (set (reg:DI 156)
        (reg/f:DI 155)) "CALPW.f":82 -1
     (nil))

(insn 8 7 9 (set (reg:DI 157)
        (const_int 118524 [0x1cefc])) "CALPW.f":82 -1
     (nil))

(insn 9 8 10 (set (reg:DI 1 dx)
        (reg:DI 157)) "CALPW.f":82 -1
     (nil))

(insn 10 9 11 (set (reg:SI 4 si)
        (const_int 0 [0])) "CALPW.f":82 -1
     (nil))

(insn 11 10 12 (set (reg:DI 5 di)
        (reg:DI 156)) "CALPW.f":82 -1
     (nil))

(call_insn 12 11 13 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memset") [flags 0x41]  <function_decl 0x7fb88a5f9900 __builtin_memset>) [0 __builtin_memset S1 A8])
            (const_int 0 [0]))) "CALPW.f":82 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))

(insn 13 12 14 (set (reg:DI 158)
        (reg:DI 0 ax)) "CALPW.f":82 -1
     (nil))

(insn 14 13 0 (set (reg:DI 159)
        (reg:DI 158)) "CALPW.f":82 -1
     (nil))

;; l_73 = 1;

(insn 15 14 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
        (const_int 1 [0x1])) "CALPW.f":89 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; _74 = l_66 > 38;

(insn 17 16 18 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
            (const_int 38 [0x26]))) "CALPW.f":89 -1
     (nil))

(insn 18 17 19 (set (reg:QI 160)
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALPW.f":89 -1
     (nil))

(insn 19 18 0 (set (reg:SI 150 [ _74 ])
        (zero_extend:SI (reg:QI 160))) "CALPW.f":89 -1
     (nil))

;; if (_74 != 0)

(insn 20 19 21 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 150 [ _74 ])
            (const_int 0 [0]))) "CALPW.f":89 -1
     (nil))

(jump_insn 21 20 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "CALPW.f":89 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; _75 = parallel.jsta;

(insn 23 22 0 (set (reg:SI 151 [ _75 ])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7fb88a7622d0 parallel>)
                    (const_int 8 [0x8]))) [1 parallel.jsta+0 S4 A64])) "CALPW.f":90 -1
     (nil))

;; _76 = parallel.jend;

(insn 24 23 0 (set (reg:SI 152 [ _76 ])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7fb88a7622d0 parallel>)
                    (const_int 12 [0xc]))) [1 parallel.jend+0 S4 A32])) "CALPW.f":90 -1
     (nil))

;; j_77 = _75;

(insn 25 24 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
        (reg:SI 151 [ _75 ])) "CALPW.f":90 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; _78 = j_65 > _76;

(insn 27 26 28 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (reg:SI 152 [ _76 ]))) "CALPW.f":90 -1
     (nil))

(insn 28 27 29 (set (reg:QI 161)
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALPW.f":90 -1
     (nil))

(insn 29 28 0 (set (reg:SI 153 [ _78 ])
        (zero_extend:SI (reg:QI 161))) "CALPW.f":90 -1
     (nil))

;; if (_78 != 0)

(insn 30 29 31 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 153 [ _78 ])
            (const_int 0 [0]))) "CALPW.f":90 -1
     (nil))

(jump_insn 31 30 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "CALPW.f":90 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; i_79 = 1;

(insn 33 32 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
        (const_int 1 [0x1])) "CALPW.f":91 -1
     (nil))

;; Generating RTL for gimple basic block 7

;; _80 = i_64 > 119;

(insn 35 34 36 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
            (const_int 119 [0x77]))) "CALPW.f":91 -1
     (nil))

(insn 36 35 37 (set (reg:QI 162)
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALPW.f":91 -1
     (nil))

(insn 37 36 0 (set (reg:SI 154 [ _80 ])
        (zero_extend:SI (reg:QI 162))) "CALPW.f":91 -1
     (nil))

;; if (_80 != 0)

(insn 38 37 39 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 154 [ _80 ])
            (const_int 0 [0]))) "CALPW.f":91 -1
     (nil))

(jump_insn 39 38 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "CALPW.f":91 -1
     (nil))

;; Generating RTL for gimple basic block 8

;; _1 = l_66 + 1;

(insn 41 40 42 (set (reg:SI 163)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALPW.f":92 -1
     (nil))

(insn 42 41 0 (parallel [
            (set (reg:SI 87 [ _1 ])
                (plus:SI (reg:SI 163)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALPW.f":92 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))

;; _2 = (integer(kind=8)) _1;

(insn 43 42 0 (set (reg:DI 88 [ _2 ])
        (sign_extend:DI (reg:SI 87 [ _1 ]))) "CALPW.f":92 -1
     (nil))

;; _3 = _2 * 29631;

(insn 44 43 0 (parallel [
            (set (reg:DI 89 [ _3 ])
                (mult:DI (reg:DI 88 [ _2 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALPW.f":92 -1
     (nil))

;; _4 = (integer(kind=8)) j_65;

(insn 45 44 46 (set (reg:SI 164)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALPW.f":92 -1
     (nil))

(insn 46 45 0 (set (reg:DI 90 [ _4 ])
        (sign_extend:DI (reg:SI 164))) "CALPW.f":92 -1
     (nil))

;; _5 = _4 * 119;

(insn 47 46 0 (parallel [
            (set (reg:DI 91 [ _5 ])
                (mult:DI (reg:DI 90 [ _4 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALPW.f":92 -1
     (nil))

;; _6 = _3 + _5;

(insn 48 47 0 (parallel [
            (set (reg:DI 92 [ _6 ])
                (plus:DI (reg:DI 89 [ _3 ])
                    (reg:DI 91 [ _5 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALPW.f":92 -1
     (nil))

;; _7 = (integer(kind=8)) i_64;

(insn 49 48 50 (set (reg:SI 165)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALPW.f":92 -1
     (nil))

(insn 50 49 0 (set (reg:DI 93 [ _7 ])
        (sign_extend:DI (reg:SI 165))) "CALPW.f":92 -1
     (nil))

;; _8 = _6 + _7;

(insn 51 50 0 (parallel [
            (set (reg:DI 94 [ _8 ])
                (plus:DI (reg:DI 92 [ _6 ])
                    (reg:DI 93 [ _7 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALPW.f":92 -1
     (nil))

;; _9 = _8 + -29751;

(insn 52 51 0 (parallel [
            (set (reg:DI 95 [ _9 ])
                (plus:DI (reg:DI 94 [ _8 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALPW.f":92 -1
     (nil))

;; _10 = extra.pint[_9];

(insn 53 52 54 (set (reg/f:DI 166)
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7fb88a756bd0 extra>)) "CALPW.f":92 -1
     (nil))

(insn 54 53 0 (set (reg:SF 96 [ _10 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 95 [ _9 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 166)) [2 extra.pint S4 A32])) "CALPW.f":92 -1
     (nil))

;; _11 = (integer(kind=8)) l_66;

(insn 55 54 56 (set (reg:SI 167)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALPW.f":92 -1
     (nil))

(insn 56 55 0 (set (reg:DI 97 [ _11 ])
        (sign_extend:DI (reg:SI 167))) "CALPW.f":92 -1
     (nil))

;; _12 = _11 * 29631;

(insn 57 56 0 (parallel [
            (set (reg:DI 98 [ _12 ])
                (mult:DI (reg:DI 97 [ _11 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALPW.f":92 -1
     (nil))

;; _13 = (integer(kind=8)) j_65;

(insn 58 57 59 (set (reg:SI 168)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALPW.f":92 -1
     (nil))

(insn 59 58 0 (set (reg:DI 99 [ _13 ])
        (sign_extend:DI (reg:SI 168))) "CALPW.f":92 -1
     (nil))

;; _14 = _13 * 119;

(insn 60 59 0 (parallel [
            (set (reg:DI 100 [ _14 ])
                (mult:DI (reg:DI 99 [ _13 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALPW.f":92 -1
     (nil))

;; _15 = _12 + _14;

(insn 61 60 0 (parallel [
            (set (reg:DI 101 [ _15 ])
                (plus:DI (reg:DI 98 [ _12 ])
                    (reg:DI 100 [ _14 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALPW.f":92 -1
     (nil))

;; _16 = (integer(kind=8)) i_64;

(insn 62 61 63 (set (reg:SI 169)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALPW.f":92 -1
     (nil))

(insn 63 62 0 (set (reg:DI 102 [ _16 ])
        (sign_extend:DI (reg:SI 169))) "CALPW.f":92 -1
     (nil))

;; _17 = _15 + _16;

(insn 64 63 0 (parallel [
            (set (reg:DI 103 [ _17 ])
                (plus:DI (reg:DI 101 [ _15 ])
                    (reg:DI 102 [ _16 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALPW.f":92 -1
     (nil))

;; _18 = _17 + -29751;

(insn 65 64 0 (parallel [
            (set (reg:DI 104 [ _18 ])
                (plus:DI (reg:DI 103 [ _17 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALPW.f":92 -1
     (nil))

;; _19 = extra.pint[_18];

(insn 66 65 67 (set (reg/f:DI 170)
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7fb88a756bd0 extra>)) "CALPW.f":92 -1
     (nil))

(insn 67 66 0 (set (reg:SF 105 [ _19 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 104 [ _18 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 170)) [2 extra.pint S4 A32])) "CALPW.f":92 -1
     (nil))

;; dp_81 = _10 - _19;

(insn 68 67 69 (set (reg:SF 171)
        (minus:SF (reg:SF 96 [ _10 ])
            (reg:SF 105 [ _19 ]))) "CALPW.f":92 -1
     (nil))

(insn 69 68 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 dp+0 S4 A32])
        (reg:SF 171)) "CALPW.f":92 -1
     (nil))

;; _20 = (integer(kind=8)) j_65;

(insn 70 69 71 (set (reg:SI 172)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALPW.f":93 -1
     (nil))

(insn 71 70 0 (set (reg:DI 106 [ _20 ])
        (sign_extend:DI (reg:SI 172))) "CALPW.f":93 -1
     (nil))

;; _21 = _20 * 119;

(insn 72 71 0 (parallel [
            (set (reg:DI 107 [ _21 ])
                (mult:DI (reg:DI 106 [ _20 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALPW.f":93 -1
     (nil))

;; _22 = (integer(kind=8)) i_64;

(insn 73 72 74 (set (reg:SI 173)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALPW.f":93 -1
     (nil))

(insn 74 73 0 (set (reg:DI 108 [ _22 ])
        (sign_extend:DI (reg:SI 173))) "CALPW.f":93 -1
     (nil))

;; _23 = _21 + _22;

(insn 75 74 0 (parallel [
            (set (reg:DI 109 [ _23 ])
                (plus:DI (reg:DI 107 [ _21 ])
                    (reg:DI 108 [ _22 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALPW.f":93 -1
     (nil))

;; _24 = _23 + -120;

(insn 76 75 0 (parallel [
            (set (reg:DI 110 [ _24 ])
                (plus:DI (reg:DI 109 [ _23 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALPW.f":93 -1
     (nil))

;; _25 = *pw_71(D)[_24];

(insn 77 76 78 (set (reg/f:DI 174)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [3 pw+0 S8 A64])) "CALPW.f":93 -1
     (nil))

(insn 78 77 0 (set (reg:SF 111 [ _25 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 110 [ _24 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 174)) [2 *pw_71(D) S4 A32])) "CALPW.f":93 -1
     (nil))

;; _26 = (integer(kind=8)) l_66;

(insn 79 78 80 (set (reg:SI 175)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALPW.f":93 -1
     (nil))

(insn 80 79 0 (set (reg:DI 112 [ _26 ])
        (sign_extend:DI (reg:SI 175))) "CALPW.f":93 -1
     (nil))

;; _27 = _26 * 29631;

(insn 81 80 0 (parallel [
            (set (reg:DI 113 [ _27 ])
                (mult:DI (reg:DI 112 [ _26 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALPW.f":93 -1
     (nil))

;; _28 = (integer(kind=8)) j_65;

(insn 82 81 83 (set (reg:SI 176)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALPW.f":93 -1
     (nil))

(insn 83 82 0 (set (reg:DI 114 [ _28 ])
        (sign_extend:DI (reg:SI 176))) "CALPW.f":93 -1
     (nil))

;; _29 = _28 * 119;

(insn 84 83 0 (parallel [
            (set (reg:DI 115 [ _29 ])
                (mult:DI (reg:DI 114 [ _28 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALPW.f":93 -1
     (nil))

;; _30 = _27 + _29;

(insn 85 84 0 (parallel [
            (set (reg:DI 116 [ _30 ])
                (plus:DI (reg:DI 113 [ _27 ])
                    (reg:DI 115 [ _29 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALPW.f":93 -1
     (nil))

;; _31 = (integer(kind=8)) i_64;

(insn 86 85 87 (set (reg:SI 177)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALPW.f":93 -1
     (nil))

(insn 87 86 0 (set (reg:DI 117 [ _31 ])
        (sign_extend:DI (reg:SI 177))) "CALPW.f":93 -1
     (nil))

;; _32 = _30 + _31;

(insn 88 87 0 (parallel [
            (set (reg:DI 118 [ _32 ])
                (plus:DI (reg:DI 116 [ _30 ])
                    (reg:DI 117 [ _31 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALPW.f":93 -1
     (nil))

;; _33 = _32 + -29751;

(insn 89 88 0 (parallel [
            (set (reg:DI 119 [ _33 ])
                (plus:DI (reg:DI 118 [ _32 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALPW.f":93 -1
     (nil))

;; _34 = vrbls.q[_33];

(insn 90 89 91 (set (reg/f:DI 178)
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7fb88a762b40 vrbls>)) "CALPW.f":93 -1
     (nil))

(insn 91 90 92 (parallel [
            (set (reg:DI 179)
                (plus:DI (reg:DI 119 [ _33 ])
                    (const_int 3466827 [0x34e64b])))
            (clobber (reg:CC 17 flags))
        ]) "CALPW.f":93 -1
     (nil))

(insn 92 91 0 (set (reg:SF 120 [ _34 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 179)
                    (const_int 4 [0x4]))
                (reg/f:DI 178)) [2 vrbls.q S4 A32])) "CALPW.f":93 -1
     (nil))

;; _35 = (integer(kind=8)) l_66;

(insn 93 92 94 (set (reg:SI 180)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALPW.f":93 -1
     (nil))

(insn 94 93 0 (set (reg:DI 121 [ _35 ])
        (sign_extend:DI (reg:SI 180))) "CALPW.f":93 -1
     (nil))

;; _36 = _35 * 29631;

(insn 95 94 0 (parallel [
            (set (reg:DI 122 [ _36 ])
                (mult:DI (reg:DI 121 [ _35 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALPW.f":93 -1
     (nil))

;; _37 = (integer(kind=8)) j_65;

(insn 96 95 97 (set (reg:SI 181)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALPW.f":93 -1
     (nil))

(insn 97 96 0 (set (reg:DI 123 [ _37 ])
        (sign_extend:DI (reg:SI 181))) "CALPW.f":93 -1
     (nil))

;; _38 = _37 * 119;

(insn 98 97 0 (parallel [
            (set (reg:DI 124 [ _38 ])
                (mult:DI (reg:DI 123 [ _37 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALPW.f":93 -1
     (nil))

;; _39 = _36 + _38;

(insn 99 98 0 (parallel [
            (set (reg:DI 125 [ _39 ])
                (plus:DI (reg:DI 122 [ _36 ])
                    (reg:DI 124 [ _38 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALPW.f":93 -1
     (nil))

;; _40 = (integer(kind=8)) i_64;

(insn 100 99 101 (set (reg:SI 182)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALPW.f":93 -1
     (nil))

(insn 101 100 0 (set (reg:DI 126 [ _40 ])
        (sign_extend:DI (reg:SI 182))) "CALPW.f":93 -1
     (nil))

;; _41 = _39 + _40;

(insn 102 101 0 (parallel [
            (set (reg:DI 127 [ _41 ])
                (plus:DI (reg:DI 125 [ _39 ])
                    (reg:DI 126 [ _40 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALPW.f":93 -1
     (nil))

;; _42 = _41 + -29751;

(insn 103 102 0 (parallel [
            (set (reg:DI 128 [ _42 ])
                (plus:DI (reg:DI 127 [ _41 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALPW.f":93 -1
     (nil))

;; _43 = cldwtr.cwm[_42];

(insn 104 103 105 (set (reg/f:DI 183)
        (symbol_ref:DI ("cldwtr_") [flags 0x202]  <var_decl 0x7fb8917bfab0 cldwtr>)) "CALPW.f":93 -1
     (nil))

(insn 105 104 0 (set (reg:SF 129 [ _43 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 128 [ _42 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 183)) [2 cldwtr.cwm S4 A32])) "CALPW.f":93 -1
     (nil))

;; _44 = _34 + _43;

(insn 106 105 0 (set (reg:SF 130 [ _44 ])
        (plus:SF (reg:SF 120 [ _34 ])
            (reg:SF 129 [ _43 ]))) "CALPW.f":93 -1
     (nil))

;; _45 = ((_44));

(insn 107 106 0 (set (reg:SF 131 [ _45 ])
        (reg:SF 130 [ _44 ])) "CALPW.f":93 -1
     (nil))

;; _46 = dp_81 * _45;

(insn 108 107 0 (set (reg:SF 132 [ _46 ])
        (mult:SF (reg:SF 131 [ _45 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [2 dp+0 S4 A32]))) "CALPW.f":93 -1
     (nil))

;; _47 = _46 * 1.0204081237316131591796875e-1;

(insn 109 108 110 (set (reg:SF 184)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) "CALPW.f":93 -1
     (expr_list:REG_EQUAL (const_double:SF 1.0204081237316131591796875e-1 [0x0.d0fac6p-3])
        (nil)))

(insn 110 109 0 (set (reg:SF 133 [ _47 ])
        (mult:SF (reg:SF 132 [ _46 ])
            (reg:SF 184))) "CALPW.f":93 -1
     (nil))

;; _48 = (integer(kind=8)) l_66;

(insn 111 110 112 (set (reg:SI 185)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALPW.f":93 -1
     (nil))

(insn 112 111 0 (set (reg:DI 134 [ _48 ])
        (sign_extend:DI (reg:SI 185))) "CALPW.f":93 -1
     (nil))

;; _49 = _48 * 29631;

(insn 113 112 0 (parallel [
            (set (reg:DI 135 [ _49 ])
                (mult:DI (reg:DI 134 [ _48 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALPW.f":93 -1
     (nil))

;; _50 = (integer(kind=8)) j_65;

(insn 114 113 115 (set (reg:SI 186)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALPW.f":93 -1
     (nil))

(insn 115 114 0 (set (reg:DI 136 [ _50 ])
        (sign_extend:DI (reg:SI 186))) "CALPW.f":93 -1
     (nil))

;; _51 = _50 * 119;

(insn 116 115 0 (parallel [
            (set (reg:DI 137 [ _51 ])
                (mult:DI (reg:DI 136 [ _50 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALPW.f":93 -1
     (nil))

;; _52 = _49 + _51;

(insn 117 116 0 (parallel [
            (set (reg:DI 138 [ _52 ])
                (plus:DI (reg:DI 135 [ _49 ])
                    (reg:DI 137 [ _51 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALPW.f":93 -1
     (nil))

;; _53 = (integer(kind=8)) i_64;

(insn 118 117 119 (set (reg:SI 187)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALPW.f":93 -1
     (nil))

(insn 119 118 0 (set (reg:DI 139 [ _53 ])
        (sign_extend:DI (reg:SI 187))) "CALPW.f":93 -1
     (nil))

;; _54 = _52 + _53;

(insn 120 119 0 (parallel [
            (set (reg:DI 140 [ _54 ])
                (plus:DI (reg:DI 138 [ _52 ])
                    (reg:DI 139 [ _53 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALPW.f":93 -1
     (nil))

;; _55 = _54 + -29751;

(insn 121 120 0 (parallel [
            (set (reg:DI 141 [ _55 ])
                (plus:DI (reg:DI 140 [ _54 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALPW.f":93 -1
     (nil))

;; _56 = masks.htm[_55];

(insn 122 121 123 (set (reg/f:DI 188)
        (symbol_ref:DI ("masks_") [flags 0x202]  <var_decl 0x7fb88a75ee10 masks>)) "CALPW.f":93 -1
     (nil))

(insn 123 122 124 (parallel [
            (set (reg:DI 189)
                (plus:DI (reg:DI 141 [ _55 ])
                    (const_int 148155 [0x242bb])))
            (clobber (reg:CC 17 flags))
        ]) "CALPW.f":93 -1
     (nil))

(insn 124 123 0 (set (reg:SF 142 [ _56 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 189)
                    (const_int 4 [0x4]))
                (reg/f:DI 188)) [2 masks.htm S4 A32])) "CALPW.f":93 -1
     (nil))

;; _57 = _47 * _56;

(insn 125 124 0 (set (reg:SF 143 [ _57 ])
        (mult:SF (reg:SF 133 [ _47 ])
            (reg:SF 142 [ _56 ]))) "CALPW.f":93 -1
     (nil))

;; _58 = (integer(kind=8)) j_65;

(insn 126 125 127 (set (reg:SI 190)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALPW.f":93 -1
     (nil))

(insn 127 126 0 (set (reg:DI 144 [ _58 ])
        (sign_extend:DI (reg:SI 190))) "CALPW.f":93 -1
     (nil))

;; _59 = _58 * 119;

(insn 128 127 0 (parallel [
            (set (reg:DI 145 [ _59 ])
                (mult:DI (reg:DI 144 [ _58 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALPW.f":93 -1
     (nil))

;; _60 = (integer(kind=8)) i_64;

(insn 129 128 130 (set (reg:SI 191)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALPW.f":93 -1
     (nil))

(insn 130 129 0 (set (reg:DI 146 [ _60 ])
        (sign_extend:DI (reg:SI 191))) "CALPW.f":93 -1
     (nil))

;; _61 = _59 + _60;

(insn 131 130 0 (parallel [
            (set (reg:DI 147 [ _61 ])
                (plus:DI (reg:DI 145 [ _59 ])
                    (reg:DI 146 [ _60 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALPW.f":93 -1
     (nil))

;; _62 = _61 + -120;

(insn 132 131 0 (parallel [
            (set (reg:DI 148 [ _62 ])
                (plus:DI (reg:DI 147 [ _61 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALPW.f":93 -1
     (nil))

;; _63 = _25 + _57;

(insn 133 132 0 (set (reg:SF 149 [ _63 ])
        (plus:SF (reg:SF 111 [ _25 ])
            (reg:SF 143 [ _57 ]))) "CALPW.f":93 -1
     (nil))

;; *pw_71(D)[_62] = _63;

(insn 134 133 135 (set (reg/f:DI 192)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [3 pw+0 S8 A64])) "CALPW.f":93 -1
     (nil))

(insn 135 134 0 (set (mem:SF (plus:DI (mult:DI (reg:DI 148 [ _62 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 192)) [2 *pw_71(D) S4 A32])
        (reg:SF 149 [ _63 ])) "CALPW.f":93 -1
     (nil))

;; i_83 = i_64 + 1;

(insn 136 135 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALPW.f":91 -1
     (nil))

;; Generating RTL for gimple basic block 9

;; 

(code_label 140 139 141 4 (nil) [0 uses])

(note 141 140 0 NOTE_INSN_BASIC_BLOCK)

;; j_84 = j_65 + 1;

(insn 142 141 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALPW.f":90 -1
     (nil))

;; Generating RTL for gimple basic block 10

;; 

(code_label 146 145 147 3 (nil) [0 uses])

(note 147 146 0 NOTE_INSN_BASIC_BLOCK)

;; l_85 = l_66 + 1;

(insn 148 147 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALPW.f":89 -1
     (nil))

;; Generating RTL for gimple basic block 11

;; 

(code_label 152 151 153 2 (nil) [0 uses])

(note 153 152 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 12

;; <L12>:

(code_label 154 153 155 8 (nil) [0 uses])

(note 155 154 0 NOTE_INSN_BASIC_BLOCK)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 13 into block 12...
Merged blocks 12 and 13.
Merged 12 and 13 without moving.
Merging block 14 into block 12...
Merged blocks 12 and 14.
Merged 12 and 14 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [3 pw+0 S8 A64])
        (reg:DI 5 di [ pw ])) "CALPW.f":1 -1
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 155)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [3 pw+0 S8 A64])) "CALPW.f":82 -1
     (nil))
(insn 7 6 8 2 (set (reg:DI 156)
        (reg/f:DI 155)) "CALPW.f":82 -1
     (nil))
(insn 8 7 9 2 (set (reg:DI 157)
        (const_int 118524 [0x1cefc])) "CALPW.f":82 -1
     (nil))
(insn 9 8 10 2 (set (reg:DI 1 dx)
        (reg:DI 157)) "CALPW.f":82 -1
     (nil))
(insn 10 9 11 2 (set (reg:SI 4 si)
        (const_int 0 [0])) "CALPW.f":82 -1
     (nil))
(insn 11 10 12 2 (set (reg:DI 5 di)
        (reg:DI 156)) "CALPW.f":82 -1
     (nil))
(call_insn 12 11 13 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memset") [flags 0x41]  <function_decl 0x7fb88a5f9900 __builtin_memset>) [0 __builtin_memset S1 A8])
            (const_int 0 [0]))) "CALPW.f":82 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 13 12 14 2 (set (reg:DI 158)
        (reg:DI 0 ax)) "CALPW.f":82 -1
     (nil))
(insn 14 13 15 2 (set (reg:DI 159)
        (reg:DI 158)) "CALPW.f":82 -1
     (nil))
(insn 15 14 149 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
        (const_int 1 [0x1])) "CALPW.f":89 -1
     (nil))
;;  succ:       4 (FALLTHRU)

;; basic block 4, loop depth 1, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
;;              11 (DFS_BACK)
(code_label 149 15 16 4 7 (nil) [1 uses])
(note 16 149 17 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 4 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
            (const_int 38 [0x26]))) "CALPW.f":89 -1
     (nil))
(insn 18 17 19 4 (set (reg:QI 160)
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALPW.f":89 -1
     (nil))
(insn 19 18 20 4 (set (reg:SI 150 [ _74 ])
        (zero_extend:SI (reg:QI 160))) "CALPW.f":89 -1
     (nil))
(insn 20 19 21 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 150 [ _74 ])
            (const_int 0 [0]))) "CALPW.f":89 -1
     (nil))
(jump_insn 21 20 22 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 152)
            (pc))) "CALPW.f":89 -1
     (nil)
 -> 152)
;;  succ:       12
;;              5 (FALLTHRU)

;; basic block 5, loop depth 1, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       4 (FALLTHRU)
(note 22 21 23 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 24 5 (set (reg:SI 151 [ _75 ])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7fb88a7622d0 parallel>)
                    (const_int 8 [0x8]))) [1 parallel.jsta+0 S4 A64])) "CALPW.f":90 -1
     (nil))
(insn 24 23 25 5 (set (reg:SI 152 [ _76 ])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7fb88a7622d0 parallel>)
                    (const_int 12 [0xc]))) [1 parallel.jend+0 S4 A32])) "CALPW.f":90 -1
     (nil))
(insn 25 24 143 5 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
        (reg:SI 151 [ _75 ])) "CALPW.f":90 -1
     (nil))
;;  succ:       6 (FALLTHRU)

;; basic block 6, loop depth 2, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       5 (FALLTHRU)
;;              10 (DFS_BACK)
(code_label 143 25 26 6 6 (nil) [1 uses])
(note 26 143 27 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 6 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (reg:SI 152 [ _76 ]))) "CALPW.f":90 -1
     (nil))
(insn 28 27 29 6 (set (reg:QI 161)
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALPW.f":90 -1
     (nil))
(insn 29 28 30 6 (set (reg:SI 153 [ _78 ])
        (zero_extend:SI (reg:QI 161))) "CALPW.f":90 -1
     (nil))
(insn 30 29 31 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 153 [ _78 ])
            (const_int 0 [0]))) "CALPW.f":90 -1
     (nil))
(jump_insn 31 30 32 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 146)
            (pc))) "CALPW.f":90 -1
     (nil)
 -> 146)
;;  succ:       11
;;              7 (FALLTHRU)

;; basic block 7, loop depth 2, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       6 (FALLTHRU)
(note 32 31 33 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 33 32 137 7 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
        (const_int 1 [0x1])) "CALPW.f":91 -1
     (nil))
;;  succ:       8 (FALLTHRU)

;; basic block 8, loop depth 3, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       7 (FALLTHRU)
;;              9 (DFS_BACK)
(code_label 137 33 34 8 5 (nil) [1 uses])
(note 34 137 35 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 35 34 36 8 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
            (const_int 119 [0x77]))) "CALPW.f":91 -1
     (nil))
(insn 36 35 37 8 (set (reg:QI 162)
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALPW.f":91 -1
     (nil))
(insn 37 36 38 8 (set (reg:SI 154 [ _80 ])
        (zero_extend:SI (reg:QI 162))) "CALPW.f":91 -1
     (nil))
(insn 38 37 39 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 154 [ _80 ])
            (const_int 0 [0]))) "CALPW.f":91 -1
     (nil))
(jump_insn 39 38 40 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 140)
            (pc))) "CALPW.f":91 -1
     (nil)
 -> 140)
;;  succ:       10
;;              9 (FALLTHRU)

;; basic block 9, loop depth 3, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL)
;;  pred:       8 (FALLTHRU)
(note 40 39 41 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 41 40 42 9 (set (reg:SI 163)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALPW.f":92 -1
     (nil))
(insn 42 41 43 9 (parallel [
            (set (reg:SI 87 [ _1 ])
                (plus:SI (reg:SI 163)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALPW.f":92 -1
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 43 42 44 9 (set (reg:DI 88 [ _2 ])
        (sign_extend:DI (reg:SI 87 [ _1 ]))) "CALPW.f":92 -1
     (nil))
(insn 44 43 45 9 (parallel [
            (set (reg:DI 89 [ _3 ])
                (mult:DI (reg:DI 88 [ _2 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALPW.f":92 -1
     (nil))
(insn 45 44 46 9 (set (reg:SI 164)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALPW.f":92 -1
     (nil))
(insn 46 45 47 9 (set (reg:DI 90 [ _4 ])
        (sign_extend:DI (reg:SI 164))) "CALPW.f":92 -1
     (nil))
(insn 47 46 48 9 (parallel [
            (set (reg:DI 91 [ _5 ])
                (mult:DI (reg:DI 90 [ _4 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALPW.f":92 -1
     (nil))
(insn 48 47 49 9 (parallel [
            (set (reg:DI 92 [ _6 ])
                (plus:DI (reg:DI 89 [ _3 ])
                    (reg:DI 91 [ _5 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALPW.f":92 -1
     (nil))
(insn 49 48 50 9 (set (reg:SI 165)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALPW.f":92 -1
     (nil))
(insn 50 49 51 9 (set (reg:DI 93 [ _7 ])
        (sign_extend:DI (reg:SI 165))) "CALPW.f":92 -1
     (nil))
(insn 51 50 52 9 (parallel [
            (set (reg:DI 94 [ _8 ])
                (plus:DI (reg:DI 92 [ _6 ])
                    (reg:DI 93 [ _7 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALPW.f":92 -1
     (nil))
(insn 52 51 53 9 (parallel [
            (set (reg:DI 95 [ _9 ])
                (plus:DI (reg:DI 94 [ _8 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALPW.f":92 -1
     (nil))
(insn 53 52 54 9 (set (reg/f:DI 166)
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7fb88a756bd0 extra>)) "CALPW.f":92 -1
     (nil))
(insn 54 53 55 9 (set (reg:SF 96 [ _10 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 95 [ _9 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 166)) [2 extra.pint S4 A32])) "CALPW.f":92 -1
     (nil))
(insn 55 54 56 9 (set (reg:SI 167)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALPW.f":92 -1
     (nil))
(insn 56 55 57 9 (set (reg:DI 97 [ _11 ])
        (sign_extend:DI (reg:SI 167))) "CALPW.f":92 -1
     (nil))
(insn 57 56 58 9 (parallel [
            (set (reg:DI 98 [ _12 ])
                (mult:DI (reg:DI 97 [ _11 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALPW.f":92 -1
     (nil))
(insn 58 57 59 9 (set (reg:SI 168)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALPW.f":92 -1
     (nil))
(insn 59 58 60 9 (set (reg:DI 99 [ _13 ])
        (sign_extend:DI (reg:SI 168))) "CALPW.f":92 -1
     (nil))
(insn 60 59 61 9 (parallel [
            (set (reg:DI 100 [ _14 ])
                (mult:DI (reg:DI 99 [ _13 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALPW.f":92 -1
     (nil))
(insn 61 60 62 9 (parallel [
            (set (reg:DI 101 [ _15 ])
                (plus:DI (reg:DI 98 [ _12 ])
                    (reg:DI 100 [ _14 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALPW.f":92 -1
     (nil))
(insn 62 61 63 9 (set (reg:SI 169)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALPW.f":92 -1
     (nil))
(insn 63 62 64 9 (set (reg:DI 102 [ _16 ])
        (sign_extend:DI (reg:SI 169))) "CALPW.f":92 -1
     (nil))
(insn 64 63 65 9 (parallel [
            (set (reg:DI 103 [ _17 ])
                (plus:DI (reg:DI 101 [ _15 ])
                    (reg:DI 102 [ _16 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALPW.f":92 -1
     (nil))
(insn 65 64 66 9 (parallel [
            (set (reg:DI 104 [ _18 ])
                (plus:DI (reg:DI 103 [ _17 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALPW.f":92 -1
     (nil))
(insn 66 65 67 9 (set (reg/f:DI 170)
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7fb88a756bd0 extra>)) "CALPW.f":92 -1
     (nil))
(insn 67 66 68 9 (set (reg:SF 105 [ _19 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 104 [ _18 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 170)) [2 extra.pint S4 A32])) "CALPW.f":92 -1
     (nil))
(insn 68 67 69 9 (set (reg:SF 171)
        (minus:SF (reg:SF 96 [ _10 ])
            (reg:SF 105 [ _19 ]))) "CALPW.f":92 -1
     (nil))
(insn 69 68 70 9 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 dp+0 S4 A32])
        (reg:SF 171)) "CALPW.f":92 -1
     (nil))
(insn 70 69 71 9 (set (reg:SI 172)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALPW.f":93 -1
     (nil))
(insn 71 70 72 9 (set (reg:DI 106 [ _20 ])
        (sign_extend:DI (reg:SI 172))) "CALPW.f":93 -1
     (nil))
(insn 72 71 73 9 (parallel [
            (set (reg:DI 107 [ _21 ])
                (mult:DI (reg:DI 106 [ _20 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALPW.f":93 -1
     (nil))
(insn 73 72 74 9 (set (reg:SI 173)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALPW.f":93 -1
     (nil))
(insn 74 73 75 9 (set (reg:DI 108 [ _22 ])
        (sign_extend:DI (reg:SI 173))) "CALPW.f":93 -1
     (nil))
(insn 75 74 76 9 (parallel [
            (set (reg:DI 109 [ _23 ])
                (plus:DI (reg:DI 107 [ _21 ])
                    (reg:DI 108 [ _22 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALPW.f":93 -1
     (nil))
(insn 76 75 77 9 (parallel [
            (set (reg:DI 110 [ _24 ])
                (plus:DI (reg:DI 109 [ _23 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALPW.f":93 -1
     (nil))
(insn 77 76 78 9 (set (reg/f:DI 174)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [3 pw+0 S8 A64])) "CALPW.f":93 -1
     (nil))
(insn 78 77 79 9 (set (reg:SF 111 [ _25 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 110 [ _24 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 174)) [2 *pw_71(D) S4 A32])) "CALPW.f":93 -1
     (nil))
(insn 79 78 80 9 (set (reg:SI 175)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALPW.f":93 -1
     (nil))
(insn 80 79 81 9 (set (reg:DI 112 [ _26 ])
        (sign_extend:DI (reg:SI 175))) "CALPW.f":93 -1
     (nil))
(insn 81 80 82 9 (parallel [
            (set (reg:DI 113 [ _27 ])
                (mult:DI (reg:DI 112 [ _26 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALPW.f":93 -1
     (nil))
(insn 82 81 83 9 (set (reg:SI 176)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALPW.f":93 -1
     (nil))
(insn 83 82 84 9 (set (reg:DI 114 [ _28 ])
        (sign_extend:DI (reg:SI 176))) "CALPW.f":93 -1
     (nil))
(insn 84 83 85 9 (parallel [
            (set (reg:DI 115 [ _29 ])
                (mult:DI (reg:DI 114 [ _28 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALPW.f":93 -1
     (nil))
(insn 85 84 86 9 (parallel [
            (set (reg:DI 116 [ _30 ])
                (plus:DI (reg:DI 113 [ _27 ])
                    (reg:DI 115 [ _29 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALPW.f":93 -1
     (nil))
(insn 86 85 87 9 (set (reg:SI 177)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALPW.f":93 -1
     (nil))
(insn 87 86 88 9 (set (reg:DI 117 [ _31 ])
        (sign_extend:DI (reg:SI 177))) "CALPW.f":93 -1
     (nil))
(insn 88 87 89 9 (parallel [
            (set (reg:DI 118 [ _32 ])
                (plus:DI (reg:DI 116 [ _30 ])
                    (reg:DI 117 [ _31 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALPW.f":93 -1
     (nil))
(insn 89 88 90 9 (parallel [
            (set (reg:DI 119 [ _33 ])
                (plus:DI (reg:DI 118 [ _32 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALPW.f":93 -1
     (nil))
(insn 90 89 91 9 (set (reg/f:DI 178)
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7fb88a762b40 vrbls>)) "CALPW.f":93 -1
     (nil))
(insn 91 90 92 9 (parallel [
            (set (reg:DI 179)
                (plus:DI (reg:DI 119 [ _33 ])
                    (const_int 3466827 [0x34e64b])))
            (clobber (reg:CC 17 flags))
        ]) "CALPW.f":93 -1
     (nil))
(insn 92 91 93 9 (set (reg:SF 120 [ _34 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 179)
                    (const_int 4 [0x4]))
                (reg/f:DI 178)) [2 vrbls.q S4 A32])) "CALPW.f":93 -1
     (nil))
(insn 93 92 94 9 (set (reg:SI 180)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALPW.f":93 -1
     (nil))
(insn 94 93 95 9 (set (reg:DI 121 [ _35 ])
        (sign_extend:DI (reg:SI 180))) "CALPW.f":93 -1
     (nil))
(insn 95 94 96 9 (parallel [
            (set (reg:DI 122 [ _36 ])
                (mult:DI (reg:DI 121 [ _35 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALPW.f":93 -1
     (nil))
(insn 96 95 97 9 (set (reg:SI 181)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALPW.f":93 -1
     (nil))
(insn 97 96 98 9 (set (reg:DI 123 [ _37 ])
        (sign_extend:DI (reg:SI 181))) "CALPW.f":93 -1
     (nil))
(insn 98 97 99 9 (parallel [
            (set (reg:DI 124 [ _38 ])
                (mult:DI (reg:DI 123 [ _37 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALPW.f":93 -1
     (nil))
(insn 99 98 100 9 (parallel [
            (set (reg:DI 125 [ _39 ])
                (plus:DI (reg:DI 122 [ _36 ])
                    (reg:DI 124 [ _38 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALPW.f":93 -1
     (nil))
(insn 100 99 101 9 (set (reg:SI 182)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALPW.f":93 -1
     (nil))
(insn 101 100 102 9 (set (reg:DI 126 [ _40 ])
        (sign_extend:DI (reg:SI 182))) "CALPW.f":93 -1
     (nil))
(insn 102 101 103 9 (parallel [
            (set (reg:DI 127 [ _41 ])
                (plus:DI (reg:DI 125 [ _39 ])
                    (reg:DI 126 [ _40 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALPW.f":93 -1
     (nil))
(insn 103 102 104 9 (parallel [
            (set (reg:DI 128 [ _42 ])
                (plus:DI (reg:DI 127 [ _41 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALPW.f":93 -1
     (nil))
(insn 104 103 105 9 (set (reg/f:DI 183)
        (symbol_ref:DI ("cldwtr_") [flags 0x202]  <var_decl 0x7fb8917bfab0 cldwtr>)) "CALPW.f":93 -1
     (nil))
(insn 105 104 106 9 (set (reg:SF 129 [ _43 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 128 [ _42 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 183)) [2 cldwtr.cwm S4 A32])) "CALPW.f":93 -1
     (nil))
(insn 106 105 107 9 (set (reg:SF 130 [ _44 ])
        (plus:SF (reg:SF 120 [ _34 ])
            (reg:SF 129 [ _43 ]))) "CALPW.f":93 -1
     (nil))
(insn 107 106 108 9 (set (reg:SF 131 [ _45 ])
        (reg:SF 130 [ _44 ])) "CALPW.f":93 -1
     (nil))
(insn 108 107 109 9 (set (reg:SF 132 [ _46 ])
        (mult:SF (reg:SF 131 [ _45 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [2 dp+0 S4 A32]))) "CALPW.f":93 -1
     (nil))
(insn 109 108 110 9 (set (reg:SF 184)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) "CALPW.f":93 -1
     (expr_list:REG_EQUAL (const_double:SF 1.0204081237316131591796875e-1 [0x0.d0fac6p-3])
        (nil)))
(insn 110 109 111 9 (set (reg:SF 133 [ _47 ])
        (mult:SF (reg:SF 132 [ _46 ])
            (reg:SF 184))) "CALPW.f":93 -1
     (nil))
(insn 111 110 112 9 (set (reg:SI 185)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALPW.f":93 -1
     (nil))
(insn 112 111 113 9 (set (reg:DI 134 [ _48 ])
        (sign_extend:DI (reg:SI 185))) "CALPW.f":93 -1
     (nil))
(insn 113 112 114 9 (parallel [
            (set (reg:DI 135 [ _49 ])
                (mult:DI (reg:DI 134 [ _48 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALPW.f":93 -1
     (nil))
(insn 114 113 115 9 (set (reg:SI 186)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALPW.f":93 -1
     (nil))
(insn 115 114 116 9 (set (reg:DI 136 [ _50 ])
        (sign_extend:DI (reg:SI 186))) "CALPW.f":93 -1
     (nil))
(insn 116 115 117 9 (parallel [
            (set (reg:DI 137 [ _51 ])
                (mult:DI (reg:DI 136 [ _50 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALPW.f":93 -1
     (nil))
(insn 117 116 118 9 (parallel [
            (set (reg:DI 138 [ _52 ])
                (plus:DI (reg:DI 135 [ _49 ])
                    (reg:DI 137 [ _51 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALPW.f":93 -1
     (nil))
(insn 118 117 119 9 (set (reg:SI 187)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALPW.f":93 -1
     (nil))
(insn 119 118 120 9 (set (reg:DI 139 [ _53 ])
        (sign_extend:DI (reg:SI 187))) "CALPW.f":93 -1
     (nil))
(insn 120 119 121 9 (parallel [
            (set (reg:DI 140 [ _54 ])
                (plus:DI (reg:DI 138 [ _52 ])
                    (reg:DI 139 [ _53 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALPW.f":93 -1
     (nil))
(insn 121 120 122 9 (parallel [
            (set (reg:DI 141 [ _55 ])
                (plus:DI (reg:DI 140 [ _54 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALPW.f":93 -1
     (nil))
(insn 122 121 123 9 (set (reg/f:DI 188)
        (symbol_ref:DI ("masks_") [flags 0x202]  <var_decl 0x7fb88a75ee10 masks>)) "CALPW.f":93 -1
     (nil))
(insn 123 122 124 9 (parallel [
            (set (reg:DI 189)
                (plus:DI (reg:DI 141 [ _55 ])
                    (const_int 148155 [0x242bb])))
            (clobber (reg:CC 17 flags))
        ]) "CALPW.f":93 -1
     (nil))
(insn 124 123 125 9 (set (reg:SF 142 [ _56 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 189)
                    (const_int 4 [0x4]))
                (reg/f:DI 188)) [2 masks.htm S4 A32])) "CALPW.f":93 -1
     (nil))
(insn 125 124 126 9 (set (reg:SF 143 [ _57 ])
        (mult:SF (reg:SF 133 [ _47 ])
            (reg:SF 142 [ _56 ]))) "CALPW.f":93 -1
     (nil))
(insn 126 125 127 9 (set (reg:SI 190)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALPW.f":93 -1
     (nil))
(insn 127 126 128 9 (set (reg:DI 144 [ _58 ])
        (sign_extend:DI (reg:SI 190))) "CALPW.f":93 -1
     (nil))
(insn 128 127 129 9 (parallel [
            (set (reg:DI 145 [ _59 ])
                (mult:DI (reg:DI 144 [ _58 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALPW.f":93 -1
     (nil))
(insn 129 128 130 9 (set (reg:SI 191)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALPW.f":93 -1
     (nil))
(insn 130 129 131 9 (set (reg:DI 146 [ _60 ])
        (sign_extend:DI (reg:SI 191))) "CALPW.f":93 -1
     (nil))
(insn 131 130 132 9 (parallel [
            (set (reg:DI 147 [ _61 ])
                (plus:DI (reg:DI 145 [ _59 ])
                    (reg:DI 146 [ _60 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALPW.f":93 -1
     (nil))
(insn 132 131 133 9 (parallel [
            (set (reg:DI 148 [ _62 ])
                (plus:DI (reg:DI 147 [ _61 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALPW.f":93 -1
     (nil))
(insn 133 132 134 9 (set (reg:SF 149 [ _63 ])
        (plus:SF (reg:SF 111 [ _25 ])
            (reg:SF 143 [ _57 ]))) "CALPW.f":93 -1
     (nil))
(insn 134 133 135 9 (set (reg/f:DI 192)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [3 pw+0 S8 A64])) "CALPW.f":93 -1
     (nil))
(insn 135 134 136 9 (set (mem:SF (plus:DI (mult:DI (reg:DI 148 [ _62 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 192)) [2 *pw_71(D) S4 A32])
        (reg:SF 149 [ _63 ])) "CALPW.f":93 -1
     (nil))
(insn 136 135 138 9 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALPW.f":91 -1
     (nil))
(jump_insn 138 136 139 9 (set (pc)
        (label_ref 137)) "CALPW.f":91 -1
     (nil)
 -> 137)
;;  succ:       8 (DFS_BACK)

(barrier 139 138 140)
;; basic block 10, loop depth 2, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL)
;;  pred:       8
(code_label 140 139 141 10 4 (nil) [1 uses])
(note 141 140 142 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 142 141 144 10 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALPW.f":90 -1
     (nil))
(jump_insn 144 142 145 10 (set (pc)
        (label_ref 143)) "CALPW.f":90 -1
     (nil)
 -> 143)
;;  succ:       6 (DFS_BACK)

(barrier 145 144 146)
;; basic block 11, loop depth 1, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL)
;;  pred:       6
(code_label 146 145 147 11 3 (nil) [1 uses])
(note 147 146 148 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 148 147 150 11 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALPW.f":89 -1
     (nil))
(jump_insn 150 148 151 11 (set (pc)
        (label_ref 149)) "CALPW.f":89 -1
     (nil)
 -> 149)
;;  succ:       4 (DFS_BACK)

(barrier 151 150 152)
;; basic block 12, loop depth 0, maybe hot
;;  prev block 11, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       4
(code_label 152 151 153 12 2 (nil) [1 uses])
(note 153 152 158 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 158 153 0 12 (const_int 0 [0]) "CALPW.f":104 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)

