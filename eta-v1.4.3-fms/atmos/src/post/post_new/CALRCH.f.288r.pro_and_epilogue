
;; Function calrch (calrch_, funcdef_no=0, decl_uid=3770, cgraph_uid=0, symbol_order=0)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 82 n_edges 105 count 196 (  2.4)
scanning new insn with uid = 1449.
scanning new insn with uid = 1450.
scanning new insn with uid = 1451.
scanning new insn with uid = 1452.
scanning new insn with uid = 1443.
scanning new insn with uid = 1444.
scanning new insn with uid = 1445.
scanning new insn with uid = 1446.
verify found no changes in insn with uid = 168.
verify found no changes in insn with uid = 240.
verify found no changes in insn with uid = 461.
verify found no changes in insn with uid = 464.


try_optimize_cfg iteration 1

Merging block 10 into block 9...
changing bb of uid 53
  from 10 to 9
changing bb of uid 1286
  from 10 to 9
Merged blocks 9 and 10.
Merged 9 and 10 without moving.
Merging block 12 into block 11...
changing bb of uid 59
  from 12 to 11
changing bb of uid 1288
  from 12 to 11
Merged blocks 11 and 12.
Merged 11 and 12 without moving.
Merging block 14 into block 13...
changing bb of uid 65
  from 14 to 13
changing bb of uid 66
  from 14 to 13
changing bb of uid 67
  from 14 to 13
Merged blocks 13 and 14.
Merged 13 and 14 without moving.
Merging block 20 into block 19...
changing bb of uid 110
  from 20 to 19
changing bb of uid 1292
  from 20 to 19
Merged blocks 19 and 20.
Merged 19 and 20 without moving.
Merging block 22 into block 21...
changing bb of uid 116
  from 22 to 21
Merged blocks 21 and 22.
Merged 21 and 22 without moving.
Merging block 30 into block 29...
changing bb of uid 225
  from 30 to 29
changing bb of uid 1296
  from 30 to 29
Merged blocks 29 and 30.
Merged 29 and 30 without moving.
Merging block 32 into block 31...
changing bb of uid 231
  from 32 to 31
changing bb of uid 232
  from 32 to 31
changing bb of uid 233
  from 32 to 31
changing bb of uid 234
  from 32 to 31
changing bb of uid 1434
  from 32 to 31
changing bb of uid 236
  from 32 to 31
changing bb of uid 237
  from 32 to 31
changing bb of uid 238
  from 32 to 31
changing bb of uid 239
  from 32 to 31
changing bb of uid 240
  from 32 to 31
changing bb of uid 241
  from 32 to 31
changing bb of uid 242
  from 32 to 31
changing bb of uid 243
  from 32 to 31
Merged blocks 31 and 32.
Merged 31 and 32 without moving.
Merging block 38 into block 37...
changing bb of uid 344
  from 38 to 37
changing bb of uid 1300
  from 38 to 37
Merged blocks 37 and 38.
Merged 37 and 38 without moving.
Merging block 40 into block 39...
changing bb of uid 350
  from 40 to 39
changing bb of uid 351
  from 40 to 39
changing bb of uid 352
  from 40 to 39
Merged blocks 39 and 40.
Merged 39 and 40 without moving.
Merging block 46 into block 45...
changing bb of uid 453
  from 46 to 45
changing bb of uid 1304
  from 46 to 45
Merged blocks 45 and 46.
Merged 45 and 46 without moving.
Merging block 48 into block 47...
changing bb of uid 459
  from 48 to 47
changing bb of uid 460
  from 48 to 47
changing bb of uid 461
  from 48 to 47
changing bb of uid 462
  from 48 to 47
changing bb of uid 463
  from 48 to 47
changing bb of uid 464
  from 48 to 47
changing bb of uid 465
  from 48 to 47
changing bb of uid 466
  from 48 to 47
changing bb of uid 467
  from 48 to 47
Merged blocks 47 and 48.
Merged 47 and 48 without moving.
Merging block 54 into block 53...
changing bb of uid 581
  from 54 to 53
changing bb of uid 1308
  from 54 to 53
Merged blocks 53 and 54.
Merged 53 and 54 without moving.
Merging block 56 into block 55...
changing bb of uid 587
  from 56 to 55
changing bb of uid 1310
  from 56 to 55
Merged blocks 55 and 56.
Merged 55 and 56 without moving.
Merging block 58 into block 57...
changing bb of uid 593
  from 58 to 57
Merged blocks 57 and 58.
Merged 57 and 58 without moving.
Merging block 77 into block 76...
changing bb of uid 1258
  from 77 to 76
changing bb of uid 1317
  from 77 to 76
Merged blocks 76 and 77.
Merged 76 and 77 without moving.
Merging block 79 into block 78...
changing bb of uid 1264
  from 79 to 78
changing bb of uid 1319
  from 79 to 78
Merged blocks 78 and 79.
Merged 78 and 79 without moving.
Merging block 81 into block 80...
changing bb of uid 1283
  from 81 to 80
changing bb of uid 1448
  unscanned insn
changing bb of uid 1449
  from 81 to 80
changing bb of uid 1450
  from 81 to 80
changing bb of uid 1451
  from 81 to 80
changing bb of uid 1452
  from 81 to 80
Merged blocks 80 and 81.
Merged 80 and 81 without moving.


try_optimize_cfg iteration 2



try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns


calrch

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 21 [xmm0] 22 [xmm1] 23 [xmm2]
;;  ref usage 	r0={69d,64u} r1={563d,558u} r2={191d,186u,5e} r3={3d,3u} r4={5d,1u} r5={8d,4u} r6={3d,359u} r7={7d,77u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r17={357d,45u} r18={4d} r19={4d} r20={1d,1u,37e} r21={106d,108u} r22={50d,45u} r23={10d,5u} r24={5d} r25={5d} r26={5d} r27={5d} r28={5d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={5d} r38={5d} r39={4d} r40={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} 
;;    total ref usage 3130{1632d,1456u,42e} in 1149{1145 regular + 4 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp]
;; lr  def 	
(note 5 1 1443 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 1443 5 1444 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg/f:DI 6 bp)) "CALRCH.f":1 -1
     (nil))
(insn/f 1444 1443 1445 2 (set (reg/f:DI 6 bp)
        (reg/f:DI 7 sp)) "CALRCH.f":1 -1
     (nil))
(insn/f 1445 1444 1446 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 3 bx)) "CALRCH.f":1 -1
     (nil))
(insn/f 1446 1445 1447 2 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) "CALRCH.f":1 -1
     (nil))
(note 1447 1446 2 2 NOTE_INSN_PROLOGUE_END)
(insn 2 1447 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [3 el+0 S8 A64])
        (reg:DI 5 di [ el ])) "CALRCH.f":1 85 {*movdi_internal}
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -128 [0xffffffffffffff80])) [3 richno+0 S8 A64])
        (reg:DI 4 si [ richno ])) "CALRCH.f":1 85 {*movdi_internal}
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 60 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])
        (const_int 1 [0x1])) "CALRCH.f":76 86 {*movsi_internal}
     (nil))
;;  succ:       3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;;              11 [always] 
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 60 7 8 3 7 (nil) [1 uses])
(note 8 60 9 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 9 8 10 3 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])
            (const_int 38 [0x26]))) "CALRCH.f":76 11 {*cmpsi_1}
     (nil))
(insn 10 9 11 3 (set (reg:QI 0 ax [709])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALRCH.f":76 678 {*setcc_qi}
     (nil))
(insn 11 10 12 3 (set (reg:SI 0 ax [orig:673 _624 ] [673])
        (zero_extend:SI (reg:QI 0 ax [709]))) "CALRCH.f":76 140 {*zero_extendqisi2}
     (nil))
(insn 12 11 13 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:673 _624 ] [673])
            (const_int 0 [0]))) "CALRCH.f":76 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 13 12 14 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1322)
            (pc))) "CALRCH.f":76 682 {*jcc}
     (nil)
 -> 1322)
;;  succ:       13
;;              4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx]
(note 14 13 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 4 (set (reg:SI 1 dx [orig:674 _625 ] [674])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7fe96ef06630 parallel>)
                    (const_int 8 [0x8]))) [1 parallel.jsta+0 S4 A64])) "CALRCH.f":77 86 {*movsi_internal}
     (nil))
(insn 16 15 17 4 (set (reg:SI 0 ax [orig:675 _626 ] [675])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7fe96ef06630 parallel>)
                    (const_int 12 [0xc]))) [1 parallel.jend+0 S4 A32])) "CALRCH.f":77 86 {*movsi_internal}
     (nil))
(insn 17 16 54 4 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])
        (reg:SI 1 dx [orig:674 _625 ] [674])) "CALRCH.f":77 86 {*movsi_internal}
     (nil))
;;  succ:       5 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;;              9 [always] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 17 [flags]
(code_label 54 17 18 5 6 (nil) [1 uses])
(note 18 54 19 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 5 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])
            (reg:SI 0 ax [orig:675 _626 ] [675]))) "CALRCH.f":77 11 {*cmpsi_1}
     (nil))
(insn 20 19 21 5 (set (reg:QI 1 dx [710])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALRCH.f":77 678 {*setcc_qi}
     (nil))
(insn 21 20 22 5 (set (reg:SI 1 dx [orig:676 _628 ] [676])
        (zero_extend:SI (reg:QI 1 dx [710]))) "CALRCH.f":77 140 {*zero_extendqisi2}
     (nil))
(insn 22 21 23 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:676 _628 ] [676])
            (const_int 0 [0]))) "CALRCH.f":77 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 23 22 24 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1325)
            (pc))) "CALRCH.f":77 682 {*jcc}
     (nil)
 -> 1325)
;;  succ:       11
;;              6 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 7, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(note 24 23 25 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 48 6 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
        (const_int 1 [0x1])) "CALRCH.f":78 86 {*movsi_internal}
     (nil))
;;  succ:       7 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 7, loop depth 0, maybe hot
;;  prev block 6, next block 8, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;;              8 [always] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 17 [flags]
(code_label 48 25 26 7 5 (nil) [1 uses])
(note 26 48 27 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 7 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
            (const_int 119 [0x77]))) "CALRCH.f":78 11 {*cmpsi_1}
     (nil))
(insn 28 27 29 7 (set (reg:QI 1 dx [711])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALRCH.f":78 678 {*setcc_qi}
     (nil))
(insn 29 28 30 7 (set (reg:SI 1 dx [orig:677 _630 ] [677])
        (zero_extend:SI (reg:QI 1 dx [711]))) "CALRCH.f":78 140 {*zero_extendqisi2}
     (nil))
(insn 30 29 31 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:677 _630 ] [677])
            (const_int 0 [0]))) "CALRCH.f":78 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 31 30 32 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1328)
            (pc))) "CALRCH.f":78 682 {*jcc}
     (nil)
 -> 1328)
;;  succ:       9
;;              8 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 8, loop depth 0, maybe hot
;;  prev block 7, next block 9, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       7 (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 2 [cx] 17 [flags] 21 [xmm0]
(note 32 31 33 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 33 32 34 8 (set (reg:SI 1 dx [712])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALRCH.f":79 86 {*movsi_internal}
     (nil))
(insn 34 33 35 8 (set (reg:DI 1 dx [orig:87 _1 ] [87])
        (sign_extend:DI (reg:SI 1 dx [712]))) "CALRCH.f":79 149 {*extendsidi2_rex64}
     (nil))
(insn 35 34 36 8 (parallel [
            (set (reg:DI 2 cx [orig:88 _2 ] [88])
                (mult:DI (reg:DI 1 dx [orig:87 _1 ] [87])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":79 349 {*muldi3_1}
     (nil))
(insn 36 35 37 8 (set (reg:SI 1 dx [713])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALRCH.f":79 86 {*movsi_internal}
     (nil))
(insn 37 36 38 8 (set (reg:DI 1 dx [orig:89 _3 ] [89])
        (sign_extend:DI (reg:SI 1 dx [713]))) "CALRCH.f":79 149 {*extendsidi2_rex64}
     (nil))
(insn 38 37 39 8 (parallel [
            (set (reg:DI 1 dx [orig:90 _4 ] [90])
                (mult:DI (reg:DI 1 dx [orig:89 _3 ] [89])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":79 349 {*muldi3_1}
     (nil))
(insn 39 38 40 8 (parallel [
            (set (reg:DI 2 cx [orig:91 _5 ] [91])
                (plus:DI (reg:DI 2 cx [orig:88 _2 ] [88])
                    (reg:DI 1 dx [orig:90 _4 ] [90])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":79 222 {*adddi_1}
     (nil))
(insn 40 39 41 8 (set (reg:SI 1 dx [714])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALRCH.f":79 86 {*movsi_internal}
     (nil))
(insn 41 40 42 8 (set (reg:DI 1 dx [orig:92 _6 ] [92])
        (sign_extend:DI (reg:SI 1 dx [714]))) "CALRCH.f":79 149 {*extendsidi2_rex64}
     (nil))
(insn 42 41 1442 8 (parallel [
            (set (reg:DI 1 dx [orig:93 _7 ] [93])
                (plus:DI (reg:DI 1 dx [orig:92 _6 ] [92])
                    (reg:DI 2 cx [orig:91 _5 ] [91])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":79 222 {*adddi_1}
     (nil))
(insn 1442 42 44 8 (set (reg:DI 2 cx [orig:94 _8 ] [94])
        (plus:DI (reg:DI 1 dx [orig:93 _7 ] [93])
            (const_int -29751 [0xffffffffffff8bc9]))) "CALRCH.f":79 218 {*leadi}
     (nil))
(insn 44 1442 45 8 (set (reg:SF 21 xmm0 [orig:95 _9 ] [95])
        (mem/c:SF (symbol_ref:DI ("options_") [flags 0x2]  <var_decl 0x7fe96ef06240 options>) [2 options.spval+0 S4 A128])) "CALRCH.f":1 131 {*movsf_internal}
     (nil))
(insn 45 44 46 8 (set (reg/f:DI 1 dx [715])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -128 [0xffffffffffffff80])) [3 richno+0 S8 A64])) "CALRCH.f":79 85 {*movdi_internal}
     (nil))
(insn 46 45 47 8 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:94 _8 ] [94])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [715])) [2 *richno_631(D) S4 A32])
        (reg:SF 21 xmm0 [orig:95 _9 ] [95])) "CALRCH.f":79 131 {*movsf_internal}
     (nil))
(insn 47 46 1284 8 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":78 221 {*addsi_1}
     (nil))
(jump_insn 1284 47 1285 8 (set (pc)
        (label_ref 48)) "CALRCH.f":78 683 {jump}
     (nil)
 -> 48)
;;  succ:       7 [always] 
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

(barrier 1285 1284 1328)
;; basic block 9, loop depth 0, maybe hot
;;  prev block 8, next block 11, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       7
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 1328 1285 1327 9 50 (nil) [1 uses])
(note 1327 1328 1329 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 1329 1327 53 9 (const_int 0 [0]) "CALRCH.f":79 718 {nop}
     (nil))
(insn 53 1329 1286 9 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":77 221 {*addsi_1}
     (nil))
(jump_insn 1286 53 1287 9 (set (pc)
        (label_ref 54)) "CALRCH.f":77 683 {jump}
     (nil)
 -> 54)
;;  succ:       5 [always] 
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

(barrier 1287 1286 1325)
;; basic block 11, loop depth 0, maybe hot
;;  prev block 9, next block 13, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       5
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 1325 1287 1324 11 49 (nil) [1 uses])
(note 1324 1325 1326 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 1326 1324 59 11 (const_int 0 [0]) "CALRCH.f":78 718 {nop}
     (nil))
(insn 59 1326 1288 11 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":76 221 {*addsi_1}
     (nil))
(jump_insn 1288 59 1289 11 (set (pc)
        (label_ref 60)) "CALRCH.f":76 683 {jump}
     (nil)
 -> 60)
;;  succ:       3 [always] 
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

(barrier 1289 1288 1322)
;; basic block 13, loop depth 0, maybe hot
;;  prev block 11, next block 15, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 1322 1289 1321 13 48 (nil) [1 uses])
(note 1321 1322 1323 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 1323 1321 65 13 (const_int 0 [0]) "CALRCH.f":77 718 {nop}
     (nil))
(insn 65 1323 66 13 (set (reg:SI 1 dx [orig:678 _636 ] [678])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7fe96ef06630 parallel>)
                    (const_int 8 [0x8]))) [1 parallel.jsta+0 S4 A64])) "CALRCH.f":85 86 {*movsi_internal}
     (nil))
(insn 66 65 67 13 (set (reg:SI 0 ax [orig:679 _637 ] [679])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7fe96ef06630 parallel>)
                    (const_int 12 [0xc]))) [1 parallel.jend+0 S4 A32])) "CALRCH.f":85 86 {*movsi_internal}
     (nil))
(insn 67 66 111 13 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])
        (reg:SI 1 dx [orig:678 _636 ] [678])) "CALRCH.f":85 86 {*movsi_internal}
     (nil))
;;  succ:       15 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 15, loop depth 0, maybe hot
;;  prev block 13, next block 16, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       13 (FALLTHRU)
;;              19 [always] 
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 17 [flags]
(code_label 111 67 68 15 11 (nil) [1 uses])
(note 68 111 69 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 69 68 70 15 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])
            (reg:SI 0 ax [orig:679 _637 ] [679]))) "CALRCH.f":85 11 {*cmpsi_1}
     (nil))
(insn 70 69 71 15 (set (reg:QI 1 dx [716])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALRCH.f":85 678 {*setcc_qi}
     (nil))
(insn 71 70 72 15 (set (reg:SI 1 dx [orig:680 _639 ] [680])
        (zero_extend:SI (reg:QI 1 dx [716]))) "CALRCH.f":85 140 {*zero_extendqisi2}
     (nil))
(insn 72 71 73 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:680 _639 ] [680])
            (const_int 0 [0]))) "CALRCH.f":85 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 73 72 74 15 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1331)
            (pc))) "CALRCH.f":85 682 {*jcc}
     (nil)
 -> 1331)
;;  succ:       21
;;              16 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 16, loop depth 0, maybe hot
;;  prev block 15, next block 17, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       15 (FALLTHRU)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(note 74 73 75 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 75 74 105 16 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
        (const_int 1 [0x1])) "CALRCH.f":86 86 {*movsi_internal}
     (nil))
;;  succ:       17 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 17, loop depth 0, maybe hot
;;  prev block 16, next block 18, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       16 (FALLTHRU)
;;              18 [always] 
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 17 [flags]
(code_label 105 75 76 17 10 (nil) [1 uses])
(note 76 105 77 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 77 76 78 17 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
            (const_int 119 [0x77]))) "CALRCH.f":86 11 {*cmpsi_1}
     (nil))
(insn 78 77 79 17 (set (reg:QI 1 dx [717])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALRCH.f":86 678 {*setcc_qi}
     (nil))
(insn 79 78 80 17 (set (reg:SI 1 dx [orig:681 _641 ] [681])
        (zero_extend:SI (reg:QI 1 dx [717]))) "CALRCH.f":86 140 {*zero_extendqisi2}
     (nil))
(insn 80 79 81 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:681 _641 ] [681])
            (const_int 0 [0]))) "CALRCH.f":86 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 81 80 82 17 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1334)
            (pc))) "CALRCH.f":86 682 {*jcc}
     (nil)
 -> 1334)
;;  succ:       19
;;              18 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 18, loop depth 0, maybe hot
;;  prev block 17, next block 19, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       17 (FALLTHRU)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 2 [cx] 17 [flags] 21 [xmm0] 22 [xmm1]
(note 82 81 83 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 83 82 84 18 (set (reg:SI 1 dx [718])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALRCH.f":87 86 {*movsi_internal}
     (nil))
(insn 84 83 85 18 (set (reg:DI 1 dx [orig:96 _10 ] [96])
        (sign_extend:DI (reg:SI 1 dx [718]))) "CALRCH.f":87 149 {*extendsidi2_rex64}
     (nil))
(insn 85 84 86 18 (parallel [
            (set (reg:DI 2 cx [orig:97 _11 ] [97])
                (mult:DI (reg:DI 1 dx [orig:96 _10 ] [96])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":87 349 {*muldi3_1}
     (nil))
(insn 86 85 87 18 (set (reg:SI 1 dx [719])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALRCH.f":87 86 {*movsi_internal}
     (nil))
(insn 87 86 88 18 (set (reg:DI 1 dx [orig:98 _12 ] [98])
        (sign_extend:DI (reg:SI 1 dx [719]))) "CALRCH.f":87 149 {*extendsidi2_rex64}
     (nil))
(insn 88 87 1440 18 (parallel [
            (set (reg:DI 1 dx [orig:99 _13 ] [99])
                (plus:DI (reg:DI 1 dx [orig:98 _12 ] [98])
                    (reg:DI 2 cx [orig:97 _11 ] [97])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":87 222 {*adddi_1}
     (nil))
(insn 1440 88 90 18 (set (reg:DI 2 cx [orig:100 _14 ] [100])
        (plus:DI (reg:DI 1 dx [orig:99 _13 ] [99])
            (const_int -120 [0xffffffffffffff88]))) "CALRCH.f":87 218 {*leadi}
     (nil))
(insn 90 1440 91 18 (set (reg/f:DI 1 dx [720])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7fe96ef1b900 vrbls>)) "CALRCH.f":87 85 {*movdi_internal}
     (nil))
(insn 91 90 92 18 (parallel [
            (set (reg:DI 2 cx [721])
                (plus:DI (reg:DI 2 cx [orig:100 _14 ] [100])
                    (const_int 59262 [0xe77e])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":87 222 {*adddi_1}
     (nil))
(insn 92 91 93 18 (set (reg:SF 22 xmm1 [orig:101 _15 ] [101])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [721])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [720])) [2 vrbls.fis S4 A32])) "CALRCH.f":87 131 {*movsf_internal}
     (nil))
(insn 93 92 94 18 (set (reg:SI 1 dx [722])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALRCH.f":87 86 {*movsi_internal}
     (nil))
(insn 94 93 95 18 (set (reg:DI 1 dx [orig:102 _16 ] [102])
        (sign_extend:DI (reg:SI 1 dx [722]))) "CALRCH.f":87 149 {*extendsidi2_rex64}
     (nil))
(insn 95 94 96 18 (parallel [
            (set (reg:DI 2 cx [orig:103 _17 ] [103])
                (mult:DI (reg:DI 1 dx [orig:102 _16 ] [102])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":87 349 {*muldi3_1}
     (nil))
(insn 96 95 97 18 (set (reg:SI 1 dx [723])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALRCH.f":87 86 {*movsi_internal}
     (nil))
(insn 97 96 98 18 (set (reg:DI 1 dx [orig:104 _18 ] [104])
        (sign_extend:DI (reg:SI 1 dx [723]))) "CALRCH.f":87 149 {*extendsidi2_rex64}
     (nil))
(insn 98 97 1441 18 (parallel [
            (set (reg:DI 1 dx [orig:105 _19 ] [105])
                (plus:DI (reg:DI 1 dx [orig:104 _18 ] [104])
                    (reg:DI 2 cx [orig:103 _17 ] [103])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":87 222 {*adddi_1}
     (nil))
(insn 1441 98 100 18 (set (reg:DI 2 cx [orig:106 _20 ] [106])
        (plus:DI (reg:DI 1 dx [orig:105 _19 ] [105])
            (const_int -120 [0xffffffffffffff88]))) "CALRCH.f":87 218 {*leadi}
     (nil))
(insn 100 1441 101 18 (set (reg:SF 21 xmm0 [724])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) "CALRCH.f":87 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 9.80000019073486328125e+0 [0x0.9ccccdp+4])
        (nil)))
(insn 101 100 102 18 (set (reg:SF 21 xmm0 [orig:107 _21 ] [107])
        (mult:SF (reg:SF 21 xmm0 [724])
            (reg:SF 22 xmm1 [orig:101 _15 ] [101]))) "CALRCH.f":87 838 {*fop_sf_comm}
     (nil))
(insn 102 101 103 18 (set (reg/f:DI 1 dx [725])
        (symbol_ref:DI ("hgt.4223") [flags 0x202]  <var_decl 0x7fe96ef1e360 hgt>)) "CALRCH.f":87 85 {*movdi_internal}
     (nil))
(insn 103 102 104 18 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:106 _20 ] [106])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [725])) [2 hgt S4 A32])
        (reg:SF 21 xmm0 [orig:107 _21 ] [107])) "CALRCH.f":87 131 {*movsf_internal}
     (nil))
(insn 104 103 1290 18 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":86 221 {*addsi_1}
     (nil))
(jump_insn 1290 104 1291 18 (set (pc)
        (label_ref 105)) "CALRCH.f":86 683 {jump}
     (nil)
 -> 105)
;;  succ:       17 [always] 
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

(barrier 1291 1290 1334)
;; basic block 19, loop depth 0, maybe hot
;;  prev block 18, next block 21, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       17
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 1334 1291 1333 19 52 (nil) [1 uses])
(note 1333 1334 1335 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 1335 1333 110 19 (const_int 0 [0]) "CALRCH.f":87 718 {nop}
     (nil))
(insn 110 1335 1292 19 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":85 221 {*addsi_1}
     (nil))
(jump_insn 1292 110 1293 19 (set (pc)
        (label_ref 111)) "CALRCH.f":85 683 {jump}
     (nil)
 -> 111)
;;  succ:       15 [always] 
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

(barrier 1293 1292 1331)
;; basic block 21, loop depth 0, maybe hot
;;  prev block 19, next block 23, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       15
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 1331 1293 1330 21 51 (nil) [1 uses])
(note 1330 1331 1332 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 1332 1330 116 21 (const_int 0 [0]) "CALRCH.f":86 718 {nop}
     (nil))
(insn 116 1332 588 21 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])
        (const_int 38 [0x26])) "CALRCH.f":95 86 {*movsi_internal}
     (nil))
;;  succ:       23 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 23, loop depth 0, maybe hot
;;  prev block 21, next block 24, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       21 (FALLTHRU)
;;              55 [always] 
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 588 116 117 23 29 (nil) [1 uses])
(note 117 588 118 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 118 117 119 23 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])
            (const_int 0 [0]))) "CALRCH.f":95 7 {*cmpsi_ccno_1}
     (nil))
(insn 119 118 120 23 (set (reg:QI 0 ax [726])
        (le:QI (reg:CCNO 17 flags)
            (const_int 0 [0]))) "CALRCH.f":95 678 {*setcc_qi}
     (nil))
(insn 120 119 121 23 (set (reg:SI 0 ax [orig:682 _646 ] [682])
        (zero_extend:SI (reg:QI 0 ax [726]))) "CALRCH.f":95 140 {*zero_extendqisi2}
     (nil))
(insn 121 120 122 23 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:682 _646 ] [682])
            (const_int 0 [0]))) "CALRCH.f":95 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 122 121 123 23 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1337)
            (pc))) "CALRCH.f":95 682 {*jcc}
     (nil)
 -> 1337)
;;  succ:       57
;;              24 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 24, loop depth 0, maybe hot
;;  prev block 23, next block 25, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       23 (FALLTHRU)
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 3 [bx]
(note 123 122 124 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 124 123 125 24 (set (reg:SI 0 ax [orig:683 _647 ] [683])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7fe96ef06630 parallel>)
                    (const_int 8 [0x8]))) [1 parallel.jsta+0 S4 A64])) "CALRCH.f":96 86 {*movsi_internal}
     (nil))
(insn 125 124 126 24 (set (reg:SI 3 bx [orig:684 _648 ] [684])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7fe96ef06630 parallel>)
                    (const_int 12 [0xc]))) [1 parallel.jend+0 S4 A32])) "CALRCH.f":96 86 {*movsi_internal}
     (nil))
(insn 126 125 226 24 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])
        (reg:SI 0 ax [orig:683 _647 ] [683])) "CALRCH.f":96 86 {*movsi_internal}
     (nil))
;;  succ:       25 (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

;; basic block 25, loop depth 0, maybe hot
;;  prev block 24, next block 26, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       24 (FALLTHRU)
;;              29 [always] 
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 226 126 127 25 16 (nil) [1 uses])
(note 127 226 128 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 128 127 129 25 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])
            (reg:SI 3 bx [orig:684 _648 ] [684]))) "CALRCH.f":96 11 {*cmpsi_1}
     (nil))
(insn 129 128 130 25 (set (reg:QI 0 ax [727])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALRCH.f":96 678 {*setcc_qi}
     (nil))
(insn 130 129 131 25 (set (reg:SI 0 ax [orig:685 _650 ] [685])
        (zero_extend:SI (reg:QI 0 ax [727]))) "CALRCH.f":96 140 {*zero_extendqisi2}
     (nil))
(insn 131 130 132 25 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:685 _650 ] [685])
            (const_int 0 [0]))) "CALRCH.f":96 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 132 131 133 25 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1340)
            (pc))) "CALRCH.f":96 682 {*jcc}
     (nil)
 -> 1340)
;;  succ:       31
;;              26 (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

;; basic block 26, loop depth 0, maybe hot
;;  prev block 25, next block 27, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       25 (FALLTHRU)
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(note 133 132 134 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 134 133 220 26 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
        (const_int 1 [0x1])) "CALRCH.f":97 86 {*movsi_internal}
     (nil))
;;  succ:       27 (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

;; basic block 27, loop depth 0, maybe hot
;;  prev block 26, next block 28, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       26 (FALLTHRU)
;;              28 [always] 
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 220 134 135 27 15 (nil) [1 uses])
(note 135 220 136 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 136 135 137 27 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
            (const_int 119 [0x77]))) "CALRCH.f":97 11 {*cmpsi_1}
     (nil))
(insn 137 136 138 27 (set (reg:QI 0 ax [728])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALRCH.f":97 678 {*setcc_qi}
     (nil))
(insn 138 137 139 27 (set (reg:SI 0 ax [orig:686 _652 ] [686])
        (zero_extend:SI (reg:QI 0 ax [728]))) "CALRCH.f":97 140 {*zero_extendqisi2}
     (nil))
(insn 139 138 140 27 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:686 _652 ] [686])
            (const_int 0 [0]))) "CALRCH.f":97 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 140 139 141 27 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1343)
            (pc))) "CALRCH.f":97 682 {*jcc}
     (nil)
 -> 1343)
;;  succ:       29
;;              28 (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

;; basic block 28, loop depth 0, maybe hot
;;  prev block 27, next block 29, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       27 (FALLTHRU)
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 141 140 142 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 142 141 143 28 (set (reg:SI 0 ax [729])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALRCH.f":98 86 {*movsi_internal}
     (nil))
(insn 143 142 144 28 (set (reg:DI 0 ax [orig:108 _22 ] [108])
        (sign_extend:DI (reg:SI 0 ax [729]))) "CALRCH.f":98 149 {*extendsidi2_rex64}
     (nil))
(insn 144 143 145 28 (parallel [
            (set (reg:DI 1 dx [orig:109 _23 ] [109])
                (mult:DI (reg:DI 0 ax [orig:108 _22 ] [108])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":98 349 {*muldi3_1}
     (nil))
(insn 145 144 146 28 (set (reg:SI 0 ax [730])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALRCH.f":98 86 {*movsi_internal}
     (nil))
(insn 146 145 147 28 (set (reg:DI 0 ax [orig:110 _24 ] [110])
        (sign_extend:DI (reg:SI 0 ax [730]))) "CALRCH.f":98 149 {*extendsidi2_rex64}
     (nil))
(insn 147 146 1435 28 (parallel [
            (set (reg:DI 0 ax [orig:111 _25 ] [111])
                (plus:DI (reg:DI 0 ax [orig:110 _24 ] [110])
                    (reg:DI 1 dx [orig:109 _23 ] [109])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":98 222 {*adddi_1}
     (nil))
(insn 1435 147 149 28 (set (reg:DI 1 dx [orig:112 _26 ] [112])
        (plus:DI (reg:DI 0 ax [orig:111 _25 ] [111])
            (const_int -120 [0xffffffffffffff88]))) "CALRCH.f":98 218 {*leadi}
     (nil))
(insn 149 1435 150 28 (set (reg/f:DI 0 ax [731])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7fe96eef8870 extra>)) "CALRCH.f":98 85 {*movdi_internal}
     (nil))
(insn 150 149 151 28 (parallel [
            (set (reg:DI 1 dx [732])
                (plus:DI (reg:DI 1 dx [orig:112 _26 ] [112])
                    (const_int 4647393 [0x46e9e1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":98 222 {*adddi_1}
     (nil))
(insn 151 150 152 28 (set (reg:SF 22 xmm1 [orig:113 _27 ] [113])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [732])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [731])) [2 extra.pdsl S4 A32])) "CALRCH.f":98 131 {*movsf_internal}
     (nil))
(insn 152 151 153 28 (set (reg:SI 0 ax [733])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALRCH.f":98 86 {*movsi_internal}
     (nil))
(insn 153 152 1436 28 (set (reg:DI 0 ax [orig:114 _28 ] [114])
        (sign_extend:DI (reg:SI 0 ax [733]))) "CALRCH.f":98 149 {*extendsidi2_rex64}
     (nil))
(insn 1436 153 155 28 (set (reg:DI 1 dx [orig:115 _29 ] [115])
        (plus:DI (reg:DI 0 ax [orig:114 _28 ] [114])
            (const_int -1 [0xffffffffffffffff]))) "CALRCH.f":98 218 {*leadi}
     (nil))
(insn 155 1436 156 28 (set (reg/f:DI 0 ax [734])
        (symbol_ref:DI ("phys_") [flags 0x202]  <var_decl 0x7fe96ef06ea0 phys>)) "CALRCH.f":98 85 {*movdi_internal}
     (nil))
(insn 156 155 157 28 (parallel [
            (set (reg:DI 1 dx [735])
                (plus:DI (reg:DI 1 dx [orig:115 _29 ] [115])
                    (const_int 59 [0x3b])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":98 222 {*adddi_1}
     (nil))
(insn 157 156 158 28 (set (reg:SF 21 xmm0 [orig:116 _30 ] [116])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [735])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [734])) [2 phys.aeta S4 A32])) "CALRCH.f":98 131 {*movsf_internal}
     (nil))
(insn 158 157 159 28 (set (reg:SF 22 xmm1 [orig:117 _31 ] [117])
        (mult:SF (reg:SF 22 xmm1 [orig:113 _27 ] [113])
            (reg:SF 21 xmm0 [orig:116 _30 ] [116]))) "CALRCH.f":98 838 {*fop_sf_comm}
     (nil))
(insn 159 158 160 28 (set (reg/f:DI 0 ax [736])
        (symbol_ref:DI ("phys_") [flags 0x202]  <var_decl 0x7fe96ef06ea0 phys>)) "CALRCH.f":1 85 {*movdi_internal}
     (nil))
(insn 160 159 161 28 (set (reg:SF 21 xmm0 [orig:118 _32 ] [118])
        (mem/c:SF (plus:DI (reg/f:DI 0 ax [736])
                (const_int 4 [0x4])) [2 phys.pt+0 S4 A32])) "CALRCH.f":1 131 {*movsf_internal}
     (nil))
(insn 161 160 162 28 (set (reg:SF 21 xmm0 [orig:119 _33 ] [119])
        (plus:SF (reg:SF 21 xmm0 [orig:118 _32 ] [118])
            (reg:SF 22 xmm1 [orig:117 _31 ] [117]))) "CALRCH.f":98 838 {*fop_sf_comm}
     (nil))
(insn 162 161 163 28 (set (reg:SF 22 xmm1 [orig:120 _34 ] [120])
        (reg:SF 21 xmm0 [orig:119 _33 ] [119])) "CALRCH.f":98 131 {*movsf_internal}
     (nil))
(insn 163 162 164 28 (set (reg:SF 21 xmm0 [737])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S4 A32])) "CALRCH.f":98 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+5 [0x0.c35p+17])
        (nil)))
(insn 164 163 166 28 (set (reg:SF 21 xmm0 [orig:121 _35 ] [121])
        (div:SF (reg:SF 21 xmm0 [737])
            (reg:SF 22 xmm1 [orig:120 _34 ] [120]))) "CALRCH.f":98 841 {*fop_sf_1}
     (nil))
(insn 166 164 168 28 (set (reg:SF 22 xmm1)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0  S4 A32])) "CALRCH.f":98 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 2.8589642047882080078125e-1 [0x0.926104p-1])
        (nil)))
(call_insn/u 168 166 169 28 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("powf") [flags 0x41]  <function_decl 0x7fe96ed74100 __builtin_powf>) [0 __builtin_powf S1 A8])
            (const_int 0 [0]))) "CALRCH.f":98 700 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (expr_list:SF (use (reg:SF 22 xmm1))
            (nil))))
(insn 169 168 170 28 (set (reg:SF 0 ax [738])
        (reg:SF 21 xmm0)) "CALRCH.f":98 131 {*movsf_internal}
     (nil))
(insn 170 169 171 28 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 ape+0 S4 A32])
        (reg:SF 0 ax [738])) "CALRCH.f":98 131 {*movsf_internal}
     (nil))
(insn 171 170 172 28 (set (reg:SI 0 ax [739])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALRCH.f":99 86 {*movsi_internal}
     (nil))
(insn 172 171 173 28 (set (reg:DI 0 ax [orig:122 _36 ] [122])
        (sign_extend:DI (reg:SI 0 ax [739]))) "CALRCH.f":99 149 {*extendsidi2_rex64}
     (nil))
(insn 173 172 174 28 (parallel [
            (set (reg:DI 1 dx [orig:123 _37 ] [123])
                (mult:DI (reg:DI 0 ax [orig:122 _36 ] [122])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":99 349 {*muldi3_1}
     (nil))
(insn 174 173 175 28 (set (reg:SI 0 ax [740])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALRCH.f":99 86 {*movsi_internal}
     (nil))
(insn 175 174 176 28 (set (reg:DI 0 ax [orig:124 _38 ] [124])
        (sign_extend:DI (reg:SI 0 ax [740]))) "CALRCH.f":99 149 {*extendsidi2_rex64}
     (nil))
(insn 176 175 177 28 (parallel [
            (set (reg:DI 0 ax [orig:125 _39 ] [125])
                (mult:DI (reg:DI 0 ax [orig:124 _38 ] [124])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":99 349 {*muldi3_1}
     (nil))
(insn 177 176 178 28 (parallel [
            (set (reg:DI 1 dx [orig:126 _40 ] [126])
                (plus:DI (reg:DI 1 dx [orig:123 _37 ] [123])
                    (reg:DI 0 ax [orig:125 _39 ] [125])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":99 222 {*adddi_1}
     (nil))
(insn 178 177 179 28 (set (reg:SI 0 ax [741])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALRCH.f":99 86 {*movsi_internal}
     (nil))
(insn 179 178 180 28 (set (reg:DI 0 ax [orig:127 _41 ] [127])
        (sign_extend:DI (reg:SI 0 ax [741]))) "CALRCH.f":99 149 {*extendsidi2_rex64}
     (nil))
(insn 180 179 1437 28 (parallel [
            (set (reg:DI 0 ax [orig:128 _42 ] [128])
                (plus:DI (reg:DI 0 ax [orig:127 _41 ] [127])
                    (reg:DI 1 dx [orig:126 _40 ] [126])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":99 222 {*adddi_1}
     (nil))
(insn 1437 180 182 28 (set (reg:DI 1 dx [orig:129 _43 ] [129])
        (plus:DI (reg:DI 0 ax [orig:128 _42 ] [128])
            (const_int -29751 [0xffffffffffff8bc9]))) "CALRCH.f":99 218 {*leadi}
     (nil))
(insn 182 1437 183 28 (set (reg/f:DI 0 ax [742])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7fe96ef1b900 vrbls>)) "CALRCH.f":99 85 {*movdi_internal}
     (nil))
(insn 183 182 184 28 (parallel [
            (set (reg:DI 1 dx [743])
                (plus:DI (reg:DI 1 dx [orig:129 _43 ] [129])
                    (const_int 3466827 [0x34e64b])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":99 222 {*adddi_1}
     (nil))
(insn 184 183 185 28 (set (reg:SF 22 xmm1 [orig:130 _44 ] [130])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [743])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [742])) [2 vrbls.q S4 A32])) "CALRCH.f":99 131 {*movsf_internal}
     (nil))
(insn 185 184 186 28 (set (reg:SF 21 xmm0 [744])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC3") [flags 0x2]) [0  S4 A32])) "CALRCH.f":99 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 6.07999980449676513671875e-1 [0x0.9ba5e3p+0])
        (nil)))
(insn 186 185 187 28 (set (reg:SF 22 xmm1 [orig:131 _45 ] [131])
        (mult:SF (reg:SF 22 xmm1 [orig:130 _44 ] [130])
            (reg:SF 21 xmm0 [744]))) "CALRCH.f":99 838 {*fop_sf_comm}
     (nil))
(insn 187 186 188 28 (set (reg:SF 21 xmm0 [745])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC4") [flags 0x2]) [0  S4 A32])) "CALRCH.f":99 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 188 187 189 28 (set (reg:SF 21 xmm0 [orig:132 _46 ] [132])
        (plus:SF (reg:SF 21 xmm0 [745])
            (reg:SF 22 xmm1 [orig:131 _45 ] [131]))) "CALRCH.f":99 838 {*fop_sf_comm}
     (nil))
(insn 189 188 190 28 (set (reg:SF 22 xmm1 [orig:133 _47 ] [133])
        (reg:SF 21 xmm0 [orig:132 _46 ] [132])) "CALRCH.f":99 131 {*movsf_internal}
     (nil))
(insn 190 189 191 28 (set (reg:SI 0 ax [746])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALRCH.f":99 86 {*movsi_internal}
     (nil))
(insn 191 190 192 28 (set (reg:DI 0 ax [orig:134 _48 ] [134])
        (sign_extend:DI (reg:SI 0 ax [746]))) "CALRCH.f":99 149 {*extendsidi2_rex64}
     (nil))
(insn 192 191 193 28 (parallel [
            (set (reg:DI 1 dx [orig:135 _49 ] [135])
                (mult:DI (reg:DI 0 ax [orig:134 _48 ] [134])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":99 349 {*muldi3_1}
     (nil))
(insn 193 192 194 28 (set (reg:SI 0 ax [747])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALRCH.f":99 86 {*movsi_internal}
     (nil))
(insn 194 193 195 28 (set (reg:DI 0 ax [orig:136 _50 ] [136])
        (sign_extend:DI (reg:SI 0 ax [747]))) "CALRCH.f":99 149 {*extendsidi2_rex64}
     (nil))
(insn 195 194 196 28 (parallel [
            (set (reg:DI 0 ax [orig:137 _51 ] [137])
                (mult:DI (reg:DI 0 ax [orig:136 _50 ] [136])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":99 349 {*muldi3_1}
     (nil))
(insn 196 195 197 28 (parallel [
            (set (reg:DI 1 dx [orig:138 _52 ] [138])
                (plus:DI (reg:DI 1 dx [orig:135 _49 ] [135])
                    (reg:DI 0 ax [orig:137 _51 ] [137])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":99 222 {*adddi_1}
     (nil))
(insn 197 196 198 28 (set (reg:SI 0 ax [748])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALRCH.f":99 86 {*movsi_internal}
     (nil))
(insn 198 197 199 28 (set (reg:DI 0 ax [orig:139 _53 ] [139])
        (sign_extend:DI (reg:SI 0 ax [748]))) "CALRCH.f":99 149 {*extendsidi2_rex64}
     (nil))
(insn 199 198 1438 28 (parallel [
            (set (reg:DI 0 ax [orig:140 _54 ] [140])
                (plus:DI (reg:DI 0 ax [orig:139 _53 ] [139])
                    (reg:DI 1 dx [orig:138 _52 ] [138])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":99 222 {*adddi_1}
     (nil))
(insn 1438 199 201 28 (set (reg:DI 1 dx [orig:141 _55 ] [141])
        (plus:DI (reg:DI 0 ax [orig:140 _54 ] [140])
            (const_int -29751 [0xffffffffffff8bc9]))) "CALRCH.f":99 218 {*leadi}
     (nil))
(insn 201 1438 202 28 (set (reg/f:DI 0 ax [749])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7fe96ef1b900 vrbls>)) "CALRCH.f":99 85 {*movdi_internal}
     (nil))
(insn 202 201 203 28 (parallel [
            (set (reg:DI 1 dx [750])
                (plus:DI (reg:DI 1 dx [orig:141 _55 ] [141])
                    (const_int 2340849 [0x23b7f1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":99 222 {*adddi_1}
     (nil))
(insn 203 202 204 28 (set (reg:SF 21 xmm0 [orig:142 _56 ] [142])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [750])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [749])) [2 vrbls.t S4 A32])) "CALRCH.f":99 131 {*movsf_internal}
     (nil))
(insn 204 203 205 28 (set (reg:SF 21 xmm0 [orig:143 _57 ] [143])
        (mult:SF (reg:SF 21 xmm0 [orig:142 _56 ] [142])
            (reg:SF 22 xmm1 [orig:133 _47 ] [133]))) "CALRCH.f":99 838 {*fop_sf_comm}
     (nil))
(insn 205 204 206 28 (set (reg:SI 0 ax [751])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALRCH.f":99 86 {*movsi_internal}
     (nil))
(insn 206 205 207 28 (set (reg:DI 0 ax [orig:144 _58 ] [144])
        (sign_extend:DI (reg:SI 0 ax [751]))) "CALRCH.f":99 149 {*extendsidi2_rex64}
     (nil))
(insn 207 206 208 28 (parallel [
            (set (reg:DI 1 dx [orig:145 _59 ] [145])
                (mult:DI (reg:DI 0 ax [orig:144 _58 ] [144])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":99 349 {*muldi3_1}
     (nil))
(insn 208 207 209 28 (set (reg:SI 0 ax [752])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALRCH.f":99 86 {*movsi_internal}
     (nil))
(insn 209 208 210 28 (set (reg:DI 0 ax [orig:146 _60 ] [146])
        (sign_extend:DI (reg:SI 0 ax [752]))) "CALRCH.f":99 149 {*extendsidi2_rex64}
     (nil))
(insn 210 209 211 28 (parallel [
            (set (reg:DI 0 ax [orig:147 _61 ] [147])
                (mult:DI (reg:DI 0 ax [orig:146 _60 ] [146])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":99 349 {*muldi3_1}
     (nil))
(insn 211 210 212 28 (parallel [
            (set (reg:DI 1 dx [orig:148 _62 ] [148])
                (plus:DI (reg:DI 1 dx [orig:145 _59 ] [145])
                    (reg:DI 0 ax [orig:147 _61 ] [147])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":99 222 {*adddi_1}
     (nil))
(insn 212 211 213 28 (set (reg:SI 0 ax [753])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALRCH.f":99 86 {*movsi_internal}
     (nil))
(insn 213 212 214 28 (set (reg:DI 0 ax [orig:149 _63 ] [149])
        (sign_extend:DI (reg:SI 0 ax [753]))) "CALRCH.f":99 149 {*extendsidi2_rex64}
     (nil))
(insn 214 213 1439 28 (parallel [
            (set (reg:DI 0 ax [orig:150 _64 ] [150])
                (plus:DI (reg:DI 0 ax [orig:149 _63 ] [149])
                    (reg:DI 1 dx [orig:148 _62 ] [148])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":99 222 {*adddi_1}
     (nil))
(insn 1439 214 216 28 (set (reg:DI 1 dx [orig:151 _65 ] [151])
        (plus:DI (reg:DI 0 ax [orig:150 _64 ] [150])
            (const_int -29751 [0xffffffffffff8bc9]))) "CALRCH.f":99 218 {*leadi}
     (nil))
(insn 216 1439 217 28 (set (reg:SF 21 xmm0 [orig:152 _66 ] [152])
        (mult:SF (reg:SF 21 xmm0 [orig:143 _57 ] [143])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -32 [0xffffffffffffffe0])) [2 ape+0 S4 A32]))) "CALRCH.f":99 838 {*fop_sf_comm}
     (nil))
(insn 217 216 218 28 (set (reg/f:DI 0 ax [754])
        (symbol_ref:DI ("thv.4234") [flags 0x202]  <var_decl 0x7fe96ef1e900 thv>)) "CALRCH.f":99 85 {*movdi_internal}
     (nil))
(insn 218 217 219 28 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:151 _65 ] [151])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [754])) [2 thv S4 A32])
        (reg:SF 21 xmm0 [orig:152 _66 ] [152])) "CALRCH.f":99 131 {*movsf_internal}
     (nil))
(insn 219 218 1294 28 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":97 221 {*addsi_1}
     (nil))
(jump_insn 1294 219 1295 28 (set (pc)
        (label_ref 220)) "CALRCH.f":97 683 {jump}
     (nil)
 -> 220)
;;  succ:       27 [always] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

(barrier 1295 1294 1343)
;; basic block 29, loop depth 0, maybe hot
;;  prev block 28, next block 31, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       27
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 1343 1295 1342 29 55 (nil) [1 uses])
(note 1342 1343 1344 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 1344 1342 225 29 (const_int 0 [0]) "CALRCH.f":99 718 {nop}
     (nil))
(insn 225 1344 1296 29 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":96 221 {*addsi_1}
     (nil))
(jump_insn 1296 225 1297 29 (set (pc)
        (label_ref 226)) "CALRCH.f":96 683 {jump}
     (nil)
 -> 226)
;;  succ:       25 [always] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

(barrier 1297 1296 1340)
;; basic block 31, loop depth 0, maybe hot
;;  prev block 29, next block 33, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       25
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 1340 1297 1339 31 54 (nil) [1 uses])
(note 1339 1340 1341 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 1341 1339 231 31 (const_int 0 [0]) "CALRCH.f":97 718 {nop}
     (nil))
(insn 231 1341 232 31 (set (reg:SI 0 ax [755])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALRCH.f":103 86 {*movsi_internal}
     (nil))
(insn 232 231 233 31 (set (reg:DI 0 ax [orig:153 _67 ] [153])
        (sign_extend:DI (reg:SI 0 ax [755]))) "CALRCH.f":103 149 {*extendsidi2_rex64}
     (nil))
(insn 233 232 234 31 (parallel [
            (set (reg:DI 0 ax [orig:154 _68 ] [154])
                (plus:DI (reg:DI 0 ax [orig:153 _67 ] [153])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":103 222 {*adddi_1}
     (nil))
(insn 234 233 1434 31 (parallel [
            (set (reg:DI 0 ax [orig:155 _69 ] [155])
                (mult:DI (reg:DI 0 ax [orig:154 _68 ] [154])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":103 349 {*muldi3_1}
     (nil))
(insn 1434 234 236 31 (set (reg:DI 1 dx [756])
        (mult:DI (reg:DI 0 ax [orig:155 _69 ] [155])
            (const_int 4 [0x4]))) "CALRCH.f":103 218 {*leadi}
     (nil))
(insn 236 1434 237 31 (set (reg:DI 0 ax [757])
        (symbol_ref:DI ("thv.4234") [flags 0x202]  <var_decl 0x7fe96ef1e900 thv>)) "CALRCH.f":103 85 {*movdi_internal}
     (nil))
(insn 237 236 238 31 (parallel [
            (set (reg/f:DI 0 ax [orig:156 _70 ] [156])
                (plus:DI (reg:DI 0 ax [757])
                    (reg:DI 1 dx [756])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":103 222 {*adddi_1}
     (nil))
(insn 238 237 239 31 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:156 _70 ] [156])) "CALRCH.f":103 85 {*movdi_internal}
     (nil))
(insn 239 238 240 31 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CALRCH.f":103 88 {*movqi_internal}
     (nil))
(call_insn 240 239 241 31 (call (mem:QI (symbol_ref:DI ("exch_") [flags 0x41]  <function_decl 0x7fe96eeef600 exch>) [0 exch S1 A8])
        (const_int 0 [0])) "CALRCH.f":103 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 241 240 242 31 (set (reg:SI 1 dx [orig:688 _659 ] [688])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7fe96ef06630 parallel>)
                    (const_int 8 [0x8]))) [1 parallel.jsta+0 S4 A64])) "CALRCH.f":107 86 {*movsi_internal}
     (nil))
(insn 242 241 243 31 (set (reg:SI 0 ax [orig:689 _660 ] [689])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7fe96ef06630 parallel>)
                    (const_int 20 [0x14]))) [1 parallel.jend_m+0 S4 A32])) "CALRCH.f":107 86 {*movsi_internal}
     (nil))
(insn 243 242 345 31 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])
        (reg:SI 1 dx [orig:688 _659 ] [688])) "CALRCH.f":107 86 {*movsi_internal}
     (nil))
;;  succ:       33 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 33, loop depth 0, maybe hot
;;  prev block 31, next block 34, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       31 (FALLTHRU)
;;              37 [always] 
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 17 [flags]
(code_label 345 243 244 33 20 (nil) [1 uses])
(note 244 345 245 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 245 244 246 33 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])
            (reg:SI 0 ax [orig:689 _660 ] [689]))) "CALRCH.f":107 11 {*cmpsi_1}
     (nil))
(insn 246 245 247 33 (set (reg:QI 1 dx [758])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALRCH.f":107 678 {*setcc_qi}
     (nil))
(insn 247 246 248 33 (set (reg:SI 1 dx [orig:690 _662 ] [690])
        (zero_extend:SI (reg:QI 1 dx [758]))) "CALRCH.f":107 140 {*zero_extendqisi2}
     (nil))
(insn 248 247 249 33 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:690 _662 ] [690])
            (const_int 0 [0]))) "CALRCH.f":107 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 249 248 250 33 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1346)
            (pc))) "CALRCH.f":107 682 {*jcc}
     (nil)
 -> 1346)
;;  succ:       39
;;              34 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 34, loop depth 0, maybe hot
;;  prev block 33, next block 35, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       33 (FALLTHRU)
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(note 250 249 251 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 251 250 339 34 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
        (const_int 1 [0x1])) "CALRCH.f":108 86 {*movsi_internal}
     (nil))
;;  succ:       35 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 35, loop depth 0, maybe hot
;;  prev block 34, next block 36, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       34 (FALLTHRU)
;;              36 [always] 
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 17 [flags]
(code_label 339 251 252 35 19 (nil) [1 uses])
(note 252 339 253 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 253 252 254 35 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
            (const_int 118 [0x76]))) "CALRCH.f":108 11 {*cmpsi_1}
     (nil))
(insn 254 253 255 35 (set (reg:QI 1 dx [759])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALRCH.f":108 678 {*setcc_qi}
     (nil))
(insn 255 254 256 35 (set (reg:SI 1 dx [orig:691 _664 ] [691])
        (zero_extend:SI (reg:QI 1 dx [759]))) "CALRCH.f":108 140 {*zero_extendqisi2}
     (nil))
(insn 256 255 257 35 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:691 _664 ] [691])
            (const_int 0 [0]))) "CALRCH.f":108 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 257 256 258 35 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1349)
            (pc))) "CALRCH.f":108 682 {*jcc}
     (nil)
 -> 1349)
;;  succ:       37
;;              36 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 36, loop depth 0, maybe hot
;;  prev block 35, next block 37, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       35 (FALLTHRU)
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 2 [cx] 17 [flags] 21 [xmm0] 22 [xmm1]
(note 258 257 259 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 259 258 260 36 (set (reg:SI 1 dx [760])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALRCH.f":109 86 {*movsi_internal}
     (nil))
(insn 260 259 261 36 (set (reg:DI 1 dx [orig:157 _71 ] [157])
        (sign_extend:DI (reg:SI 1 dx [760]))) "CALRCH.f":109 149 {*extendsidi2_rex64}
     (nil))
(insn 261 260 262 36 (parallel [
            (set (reg:DI 1 dx [orig:158 _72 ] [158])
                (plus:DI (reg:DI 1 dx [orig:157 _71 ] [157])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":109 222 {*adddi_1}
     (nil))
(insn 262 261 266 36 (set (reg:SI 2 cx [orig:159 _73 ] [159])
        (mem:SI (plus:DI (mult:DI (reg:DI 1 dx [orig:158 _72 ] [158])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("indx_") [flags 0x2]  <var_decl 0x7fe96ef00630 indx>)) [1 indx.ihe S4 A32])) "CALRCH.f":109 86 {*movsi_internal}
     (nil))
(insn 266 262 267 36 (set (reg:SI 1 dx [764])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALRCH.f":109 86 {*movsi_internal}
     (nil))
(insn 267 266 268 36 (parallel [
            (set (reg:SI 1 dx [763])
                (plus:SI (reg:SI 1 dx [764])
                    (reg:SI 2 cx [orig:159 _73 ] [159])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":109 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (reg:SI 2 cx [orig:159 _73 ] [159])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32]))
        (nil)))
(insn 268 267 269 36 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 ie+0 S4 A32])
        (reg:SI 1 dx [763])) "CALRCH.f":109 86 {*movsi_internal}
     (nil))
(insn 269 268 270 36 (set (reg:SI 1 dx [765])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALRCH.f":111 86 {*movsi_internal}
     (nil))
(insn 270 269 271 36 (set (reg:DI 1 dx [orig:160 _74 ] [160])
        (sign_extend:DI (reg:SI 1 dx [765]))) "CALRCH.f":111 149 {*extendsidi2_rex64}
     (nil))
(insn 271 270 272 36 (parallel [
            (set (reg:DI 2 cx [orig:161 _75 ] [161])
                (mult:DI (reg:DI 1 dx [orig:160 _74 ] [160])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":111 349 {*muldi3_1}
     (nil))
(insn 272 271 273 36 (set (reg:SI 1 dx [766])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALRCH.f":111 86 {*movsi_internal}
     (nil))
(insn 273 272 274 36 (parallel [
            (set (reg:SI 1 dx [orig:162 _76 ] [162])
                (plus:SI (reg:SI 1 dx [766])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":111 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 274 273 275 36 (set (reg:DI 1 dx [orig:163 _77 ] [163])
        (sign_extend:DI (reg:SI 1 dx [orig:162 _76 ] [162]))) "CALRCH.f":111 149 {*extendsidi2_rex64}
     (nil))
(insn 275 274 276 36 (parallel [
            (set (reg:DI 1 dx [orig:164 _78 ] [164])
                (mult:DI (reg:DI 1 dx [orig:163 _77 ] [163])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":111 349 {*muldi3_1}
     (nil))
(insn 276 275 277 36 (parallel [
            (set (reg:DI 2 cx [orig:165 _79 ] [165])
                (plus:DI (reg:DI 2 cx [orig:161 _75 ] [161])
                    (reg:DI 1 dx [orig:164 _78 ] [164])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":111 222 {*adddi_1}
     (nil))
(insn 277 276 278 36 (set (reg:SI 1 dx [767])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 ie+0 S4 A32])) "CALRCH.f":111 86 {*movsi_internal}
     (nil))
(insn 278 277 279 36 (set (reg:DI 1 dx [orig:166 _80 ] [166])
        (sign_extend:DI (reg:SI 1 dx [767]))) "CALRCH.f":111 149 {*extendsidi2_rex64}
     (nil))
(insn 279 278 1429 36 (parallel [
            (set (reg:DI 1 dx [orig:167 _81 ] [167])
                (plus:DI (reg:DI 1 dx [orig:166 _80 ] [166])
                    (reg:DI 2 cx [orig:165 _79 ] [165])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":111 222 {*adddi_1}
     (nil))
(insn 1429 279 281 36 (set (reg:DI 2 cx [orig:168 _82 ] [168])
        (plus:DI (reg:DI 1 dx [orig:167 _81 ] [167])
            (const_int -29751 [0xffffffffffff8bc9]))) "CALRCH.f":111 218 {*leadi}
     (nil))
(insn 281 1429 282 36 (set (reg/f:DI 1 dx [768])
        (symbol_ref:DI ("thv.4234") [flags 0x202]  <var_decl 0x7fe96ef1e900 thv>)) "CALRCH.f":111 85 {*movdi_internal}
     (nil))
(insn 282 281 283 36 (set (reg:SF 21 xmm0 [orig:169 _83 ] [169])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:168 _82 ] [168])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [768])) [2 thv S4 A32])) "CALRCH.f":111 131 {*movsf_internal}
     (nil))
(insn 283 282 284 36 (set (reg:SI 1 dx [769])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALRCH.f":111 86 {*movsi_internal}
     (nil))
(insn 284 283 285 36 (set (reg:DI 1 dx [orig:170 _84 ] [170])
        (sign_extend:DI (reg:SI 1 dx [769]))) "CALRCH.f":111 149 {*extendsidi2_rex64}
     (nil))
(insn 285 284 286 36 (parallel [
            (set (reg:DI 2 cx [orig:171 _85 ] [171])
                (mult:DI (reg:DI 1 dx [orig:170 _84 ] [170])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":111 349 {*muldi3_1}
     (nil))
(insn 286 285 287 36 (set (reg:SI 1 dx [770])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALRCH.f":111 86 {*movsi_internal}
     (nil))
(insn 287 286 288 36 (set (reg:DI 1 dx [orig:172 _86 ] [172])
        (sign_extend:DI (reg:SI 1 dx [770]))) "CALRCH.f":111 149 {*extendsidi2_rex64}
     (nil))
(insn 288 287 289 36 (parallel [
            (set (reg:DI 1 dx [orig:173 _87 ] [173])
                (mult:DI (reg:DI 1 dx [orig:172 _86 ] [172])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":111 349 {*muldi3_1}
     (nil))
(insn 289 288 290 36 (parallel [
            (set (reg:DI 2 cx [orig:174 _88 ] [174])
                (plus:DI (reg:DI 2 cx [orig:171 _85 ] [171])
                    (reg:DI 1 dx [orig:173 _87 ] [173])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":111 222 {*adddi_1}
     (nil))
(insn 290 289 291 36 (set (reg:SI 1 dx [771])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALRCH.f":111 86 {*movsi_internal}
     (nil))
(insn 291 290 292 36 (set (reg:DI 1 dx [orig:175 _89 ] [175])
        (sign_extend:DI (reg:SI 1 dx [771]))) "CALRCH.f":111 149 {*extendsidi2_rex64}
     (nil))
(insn 292 291 1430 36 (parallel [
            (set (reg:DI 1 dx [orig:176 _90 ] [176])
                (plus:DI (reg:DI 1 dx [orig:175 _89 ] [175])
                    (reg:DI 2 cx [orig:174 _88 ] [174])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":111 222 {*adddi_1}
     (nil))
(insn 1430 292 294 36 (set (reg:DI 2 cx [orig:177 _91 ] [177])
        (plus:DI (reg:DI 1 dx [orig:176 _90 ] [176])
            (const_int -29751 [0xffffffffffff8bc9]))) "CALRCH.f":111 218 {*leadi}
     (nil))
(insn 294 1430 295 36 (set (reg/f:DI 1 dx [772])
        (symbol_ref:DI ("thv.4234") [flags 0x202]  <var_decl 0x7fe96ef1e900 thv>)) "CALRCH.f":111 85 {*movdi_internal}
     (nil))
(insn 295 294 296 36 (set (reg:SF 22 xmm1 [orig:178 _92 ] [178])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:177 _91 ] [177])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [772])) [2 thv S4 A32])) "CALRCH.f":111 131 {*movsf_internal}
     (nil))
(insn 296 295 297 36 (set (reg:SF 21 xmm0 [orig:179 _93 ] [179])
        (minus:SF (reg:SF 21 xmm0 [orig:169 _83 ] [169])
            (reg:SF 22 xmm1 [orig:178 _92 ] [178]))) "CALRCH.f":111 841 {*fop_sf_1}
     (nil))
(insn 297 296 298 36 (set (reg:SF 22 xmm1 [orig:180 _94 ] [180])
        (reg:SF 21 xmm0 [orig:179 _93 ] [179])) "CALRCH.f":111 131 {*movsf_internal}
     (nil))
(insn 298 297 299 36 (set (reg:SI 1 dx [773])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALRCH.f":111 86 {*movsi_internal}
     (nil))
(insn 299 298 300 36 (set (reg:DI 1 dx [orig:181 _95 ] [181])
        (sign_extend:DI (reg:SI 1 dx [773]))) "CALRCH.f":111 149 {*extendsidi2_rex64}
     (nil))
(insn 300 299 301 36 (parallel [
            (set (reg:DI 2 cx [orig:182 _96 ] [182])
                (mult:DI (reg:DI 1 dx [orig:181 _95 ] [181])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":111 349 {*muldi3_1}
     (nil))
(insn 301 300 302 36 (set (reg:SI 1 dx [774])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALRCH.f":111 86 {*movsi_internal}
     (nil))
(insn 302 301 303 36 (set (reg:DI 1 dx [orig:183 _97 ] [183])
        (sign_extend:DI (reg:SI 1 dx [774]))) "CALRCH.f":111 149 {*extendsidi2_rex64}
     (nil))
(insn 303 302 304 36 (parallel [
            (set (reg:DI 1 dx [orig:184 _98 ] [184])
                (mult:DI (reg:DI 1 dx [orig:183 _97 ] [183])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":111 349 {*muldi3_1}
     (nil))
(insn 304 303 305 36 (parallel [
            (set (reg:DI 2 cx [orig:185 _99 ] [185])
                (plus:DI (reg:DI 2 cx [orig:182 _96 ] [182])
                    (reg:DI 1 dx [orig:184 _98 ] [184])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":111 222 {*adddi_1}
     (nil))
(insn 305 304 306 36 (set (reg:SI 1 dx [775])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALRCH.f":111 86 {*movsi_internal}
     (nil))
(insn 306 305 307 36 (set (reg:DI 1 dx [orig:186 _100 ] [186])
        (sign_extend:DI (reg:SI 1 dx [775]))) "CALRCH.f":111 149 {*extendsidi2_rex64}
     (nil))
(insn 307 306 1431 36 (parallel [
            (set (reg:DI 1 dx [orig:187 _101 ] [187])
                (plus:DI (reg:DI 1 dx [orig:186 _100 ] [186])
                    (reg:DI 2 cx [orig:185 _99 ] [185])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":111 222 {*adddi_1}
     (nil))
(insn 1431 307 309 36 (set (reg:DI 2 cx [orig:188 _102 ] [188])
        (plus:DI (reg:DI 1 dx [orig:187 _101 ] [187])
            (const_int -29751 [0xffffffffffff8bc9]))) "CALRCH.f":111 218 {*leadi}
     (nil))
(insn 309 1431 310 36 (set (reg/f:DI 1 dx [776])
        (symbol_ref:DI ("masks_") [flags 0x202]  <var_decl 0x7fe96ef00d80 masks>)) "CALRCH.f":111 85 {*movdi_internal}
     (nil))
(insn 310 309 311 36 (parallel [
            (set (reg:DI 2 cx [777])
                (plus:DI (reg:DI 2 cx [orig:188 _102 ] [188])
                    (const_int 148155 [0x242bb])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":111 222 {*adddi_1}
     (nil))
(insn 311 310 312 36 (set (reg:SF 21 xmm0 [orig:189 _103 ] [189])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [777])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [776])) [2 masks.htm S4 A32])) "CALRCH.f":111 131 {*movsf_internal}
     (nil))
(insn 312 311 313 36 (set (reg:SF 22 xmm1 [orig:190 _104 ] [190])
        (mult:SF (reg:SF 22 xmm1 [orig:180 _94 ] [180])
            (reg:SF 21 xmm0 [orig:189 _103 ] [189]))) "CALRCH.f":111 838 {*fop_sf_comm}
     (nil))
(insn 313 312 314 36 (set (reg:SI 1 dx [778])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALRCH.f":111 86 {*movsi_internal}
     (nil))
(insn 314 313 315 36 (set (reg:DI 1 dx [orig:191 _105 ] [191])
        (sign_extend:DI (reg:SI 1 dx [778]))) "CALRCH.f":111 149 {*extendsidi2_rex64}
     (nil))
(insn 315 314 316 36 (parallel [
            (set (reg:DI 2 cx [orig:192 _106 ] [192])
                (mult:DI (reg:DI 1 dx [orig:191 _105 ] [191])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":111 349 {*muldi3_1}
     (nil))
(insn 316 315 317 36 (set (reg:SI 1 dx [779])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALRCH.f":111 86 {*movsi_internal}
     (nil))
(insn 317 316 318 36 (parallel [
            (set (reg:SI 1 dx [orig:193 _107 ] [193])
                (plus:SI (reg:SI 1 dx [779])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":111 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 318 317 319 36 (set (reg:DI 1 dx [orig:194 _108 ] [194])
        (sign_extend:DI (reg:SI 1 dx [orig:193 _107 ] [193]))) "CALRCH.f":111 149 {*extendsidi2_rex64}
     (nil))
(insn 319 318 320 36 (parallel [
            (set (reg:DI 1 dx [orig:195 _109 ] [195])
                (mult:DI (reg:DI 1 dx [orig:194 _108 ] [194])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":111 349 {*muldi3_1}
     (nil))
(insn 320 319 321 36 (parallel [
            (set (reg:DI 2 cx [orig:196 _110 ] [196])
                (plus:DI (reg:DI 2 cx [orig:192 _106 ] [192])
                    (reg:DI 1 dx [orig:195 _109 ] [195])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":111 222 {*adddi_1}
     (nil))
(insn 321 320 322 36 (set (reg:SI 1 dx [780])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 ie+0 S4 A32])) "CALRCH.f":111 86 {*movsi_internal}
     (nil))
(insn 322 321 323 36 (set (reg:DI 1 dx [orig:197 _111 ] [197])
        (sign_extend:DI (reg:SI 1 dx [780]))) "CALRCH.f":111 149 {*extendsidi2_rex64}
     (nil))
(insn 323 322 1432 36 (parallel [
            (set (reg:DI 1 dx [orig:198 _112 ] [198])
                (plus:DI (reg:DI 1 dx [orig:197 _111 ] [197])
                    (reg:DI 2 cx [orig:196 _110 ] [196])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":111 222 {*adddi_1}
     (nil))
(insn 1432 323 325 36 (set (reg:DI 2 cx [orig:199 _113 ] [199])
        (plus:DI (reg:DI 1 dx [orig:198 _112 ] [198])
            (const_int -29751 [0xffffffffffff8bc9]))) "CALRCH.f":111 218 {*leadi}
     (nil))
(insn 325 1432 326 36 (set (reg/f:DI 1 dx [781])
        (symbol_ref:DI ("masks_") [flags 0x202]  <var_decl 0x7fe96ef00d80 masks>)) "CALRCH.f":111 85 {*movdi_internal}
     (nil))
(insn 326 325 327 36 (parallel [
            (set (reg:DI 2 cx [782])
                (plus:DI (reg:DI 2 cx [orig:199 _113 ] [199])
                    (const_int 148155 [0x242bb])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":111 222 {*adddi_1}
     (nil))
(insn 327 326 328 36 (set (reg:SF 21 xmm0 [orig:200 _114 ] [200])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [782])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [781])) [2 masks.htm S4 A32])) "CALRCH.f":111 131 {*movsf_internal}
     (nil))
(insn 328 327 329 36 (set (reg:SI 1 dx [783])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALRCH.f":111 86 {*movsi_internal}
     (nil))
(insn 329 328 330 36 (set (reg:DI 1 dx [orig:201 _115 ] [201])
        (sign_extend:DI (reg:SI 1 dx [783]))) "CALRCH.f":111 149 {*extendsidi2_rex64}
     (nil))
(insn 330 329 331 36 (parallel [
            (set (reg:DI 2 cx [orig:202 _116 ] [202])
                (mult:DI (reg:DI 1 dx [orig:201 _115 ] [201])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":111 349 {*muldi3_1}
     (nil))
(insn 331 330 332 36 (set (reg:SI 1 dx [784])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALRCH.f":111 86 {*movsi_internal}
     (nil))
(insn 332 331 333 36 (set (reg:DI 1 dx [orig:203 _117 ] [203])
        (sign_extend:DI (reg:SI 1 dx [784]))) "CALRCH.f":111 149 {*extendsidi2_rex64}
     (nil))
(insn 333 332 1433 36 (parallel [
            (set (reg:DI 1 dx [orig:204 _118 ] [204])
                (plus:DI (reg:DI 1 dx [orig:203 _117 ] [203])
                    (reg:DI 2 cx [orig:202 _116 ] [202])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":111 222 {*adddi_1}
     (nil))
(insn 1433 333 335 36 (set (reg:DI 2 cx [orig:205 _119 ] [205])
        (plus:DI (reg:DI 1 dx [orig:204 _118 ] [204])
            (const_int -120 [0xffffffffffffff88]))) "CALRCH.f":111 218 {*leadi}
     (nil))
(insn 335 1433 336 36 (set (reg:SF 21 xmm0 [orig:206 _120 ] [206])
        (mult:SF (reg:SF 21 xmm0 [orig:200 _114 ] [200])
            (reg:SF 22 xmm1 [orig:190 _104 ] [190]))) "CALRCH.f":111 838 {*fop_sf_comm}
     (nil))
(insn 336 335 337 36 (set (reg/f:DI 1 dx [785])
        (symbol_ref:DI ("egrid1.4217") [flags 0x202]  <var_decl 0x7fe96ef1e120 egrid1>)) "CALRCH.f":111 85 {*movdi_internal}
     (nil))
(insn 337 336 338 36 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:205 _119 ] [205])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [785])) [2 egrid1 S4 A32])
        (reg:SF 21 xmm0 [orig:206 _120 ] [206])) "CALRCH.f":111 131 {*movsf_internal}
     (nil))
(insn 338 337 1298 36 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":108 221 {*addsi_1}
     (nil))
(jump_insn 1298 338 1299 36 (set (pc)
        (label_ref 339)) "CALRCH.f":108 683 {jump}
     (nil)
 -> 339)
;;  succ:       35 [always] 
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

(barrier 1299 1298 1349)
;; basic block 37, loop depth 0, maybe hot
;;  prev block 36, next block 39, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       35
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 1349 1299 1348 37 57 (nil) [1 uses])
(note 1348 1349 1350 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 1350 1348 344 37 (const_int 0 [0]) "CALRCH.f":111 718 {nop}
     (nil))
(insn 344 1350 1300 37 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":107 221 {*addsi_1}
     (nil))
(jump_insn 1300 344 1301 37 (set (pc)
        (label_ref 345)) "CALRCH.f":107 683 {jump}
     (nil)
 -> 345)
;;  succ:       33 [always] 
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

(barrier 1301 1300 1346)
;; basic block 39, loop depth 0, maybe hot
;;  prev block 37, next block 41, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       33
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 1346 1301 1345 39 56 (nil) [1 uses])
(note 1345 1346 1347 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 1347 1345 350 39 (const_int 0 [0]) "CALRCH.f":108 718 {nop}
     (nil))
(insn 350 1347 351 39 (set (reg:SI 1 dx [orig:692 _669 ] [692])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7fe96ef06630 parallel>)
                    (const_int 16 [0x10]))) [1 parallel.jsta_m+0 S4 A128])) "CALRCH.f":115 86 {*movsi_internal}
     (nil))
(insn 351 350 352 39 (set (reg:SI 0 ax [orig:693 _670 ] [693])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7fe96ef06630 parallel>)
                    (const_int 12 [0xc]))) [1 parallel.jend+0 S4 A32])) "CALRCH.f":115 86 {*movsi_internal}
     (nil))
(insn 352 351 454 39 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])
        (reg:SI 1 dx [orig:692 _669 ] [692])) "CALRCH.f":115 86 {*movsi_internal}
     (nil))
;;  succ:       41 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 41, loop depth 0, maybe hot
;;  prev block 39, next block 42, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       39 (FALLTHRU)
;;              45 [always] 
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 17 [flags]
(code_label 454 352 353 41 24 (nil) [1 uses])
(note 353 454 354 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 354 353 355 41 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])
            (reg:SI 0 ax [orig:693 _670 ] [693]))) "CALRCH.f":115 11 {*cmpsi_1}
     (nil))
(insn 355 354 356 41 (set (reg:QI 1 dx [786])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALRCH.f":115 678 {*setcc_qi}
     (nil))
(insn 356 355 357 41 (set (reg:SI 1 dx [orig:694 _672 ] [694])
        (zero_extend:SI (reg:QI 1 dx [786]))) "CALRCH.f":115 140 {*zero_extendqisi2}
     (nil))
(insn 357 356 358 41 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:694 _672 ] [694])
            (const_int 0 [0]))) "CALRCH.f":115 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 358 357 359 41 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1352)
            (pc))) "CALRCH.f":115 682 {*jcc}
     (nil)
 -> 1352)
;;  succ:       47
;;              42 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 42, loop depth 0, maybe hot
;;  prev block 41, next block 43, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       41 (FALLTHRU)
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(note 359 358 360 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 360 359 448 42 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
        (const_int 1 [0x1])) "CALRCH.f":116 86 {*movsi_internal}
     (nil))
;;  succ:       43 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 43, loop depth 0, maybe hot
;;  prev block 42, next block 44, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       42 (FALLTHRU)
;;              44 [always] 
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 17 [flags]
(code_label 448 360 361 43 23 (nil) [1 uses])
(note 361 448 362 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 362 361 363 43 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
            (const_int 118 [0x76]))) "CALRCH.f":116 11 {*cmpsi_1}
     (nil))
(insn 363 362 364 43 (set (reg:QI 1 dx [787])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALRCH.f":116 678 {*setcc_qi}
     (nil))
(insn 364 363 365 43 (set (reg:SI 1 dx [orig:695 _674 ] [695])
        (zero_extend:SI (reg:QI 1 dx [787]))) "CALRCH.f":116 140 {*zero_extendqisi2}
     (nil))
(insn 365 364 366 43 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:695 _674 ] [695])
            (const_int 0 [0]))) "CALRCH.f":116 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 366 365 367 43 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1355)
            (pc))) "CALRCH.f":116 682 {*jcc}
     (nil)
 -> 1355)
;;  succ:       45
;;              44 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 44, loop depth 0, maybe hot
;;  prev block 43, next block 45, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       43 (FALLTHRU)
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 2 [cx] 17 [flags] 21 [xmm0] 22 [xmm1]
(note 367 366 368 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 368 367 369 44 (set (reg:SI 1 dx [788])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALRCH.f":117 86 {*movsi_internal}
     (nil))
(insn 369 368 370 44 (set (reg:DI 1 dx [orig:207 _121 ] [207])
        (sign_extend:DI (reg:SI 1 dx [788]))) "CALRCH.f":117 149 {*extendsidi2_rex64}
     (nil))
(insn 370 369 371 44 (parallel [
            (set (reg:DI 1 dx [orig:208 _122 ] [208])
                (plus:DI (reg:DI 1 dx [orig:207 _121 ] [207])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":117 222 {*adddi_1}
     (nil))
(insn 371 370 375 44 (set (reg:SI 2 cx [orig:209 _123 ] [209])
        (mem:SI (plus:DI (mult:DI (reg:DI 1 dx [orig:208 _122 ] [208])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("indx_") [flags 0x2]  <var_decl 0x7fe96ef00630 indx>)) [1 indx.ihe S4 A32])) "CALRCH.f":117 86 {*movsi_internal}
     (nil))
(insn 375 371 376 44 (set (reg:SI 1 dx [792])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALRCH.f":117 86 {*movsi_internal}
     (nil))
(insn 376 375 377 44 (parallel [
            (set (reg:SI 1 dx [791])
                (plus:SI (reg:SI 1 dx [792])
                    (reg:SI 2 cx [orig:209 _123 ] [209])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":117 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (reg:SI 2 cx [orig:209 _123 ] [209])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32]))
        (nil)))
(insn 377 376 378 44 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 ie+0 S4 A32])
        (reg:SI 1 dx [791])) "CALRCH.f":117 86 {*movsi_internal}
     (nil))
(insn 378 377 379 44 (set (reg:SI 1 dx [793])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALRCH.f":119 86 {*movsi_internal}
     (nil))
(insn 379 378 380 44 (set (reg:DI 1 dx [orig:210 _124 ] [210])
        (sign_extend:DI (reg:SI 1 dx [793]))) "CALRCH.f":119 149 {*extendsidi2_rex64}
     (nil))
(insn 380 379 381 44 (parallel [
            (set (reg:DI 2 cx [orig:211 _125 ] [211])
                (mult:DI (reg:DI 1 dx [orig:210 _124 ] [210])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":119 349 {*muldi3_1}
     (nil))
(insn 381 380 382 44 (set (reg:SI 1 dx [794])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALRCH.f":119 86 {*movsi_internal}
     (nil))
(insn 382 381 383 44 (parallel [
            (set (reg:SI 1 dx [orig:212 _126 ] [212])
                (plus:SI (reg:SI 1 dx [794])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":119 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 383 382 384 44 (set (reg:DI 1 dx [orig:213 _127 ] [213])
        (sign_extend:DI (reg:SI 1 dx [orig:212 _126 ] [212]))) "CALRCH.f":119 149 {*extendsidi2_rex64}
     (nil))
(insn 384 383 385 44 (parallel [
            (set (reg:DI 1 dx [orig:214 _128 ] [214])
                (mult:DI (reg:DI 1 dx [orig:213 _127 ] [213])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":119 349 {*muldi3_1}
     (nil))
(insn 385 384 386 44 (parallel [
            (set (reg:DI 2 cx [orig:215 _129 ] [215])
                (plus:DI (reg:DI 2 cx [orig:211 _125 ] [211])
                    (reg:DI 1 dx [orig:214 _128 ] [214])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":119 222 {*adddi_1}
     (nil))
(insn 386 385 387 44 (set (reg:SI 1 dx [795])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 ie+0 S4 A32])) "CALRCH.f":119 86 {*movsi_internal}
     (nil))
(insn 387 386 388 44 (set (reg:DI 1 dx [orig:216 _130 ] [216])
        (sign_extend:DI (reg:SI 1 dx [795]))) "CALRCH.f":119 149 {*extendsidi2_rex64}
     (nil))
(insn 388 387 1424 44 (parallel [
            (set (reg:DI 1 dx [orig:217 _131 ] [217])
                (plus:DI (reg:DI 1 dx [orig:216 _130 ] [216])
                    (reg:DI 2 cx [orig:215 _129 ] [215])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":119 222 {*adddi_1}
     (nil))
(insn 1424 388 390 44 (set (reg:DI 2 cx [orig:218 _132 ] [218])
        (plus:DI (reg:DI 1 dx [orig:217 _131 ] [217])
            (const_int -29751 [0xffffffffffff8bc9]))) "CALRCH.f":119 218 {*leadi}
     (nil))
(insn 390 1424 391 44 (set (reg/f:DI 1 dx [796])
        (symbol_ref:DI ("thv.4234") [flags 0x202]  <var_decl 0x7fe96ef1e900 thv>)) "CALRCH.f":119 85 {*movdi_internal}
     (nil))
(insn 391 390 392 44 (set (reg:SF 21 xmm0 [orig:219 _133 ] [219])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:218 _132 ] [218])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [796])) [2 thv S4 A32])) "CALRCH.f":119 131 {*movsf_internal}
     (nil))
(insn 392 391 393 44 (set (reg:SI 1 dx [797])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALRCH.f":119 86 {*movsi_internal}
     (nil))
(insn 393 392 394 44 (set (reg:DI 1 dx [orig:220 _134 ] [220])
        (sign_extend:DI (reg:SI 1 dx [797]))) "CALRCH.f":119 149 {*extendsidi2_rex64}
     (nil))
(insn 394 393 395 44 (parallel [
            (set (reg:DI 2 cx [orig:221 _135 ] [221])
                (mult:DI (reg:DI 1 dx [orig:220 _134 ] [220])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":119 349 {*muldi3_1}
     (nil))
(insn 395 394 396 44 (set (reg:SI 1 dx [798])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALRCH.f":119 86 {*movsi_internal}
     (nil))
(insn 396 395 397 44 (set (reg:DI 1 dx [orig:222 _136 ] [222])
        (sign_extend:DI (reg:SI 1 dx [798]))) "CALRCH.f":119 149 {*extendsidi2_rex64}
     (nil))
(insn 397 396 398 44 (parallel [
            (set (reg:DI 1 dx [orig:223 _137 ] [223])
                (mult:DI (reg:DI 1 dx [orig:222 _136 ] [222])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":119 349 {*muldi3_1}
     (nil))
(insn 398 397 399 44 (parallel [
            (set (reg:DI 2 cx [orig:224 _138 ] [224])
                (plus:DI (reg:DI 2 cx [orig:221 _135 ] [221])
                    (reg:DI 1 dx [orig:223 _137 ] [223])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":119 222 {*adddi_1}
     (nil))
(insn 399 398 400 44 (set (reg:SI 1 dx [799])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALRCH.f":119 86 {*movsi_internal}
     (nil))
(insn 400 399 401 44 (set (reg:DI 1 dx [orig:225 _139 ] [225])
        (sign_extend:DI (reg:SI 1 dx [799]))) "CALRCH.f":119 149 {*extendsidi2_rex64}
     (nil))
(insn 401 400 1425 44 (parallel [
            (set (reg:DI 1 dx [orig:226 _140 ] [226])
                (plus:DI (reg:DI 1 dx [orig:225 _139 ] [225])
                    (reg:DI 2 cx [orig:224 _138 ] [224])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":119 222 {*adddi_1}
     (nil))
(insn 1425 401 403 44 (set (reg:DI 2 cx [orig:227 _141 ] [227])
        (plus:DI (reg:DI 1 dx [orig:226 _140 ] [226])
            (const_int -29751 [0xffffffffffff8bc9]))) "CALRCH.f":119 218 {*leadi}
     (nil))
(insn 403 1425 404 44 (set (reg/f:DI 1 dx [800])
        (symbol_ref:DI ("thv.4234") [flags 0x202]  <var_decl 0x7fe96ef1e900 thv>)) "CALRCH.f":119 85 {*movdi_internal}
     (nil))
(insn 404 403 405 44 (set (reg:SF 22 xmm1 [orig:228 _142 ] [228])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:227 _141 ] [227])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [800])) [2 thv S4 A32])) "CALRCH.f":119 131 {*movsf_internal}
     (nil))
(insn 405 404 406 44 (set (reg:SF 21 xmm0 [orig:229 _143 ] [229])
        (minus:SF (reg:SF 21 xmm0 [orig:219 _133 ] [219])
            (reg:SF 22 xmm1 [orig:228 _142 ] [228]))) "CALRCH.f":119 841 {*fop_sf_1}
     (nil))
(insn 406 405 407 44 (set (reg:SF 22 xmm1 [orig:230 _144 ] [230])
        (reg:SF 21 xmm0 [orig:229 _143 ] [229])) "CALRCH.f":119 131 {*movsf_internal}
     (nil))
(insn 407 406 408 44 (set (reg:SI 1 dx [801])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALRCH.f":119 86 {*movsi_internal}
     (nil))
(insn 408 407 409 44 (set (reg:DI 1 dx [orig:231 _145 ] [231])
        (sign_extend:DI (reg:SI 1 dx [801]))) "CALRCH.f":119 149 {*extendsidi2_rex64}
     (nil))
(insn 409 408 410 44 (parallel [
            (set (reg:DI 2 cx [orig:232 _146 ] [232])
                (mult:DI (reg:DI 1 dx [orig:231 _145 ] [231])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":119 349 {*muldi3_1}
     (nil))
(insn 410 409 411 44 (set (reg:SI 1 dx [802])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALRCH.f":119 86 {*movsi_internal}
     (nil))
(insn 411 410 412 44 (parallel [
            (set (reg:SI 1 dx [orig:233 _147 ] [233])
                (plus:SI (reg:SI 1 dx [802])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":119 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 412 411 413 44 (set (reg:DI 1 dx [orig:234 _148 ] [234])
        (sign_extend:DI (reg:SI 1 dx [orig:233 _147 ] [233]))) "CALRCH.f":119 149 {*extendsidi2_rex64}
     (nil))
(insn 413 412 414 44 (parallel [
            (set (reg:DI 1 dx [orig:235 _149 ] [235])
                (mult:DI (reg:DI 1 dx [orig:234 _148 ] [234])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":119 349 {*muldi3_1}
     (nil))
(insn 414 413 415 44 (parallel [
            (set (reg:DI 2 cx [orig:236 _150 ] [236])
                (plus:DI (reg:DI 2 cx [orig:232 _146 ] [232])
                    (reg:DI 1 dx [orig:235 _149 ] [235])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":119 222 {*adddi_1}
     (nil))
(insn 415 414 416 44 (set (reg:SI 1 dx [803])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 ie+0 S4 A32])) "CALRCH.f":119 86 {*movsi_internal}
     (nil))
(insn 416 415 417 44 (set (reg:DI 1 dx [orig:237 _151 ] [237])
        (sign_extend:DI (reg:SI 1 dx [803]))) "CALRCH.f":119 149 {*extendsidi2_rex64}
     (nil))
(insn 417 416 1426 44 (parallel [
            (set (reg:DI 1 dx [orig:238 _152 ] [238])
                (plus:DI (reg:DI 1 dx [orig:237 _151 ] [237])
                    (reg:DI 2 cx [orig:236 _150 ] [236])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":119 222 {*adddi_1}
     (nil))
(insn 1426 417 419 44 (set (reg:DI 2 cx [orig:239 _153 ] [239])
        (plus:DI (reg:DI 1 dx [orig:238 _152 ] [238])
            (const_int -29751 [0xffffffffffff8bc9]))) "CALRCH.f":119 218 {*leadi}
     (nil))
(insn 419 1426 420 44 (set (reg/f:DI 1 dx [804])
        (symbol_ref:DI ("masks_") [flags 0x202]  <var_decl 0x7fe96ef00d80 masks>)) "CALRCH.f":119 85 {*movdi_internal}
     (nil))
(insn 420 419 421 44 (parallel [
            (set (reg:DI 2 cx [805])
                (plus:DI (reg:DI 2 cx [orig:239 _153 ] [239])
                    (const_int 148155 [0x242bb])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":119 222 {*adddi_1}
     (nil))
(insn 421 420 422 44 (set (reg:SF 21 xmm0 [orig:240 _154 ] [240])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [805])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [804])) [2 masks.htm S4 A32])) "CALRCH.f":119 131 {*movsf_internal}
     (nil))
(insn 422 421 423 44 (set (reg:SF 22 xmm1 [orig:241 _155 ] [241])
        (mult:SF (reg:SF 22 xmm1 [orig:230 _144 ] [230])
            (reg:SF 21 xmm0 [orig:240 _154 ] [240]))) "CALRCH.f":119 838 {*fop_sf_comm}
     (nil))
(insn 423 422 424 44 (set (reg:SI 1 dx [806])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALRCH.f":119 86 {*movsi_internal}
     (nil))
(insn 424 423 425 44 (set (reg:DI 1 dx [orig:242 _156 ] [242])
        (sign_extend:DI (reg:SI 1 dx [806]))) "CALRCH.f":119 149 {*extendsidi2_rex64}
     (nil))
(insn 425 424 426 44 (parallel [
            (set (reg:DI 2 cx [orig:243 _157 ] [243])
                (mult:DI (reg:DI 1 dx [orig:242 _156 ] [242])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":119 349 {*muldi3_1}
     (nil))
(insn 426 425 427 44 (set (reg:SI 1 dx [807])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALRCH.f":119 86 {*movsi_internal}
     (nil))
(insn 427 426 428 44 (set (reg:DI 1 dx [orig:244 _158 ] [244])
        (sign_extend:DI (reg:SI 1 dx [807]))) "CALRCH.f":119 149 {*extendsidi2_rex64}
     (nil))
(insn 428 427 429 44 (parallel [
            (set (reg:DI 1 dx [orig:245 _159 ] [245])
                (mult:DI (reg:DI 1 dx [orig:244 _158 ] [244])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":119 349 {*muldi3_1}
     (nil))
(insn 429 428 430 44 (parallel [
            (set (reg:DI 2 cx [orig:246 _160 ] [246])
                (plus:DI (reg:DI 2 cx [orig:243 _157 ] [243])
                    (reg:DI 1 dx [orig:245 _159 ] [245])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":119 222 {*adddi_1}
     (nil))
(insn 430 429 431 44 (set (reg:SI 1 dx [808])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALRCH.f":119 86 {*movsi_internal}
     (nil))
(insn 431 430 432 44 (set (reg:DI 1 dx [orig:247 _161 ] [247])
        (sign_extend:DI (reg:SI 1 dx [808]))) "CALRCH.f":119 149 {*extendsidi2_rex64}
     (nil))
(insn 432 431 1427 44 (parallel [
            (set (reg:DI 1 dx [orig:248 _162 ] [248])
                (plus:DI (reg:DI 1 dx [orig:247 _161 ] [247])
                    (reg:DI 2 cx [orig:246 _160 ] [246])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":119 222 {*adddi_1}
     (nil))
(insn 1427 432 434 44 (set (reg:DI 2 cx [orig:249 _163 ] [249])
        (plus:DI (reg:DI 1 dx [orig:248 _162 ] [248])
            (const_int -29751 [0xffffffffffff8bc9]))) "CALRCH.f":119 218 {*leadi}
     (nil))
(insn 434 1427 435 44 (set (reg/f:DI 1 dx [809])
        (symbol_ref:DI ("masks_") [flags 0x202]  <var_decl 0x7fe96ef00d80 masks>)) "CALRCH.f":119 85 {*movdi_internal}
     (nil))
(insn 435 434 436 44 (parallel [
            (set (reg:DI 2 cx [810])
                (plus:DI (reg:DI 2 cx [orig:249 _163 ] [249])
                    (const_int 148155 [0x242bb])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":119 222 {*adddi_1}
     (nil))
(insn 436 435 437 44 (set (reg:SF 21 xmm0 [orig:250 _164 ] [250])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [810])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [809])) [2 masks.htm S4 A32])) "CALRCH.f":119 131 {*movsf_internal}
     (nil))
(insn 437 436 438 44 (set (reg:SI 1 dx [811])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALRCH.f":119 86 {*movsi_internal}
     (nil))
(insn 438 437 439 44 (set (reg:DI 1 dx [orig:251 _165 ] [251])
        (sign_extend:DI (reg:SI 1 dx [811]))) "CALRCH.f":119 149 {*extendsidi2_rex64}
     (nil))
(insn 439 438 440 44 (parallel [
            (set (reg:DI 2 cx [orig:252 _166 ] [252])
                (mult:DI (reg:DI 1 dx [orig:251 _165 ] [251])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":119 349 {*muldi3_1}
     (nil))
(insn 440 439 441 44 (set (reg:SI 1 dx [812])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALRCH.f":119 86 {*movsi_internal}
     (nil))
(insn 441 440 442 44 (set (reg:DI 1 dx [orig:253 _167 ] [253])
        (sign_extend:DI (reg:SI 1 dx [812]))) "CALRCH.f":119 149 {*extendsidi2_rex64}
     (nil))
(insn 442 441 1428 44 (parallel [
            (set (reg:DI 1 dx [orig:254 _168 ] [254])
                (plus:DI (reg:DI 1 dx [orig:253 _167 ] [253])
                    (reg:DI 2 cx [orig:252 _166 ] [252])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":119 222 {*adddi_1}
     (nil))
(insn 1428 442 444 44 (set (reg:DI 2 cx [orig:255 _169 ] [255])
        (plus:DI (reg:DI 1 dx [orig:254 _168 ] [254])
            (const_int -120 [0xffffffffffffff88]))) "CALRCH.f":119 218 {*leadi}
     (nil))
(insn 444 1428 445 44 (set (reg:SF 21 xmm0 [orig:256 _170 ] [256])
        (mult:SF (reg:SF 21 xmm0 [orig:250 _164 ] [250])
            (reg:SF 22 xmm1 [orig:241 _155 ] [241]))) "CALRCH.f":119 838 {*fop_sf_comm}
     (nil))
(insn 445 444 446 44 (set (reg/f:DI 1 dx [813])
        (symbol_ref:DI ("egrid2.4219") [flags 0x202]  <var_decl 0x7fe96ef1e1b0 egrid2>)) "CALRCH.f":119 85 {*movdi_internal}
     (nil))
(insn 446 445 447 44 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:255 _169 ] [255])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [813])) [2 egrid2 S4 A32])
        (reg:SF 21 xmm0 [orig:256 _170 ] [256])) "CALRCH.f":119 131 {*movsf_internal}
     (nil))
(insn 447 446 1302 44 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":116 221 {*addsi_1}
     (nil))
(jump_insn 1302 447 1303 44 (set (pc)
        (label_ref 448)) "CALRCH.f":116 683 {jump}
     (nil)
 -> 448)
;;  succ:       43 [always] 
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

(barrier 1303 1302 1355)
;; basic block 45, loop depth 0, maybe hot
;;  prev block 44, next block 47, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       43
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 1355 1303 1354 45 59 (nil) [1 uses])
(note 1354 1355 1356 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 1356 1354 453 45 (const_int 0 [0]) "CALRCH.f":119 718 {nop}
     (nil))
(insn 453 1356 1304 45 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":115 221 {*addsi_1}
     (nil))
(jump_insn 1304 453 1305 45 (set (pc)
        (label_ref 454)) "CALRCH.f":115 683 {jump}
     (nil)
 -> 454)
;;  succ:       41 [always] 
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

(barrier 1305 1304 1352)
;; basic block 47, loop depth 0, maybe hot
;;  prev block 45, next block 49, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       41
;; bb 47 artificial_defs: { }
;; bb 47 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 1352 1305 1351 47 58 (nil) [1 uses])
(note 1351 1352 1353 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 1353 1351 459 47 (const_int 0 [0]) "CALRCH.f":116 718 {nop}
     (nil))
(insn 459 1353 460 47 (set (reg:DI 5 di)
        (symbol_ref:DI ("egrid1.4217") [flags 0x202]  <var_decl 0x7fe96ef1e120 egrid1>)) "CALRCH.f":123 85 {*movdi_internal}
     (nil))
(insn 460 459 461 47 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CALRCH.f":123 88 {*movqi_internal}
     (nil))
(call_insn 461 460 462 47 (call (mem:QI (symbol_ref:DI ("exch_") [flags 0x41]  <function_decl 0x7fe96eeef600 exch>) [0 exch S1 A8])
        (const_int 0 [0])) "CALRCH.f":123 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 462 461 463 47 (set (reg:DI 5 di)
        (symbol_ref:DI ("egrid2.4219") [flags 0x202]  <var_decl 0x7fe96ef1e1b0 egrid2>)) "CALRCH.f":124 85 {*movdi_internal}
     (nil))
(insn 463 462 464 47 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CALRCH.f":124 88 {*movqi_internal}
     (nil))
(call_insn 464 463 465 47 (call (mem:QI (symbol_ref:DI ("exch_") [flags 0x41]  <function_decl 0x7fe96eeef600 exch>) [0 exch S1 A8])
        (const_int 0 [0])) "CALRCH.f":124 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 465 464 466 47 (set (reg:SI 1 dx [orig:696 _681 ] [696])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7fe96ef06630 parallel>)
                    (const_int 24 [0x18]))) [1 parallel.jsta_m2+0 S4 A64])) "CALRCH.f":126 86 {*movsi_internal}
     (nil))
(insn 466 465 467 47 (set (reg:SI 0 ax [orig:697 _682 ] [697])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7fe96ef06630 parallel>)
                    (const_int 28 [0x1c]))) [1 parallel.jend_m2+0 S4 A32])) "CALRCH.f":126 86 {*movsi_internal}
     (nil))
(insn 467 466 582 47 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])
        (reg:SI 1 dx [orig:696 _681 ] [696])) "CALRCH.f":126 86 {*movsi_internal}
     (nil))
;;  succ:       49 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 49, loop depth 0, maybe hot
;;  prev block 47, next block 50, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       47 (FALLTHRU)
;;              53 [always] 
;; bb 49 artificial_defs: { }
;; bb 49 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 17 [flags]
(code_label 582 467 468 49 28 (nil) [1 uses])
(note 468 582 469 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 469 468 470 49 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])
            (reg:SI 0 ax [orig:697 _682 ] [697]))) "CALRCH.f":126 11 {*cmpsi_1}
     (nil))
(insn 470 469 471 49 (set (reg:QI 1 dx [814])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALRCH.f":126 678 {*setcc_qi}
     (nil))
(insn 471 470 472 49 (set (reg:SI 1 dx [orig:698 _684 ] [698])
        (zero_extend:SI (reg:QI 1 dx [814]))) "CALRCH.f":126 140 {*zero_extendqisi2}
     (nil))
(insn 472 471 473 49 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:698 _684 ] [698])
            (const_int 0 [0]))) "CALRCH.f":126 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 473 472 474 49 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1358)
            (pc))) "CALRCH.f":126 682 {*jcc}
     (nil)
 -> 1358)
;;  succ:       55
;;              50 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 50, loop depth 0, maybe hot
;;  prev block 49, next block 51, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       49 (FALLTHRU)
;; bb 50 artificial_defs: { }
;; bb 50 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(note 474 473 475 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 475 474 576 50 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
        (const_int 2 [0x2])) "CALRCH.f":127 86 {*movsi_internal}
     (nil))
;;  succ:       51 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 51, loop depth 0, maybe hot
;;  prev block 50, next block 52, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       50 (FALLTHRU)
;;              52 [always] 
;; bb 51 artificial_defs: { }
;; bb 51 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 17 [flags]
(code_label 576 475 476 51 27 (nil) [1 uses])
(note 476 576 477 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 477 476 478 51 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
            (const_int 118 [0x76]))) "CALRCH.f":127 11 {*cmpsi_1}
     (nil))
(insn 478 477 479 51 (set (reg:QI 1 dx [815])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALRCH.f":127 678 {*setcc_qi}
     (nil))
(insn 479 478 480 51 (set (reg:SI 1 dx [orig:699 _686 ] [699])
        (zero_extend:SI (reg:QI 1 dx [815]))) "CALRCH.f":127 140 {*zero_extendqisi2}
     (nil))
(insn 480 479 481 51 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:699 _686 ] [699])
            (const_int 0 [0]))) "CALRCH.f":127 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 481 480 482 51 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1361)
            (pc))) "CALRCH.f":127 682 {*jcc}
     (nil)
 -> 1361)
;;  succ:       53
;;              52 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 52, loop depth 0, maybe hot
;;  prev block 51, next block 53, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       51 (FALLTHRU)
;; bb 52 artificial_defs: { }
;; bb 52 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 2 [cx] 17 [flags] 21 [xmm0] 22 [xmm1] 23 [xmm2]
(note 482 481 483 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 483 482 484 52 (set (reg:SI 1 dx [816])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALRCH.f":128 86 {*movsi_internal}
     (nil))
(insn 484 483 485 52 (set (reg:DI 1 dx [orig:257 _171 ] [257])
        (sign_extend:DI (reg:SI 1 dx [816]))) "CALRCH.f":128 149 {*extendsidi2_rex64}
     (nil))
(insn 485 484 486 52 (parallel [
            (set (reg:DI 1 dx [orig:258 _172 ] [258])
                (plus:DI (reg:DI 1 dx [orig:257 _171 ] [257])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":128 222 {*adddi_1}
     (nil))
(insn 486 485 487 52 (parallel [
            (set (reg:DI 1 dx [817])
                (plus:DI (reg:DI 1 dx [orig:258 _172 ] [258])
                    (const_int 249 [0xf9])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":128 222 {*adddi_1}
     (nil))
(insn 487 486 491 52 (set (reg:SI 2 cx [orig:259 _173 ] [259])
        (mem:SI (plus:DI (mult:DI (reg:DI 1 dx [817])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("indx_") [flags 0x2]  <var_decl 0x7fe96ef00630 indx>)) [1 indx.ihw S4 A32])) "CALRCH.f":128 86 {*movsi_internal}
     (nil))
(insn 491 487 492 52 (set (reg:SI 1 dx [821])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALRCH.f":128 86 {*movsi_internal}
     (nil))
(insn 492 491 493 52 (parallel [
            (set (reg:SI 1 dx [820])
                (plus:SI (reg:SI 1 dx [821])
                    (reg:SI 2 cx [orig:259 _173 ] [259])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":128 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (reg:SI 2 cx [orig:259 _173 ] [259])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32]))
        (nil)))
(insn 493 492 494 52 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 iw+0 S4 A32])
        (reg:SI 1 dx [820])) "CALRCH.f":128 86 {*movsi_internal}
     (nil))
(insn 494 493 495 52 (set (reg:SI 1 dx [822])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALRCH.f":131 86 {*movsi_internal}
     (nil))
(insn 495 494 496 52 (set (reg:DI 1 dx [orig:260 _174 ] [260])
        (sign_extend:DI (reg:SI 1 dx [822]))) "CALRCH.f":131 149 {*extendsidi2_rex64}
     (nil))
(insn 496 495 497 52 (parallel [
            (set (reg:DI 2 cx [orig:261 _175 ] [261])
                (mult:DI (reg:DI 1 dx [orig:260 _174 ] [260])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":131 349 {*muldi3_1}
     (nil))
(insn 497 496 498 52 (set (reg:SI 1 dx [823])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALRCH.f":131 86 {*movsi_internal}
     (nil))
(insn 498 497 499 52 (set (reg:DI 1 dx [orig:262 _176 ] [262])
        (sign_extend:DI (reg:SI 1 dx [823]))) "CALRCH.f":131 149 {*extendsidi2_rex64}
     (nil))
(insn 499 498 500 52 (parallel [
            (set (reg:DI 1 dx [orig:263 _177 ] [263])
                (mult:DI (reg:DI 1 dx [orig:262 _176 ] [262])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":131 349 {*muldi3_1}
     (nil))
(insn 500 499 501 52 (parallel [
            (set (reg:DI 2 cx [orig:264 _178 ] [264])
                (plus:DI (reg:DI 2 cx [orig:261 _175 ] [261])
                    (reg:DI 1 dx [orig:263 _177 ] [263])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":131 222 {*adddi_1}
     (nil))
(insn 501 500 502 52 (set (reg:SI 1 dx [824])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALRCH.f":131 86 {*movsi_internal}
     (nil))
(insn 502 501 503 52 (set (reg:DI 1 dx [orig:265 _179 ] [265])
        (sign_extend:DI (reg:SI 1 dx [824]))) "CALRCH.f":131 149 {*extendsidi2_rex64}
     (nil))
(insn 503 502 1417 52 (parallel [
            (set (reg:DI 1 dx [orig:266 _180 ] [266])
                (plus:DI (reg:DI 1 dx [orig:265 _179 ] [265])
                    (reg:DI 2 cx [orig:264 _178 ] [264])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":131 222 {*adddi_1}
     (nil))
(insn 1417 503 505 52 (set (reg:DI 2 cx [orig:267 _181 ] [267])
        (plus:DI (reg:DI 1 dx [orig:266 _180 ] [266])
            (const_int -29751 [0xffffffffffff8bc9]))) "CALRCH.f":131 218 {*leadi}
     (nil))
(insn 505 1417 506 52 (set (reg/f:DI 1 dx [825])
        (symbol_ref:DI ("thv.4234") [flags 0x202]  <var_decl 0x7fe96ef1e900 thv>)) "CALRCH.f":131 85 {*movdi_internal}
     (nil))
(insn 506 505 507 52 (set (reg:SF 22 xmm1 [orig:268 _182 ] [268])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:267 _181 ] [267])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [825])) [2 thv S4 A32])) "CALRCH.f":131 131 {*movsf_internal}
     (nil))
(insn 507 506 508 52 (set (reg:SI 1 dx [826])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALRCH.f":131 86 {*movsi_internal}
     (nil))
(insn 508 507 509 52 (set (reg:DI 1 dx [orig:269 _183 ] [269])
        (sign_extend:DI (reg:SI 1 dx [826]))) "CALRCH.f":131 149 {*extendsidi2_rex64}
     (nil))
(insn 509 508 510 52 (parallel [
            (set (reg:DI 2 cx [orig:270 _184 ] [270])
                (mult:DI (reg:DI 1 dx [orig:269 _183 ] [269])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":131 349 {*muldi3_1}
     (nil))
(insn 510 509 511 52 (set (reg:SI 1 dx [827])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALRCH.f":131 86 {*movsi_internal}
     (nil))
(insn 511 510 512 52 (set (reg:DI 1 dx [orig:271 _185 ] [271])
        (sign_extend:DI (reg:SI 1 dx [827]))) "CALRCH.f":131 149 {*extendsidi2_rex64}
     (nil))
(insn 512 511 1418 52 (parallel [
            (set (reg:DI 1 dx [orig:272 _186 ] [272])
                (plus:DI (reg:DI 1 dx [orig:271 _185 ] [271])
                    (reg:DI 2 cx [orig:270 _184 ] [270])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":131 222 {*adddi_1}
     (nil))
(insn 1418 512 514 52 (set (reg:DI 2 cx [orig:273 _187 ] [273])
        (plus:DI (reg:DI 1 dx [orig:272 _186 ] [272])
            (const_int -120 [0xffffffffffffff88]))) "CALRCH.f":131 218 {*leadi}
     (nil))
(insn 514 1418 515 52 (set (reg/f:DI 1 dx [828])
        (symbol_ref:DI ("egrid1.4217") [flags 0x202]  <var_decl 0x7fe96ef1e120 egrid1>)) "CALRCH.f":131 85 {*movdi_internal}
     (nil))
(insn 515 514 516 52 (set (reg:SF 21 xmm0 [orig:274 _188 ] [274])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:273 _187 ] [273])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [828])) [2 egrid1 S4 A32])) "CALRCH.f":131 131 {*movsf_internal}
     (nil))
(insn 516 515 517 52 (set (reg:SI 1 dx [829])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALRCH.f":131 86 {*movsi_internal}
     (nil))
(insn 517 516 518 52 (parallel [
            (set (reg:SI 1 dx [orig:275 _189 ] [275])
                (plus:SI (reg:SI 1 dx [829])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":131 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 518 517 519 52 (set (reg:DI 1 dx [orig:276 _190 ] [276])
        (sign_extend:DI (reg:SI 1 dx [orig:275 _189 ] [275]))) "CALRCH.f":131 149 {*extendsidi2_rex64}
     (nil))
(insn 519 518 520 52 (parallel [
            (set (reg:DI 2 cx [orig:277 _191 ] [277])
                (mult:DI (reg:DI 1 dx [orig:276 _190 ] [276])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":131 349 {*muldi3_1}
     (nil))
(insn 520 519 521 52 (set (reg:SI 1 dx [830])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 iw+0 S4 A32])) "CALRCH.f":131 86 {*movsi_internal}
     (nil))
(insn 521 520 522 52 (set (reg:DI 1 dx [orig:278 _192 ] [278])
        (sign_extend:DI (reg:SI 1 dx [830]))) "CALRCH.f":131 149 {*extendsidi2_rex64}
     (nil))
(insn 522 521 1419 52 (parallel [
            (set (reg:DI 1 dx [orig:279 _193 ] [279])
                (plus:DI (reg:DI 1 dx [orig:278 _192 ] [278])
                    (reg:DI 2 cx [orig:277 _191 ] [277])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":131 222 {*adddi_1}
     (nil))
(insn 1419 522 524 52 (set (reg:DI 2 cx [orig:280 _194 ] [280])
        (plus:DI (reg:DI 1 dx [orig:279 _193 ] [279])
            (const_int -120 [0xffffffffffffff88]))) "CALRCH.f":131 218 {*leadi}
     (nil))
(insn 524 1419 525 52 (set (reg/f:DI 1 dx [831])
        (symbol_ref:DI ("egrid1.4217") [flags 0x202]  <var_decl 0x7fe96ef1e120 egrid1>)) "CALRCH.f":131 85 {*movdi_internal}
     (nil))
(insn 525 524 526 52 (set (reg:SF 23 xmm2 [orig:281 _195 ] [281])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:280 _194 ] [280])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [831])) [2 egrid1 S4 A32])) "CALRCH.f":131 131 {*movsf_internal}
     (nil))
(insn 526 525 1374 52 (set (reg:SF 21 xmm0 [orig:274 _188 ] [274])
        (minus:SF (reg:SF 21 xmm0 [orig:274 _188 ] [274])
            (reg:SF 23 xmm2 [orig:281 _195 ] [281]))) "CALRCH.f":131 841 {*fop_sf_1}
     (nil))
(insn 1374 526 527 52 (set (reg:SF 23 xmm2 [orig:282 _196 ] [282])
        (reg:SF 21 xmm0 [orig:274 _188 ] [274])) "CALRCH.f":131 131 {*movsf_internal}
     (nil))
(insn 527 1374 528 52 (set (reg:SI 1 dx [832])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALRCH.f":131 86 {*movsi_internal}
     (nil))
(insn 528 527 529 52 (set (reg:DI 1 dx [orig:283 _197 ] [283])
        (sign_extend:DI (reg:SI 1 dx [832]))) "CALRCH.f":131 149 {*extendsidi2_rex64}
     (nil))
(insn 529 528 530 52 (parallel [
            (set (reg:DI 2 cx [orig:284 _198 ] [284])
                (mult:DI (reg:DI 1 dx [orig:283 _197 ] [283])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":131 349 {*muldi3_1}
     (nil))
(insn 530 529 531 52 (set (reg:SI 1 dx [833])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALRCH.f":131 86 {*movsi_internal}
     (nil))
(insn 531 530 532 52 (set (reg:DI 1 dx [orig:285 _199 ] [285])
        (sign_extend:DI (reg:SI 1 dx [833]))) "CALRCH.f":131 149 {*extendsidi2_rex64}
     (nil))
(insn 532 531 1420 52 (parallel [
            (set (reg:DI 1 dx [orig:286 _200 ] [286])
                (plus:DI (reg:DI 1 dx [orig:285 _199 ] [285])
                    (reg:DI 2 cx [orig:284 _198 ] [284])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":131 222 {*adddi_1}
     (nil))
(insn 1420 532 534 52 (set (reg:DI 2 cx [orig:287 _201 ] [287])
        (plus:DI (reg:DI 1 dx [orig:286 _200 ] [286])
            (const_int -120 [0xffffffffffffff88]))) "CALRCH.f":131 218 {*leadi}
     (nil))
(insn 534 1420 535 52 (set (reg/f:DI 1 dx [834])
        (symbol_ref:DI ("egrid2.4219") [flags 0x202]  <var_decl 0x7fe96ef1e1b0 egrid2>)) "CALRCH.f":131 85 {*movdi_internal}
     (nil))
(insn 535 534 536 52 (set (reg:SF 21 xmm0 [orig:288 _202 ] [288])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:287 _201 ] [287])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [834])) [2 egrid2 S4 A32])) "CALRCH.f":131 131 {*movsf_internal}
     (nil))
(insn 536 535 537 52 (set (reg:SF 21 xmm0 [orig:289 _203 ] [289])
        (plus:SF (reg:SF 21 xmm0 [orig:288 _202 ] [288])
            (reg:SF 23 xmm2 [orig:282 _196 ] [282]))) "CALRCH.f":131 838 {*fop_sf_comm}
     (nil))
(insn 537 536 538 52 (set (reg:SI 1 dx [835])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALRCH.f":131 86 {*movsi_internal}
     (nil))
(insn 538 537 539 52 (parallel [
            (set (reg:SI 1 dx [orig:290 _204 ] [290])
                (plus:SI (reg:SI 1 dx [835])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":131 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 539 538 540 52 (set (reg:DI 1 dx [orig:291 _205 ] [291])
        (sign_extend:DI (reg:SI 1 dx [orig:290 _204 ] [290]))) "CALRCH.f":131 149 {*extendsidi2_rex64}
     (nil))
(insn 540 539 541 52 (parallel [
            (set (reg:DI 2 cx [orig:292 _206 ] [292])
                (mult:DI (reg:DI 1 dx [orig:291 _205 ] [291])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":131 349 {*muldi3_1}
     (nil))
(insn 541 540 542 52 (set (reg:SI 1 dx [836])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 iw+0 S4 A32])) "CALRCH.f":131 86 {*movsi_internal}
     (nil))
(insn 542 541 543 52 (set (reg:DI 1 dx [orig:293 _207 ] [293])
        (sign_extend:DI (reg:SI 1 dx [836]))) "CALRCH.f":131 149 {*extendsidi2_rex64}
     (nil))
(insn 543 542 1421 52 (parallel [
            (set (reg:DI 1 dx [orig:294 _208 ] [294])
                (plus:DI (reg:DI 1 dx [orig:293 _207 ] [293])
                    (reg:DI 2 cx [orig:292 _206 ] [292])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":131 222 {*adddi_1}
     (nil))
(insn 1421 543 545 52 (set (reg:DI 2 cx [orig:295 _209 ] [295])
        (plus:DI (reg:DI 1 dx [orig:294 _208 ] [294])
            (const_int -120 [0xffffffffffffff88]))) "CALRCH.f":131 218 {*leadi}
     (nil))
(insn 545 1421 546 52 (set (reg/f:DI 1 dx [837])
        (symbol_ref:DI ("egrid2.4219") [flags 0x202]  <var_decl 0x7fe96ef1e1b0 egrid2>)) "CALRCH.f":131 85 {*movdi_internal}
     (nil))
(insn 546 545 547 52 (set (reg:SF 23 xmm2 [orig:296 _210 ] [296])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:295 _209 ] [295])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [837])) [2 egrid2 S4 A32])) "CALRCH.f":131 131 {*movsf_internal}
     (nil))
(insn 547 546 548 52 (set (reg:SF 21 xmm0 [orig:297 _211 ] [297])
        (minus:SF (reg:SF 21 xmm0 [orig:289 _203 ] [289])
            (reg:SF 23 xmm2 [orig:296 _210 ] [296]))) "CALRCH.f":131 841 {*fop_sf_1}
     (nil))
(insn 548 547 549 52 (set (reg:SF 23 xmm2 [orig:298 _212 ] [298])
        (reg:SF 21 xmm0 [orig:297 _211 ] [297])) "CALRCH.f":131 131 {*movsf_internal}
     (nil))
(insn 549 548 550 52 (set (reg:SF 21 xmm0 [838])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [0  S4 A32])) "CALRCH.f":131 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.25e-1 [0x0.8p-2])
        (nil)))
(insn 550 549 551 52 (set (reg:SF 23 xmm2 [orig:299 _213 ] [299])
        (mult:SF (reg:SF 23 xmm2 [orig:298 _212 ] [298])
            (reg:SF 21 xmm0 [838]))) "CALRCH.f":131 838 {*fop_sf_comm}
     (nil))
(insn 551 550 552 52 (set (reg:SI 1 dx [839])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALRCH.f":131 86 {*movsi_internal}
     (nil))
(insn 552 551 553 52 (set (reg:DI 1 dx [orig:300 _214 ] [300])
        (sign_extend:DI (reg:SI 1 dx [839]))) "CALRCH.f":131 149 {*extendsidi2_rex64}
     (nil))
(insn 553 552 554 52 (parallel [
            (set (reg:DI 2 cx [orig:301 _215 ] [301])
                (mult:DI (reg:DI 1 dx [orig:300 _214 ] [300])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":131 349 {*muldi3_1}
     (nil))
(insn 554 553 555 52 (set (reg:SI 1 dx [840])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALRCH.f":131 86 {*movsi_internal}
     (nil))
(insn 555 554 556 52 (set (reg:DI 1 dx [orig:302 _216 ] [302])
        (sign_extend:DI (reg:SI 1 dx [840]))) "CALRCH.f":131 149 {*extendsidi2_rex64}
     (nil))
(insn 556 555 1422 52 (parallel [
            (set (reg:DI 1 dx [orig:303 _217 ] [303])
                (plus:DI (reg:DI 1 dx [orig:302 _216 ] [302])
                    (reg:DI 2 cx [orig:301 _215 ] [301])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":131 222 {*adddi_1}
     (nil))
(insn 1422 556 558 52 (set (reg:DI 2 cx [orig:304 _218 ] [304])
        (plus:DI (reg:DI 1 dx [orig:303 _217 ] [303])
            (const_int -120 [0xffffffffffffff88]))) "CALRCH.f":131 218 {*leadi}
     (nil))
(insn 558 1422 559 52 (set (reg/f:DI 1 dx [841])
        (symbol_ref:DI ("masks_") [flags 0x202]  <var_decl 0x7fe96ef00d80 masks>)) "CALRCH.f":131 85 {*movdi_internal}
     (nil))
(insn 559 558 560 52 (set (reg:SF 21 xmm0 [orig:305 _219 ] [305])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:304 _218 ] [304])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [841])) [2 masks.hbm2 S4 A32])) "CALRCH.f":131 131 {*movsf_internal}
     (nil))
(insn 560 559 561 52 (set (reg:SF 21 xmm0 [orig:306 _220 ] [306])
        (mult:SF (reg:SF 21 xmm0 [orig:305 _219 ] [305])
            (reg:SF 23 xmm2 [orig:299 _213 ] [299]))) "CALRCH.f":131 838 {*fop_sf_comm}
     (nil))
(insn 561 560 562 52 (set (reg:SI 1 dx [842])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALRCH.f":131 86 {*movsi_internal}
     (nil))
(insn 562 561 563 52 (set (reg:DI 1 dx [orig:307 _221 ] [307])
        (sign_extend:DI (reg:SI 1 dx [842]))) "CALRCH.f":131 149 {*extendsidi2_rex64}
     (nil))
(insn 563 562 564 52 (parallel [
            (set (reg:DI 2 cx [orig:308 _222 ] [308])
                (mult:DI (reg:DI 1 dx [orig:307 _221 ] [307])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":131 349 {*muldi3_1}
     (nil))
(insn 564 563 565 52 (set (reg:SI 1 dx [843])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALRCH.f":131 86 {*movsi_internal}
     (nil))
(insn 565 564 566 52 (set (reg:DI 1 dx [orig:309 _223 ] [309])
        (sign_extend:DI (reg:SI 1 dx [843]))) "CALRCH.f":131 149 {*extendsidi2_rex64}
     (nil))
(insn 566 565 567 52 (parallel [
            (set (reg:DI 1 dx [orig:310 _224 ] [310])
                (mult:DI (reg:DI 1 dx [orig:309 _223 ] [309])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":131 349 {*muldi3_1}
     (nil))
(insn 567 566 568 52 (parallel [
            (set (reg:DI 2 cx [orig:311 _225 ] [311])
                (plus:DI (reg:DI 2 cx [orig:308 _222 ] [308])
                    (reg:DI 1 dx [orig:310 _224 ] [310])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":131 222 {*adddi_1}
     (nil))
(insn 568 567 569 52 (set (reg:SI 1 dx [844])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALRCH.f":131 86 {*movsi_internal}
     (nil))
(insn 569 568 570 52 (set (reg:DI 1 dx [orig:312 _226 ] [312])
        (sign_extend:DI (reg:SI 1 dx [844]))) "CALRCH.f":131 149 {*extendsidi2_rex64}
     (nil))
(insn 570 569 1423 52 (parallel [
            (set (reg:DI 1 dx [orig:313 _227 ] [313])
                (plus:DI (reg:DI 1 dx [orig:312 _226 ] [312])
                    (reg:DI 2 cx [orig:311 _225 ] [311])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":131 222 {*adddi_1}
     (nil))
(insn 1423 570 572 52 (set (reg:DI 2 cx [orig:314 _228 ] [314])
        (plus:DI (reg:DI 1 dx [orig:313 _227 ] [313])
            (const_int -29751 [0xffffffffffff8bc9]))) "CALRCH.f":131 218 {*leadi}
     (nil))
(insn 572 1423 573 52 (set (reg:SF 21 xmm0 [orig:315 _229 ] [315])
        (plus:SF (reg:SF 21 xmm0 [orig:306 _220 ] [306])
            (reg:SF 22 xmm1 [orig:268 _182 ] [268]))) "CALRCH.f":131 838 {*fop_sf_comm}
     (nil))
(insn 573 572 574 52 (set (reg/f:DI 1 dx [845])
        (symbol_ref:DI ("thv.4234") [flags 0x202]  <var_decl 0x7fe96ef1e900 thv>)) "CALRCH.f":131 85 {*movdi_internal}
     (nil))
(insn 574 573 575 52 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:314 _228 ] [314])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [845])) [2 thv S4 A32])
        (reg:SF 21 xmm0 [orig:315 _229 ] [315])) "CALRCH.f":131 131 {*movsf_internal}
     (nil))
(insn 575 574 1306 52 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":127 221 {*addsi_1}
     (nil))
(jump_insn 1306 575 1307 52 (set (pc)
        (label_ref 576)) "CALRCH.f":127 683 {jump}
     (nil)
 -> 576)
;;  succ:       51 [always] 
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

(barrier 1307 1306 1361)
;; basic block 53, loop depth 0, maybe hot
;;  prev block 52, next block 55, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       51
;; bb 53 artificial_defs: { }
;; bb 53 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 1361 1307 1360 53 61 (nil) [1 uses])
(note 1360 1361 1362 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(insn 1362 1360 581 53 (const_int 0 [0]) "CALRCH.f":131 718 {nop}
     (nil))
(insn 581 1362 1308 53 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":126 221 {*addsi_1}
     (nil))
(jump_insn 1308 581 1309 53 (set (pc)
        (label_ref 582)) "CALRCH.f":126 683 {jump}
     (nil)
 -> 582)
;;  succ:       49 [always] 
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

(barrier 1309 1308 1358)
;; basic block 55, loop depth 0, maybe hot
;;  prev block 53, next block 57, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       49
;; bb 55 artificial_defs: { }
;; bb 55 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 1358 1309 1357 55 60 (nil) [1 uses])
(note 1357 1358 1359 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(insn 1359 1357 587 55 (const_int 0 [0]) "CALRCH.f":127 718 {nop}
     (nil))
(insn 587 1359 1310 55 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":95 221 {*addsi_1}
     (nil))
(jump_insn 1310 587 1311 55 (set (pc)
        (label_ref 588)) "CALRCH.f":95 683 {jump}
     (nil)
 -> 588)
;;  succ:       23 [always] 
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

(barrier 1311 1310 1337)
;; basic block 57, loop depth 0, maybe hot
;;  prev block 55, next block 59, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       23
;; bb 57 artificial_defs: { }
;; bb 57 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 1337 1311 1336 57 53 (nil) [1 uses])
(note 1336 1337 1338 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(insn 1338 1336 593 57 (const_int 0 [0]) "CALRCH.f":126 718 {nop}
     (nil))
(insn 593 1338 1265 57 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])
        (const_int 1 [0x1])) "CALRCH.f":145 86 {*movsi_internal}
     (nil))
;;  succ:       59 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 59, loop depth 0, maybe hot
;;  prev block 57, next block 60, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       57 (FALLTHRU)
;;              78 [always] 
;; bb 59 artificial_defs: { }
;; bb 59 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 1265 593 594 59 42 (nil) [1 uses])
(note 594 1265 595 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(insn 595 594 596 59 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])
            (const_int 37 [0x25]))) "CALRCH.f":145 11 {*cmpsi_1}
     (nil))
(insn 596 595 597 59 (set (reg:QI 0 ax [846])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALRCH.f":145 678 {*setcc_qi}
     (nil))
(insn 597 596 598 59 (set (reg:SI 0 ax [orig:700 _693 ] [700])
        (zero_extend:SI (reg:QI 0 ax [846]))) "CALRCH.f":145 140 {*zero_extendqisi2}
     (nil))
(insn 598 597 599 59 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:700 _693 ] [700])
            (const_int 0 [0]))) "CALRCH.f":145 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 599 598 600 59 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1364)
            (pc))) "CALRCH.f":145 682 {*jcc}
     (nil)
 -> 1364)
;;  succ:       80
;;              60 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 60, loop depth 0, maybe hot
;;  prev block 59, next block 61, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       59 (FALLTHRU)
;; bb 60 artificial_defs: { }
;; bb 60 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx]
(note 600 599 601 60 [bb 60] NOTE_INSN_BASIC_BLOCK)
(insn 601 600 602 60 (set (reg:SI 1 dx [orig:701 _694 ] [701])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7fe96ef06630 parallel>)
                    (const_int 24 [0x18]))) [1 parallel.jsta_m2+0 S4 A64])) "CALRCH.f":149 86 {*movsi_internal}
     (nil))
(insn 602 601 603 60 (set (reg:SI 0 ax [orig:702 _695 ] [702])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7fe96ef06630 parallel>)
                    (const_int 28 [0x1c]))) [1 parallel.jend_m2+0 S4 A32])) "CALRCH.f":149 86 {*movsi_internal}
     (nil))
(insn 603 602 1259 60 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])
        (reg:SI 1 dx [orig:701 _694 ] [701])) "CALRCH.f":149 86 {*movsi_internal}
     (nil))
;;  succ:       61 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 61, loop depth 0, maybe hot
;;  prev block 60, next block 62, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       60 (FALLTHRU)
;;              76 [always] 
;; bb 61 artificial_defs: { }
;; bb 61 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 17 [flags]
(code_label 1259 603 604 61 41 (nil) [1 uses])
(note 604 1259 605 61 [bb 61] NOTE_INSN_BASIC_BLOCK)
(insn 605 604 606 61 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])
            (reg:SI 0 ax [orig:702 _695 ] [702]))) "CALRCH.f":149 11 {*cmpsi_1}
     (nil))
(insn 606 605 607 61 (set (reg:QI 1 dx [847])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALRCH.f":149 678 {*setcc_qi}
     (nil))
(insn 607 606 608 61 (set (reg:SI 1 dx [orig:703 _697 ] [703])
        (zero_extend:SI (reg:QI 1 dx [847]))) "CALRCH.f":149 140 {*zero_extendqisi2}
     (nil))
(insn 608 607 609 61 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:703 _697 ] [703])
            (const_int 0 [0]))) "CALRCH.f":149 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 609 608 610 61 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1367)
            (pc))) "CALRCH.f":149 682 {*jcc}
     (nil)
 -> 1367)
;;  succ:       78
;;              62 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 62, loop depth 0, maybe hot
;;  prev block 61, next block 63, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       61 (FALLTHRU)
;; bb 62 artificial_defs: { }
;; bb 62 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(note 610 609 611 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(insn 611 610 1253 62 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
        (const_int 2 [0x2])) "CALRCH.f":150 86 {*movsi_internal}
     (nil))
;;  succ:       63 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 63, loop depth 0, maybe hot
;;  prev block 62, next block 64, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       62 (FALLTHRU)
;;              75 [always] 
;; bb 63 artificial_defs: { }
;; bb 63 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 17 [flags]
(code_label 1253 611 612 63 40 (nil) [1 uses])
(note 612 1253 613 63 [bb 63] NOTE_INSN_BASIC_BLOCK)
(insn 613 612 614 63 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
            (const_int 118 [0x76]))) "CALRCH.f":150 11 {*cmpsi_1}
     (nil))
(insn 614 613 615 63 (set (reg:QI 1 dx [848])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALRCH.f":150 678 {*setcc_qi}
     (nil))
(insn 615 614 616 63 (set (reg:SI 1 dx [orig:704 _699 ] [704])
        (zero_extend:SI (reg:QI 1 dx [848]))) "CALRCH.f":150 140 {*zero_extendqisi2}
     (nil))
(insn 616 615 617 63 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:704 _699 ] [704])
            (const_int 0 [0]))) "CALRCH.f":150 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 617 616 618 63 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1370)
            (pc))) "CALRCH.f":150 682 {*jcc}
     (nil)
 -> 1370)
;;  succ:       76
;;              64 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 64, loop depth 0, maybe hot
;;  prev block 63, next block 65, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       63 (FALLTHRU)
;; bb 64 artificial_defs: { }
;; bb 64 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 2 [cx] 17 [flags] 21 [xmm0] 22 [xmm1]
(note 618 617 619 64 [bb 64] NOTE_INSN_BASIC_BLOCK)
(insn 619 618 620 64 (set (reg:SI 1 dx [849])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALRCH.f":151 86 {*movsi_internal}
     (nil))
(insn 620 619 621 64 (set (reg:DI 1 dx [orig:316 _230 ] [316])
        (sign_extend:DI (reg:SI 1 dx [849]))) "CALRCH.f":151 149 {*extendsidi2_rex64}
     (nil))
(insn 621 620 622 64 (parallel [
            (set (reg:DI 1 dx [orig:317 _231 ] [317])
                (plus:DI (reg:DI 1 dx [orig:316 _230 ] [316])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":151 222 {*adddi_1}
     (nil))
(insn 622 621 626 64 (set (reg:SI 2 cx [orig:318 _232 ] [318])
        (mem:SI (plus:DI (mult:DI (reg:DI 1 dx [orig:317 _231 ] [317])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("indx_") [flags 0x2]  <var_decl 0x7fe96ef00630 indx>)) [1 indx.ihe S4 A32])) "CALRCH.f":151 86 {*movsi_internal}
     (nil))
(insn 626 622 627 64 (set (reg:SI 1 dx [853])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALRCH.f":151 86 {*movsi_internal}
     (nil))
(insn 627 626 628 64 (parallel [
            (set (reg:SI 1 dx [852])
                (plus:SI (reg:SI 1 dx [853])
                    (reg:SI 2 cx [orig:318 _232 ] [318])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":151 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (reg:SI 2 cx [orig:318 _232 ] [318])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32]))
        (nil)))
(insn 628 627 629 64 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 ie+0 S4 A32])
        (reg:SI 1 dx [852])) "CALRCH.f":151 86 {*movsi_internal}
     (nil))
(insn 629 628 630 64 (set (reg:SI 1 dx [854])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALRCH.f":152 86 {*movsi_internal}
     (nil))
(insn 630 629 631 64 (set (reg:DI 1 dx [orig:319 _233 ] [319])
        (sign_extend:DI (reg:SI 1 dx [854]))) "CALRCH.f":152 149 {*extendsidi2_rex64}
     (nil))
(insn 631 630 632 64 (parallel [
            (set (reg:DI 1 dx [orig:320 _234 ] [320])
                (plus:DI (reg:DI 1 dx [orig:319 _233 ] [319])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":152 222 {*adddi_1}
     (nil))
(insn 632 631 633 64 (parallel [
            (set (reg:DI 1 dx [855])
                (plus:DI (reg:DI 1 dx [orig:320 _234 ] [320])
                    (const_int 249 [0xf9])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":152 222 {*adddi_1}
     (nil))
(insn 633 632 637 64 (set (reg:SI 2 cx [orig:321 _235 ] [321])
        (mem:SI (plus:DI (mult:DI (reg:DI 1 dx [855])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("indx_") [flags 0x2]  <var_decl 0x7fe96ef00630 indx>)) [1 indx.ihw S4 A32])) "CALRCH.f":152 86 {*movsi_internal}
     (nil))
(insn 637 633 638 64 (set (reg:SI 1 dx [859])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALRCH.f":152 86 {*movsi_internal}
     (nil))
(insn 638 637 639 64 (parallel [
            (set (reg:SI 1 dx [858])
                (plus:SI (reg:SI 1 dx [859])
                    (reg:SI 2 cx [orig:321 _235 ] [321])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":152 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (reg:SI 2 cx [orig:321 _235 ] [321])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32]))
        (nil)))
(insn 639 638 640 64 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 iw+0 S4 A32])
        (reg:SI 1 dx [858])) "CALRCH.f":152 86 {*movsi_internal}
     (nil))
(insn 640 639 641 64 (set (reg:SI 1 dx [860])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALRCH.f":160 86 {*movsi_internal}
     (nil))
(insn 641 640 642 64 (set (reg:DI 1 dx [orig:322 _236 ] [322])
        (sign_extend:DI (reg:SI 1 dx [860]))) "CALRCH.f":160 149 {*extendsidi2_rex64}
     (nil))
(insn 642 641 643 64 (parallel [
            (set (reg:DI 2 cx [orig:323 _237 ] [323])
                (mult:DI (reg:DI 1 dx [orig:322 _236 ] [322])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":160 349 {*muldi3_1}
     (nil))
(insn 643 642 644 64 (set (reg:SI 1 dx [861])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALRCH.f":160 86 {*movsi_internal}
     (nil))
(insn 644 643 645 64 (parallel [
            (set (reg:SI 1 dx [orig:324 _238 ] [324])
                (plus:SI (reg:SI 1 dx [861])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":160 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 645 644 646 64 (set (reg:DI 1 dx [orig:325 _239 ] [325])
        (sign_extend:DI (reg:SI 1 dx [orig:324 _238 ] [324]))) "CALRCH.f":160 149 {*extendsidi2_rex64}
     (nil))
(insn 646 645 647 64 (parallel [
            (set (reg:DI 1 dx [orig:326 _240 ] [326])
                (mult:DI (reg:DI 1 dx [orig:325 _239 ] [325])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":160 349 {*muldi3_1}
     (nil))
(insn 647 646 648 64 (parallel [
            (set (reg:DI 2 cx [orig:327 _241 ] [327])
                (plus:DI (reg:DI 2 cx [orig:323 _237 ] [323])
                    (reg:DI 1 dx [orig:326 _240 ] [326])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":160 222 {*adddi_1}
     (nil))
(insn 648 647 649 64 (set (reg:SI 1 dx [862])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALRCH.f":160 86 {*movsi_internal}
     (nil))
(insn 649 648 650 64 (set (reg:DI 1 dx [orig:328 _242 ] [328])
        (sign_extend:DI (reg:SI 1 dx [862]))) "CALRCH.f":160 149 {*extendsidi2_rex64}
     (nil))
(insn 650 649 1408 64 (parallel [
            (set (reg:DI 1 dx [orig:329 _243 ] [329])
                (plus:DI (reg:DI 1 dx [orig:328 _242 ] [328])
                    (reg:DI 2 cx [orig:327 _241 ] [327])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":160 222 {*adddi_1}
     (nil))
(insn 1408 650 652 64 (set (reg:DI 2 cx [orig:330 _244 ] [330])
        (plus:DI (reg:DI 1 dx [orig:329 _243 ] [329])
            (const_int -29751 [0xffffffffffff8bc9]))) "CALRCH.f":160 218 {*leadi}
     (nil))
(insn 652 1408 653 64 (set (reg/f:DI 1 dx [863])
        (symbol_ref:DI ("masks_") [flags 0x202]  <var_decl 0x7fe96ef00d80 masks>)) "CALRCH.f":160 85 {*movdi_internal}
     (nil))
(insn 653 652 654 64 (parallel [
            (set (reg:DI 2 cx [864])
                (plus:DI (reg:DI 2 cx [orig:330 _244 ] [330])
                    (const_int 1274133 [0x137115])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":160 222 {*adddi_1}
     (nil))
(insn 654 653 655 64 (set (reg:SF 22 xmm1 [orig:331 _245 ] [331])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [864])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [863])) [2 masks.vtm S4 A32])) "CALRCH.f":160 131 {*movsf_internal}
     (nil))
(insn 655 654 656 64 (set (reg:SI 1 dx [865])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALRCH.f":160 86 {*movsi_internal}
     (nil))
(insn 656 655 657 64 (set (reg:DI 1 dx [orig:332 _246 ] [332])
        (sign_extend:DI (reg:SI 1 dx [865]))) "CALRCH.f":160 149 {*extendsidi2_rex64}
     (nil))
(insn 657 656 658 64 (parallel [
            (set (reg:DI 2 cx [orig:333 _247 ] [333])
                (mult:DI (reg:DI 1 dx [orig:332 _246 ] [332])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":160 349 {*muldi3_1}
     (nil))
(insn 658 657 659 64 (set (reg:SI 1 dx [866])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALRCH.f":160 86 {*movsi_internal}
     (nil))
(insn 659 658 660 64 (set (reg:DI 1 dx [orig:334 _248 ] [334])
        (sign_extend:DI (reg:SI 1 dx [866]))) "CALRCH.f":160 149 {*extendsidi2_rex64}
     (nil))
(insn 660 659 661 64 (parallel [
            (set (reg:DI 1 dx [orig:335 _249 ] [335])
                (mult:DI (reg:DI 1 dx [orig:334 _248 ] [334])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":160 349 {*muldi3_1}
     (nil))
(insn 661 660 662 64 (parallel [
            (set (reg:DI 2 cx [orig:336 _250 ] [336])
                (plus:DI (reg:DI 2 cx [orig:333 _247 ] [333])
                    (reg:DI 1 dx [orig:335 _249 ] [335])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":160 222 {*adddi_1}
     (nil))
(insn 662 661 663 64 (set (reg:SI 1 dx [867])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 iw+0 S4 A32])) "CALRCH.f":160 86 {*movsi_internal}
     (nil))
(insn 663 662 664 64 (set (reg:DI 1 dx [orig:337 _251 ] [337])
        (sign_extend:DI (reg:SI 1 dx [867]))) "CALRCH.f":160 149 {*extendsidi2_rex64}
     (nil))
(insn 664 663 1409 64 (parallel [
            (set (reg:DI 1 dx [orig:338 _252 ] [338])
                (plus:DI (reg:DI 1 dx [orig:337 _251 ] [337])
                    (reg:DI 2 cx [orig:336 _250 ] [336])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":160 222 {*adddi_1}
     (nil))
(insn 1409 664 666 64 (set (reg:DI 2 cx [orig:339 _253 ] [339])
        (plus:DI (reg:DI 1 dx [orig:338 _252 ] [338])
            (const_int -29751 [0xffffffffffff8bc9]))) "CALRCH.f":160 218 {*leadi}
     (nil))
(insn 666 1409 667 64 (set (reg/f:DI 1 dx [868])
        (symbol_ref:DI ("masks_") [flags 0x202]  <var_decl 0x7fe96ef00d80 masks>)) "CALRCH.f":160 85 {*movdi_internal}
     (nil))
(insn 667 666 668 64 (parallel [
            (set (reg:DI 2 cx [869])
                (plus:DI (reg:DI 2 cx [orig:339 _253 ] [339])
                    (const_int 1274133 [0x137115])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":160 222 {*adddi_1}
     (nil))
(insn 668 667 669 64 (set (reg:SF 21 xmm0 [orig:340 _254 ] [340])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [869])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [868])) [2 masks.vtm S4 A32])) "CALRCH.f":160 131 {*movsf_internal}
     (nil))
(insn 669 668 670 64 (set (reg:SF 22 xmm1 [orig:341 _255 ] [341])
        (plus:SF (reg:SF 22 xmm1 [orig:331 _245 ] [331])
            (reg:SF 21 xmm0 [orig:340 _254 ] [340]))) "CALRCH.f":160 838 {*fop_sf_comm}
     (nil))
(insn 670 669 671 64 (set (reg:SI 1 dx [870])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALRCH.f":160 86 {*movsi_internal}
     (nil))
(insn 671 670 672 64 (set (reg:DI 1 dx [orig:342 _256 ] [342])
        (sign_extend:DI (reg:SI 1 dx [870]))) "CALRCH.f":160 149 {*extendsidi2_rex64}
     (nil))
(insn 672 671 673 64 (parallel [
            (set (reg:DI 2 cx [orig:343 _257 ] [343])
                (mult:DI (reg:DI 1 dx [orig:342 _256 ] [342])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":160 349 {*muldi3_1}
     (nil))
(insn 673 672 674 64 (set (reg:SI 1 dx [871])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALRCH.f":160 86 {*movsi_internal}
     (nil))
(insn 674 673 675 64 (set (reg:DI 1 dx [orig:344 _258 ] [344])
        (sign_extend:DI (reg:SI 1 dx [871]))) "CALRCH.f":160 149 {*extendsidi2_rex64}
     (nil))
(insn 675 674 676 64 (parallel [
            (set (reg:DI 1 dx [orig:345 _259 ] [345])
                (mult:DI (reg:DI 1 dx [orig:344 _258 ] [344])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":160 349 {*muldi3_1}
     (nil))
(insn 676 675 677 64 (parallel [
            (set (reg:DI 2 cx [orig:346 _260 ] [346])
                (plus:DI (reg:DI 2 cx [orig:343 _257 ] [343])
                    (reg:DI 1 dx [orig:345 _259 ] [345])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":160 222 {*adddi_1}
     (nil))
(insn 677 676 678 64 (set (reg:SI 1 dx [872])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 ie+0 S4 A32])) "CALRCH.f":160 86 {*movsi_internal}
     (nil))
(insn 678 677 679 64 (set (reg:DI 1 dx [orig:347 _261 ] [347])
        (sign_extend:DI (reg:SI 1 dx [872]))) "CALRCH.f":160 149 {*extendsidi2_rex64}
     (nil))
(insn 679 678 1410 64 (parallel [
            (set (reg:DI 1 dx [orig:348 _262 ] [348])
                (plus:DI (reg:DI 1 dx [orig:347 _261 ] [347])
                    (reg:DI 2 cx [orig:346 _260 ] [346])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":160 222 {*adddi_1}
     (nil))
(insn 1410 679 681 64 (set (reg:DI 2 cx [orig:349 _263 ] [349])
        (plus:DI (reg:DI 1 dx [orig:348 _262 ] [348])
            (const_int -29751 [0xffffffffffff8bc9]))) "CALRCH.f":160 218 {*leadi}
     (nil))
(insn 681 1410 682 64 (set (reg/f:DI 1 dx [873])
        (symbol_ref:DI ("masks_") [flags 0x202]  <var_decl 0x7fe96ef00d80 masks>)) "CALRCH.f":160 85 {*movdi_internal}
     (nil))
(insn 682 681 683 64 (parallel [
            (set (reg:DI 2 cx [874])
                (plus:DI (reg:DI 2 cx [orig:349 _263 ] [349])
                    (const_int 1274133 [0x137115])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":160 222 {*adddi_1}
     (nil))
(insn 683 682 684 64 (set (reg:SF 21 xmm0 [orig:350 _264 ] [350])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [874])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [873])) [2 masks.vtm S4 A32])) "CALRCH.f":160 131 {*movsf_internal}
     (nil))
(insn 684 683 685 64 (set (reg:SF 22 xmm1 [orig:351 _265 ] [351])
        (plus:SF (reg:SF 22 xmm1 [orig:341 _255 ] [341])
            (reg:SF 21 xmm0 [orig:350 _264 ] [350]))) "CALRCH.f":160 838 {*fop_sf_comm}
     (nil))
(insn 685 684 686 64 (set (reg:SI 1 dx [875])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALRCH.f":160 86 {*movsi_internal}
     (nil))
(insn 686 685 687 64 (set (reg:DI 1 dx [orig:352 _266 ] [352])
        (sign_extend:DI (reg:SI 1 dx [875]))) "CALRCH.f":160 149 {*extendsidi2_rex64}
     (nil))
(insn 687 686 688 64 (parallel [
            (set (reg:DI 2 cx [orig:353 _267 ] [353])
                (mult:DI (reg:DI 1 dx [orig:352 _266 ] [352])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":160 349 {*muldi3_1}
     (nil))
(insn 688 687 689 64 (set (reg:SI 1 dx [876])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALRCH.f":160 86 {*movsi_internal}
     (nil))
(insn 689 688 690 64 (parallel [
            (set (reg:SI 1 dx [orig:354 _268 ] [354])
                (plus:SI (reg:SI 1 dx [876])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":160 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 690 689 691 64 (set (reg:DI 1 dx [orig:355 _269 ] [355])
        (sign_extend:DI (reg:SI 1 dx [orig:354 _268 ] [354]))) "CALRCH.f":160 149 {*extendsidi2_rex64}
     (nil))
(insn 691 690 692 64 (parallel [
            (set (reg:DI 1 dx [orig:356 _270 ] [356])
                (mult:DI (reg:DI 1 dx [orig:355 _269 ] [355])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":160 349 {*muldi3_1}
     (nil))
(insn 692 691 693 64 (parallel [
            (set (reg:DI 2 cx [orig:357 _271 ] [357])
                (plus:DI (reg:DI 2 cx [orig:353 _267 ] [353])
                    (reg:DI 1 dx [orig:356 _270 ] [356])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":160 222 {*adddi_1}
     (nil))
(insn 693 692 694 64 (set (reg:SI 1 dx [877])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALRCH.f":160 86 {*movsi_internal}
     (nil))
(insn 694 693 695 64 (set (reg:DI 1 dx [orig:358 _272 ] [358])
        (sign_extend:DI (reg:SI 1 dx [877]))) "CALRCH.f":160 149 {*extendsidi2_rex64}
     (nil))
(insn 695 694 1411 64 (parallel [
            (set (reg:DI 1 dx [orig:359 _273 ] [359])
                (plus:DI (reg:DI 1 dx [orig:358 _272 ] [358])
                    (reg:DI 2 cx [orig:357 _271 ] [357])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":160 222 {*adddi_1}
     (nil))
(insn 1411 695 697 64 (set (reg:DI 2 cx [orig:360 _274 ] [360])
        (plus:DI (reg:DI 1 dx [orig:359 _273 ] [359])
            (const_int -29751 [0xffffffffffff8bc9]))) "CALRCH.f":160 218 {*leadi}
     (nil))
(insn 697 1411 698 64 (set (reg/f:DI 1 dx [878])
        (symbol_ref:DI ("masks_") [flags 0x202]  <var_decl 0x7fe96ef00d80 masks>)) "CALRCH.f":160 85 {*movdi_internal}
     (nil))
(insn 698 697 699 64 (parallel [
            (set (reg:DI 2 cx [879])
                (plus:DI (reg:DI 2 cx [orig:360 _274 ] [360])
                    (const_int 1274133 [0x137115])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":160 222 {*adddi_1}
     (nil))
(insn 699 698 700 64 (set (reg:SF 21 xmm0 [orig:361 _275 ] [361])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [879])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [878])) [2 masks.vtm S4 A32])) "CALRCH.f":160 131 {*movsf_internal}
     (nil))
(insn 700 699 701 64 (set (reg:SF 21 xmm0 [880])
        (plus:SF (reg:SF 21 xmm0 [orig:361 _275 ] [361])
            (reg:SF 22 xmm1 [orig:351 _265 ] [351]))) "CALRCH.f":160 838 {*fop_sf_comm}
     (nil))
(insn 701 700 702 64 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [2 wndsl+0 S4 A32])
        (reg:SF 21 xmm0 [880])) "CALRCH.f":160 131 {*movsf_internal}
     (nil))
(insn 702 701 703 64 (set (reg:SI 1 dx [881])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALRCH.f":162 86 {*movsi_internal}
     (nil))
(insn 703 702 704 64 (parallel [
            (set (reg:SI 1 dx [orig:362 _276 ] [362])
                (plus:SI (reg:SI 1 dx [881])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":162 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 704 703 705 64 (set (reg:DI 1 dx [orig:363 _277 ] [363])
        (sign_extend:DI (reg:SI 1 dx [orig:362 _276 ] [362]))) "CALRCH.f":162 149 {*extendsidi2_rex64}
     (nil))
(insn 705 704 706 64 (parallel [
            (set (reg:DI 2 cx [orig:364 _278 ] [364])
                (mult:DI (reg:DI 1 dx [orig:363 _277 ] [363])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":162 349 {*muldi3_1}
     (nil))
(insn 706 705 707 64 (set (reg:SI 1 dx [882])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALRCH.f":162 86 {*movsi_internal}
     (nil))
(insn 707 706 708 64 (parallel [
            (set (reg:SI 1 dx [orig:365 _279 ] [365])
                (plus:SI (reg:SI 1 dx [882])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":162 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 708 707 709 64 (set (reg:DI 1 dx [orig:366 _280 ] [366])
        (sign_extend:DI (reg:SI 1 dx [orig:365 _279 ] [365]))) "CALRCH.f":162 149 {*extendsidi2_rex64}
     (nil))
(insn 709 708 710 64 (parallel [
            (set (reg:DI 1 dx [orig:367 _281 ] [367])
                (mult:DI (reg:DI 1 dx [orig:366 _280 ] [366])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":162 349 {*muldi3_1}
     (nil))
(insn 710 709 711 64 (parallel [
            (set (reg:DI 2 cx [orig:368 _282 ] [368])
                (plus:DI (reg:DI 2 cx [orig:364 _278 ] [364])
                    (reg:DI 1 dx [orig:367 _281 ] [367])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":162 222 {*adddi_1}
     (nil))
(insn 711 710 712 64 (set (reg:SI 1 dx [883])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALRCH.f":162 86 {*movsi_internal}
     (nil))
(insn 712 711 713 64 (set (reg:DI 1 dx [orig:369 _283 ] [369])
        (sign_extend:DI (reg:SI 1 dx [883]))) "CALRCH.f":162 149 {*extendsidi2_rex64}
     (nil))
(insn 713 712 1412 64 (parallel [
            (set (reg:DI 1 dx [orig:370 _284 ] [370])
                (plus:DI (reg:DI 1 dx [orig:369 _283 ] [369])
                    (reg:DI 2 cx [orig:368 _282 ] [368])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":162 222 {*adddi_1}
     (nil))
(insn 1412 713 715 64 (set (reg:DI 2 cx [orig:371 _285 ] [371])
        (plus:DI (reg:DI 1 dx [orig:370 _284 ] [370])
            (const_int -29751 [0xffffffffffff8bc9]))) "CALRCH.f":162 218 {*leadi}
     (nil))
(insn 715 1412 716 64 (set (reg/f:DI 1 dx [884])
        (symbol_ref:DI ("masks_") [flags 0x202]  <var_decl 0x7fe96ef00d80 masks>)) "CALRCH.f":162 85 {*movdi_internal}
     (nil))
(insn 716 715 717 64 (parallel [
            (set (reg:DI 2 cx [885])
                (plus:DI (reg:DI 2 cx [orig:371 _285 ] [371])
                    (const_int 1274133 [0x137115])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":162 222 {*adddi_1}
     (nil))
(insn 717 716 718 64 (set (reg:SF 22 xmm1 [orig:372 _286 ] [372])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [885])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [884])) [2 masks.vtm S4 A32])) "CALRCH.f":162 131 {*movsf_internal}
     (nil))
(insn 718 717 719 64 (set (reg:SI 1 dx [886])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALRCH.f":162 86 {*movsi_internal}
     (nil))
(insn 719 718 720 64 (parallel [
            (set (reg:SI 1 dx [orig:373 _287 ] [373])
                (plus:SI (reg:SI 1 dx [886])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":162 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 720 719 721 64 (set (reg:DI 1 dx [orig:374 _288 ] [374])
        (sign_extend:DI (reg:SI 1 dx [orig:373 _287 ] [373]))) "CALRCH.f":162 149 {*extendsidi2_rex64}
     (nil))
(insn 721 720 722 64 (parallel [
            (set (reg:DI 2 cx [orig:375 _289 ] [375])
                (mult:DI (reg:DI 1 dx [orig:374 _288 ] [374])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":162 349 {*muldi3_1}
     (nil))
(insn 722 721 723 64 (set (reg:SI 1 dx [887])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALRCH.f":162 86 {*movsi_internal}
     (nil))
(insn 723 722 724 64 (set (reg:DI 1 dx [orig:376 _290 ] [376])
        (sign_extend:DI (reg:SI 1 dx [887]))) "CALRCH.f":162 149 {*extendsidi2_rex64}
     (nil))
(insn 724 723 725 64 (parallel [
            (set (reg:DI 1 dx [orig:377 _291 ] [377])
                (mult:DI (reg:DI 1 dx [orig:376 _290 ] [376])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":162 349 {*muldi3_1}
     (nil))
(insn 725 724 726 64 (parallel [
            (set (reg:DI 2 cx [orig:378 _292 ] [378])
                (plus:DI (reg:DI 2 cx [orig:375 _289 ] [375])
                    (reg:DI 1 dx [orig:377 _291 ] [377])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":162 222 {*adddi_1}
     (nil))
(insn 726 725 727 64 (set (reg:SI 1 dx [888])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 iw+0 S4 A32])) "CALRCH.f":162 86 {*movsi_internal}
     (nil))
(insn 727 726 728 64 (set (reg:DI 1 dx [orig:379 _293 ] [379])
        (sign_extend:DI (reg:SI 1 dx [888]))) "CALRCH.f":162 149 {*extendsidi2_rex64}
     (nil))
(insn 728 727 1413 64 (parallel [
            (set (reg:DI 1 dx [orig:380 _294 ] [380])
                (plus:DI (reg:DI 1 dx [orig:379 _293 ] [379])
                    (reg:DI 2 cx [orig:378 _292 ] [378])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":162 222 {*adddi_1}
     (nil))
(insn 1413 728 730 64 (set (reg:DI 2 cx [orig:381 _295 ] [381])
        (plus:DI (reg:DI 1 dx [orig:380 _294 ] [380])
            (const_int -29751 [0xffffffffffff8bc9]))) "CALRCH.f":162 218 {*leadi}
     (nil))
(insn 730 1413 731 64 (set (reg/f:DI 1 dx [889])
        (symbol_ref:DI ("masks_") [flags 0x202]  <var_decl 0x7fe96ef00d80 masks>)) "CALRCH.f":162 85 {*movdi_internal}
     (nil))
(insn 731 730 732 64 (parallel [
            (set (reg:DI 2 cx [890])
                (plus:DI (reg:DI 2 cx [orig:381 _295 ] [381])
                    (const_int 1274133 [0x137115])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":162 222 {*adddi_1}
     (nil))
(insn 732 731 733 64 (set (reg:SF 21 xmm0 [orig:382 _296 ] [382])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [890])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [889])) [2 masks.vtm S4 A32])) "CALRCH.f":162 131 {*movsf_internal}
     (nil))
(insn 733 732 734 64 (set (reg:SF 22 xmm1 [orig:383 _297 ] [383])
        (plus:SF (reg:SF 22 xmm1 [orig:372 _286 ] [372])
            (reg:SF 21 xmm0 [orig:382 _296 ] [382]))) "CALRCH.f":162 838 {*fop_sf_comm}
     (nil))
(insn 734 733 735 64 (set (reg:SI 1 dx [891])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALRCH.f":162 86 {*movsi_internal}
     (nil))
(insn 735 734 736 64 (parallel [
            (set (reg:SI 1 dx [orig:384 _298 ] [384])
                (plus:SI (reg:SI 1 dx [891])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":162 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 736 735 737 64 (set (reg:DI 1 dx [orig:385 _299 ] [385])
        (sign_extend:DI (reg:SI 1 dx [orig:384 _298 ] [384]))) "CALRCH.f":162 149 {*extendsidi2_rex64}
     (nil))
(insn 737 736 738 64 (parallel [
            (set (reg:DI 2 cx [orig:386 _300 ] [386])
                (mult:DI (reg:DI 1 dx [orig:385 _299 ] [385])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":162 349 {*muldi3_1}
     (nil))
(insn 738 737 739 64 (set (reg:SI 1 dx [892])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALRCH.f":162 86 {*movsi_internal}
     (nil))
(insn 739 738 740 64 (set (reg:DI 1 dx [orig:387 _301 ] [387])
        (sign_extend:DI (reg:SI 1 dx [892]))) "CALRCH.f":162 149 {*extendsidi2_rex64}
     (nil))
(insn 740 739 741 64 (parallel [
            (set (reg:DI 1 dx [orig:388 _302 ] [388])
                (mult:DI (reg:DI 1 dx [orig:387 _301 ] [387])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":162 349 {*muldi3_1}
     (nil))
(insn 741 740 742 64 (parallel [
            (set (reg:DI 2 cx [orig:389 _303 ] [389])
                (plus:DI (reg:DI 2 cx [orig:386 _300 ] [386])
                    (reg:DI 1 dx [orig:388 _302 ] [388])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":162 222 {*adddi_1}
     (nil))
(insn 742 741 743 64 (set (reg:SI 1 dx [893])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 ie+0 S4 A32])) "CALRCH.f":162 86 {*movsi_internal}
     (nil))
(insn 743 742 744 64 (set (reg:DI 1 dx [orig:390 _304 ] [390])
        (sign_extend:DI (reg:SI 1 dx [893]))) "CALRCH.f":162 149 {*extendsidi2_rex64}
     (nil))
(insn 744 743 1414 64 (parallel [
            (set (reg:DI 1 dx [orig:391 _305 ] [391])
                (plus:DI (reg:DI 1 dx [orig:390 _304 ] [390])
                    (reg:DI 2 cx [orig:389 _303 ] [389])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":162 222 {*adddi_1}
     (nil))
(insn 1414 744 746 64 (set (reg:DI 2 cx [orig:392 _306 ] [392])
        (plus:DI (reg:DI 1 dx [orig:391 _305 ] [391])
            (const_int -29751 [0xffffffffffff8bc9]))) "CALRCH.f":162 218 {*leadi}
     (nil))
(insn 746 1414 747 64 (set (reg/f:DI 1 dx [894])
        (symbol_ref:DI ("masks_") [flags 0x202]  <var_decl 0x7fe96ef00d80 masks>)) "CALRCH.f":162 85 {*movdi_internal}
     (nil))
(insn 747 746 748 64 (parallel [
            (set (reg:DI 2 cx [895])
                (plus:DI (reg:DI 2 cx [orig:392 _306 ] [392])
                    (const_int 1274133 [0x137115])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":162 222 {*adddi_1}
     (nil))
(insn 748 747 749 64 (set (reg:SF 21 xmm0 [orig:393 _307 ] [393])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [895])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [894])) [2 masks.vtm S4 A32])) "CALRCH.f":162 131 {*movsf_internal}
     (nil))
(insn 749 748 750 64 (set (reg:SF 22 xmm1 [orig:394 _308 ] [394])
        (plus:SF (reg:SF 22 xmm1 [orig:383 _297 ] [383])
            (reg:SF 21 xmm0 [orig:393 _307 ] [393]))) "CALRCH.f":162 838 {*fop_sf_comm}
     (nil))
(insn 750 749 751 64 (set (reg:SI 1 dx [896])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALRCH.f":162 86 {*movsi_internal}
     (nil))
(insn 751 750 752 64 (parallel [
            (set (reg:SI 1 dx [orig:395 _309 ] [395])
                (plus:SI (reg:SI 1 dx [896])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":162 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 752 751 753 64 (set (reg:DI 1 dx [orig:396 _310 ] [396])
        (sign_extend:DI (reg:SI 1 dx [orig:395 _309 ] [395]))) "CALRCH.f":162 149 {*extendsidi2_rex64}
     (nil))
(insn 753 752 754 64 (parallel [
            (set (reg:DI 2 cx [orig:397 _311 ] [397])
                (mult:DI (reg:DI 1 dx [orig:396 _310 ] [396])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":162 349 {*muldi3_1}
     (nil))
(insn 754 753 755 64 (set (reg:SI 1 dx [897])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALRCH.f":162 86 {*movsi_internal}
     (nil))
(insn 755 754 756 64 (parallel [
            (set (reg:SI 1 dx [orig:398 _312 ] [398])
                (plus:SI (reg:SI 1 dx [897])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":162 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 756 755 757 64 (set (reg:DI 1 dx [orig:399 _313 ] [399])
        (sign_extend:DI (reg:SI 1 dx [orig:398 _312 ] [398]))) "CALRCH.f":162 149 {*extendsidi2_rex64}
     (nil))
(insn 757 756 758 64 (parallel [
            (set (reg:DI 1 dx [orig:400 _314 ] [400])
                (mult:DI (reg:DI 1 dx [orig:399 _313 ] [399])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":162 349 {*muldi3_1}
     (nil))
(insn 758 757 759 64 (parallel [
            (set (reg:DI 2 cx [orig:401 _315 ] [401])
                (plus:DI (reg:DI 2 cx [orig:397 _311 ] [397])
                    (reg:DI 1 dx [orig:400 _314 ] [400])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":162 222 {*adddi_1}
     (nil))
(insn 759 758 760 64 (set (reg:SI 1 dx [898])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALRCH.f":162 86 {*movsi_internal}
     (nil))
(insn 760 759 761 64 (set (reg:DI 1 dx [orig:402 _316 ] [402])
        (sign_extend:DI (reg:SI 1 dx [898]))) "CALRCH.f":162 149 {*extendsidi2_rex64}
     (nil))
(insn 761 760 1415 64 (parallel [
            (set (reg:DI 1 dx [orig:403 _317 ] [403])
                (plus:DI (reg:DI 1 dx [orig:402 _316 ] [402])
                    (reg:DI 2 cx [orig:401 _315 ] [401])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":162 222 {*adddi_1}
     (nil))
(insn 1415 761 763 64 (set (reg:DI 2 cx [orig:404 _318 ] [404])
        (plus:DI (reg:DI 1 dx [orig:403 _317 ] [403])
            (const_int -29751 [0xffffffffffff8bc9]))) "CALRCH.f":162 218 {*leadi}
     (nil))
(insn 763 1415 764 64 (set (reg/f:DI 1 dx [899])
        (symbol_ref:DI ("masks_") [flags 0x202]  <var_decl 0x7fe96ef00d80 masks>)) "CALRCH.f":162 85 {*movdi_internal}
     (nil))
(insn 764 763 765 64 (parallel [
            (set (reg:DI 2 cx [900])
                (plus:DI (reg:DI 2 cx [orig:404 _318 ] [404])
                    (const_int 1274133 [0x137115])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":162 222 {*adddi_1}
     (nil))
(insn 765 764 766 64 (set (reg:SF 21 xmm0 [orig:405 _319 ] [405])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [900])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [899])) [2 masks.vtm S4 A32])) "CALRCH.f":162 131 {*movsf_internal}
     (nil))
(insn 766 765 767 64 (set (reg:SF 21 xmm0 [901])
        (plus:SF (reg:SF 21 xmm0 [orig:405 _319 ] [405])
            (reg:SF 22 xmm1 [orig:394 _308 ] [394]))) "CALRCH.f":162 838 {*fop_sf_comm}
     (nil))
(insn 767 766 1416 64 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [2 wndslp+0 S4 A32])
        (reg:SF 21 xmm0 [901])) "CALRCH.f":162 131 {*movsf_internal}
     (nil))
(insn 1416 767 769 64 (set (reg:SF 21 xmm0 [902])
        (const_double:SF 0.0 [0x0.0p+0])) "CALRCH.f":163 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 769 1416 770 64 (set (reg:CCFP 17 flags)
        (unspec:CCFP [
                (compare:CCFP (reg:SF 21 xmm0 [902])
                    (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                            (const_int -44 [0xffffffffffffffd4])) [2 wndsl+0 S4 A32]))
            ] UNSPEC_NOTRAP)) "CALRCH.f":163 54 {*cmpiusf}
     (nil))
(jump_insn 770 769 1274 64 (set (pc)
        (if_then_else (unordered (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1280)
            (pc))) "CALRCH.f":163 682 {*jcc}
     (nil)
 -> 1280)
;;  succ:       66
;;              65 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 65, loop depth 0, maybe hot
;;  prev block 64, next block 66, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       64 (FALLTHRU)
;; bb 65 artificial_defs: { }
;; bb 65 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 17 [flags] 21 [xmm0]
(note 1274 770 1407 65 [bb 65] NOTE_INSN_BASIC_BLOCK)
(insn 1407 1274 772 65 (set (reg:SF 21 xmm0 [903])
        (const_double:SF 0.0 [0x0.0p+0])) "CALRCH.f":163 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 772 1407 773 65 (set (reg:CCFP 17 flags)
        (unspec:CCFP [
                (compare:CCFP (reg:SF 21 xmm0 [903])
                    (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                            (const_int -44 [0xffffffffffffffd4])) [2 wndsl+0 S4 A32]))
            ] UNSPEC_NOTRAP)) "CALRCH.f":163 54 {*cmpiusf}
     (nil))
(jump_insn 773 772 1280 65 (set (pc)
        (if_then_else (uneq (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref 1250)
            (pc))) "CALRCH.f":163 682 {*jcc}
     (nil)
 -> 1250)
;;  succ:       75
;;              66 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 66, loop depth 0, maybe hot
;;  prev block 65, next block 67, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       65 (FALLTHRU)
;;              64
;; bb 66 artificial_defs: { }
;; bb 66 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 17 [flags] 21 [xmm0]
(code_label 1280 773 775 66 44 (nil) [1 uses])
(note 775 1280 1406 66 [bb 66] NOTE_INSN_BASIC_BLOCK)
(insn 1406 775 777 66 (set (reg:SF 21 xmm0 [904])
        (const_double:SF 0.0 [0x0.0p+0])) "CALRCH.f":163 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 777 1406 778 66 (set (reg:CCFP 17 flags)
        (unspec:CCFP [
                (compare:CCFP (reg:SF 21 xmm0 [904])
                    (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                            (const_int -48 [0xffffffffffffffd0])) [2 wndslp+0 S4 A32]))
            ] UNSPEC_NOTRAP)) "CALRCH.f":163 54 {*cmpiusf}
     (nil))
(jump_insn 778 777 1276 66 (set (pc)
        (if_then_else (unordered (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1281)
            (pc))) "CALRCH.f":163 682 {*jcc}
     (nil)
 -> 1281)
;;  succ:       68
;;              67 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 67, loop depth 0, maybe hot
;;  prev block 66, next block 68, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       66 (FALLTHRU)
;; bb 67 artificial_defs: { }
;; bb 67 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 17 [flags] 21 [xmm0]
(note 1276 778 1405 67 [bb 67] NOTE_INSN_BASIC_BLOCK)
(insn 1405 1276 780 67 (set (reg:SF 21 xmm0 [905])
        (const_double:SF 0.0 [0x0.0p+0])) "CALRCH.f":163 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 780 1405 781 67 (set (reg:CCFP 17 flags)
        (unspec:CCFP [
                (compare:CCFP (reg:SF 21 xmm0 [905])
                    (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                            (const_int -48 [0xffffffffffffffd0])) [2 wndslp+0 S4 A32]))
            ] UNSPEC_NOTRAP)) "CALRCH.f":163 54 {*cmpiusf}
     (nil))
(jump_insn 781 780 1281 67 (set (pc)
        (if_then_else (uneq (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref 1250)
            (pc))) "CALRCH.f":163 682 {*jcc}
     (nil)
 -> 1250)
;;  succ:       75
;;              68 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 68, loop depth 0, maybe hot
;;  prev block 67, next block 69, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       67 (FALLTHRU)
;;              66
;; bb 68 artificial_defs: { }
;; bb 68 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 2 [cx] 17 [flags] 21 [xmm0] 22 [xmm1]
(code_label 1281 781 783 68 45 (nil) [1 uses])
(note 783 1281 784 68 [bb 68] NOTE_INSN_BASIC_BLOCK)
(insn 784 783 785 68 (set (reg:SI 1 dx [906])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALRCH.f":164 86 {*movsi_internal}
     (nil))
(insn 785 784 786 68 (set (reg:DI 1 dx [orig:406 _320 ] [406])
        (sign_extend:DI (reg:SI 1 dx [906]))) "CALRCH.f":164 149 {*extendsidi2_rex64}
     (nil))
(insn 786 785 787 68 (parallel [
            (set (reg:DI 2 cx [orig:407 _321 ] [407])
                (mult:DI (reg:DI 1 dx [orig:406 _320 ] [406])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":164 349 {*muldi3_1}
     (nil))
(insn 787 786 788 68 (set (reg:SI 1 dx [907])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALRCH.f":164 86 {*movsi_internal}
     (nil))
(insn 788 787 789 68 (parallel [
            (set (reg:SI 1 dx [orig:408 _322 ] [408])
                (plus:SI (reg:SI 1 dx [907])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":164 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 789 788 790 68 (set (reg:DI 1 dx [orig:409 _323 ] [409])
        (sign_extend:DI (reg:SI 1 dx [orig:408 _322 ] [408]))) "CALRCH.f":164 149 {*extendsidi2_rex64}
     (nil))
(insn 790 789 791 68 (parallel [
            (set (reg:DI 1 dx [orig:410 _324 ] [410])
                (mult:DI (reg:DI 1 dx [orig:409 _323 ] [409])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":164 349 {*muldi3_1}
     (nil))
(insn 791 790 792 68 (parallel [
            (set (reg:DI 2 cx [orig:411 _325 ] [411])
                (plus:DI (reg:DI 2 cx [orig:407 _321 ] [407])
                    (reg:DI 1 dx [orig:410 _324 ] [410])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":164 222 {*adddi_1}
     (nil))
(insn 792 791 793 68 (set (reg:SI 1 dx [908])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALRCH.f":164 86 {*movsi_internal}
     (nil))
(insn 793 792 794 68 (set (reg:DI 1 dx [orig:412 _326 ] [412])
        (sign_extend:DI (reg:SI 1 dx [908]))) "CALRCH.f":164 149 {*extendsidi2_rex64}
     (nil))
(insn 794 793 1386 68 (parallel [
            (set (reg:DI 1 dx [orig:413 _327 ] [413])
                (plus:DI (reg:DI 1 dx [orig:412 _326 ] [412])
                    (reg:DI 2 cx [orig:411 _325 ] [411])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":164 222 {*adddi_1}
     (nil))
(insn 1386 794 796 68 (set (reg:DI 2 cx [orig:414 _328 ] [414])
        (plus:DI (reg:DI 1 dx [orig:413 _327 ] [413])
            (const_int -29751 [0xffffffffffff8bc9]))) "CALRCH.f":164 218 {*leadi}
     (nil))
(insn 796 1386 797 68 (set (reg/f:DI 1 dx [909])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7fe96ef1b900 vrbls>)) "CALRCH.f":164 85 {*movdi_internal}
     (nil))
(insn 797 796 798 68 (parallel [
            (set (reg:DI 2 cx [910])
                (plus:DI (reg:DI 2 cx [orig:414 _328 ] [414])
                    (const_int 88893 [0x15b3d])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":164 222 {*adddi_1}
     (nil))
(insn 798 797 799 68 (set (reg:SF 22 xmm1 [orig:415 _329 ] [415])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [910])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [909])) [2 vrbls.u S4 A32])) "CALRCH.f":164 131 {*movsf_internal}
     (nil))
(insn 799 798 800 68 (set (reg:SI 1 dx [911])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALRCH.f":164 86 {*movsi_internal}
     (nil))
(insn 800 799 801 68 (set (reg:DI 1 dx [orig:416 _330 ] [416])
        (sign_extend:DI (reg:SI 1 dx [911]))) "CALRCH.f":164 149 {*extendsidi2_rex64}
     (nil))
(insn 801 800 802 68 (parallel [
            (set (reg:DI 2 cx [orig:417 _331 ] [417])
                (mult:DI (reg:DI 1 dx [orig:416 _330 ] [416])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":164 349 {*muldi3_1}
     (nil))
(insn 802 801 803 68 (set (reg:SI 1 dx [912])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALRCH.f":164 86 {*movsi_internal}
     (nil))
(insn 803 802 804 68 (set (reg:DI 1 dx [orig:418 _332 ] [418])
        (sign_extend:DI (reg:SI 1 dx [912]))) "CALRCH.f":164 149 {*extendsidi2_rex64}
     (nil))
(insn 804 803 805 68 (parallel [
            (set (reg:DI 1 dx [orig:419 _333 ] [419])
                (mult:DI (reg:DI 1 dx [orig:418 _332 ] [418])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":164 349 {*muldi3_1}
     (nil))
(insn 805 804 806 68 (parallel [
            (set (reg:DI 2 cx [orig:420 _334 ] [420])
                (plus:DI (reg:DI 2 cx [orig:417 _331 ] [417])
                    (reg:DI 1 dx [orig:419 _333 ] [419])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":164 222 {*adddi_1}
     (nil))
(insn 806 805 807 68 (set (reg:SI 1 dx [913])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 iw+0 S4 A32])) "CALRCH.f":164 86 {*movsi_internal}
     (nil))
(insn 807 806 808 68 (set (reg:DI 1 dx [orig:421 _335 ] [421])
        (sign_extend:DI (reg:SI 1 dx [913]))) "CALRCH.f":164 149 {*extendsidi2_rex64}
     (nil))
(insn 808 807 1387 68 (parallel [
            (set (reg:DI 1 dx [orig:422 _336 ] [422])
                (plus:DI (reg:DI 1 dx [orig:421 _335 ] [421])
                    (reg:DI 2 cx [orig:420 _334 ] [420])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":164 222 {*adddi_1}
     (nil))
(insn 1387 808 810 68 (set (reg:DI 2 cx [orig:423 _337 ] [423])
        (plus:DI (reg:DI 1 dx [orig:422 _336 ] [422])
            (const_int -29751 [0xffffffffffff8bc9]))) "CALRCH.f":164 218 {*leadi}
     (nil))
(insn 810 1387 811 68 (set (reg/f:DI 1 dx [914])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7fe96ef1b900 vrbls>)) "CALRCH.f":164 85 {*movdi_internal}
     (nil))
(insn 811 810 812 68 (parallel [
            (set (reg:DI 2 cx [915])
                (plus:DI (reg:DI 2 cx [orig:423 _337 ] [423])
                    (const_int 88893 [0x15b3d])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":164 222 {*adddi_1}
     (nil))
(insn 812 811 813 68 (set (reg:SF 21 xmm0 [orig:424 _338 ] [424])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [915])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [914])) [2 vrbls.u S4 A32])) "CALRCH.f":164 131 {*movsf_internal}
     (nil))
(insn 813 812 814 68 (set (reg:SF 22 xmm1 [orig:425 _339 ] [425])
        (plus:SF (reg:SF 22 xmm1 [orig:415 _329 ] [415])
            (reg:SF 21 xmm0 [orig:424 _338 ] [424]))) "CALRCH.f":164 838 {*fop_sf_comm}
     (nil))
(insn 814 813 815 68 (set (reg:SI 1 dx [916])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALRCH.f":164 86 {*movsi_internal}
     (nil))
(insn 815 814 816 68 (set (reg:DI 1 dx [orig:426 _340 ] [426])
        (sign_extend:DI (reg:SI 1 dx [916]))) "CALRCH.f":164 149 {*extendsidi2_rex64}
     (nil))
(insn 816 815 817 68 (parallel [
            (set (reg:DI 2 cx [orig:427 _341 ] [427])
                (mult:DI (reg:DI 1 dx [orig:426 _340 ] [426])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":164 349 {*muldi3_1}
     (nil))
(insn 817 816 818 68 (set (reg:SI 1 dx [917])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALRCH.f":164 86 {*movsi_internal}
     (nil))
(insn 818 817 819 68 (set (reg:DI 1 dx [orig:428 _342 ] [428])
        (sign_extend:DI (reg:SI 1 dx [917]))) "CALRCH.f":164 149 {*extendsidi2_rex64}
     (nil))
(insn 819 818 820 68 (parallel [
            (set (reg:DI 1 dx [orig:429 _343 ] [429])
                (mult:DI (reg:DI 1 dx [orig:428 _342 ] [428])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":164 349 {*muldi3_1}
     (nil))
(insn 820 819 821 68 (parallel [
            (set (reg:DI 2 cx [orig:430 _344 ] [430])
                (plus:DI (reg:DI 2 cx [orig:427 _341 ] [427])
                    (reg:DI 1 dx [orig:429 _343 ] [429])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":164 222 {*adddi_1}
     (nil))
(insn 821 820 822 68 (set (reg:SI 1 dx [918])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 ie+0 S4 A32])) "CALRCH.f":164 86 {*movsi_internal}
     (nil))
(insn 822 821 823 68 (set (reg:DI 1 dx [orig:431 _345 ] [431])
        (sign_extend:DI (reg:SI 1 dx [918]))) "CALRCH.f":164 149 {*extendsidi2_rex64}
     (nil))
(insn 823 822 1388 68 (parallel [
            (set (reg:DI 1 dx [orig:432 _346 ] [432])
                (plus:DI (reg:DI 1 dx [orig:431 _345 ] [431])
                    (reg:DI 2 cx [orig:430 _344 ] [430])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":164 222 {*adddi_1}
     (nil))
(insn 1388 823 825 68 (set (reg:DI 2 cx [orig:433 _347 ] [433])
        (plus:DI (reg:DI 1 dx [orig:432 _346 ] [432])
            (const_int -29751 [0xffffffffffff8bc9]))) "CALRCH.f":164 218 {*leadi}
     (nil))
(insn 825 1388 826 68 (set (reg/f:DI 1 dx [919])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7fe96ef1b900 vrbls>)) "CALRCH.f":164 85 {*movdi_internal}
     (nil))
(insn 826 825 827 68 (parallel [
            (set (reg:DI 2 cx [920])
                (plus:DI (reg:DI 2 cx [orig:433 _347 ] [433])
                    (const_int 88893 [0x15b3d])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":164 222 {*adddi_1}
     (nil))
(insn 827 826 828 68 (set (reg:SF 21 xmm0 [orig:434 _348 ] [434])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [920])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [919])) [2 vrbls.u S4 A32])) "CALRCH.f":164 131 {*movsf_internal}
     (nil))
(insn 828 827 829 68 (set (reg:SF 22 xmm1 [orig:435 _349 ] [435])
        (plus:SF (reg:SF 22 xmm1 [orig:425 _339 ] [425])
            (reg:SF 21 xmm0 [orig:434 _348 ] [434]))) "CALRCH.f":164 838 {*fop_sf_comm}
     (nil))
(insn 829 828 830 68 (set (reg:SI 1 dx [921])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALRCH.f":164 86 {*movsi_internal}
     (nil))
(insn 830 829 831 68 (set (reg:DI 1 dx [orig:436 _350 ] [436])
        (sign_extend:DI (reg:SI 1 dx [921]))) "CALRCH.f":164 149 {*extendsidi2_rex64}
     (nil))
(insn 831 830 832 68 (parallel [
            (set (reg:DI 2 cx [orig:437 _351 ] [437])
                (mult:DI (reg:DI 1 dx [orig:436 _350 ] [436])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":164 349 {*muldi3_1}
     (nil))
(insn 832 831 833 68 (set (reg:SI 1 dx [922])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALRCH.f":164 86 {*movsi_internal}
     (nil))
(insn 833 832 834 68 (parallel [
            (set (reg:SI 1 dx [orig:438 _352 ] [438])
                (plus:SI (reg:SI 1 dx [922])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":164 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 834 833 835 68 (set (reg:DI 1 dx [orig:439 _353 ] [439])
        (sign_extend:DI (reg:SI 1 dx [orig:438 _352 ] [438]))) "CALRCH.f":164 149 {*extendsidi2_rex64}
     (nil))
(insn 835 834 836 68 (parallel [
            (set (reg:DI 1 dx [orig:440 _354 ] [440])
                (mult:DI (reg:DI 1 dx [orig:439 _353 ] [439])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":164 349 {*muldi3_1}
     (nil))
(insn 836 835 837 68 (parallel [
            (set (reg:DI 2 cx [orig:441 _355 ] [441])
                (plus:DI (reg:DI 2 cx [orig:437 _351 ] [437])
                    (reg:DI 1 dx [orig:440 _354 ] [440])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":164 222 {*adddi_1}
     (nil))
(insn 837 836 838 68 (set (reg:SI 1 dx [923])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALRCH.f":164 86 {*movsi_internal}
     (nil))
(insn 838 837 839 68 (set (reg:DI 1 dx [orig:442 _356 ] [442])
        (sign_extend:DI (reg:SI 1 dx [923]))) "CALRCH.f":164 149 {*extendsidi2_rex64}
     (nil))
(insn 839 838 1389 68 (parallel [
            (set (reg:DI 1 dx [orig:443 _357 ] [443])
                (plus:DI (reg:DI 1 dx [orig:442 _356 ] [442])
                    (reg:DI 2 cx [orig:441 _355 ] [441])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":164 222 {*adddi_1}
     (nil))
(insn 1389 839 841 68 (set (reg:DI 2 cx [orig:444 _358 ] [444])
        (plus:DI (reg:DI 1 dx [orig:443 _357 ] [443])
            (const_int -29751 [0xffffffffffff8bc9]))) "CALRCH.f":164 218 {*leadi}
     (nil))
(insn 841 1389 842 68 (set (reg/f:DI 1 dx [924])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7fe96ef1b900 vrbls>)) "CALRCH.f":164 85 {*movdi_internal}
     (nil))
(insn 842 841 843 68 (parallel [
            (set (reg:DI 2 cx [925])
                (plus:DI (reg:DI 2 cx [orig:444 _358 ] [444])
                    (const_int 88893 [0x15b3d])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":164 222 {*adddi_1}
     (nil))
(insn 843 842 844 68 (set (reg:SF 21 xmm0 [orig:445 _359 ] [445])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [925])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [924])) [2 vrbls.u S4 A32])) "CALRCH.f":164 131 {*movsf_internal}
     (nil))
(insn 844 843 846 68 (set (reg:SF 21 xmm0 [orig:446 _360 ] [446])
        (plus:SF (reg:SF 21 xmm0 [orig:445 _359 ] [445])
            (reg:SF 22 xmm1 [orig:435 _349 ] [435]))) "CALRCH.f":164 838 {*fop_sf_comm}
     (nil))
(insn 846 844 847 68 (set (reg:SF 21 xmm0 [926])
        (div:SF (reg:SF 21 xmm0 [orig:447 _361 ] [447])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -44 [0xffffffffffffffd4])) [2 wndsl+0 S4 A32]))) "CALRCH.f":164 841 {*fop_sf_1}
     (nil))
(insn 847 846 848 68 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 uhkl+0 S4 A32])
        (reg:SF 21 xmm0 [926])) "CALRCH.f":164 131 {*movsf_internal}
     (nil))
(insn 848 847 849 68 (set (reg:SI 1 dx [927])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALRCH.f":166 86 {*movsi_internal}
     (nil))
(insn 849 848 850 68 (parallel [
            (set (reg:SI 1 dx [orig:448 _362 ] [448])
                (plus:SI (reg:SI 1 dx [927])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":166 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 850 849 851 68 (set (reg:DI 1 dx [orig:449 _363 ] [449])
        (sign_extend:DI (reg:SI 1 dx [orig:448 _362 ] [448]))) "CALRCH.f":166 149 {*extendsidi2_rex64}
     (nil))
(insn 851 850 852 68 (parallel [
            (set (reg:DI 2 cx [orig:450 _364 ] [450])
                (mult:DI (reg:DI 1 dx [orig:449 _363 ] [449])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":166 349 {*muldi3_1}
     (nil))
(insn 852 851 853 68 (set (reg:SI 1 dx [928])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALRCH.f":166 86 {*movsi_internal}
     (nil))
(insn 853 852 854 68 (parallel [
            (set (reg:SI 1 dx [orig:451 _365 ] [451])
                (plus:SI (reg:SI 1 dx [928])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":166 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 854 853 855 68 (set (reg:DI 1 dx [orig:452 _366 ] [452])
        (sign_extend:DI (reg:SI 1 dx [orig:451 _365 ] [451]))) "CALRCH.f":166 149 {*extendsidi2_rex64}
     (nil))
(insn 855 854 856 68 (parallel [
            (set (reg:DI 1 dx [orig:453 _367 ] [453])
                (mult:DI (reg:DI 1 dx [orig:452 _366 ] [452])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":166 349 {*muldi3_1}
     (nil))
(insn 856 855 857 68 (parallel [
            (set (reg:DI 2 cx [orig:454 _368 ] [454])
                (plus:DI (reg:DI 2 cx [orig:450 _364 ] [450])
                    (reg:DI 1 dx [orig:453 _367 ] [453])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":166 222 {*adddi_1}
     (nil))
(insn 857 856 858 68 (set (reg:SI 1 dx [929])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALRCH.f":166 86 {*movsi_internal}
     (nil))
(insn 858 857 859 68 (set (reg:DI 1 dx [orig:455 _369 ] [455])
        (sign_extend:DI (reg:SI 1 dx [929]))) "CALRCH.f":166 149 {*extendsidi2_rex64}
     (nil))
(insn 859 858 1390 68 (parallel [
            (set (reg:DI 1 dx [orig:456 _370 ] [456])
                (plus:DI (reg:DI 1 dx [orig:455 _369 ] [455])
                    (reg:DI 2 cx [orig:454 _368 ] [454])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":166 222 {*adddi_1}
     (nil))
(insn 1390 859 861 68 (set (reg:DI 2 cx [orig:457 _371 ] [457])
        (plus:DI (reg:DI 1 dx [orig:456 _370 ] [456])
            (const_int -29751 [0xffffffffffff8bc9]))) "CALRCH.f":166 218 {*leadi}
     (nil))
(insn 861 1390 862 68 (set (reg/f:DI 1 dx [930])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7fe96ef1b900 vrbls>)) "CALRCH.f":166 85 {*movdi_internal}
     (nil))
(insn 862 861 863 68 (parallel [
            (set (reg:DI 2 cx [931])
                (plus:DI (reg:DI 2 cx [orig:457 _371 ] [457])
                    (const_int 88893 [0x15b3d])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":166 222 {*adddi_1}
     (nil))
(insn 863 862 864 68 (set (reg:SF 22 xmm1 [orig:458 _372 ] [458])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [931])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [930])) [2 vrbls.u S4 A32])) "CALRCH.f":166 131 {*movsf_internal}
     (nil))
(insn 864 863 865 68 (set (reg:SI 1 dx [932])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALRCH.f":166 86 {*movsi_internal}
     (nil))
(insn 865 864 866 68 (parallel [
            (set (reg:SI 1 dx [orig:459 _373 ] [459])
                (plus:SI (reg:SI 1 dx [932])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":166 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 866 865 867 68 (set (reg:DI 1 dx [orig:460 _374 ] [460])
        (sign_extend:DI (reg:SI 1 dx [orig:459 _373 ] [459]))) "CALRCH.f":166 149 {*extendsidi2_rex64}
     (nil))
(insn 867 866 868 68 (parallel [
            (set (reg:DI 2 cx [orig:461 _375 ] [461])
                (mult:DI (reg:DI 1 dx [orig:460 _374 ] [460])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":166 349 {*muldi3_1}
     (nil))
(insn 868 867 869 68 (set (reg:SI 1 dx [933])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALRCH.f":166 86 {*movsi_internal}
     (nil))
(insn 869 868 870 68 (set (reg:DI 1 dx [orig:462 _376 ] [462])
        (sign_extend:DI (reg:SI 1 dx [933]))) "CALRCH.f":166 149 {*extendsidi2_rex64}
     (nil))
(insn 870 869 871 68 (parallel [
            (set (reg:DI 1 dx [orig:463 _377 ] [463])
                (mult:DI (reg:DI 1 dx [orig:462 _376 ] [462])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":166 349 {*muldi3_1}
     (nil))
(insn 871 870 872 68 (parallel [
            (set (reg:DI 2 cx [orig:464 _378 ] [464])
                (plus:DI (reg:DI 2 cx [orig:461 _375 ] [461])
                    (reg:DI 1 dx [orig:463 _377 ] [463])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":166 222 {*adddi_1}
     (nil))
(insn 872 871 873 68 (set (reg:SI 1 dx [934])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 iw+0 S4 A32])) "CALRCH.f":166 86 {*movsi_internal}
     (nil))
(insn 873 872 874 68 (set (reg:DI 1 dx [orig:465 _379 ] [465])
        (sign_extend:DI (reg:SI 1 dx [934]))) "CALRCH.f":166 149 {*extendsidi2_rex64}
     (nil))
(insn 874 873 1391 68 (parallel [
            (set (reg:DI 1 dx [orig:466 _380 ] [466])
                (plus:DI (reg:DI 1 dx [orig:465 _379 ] [465])
                    (reg:DI 2 cx [orig:464 _378 ] [464])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":166 222 {*adddi_1}
     (nil))
(insn 1391 874 876 68 (set (reg:DI 2 cx [orig:467 _381 ] [467])
        (plus:DI (reg:DI 1 dx [orig:466 _380 ] [466])
            (const_int -29751 [0xffffffffffff8bc9]))) "CALRCH.f":166 218 {*leadi}
     (nil))
(insn 876 1391 877 68 (set (reg/f:DI 1 dx [935])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7fe96ef1b900 vrbls>)) "CALRCH.f":166 85 {*movdi_internal}
     (nil))
(insn 877 876 878 68 (parallel [
            (set (reg:DI 2 cx [936])
                (plus:DI (reg:DI 2 cx [orig:467 _381 ] [467])
                    (const_int 88893 [0x15b3d])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":166 222 {*adddi_1}
     (nil))
(insn 878 877 879 68 (set (reg:SF 21 xmm0 [orig:468 _382 ] [468])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [936])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [935])) [2 vrbls.u S4 A32])) "CALRCH.f":166 131 {*movsf_internal}
     (nil))
(insn 879 878 880 68 (set (reg:SF 22 xmm1 [orig:469 _383 ] [469])
        (plus:SF (reg:SF 22 xmm1 [orig:458 _372 ] [458])
            (reg:SF 21 xmm0 [orig:468 _382 ] [468]))) "CALRCH.f":166 838 {*fop_sf_comm}
     (nil))
(insn 880 879 881 68 (set (reg:SI 1 dx [937])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALRCH.f":166 86 {*movsi_internal}
     (nil))
(insn 881 880 882 68 (parallel [
            (set (reg:SI 1 dx [orig:470 _384 ] [470])
                (plus:SI (reg:SI 1 dx [937])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":166 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 882 881 883 68 (set (reg:DI 1 dx [orig:471 _385 ] [471])
        (sign_extend:DI (reg:SI 1 dx [orig:470 _384 ] [470]))) "CALRCH.f":166 149 {*extendsidi2_rex64}
     (nil))
(insn 883 882 884 68 (parallel [
            (set (reg:DI 2 cx [orig:472 _386 ] [472])
                (mult:DI (reg:DI 1 dx [orig:471 _385 ] [471])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":166 349 {*muldi3_1}
     (nil))
(insn 884 883 885 68 (set (reg:SI 1 dx [938])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALRCH.f":166 86 {*movsi_internal}
     (nil))
(insn 885 884 886 68 (set (reg:DI 1 dx [orig:473 _387 ] [473])
        (sign_extend:DI (reg:SI 1 dx [938]))) "CALRCH.f":166 149 {*extendsidi2_rex64}
     (nil))
(insn 886 885 887 68 (parallel [
            (set (reg:DI 1 dx [orig:474 _388 ] [474])
                (mult:DI (reg:DI 1 dx [orig:473 _387 ] [473])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":166 349 {*muldi3_1}
     (nil))
(insn 887 886 888 68 (parallel [
            (set (reg:DI 2 cx [orig:475 _389 ] [475])
                (plus:DI (reg:DI 2 cx [orig:472 _386 ] [472])
                    (reg:DI 1 dx [orig:474 _388 ] [474])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":166 222 {*adddi_1}
     (nil))
(insn 888 887 889 68 (set (reg:SI 1 dx [939])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 ie+0 S4 A32])) "CALRCH.f":166 86 {*movsi_internal}
     (nil))
(insn 889 888 890 68 (set (reg:DI 1 dx [orig:476 _390 ] [476])
        (sign_extend:DI (reg:SI 1 dx [939]))) "CALRCH.f":166 149 {*extendsidi2_rex64}
     (nil))
(insn 890 889 1392 68 (parallel [
            (set (reg:DI 1 dx [orig:477 _391 ] [477])
                (plus:DI (reg:DI 1 dx [orig:476 _390 ] [476])
                    (reg:DI 2 cx [orig:475 _389 ] [475])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":166 222 {*adddi_1}
     (nil))
(insn 1392 890 892 68 (set (reg:DI 2 cx [orig:478 _392 ] [478])
        (plus:DI (reg:DI 1 dx [orig:477 _391 ] [477])
            (const_int -29751 [0xffffffffffff8bc9]))) "CALRCH.f":166 218 {*leadi}
     (nil))
(insn 892 1392 893 68 (set (reg/f:DI 1 dx [940])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7fe96ef1b900 vrbls>)) "CALRCH.f":166 85 {*movdi_internal}
     (nil))
(insn 893 892 894 68 (parallel [
            (set (reg:DI 2 cx [941])
                (plus:DI (reg:DI 2 cx [orig:478 _392 ] [478])
                    (const_int 88893 [0x15b3d])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":166 222 {*adddi_1}
     (nil))
(insn 894 893 895 68 (set (reg:SF 21 xmm0 [orig:479 _393 ] [479])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [941])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [940])) [2 vrbls.u S4 A32])) "CALRCH.f":166 131 {*movsf_internal}
     (nil))
(insn 895 894 896 68 (set (reg:SF 22 xmm1 [orig:480 _394 ] [480])
        (plus:SF (reg:SF 22 xmm1 [orig:469 _383 ] [469])
            (reg:SF 21 xmm0 [orig:479 _393 ] [479]))) "CALRCH.f":166 838 {*fop_sf_comm}
     (nil))
(insn 896 895 897 68 (set (reg:SI 1 dx [942])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALRCH.f":166 86 {*movsi_internal}
     (nil))
(insn 897 896 898 68 (parallel [
            (set (reg:SI 1 dx [orig:481 _395 ] [481])
                (plus:SI (reg:SI 1 dx [942])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":166 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 898 897 899 68 (set (reg:DI 1 dx [orig:482 _396 ] [482])
        (sign_extend:DI (reg:SI 1 dx [orig:481 _395 ] [481]))) "CALRCH.f":166 149 {*extendsidi2_rex64}
     (nil))
(insn 899 898 900 68 (parallel [
            (set (reg:DI 2 cx [orig:483 _397 ] [483])
                (mult:DI (reg:DI 1 dx [orig:482 _396 ] [482])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":166 349 {*muldi3_1}
     (nil))
(insn 900 899 901 68 (set (reg:SI 1 dx [943])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALRCH.f":166 86 {*movsi_internal}
     (nil))
(insn 901 900 902 68 (parallel [
            (set (reg:SI 1 dx [orig:484 _398 ] [484])
                (plus:SI (reg:SI 1 dx [943])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":166 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 902 901 903 68 (set (reg:DI 1 dx [orig:485 _399 ] [485])
        (sign_extend:DI (reg:SI 1 dx [orig:484 _398 ] [484]))) "CALRCH.f":166 149 {*extendsidi2_rex64}
     (nil))
(insn 903 902 904 68 (parallel [
            (set (reg:DI 1 dx [orig:486 _400 ] [486])
                (mult:DI (reg:DI 1 dx [orig:485 _399 ] [485])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":166 349 {*muldi3_1}
     (nil))
(insn 904 903 905 68 (parallel [
            (set (reg:DI 2 cx [orig:487 _401 ] [487])
                (plus:DI (reg:DI 2 cx [orig:483 _397 ] [483])
                    (reg:DI 1 dx [orig:486 _400 ] [486])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":166 222 {*adddi_1}
     (nil))
(insn 905 904 906 68 (set (reg:SI 1 dx [944])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALRCH.f":166 86 {*movsi_internal}
     (nil))
(insn 906 905 907 68 (set (reg:DI 1 dx [orig:488 _402 ] [488])
        (sign_extend:DI (reg:SI 1 dx [944]))) "CALRCH.f":166 149 {*extendsidi2_rex64}
     (nil))
(insn 907 906 1393 68 (parallel [
            (set (reg:DI 1 dx [orig:489 _403 ] [489])
                (plus:DI (reg:DI 1 dx [orig:488 _402 ] [488])
                    (reg:DI 2 cx [orig:487 _401 ] [487])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":166 222 {*adddi_1}
     (nil))
(insn 1393 907 909 68 (set (reg:DI 2 cx [orig:490 _404 ] [490])
        (plus:DI (reg:DI 1 dx [orig:489 _403 ] [489])
            (const_int -29751 [0xffffffffffff8bc9]))) "CALRCH.f":166 218 {*leadi}
     (nil))
(insn 909 1393 910 68 (set (reg/f:DI 1 dx [945])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7fe96ef1b900 vrbls>)) "CALRCH.f":166 85 {*movdi_internal}
     (nil))
(insn 910 909 911 68 (parallel [
            (set (reg:DI 2 cx [946])
                (plus:DI (reg:DI 2 cx [orig:490 _404 ] [490])
                    (const_int 88893 [0x15b3d])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":166 222 {*adddi_1}
     (nil))
(insn 911 910 912 68 (set (reg:SF 21 xmm0 [orig:491 _405 ] [491])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [946])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [945])) [2 vrbls.u S4 A32])) "CALRCH.f":166 131 {*movsf_internal}
     (nil))
(insn 912 911 914 68 (set (reg:SF 21 xmm0 [orig:492 _406 ] [492])
        (plus:SF (reg:SF 21 xmm0 [orig:491 _405 ] [491])
            (reg:SF 22 xmm1 [orig:480 _394 ] [480]))) "CALRCH.f":166 838 {*fop_sf_comm}
     (nil))
(insn 914 912 915 68 (set (reg:SF 21 xmm0 [947])
        (div:SF (reg:SF 21 xmm0 [orig:493 _407 ] [493])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -48 [0xffffffffffffffd0])) [2 wndslp+0 S4 A32]))) "CALRCH.f":166 841 {*fop_sf_1}
     (nil))
(insn 915 914 916 68 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 ulkl+0 S4 A32])
        (reg:SF 21 xmm0 [947])) "CALRCH.f":166 131 {*movsf_internal}
     (nil))
(insn 916 915 917 68 (set (reg:SI 1 dx [948])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALRCH.f":167 86 {*movsi_internal}
     (nil))
(insn 917 916 918 68 (set (reg:DI 1 dx [orig:494 _408 ] [494])
        (sign_extend:DI (reg:SI 1 dx [948]))) "CALRCH.f":167 149 {*extendsidi2_rex64}
     (nil))
(insn 918 917 919 68 (parallel [
            (set (reg:DI 2 cx [orig:495 _409 ] [495])
                (mult:DI (reg:DI 1 dx [orig:494 _408 ] [494])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":167 349 {*muldi3_1}
     (nil))
(insn 919 918 920 68 (set (reg:SI 1 dx [949])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALRCH.f":167 86 {*movsi_internal}
     (nil))
(insn 920 919 921 68 (parallel [
            (set (reg:SI 1 dx [orig:496 _410 ] [496])
                (plus:SI (reg:SI 1 dx [949])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":167 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 921 920 922 68 (set (reg:DI 1 dx [orig:497 _411 ] [497])
        (sign_extend:DI (reg:SI 1 dx [orig:496 _410 ] [496]))) "CALRCH.f":167 149 {*extendsidi2_rex64}
     (nil))
(insn 922 921 923 68 (parallel [
            (set (reg:DI 1 dx [orig:498 _412 ] [498])
                (mult:DI (reg:DI 1 dx [orig:497 _411 ] [497])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":167 349 {*muldi3_1}
     (nil))
(insn 923 922 924 68 (parallel [
            (set (reg:DI 2 cx [orig:499 _413 ] [499])
                (plus:DI (reg:DI 2 cx [orig:495 _409 ] [495])
                    (reg:DI 1 dx [orig:498 _412 ] [498])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":167 222 {*adddi_1}
     (nil))
(insn 924 923 925 68 (set (reg:SI 1 dx [950])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALRCH.f":167 86 {*movsi_internal}
     (nil))
(insn 925 924 926 68 (set (reg:DI 1 dx [orig:500 _414 ] [500])
        (sign_extend:DI (reg:SI 1 dx [950]))) "CALRCH.f":167 149 {*extendsidi2_rex64}
     (nil))
(insn 926 925 1394 68 (parallel [
            (set (reg:DI 1 dx [orig:501 _415 ] [501])
                (plus:DI (reg:DI 1 dx [orig:500 _414 ] [500])
                    (reg:DI 2 cx [orig:499 _413 ] [499])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":167 222 {*adddi_1}
     (nil))
(insn 1394 926 928 68 (set (reg:DI 2 cx [orig:502 _416 ] [502])
        (plus:DI (reg:DI 1 dx [orig:501 _415 ] [501])
            (const_int -29751 [0xffffffffffff8bc9]))) "CALRCH.f":167 218 {*leadi}
     (nil))
(insn 928 1394 929 68 (set (reg/f:DI 1 dx [951])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7fe96ef1b900 vrbls>)) "CALRCH.f":167 85 {*movdi_internal}
     (nil))
(insn 929 928 930 68 (parallel [
            (set (reg:DI 2 cx [952])
                (plus:DI (reg:DI 2 cx [orig:502 _416 ] [502])
                    (const_int 1214871 [0x128997])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":167 222 {*adddi_1}
     (nil))
(insn 930 929 931 68 (set (reg:SF 22 xmm1 [orig:503 _417 ] [503])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [952])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [951])) [2 vrbls.v S4 A32])) "CALRCH.f":167 131 {*movsf_internal}
     (nil))
(insn 931 930 932 68 (set (reg:SI 1 dx [953])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALRCH.f":167 86 {*movsi_internal}
     (nil))
(insn 932 931 933 68 (set (reg:DI 1 dx [orig:504 _418 ] [504])
        (sign_extend:DI (reg:SI 1 dx [953]))) "CALRCH.f":167 149 {*extendsidi2_rex64}
     (nil))
(insn 933 932 934 68 (parallel [
            (set (reg:DI 2 cx [orig:505 _419 ] [505])
                (mult:DI (reg:DI 1 dx [orig:504 _418 ] [504])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":167 349 {*muldi3_1}
     (nil))
(insn 934 933 935 68 (set (reg:SI 1 dx [954])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALRCH.f":167 86 {*movsi_internal}
     (nil))
(insn 935 934 936 68 (set (reg:DI 1 dx [orig:506 _420 ] [506])
        (sign_extend:DI (reg:SI 1 dx [954]))) "CALRCH.f":167 149 {*extendsidi2_rex64}
     (nil))
(insn 936 935 937 68 (parallel [
            (set (reg:DI 1 dx [orig:507 _421 ] [507])
                (mult:DI (reg:DI 1 dx [orig:506 _420 ] [506])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":167 349 {*muldi3_1}
     (nil))
(insn 937 936 938 68 (parallel [
            (set (reg:DI 2 cx [orig:508 _422 ] [508])
                (plus:DI (reg:DI 2 cx [orig:505 _419 ] [505])
                    (reg:DI 1 dx [orig:507 _421 ] [507])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":167 222 {*adddi_1}
     (nil))
(insn 938 937 939 68 (set (reg:SI 1 dx [955])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 iw+0 S4 A32])) "CALRCH.f":167 86 {*movsi_internal}
     (nil))
(insn 939 938 940 68 (set (reg:DI 1 dx [orig:509 _423 ] [509])
        (sign_extend:DI (reg:SI 1 dx [955]))) "CALRCH.f":167 149 {*extendsidi2_rex64}
     (nil))
(insn 940 939 1395 68 (parallel [
            (set (reg:DI 1 dx [orig:510 _424 ] [510])
                (plus:DI (reg:DI 1 dx [orig:509 _423 ] [509])
                    (reg:DI 2 cx [orig:508 _422 ] [508])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":167 222 {*adddi_1}
     (nil))
(insn 1395 940 942 68 (set (reg:DI 2 cx [orig:511 _425 ] [511])
        (plus:DI (reg:DI 1 dx [orig:510 _424 ] [510])
            (const_int -29751 [0xffffffffffff8bc9]))) "CALRCH.f":167 218 {*leadi}
     (nil))
(insn 942 1395 943 68 (set (reg/f:DI 1 dx [956])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7fe96ef1b900 vrbls>)) "CALRCH.f":167 85 {*movdi_internal}
     (nil))
(insn 943 942 944 68 (parallel [
            (set (reg:DI 2 cx [957])
                (plus:DI (reg:DI 2 cx [orig:511 _425 ] [511])
                    (const_int 1214871 [0x128997])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":167 222 {*adddi_1}
     (nil))
(insn 944 943 945 68 (set (reg:SF 21 xmm0 [orig:512 _426 ] [512])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [957])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [956])) [2 vrbls.v S4 A32])) "CALRCH.f":167 131 {*movsf_internal}
     (nil))
(insn 945 944 946 68 (set (reg:SF 22 xmm1 [orig:513 _427 ] [513])
        (plus:SF (reg:SF 22 xmm1 [orig:503 _417 ] [503])
            (reg:SF 21 xmm0 [orig:512 _426 ] [512]))) "CALRCH.f":167 838 {*fop_sf_comm}
     (nil))
(insn 946 945 947 68 (set (reg:SI 1 dx [958])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALRCH.f":167 86 {*movsi_internal}
     (nil))
(insn 947 946 948 68 (set (reg:DI 1 dx [orig:514 _428 ] [514])
        (sign_extend:DI (reg:SI 1 dx [958]))) "CALRCH.f":167 149 {*extendsidi2_rex64}
     (nil))
(insn 948 947 949 68 (parallel [
            (set (reg:DI 2 cx [orig:515 _429 ] [515])
                (mult:DI (reg:DI 1 dx [orig:514 _428 ] [514])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":167 349 {*muldi3_1}
     (nil))
(insn 949 948 950 68 (set (reg:SI 1 dx [959])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALRCH.f":167 86 {*movsi_internal}
     (nil))
(insn 950 949 951 68 (set (reg:DI 1 dx [orig:516 _430 ] [516])
        (sign_extend:DI (reg:SI 1 dx [959]))) "CALRCH.f":167 149 {*extendsidi2_rex64}
     (nil))
(insn 951 950 952 68 (parallel [
            (set (reg:DI 1 dx [orig:517 _431 ] [517])
                (mult:DI (reg:DI 1 dx [orig:516 _430 ] [516])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":167 349 {*muldi3_1}
     (nil))
(insn 952 951 953 68 (parallel [
            (set (reg:DI 2 cx [orig:518 _432 ] [518])
                (plus:DI (reg:DI 2 cx [orig:515 _429 ] [515])
                    (reg:DI 1 dx [orig:517 _431 ] [517])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":167 222 {*adddi_1}
     (nil))
(insn 953 952 954 68 (set (reg:SI 1 dx [960])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 ie+0 S4 A32])) "CALRCH.f":167 86 {*movsi_internal}
     (nil))
(insn 954 953 955 68 (set (reg:DI 1 dx [orig:519 _433 ] [519])
        (sign_extend:DI (reg:SI 1 dx [960]))) "CALRCH.f":167 149 {*extendsidi2_rex64}
     (nil))
(insn 955 954 1396 68 (parallel [
            (set (reg:DI 1 dx [orig:520 _434 ] [520])
                (plus:DI (reg:DI 1 dx [orig:519 _433 ] [519])
                    (reg:DI 2 cx [orig:518 _432 ] [518])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":167 222 {*adddi_1}
     (nil))
(insn 1396 955 957 68 (set (reg:DI 2 cx [orig:521 _435 ] [521])
        (plus:DI (reg:DI 1 dx [orig:520 _434 ] [520])
            (const_int -29751 [0xffffffffffff8bc9]))) "CALRCH.f":167 218 {*leadi}
     (nil))
(insn 957 1396 958 68 (set (reg/f:DI 1 dx [961])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7fe96ef1b900 vrbls>)) "CALRCH.f":167 85 {*movdi_internal}
     (nil))
(insn 958 957 959 68 (parallel [
            (set (reg:DI 2 cx [962])
                (plus:DI (reg:DI 2 cx [orig:521 _435 ] [521])
                    (const_int 1214871 [0x128997])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":167 222 {*adddi_1}
     (nil))
(insn 959 958 960 68 (set (reg:SF 21 xmm0 [orig:522 _436 ] [522])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [962])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [961])) [2 vrbls.v S4 A32])) "CALRCH.f":167 131 {*movsf_internal}
     (nil))
(insn 960 959 961 68 (set (reg:SF 22 xmm1 [orig:523 _437 ] [523])
        (plus:SF (reg:SF 22 xmm1 [orig:513 _427 ] [513])
            (reg:SF 21 xmm0 [orig:522 _436 ] [522]))) "CALRCH.f":167 838 {*fop_sf_comm}
     (nil))
(insn 961 960 962 68 (set (reg:SI 1 dx [963])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALRCH.f":167 86 {*movsi_internal}
     (nil))
(insn 962 961 963 68 (set (reg:DI 1 dx [orig:524 _438 ] [524])
        (sign_extend:DI (reg:SI 1 dx [963]))) "CALRCH.f":167 149 {*extendsidi2_rex64}
     (nil))
(insn 963 962 964 68 (parallel [
            (set (reg:DI 2 cx [orig:525 _439 ] [525])
                (mult:DI (reg:DI 1 dx [orig:524 _438 ] [524])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":167 349 {*muldi3_1}
     (nil))
(insn 964 963 965 68 (set (reg:SI 1 dx [964])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALRCH.f":167 86 {*movsi_internal}
     (nil))
(insn 965 964 966 68 (parallel [
            (set (reg:SI 1 dx [orig:526 _440 ] [526])
                (plus:SI (reg:SI 1 dx [964])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":167 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 966 965 967 68 (set (reg:DI 1 dx [orig:527 _441 ] [527])
        (sign_extend:DI (reg:SI 1 dx [orig:526 _440 ] [526]))) "CALRCH.f":167 149 {*extendsidi2_rex64}
     (nil))
(insn 967 966 968 68 (parallel [
            (set (reg:DI 1 dx [orig:528 _442 ] [528])
                (mult:DI (reg:DI 1 dx [orig:527 _441 ] [527])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":167 349 {*muldi3_1}
     (nil))
(insn 968 967 969 68 (parallel [
            (set (reg:DI 2 cx [orig:529 _443 ] [529])
                (plus:DI (reg:DI 2 cx [orig:525 _439 ] [525])
                    (reg:DI 1 dx [orig:528 _442 ] [528])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":167 222 {*adddi_1}
     (nil))
(insn 969 968 970 68 (set (reg:SI 1 dx [965])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALRCH.f":167 86 {*movsi_internal}
     (nil))
(insn 970 969 971 68 (set (reg:DI 1 dx [orig:530 _444 ] [530])
        (sign_extend:DI (reg:SI 1 dx [965]))) "CALRCH.f":167 149 {*extendsidi2_rex64}
     (nil))
(insn 971 970 1397 68 (parallel [
            (set (reg:DI 1 dx [orig:531 _445 ] [531])
                (plus:DI (reg:DI 1 dx [orig:530 _444 ] [530])
                    (reg:DI 2 cx [orig:529 _443 ] [529])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":167 222 {*adddi_1}
     (nil))
(insn 1397 971 973 68 (set (reg:DI 2 cx [orig:532 _446 ] [532])
        (plus:DI (reg:DI 1 dx [orig:531 _445 ] [531])
            (const_int -29751 [0xffffffffffff8bc9]))) "CALRCH.f":167 218 {*leadi}
     (nil))
(insn 973 1397 974 68 (set (reg/f:DI 1 dx [966])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7fe96ef1b900 vrbls>)) "CALRCH.f":167 85 {*movdi_internal}
     (nil))
(insn 974 973 975 68 (parallel [
            (set (reg:DI 2 cx [967])
                (plus:DI (reg:DI 2 cx [orig:532 _446 ] [532])
                    (const_int 1214871 [0x128997])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":167 222 {*adddi_1}
     (nil))
(insn 975 974 976 68 (set (reg:SF 21 xmm0 [orig:533 _447 ] [533])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [967])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [966])) [2 vrbls.v S4 A32])) "CALRCH.f":167 131 {*movsf_internal}
     (nil))
(insn 976 975 978 68 (set (reg:SF 21 xmm0 [orig:534 _448 ] [534])
        (plus:SF (reg:SF 21 xmm0 [orig:533 _447 ] [533])
            (reg:SF 22 xmm1 [orig:523 _437 ] [523]))) "CALRCH.f":167 838 {*fop_sf_comm}
     (nil))
(insn 978 976 979 68 (set (reg:SF 21 xmm0 [968])
        (div:SF (reg:SF 21 xmm0 [orig:535 _449 ] [535])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -44 [0xffffffffffffffd4])) [2 wndsl+0 S4 A32]))) "CALRCH.f":167 841 {*fop_sf_1}
     (nil))
(insn 979 978 980 68 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [2 vhkl+0 S4 A32])
        (reg:SF 21 xmm0 [968])) "CALRCH.f":167 131 {*movsf_internal}
     (nil))
(insn 980 979 981 68 (set (reg:SI 1 dx [969])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALRCH.f":169 86 {*movsi_internal}
     (nil))
(insn 981 980 982 68 (parallel [
            (set (reg:SI 1 dx [orig:536 _450 ] [536])
                (plus:SI (reg:SI 1 dx [969])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":169 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 982 981 983 68 (set (reg:DI 1 dx [orig:537 _451 ] [537])
        (sign_extend:DI (reg:SI 1 dx [orig:536 _450 ] [536]))) "CALRCH.f":169 149 {*extendsidi2_rex64}
     (nil))
(insn 983 982 984 68 (parallel [
            (set (reg:DI 2 cx [orig:538 _452 ] [538])
                (mult:DI (reg:DI 1 dx [orig:537 _451 ] [537])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":169 349 {*muldi3_1}
     (nil))
(insn 984 983 985 68 (set (reg:SI 1 dx [970])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALRCH.f":169 86 {*movsi_internal}
     (nil))
(insn 985 984 986 68 (parallel [
            (set (reg:SI 1 dx [orig:539 _453 ] [539])
                (plus:SI (reg:SI 1 dx [970])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":169 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 986 985 987 68 (set (reg:DI 1 dx [orig:540 _454 ] [540])
        (sign_extend:DI (reg:SI 1 dx [orig:539 _453 ] [539]))) "CALRCH.f":169 149 {*extendsidi2_rex64}
     (nil))
(insn 987 986 988 68 (parallel [
            (set (reg:DI 1 dx [orig:541 _455 ] [541])
                (mult:DI (reg:DI 1 dx [orig:540 _454 ] [540])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":169 349 {*muldi3_1}
     (nil))
(insn 988 987 989 68 (parallel [
            (set (reg:DI 2 cx [orig:542 _456 ] [542])
                (plus:DI (reg:DI 2 cx [orig:538 _452 ] [538])
                    (reg:DI 1 dx [orig:541 _455 ] [541])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":169 222 {*adddi_1}
     (nil))
(insn 989 988 990 68 (set (reg:SI 1 dx [971])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALRCH.f":169 86 {*movsi_internal}
     (nil))
(insn 990 989 991 68 (set (reg:DI 1 dx [orig:543 _457 ] [543])
        (sign_extend:DI (reg:SI 1 dx [971]))) "CALRCH.f":169 149 {*extendsidi2_rex64}
     (nil))
(insn 991 990 1398 68 (parallel [
            (set (reg:DI 1 dx [orig:544 _458 ] [544])
                (plus:DI (reg:DI 1 dx [orig:543 _457 ] [543])
                    (reg:DI 2 cx [orig:542 _456 ] [542])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":169 222 {*adddi_1}
     (nil))
(insn 1398 991 993 68 (set (reg:DI 2 cx [orig:545 _459 ] [545])
        (plus:DI (reg:DI 1 dx [orig:544 _458 ] [544])
            (const_int -29751 [0xffffffffffff8bc9]))) "CALRCH.f":169 218 {*leadi}
     (nil))
(insn 993 1398 994 68 (set (reg/f:DI 1 dx [972])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7fe96ef1b900 vrbls>)) "CALRCH.f":169 85 {*movdi_internal}
     (nil))
(insn 994 993 995 68 (parallel [
            (set (reg:DI 2 cx [973])
                (plus:DI (reg:DI 2 cx [orig:545 _459 ] [545])
                    (const_int 1214871 [0x128997])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":169 222 {*adddi_1}
     (nil))
(insn 995 994 996 68 (set (reg:SF 22 xmm1 [orig:546 _460 ] [546])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [973])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [972])) [2 vrbls.v S4 A32])) "CALRCH.f":169 131 {*movsf_internal}
     (nil))
(insn 996 995 997 68 (set (reg:SI 1 dx [974])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALRCH.f":169 86 {*movsi_internal}
     (nil))
(insn 997 996 998 68 (parallel [
            (set (reg:SI 1 dx [orig:547 _461 ] [547])
                (plus:SI (reg:SI 1 dx [974])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":169 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 998 997 999 68 (set (reg:DI 1 dx [orig:548 _462 ] [548])
        (sign_extend:DI (reg:SI 1 dx [orig:547 _461 ] [547]))) "CALRCH.f":169 149 {*extendsidi2_rex64}
     (nil))
(insn 999 998 1000 68 (parallel [
            (set (reg:DI 2 cx [orig:549 _463 ] [549])
                (mult:DI (reg:DI 1 dx [orig:548 _462 ] [548])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":169 349 {*muldi3_1}
     (nil))
(insn 1000 999 1001 68 (set (reg:SI 1 dx [975])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALRCH.f":169 86 {*movsi_internal}
     (nil))
(insn 1001 1000 1002 68 (set (reg:DI 1 dx [orig:550 _464 ] [550])
        (sign_extend:DI (reg:SI 1 dx [975]))) "CALRCH.f":169 149 {*extendsidi2_rex64}
     (nil))
(insn 1002 1001 1003 68 (parallel [
            (set (reg:DI 1 dx [orig:551 _465 ] [551])
                (mult:DI (reg:DI 1 dx [orig:550 _464 ] [550])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":169 349 {*muldi3_1}
     (nil))
(insn 1003 1002 1004 68 (parallel [
            (set (reg:DI 2 cx [orig:552 _466 ] [552])
                (plus:DI (reg:DI 2 cx [orig:549 _463 ] [549])
                    (reg:DI 1 dx [orig:551 _465 ] [551])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":169 222 {*adddi_1}
     (nil))
(insn 1004 1003 1005 68 (set (reg:SI 1 dx [976])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 iw+0 S4 A32])) "CALRCH.f":169 86 {*movsi_internal}
     (nil))
(insn 1005 1004 1006 68 (set (reg:DI 1 dx [orig:553 _467 ] [553])
        (sign_extend:DI (reg:SI 1 dx [976]))) "CALRCH.f":169 149 {*extendsidi2_rex64}
     (nil))
(insn 1006 1005 1399 68 (parallel [
            (set (reg:DI 1 dx [orig:554 _468 ] [554])
                (plus:DI (reg:DI 1 dx [orig:553 _467 ] [553])
                    (reg:DI 2 cx [orig:552 _466 ] [552])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":169 222 {*adddi_1}
     (nil))
(insn 1399 1006 1008 68 (set (reg:DI 2 cx [orig:555 _469 ] [555])
        (plus:DI (reg:DI 1 dx [orig:554 _468 ] [554])
            (const_int -29751 [0xffffffffffff8bc9]))) "CALRCH.f":169 218 {*leadi}
     (nil))
(insn 1008 1399 1009 68 (set (reg/f:DI 1 dx [977])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7fe96ef1b900 vrbls>)) "CALRCH.f":169 85 {*movdi_internal}
     (nil))
(insn 1009 1008 1010 68 (parallel [
            (set (reg:DI 2 cx [978])
                (plus:DI (reg:DI 2 cx [orig:555 _469 ] [555])
                    (const_int 1214871 [0x128997])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":169 222 {*adddi_1}
     (nil))
(insn 1010 1009 1011 68 (set (reg:SF 21 xmm0 [orig:556 _470 ] [556])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [978])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [977])) [2 vrbls.v S4 A32])) "CALRCH.f":169 131 {*movsf_internal}
     (nil))
(insn 1011 1010 1012 68 (set (reg:SF 22 xmm1 [orig:557 _471 ] [557])
        (plus:SF (reg:SF 22 xmm1 [orig:546 _460 ] [546])
            (reg:SF 21 xmm0 [orig:556 _470 ] [556]))) "CALRCH.f":169 838 {*fop_sf_comm}
     (nil))
(insn 1012 1011 1013 68 (set (reg:SI 1 dx [979])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALRCH.f":169 86 {*movsi_internal}
     (nil))
(insn 1013 1012 1014 68 (parallel [
            (set (reg:SI 1 dx [orig:558 _472 ] [558])
                (plus:SI (reg:SI 1 dx [979])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":169 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 1014 1013 1015 68 (set (reg:DI 1 dx [orig:559 _473 ] [559])
        (sign_extend:DI (reg:SI 1 dx [orig:558 _472 ] [558]))) "CALRCH.f":169 149 {*extendsidi2_rex64}
     (nil))
(insn 1015 1014 1016 68 (parallel [
            (set (reg:DI 2 cx [orig:560 _474 ] [560])
                (mult:DI (reg:DI 1 dx [orig:559 _473 ] [559])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":169 349 {*muldi3_1}
     (nil))
(insn 1016 1015 1017 68 (set (reg:SI 1 dx [980])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALRCH.f":169 86 {*movsi_internal}
     (nil))
(insn 1017 1016 1018 68 (set (reg:DI 1 dx [orig:561 _475 ] [561])
        (sign_extend:DI (reg:SI 1 dx [980]))) "CALRCH.f":169 149 {*extendsidi2_rex64}
     (nil))
(insn 1018 1017 1019 68 (parallel [
            (set (reg:DI 1 dx [orig:562 _476 ] [562])
                (mult:DI (reg:DI 1 dx [orig:561 _475 ] [561])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":169 349 {*muldi3_1}
     (nil))
(insn 1019 1018 1020 68 (parallel [
            (set (reg:DI 2 cx [orig:563 _477 ] [563])
                (plus:DI (reg:DI 2 cx [orig:560 _474 ] [560])
                    (reg:DI 1 dx [orig:562 _476 ] [562])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":169 222 {*adddi_1}
     (nil))
(insn 1020 1019 1021 68 (set (reg:SI 1 dx [981])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 ie+0 S4 A32])) "CALRCH.f":169 86 {*movsi_internal}
     (nil))
(insn 1021 1020 1022 68 (set (reg:DI 1 dx [orig:564 _478 ] [564])
        (sign_extend:DI (reg:SI 1 dx [981]))) "CALRCH.f":169 149 {*extendsidi2_rex64}
     (nil))
(insn 1022 1021 1400 68 (parallel [
            (set (reg:DI 1 dx [orig:565 _479 ] [565])
                (plus:DI (reg:DI 1 dx [orig:564 _478 ] [564])
                    (reg:DI 2 cx [orig:563 _477 ] [563])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":169 222 {*adddi_1}
     (nil))
(insn 1400 1022 1024 68 (set (reg:DI 2 cx [orig:566 _480 ] [566])
        (plus:DI (reg:DI 1 dx [orig:565 _479 ] [565])
            (const_int -29751 [0xffffffffffff8bc9]))) "CALRCH.f":169 218 {*leadi}
     (nil))
(insn 1024 1400 1025 68 (set (reg/f:DI 1 dx [982])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7fe96ef1b900 vrbls>)) "CALRCH.f":169 85 {*movdi_internal}
     (nil))
(insn 1025 1024 1026 68 (parallel [
            (set (reg:DI 2 cx [983])
                (plus:DI (reg:DI 2 cx [orig:566 _480 ] [566])
                    (const_int 1214871 [0x128997])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":169 222 {*adddi_1}
     (nil))
(insn 1026 1025 1027 68 (set (reg:SF 21 xmm0 [orig:567 _481 ] [567])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [983])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [982])) [2 vrbls.v S4 A32])) "CALRCH.f":169 131 {*movsf_internal}
     (nil))
(insn 1027 1026 1028 68 (set (reg:SF 22 xmm1 [orig:568 _482 ] [568])
        (plus:SF (reg:SF 22 xmm1 [orig:557 _471 ] [557])
            (reg:SF 21 xmm0 [orig:567 _481 ] [567]))) "CALRCH.f":169 838 {*fop_sf_comm}
     (nil))
(insn 1028 1027 1029 68 (set (reg:SI 1 dx [984])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALRCH.f":169 86 {*movsi_internal}
     (nil))
(insn 1029 1028 1030 68 (parallel [
            (set (reg:SI 1 dx [orig:569 _483 ] [569])
                (plus:SI (reg:SI 1 dx [984])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":169 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 1030 1029 1031 68 (set (reg:DI 1 dx [orig:570 _484 ] [570])
        (sign_extend:DI (reg:SI 1 dx [orig:569 _483 ] [569]))) "CALRCH.f":169 149 {*extendsidi2_rex64}
     (nil))
(insn 1031 1030 1032 68 (parallel [
            (set (reg:DI 2 cx [orig:571 _485 ] [571])
                (mult:DI (reg:DI 1 dx [orig:570 _484 ] [570])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":169 349 {*muldi3_1}
     (nil))
(insn 1032 1031 1033 68 (set (reg:SI 1 dx [985])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALRCH.f":169 86 {*movsi_internal}
     (nil))
(insn 1033 1032 1034 68 (parallel [
            (set (reg:SI 1 dx [orig:572 _486 ] [572])
                (plus:SI (reg:SI 1 dx [985])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":169 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 1034 1033 1035 68 (set (reg:DI 1 dx [orig:573 _487 ] [573])
        (sign_extend:DI (reg:SI 1 dx [orig:572 _486 ] [572]))) "CALRCH.f":169 149 {*extendsidi2_rex64}
     (nil))
(insn 1035 1034 1036 68 (parallel [
            (set (reg:DI 1 dx [orig:574 _488 ] [574])
                (mult:DI (reg:DI 1 dx [orig:573 _487 ] [573])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":169 349 {*muldi3_1}
     (nil))
(insn 1036 1035 1037 68 (parallel [
            (set (reg:DI 2 cx [orig:575 _489 ] [575])
                (plus:DI (reg:DI 2 cx [orig:571 _485 ] [571])
                    (reg:DI 1 dx [orig:574 _488 ] [574])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":169 222 {*adddi_1}
     (nil))
(insn 1037 1036 1038 68 (set (reg:SI 1 dx [986])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALRCH.f":169 86 {*movsi_internal}
     (nil))
(insn 1038 1037 1039 68 (set (reg:DI 1 dx [orig:576 _490 ] [576])
        (sign_extend:DI (reg:SI 1 dx [986]))) "CALRCH.f":169 149 {*extendsidi2_rex64}
     (nil))
(insn 1039 1038 1401 68 (parallel [
            (set (reg:DI 1 dx [orig:577 _491 ] [577])
                (plus:DI (reg:DI 1 dx [orig:576 _490 ] [576])
                    (reg:DI 2 cx [orig:575 _489 ] [575])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":169 222 {*adddi_1}
     (nil))
(insn 1401 1039 1041 68 (set (reg:DI 2 cx [orig:578 _492 ] [578])
        (plus:DI (reg:DI 1 dx [orig:577 _491 ] [577])
            (const_int -29751 [0xffffffffffff8bc9]))) "CALRCH.f":169 218 {*leadi}
     (nil))
(insn 1041 1401 1042 68 (set (reg/f:DI 1 dx [987])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7fe96ef1b900 vrbls>)) "CALRCH.f":169 85 {*movdi_internal}
     (nil))
(insn 1042 1041 1043 68 (parallel [
            (set (reg:DI 2 cx [988])
                (plus:DI (reg:DI 2 cx [orig:578 _492 ] [578])
                    (const_int 1214871 [0x128997])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":169 222 {*adddi_1}
     (nil))
(insn 1043 1042 1044 68 (set (reg:SF 21 xmm0 [orig:579 _493 ] [579])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [988])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [987])) [2 vrbls.v S4 A32])) "CALRCH.f":169 131 {*movsf_internal}
     (nil))
(insn 1044 1043 1046 68 (set (reg:SF 21 xmm0 [orig:580 _494 ] [580])
        (plus:SF (reg:SF 21 xmm0 [orig:579 _493 ] [579])
            (reg:SF 22 xmm1 [orig:568 _482 ] [568]))) "CALRCH.f":169 838 {*fop_sf_comm}
     (nil))
(insn 1046 1044 1047 68 (set (reg:SF 21 xmm0 [989])
        (div:SF (reg:SF 21 xmm0 [orig:581 _495 ] [581])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -48 [0xffffffffffffffd0])) [2 wndslp+0 S4 A32]))) "CALRCH.f":169 841 {*fop_sf_1}
     (nil))
(insn 1047 1046 1048 68 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [2 vlkl+0 S4 A32])
        (reg:SF 21 xmm0 [989])) "CALRCH.f":169 131 {*movsf_internal}
     (nil))
(insn 1048 1047 1049 68 (set (reg:SI 1 dx [990])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALRCH.f":170 86 {*movsi_internal}
     (nil))
(insn 1049 1048 1050 68 (set (reg:DI 1 dx [orig:582 _496 ] [582])
        (sign_extend:DI (reg:SI 1 dx [990]))) "CALRCH.f":170 149 {*extendsidi2_rex64}
     (nil))
(insn 1050 1049 1051 68 (parallel [
            (set (reg:DI 2 cx [orig:583 _497 ] [583])
                (mult:DI (reg:DI 1 dx [orig:582 _496 ] [582])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":170 349 {*muldi3_1}
     (nil))
(insn 1051 1050 1052 68 (set (reg:SI 1 dx [991])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALRCH.f":170 86 {*movsi_internal}
     (nil))
(insn 1052 1051 1053 68 (set (reg:DI 1 dx [orig:584 _498 ] [584])
        (sign_extend:DI (reg:SI 1 dx [991]))) "CALRCH.f":170 149 {*extendsidi2_rex64}
     (nil))
(insn 1053 1052 1054 68 (parallel [
            (set (reg:DI 1 dx [orig:585 _499 ] [585])
                (mult:DI (reg:DI 1 dx [orig:584 _498 ] [584])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":170 349 {*muldi3_1}
     (nil))
(insn 1054 1053 1055 68 (parallel [
            (set (reg:DI 2 cx [orig:586 _500 ] [586])
                (plus:DI (reg:DI 2 cx [orig:583 _497 ] [583])
                    (reg:DI 1 dx [orig:585 _499 ] [585])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":170 222 {*adddi_1}
     (nil))
(insn 1055 1054 1056 68 (set (reg:SI 1 dx [992])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALRCH.f":170 86 {*movsi_internal}
     (nil))
(insn 1056 1055 1057 68 (set (reg:DI 1 dx [orig:587 _501 ] [587])
        (sign_extend:DI (reg:SI 1 dx [992]))) "CALRCH.f":170 149 {*extendsidi2_rex64}
     (nil))
(insn 1057 1056 1402 68 (parallel [
            (set (reg:DI 1 dx [orig:588 _502 ] [588])
                (plus:DI (reg:DI 1 dx [orig:587 _501 ] [587])
                    (reg:DI 2 cx [orig:586 _500 ] [586])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":170 222 {*adddi_1}
     (nil))
(insn 1402 1057 1059 68 (set (reg:DI 2 cx [orig:589 _503 ] [589])
        (plus:DI (reg:DI 1 dx [orig:588 _502 ] [588])
            (const_int -29751 [0xffffffffffff8bc9]))) "CALRCH.f":170 218 {*leadi}
     (nil))
(insn 1059 1402 1060 68 (set (reg/f:DI 1 dx [993])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7fe96eef8870 extra>)) "CALRCH.f":170 85 {*movdi_internal}
     (nil))
(insn 1060 1059 1061 68 (parallel [
            (set (reg:DI 2 cx [994])
                (plus:DI (reg:DI 2 cx [orig:589 _503 ] [589])
                    (const_int 2311218 [0x234432])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":170 222 {*adddi_1}
     (nil))
(insn 1061 1060 1062 68 (set (reg:SF 21 xmm0 [orig:590 _504 ] [590])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [994])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [993])) [2 extra.zint S4 A32])) "CALRCH.f":170 131 {*movsf_internal}
     (nil))
(insn 1062 1061 1063 68 (set (reg:SI 1 dx [995])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALRCH.f":170 86 {*movsi_internal}
     (nil))
(insn 1063 1062 1064 68 (parallel [
            (set (reg:SI 1 dx [orig:591 _505 ] [591])
                (plus:SI (reg:SI 1 dx [995])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":170 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
            (const_int 2 [0x2]))
        (nil)))
(insn 1064 1063 1065 68 (set (reg:DI 1 dx [orig:592 _506 ] [592])
        (sign_extend:DI (reg:SI 1 dx [orig:591 _505 ] [591]))) "CALRCH.f":170 149 {*extendsidi2_rex64}
     (nil))
(insn 1065 1064 1066 68 (parallel [
            (set (reg:DI 2 cx [orig:593 _507 ] [593])
                (mult:DI (reg:DI 1 dx [orig:592 _506 ] [592])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":170 349 {*muldi3_1}
     (nil))
(insn 1066 1065 1067 68 (set (reg:SI 1 dx [996])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALRCH.f":170 86 {*movsi_internal}
     (nil))
(insn 1067 1066 1068 68 (set (reg:DI 1 dx [orig:594 _508 ] [594])
        (sign_extend:DI (reg:SI 1 dx [996]))) "CALRCH.f":170 149 {*extendsidi2_rex64}
     (nil))
(insn 1068 1067 1069 68 (parallel [
            (set (reg:DI 1 dx [orig:595 _509 ] [595])
                (mult:DI (reg:DI 1 dx [orig:594 _508 ] [594])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":170 349 {*muldi3_1}
     (nil))
(insn 1069 1068 1070 68 (parallel [
            (set (reg:DI 2 cx [orig:596 _510 ] [596])
                (plus:DI (reg:DI 2 cx [orig:593 _507 ] [593])
                    (reg:DI 1 dx [orig:595 _509 ] [595])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":170 222 {*adddi_1}
     (nil))
(insn 1070 1069 1071 68 (set (reg:SI 1 dx [997])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALRCH.f":170 86 {*movsi_internal}
     (nil))
(insn 1071 1070 1072 68 (set (reg:DI 1 dx [orig:597 _511 ] [597])
        (sign_extend:DI (reg:SI 1 dx [997]))) "CALRCH.f":170 149 {*extendsidi2_rex64}
     (nil))
(insn 1072 1071 1403 68 (parallel [
            (set (reg:DI 1 dx [orig:598 _512 ] [598])
                (plus:DI (reg:DI 1 dx [orig:597 _511 ] [597])
                    (reg:DI 2 cx [orig:596 _510 ] [596])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":170 222 {*adddi_1}
     (nil))
(insn 1403 1072 1074 68 (set (reg:DI 2 cx [orig:599 _513 ] [599])
        (plus:DI (reg:DI 1 dx [orig:598 _512 ] [598])
            (const_int -29751 [0xffffffffffff8bc9]))) "CALRCH.f":170 218 {*leadi}
     (nil))
(insn 1074 1403 1075 68 (set (reg/f:DI 1 dx [998])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7fe96eef8870 extra>)) "CALRCH.f":170 85 {*movdi_internal}
     (nil))
(insn 1075 1074 1076 68 (parallel [
            (set (reg:DI 2 cx [999])
                (plus:DI (reg:DI 2 cx [orig:599 _513 ] [599])
                    (const_int 2311218 [0x234432])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":170 222 {*adddi_1}
     (nil))
(insn 1076 1075 1077 68 (set (reg:SF 22 xmm1 [orig:600 _514 ] [600])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [999])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [998])) [2 extra.zint S4 A32])) "CALRCH.f":170 131 {*movsf_internal}
     (nil))
(insn 1077 1076 1078 68 (set (reg:SF 21 xmm0 [orig:601 _515 ] [601])
        (minus:SF (reg:SF 21 xmm0 [orig:590 _504 ] [590])
            (reg:SF 22 xmm1 [orig:600 _514 ] [600]))) "CALRCH.f":170 841 {*fop_sf_1}
     (nil))
(insn 1078 1077 1079 68 (set (reg:SF 22 xmm1 [orig:602 _516 ] [602])
        (reg:SF 21 xmm0 [orig:601 _515 ] [601])) "CALRCH.f":170 131 {*movsf_internal}
     (nil))
(insn 1079 1078 1080 68 (set (reg:SF 21 xmm0 [1001])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC7") [flags 0x2]) [0  S4 A32])) "CALRCH.f":170 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 5.0e-1 [0x0.8p+0])
        (nil)))
(insn 1080 1079 1081 68 (set (reg:SF 21 xmm0 [1000])
        (mult:SF (reg:SF 21 xmm0 [1001])
            (reg:SF 22 xmm1 [orig:602 _516 ] [602]))) "CALRCH.f":170 838 {*fop_sf_comm}
     (nil))
(insn 1081 1080 1082 68 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -68 [0xffffffffffffffbc])) [2 dzkl+0 S4 A32])
        (reg:SF 21 xmm0 [1000])) "CALRCH.f":170 131 {*movsf_internal}
     (nil))
(insn 1082 1081 1083 68 (set (reg:SF 21 xmm0 [1003])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC4") [flags 0x2]) [0  S4 A32])) "CALRCH.f":171 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 1083 1082 1084 68 (set (reg:SF 21 xmm0 [1002])
        (div:SF (reg:SF 21 xmm0 [1003])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -68 [0xffffffffffffffbc])) [2 dzkl+0 S4 A32]))) "CALRCH.f":171 841 {*fop_sf_1}
     (nil))
(insn 1084 1083 1085 68 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [2 rdzkl+0 S4 A32])
        (reg:SF 21 xmm0 [1002])) "CALRCH.f":171 131 {*movsf_internal}
     (nil))
(insn 1085 1084 1086 68 (set (reg:SI 1 dx [1004])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALRCH.f":172 86 {*movsi_internal}
     (nil))
(insn 1086 1085 1087 68 (set (reg:DI 1 dx [orig:603 _517 ] [603])
        (sign_extend:DI (reg:SI 1 dx [1004]))) "CALRCH.f":172 149 {*extendsidi2_rex64}
     (nil))
(insn 1087 1086 1088 68 (parallel [
            (set (reg:DI 2 cx [orig:604 _518 ] [604])
                (mult:DI (reg:DI 1 dx [orig:603 _517 ] [603])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":172 349 {*muldi3_1}
     (nil))
(insn 1088 1087 1089 68 (set (reg:SI 1 dx [1005])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALRCH.f":172 86 {*movsi_internal}
     (nil))
(insn 1089 1088 1090 68 (set (reg:DI 1 dx [orig:605 _519 ] [605])
        (sign_extend:DI (reg:SI 1 dx [1005]))) "CALRCH.f":172 149 {*extendsidi2_rex64}
     (nil))
(insn 1090 1089 1091 68 (parallel [
            (set (reg:DI 1 dx [orig:606 _520 ] [606])
                (mult:DI (reg:DI 1 dx [orig:605 _519 ] [605])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":172 349 {*muldi3_1}
     (nil))
(insn 1091 1090 1092 68 (parallel [
            (set (reg:DI 2 cx [orig:607 _521 ] [607])
                (plus:DI (reg:DI 2 cx [orig:604 _518 ] [604])
                    (reg:DI 1 dx [orig:606 _520 ] [606])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":172 222 {*adddi_1}
     (nil))
(insn 1092 1091 1093 68 (set (reg:SI 1 dx [1006])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALRCH.f":172 86 {*movsi_internal}
     (nil))
(insn 1093 1092 1094 68 (set (reg:DI 1 dx [orig:608 _522 ] [608])
        (sign_extend:DI (reg:SI 1 dx [1006]))) "CALRCH.f":172 149 {*extendsidi2_rex64}
     (nil))
(insn 1094 1093 1404 68 (parallel [
            (set (reg:DI 1 dx [orig:609 _523 ] [609])
                (plus:DI (reg:DI 1 dx [orig:608 _522 ] [608])
                    (reg:DI 2 cx [orig:607 _521 ] [607])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":172 222 {*adddi_1}
     (nil))
(insn 1404 1094 1096 68 (set (reg:DI 2 cx [orig:610 _524 ] [610])
        (plus:DI (reg:DI 1 dx [orig:609 _523 ] [609])
            (const_int -29751 [0xffffffffffff8bc9]))) "CALRCH.f":172 218 {*leadi}
     (nil))
(insn 1096 1404 1097 68 (set (reg/f:DI 1 dx [1007])
        (symbol_ref:DI ("pvrbls_") [flags 0x202]  <var_decl 0x7fe96ef14cf0 pvrbls>)) "CALRCH.f":172 85 {*movdi_internal}
     (nil))
(insn 1097 1096 1098 68 (parallel [
            (set (reg:DI 2 cx [1008])
                (plus:DI (reg:DI 2 cx [orig:610 _524 ] [610])
                    (const_int 562989 [0x8972d])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":172 222 {*adddi_1}
     (nil))
(insn 1098 1097 1099 68 (set (reg:SF 21 xmm0 [orig:671 M.0_602 ] [671])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [1008])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1007])) [2 pvrbls.q2 S4 A32])) "CALRCH.f":172 131 {*movsf_internal}
     (nil))
(insn 1099 1098 1100 68 (set (reg:SF 22 xmm1 [1011])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC8") [flags 0x2]) [0  S4 A32])) "CALRCH.f":172 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 9.99999974737875163555145263671875e-6 [0x0.a7c5acp-16])
        (nil)))
(insn 1100 1099 1101 68 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 22 xmm1 [1011])
            (reg:SF 21 xmm0 [orig:671 M.0_602 ] [671]))) "CALRCH.f":172 53 {*cmpisf}
     (nil))
(insn 1101 1100 1102 68 (set (reg:QI 1 dx [1010])
        (gt:QI (reg:CCFP 17 flags)
            (const_int 0 [0]))) "CALRCH.f":172 678 {*setcc_qi}
     (nil))
(insn 1102 1101 1103 68 (set (reg:SI 2 cx [orig:611 _525 ] [611])
        (zero_extend:SI (reg:QI 1 dx [1010]))) "CALRCH.f":172 140 {*zero_extendqisi2}
     (nil))
(insn 1103 1102 1104 68 (set (reg:CCFP 17 flags)
        (unspec:CCFP [
                (compare:CCFP (reg:SF 21 xmm0 [orig:671 M.0_602 ] [671])
                    (reg:SF 21 xmm0 [orig:671 M.0_602 ] [671]))
            ] UNSPEC_NOTRAP)) "CALRCH.f":172 54 {*cmpiusf}
     (nil))
(insn 1104 1103 1105 68 (set (reg:QI 1 dx [1012])
        (unordered:QI (reg:CCFP 17 flags)
            (const_int 0 [0]))) "CALRCH.f":172 678 {*setcc_qi}
     (nil))
(insn 1105 1104 1106 68 (set (reg:SI 1 dx [orig:612 _526 ] [612])
        (zero_extend:SI (reg:QI 1 dx [1012]))) "CALRCH.f":172 140 {*zero_extendqisi2}
     (nil))
(insn 1106 1105 1107 68 (parallel [
            (set (reg:SI 1 dx [orig:613 _527 ] [613])
                (ior:SI (reg:SI 1 dx [orig:612 _526 ] [612])
                    (reg:SI 2 cx [orig:611 _525 ] [611])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":172 450 {*iorsi_1}
     (nil))
(insn 1107 1106 1108 68 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:613 _527 ] [613])
            (const_int 0 [0]))) "CALRCH.f":172 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1108 1107 1109 68 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1111)
            (pc))) "CALRCH.f":172 682 {*jcc}
     (nil)
 -> 1111)
;;  succ:       69 (FALLTHRU)
;;              70
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0]

;; basic block 69, loop depth 0, maybe hot
;;  prev block 68, next block 70, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       68 (FALLTHRU)
;; bb 69 artificial_defs: { }
;; bb 69 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 21 [xmm0]
(note 1109 1108 1110 69 [bb 69] NOTE_INSN_BASIC_BLOCK)
(insn 1110 1109 1111 69 (set (reg:SF 21 xmm0 [orig:671 M.0_602 ] [671])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC8") [flags 0x2]) [0  S4 A32])) "CALRCH.f":172 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 9.99999974737875163555145263671875e-6 [0x0.a7c5acp-16])
        (nil)))
;;  succ:       70 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0]

;; basic block 70, loop depth 0, maybe hot
;;  prev block 69, next block 71, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       68
;;              69 (FALLTHRU)
;; bb 70 artificial_defs: { }
;; bb 70 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0]
;; lr  use 	 6 [bp] 7 [sp] 21 [xmm0]
;; lr  def 	 1 [dx] 2 [cx] 17 [flags] 21 [xmm0] 22 [xmm1]
(code_label 1111 1110 1112 70 36 (nil) [1 uses])
(note 1112 1111 1113 70 [bb 70] NOTE_INSN_BASIC_BLOCK)
(insn 1113 1112 1114 70 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -76 [0xffffffffffffffb4])) [2 q2kl+0 S4 A32])
        (reg:SF 21 xmm0 [orig:671 M.0_602 ] [671])) "CALRCH.f":172 131 {*movsf_internal}
     (nil))
(insn 1114 1113 1115 70 (set (reg:SF 21 xmm0 [1013])
        (sqrt:SF (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -76 [0xffffffffffffffb4])) [2 q2kl+0 S4 A32]))) "CALRCH.f":173 872 {*sqrtsf2_sse}
     (nil))
(insn 1115 1114 1116 70 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -80 [0xffffffffffffffb0])) [2 qroot+0 S4 A32])
        (reg:SF 21 xmm0 [1013])) "CALRCH.f":173 131 {*movsf_internal}
     (nil))
(insn 1116 1115 1117 70 (set (reg:SI 1 dx [1014])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALRCH.f":174 86 {*movsi_internal}
     (nil))
(insn 1117 1116 1118 70 (set (reg:DI 1 dx [orig:614 _528 ] [614])
        (sign_extend:DI (reg:SI 1 dx [1014]))) "CALRCH.f":174 149 {*extendsidi2_rex64}
     (nil))
(insn 1118 1117 1119 70 (parallel [
            (set (reg:DI 2 cx [orig:615 _529 ] [615])
                (mult:DI (reg:DI 1 dx [orig:614 _528 ] [614])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":174 349 {*muldi3_1}
     (nil))
(insn 1119 1118 1120 70 (set (reg:SI 1 dx [1015])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALRCH.f":174 86 {*movsi_internal}
     (nil))
(insn 1120 1119 1121 70 (set (reg:DI 1 dx [orig:616 _530 ] [616])
        (sign_extend:DI (reg:SI 1 dx [1015]))) "CALRCH.f":174 149 {*extendsidi2_rex64}
     (nil))
(insn 1121 1120 1122 70 (parallel [
            (set (reg:DI 1 dx [orig:617 _531 ] [617])
                (mult:DI (reg:DI 1 dx [orig:616 _530 ] [616])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":174 349 {*muldi3_1}
     (nil))
(insn 1122 1121 1123 70 (parallel [
            (set (reg:DI 2 cx [orig:618 _532 ] [618])
                (plus:DI (reg:DI 2 cx [orig:615 _529 ] [615])
                    (reg:DI 1 dx [orig:617 _531 ] [617])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":174 222 {*adddi_1}
     (nil))
(insn 1123 1122 1124 70 (set (reg:SI 1 dx [1016])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALRCH.f":174 86 {*movsi_internal}
     (nil))
(insn 1124 1123 1125 70 (set (reg:DI 1 dx [orig:619 _533 ] [619])
        (sign_extend:DI (reg:SI 1 dx [1016]))) "CALRCH.f":174 149 {*extendsidi2_rex64}
     (nil))
(insn 1125 1124 1385 70 (parallel [
            (set (reg:DI 1 dx [orig:620 _534 ] [620])
                (plus:DI (reg:DI 1 dx [orig:619 _533 ] [619])
                    (reg:DI 2 cx [orig:618 _532 ] [618])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":174 222 {*adddi_1}
     (nil))
(insn 1385 1125 1127 70 (set (reg:DI 2 cx [orig:621 _535 ] [621])
        (plus:DI (reg:DI 1 dx [orig:620 _534 ] [620])
            (const_int -29751 [0xffffffffffff8bc9]))) "CALRCH.f":174 218 {*leadi}
     (nil))
(insn 1127 1385 1128 70 (set (reg/f:DI 1 dx [1017])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [3 el+0 S8 A64])) "CALRCH.f":174 85 {*movdi_internal}
     (nil))
(insn 1128 1127 1129 70 (set (reg:SF 21 xmm0 [1018])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:621 _535 ] [621])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1017])) [2 *el_715(D) S4 A32])) "CALRCH.f":174 131 {*movsf_internal}
     (nil))
(insn 1129 1128 1130 70 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -84 [0xffffffffffffffac])) [2 elkl+0 S4 A32])
        (reg:SF 21 xmm0 [1018])) "CALRCH.f":174 131 {*movsf_internal}
     (nil))
(insn 1130 1129 1131 70 (set (reg:SF 21 xmm0 [orig:672 M.1_603 ] [672])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -84 [0xffffffffffffffac])) [2 elkl+0 S4 A32])) "CALRCH.f":175 131 {*movsf_internal}
     (nil))
(insn 1131 1130 1132 70 (set (reg:SF 22 xmm1 [1021])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC9") [flags 0x2]) [0  S4 A32])) "CALRCH.f":175 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 2.0000000298023223876953125e-1 [0x0.cccccdp-2])
        (nil)))
(insn 1132 1131 1133 70 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 22 xmm1 [1021])
            (reg:SF 21 xmm0 [orig:672 M.1_603 ] [672]))) "CALRCH.f":175 53 {*cmpisf}
     (nil))
(insn 1133 1132 1134 70 (set (reg:QI 1 dx [1020])
        (gt:QI (reg:CCFP 17 flags)
            (const_int 0 [0]))) "CALRCH.f":175 678 {*setcc_qi}
     (nil))
(insn 1134 1133 1135 70 (set (reg:SI 2 cx [orig:622 _536 ] [622])
        (zero_extend:SI (reg:QI 1 dx [1020]))) "CALRCH.f":175 140 {*zero_extendqisi2}
     (nil))
(insn 1135 1134 1136 70 (set (reg:CCFP 17 flags)
        (unspec:CCFP [
                (compare:CCFP (reg:SF 21 xmm0 [orig:672 M.1_603 ] [672])
                    (reg:SF 21 xmm0 [orig:672 M.1_603 ] [672]))
            ] UNSPEC_NOTRAP)) "CALRCH.f":175 54 {*cmpiusf}
     (nil))
(insn 1136 1135 1137 70 (set (reg:QI 1 dx [1022])
        (unordered:QI (reg:CCFP 17 flags)
            (const_int 0 [0]))) "CALRCH.f":175 678 {*setcc_qi}
     (nil))
(insn 1137 1136 1138 70 (set (reg:SI 1 dx [orig:623 _537 ] [623])
        (zero_extend:SI (reg:QI 1 dx [1022]))) "CALRCH.f":175 140 {*zero_extendqisi2}
     (nil))
(insn 1138 1137 1139 70 (parallel [
            (set (reg:SI 1 dx [orig:624 _538 ] [624])
                (ior:SI (reg:SI 1 dx [orig:623 _537 ] [623])
                    (reg:SI 2 cx [orig:622 _536 ] [622])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":175 450 {*iorsi_1}
     (nil))
(insn 1139 1138 1140 70 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:624 _538 ] [624])
            (const_int 0 [0]))) "CALRCH.f":175 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1140 1139 1141 70 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1143)
            (pc))) "CALRCH.f":175 682 {*jcc}
     (nil)
 -> 1143)
;;  succ:       71 (FALLTHRU)
;;              72
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0]

;; basic block 71, loop depth 0, maybe hot
;;  prev block 70, next block 72, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       70 (FALLTHRU)
;; bb 71 artificial_defs: { }
;; bb 71 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 21 [xmm0]
(note 1141 1140 1142 71 [bb 71] NOTE_INSN_BASIC_BLOCK)
(insn 1142 1141 1143 71 (set (reg:SF 21 xmm0 [orig:672 M.1_603 ] [672])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC9") [flags 0x2]) [0  S4 A32])) "CALRCH.f":175 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 2.0000000298023223876953125e-1 [0x0.cccccdp-2])
        (nil)))
;;  succ:       72 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0]

;; basic block 72, loop depth 0, maybe hot
;;  prev block 71, next block 73, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       70
;;              71 (FALLTHRU)
;; bb 72 artificial_defs: { }
;; bb 72 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0]
;; lr  use 	 6 [bp] 7 [sp] 21 [xmm0]
;; lr  def 	 1 [dx] 2 [cx] 17 [flags] 21 [xmm0] 22 [xmm1]
(code_label 1143 1142 1144 72 37 (nil) [1 uses])
(note 1144 1143 1145 72 [bb 72] NOTE_INSN_BASIC_BLOCK)
(insn 1145 1144 1146 72 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -84 [0xffffffffffffffac])) [2 elkl+0 S4 A32])
        (reg:SF 21 xmm0 [orig:672 M.1_603 ] [672])) "CALRCH.f":175 131 {*movsf_internal}
     (nil))
(insn 1146 1145 1147 72 (set (reg:SF 21 xmm0 [1024])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -84 [0xffffffffffffffac])) [2 elkl+0 S4 A32])) "CALRCH.f":176 131 {*movsf_internal}
     (nil))
(insn 1147 1146 1148 72 (set (reg:SF 21 xmm0 [1023])
        (mult:SF (reg:SF 21 xmm0 [1024])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -84 [0xffffffffffffffac])) [2 elkl+0 S4 A32]))) "CALRCH.f":176 838 {*fop_sf_comm}
     (nil))
(insn 1148 1147 1149 72 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [2 elklsq+0 S4 A32])
        (reg:SF 21 xmm0 [1023])) "CALRCH.f":176 131 {*movsf_internal}
     (nil))
(insn 1149 1148 1150 72 (set (reg:SI 1 dx [1025])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALRCH.f":177 86 {*movsi_internal}
     (nil))
(insn 1150 1149 1151 72 (set (reg:DI 1 dx [orig:625 _539 ] [625])
        (sign_extend:DI (reg:SI 1 dx [1025]))) "CALRCH.f":177 149 {*extendsidi2_rex64}
     (nil))
(insn 1151 1150 1152 72 (parallel [
            (set (reg:DI 2 cx [orig:626 _540 ] [626])
                (mult:DI (reg:DI 1 dx [orig:625 _539 ] [625])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":177 349 {*muldi3_1}
     (nil))
(insn 1152 1151 1153 72 (set (reg:SI 1 dx [1026])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALRCH.f":177 86 {*movsi_internal}
     (nil))
(insn 1153 1152 1154 72 (set (reg:DI 1 dx [orig:627 _541 ] [627])
        (sign_extend:DI (reg:SI 1 dx [1026]))) "CALRCH.f":177 149 {*extendsidi2_rex64}
     (nil))
(insn 1154 1153 1155 72 (parallel [
            (set (reg:DI 1 dx [orig:628 _542 ] [628])
                (mult:DI (reg:DI 1 dx [orig:627 _541 ] [627])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":177 349 {*muldi3_1}
     (nil))
(insn 1155 1154 1156 72 (parallel [
            (set (reg:DI 2 cx [orig:629 _543 ] [629])
                (plus:DI (reg:DI 2 cx [orig:626 _540 ] [626])
                    (reg:DI 1 dx [orig:628 _542 ] [628])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":177 222 {*adddi_1}
     (nil))
(insn 1156 1155 1157 72 (set (reg:SI 1 dx [1027])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALRCH.f":177 86 {*movsi_internal}
     (nil))
(insn 1157 1156 1158 72 (set (reg:DI 1 dx [orig:630 _544 ] [630])
        (sign_extend:DI (reg:SI 1 dx [1027]))) "CALRCH.f":177 149 {*extendsidi2_rex64}
     (nil))
(insn 1158 1157 1383 72 (parallel [
            (set (reg:DI 1 dx [orig:631 _545 ] [631])
                (plus:DI (reg:DI 1 dx [orig:630 _544 ] [630])
                    (reg:DI 2 cx [orig:629 _543 ] [629])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":177 222 {*adddi_1}
     (nil))
(insn 1383 1158 1160 72 (set (reg:DI 2 cx [orig:632 _546 ] [632])
        (plus:DI (reg:DI 1 dx [orig:631 _545 ] [631])
            (const_int -29751 [0xffffffffffff8bc9]))) "CALRCH.f":177 218 {*leadi}
     (nil))
(insn 1160 1383 1161 72 (set (reg/f:DI 1 dx [1028])
        (symbol_ref:DI ("thv.4234") [flags 0x202]  <var_decl 0x7fe96ef1e900 thv>)) "CALRCH.f":177 85 {*movdi_internal}
     (nil))
(insn 1161 1160 1162 72 (set (reg:SF 21 xmm0 [orig:633 _547 ] [633])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:632 _546 ] [632])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1028])) [2 thv S4 A32])) "CALRCH.f":177 131 {*movsf_internal}
     (nil))
(insn 1162 1161 1163 72 (set (reg:SI 1 dx [1029])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALRCH.f":177 86 {*movsi_internal}
     (nil))
(insn 1163 1162 1164 72 (parallel [
            (set (reg:SI 1 dx [orig:634 _548 ] [634])
                (plus:SI (reg:SI 1 dx [1029])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":177 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 1164 1163 1165 72 (set (reg:DI 1 dx [orig:635 _549 ] [635])
        (sign_extend:DI (reg:SI 1 dx [orig:634 _548 ] [634]))) "CALRCH.f":177 149 {*extendsidi2_rex64}
     (nil))
(insn 1165 1164 1166 72 (parallel [
            (set (reg:DI 2 cx [orig:636 _550 ] [636])
                (mult:DI (reg:DI 1 dx [orig:635 _549 ] [635])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":177 349 {*muldi3_1}
     (nil))
(insn 1166 1165 1167 72 (set (reg:SI 1 dx [1030])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALRCH.f":177 86 {*movsi_internal}
     (nil))
(insn 1167 1166 1168 72 (set (reg:DI 1 dx [orig:637 _551 ] [637])
        (sign_extend:DI (reg:SI 1 dx [1030]))) "CALRCH.f":177 149 {*extendsidi2_rex64}
     (nil))
(insn 1168 1167 1169 72 (parallel [
            (set (reg:DI 1 dx [orig:638 _552 ] [638])
                (mult:DI (reg:DI 1 dx [orig:637 _551 ] [637])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":177 349 {*muldi3_1}
     (nil))
(insn 1169 1168 1170 72 (parallel [
            (set (reg:DI 2 cx [orig:639 _553 ] [639])
                (plus:DI (reg:DI 2 cx [orig:636 _550 ] [636])
                    (reg:DI 1 dx [orig:638 _552 ] [638])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":177 222 {*adddi_1}
     (nil))
(insn 1170 1169 1171 72 (set (reg:SI 1 dx [1031])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALRCH.f":177 86 {*movsi_internal}
     (nil))
(insn 1171 1170 1172 72 (set (reg:DI 1 dx [orig:640 _554 ] [640])
        (sign_extend:DI (reg:SI 1 dx [1031]))) "CALRCH.f":177 149 {*extendsidi2_rex64}
     (nil))
(insn 1172 1171 1384 72 (parallel [
            (set (reg:DI 1 dx [orig:641 _555 ] [641])
                (plus:DI (reg:DI 1 dx [orig:640 _554 ] [640])
                    (reg:DI 2 cx [orig:639 _553 ] [639])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":177 222 {*adddi_1}
     (nil))
(insn 1384 1172 1174 72 (set (reg:DI 2 cx [orig:642 _556 ] [642])
        (plus:DI (reg:DI 1 dx [orig:641 _555 ] [641])
            (const_int -29751 [0xffffffffffff8bc9]))) "CALRCH.f":177 218 {*leadi}
     (nil))
(insn 1174 1384 1175 72 (set (reg/f:DI 1 dx [1032])
        (symbol_ref:DI ("thv.4234") [flags 0x202]  <var_decl 0x7fe96ef1e900 thv>)) "CALRCH.f":177 85 {*movdi_internal}
     (nil))
(insn 1175 1174 1176 72 (set (reg:SF 22 xmm1 [orig:643 _557 ] [643])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:642 _556 ] [642])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1032])) [2 thv S4 A32])) "CALRCH.f":177 131 {*movsf_internal}
     (nil))
(insn 1176 1175 1177 72 (set (reg:SF 21 xmm0 [1033])
        (minus:SF (reg:SF 21 xmm0 [orig:633 _547 ] [633])
            (reg:SF 22 xmm1 [orig:643 _557 ] [643]))) "CALRCH.f":177 841 {*fop_sf_1}
     (nil))
(insn 1177 1176 1178 72 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -92 [0xffffffffffffffa4])) [2 dthvkl+0 S4 A32])
        (reg:SF 21 xmm0 [1033])) "CALRCH.f":177 131 {*movsf_internal}
     (nil))
(insn 1178 1177 1179 72 (set (reg:SF 21 xmm0 [1034])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 uhkl+0 S4 A32])) "CALRCH.f":178 131 {*movsf_internal}
     (nil))
(insn 1179 1178 1180 72 (set (reg:SF 21 xmm0 [orig:644 _558 ] [644])
        (minus:SF (reg:SF 21 xmm0 [1034])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -56 [0xffffffffffffffc8])) [2 ulkl+0 S4 A32]))) "CALRCH.f":178 841 {*fop_sf_1}
     (nil))
(insn 1180 1179 1181 72 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [2 dukl+0 S4 A32])
        (reg:SF 21 xmm0 [orig:644 _558 ] [644])) "CALRCH.f":178 131 {*movsf_internal}
     (nil))
(insn 1181 1180 1182 72 (set (reg:SF 21 xmm0 [1035])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [2 vhkl+0 S4 A32])) "CALRCH.f":179 131 {*movsf_internal}
     (nil))
(insn 1182 1181 1183 72 (set (reg:SF 21 xmm0 [orig:645 _559 ] [645])
        (minus:SF (reg:SF 21 xmm0 [1035])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -64 [0xffffffffffffffc0])) [2 vlkl+0 S4 A32]))) "CALRCH.f":179 841 {*fop_sf_1}
     (nil))
(insn 1183 1182 1184 72 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -100 [0xffffffffffffff9c])) [2 dvkl+0 S4 A32])
        (reg:SF 21 xmm0 [orig:645 _559 ] [645])) "CALRCH.f":179 131 {*movsf_internal}
     (nil))
(insn 1184 1183 1185 72 (set (reg:SF 21 xmm0 [1036])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [2 dukl+0 S4 A32])) "CALRCH.f":180 131 {*movsf_internal}
     (nil))
(insn 1185 1184 1375 72 (set (reg:SF 21 xmm0 [orig:646 _560 ] [646])
        (mult:SF (reg:SF 21 xmm0 [1036])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -72 [0xffffffffffffffb8])) [2 rdzkl+0 S4 A32]))) "CALRCH.f":180 838 {*fop_sf_comm}
     (nil))
(insn 1375 1185 1187 72 (set (reg:SF 22 xmm1 [orig:705 _724 ] [705])
        (reg:SF 21 xmm0 [orig:705 _724 ] [705])) "CALRCH.f":180 131 {*movsf_internal}
     (nil))
(insn 1187 1375 1188 72 (set (reg:SF 22 xmm1 [orig:705 _724 ] [705])
        (mult:SF (reg:SF 22 xmm1 [orig:705 _724 ] [705])
            (reg:SF 21 xmm0 [orig:705 _724 ] [705]))) "CALRCH.f":180 838 {*fop_sf_comm}
     (nil))
(insn 1188 1187 1189 72 (set (reg:SF 21 xmm0 [1037])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -100 [0xffffffffffffff9c])) [2 dvkl+0 S4 A32])) "CALRCH.f":180 131 {*movsf_internal}
     (nil))
(insn 1189 1188 1191 72 (set (reg:SF 21 xmm0 [orig:647 _561 ] [647])
        (mult:SF (reg:SF 21 xmm0 [1037])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -72 [0xffffffffffffffb8])) [2 rdzkl+0 S4 A32]))) "CALRCH.f":180 838 {*fop_sf_comm}
     (nil))
(insn 1191 1189 1192 72 (set (reg:SF 21 xmm0 [orig:708 _727 ] [708])
        (mult:SF (reg:SF 21 xmm0 [orig:707 _726 ] [707])
            (reg:SF 21 xmm0 [orig:707 _726 ] [707]))) "CALRCH.f":180 838 {*fop_sf_comm}
     (nil))
(insn 1192 1191 1193 72 (set (reg:SF 21 xmm0 [orig:648 _562 ] [648])
        (plus:SF (reg:SF 21 xmm0 [orig:708 _727 ] [708])
            (reg:SF 22 xmm1 [orig:706 _725 ] [706]))) "CALRCH.f":180 838 {*fop_sf_comm}
     (nil))
(insn 1193 1192 1194 72 (set (reg/f:DI 1 dx [1038])
        (symbol_ref:DI ("phys_") [flags 0x202]  <var_decl 0x7fe96ef06ea0 phys>)) "CALRCH.f":180 85 {*movdi_internal}
     (nil))
(insn 1194 1193 1195 72 (set (mem/c:SF (plus:DI (reg/f:DI 1 dx [1038])
                (const_int 28 [0x1c])) [2 phys.cs+0 S4 A32])
        (reg:SF 21 xmm0 [orig:648 _562 ] [648])) "CALRCH.f":180 131 {*movsf_internal}
     (nil))
(insn 1195 1194 1196 72 (set (reg/f:DI 1 dx [1039])
        (symbol_ref:DI ("phys_") [flags 0x202]  <var_decl 0x7fe96ef06ea0 phys>)) "CALRCH.f":1 85 {*movdi_internal}
     (nil))
(insn 1196 1195 1197 72 (set (reg:SF 22 xmm1 [orig:649 _563 ] [649])
        (mem/c:SF (plus:DI (reg/f:DI 1 dx [1039])
                (const_int 28 [0x1c])) [2 phys.cs+0 S4 A32])) "CALRCH.f":1 131 {*movsf_internal}
     (nil))
(insn 1197 1196 1198 72 (set (reg:SF 21 xmm0 [1040])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC10") [flags 0x2]) [0  S4 A32])) "CALRCH.f":184 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 9.99999993922529029077850282192230224609375e-9 [0x0.abcc77p-26])
        (nil)))
(insn 1198 1197 1199 72 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [1040])
            (reg:SF 22 xmm1 [orig:649 _563 ] [649]))) "CALRCH.f":184 53 {*cmpisf}
     (nil))
(jump_insn 1199 1198 1203 72 (set (pc)
        (if_then_else (unlt (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1312)
            (pc))) "CALRCH.f":184 682 {*jcc}
     (nil)
 -> 1312)
;;  succ:       73 (FALLTHRU)
;;              74
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 73, loop depth 0, maybe hot
;;  prev block 72, next block 74, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       72 (FALLTHRU)
;; bb 73 artificial_defs: { }
;; bb 73 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 2 [cx] 17 [flags] 21 [xmm0]
(note 1203 1199 1204 73 [bb 73] NOTE_INSN_BASIC_BLOCK)
(insn 1204 1203 1205 73 (set (reg:SI 1 dx [1041])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALRCH.f":189 86 {*movsi_internal}
     (nil))
(insn 1205 1204 1206 73 (set (reg:DI 1 dx [orig:650 _564 ] [650])
        (sign_extend:DI (reg:SI 1 dx [1041]))) "CALRCH.f":189 149 {*extendsidi2_rex64}
     (nil))
(insn 1206 1205 1207 73 (parallel [
            (set (reg:DI 2 cx [orig:651 _565 ] [651])
                (mult:DI (reg:DI 1 dx [orig:650 _564 ] [650])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":189 349 {*muldi3_1}
     (nil))
(insn 1207 1206 1208 73 (set (reg:SI 1 dx [1042])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALRCH.f":189 86 {*movsi_internal}
     (nil))
(insn 1208 1207 1209 73 (set (reg:DI 1 dx [orig:652 _566 ] [652])
        (sign_extend:DI (reg:SI 1 dx [1042]))) "CALRCH.f":189 149 {*extendsidi2_rex64}
     (nil))
(insn 1209 1208 1210 73 (parallel [
            (set (reg:DI 1 dx [orig:653 _567 ] [653])
                (mult:DI (reg:DI 1 dx [orig:652 _566 ] [652])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":189 349 {*muldi3_1}
     (nil))
(insn 1210 1209 1211 73 (parallel [
            (set (reg:DI 2 cx [orig:654 _568 ] [654])
                (plus:DI (reg:DI 2 cx [orig:651 _565 ] [651])
                    (reg:DI 1 dx [orig:653 _567 ] [653])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":189 222 {*adddi_1}
     (nil))
(insn 1211 1210 1212 73 (set (reg:SI 1 dx [1043])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALRCH.f":189 86 {*movsi_internal}
     (nil))
(insn 1212 1211 1213 73 (set (reg:DI 1 dx [orig:655 _569 ] [655])
        (sign_extend:DI (reg:SI 1 dx [1043]))) "CALRCH.f":189 149 {*extendsidi2_rex64}
     (nil))
(insn 1213 1212 1382 73 (parallel [
            (set (reg:DI 1 dx [orig:656 _570 ] [656])
                (plus:DI (reg:DI 1 dx [orig:655 _569 ] [655])
                    (reg:DI 2 cx [orig:654 _568 ] [654])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":189 222 {*adddi_1}
     (nil))
(insn 1382 1213 1215 73 (set (reg:DI 2 cx [orig:657 _571 ] [657])
        (plus:DI (reg:DI 1 dx [orig:656 _570 ] [656])
            (const_int -29751 [0xffffffffffff8bc9]))) "CALRCH.f":189 218 {*leadi}
     (nil))
(insn 1215 1382 1216 73 (set (reg:SF 21 xmm0 [orig:658 _572 ] [658])
        (mem/c:SF (symbol_ref:DI ("options_") [flags 0x2]  <var_decl 0x7fe96ef06240 options>) [2 options.spval+0 S4 A128])) "CALRCH.f":1 131 {*movsf_internal}
     (nil))
(insn 1216 1215 1217 73 (set (reg/f:DI 1 dx [1044])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -128 [0xffffffffffffff80])) [3 richno+0 S8 A64])) "CALRCH.f":189 85 {*movdi_internal}
     (nil))
(insn 1217 1216 1313 73 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:657 _571 ] [657])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1044])) [2 *richno_631(D) S4 A32])
        (reg:SF 21 xmm0 [orig:658 _572 ] [658])) "CALRCH.f":189 131 {*movsf_internal}
     (nil))
(jump_insn 1313 1217 1314 73 (set (pc)
        (label_ref 1250)) 683 {jump}
     (nil)
 -> 1250)
;;  succ:       75 [always] 
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

(barrier 1314 1313 1312)
;; basic block 74, loop depth 0, maybe hot
;;  prev block 73, next block 75, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       72
;; bb 74 artificial_defs: { }
;; bb 74 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 2 [cx] 17 [flags] 21 [xmm0] 22 [xmm1]
(code_label 1312 1314 1221 74 47 (nil) [1 uses])
(note 1221 1312 1222 74 [bb 74] NOTE_INSN_BASIC_BLOCK)
(insn 1222 1221 1223 74 (set (reg:SF 22 xmm1 [1045])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -92 [0xffffffffffffffa4])) [2 dthvkl+0 S4 A32])) "CALRCH.f":195 131 {*movsf_internal}
     (nil))
(insn 1223 1222 1224 74 (set (reg:SF 21 xmm0 [1046])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC11") [flags 0x2]) [0  S4 A32])) "CALRCH.f":195 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 3.5966001451015472412109375e-2 [0x0.935116p-4])
        (nil)))
(insn 1224 1223 1225 74 (set (reg:SF 21 xmm0 [orig:659 _573 ] [659])
        (mult:SF (reg:SF 21 xmm0 [1046])
            (reg:SF 22 xmm1 [1045]))) "CALRCH.f":195 838 {*fop_sf_comm}
     (nil))
(insn 1225 1224 1377 74 (set (reg:SF 21 xmm0 [orig:660 _574 ] [660])
        (mult:SF (reg:SF 21 xmm0 [orig:659 _573 ] [659])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -72 [0xffffffffffffffb8])) [2 rdzkl+0 S4 A32]))) "CALRCH.f":195 838 {*fop_sf_comm}
     (nil))
(insn 1377 1225 1378 74 (set (reg:V4SF 22 xmm1 [1048])
        (vec_merge:V4SF (vec_duplicate:V4SF (mem/u/c:SF (symbol_ref/u:DI ("*.LC12") [flags 0x2]) [0  S4 A128]))
            (const_vector:V4SF [
                    (const_double:SF 0.0 [0x0.0p+0])
                    (const_double:SF 0.0 [0x0.0p+0])
                    (const_double:SF 0.0 [0x0.0p+0])
                    (const_double:SF 0.0 [0x0.0p+0])
                ])
            (const_int 1 [0x1]))) "CALRCH.f":195 2520 {vec_setv4sf_0}
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF -0.0 [-0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 1378 1377 1228 74 (set (reg:V4SF 21 xmm0 [1047])
        (xor:V4SF (reg:V4SF 21 xmm0 [orig:660 _574 ] [660])
            (reg:V4SF 22 xmm1 [1048]))) "CALRCH.f":195 1820 {*xorv4sf3}
     (nil))
(insn 1228 1378 1229 74 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [2 ct+0 S4 A32])
        (reg:SF 21 xmm0 [1047])) "CALRCH.f":195 131 {*movsf_internal}
     (nil))
(insn 1229 1228 1230 74 (set (reg/f:DI 1 dx [1049])
        (symbol_ref:DI ("phys_") [flags 0x202]  <var_decl 0x7fe96ef06ea0 phys>)) "CALRCH.f":1 85 {*movdi_internal}
     (nil))
(insn 1230 1229 1231 74 (set (reg:SF 22 xmm1 [orig:661 _575 ] [661])
        (mem/c:SF (plus:DI (reg/f:DI 1 dx [1049])
                (const_int 28 [0x1c])) [2 phys.cs+0 S4 A32])) "CALRCH.f":1 131 {*movsf_internal}
     (nil))
(insn 1231 1230 1232 74 (set (reg:SF 21 xmm0 [1050])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [2 ct+0 S4 A32])) "CALRCH.f":196 131 {*movsf_internal}
     (nil))
(insn 1232 1231 1379 74 (set (reg:SF 21 xmm0 [orig:662 _576 ] [662])
        (div:SF (reg:SF 21 xmm0 [1050])
            (reg:SF 22 xmm1 [orig:661 _575 ] [661]))) "CALRCH.f":196 841 {*fop_sf_1}
     (nil))
(insn 1379 1232 1380 74 (set (reg:V4SF 22 xmm1 [1052])
        (vec_merge:V4SF (vec_duplicate:V4SF (mem/u/c:SF (symbol_ref/u:DI ("*.LC12") [flags 0x2]) [0  S4 A128]))
            (const_vector:V4SF [
                    (const_double:SF 0.0 [0x0.0p+0])
                    (const_double:SF 0.0 [0x0.0p+0])
                    (const_double:SF 0.0 [0x0.0p+0])
                    (const_double:SF 0.0 [0x0.0p+0])
                ])
            (const_int 1 [0x1]))) "CALRCH.f":196 2520 {vec_setv4sf_0}
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF -0.0 [-0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 1380 1379 1235 74 (set (reg:V4SF 21 xmm0 [1051])
        (xor:V4SF (reg:V4SF 21 xmm0 [orig:662 _576 ] [662])
            (reg:V4SF 22 xmm1 [1052]))) "CALRCH.f":196 1820 {*xorv4sf3}
     (nil))
(insn 1235 1380 1236 74 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -108 [0xffffffffffffff94])) [2 ri+0 S4 A32])
        (reg:SF 21 xmm0 [1051])) "CALRCH.f":196 131 {*movsf_internal}
     (nil))
(insn 1236 1235 1237 74 (set (reg:SI 1 dx [1053])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALRCH.f":197 86 {*movsi_internal}
     (nil))
(insn 1237 1236 1238 74 (set (reg:DI 1 dx [orig:663 _577 ] [663])
        (sign_extend:DI (reg:SI 1 dx [1053]))) "CALRCH.f":197 149 {*extendsidi2_rex64}
     (nil))
(insn 1238 1237 1239 74 (parallel [
            (set (reg:DI 2 cx [orig:664 _578 ] [664])
                (mult:DI (reg:DI 1 dx [orig:663 _577 ] [663])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":197 349 {*muldi3_1}
     (nil))
(insn 1239 1238 1240 74 (set (reg:SI 1 dx [1054])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALRCH.f":197 86 {*movsi_internal}
     (nil))
(insn 1240 1239 1241 74 (set (reg:DI 1 dx [orig:665 _579 ] [665])
        (sign_extend:DI (reg:SI 1 dx [1054]))) "CALRCH.f":197 149 {*extendsidi2_rex64}
     (nil))
(insn 1241 1240 1242 74 (parallel [
            (set (reg:DI 1 dx [orig:666 _580 ] [666])
                (mult:DI (reg:DI 1 dx [orig:665 _579 ] [665])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":197 349 {*muldi3_1}
     (nil))
(insn 1242 1241 1243 74 (parallel [
            (set (reg:DI 2 cx [orig:667 _581 ] [667])
                (plus:DI (reg:DI 2 cx [orig:664 _578 ] [664])
                    (reg:DI 1 dx [orig:666 _580 ] [666])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":197 222 {*adddi_1}
     (nil))
(insn 1243 1242 1244 74 (set (reg:SI 1 dx [1055])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALRCH.f":197 86 {*movsi_internal}
     (nil))
(insn 1244 1243 1245 74 (set (reg:DI 1 dx [orig:668 _582 ] [668])
        (sign_extend:DI (reg:SI 1 dx [1055]))) "CALRCH.f":197 149 {*extendsidi2_rex64}
     (nil))
(insn 1245 1244 1381 74 (parallel [
            (set (reg:DI 1 dx [orig:669 _583 ] [669])
                (plus:DI (reg:DI 1 dx [orig:668 _582 ] [668])
                    (reg:DI 2 cx [orig:667 _581 ] [667])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":197 222 {*adddi_1}
     (nil))
(insn 1381 1245 1247 74 (set (reg:DI 2 cx [orig:670 _584 ] [670])
        (plus:DI (reg:DI 1 dx [orig:669 _583 ] [669])
            (const_int -29751 [0xffffffffffff8bc9]))) "CALRCH.f":197 218 {*leadi}
     (nil))
(insn 1247 1381 1248 74 (set (reg/f:DI 1 dx [1056])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -128 [0xffffffffffffff80])) [3 richno+0 S8 A64])) "CALRCH.f":197 85 {*movdi_internal}
     (nil))
(insn 1248 1247 1249 74 (set (reg:SF 21 xmm0 [1057])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -108 [0xffffffffffffff94])) [2 ri+0 S4 A32])) "CALRCH.f":197 131 {*movsf_internal}
     (nil))
(insn 1249 1248 1250 74 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:670 _584 ] [670])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1056])) [2 *richno_631(D) S4 A32])
        (reg:SF 21 xmm0 [1057])) "CALRCH.f":197 131 {*movsf_internal}
     (nil))
;;  succ:       75 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 75, loop depth 0, maybe hot
;;  prev block 74, next block 76, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       74 (FALLTHRU)
;;              67
;;              65
;;              73 [always] 
;; bb 75 artificial_defs: { }
;; bb 75 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
(code_label 1250 1249 1251 75 33 (nil) [3 uses])
(note 1251 1250 1252 75 [bb 75] NOTE_INSN_BASIC_BLOCK)
(insn 1252 1251 1315 75 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":150 221 {*addsi_1}
     (nil))
(jump_insn 1315 1252 1316 75 (set (pc)
        (label_ref 1253)) "CALRCH.f":150 683 {jump}
     (nil)
 -> 1253)
;;  succ:       63 [always] 
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

(barrier 1316 1315 1370)
;; basic block 76, loop depth 0, maybe hot
;;  prev block 75, next block 78, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       63
;; bb 76 artificial_defs: { }
;; bb 76 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 1370 1316 1369 76 64 (nil) [1 uses])
(note 1369 1370 1371 76 [bb 76] NOTE_INSN_BASIC_BLOCK)
(insn 1371 1369 1258 76 (const_int 0 [0]) "CALRCH.f":200 718 {nop}
     (nil))
(insn 1258 1371 1317 76 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":149 221 {*addsi_1}
     (nil))
(jump_insn 1317 1258 1318 76 (set (pc)
        (label_ref 1259)) "CALRCH.f":149 683 {jump}
     (nil)
 -> 1259)
;;  succ:       61 [always] 
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

(barrier 1318 1317 1367)
;; basic block 78, loop depth 0, maybe hot
;;  prev block 76, next block 80, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       61
;; bb 78 artificial_defs: { }
;; bb 78 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 1367 1318 1366 78 63 (nil) [1 uses])
(note 1366 1367 1368 78 [bb 78] NOTE_INSN_BASIC_BLOCK)
(insn 1368 1366 1264 78 (const_int 0 [0]) "CALRCH.f":150 718 {nop}
     (nil))
(insn 1264 1368 1319 78 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":145 221 {*addsi_1}
     (nil))
(jump_insn 1319 1264 1320 78 (set (pc)
        (label_ref 1265)) "CALRCH.f":145 683 {jump}
     (nil)
 -> 1265)
;;  succ:       59 [always] 
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

(barrier 1320 1319 1364)
;; basic block 80, loop depth 0, maybe hot
;;  prev block 78, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       59
;; bb 80 artificial_defs: { }
;; bb 80 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 1364 1320 1363 80 62 (nil) [1 uses])
(note 1363 1364 1365 80 [bb 80] NOTE_INSN_BASIC_BLOCK)
(insn 1365 1363 1283 80 (const_int 0 [0]) "CALRCH.f":149 718 {nop}
     (nil))
(insn 1283 1365 1448 80 (const_int 0 [0]) "CALRCH.f":207 718 {nop}
     (nil))
(note 1448 1283 1449 80 NOTE_INSN_EPILOGUE_BEG)
(insn 1449 1448 1450 80 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 120 [0x78])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) "CALRCH.f":208 -1
     (nil))
(insn 1450 1449 1451 80 (set (reg:DI 3 bx)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) "CALRCH.f":208 -1
     (nil))
(insn/f 1451 1450 1452 80 (set (reg/f:DI 6 bp)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) "CALRCH.f":208 -1
     (expr_list:REG_CFA_DEF_CFA (plus:DI (reg/f:DI 7 sp)
            (const_int 8 [0x8]))
        (nil)))
(jump_insn 1452 1451 1453 80 (simple_return) "CALRCH.f":208 -1
     (nil)
 -> simple_return)
;;  succ:       EXIT [always] 
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

(barrier 1453 1452 1372)
(note 1372 1453 0 NOTE_INSN_DELETED)
