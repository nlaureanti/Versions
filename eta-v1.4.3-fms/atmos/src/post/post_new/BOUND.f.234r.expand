
;; Function bound (bound_, funcdef_no=0, decl_uid=3768, cgraph_uid=0, symbol_order=0)

bound (real(kind=4)[0:D.3877] * restrict fld, real(kind=4) & restrict fmin, real(kind=4) & restrict fmax, integer(kind=4) & restrict im, integer(kind=4) & restrict jm)
{
  real(kind=4) D.3876;
  real(kind=4) M.6;
  real(kind=4) D.3874;
  real(kind=4) D.3873;
  real(kind=4) M.5;
  real(kind=4) D.3871;
  logical(kind=4) D.3870;
  integer(kind=4) D.3867;
  logical(kind=4) D.3866;
  integer(kind=4) D.3863;
  sizetype D.3879;
  bitsizetype D.3878;
  integer(kind=8) D.3877;
  integer(kind=4) j;
  integer(kind=4) i;
  integer(kind=8) size.4;
  integer(kind=8) offset.3;
  integer(kind=8) stride.2;
  integer(kind=8) ubound.1;
  integer(kind=8) ubound.0;
  static integer(kind=4) jend_2u [value-expr: parallel.jend_2u];
  static integer(kind=4) jsta_2l [value-expr: parallel.jsta_2l];
  static integer(kind=4) idsp[1024] [value-expr: parallel.idsp];
  static integer(kind=4) icnt[1024] [value-expr: parallel.icnt];
  static integer(kind=4) idn [value-expr: parallel.idn];
  static integer(kind=4) iup [value-expr: parallel.iup];
  static integer(kind=4) jend_m2 [value-expr: parallel.jend_m2];
  static integer(kind=4) jsta_m2 [value-expr: parallel.jsta_m2];
  static integer(kind=4) jend_m [value-expr: parallel.jend_m];
  static integer(kind=4) jsta_m [value-expr: parallel.jsta_m];
  static integer(kind=4) jend [value-expr: parallel.jend];
  static integer(kind=4) jsta [value-expr: parallel.jsta];
  static integer(kind=4) me [value-expr: parallel.me];
  static integer(kind=4) num_procs [value-expr: parallel.num_procs];
  static logical(kind=4) spline [value-expr: ctlblk.spline];
  static integer(kind=4) nradl [value-expr: ctlblk.nradl];
  static integer(kind=4) nrads [value-expr: ctlblk.nrads];
  static integer(kind=4) nphs [value-expr: ctlblk.nphs];
  static integer(kind=4) ncp [value-expr: ctlblk.ncp];
  static integer(kind=4) nshde [value-expr: ctlblk.nshde];
  static integer(kind=4) nboco [value-expr: ctlblk.nboco];
  static integer(kind=4) idtad [value-expr: ctlblk.idtad];
  static integer(kind=4) nprec [value-expr: ctlblk.nprec];
  static integer(kind=4) nddamp [value-expr: ctlblk.nddamp];
  static integer(kind=4) ntstm [value-expr: ctlblk.ntstm];
  static integer(kind=4) ntsd [value-expr: ctlblk.ntsd];
  static real(kind=4) dt [value-expr: ctlblk.dt];
  static integer(kind=4) iout [value-expr: ctlblk.iout];
  static integer(kind=4) list [value-expr: ctlblk.list];
  static integer(kind=4) nbc [value-expr: ctlblk.nbc];
  static integer(kind=4) nfcst [value-expr: ctlblk.nfcst];
  static real(kind=4) restrt [value-expr: ctlblk.restrt];
  static real(kind=4) first [value-expr: ctlblk.first];
  static integer(kind=4) ihrst [value-expr: ctlblk.ihrst];
  static integer(kind=4) idat[3] [value-expr: ctlblk.idat];
  static real(kind=4) run [value-expr: ctlblk.run];
  static real(kind=4) sigma [value-expr: ctlblk.sigma];
  integer(kind=4) _1;
  integer(kind=4) _2;
  sizetype size.7_3;
  bitsizetype _4;
  sizetype size.8_5;
  integer(kind=4) _6;
  integer(kind=8) _7;
  integer(kind=8) _8;
  integer(kind=8) _9;
  integer(kind=8) _10;
  integer(kind=8) _11;
  logical(kind=4) _12;
  logical(kind=4) _13;
  logical(kind=4) _14;
  integer(kind=8) _15;
  integer(kind=8) _16;
  integer(kind=8) _17;
  integer(kind=8) _18;
  integer(kind=8) _19;
  integer(kind=8) _20;
  integer(kind=8) _21;
  integer(kind=8) _22;
  integer(kind=8) _23;
  integer(kind=8) _24;
  logical(kind=4) _25;
  logical(kind=4) _26;
  logical(kind=4) _27;
  integer(kind=8) _28;
  integer(kind=8) _29;
  integer(kind=8) _30;
  integer(kind=8) _31;
  integer(kind=8) _32;
  real(kind=4) M.5_35;
  real(kind=4) M.6_36;
  integer(kind=8) stride.2_43;
  integer(kind=8) stride.2_44;
  integer(kind=8) size.4_47;
  integer(kind=8) size.4_48;
  integer(kind=8) _49;
  bitsizetype _50;
  sizetype _51;
  integer(kind=8) offset.3_52;
  integer(kind=4) _53;
  logical(kind=4) _55;
  integer(kind=4) _56;
  logical(kind=4) _58;
  real(kind=4) _60;
  real(kind=4) M.5_61;
  real(kind=4) _63;
  real(kind=4) M.5_64;
  real(kind=4) _66;
  real(kind=4) M.6_67;
  real(kind=4) _69;
  real(kind=4) M.6_70;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = *im_41(D);
  ubound.0_42 = (integer(kind=8)) _1;
  stride.2_43 = ubound.0_42;
  stride.2_44 = MAX_EXPR <stride.2_43, 0>;
  _2 = *jm_45(D);
  ubound.1_46 = (integer(kind=8)) _2;
  size.4_47 = stride.2_44 * ubound.1_46;
  size.4_48 = MAX_EXPR <size.4_47, 0>;
  _49 = size.4_48 + -1;
  size.7_3 = (sizetype) size.4_48;
  _4 = (bitsizetype) size.7_3;
  _50 = _4 * 32;
  size.8_5 = (sizetype) size.4_48;
  _51 = size.8_5 * 4;
  offset.3_52 = ~stride.2_44;
  _6 = parallel.me;
  if (_6 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 14>; [INV]
;;    succ:       3
;;                14

;;   basic block 3, loop depth 0
;;    pred:       2
  _53 = *jm_45(D);
  j_54 = 1;
;;    succ:       4

;;   basic block 4, loop depth 1
;;    pred:       3
;;                12
  # j_34 = PHI <j_54(3), j_73(12)>
  _55 = j_34 > _53;
  if (_55 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 5>; [INV]
;;    succ:       13
;;                5

;;   basic block 5, loop depth 1
;;    pred:       4
  _56 = *im_41(D);
  i_57 = 1;
;;    succ:       6

;;   basic block 6, loop depth 2
;;    pred:       5
;;                11
  # i_33 = PHI <i_57(5), i_72(11)>
  _58 = i_33 > _56;
  if (_58 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 7>; [INV]
;;    succ:       12
;;                7

;;   basic block 7, loop depth 2
;;    pred:       6
  _60 = *fmin_59(D);
  M.5_61 = _60;
  _7 = (integer(kind=8)) j_34;
  _8 = stride.2_44 * _7;
  _9 = offset.3_52 + _8;
  _10 = (integer(kind=8)) i_33;
  _11 = _9 + _10;
  _63 = *fld_62(D)[_11];
  _12 = _63 > M.5_61;
  _13 = M.5_61 unord M.5_61;
  _14 = _12 | _13;
  if (_14 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]
;;    succ:       8
;;                9

;;   basic block 8, loop depth 2
;;    pred:       7
  M.5_64 = _63;
;;    succ:       9

;;   basic block 9, loop depth 2
;;    pred:       7
;;                8
  # M.5_35 = PHI <M.5_61(7), M.5_64(8)>
  _15 = (integer(kind=8)) j_34;
  _16 = stride.2_44 * _15;
  _17 = offset.3_52 + _16;
  _18 = (integer(kind=8)) i_33;
  _19 = _17 + _18;
  *fld_62(D)[_19] = M.5_35;
  _20 = (integer(kind=8)) j_34;
  _21 = stride.2_44 * _20;
  _22 = offset.3_52 + _21;
  _23 = (integer(kind=8)) i_33;
  _24 = _22 + _23;
  _66 = *fld_62(D)[_24];
  M.6_67 = _66;
  _69 = *fmax_68(D);
  _25 = _69 < M.6_67;
  _26 = M.6_67 unord M.6_67;
  _27 = _25 | _26;
  if (_27 != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]
;;    succ:       10
;;                11

;;   basic block 10, loop depth 2
;;    pred:       9
  M.6_70 = _69;
;;    succ:       11

;;   basic block 11, loop depth 2
;;    pred:       9
;;                10
  # M.6_36 = PHI <M.6_67(9), M.6_70(10)>
  _28 = (integer(kind=8)) j_34;
  _29 = stride.2_44 * _28;
  _30 = offset.3_52 + _29;
  _31 = (integer(kind=8)) i_33;
  _32 = _30 + _31;
  *fld_62(D)[_32] = M.6_36;
  i_72 = i_33 + 1;
  goto <bb 6>; [INV]
;;    succ:       6

;;   basic block 12, loop depth 1
;;    pred:       6
  j_73 = j_34 + 1;
  goto <bb 4>; [INV]
;;    succ:       4

;;   basic block 13, loop depth 0
;;    pred:       4
;;    succ:       14

;;   basic block 14, loop depth 0
;;    pred:       2
;;                13
;;    succ:       15

;;   basic block 15, loop depth 0
;;    pred:       14
<L18>:
  return;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 2 (_2 - 2 )
Partition 3 (size.7_3 - 3 )
Partition 4 (_4 - 4 )
Partition 5 (size.8_5 - 5 )
Partition 6 (_6 - 6 )
Partition 7 (_7 - 7 )
Partition 8 (_8 - 8 )
Partition 9 (_9 - 9 )
Partition 10 (_10 - 10 )
Partition 11 (_11 - 11 )
Partition 12 (_12 - 12 )
Partition 13 (_13 - 13 )
Partition 14 (_14 - 14 )
Partition 15 (_15 - 15 )
Partition 16 (_16 - 16 )
Partition 17 (_17 - 17 )
Partition 18 (_18 - 18 )
Partition 19 (_19 - 19 )
Partition 20 (_20 - 20 )
Partition 21 (_21 - 21 )
Partition 22 (_22 - 22 )
Partition 23 (_23 - 23 )
Partition 24 (_24 - 24 )
Partition 25 (_25 - 25 )
Partition 26 (_26 - 26 )
Partition 27 (_27 - 27 )
Partition 28 (_28 - 28 )
Partition 29 (_29 - 29 )
Partition 30 (_30 - 30 )
Partition 31 (_31 - 31 )
Partition 32 (_32 - 32 )
Partition 33 (i_33 - 33 )
Partition 34 (j_34 - 34 )
Partition 35 (M.5_35 - 35 )
Partition 36 (M.6_36 - 36 )
Partition 41 (im_41(D) - 41 )
Partition 42 (ubound.0_42 - 42 )
Partition 43 (stride.2_43 - 43 )
Partition 44 (stride.2_44 - 44 )
Partition 45 (jm_45(D) - 45 )
Partition 46 (ubound.1_46 - 46 )
Partition 47 (size.4_47 - 47 )
Partition 48 (size.4_48 - 48 )
Partition 49 (_49 - 49 )
Partition 50 (_50 - 50 )
Partition 51 (_51 - 51 )
Partition 52 (offset.3_52 - 52 )
Partition 53 (_53 - 53 )
Partition 54 (j_54 - 54 )
Partition 55 (_55 - 55 )
Partition 56 (_56 - 56 )
Partition 57 (i_57 - 57 )
Partition 58 (_58 - 58 )
Partition 59 (fmin_59(D) - 59 )
Partition 60 (_60 - 60 )
Partition 61 (M.5_61 - 61 )
Partition 62 (fld_62(D) - 62 )
Partition 63 (_63 - 63 )
Partition 64 (M.5_64 - 64 )
Partition 66 (_66 - 66 )
Partition 67 (M.6_67 - 67 )
Partition 68 (fmax_68(D) - 68 )
Partition 69 (_69 - 69 )
Partition 70 (M.6_70 - 70 )
Partition 72 (i_72 - 72 )
Partition 73 (j_73 - 73 )


Coalescible Partition map 

Partition 0, base 0 (i_33 - 33 57 72 )
Partition 1, base 1 (j_34 - 34 54 73 )
Partition 2, base 2 (M.5_35 - 35 60 61 63 64 )
Partition 3, base 3 (M.6_36 - 36 66 67 69 70 )
Partition 4, base 4 (im_41(D) - 41 )
Partition 5, base 5 (jm_45(D) - 45 )
Partition 8, base 6 (fmin_59(D) - 59 )
Partition 11, base 7 (fld_62(D) - 62 )
Partition 16, base 8 (fmax_68(D) - 68 )


Partition map 

Partition 0 (i_33 - 33 )
Partition 1 (j_34 - 34 )
Partition 2 (M.5_35 - 35 )
Partition 3 (M.6_36 - 36 )
Partition 4 (im_41(D) - 41 )
Partition 5 (jm_45(D) - 45 )
Partition 6 (j_54 - 54 )
Partition 7 (i_57 - 57 )
Partition 8 (fmin_59(D) - 59 )
Partition 9 (_60 - 60 )
Partition 10 (M.5_61 - 61 )
Partition 11 (fld_62(D) - 62 )
Partition 12 (_63 - 63 )
Partition 13 (M.5_64 - 64 )
Partition 14 (_66 - 66 )
Partition 15 (M.6_67 - 67 )
Partition 16 (fmax_68(D) - 68 )
Partition 17 (_69 - 69 )
Partition 18 (M.6_70 - 70 )
Partition 19 (i_72 - 72 )
Partition 20 (j_73 - 73 )


Conflict graph:
10: 12
12: 10
15: 17
17: 15

After sorting:
Sorted Coalesce list:
(2147483646, 0) j_34 <-> j_54
(2147483646, 0) j_34 <-> j_73
(2147483646, 0) i_33 <-> i_57
(2147483646, 0) i_33 <-> i_72
(20000, 0) M.5_35 <-> M.5_61
(20000, 0) M.6_36 <-> M.6_67
(10000, 0) _60 <-> M.5_61
(10000, 0) _63 <-> M.5_64
(10000, 0) M.5_35 <-> M.5_64
(10000, 0) _66 <-> M.6_67
(10000, 0) _69 <-> M.6_70
(10000, 0) M.6_36 <-> M.6_70

Partition map 

Partition 0 (i_33 - 33 )
Partition 1 (j_34 - 34 )
Partition 2 (M.5_35 - 35 )
Partition 3 (M.6_36 - 36 )
Partition 4 (im_41(D) - 41 )
Partition 5 (jm_45(D) - 45 )
Partition 6 (j_54 - 54 )
Partition 7 (i_57 - 57 )
Partition 8 (fmin_59(D) - 59 )
Partition 9 (_60 - 60 )
Partition 10 (M.5_61 - 61 )
Partition 11 (fld_62(D) - 62 )
Partition 12 (_63 - 63 )
Partition 13 (M.5_64 - 64 )
Partition 14 (_66 - 66 )
Partition 15 (M.6_67 - 67 )
Partition 16 (fmax_68(D) - 68 )
Partition 17 (_69 - 69 )
Partition 18 (M.6_70 - 70 )
Partition 19 (i_72 - 72 )
Partition 20 (j_73 - 73 )

Coalesce list: (34)j_34 & (54)j_54 [map: 1, 6] : Success -> 1
Coalesce list: (34)j_34 & (73)j_73 [map: 1, 20] : Success -> 1
Coalesce list: (33)i_33 & (57)i_57 [map: 0, 7] : Success -> 0
Coalesce list: (33)i_33 & (72)i_72 [map: 0, 19] : Success -> 0
Coalesce list: (35)M.5_35 & (61)M.5_61 [map: 2, 10] : Success -> 2
Coalesce list: (36)M.6_36 & (67)M.6_67 [map: 3, 15] : Success -> 3
Coalesce list: (60)_60 & (61)M.5_35 [map: 9, 2] : Success -> 2
Coalesce list: (63)_63 & (64)M.5_64 [map: 12, 13] : Success -> 12
Coalesce list: (35)M.5_35 & (64)_63 [map: 2, 12] : Fail due to conflict
Coalesce list: (66)_66 & (67)M.6_36 [map: 14, 3] : Success -> 3
Coalesce list: (69)_69 & (70)M.6_70 [map: 17, 18] : Success -> 17
Coalesce list: (36)M.6_36 & (70)_69 [map: 3, 17] : Fail due to conflict
After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (_2 - 2 )
Partition 2 (size.7_3 - 3 )
Partition 3 (_4 - 4 )
Partition 4 (size.8_5 - 5 )
Partition 5 (_6 - 6 )
Partition 6 (_7 - 7 )
Partition 7 (_8 - 8 )
Partition 8 (_9 - 9 )
Partition 9 (_10 - 10 )
Partition 10 (_11 - 11 )
Partition 11 (_12 - 12 )
Partition 12 (_13 - 13 )
Partition 13 (_14 - 14 )
Partition 14 (_15 - 15 )
Partition 15 (_16 - 16 )
Partition 16 (_17 - 17 )
Partition 17 (_18 - 18 )
Partition 18 (_19 - 19 )
Partition 19 (_20 - 20 )
Partition 20 (_21 - 21 )
Partition 21 (_22 - 22 )
Partition 22 (_23 - 23 )
Partition 23 (_24 - 24 )
Partition 24 (_25 - 25 )
Partition 25 (_26 - 26 )
Partition 26 (_27 - 27 )
Partition 27 (_28 - 28 )
Partition 28 (_29 - 29 )
Partition 29 (_30 - 30 )
Partition 30 (_31 - 31 )
Partition 31 (_32 - 32 )
Partition 32 (i_33 - 33 57 72 )
Partition 33 (j_34 - 34 54 73 )
Partition 34 (M.5_35 - 35 60 61 )
Partition 35 (M.6_36 - 36 66 67 )
Partition 36 (im_41(D) - 41 )
Partition 37 (ubound.0_42 - 42 )
Partition 38 (stride.2_43 - 43 )
Partition 39 (stride.2_44 - 44 )
Partition 40 (jm_45(D) - 45 )
Partition 41 (ubound.1_46 - 46 )
Partition 42 (size.4_47 - 47 )
Partition 43 (size.4_48 - 48 )
Partition 44 (_49 - 49 )
Partition 45 (_50 - 50 )
Partition 46 (_51 - 51 )
Partition 47 (offset.3_52 - 52 )
Partition 48 (_53 - 53 )
Partition 49 (_55 - 55 )
Partition 50 (_56 - 56 )
Partition 51 (_58 - 58 )
Partition 52 (fmin_59(D) - 59 )
Partition 53 (fld_62(D) - 62 )
Partition 54 (_63 - 63 64 )
Partition 55 (fmax_68(D) - 68 )
Partition 56 (_69 - 69 70 )

bound (real(kind=4)[0:D.3877] * restrict fld, real(kind=4) & restrict fmin, real(kind=4) & restrict fmax, integer(kind=4) & restrict im, integer(kind=4) & restrict jm)
{
  real(kind=4) D.3876;
  real(kind=4) M.6;
  real(kind=4) D.3874;
  real(kind=4) D.3873;
  real(kind=4) M.5;
  real(kind=4) D.3871;
  logical(kind=4) D.3870;
  integer(kind=4) D.3867;
  logical(kind=4) D.3866;
  integer(kind=4) D.3863;
  sizetype D.3879;
  bitsizetype D.3878;
  integer(kind=8) D.3877;
  integer(kind=4) j;
  integer(kind=4) i;
  integer(kind=8) size.4;
  integer(kind=8) offset.3;
  integer(kind=8) stride.2;
  integer(kind=8) ubound.1;
  integer(kind=8) ubound.0;
  static integer(kind=4) jend_2u [value-expr: parallel.jend_2u];
  static integer(kind=4) jsta_2l [value-expr: parallel.jsta_2l];
  static integer(kind=4) idsp[1024] [value-expr: parallel.idsp];
  static integer(kind=4) icnt[1024] [value-expr: parallel.icnt];
  static integer(kind=4) idn [value-expr: parallel.idn];
  static integer(kind=4) iup [value-expr: parallel.iup];
  static integer(kind=4) jend_m2 [value-expr: parallel.jend_m2];
  static integer(kind=4) jsta_m2 [value-expr: parallel.jsta_m2];
  static integer(kind=4) jend_m [value-expr: parallel.jend_m];
  static integer(kind=4) jsta_m [value-expr: parallel.jsta_m];
  static integer(kind=4) jend [value-expr: parallel.jend];
  static integer(kind=4) jsta [value-expr: parallel.jsta];
  static integer(kind=4) me [value-expr: parallel.me];
  static integer(kind=4) num_procs [value-expr: parallel.num_procs];
  static logical(kind=4) spline [value-expr: ctlblk.spline];
  static integer(kind=4) nradl [value-expr: ctlblk.nradl];
  static integer(kind=4) nrads [value-expr: ctlblk.nrads];
  static integer(kind=4) nphs [value-expr: ctlblk.nphs];
  static integer(kind=4) ncp [value-expr: ctlblk.ncp];
  static integer(kind=4) nshde [value-expr: ctlblk.nshde];
  static integer(kind=4) nboco [value-expr: ctlblk.nboco];
  static integer(kind=4) idtad [value-expr: ctlblk.idtad];
  static integer(kind=4) nprec [value-expr: ctlblk.nprec];
  static integer(kind=4) nddamp [value-expr: ctlblk.nddamp];
  static integer(kind=4) ntstm [value-expr: ctlblk.ntstm];
  static integer(kind=4) ntsd [value-expr: ctlblk.ntsd];
  static real(kind=4) dt [value-expr: ctlblk.dt];
  static integer(kind=4) iout [value-expr: ctlblk.iout];
  static integer(kind=4) list [value-expr: ctlblk.list];
  static integer(kind=4) nbc [value-expr: ctlblk.nbc];
  static integer(kind=4) nfcst [value-expr: ctlblk.nfcst];
  static real(kind=4) restrt [value-expr: ctlblk.restrt];
  static real(kind=4) first [value-expr: ctlblk.first];
  static integer(kind=4) ihrst [value-expr: ctlblk.ihrst];
  static integer(kind=4) idat[3] [value-expr: ctlblk.idat];
  static real(kind=4) run [value-expr: ctlblk.run];
  static real(kind=4) sigma [value-expr: ctlblk.sigma];
  integer(kind=4) _1;
  integer(kind=4) _2;
  sizetype size.7_3;
  bitsizetype _4;
  sizetype size.8_5;
  integer(kind=4) _6;
  integer(kind=8) _7;
  integer(kind=8) _8;
  integer(kind=8) _9;
  integer(kind=8) _10;
  integer(kind=8) _11;
  logical(kind=4) _12;
  logical(kind=4) _13;
  logical(kind=4) _14;
  integer(kind=8) _15;
  integer(kind=8) _16;
  integer(kind=8) _17;
  integer(kind=8) _18;
  integer(kind=8) _19;
  integer(kind=8) _20;
  integer(kind=8) _21;
  integer(kind=8) _22;
  integer(kind=8) _23;
  integer(kind=8) _24;
  logical(kind=4) _25;
  logical(kind=4) _26;
  logical(kind=4) _27;
  integer(kind=8) _28;
  integer(kind=8) _29;
  integer(kind=8) _30;
  integer(kind=8) _31;
  integer(kind=8) _32;
  real(kind=4) M.5_35;
  real(kind=4) M.6_36;
  integer(kind=8) stride.2_43;
  integer(kind=8) stride.2_44;
  integer(kind=8) size.4_47;
  integer(kind=8) size.4_48;
  integer(kind=8) _49;
  bitsizetype _50;
  sizetype _51;
  integer(kind=8) offset.3_52;
  integer(kind=4) _53;
  logical(kind=4) _55;
  integer(kind=4) _56;
  logical(kind=4) _58;
  real(kind=4) _60;
  real(kind=4) M.5_61;
  real(kind=4) _63;
  real(kind=4) M.5_64;
  real(kind=4) _66;
  real(kind=4) M.6_67;
  real(kind=4) _69;
  real(kind=4) M.6_70;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = *im_41(D);
  ubound.0_42 = (integer(kind=8)) _1;
  stride.2_43 = ubound.0_42;
  stride.2_44 = MAX_EXPR <stride.2_43, 0>;
  _2 = *jm_45(D);
  ubound.1_46 = (integer(kind=8)) _2;
  size.4_47 = stride.2_44 * ubound.1_46;
  size.4_48 = MAX_EXPR <size.4_47, 0>;
  _49 = size.4_48 + -1;
  size.7_3 = (sizetype) size.4_48;
  _4 = (bitsizetype) size.7_3;
  _50 = _4 * 32;
  size.8_5 = (sizetype) size.4_48;
  _51 = size.8_5 * 4;
  offset.3_52 = ~stride.2_44;
  _6 = parallel.me;
  if (_6 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 14>; [INV]
;;    succ:       3
;;                14

;;   basic block 3, loop depth 0
;;    pred:       2
  _53 = *jm_45(D);
  j_54 = 1;
;;    succ:       4

;;   basic block 4, loop depth 1
;;    pred:       3
;;                12
  # j_34 = PHI <j_54(3), j_73(12)>
  _55 = j_34 > _53;
  if (_55 != 0)
    goto <bb 13>; [INV]
  else
    goto <bb 5>; [INV]
;;    succ:       13
;;                5

;;   basic block 5, loop depth 1
;;    pred:       4
  _56 = *im_41(D);
  i_57 = 1;
;;    succ:       6

;;   basic block 6, loop depth 2
;;    pred:       5
;;                11
  # i_33 = PHI <i_57(5), i_72(11)>
  _58 = i_33 > _56;
  if (_58 != 0)
    goto <bb 12>; [INV]
  else
    goto <bb 7>; [INV]
;;    succ:       12
;;                7

;;   basic block 7, loop depth 2
;;    pred:       6
  _60 = *fmin_59(D);
  M.5_61 = _60;
  _7 = (integer(kind=8)) j_34;
  _8 = stride.2_44 * _7;
  _9 = offset.3_52 + _8;
  _10 = (integer(kind=8)) i_33;
  _11 = _9 + _10;
  _63 = *fld_62(D)[_11];
  _12 = _63 > M.5_61;
  _13 = M.5_61 unord M.5_61;
  _14 = _12 | _13;
  if (_14 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 9>; [INV]
;;    succ:       8
;;                9

;;   basic block 8, loop depth 2
;;    pred:       7
  M.5_64 = _63;
;;    succ:       9

;;   basic block 9, loop depth 2
;;    pred:       7
;;                8
  # M.5_35 = PHI <M.5_61(7), M.5_64(8)>
  _15 = (integer(kind=8)) j_34;
  _16 = stride.2_44 * _15;
  _17 = offset.3_52 + _16;
  _18 = (integer(kind=8)) i_33;
  _19 = _17 + _18;
  *fld_62(D)[_19] = M.5_35;
  _20 = (integer(kind=8)) j_34;
  _21 = stride.2_44 * _20;
  _22 = offset.3_52 + _21;
  _23 = (integer(kind=8)) i_33;
  _24 = _22 + _23;
  _66 = *fld_62(D)[_24];
  M.6_67 = _66;
  _69 = *fmax_68(D);
  _25 = _69 < M.6_67;
  _26 = M.6_67 unord M.6_67;
  _27 = _25 | _26;
  if (_27 != 0)
    goto <bb 10>; [INV]
  else
    goto <bb 11>; [INV]
;;    succ:       10
;;                11

;;   basic block 10, loop depth 2
;;    pred:       9
  M.6_70 = _69;
;;    succ:       11

;;   basic block 11, loop depth 2
;;    pred:       9
;;                10
  # M.6_36 = PHI <M.6_67(9), M.6_70(10)>
  _28 = (integer(kind=8)) j_34;
  _29 = stride.2_44 * _28;
  _30 = offset.3_52 + _29;
  _31 = (integer(kind=8)) i_33;
  _32 = _30 + _31;
  *fld_62(D)[_32] = M.6_36;
  i_72 = i_33 + 1;
  goto <bb 6>; [INV]
;;    succ:       6

;;   basic block 12, loop depth 1
;;    pred:       6
  j_73 = j_34 + 1;
  goto <bb 4>; [INV]
;;    succ:       4

;;   basic block 13, loop depth 0
;;    pred:       4
;;    succ:       14

;;   basic block 14, loop depth 0
;;    pred:       2
;;                13
;;    succ:       15

;;   basic block 15, loop depth 0
;;    pred:       14
<L18>:
  return;
;;    succ:       EXIT

}


Inserting a partition copy on edge BB8->BB9 : PART.34 = PART.54
Inserting a partition copy on edge BB10->BB11 : PART.35 = PART.56

;; Generating RTL for gimple basic block 2

;; _1 = *im_41(D);

(insn 12 11 13 (set (reg/f:DI 135)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [5 im+0 S8 A64])) "BOUND.f":1 -1
     (nil))

(insn 13 12 0 (set (reg:SI 87 [ _1 ])
        (mem:SI (reg/f:DI 135) [1 *im_41(D)+0 S4 A32])) "BOUND.f":1 -1
     (nil))

;; ubound.0_42 = (integer(kind=8)) _1;

(insn 14 13 15 (set (reg:DI 136)
        (sign_extend:DI (reg:SI 87 [ _1 ]))) "BOUND.f":1 -1
     (nil))

(insn 15 14 0 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 ubound.0+0 S8 A64])
        (reg:DI 136)) "BOUND.f":1 -1
     (nil))

;; stride.2_43 = ubound.0_42;

(insn 16 15 0 (set (reg:DI 121 [ stride.2_43 ])
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 ubound.0+0 S8 A64])) "BOUND.f":1 -1
     (nil))

;; stride.2_44 = MAX_EXPR <stride.2_43, 0>;

(insn 18 16 17 (set (reg:DI 137)
        (const_int 0 [0])) "BOUND.f":1 -1
     (nil))

(insn 17 18 19 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 121 [ stride.2_43 ])
            (const_int 0 [0]))) "BOUND.f":1 -1
     (nil))

(insn 19 17 0 (set (reg:DI 122 [ stride.2_44 ])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 121 [ stride.2_43 ])
            (reg:DI 137))) "BOUND.f":1 -1
     (nil))

;; _2 = *jm_45(D);

(insn 20 19 21 (set (reg/f:DI 138)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [5 jm+0 S8 A64])) "BOUND.f":1 -1
     (nil))

(insn 21 20 0 (set (reg:SI 88 [ _2 ])
        (mem:SI (reg/f:DI 138) [1 *jm_45(D)+0 S4 A32])) "BOUND.f":1 -1
     (nil))

;; ubound.1_46 = (integer(kind=8)) _2;

(insn 22 21 23 (set (reg:DI 139)
        (sign_extend:DI (reg:SI 88 [ _2 ]))) "BOUND.f":1 -1
     (nil))

(insn 23 22 0 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [2 ubound.1+0 S8 A64])
        (reg:DI 139)) "BOUND.f":1 -1
     (nil))

;; size.4_47 = stride.2_44 * ubound.1_46;

(insn 24 23 0 (parallel [
            (set (reg:DI 123 [ size.4_47 ])
                (mult:DI (reg:DI 122 [ stride.2_44 ])
                    (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -24 [0xffffffffffffffe8])) [2 ubound.1+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) "BOUND.f":1 -1
     (nil))

;; size.4_48 = MAX_EXPR <size.4_47, 0>;

(insn 26 24 25 (set (reg:DI 140)
        (const_int 0 [0])) "BOUND.f":1 -1
     (nil))

(insn 25 26 27 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 123 [ size.4_47 ])
            (const_int 0 [0]))) "BOUND.f":1 -1
     (nil))

(insn 27 25 0 (set (reg:DI 124 [ size.4_48 ])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 123 [ size.4_47 ])
            (reg:DI 140))) "BOUND.f":1 -1
     (nil))

;; _49 = size.4_48 + -1;

(insn 28 27 0 (parallel [
            (set (reg:DI 125 [ _49 ])
                (plus:DI (reg:DI 124 [ size.4_48 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "BOUND.f":1 -1
     (nil))

;; size.7_3 = (sizetype) size.4_48;

(insn 29 28 0 (set (reg:DI 89 [ size.7_3 ])
        (reg:DI 124 [ size.4_48 ])) "BOUND.f":1 -1
     (nil))

;; _4 = (bitsizetype) size.7_3;

(insn 30 29 31 (set (subreg:DI (reg:TI 90 [ _4 ]) 0)
        (reg:DI 89 [ size.7_3 ])) "BOUND.f":1 -1
     (nil))

(insn 31 30 0 (set (subreg:DI (reg:TI 90 [ _4 ]) 8)
        (const_int 0 [0])) "BOUND.f":1 -1
     (nil))

;; _50 = _4 * 32;

(insn 32 31 0 (parallel [
            (set (reg:TI 126 [ _50 ])
                (ashift:TI (reg:TI 90 [ _4 ])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) "BOUND.f":1 -1
     (nil))

;; size.8_5 = (sizetype) size.4_48;

(insn 33 32 0 (set (reg:DI 91 [ size.8_5 ])
        (reg:DI 124 [ size.4_48 ])) "BOUND.f":1 -1
     (nil))

;; _51 = size.8_5 * 4;

(insn 34 33 0 (parallel [
            (set (reg:DI 127 [ _51 ])
                (ashift:DI (reg:DI 91 [ size.8_5 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "BOUND.f":1 -1
     (nil))

;; offset.3_52 = ~stride.2_44;

(insn 35 34 0 (set (reg:DI 128 [ offset.3_52 ])
        (not:DI (reg:DI 122 [ stride.2_44 ]))) "BOUND.f":1 -1
     (nil))

;; _6 = parallel.me;

(insn 36 35 0 (set (reg:SI 92 [ _6 ])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f4161f76870 parallel>)
                    (const_int 4 [0x4]))) [1 parallel.me+0 S4 A32])) "BOUND.f":1 -1
     (nil))

;; if (_6 == 0)

(insn 37 36 38 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 92 [ _6 ])
            (const_int 0 [0]))) "BOUND.f":56 -1
     (nil))

(jump_insn 38 37 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "BOUND.f":56 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; _53 = *jm_45(D);

(insn 40 39 41 (set (reg/f:DI 141)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [5 jm+0 S8 A64])) "BOUND.f":58 -1
     (nil))

(insn 41 40 0 (set (reg:SI 129 [ _53 ])
        (mem:SI (reg/f:DI 141) [1 *jm_45(D)+0 S4 A32])) "BOUND.f":58 -1
     (nil))

;; j_54 = 1;

(insn 42 41 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
        (const_int 1 [0x1])) "BOUND.f":58 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; _55 = j_34 > _53;

(insn 44 43 45 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (reg:SI 129 [ _53 ]))) "BOUND.f":58 -1
     (nil))

(insn 45 44 46 (set (reg:QI 142)
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "BOUND.f":58 -1
     (nil))

(insn 46 45 0 (set (reg:SI 130 [ _55 ])
        (zero_extend:SI (reg:QI 142))) "BOUND.f":58 -1
     (nil))

;; if (_55 != 0)

(insn 47 46 48 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 130 [ _55 ])
            (const_int 0 [0]))) "BOUND.f":58 -1
     (nil))

(jump_insn 48 47 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "BOUND.f":58 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; _56 = *im_41(D);

(insn 50 49 51 (set (reg/f:DI 143)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [5 im+0 S8 A64])) "BOUND.f":59 -1
     (nil))

(insn 51 50 0 (set (reg:SI 131 [ _56 ])
        (mem:SI (reg/f:DI 143) [1 *im_41(D)+0 S4 A32])) "BOUND.f":59 -1
     (nil))

;; i_57 = 1;

(insn 52 51 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
        (const_int 1 [0x1])) "BOUND.f":59 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; _58 = i_33 > _56;

(insn 54 53 55 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
            (reg:SI 131 [ _56 ]))) "BOUND.f":59 -1
     (nil))

(insn 55 54 56 (set (reg:QI 144)
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "BOUND.f":59 -1
     (nil))

(insn 56 55 0 (set (reg:SI 132 [ _58 ])
        (zero_extend:SI (reg:QI 144))) "BOUND.f":59 -1
     (nil))

;; if (_58 != 0)

(insn 57 56 58 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 132 [ _58 ])
            (const_int 0 [0]))) "BOUND.f":59 -1
     (nil))

(jump_insn 58 57 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "BOUND.f":59 -1
     (nil))

;; Generating RTL for gimple basic block 7

;; _60 = *fmin_59(D);

(insn 60 59 61 (set (reg/f:DI 145)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [4 fmin+0 S8 A64])) "BOUND.f":60 -1
     (nil))

(insn 61 60 0 (set (reg:SF 119 [ M.5_35 ])
        (mem:SF (reg/f:DI 145) [7 *fmin_59(D)+0 S4 A32])) "BOUND.f":60 -1
     (nil))

;; M.5_61 = _60;

(nil)

;; _7 = (integer(kind=8)) j_34;

(insn 62 61 63 (set (reg:SI 146)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "BOUND.f":60 -1
     (nil))

(insn 63 62 0 (set (reg:DI 93 [ _7 ])
        (sign_extend:DI (reg:SI 146))) "BOUND.f":60 -1
     (nil))

;; _8 = stride.2_44 * _7;

(insn 64 63 0 (parallel [
            (set (reg:DI 94 [ _8 ])
                (mult:DI (reg:DI 122 [ stride.2_44 ])
                    (reg:DI 93 [ _7 ])))
            (clobber (reg:CC 17 flags))
        ]) "BOUND.f":60 -1
     (nil))

;; _9 = offset.3_52 + _8;

(insn 65 64 0 (parallel [
            (set (reg:DI 95 [ _9 ])
                (plus:DI (reg:DI 128 [ offset.3_52 ])
                    (reg:DI 94 [ _8 ])))
            (clobber (reg:CC 17 flags))
        ]) "BOUND.f":60 -1
     (nil))

;; _10 = (integer(kind=8)) i_33;

(insn 66 65 67 (set (reg:SI 147)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "BOUND.f":60 -1
     (nil))

(insn 67 66 0 (set (reg:DI 96 [ _10 ])
        (sign_extend:DI (reg:SI 147))) "BOUND.f":60 -1
     (nil))

;; _11 = _9 + _10;

(insn 68 67 0 (parallel [
            (set (reg:DI 97 [ _11 ])
                (plus:DI (reg:DI 95 [ _9 ])
                    (reg:DI 96 [ _10 ])))
            (clobber (reg:CC 17 flags))
        ]) "BOUND.f":60 -1
     (nil))

;; _63 = *fld_62(D)[_11];

(insn 69 68 70 (set (reg/f:DI 148)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [3 fld+0 S8 A64])) "BOUND.f":60 -1
     (nil))

(insn 70 69 0 (set (reg:SF 133 [ _63 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 97 [ _11 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 148)) [7 *fld_62(D) S4 A32])) "BOUND.f":60 -1
     (nil))

;; _12 = _63 > M.5_61;

(insn 71 70 72 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 133 [ _63 ])
            (reg:SF 119 [ M.5_35 ]))) "BOUND.f":60 -1
     (nil))

(insn 72 71 73 (set (reg:QI 149)
        (gt:QI (reg:CCFP 17 flags)
            (const_int 0 [0]))) "BOUND.f":60 -1
     (nil))

(insn 73 72 0 (set (reg:SI 98 [ _12 ])
        (zero_extend:SI (reg:QI 149))) "BOUND.f":60 -1
     (nil))

;; _13 = M.5_61 unord M.5_61;

(insn 74 73 75 (set (reg:CCFP 17 flags)
        (unspec:CCFP [
                (compare:CCFP (reg:SF 119 [ M.5_35 ])
                    (reg:SF 119 [ M.5_35 ]))
            ] UNSPEC_NOTRAP)) "BOUND.f":60 -1
     (nil))

(insn 75 74 76 (set (reg:QI 150)
        (unordered:QI (reg:CCFP 17 flags)
            (const_int 0 [0]))) "BOUND.f":60 -1
     (nil))

(insn 76 75 0 (set (reg:SI 99 [ _13 ])
        (zero_extend:SI (reg:QI 150))) "BOUND.f":60 -1
     (nil))

;; _14 = _12 | _13;

(insn 77 76 0 (parallel [
            (set (reg:SI 100 [ _14 ])
                (ior:SI (reg:SI 98 [ _12 ])
                    (reg:SI 99 [ _13 ])))
            (clobber (reg:CC 17 flags))
        ]) "BOUND.f":60 -1
     (nil))

;; if (_14 != 0)

(insn 78 77 79 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 100 [ _14 ])
            (const_int 0 [0]))) "BOUND.f":60 -1
     (nil))

(jump_insn 79 78 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "BOUND.f":60 -1
     (nil))

;; Generating RTL for gimple basic block 8

;; M.5_64 = _63;

(nil)

;; Generating RTL for gimple basic block 9

;; 

(code_label 81 80 82 5 (nil) [0 uses])

(note 82 81 0 NOTE_INSN_BASIC_BLOCK)

;; _15 = (integer(kind=8)) j_34;

(insn 83 82 84 (set (reg:SI 151)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "BOUND.f":60 -1
     (nil))

(insn 84 83 0 (set (reg:DI 101 [ _15 ])
        (sign_extend:DI (reg:SI 151))) "BOUND.f":60 -1
     (nil))

;; _16 = stride.2_44 * _15;

(insn 85 84 0 (parallel [
            (set (reg:DI 102 [ _16 ])
                (mult:DI (reg:DI 122 [ stride.2_44 ])
                    (reg:DI 101 [ _15 ])))
            (clobber (reg:CC 17 flags))
        ]) "BOUND.f":60 -1
     (nil))

;; _17 = offset.3_52 + _16;

(insn 86 85 0 (parallel [
            (set (reg:DI 103 [ _17 ])
                (plus:DI (reg:DI 128 [ offset.3_52 ])
                    (reg:DI 102 [ _16 ])))
            (clobber (reg:CC 17 flags))
        ]) "BOUND.f":60 -1
     (nil))

;; _18 = (integer(kind=8)) i_33;

(insn 87 86 88 (set (reg:SI 152)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "BOUND.f":60 -1
     (nil))

(insn 88 87 0 (set (reg:DI 104 [ _18 ])
        (sign_extend:DI (reg:SI 152))) "BOUND.f":60 -1
     (nil))

;; _19 = _17 + _18;

(insn 89 88 0 (parallel [
            (set (reg:DI 105 [ _19 ])
                (plus:DI (reg:DI 103 [ _17 ])
                    (reg:DI 104 [ _18 ])))
            (clobber (reg:CC 17 flags))
        ]) "BOUND.f":60 -1
     (nil))

;; *fld_62(D)[_19] = M.5_35;

(insn 90 89 91 (set (reg/f:DI 153)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [3 fld+0 S8 A64])) "BOUND.f":60 -1
     (nil))

(insn 91 90 0 (set (mem:SF (plus:DI (mult:DI (reg:DI 105 [ _19 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 153)) [7 *fld_62(D) S4 A32])
        (reg:SF 119 [ M.5_35 ])) "BOUND.f":60 -1
     (nil))

;; _20 = (integer(kind=8)) j_34;

(insn 92 91 93 (set (reg:SI 154)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "BOUND.f":61 -1
     (nil))

(insn 93 92 0 (set (reg:DI 106 [ _20 ])
        (sign_extend:DI (reg:SI 154))) "BOUND.f":61 -1
     (nil))

;; _21 = stride.2_44 * _20;

(insn 94 93 0 (parallel [
            (set (reg:DI 107 [ _21 ])
                (mult:DI (reg:DI 122 [ stride.2_44 ])
                    (reg:DI 106 [ _20 ])))
            (clobber (reg:CC 17 flags))
        ]) "BOUND.f":61 -1
     (nil))

;; _22 = offset.3_52 + _21;

(insn 95 94 0 (parallel [
            (set (reg:DI 108 [ _22 ])
                (plus:DI (reg:DI 128 [ offset.3_52 ])
                    (reg:DI 107 [ _21 ])))
            (clobber (reg:CC 17 flags))
        ]) "BOUND.f":61 -1
     (nil))

;; _23 = (integer(kind=8)) i_33;

(insn 96 95 97 (set (reg:SI 155)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "BOUND.f":61 -1
     (nil))

(insn 97 96 0 (set (reg:DI 109 [ _23 ])
        (sign_extend:DI (reg:SI 155))) "BOUND.f":61 -1
     (nil))

;; _24 = _22 + _23;

(insn 98 97 0 (parallel [
            (set (reg:DI 110 [ _24 ])
                (plus:DI (reg:DI 108 [ _22 ])
                    (reg:DI 109 [ _23 ])))
            (clobber (reg:CC 17 flags))
        ]) "BOUND.f":61 -1
     (nil))

;; _66 = *fld_62(D)[_24];

(insn 99 98 100 (set (reg/f:DI 156)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [3 fld+0 S8 A64])) "BOUND.f":61 -1
     (nil))

(insn 100 99 0 (set (reg:SF 120 [ M.6_36 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 110 [ _24 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 156)) [7 *fld_62(D) S4 A32])) "BOUND.f":61 -1
     (nil))

;; M.6_67 = _66;

(nil)

;; _69 = *fmax_68(D);

(insn 101 100 102 (set (reg/f:DI 157)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [4 fmax+0 S8 A64])) "BOUND.f":61 -1
     (nil))

(insn 102 101 0 (set (reg:SF 134 [ _69 ])
        (mem:SF (reg/f:DI 157) [7 *fmax_68(D)+0 S4 A32])) "BOUND.f":61 -1
     (nil))

;; _25 = _69 < M.6_67;

(insn 103 102 104 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 120 [ M.6_36 ])
            (reg:SF 134 [ _69 ]))) "BOUND.f":61 -1
     (nil))

(insn 104 103 105 (set (reg:QI 159)
        (gt:QI (reg:CCFP 17 flags)
            (const_int 0 [0]))) "BOUND.f":61 -1
     (nil))

(insn 105 104 0 (set (reg:SI 111 [ _25 ])
        (zero_extend:SI (reg:QI 159))) "BOUND.f":61 -1
     (nil))

;; _26 = M.6_67 unord M.6_67;

(insn 106 105 107 (set (reg:CCFP 17 flags)
        (unspec:CCFP [
                (compare:CCFP (reg:SF 120 [ M.6_36 ])
                    (reg:SF 120 [ M.6_36 ]))
            ] UNSPEC_NOTRAP)) "BOUND.f":61 -1
     (nil))

(insn 107 106 108 (set (reg:QI 160)
        (unordered:QI (reg:CCFP 17 flags)
            (const_int 0 [0]))) "BOUND.f":61 -1
     (nil))

(insn 108 107 0 (set (reg:SI 112 [ _26 ])
        (zero_extend:SI (reg:QI 160))) "BOUND.f":61 -1
     (nil))

;; _27 = _25 | _26;

(insn 109 108 0 (parallel [
            (set (reg:SI 113 [ _27 ])
                (ior:SI (reg:SI 111 [ _25 ])
                    (reg:SI 112 [ _26 ])))
            (clobber (reg:CC 17 flags))
        ]) "BOUND.f":61 -1
     (nil))

;; if (_27 != 0)

(insn 110 109 111 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 113 [ _27 ])
            (const_int 0 [0]))) "BOUND.f":61 -1
     (nil))

(jump_insn 111 110 0 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "BOUND.f":61 -1
     (nil))

;; Generating RTL for gimple basic block 10

;; M.6_70 = _69;

(nil)

;; Generating RTL for gimple basic block 11

;; 

(code_label 113 112 114 6 (nil) [0 uses])

(note 114 113 0 NOTE_INSN_BASIC_BLOCK)

;; _28 = (integer(kind=8)) j_34;

(insn 115 114 116 (set (reg:SI 161)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "BOUND.f":61 -1
     (nil))

(insn 116 115 0 (set (reg:DI 114 [ _28 ])
        (sign_extend:DI (reg:SI 161))) "BOUND.f":61 -1
     (nil))

;; _29 = stride.2_44 * _28;

(insn 117 116 0 (parallel [
            (set (reg:DI 115 [ _29 ])
                (mult:DI (reg:DI 122 [ stride.2_44 ])
                    (reg:DI 114 [ _28 ])))
            (clobber (reg:CC 17 flags))
        ]) "BOUND.f":61 -1
     (nil))

;; _30 = offset.3_52 + _29;

(insn 118 117 0 (parallel [
            (set (reg:DI 116 [ _30 ])
                (plus:DI (reg:DI 128 [ offset.3_52 ])
                    (reg:DI 115 [ _29 ])))
            (clobber (reg:CC 17 flags))
        ]) "BOUND.f":61 -1
     (nil))

;; _31 = (integer(kind=8)) i_33;

(insn 119 118 120 (set (reg:SI 162)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "BOUND.f":61 -1
     (nil))

(insn 120 119 0 (set (reg:DI 117 [ _31 ])
        (sign_extend:DI (reg:SI 162))) "BOUND.f":61 -1
     (nil))

;; _32 = _30 + _31;

(insn 121 120 0 (parallel [
            (set (reg:DI 118 [ _32 ])
                (plus:DI (reg:DI 116 [ _30 ])
                    (reg:DI 117 [ _31 ])))
            (clobber (reg:CC 17 flags))
        ]) "BOUND.f":61 -1
     (nil))

;; *fld_62(D)[_32] = M.6_36;

(insn 122 121 123 (set (reg/f:DI 163)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [3 fld+0 S8 A64])) "BOUND.f":61 -1
     (nil))

(insn 123 122 0 (set (mem:SF (plus:DI (mult:DI (reg:DI 118 [ _32 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 163)) [7 *fld_62(D) S4 A32])
        (reg:SF 120 [ M.6_36 ])) "BOUND.f":61 -1
     (nil))

;; i_72 = i_33 + 1;

(insn 124 123 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "BOUND.f":59 -1
     (nil))

;; Generating RTL for gimple basic block 12

;; 

(code_label 128 127 129 4 (nil) [0 uses])

(note 129 128 0 NOTE_INSN_BASIC_BLOCK)

;; j_73 = j_34 + 1;

(insn 130 129 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "BOUND.f":58 -1
     (nil))

;; Generating RTL for gimple basic block 13

;; 

(code_label 134 133 135 3 (nil) [0 uses])

(note 135 134 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 14

;; 

(code_label 136 135 137 2 (nil) [0 uses])

(note 137 136 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 15

;; <L18>:

(code_label 138 137 139 9 (nil) [0 uses])

(note 139 138 0 NOTE_INSN_BASIC_BLOCK)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Edge 2->15 redirected to 17
Edge 5->14 redirected to 15
deleting block 14
Merging block 16 into block 15...
Merged blocks 15 and 16.
Merged 15 and 16 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 10 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
(note 10 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 10 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [3 fld+0 S8 A64])
        (reg:DI 5 di [ fld ])) "BOUND.f":1 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [4 fmin+0 S8 A64])
        (reg:DI 4 si [ fmin ])) "BOUND.f":1 -1
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [4 fmax+0 S8 A64])
        (reg:DI 1 dx [ fmax ])) "BOUND.f":1 -1
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [5 im+0 S8 A64])
        (reg:DI 2 cx [ im ])) "BOUND.f":1 -1
     (nil))
(insn 6 5 7 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [5 jm+0 S8 A64])
        (reg:DI 37 r8 [ jm ])) "BOUND.f":1 -1
     (nil))
(note 7 6 12 2 NOTE_INSN_FUNCTION_BEG)
(insn 12 7 13 2 (set (reg/f:DI 135)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [5 im+0 S8 A64])) "BOUND.f":1 -1
     (nil))
(insn 13 12 14 2 (set (reg:SI 87 [ _1 ])
        (mem:SI (reg/f:DI 135) [1 *im_41(D)+0 S4 A32])) "BOUND.f":1 -1
     (nil))
(insn 14 13 15 2 (set (reg:DI 136)
        (sign_extend:DI (reg:SI 87 [ _1 ]))) "BOUND.f":1 -1
     (nil))
(insn 15 14 16 2 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 ubound.0+0 S8 A64])
        (reg:DI 136)) "BOUND.f":1 -1
     (nil))
(insn 16 15 18 2 (set (reg:DI 121 [ stride.2_43 ])
        (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 ubound.0+0 S8 A64])) "BOUND.f":1 -1
     (nil))
(insn 18 16 17 2 (set (reg:DI 137)
        (const_int 0 [0])) "BOUND.f":1 -1
     (nil))
(insn 17 18 19 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 121 [ stride.2_43 ])
            (const_int 0 [0]))) "BOUND.f":1 -1
     (nil))
(insn 19 17 20 2 (set (reg:DI 122 [ stride.2_44 ])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 121 [ stride.2_43 ])
            (reg:DI 137))) "BOUND.f":1 -1
     (nil))
(insn 20 19 21 2 (set (reg/f:DI 138)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [5 jm+0 S8 A64])) "BOUND.f":1 -1
     (nil))
(insn 21 20 22 2 (set (reg:SI 88 [ _2 ])
        (mem:SI (reg/f:DI 138) [1 *jm_45(D)+0 S4 A32])) "BOUND.f":1 -1
     (nil))
(insn 22 21 23 2 (set (reg:DI 139)
        (sign_extend:DI (reg:SI 88 [ _2 ]))) "BOUND.f":1 -1
     (nil))
(insn 23 22 24 2 (set (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [2 ubound.1+0 S8 A64])
        (reg:DI 139)) "BOUND.f":1 -1
     (nil))
(insn 24 23 26 2 (parallel [
            (set (reg:DI 123 [ size.4_47 ])
                (mult:DI (reg:DI 122 [ stride.2_44 ])
                    (mem/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -24 [0xffffffffffffffe8])) [2 ubound.1+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) "BOUND.f":1 -1
     (nil))
(insn 26 24 25 2 (set (reg:DI 140)
        (const_int 0 [0])) "BOUND.f":1 -1
     (nil))
(insn 25 26 27 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 123 [ size.4_47 ])
            (const_int 0 [0]))) "BOUND.f":1 -1
     (nil))
(insn 27 25 28 2 (set (reg:DI 124 [ size.4_48 ])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 123 [ size.4_47 ])
            (reg:DI 140))) "BOUND.f":1 -1
     (nil))
(insn 28 27 29 2 (parallel [
            (set (reg:DI 125 [ _49 ])
                (plus:DI (reg:DI 124 [ size.4_48 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "BOUND.f":1 -1
     (nil))
(insn 29 28 30 2 (set (reg:DI 89 [ size.7_3 ])
        (reg:DI 124 [ size.4_48 ])) "BOUND.f":1 -1
     (nil))
(insn 30 29 31 2 (set (subreg:DI (reg:TI 90 [ _4 ]) 0)
        (reg:DI 89 [ size.7_3 ])) "BOUND.f":1 -1
     (nil))
(insn 31 30 32 2 (set (subreg:DI (reg:TI 90 [ _4 ]) 8)
        (const_int 0 [0])) "BOUND.f":1 -1
     (nil))
(insn 32 31 33 2 (parallel [
            (set (reg:TI 126 [ _50 ])
                (ashift:TI (reg:TI 90 [ _4 ])
                    (const_int 5 [0x5])))
            (clobber (reg:CC 17 flags))
        ]) "BOUND.f":1 -1
     (nil))
(insn 33 32 34 2 (set (reg:DI 91 [ size.8_5 ])
        (reg:DI 124 [ size.4_48 ])) "BOUND.f":1 -1
     (nil))
(insn 34 33 35 2 (parallel [
            (set (reg:DI 127 [ _51 ])
                (ashift:DI (reg:DI 91 [ size.8_5 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "BOUND.f":1 -1
     (nil))
(insn 35 34 36 2 (set (reg:DI 128 [ offset.3_52 ])
        (not:DI (reg:DI 122 [ stride.2_44 ]))) "BOUND.f":1 -1
     (nil))
(insn 36 35 37 2 (set (reg:SI 92 [ _6 ])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f4161f76870 parallel>)
                    (const_int 4 [0x4]))) [1 parallel.me+0 S4 A32])) "BOUND.f":1 -1
     (nil))
(insn 37 36 38 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 92 [ _6 ])
            (const_int 0 [0]))) "BOUND.f":56 -1
     (nil))
(jump_insn 38 37 39 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 140)
            (pc))) "BOUND.f":56 682 {*jcc}
     (nil)
 -> 140)
;;  succ:       4 (FALLTHRU)
;;              17

;; basic block 4, loop depth 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
(note 39 38 40 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 41 4 (set (reg/f:DI 141)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -72 [0xffffffffffffffb8])) [5 jm+0 S8 A64])) "BOUND.f":58 -1
     (nil))
(insn 41 40 42 4 (set (reg:SI 129 [ _53 ])
        (mem:SI (reg/f:DI 141) [1 *jm_45(D)+0 S4 A32])) "BOUND.f":58 -1
     (nil))
(insn 42 41 131 4 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
        (const_int 1 [0x1])) "BOUND.f":58 -1
     (nil))
;;  succ:       5 (FALLTHRU)

;; basic block 5, loop depth 1, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;;              13 (DFS_BACK)
(code_label 131 42 43 5 8 (nil) [1 uses])
(note 43 131 44 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 45 5 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (reg:SI 129 [ _53 ]))) "BOUND.f":58 -1
     (nil))
(insn 45 44 46 5 (set (reg:QI 142)
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "BOUND.f":58 -1
     (nil))
(insn 46 45 47 5 (set (reg:SI 130 [ _55 ])
        (zero_extend:SI (reg:QI 142))) "BOUND.f":58 -1
     (nil))
(insn 47 46 48 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 130 [ _55 ])
            (const_int 0 [0]))) "BOUND.f":58 -1
     (nil))
(jump_insn 48 47 49 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 136)
            (pc))) "BOUND.f":58 682 {*jcc}
     (nil)
 -> 136)
;;  succ:       15
;;              6 (FALLTHRU)

;; basic block 6, loop depth 1, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       5 (FALLTHRU)
(note 49 48 50 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 50 49 51 6 (set (reg/f:DI 143)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -64 [0xffffffffffffffc0])) [5 im+0 S8 A64])) "BOUND.f":59 -1
     (nil))
(insn 51 50 52 6 (set (reg:SI 131 [ _56 ])
        (mem:SI (reg/f:DI 143) [1 *im_41(D)+0 S4 A32])) "BOUND.f":59 -1
     (nil))
(insn 52 51 125 6 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
        (const_int 1 [0x1])) "BOUND.f":59 -1
     (nil))
;;  succ:       7 (FALLTHRU)

;; basic block 7, loop depth 2, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       6 (FALLTHRU)
;;              12 (DFS_BACK)
(code_label 125 52 53 7 7 (nil) [1 uses])
(note 53 125 54 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 54 53 55 7 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
            (reg:SI 131 [ _56 ]))) "BOUND.f":59 -1
     (nil))
(insn 55 54 56 7 (set (reg:QI 144)
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "BOUND.f":59 -1
     (nil))
(insn 56 55 57 7 (set (reg:SI 132 [ _58 ])
        (zero_extend:SI (reg:QI 144))) "BOUND.f":59 -1
     (nil))
(insn 57 56 58 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 132 [ _58 ])
            (const_int 0 [0]))) "BOUND.f":59 -1
     (nil))
(jump_insn 58 57 59 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 128)
            (pc))) "BOUND.f":59 -1
     (nil)
 -> 128)
;;  succ:       13
;;              8 (FALLTHRU)

;; basic block 8, loop depth 2, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       7 (FALLTHRU)
(note 59 58 60 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 60 59 61 8 (set (reg/f:DI 145)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -48 [0xffffffffffffffd0])) [4 fmin+0 S8 A64])) "BOUND.f":60 -1
     (nil))
(insn 61 60 62 8 (set (reg:SF 119 [ M.5_35 ])
        (mem:SF (reg/f:DI 145) [7 *fmin_59(D)+0 S4 A32])) "BOUND.f":60 -1
     (nil))
(insn 62 61 63 8 (set (reg:SI 146)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "BOUND.f":60 -1
     (nil))
(insn 63 62 64 8 (set (reg:DI 93 [ _7 ])
        (sign_extend:DI (reg:SI 146))) "BOUND.f":60 -1
     (nil))
(insn 64 63 65 8 (parallel [
            (set (reg:DI 94 [ _8 ])
                (mult:DI (reg:DI 122 [ stride.2_44 ])
                    (reg:DI 93 [ _7 ])))
            (clobber (reg:CC 17 flags))
        ]) "BOUND.f":60 -1
     (nil))
(insn 65 64 66 8 (parallel [
            (set (reg:DI 95 [ _9 ])
                (plus:DI (reg:DI 128 [ offset.3_52 ])
                    (reg:DI 94 [ _8 ])))
            (clobber (reg:CC 17 flags))
        ]) "BOUND.f":60 -1
     (nil))
(insn 66 65 67 8 (set (reg:SI 147)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "BOUND.f":60 -1
     (nil))
(insn 67 66 68 8 (set (reg:DI 96 [ _10 ])
        (sign_extend:DI (reg:SI 147))) "BOUND.f":60 -1
     (nil))
(insn 68 67 69 8 (parallel [
            (set (reg:DI 97 [ _11 ])
                (plus:DI (reg:DI 95 [ _9 ])
                    (reg:DI 96 [ _10 ])))
            (clobber (reg:CC 17 flags))
        ]) "BOUND.f":60 -1
     (nil))
(insn 69 68 70 8 (set (reg/f:DI 148)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [3 fld+0 S8 A64])) "BOUND.f":60 -1
     (nil))
(insn 70 69 71 8 (set (reg:SF 133 [ _63 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 97 [ _11 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 148)) [7 *fld_62(D) S4 A32])) "BOUND.f":60 -1
     (nil))
(insn 71 70 72 8 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 133 [ _63 ])
            (reg:SF 119 [ M.5_35 ]))) "BOUND.f":60 -1
     (nil))
(insn 72 71 73 8 (set (reg:QI 149)
        (gt:QI (reg:CCFP 17 flags)
            (const_int 0 [0]))) "BOUND.f":60 -1
     (nil))
(insn 73 72 74 8 (set (reg:SI 98 [ _12 ])
        (zero_extend:SI (reg:QI 149))) "BOUND.f":60 -1
     (nil))
(insn 74 73 75 8 (set (reg:CCFP 17 flags)
        (unspec:CCFP [
                (compare:CCFP (reg:SF 119 [ M.5_35 ])
                    (reg:SF 119 [ M.5_35 ]))
            ] UNSPEC_NOTRAP)) "BOUND.f":60 -1
     (nil))
(insn 75 74 76 8 (set (reg:QI 150)
        (unordered:QI (reg:CCFP 17 flags)
            (const_int 0 [0]))) "BOUND.f":60 -1
     (nil))
(insn 76 75 77 8 (set (reg:SI 99 [ _13 ])
        (zero_extend:SI (reg:QI 150))) "BOUND.f":60 -1
     (nil))
(insn 77 76 78 8 (parallel [
            (set (reg:SI 100 [ _14 ])
                (ior:SI (reg:SI 98 [ _12 ])
                    (reg:SI 99 [ _13 ])))
            (clobber (reg:CC 17 flags))
        ]) "BOUND.f":60 -1
     (nil))
(insn 78 77 79 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 100 [ _14 ])
            (const_int 0 [0]))) "BOUND.f":60 -1
     (nil))
(jump_insn 79 78 80 8 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 81)
            (pc))) "BOUND.f":60 -1
     (nil)
 -> 81)
;;  succ:       9 (FALLTHRU)
;;              10

;; basic block 9, loop depth 2, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
(note 80 79 8 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 8 80 81 9 (set (reg:SF 119 [ M.5_35 ])
        (reg:SF 133 [ _63 ])) "BOUND.f":60 -1
     (nil))
;;  succ:       10 (FALLTHRU)

;; basic block 10, loop depth 2, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL)
;;  pred:       8
;;              9 (FALLTHRU)
(code_label 81 8 82 10 5 (nil) [1 uses])
(note 82 81 83 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 83 82 84 10 (set (reg:SI 151)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "BOUND.f":60 -1
     (nil))
(insn 84 83 85 10 (set (reg:DI 101 [ _15 ])
        (sign_extend:DI (reg:SI 151))) "BOUND.f":60 -1
     (nil))
(insn 85 84 86 10 (parallel [
            (set (reg:DI 102 [ _16 ])
                (mult:DI (reg:DI 122 [ stride.2_44 ])
                    (reg:DI 101 [ _15 ])))
            (clobber (reg:CC 17 flags))
        ]) "BOUND.f":60 -1
     (nil))
(insn 86 85 87 10 (parallel [
            (set (reg:DI 103 [ _17 ])
                (plus:DI (reg:DI 128 [ offset.3_52 ])
                    (reg:DI 102 [ _16 ])))
            (clobber (reg:CC 17 flags))
        ]) "BOUND.f":60 -1
     (nil))
(insn 87 86 88 10 (set (reg:SI 152)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "BOUND.f":60 -1
     (nil))
(insn 88 87 89 10 (set (reg:DI 104 [ _18 ])
        (sign_extend:DI (reg:SI 152))) "BOUND.f":60 -1
     (nil))
(insn 89 88 90 10 (parallel [
            (set (reg:DI 105 [ _19 ])
                (plus:DI (reg:DI 103 [ _17 ])
                    (reg:DI 104 [ _18 ])))
            (clobber (reg:CC 17 flags))
        ]) "BOUND.f":60 -1
     (nil))
(insn 90 89 91 10 (set (reg/f:DI 153)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [3 fld+0 S8 A64])) "BOUND.f":60 -1
     (nil))
(insn 91 90 92 10 (set (mem:SF (plus:DI (mult:DI (reg:DI 105 [ _19 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 153)) [7 *fld_62(D) S4 A32])
        (reg:SF 119 [ M.5_35 ])) "BOUND.f":60 -1
     (nil))
(insn 92 91 93 10 (set (reg:SI 154)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "BOUND.f":61 -1
     (nil))
(insn 93 92 94 10 (set (reg:DI 106 [ _20 ])
        (sign_extend:DI (reg:SI 154))) "BOUND.f":61 -1
     (nil))
(insn 94 93 95 10 (parallel [
            (set (reg:DI 107 [ _21 ])
                (mult:DI (reg:DI 122 [ stride.2_44 ])
                    (reg:DI 106 [ _20 ])))
            (clobber (reg:CC 17 flags))
        ]) "BOUND.f":61 -1
     (nil))
(insn 95 94 96 10 (parallel [
            (set (reg:DI 108 [ _22 ])
                (plus:DI (reg:DI 128 [ offset.3_52 ])
                    (reg:DI 107 [ _21 ])))
            (clobber (reg:CC 17 flags))
        ]) "BOUND.f":61 -1
     (nil))
(insn 96 95 97 10 (set (reg:SI 155)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "BOUND.f":61 -1
     (nil))
(insn 97 96 98 10 (set (reg:DI 109 [ _23 ])
        (sign_extend:DI (reg:SI 155))) "BOUND.f":61 -1
     (nil))
(insn 98 97 99 10 (parallel [
            (set (reg:DI 110 [ _24 ])
                (plus:DI (reg:DI 108 [ _22 ])
                    (reg:DI 109 [ _23 ])))
            (clobber (reg:CC 17 flags))
        ]) "BOUND.f":61 -1
     (nil))
(insn 99 98 100 10 (set (reg/f:DI 156)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [3 fld+0 S8 A64])) "BOUND.f":61 -1
     (nil))
(insn 100 99 101 10 (set (reg:SF 120 [ M.6_36 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 110 [ _24 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 156)) [7 *fld_62(D) S4 A32])) "BOUND.f":61 -1
     (nil))
(insn 101 100 102 10 (set (reg/f:DI 157)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -56 [0xffffffffffffffc8])) [4 fmax+0 S8 A64])) "BOUND.f":61 -1
     (nil))
(insn 102 101 103 10 (set (reg:SF 134 [ _69 ])
        (mem:SF (reg/f:DI 157) [7 *fmax_68(D)+0 S4 A32])) "BOUND.f":61 -1
     (nil))
(insn 103 102 104 10 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 120 [ M.6_36 ])
            (reg:SF 134 [ _69 ]))) "BOUND.f":61 -1
     (nil))
(insn 104 103 105 10 (set (reg:QI 159)
        (gt:QI (reg:CCFP 17 flags)
            (const_int 0 [0]))) "BOUND.f":61 -1
     (nil))
(insn 105 104 106 10 (set (reg:SI 111 [ _25 ])
        (zero_extend:SI (reg:QI 159))) "BOUND.f":61 -1
     (nil))
(insn 106 105 107 10 (set (reg:CCFP 17 flags)
        (unspec:CCFP [
                (compare:CCFP (reg:SF 120 [ M.6_36 ])
                    (reg:SF 120 [ M.6_36 ]))
            ] UNSPEC_NOTRAP)) "BOUND.f":61 -1
     (nil))
(insn 107 106 108 10 (set (reg:QI 160)
        (unordered:QI (reg:CCFP 17 flags)
            (const_int 0 [0]))) "BOUND.f":61 -1
     (nil))
(insn 108 107 109 10 (set (reg:SI 112 [ _26 ])
        (zero_extend:SI (reg:QI 160))) "BOUND.f":61 -1
     (nil))
(insn 109 108 110 10 (parallel [
            (set (reg:SI 113 [ _27 ])
                (ior:SI (reg:SI 111 [ _25 ])
                    (reg:SI 112 [ _26 ])))
            (clobber (reg:CC 17 flags))
        ]) "BOUND.f":61 -1
     (nil))
(insn 110 109 111 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 113 [ _27 ])
            (const_int 0 [0]))) "BOUND.f":61 -1
     (nil))
(jump_insn 111 110 112 10 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 113)
            (pc))) "BOUND.f":61 -1
     (nil)
 -> 113)
;;  succ:       11 (FALLTHRU)
;;              12

;; basic block 11, loop depth 2, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10 (FALLTHRU)
(note 112 111 9 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 9 112 113 11 (set (reg:SF 120 [ M.6_36 ])
        (reg:SF 134 [ _69 ])) "BOUND.f":61 -1
     (nil))
;;  succ:       12 (FALLTHRU)

;; basic block 12, loop depth 2, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL)
;;  pred:       10
;;              11 (FALLTHRU)
(code_label 113 9 114 12 6 (nil) [1 uses])
(note 114 113 115 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 115 114 116 12 (set (reg:SI 161)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "BOUND.f":61 -1
     (nil))
(insn 116 115 117 12 (set (reg:DI 114 [ _28 ])
        (sign_extend:DI (reg:SI 161))) "BOUND.f":61 -1
     (nil))
(insn 117 116 118 12 (parallel [
            (set (reg:DI 115 [ _29 ])
                (mult:DI (reg:DI 122 [ stride.2_44 ])
                    (reg:DI 114 [ _28 ])))
            (clobber (reg:CC 17 flags))
        ]) "BOUND.f":61 -1
     (nil))
(insn 118 117 119 12 (parallel [
            (set (reg:DI 116 [ _30 ])
                (plus:DI (reg:DI 128 [ offset.3_52 ])
                    (reg:DI 115 [ _29 ])))
            (clobber (reg:CC 17 flags))
        ]) "BOUND.f":61 -1
     (nil))
(insn 119 118 120 12 (set (reg:SI 162)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "BOUND.f":61 -1
     (nil))
(insn 120 119 121 12 (set (reg:DI 117 [ _31 ])
        (sign_extend:DI (reg:SI 162))) "BOUND.f":61 -1
     (nil))
(insn 121 120 122 12 (parallel [
            (set (reg:DI 118 [ _32 ])
                (plus:DI (reg:DI 116 [ _30 ])
                    (reg:DI 117 [ _31 ])))
            (clobber (reg:CC 17 flags))
        ]) "BOUND.f":61 -1
     (nil))
(insn 122 121 123 12 (set (reg/f:DI 163)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -40 [0xffffffffffffffd8])) [3 fld+0 S8 A64])) "BOUND.f":61 -1
     (nil))
(insn 123 122 124 12 (set (mem:SF (plus:DI (mult:DI (reg:DI 118 [ _32 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 163)) [7 *fld_62(D) S4 A32])
        (reg:SF 120 [ M.6_36 ])) "BOUND.f":61 -1
     (nil))
(insn 124 123 126 12 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "BOUND.f":59 -1
     (nil))
(jump_insn 126 124 127 12 (set (pc)
        (label_ref 125)) "BOUND.f":59 -1
     (nil)
 -> 125)
;;  succ:       7 (DFS_BACK)

(barrier 127 126 128)
;; basic block 13, loop depth 1, maybe hot
;;  prev block 12, next block 15, flags: (NEW, REACHABLE, RTL)
;;  pred:       7
(code_label 128 127 129 13 4 (nil) [1 uses])
(note 129 128 130 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 130 129 132 13 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "BOUND.f":58 -1
     (nil))
(jump_insn 132 130 133 13 (set (pc)
        (label_ref 131)) "BOUND.f":58 -1
     (nil)
 -> 131)
;;  succ:       5 (DFS_BACK)

(barrier 133 132 136)
;; basic block 15, loop depth 0, maybe hot
;;  prev block 13, next block 17, flags: (NEW, REACHABLE, RTL)
;;  pred:       5
(code_label 136 133 137 15 2 (nil) [1 uses])
(note 137 136 142 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 142 137 140 15 (const_int 0 [0]) "BOUND.f":69 -1
     (nil))
;;  succ:       17 (FALLTHRU)

;; basic block 17, loop depth 0, maybe hot
;;  prev block 15, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       15 (FALLTHRU)
;;              2
(code_label 140 142 141 17 1 (nil) [1 uses])
(note 141 140 0 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [always]  (FALLTHRU)

