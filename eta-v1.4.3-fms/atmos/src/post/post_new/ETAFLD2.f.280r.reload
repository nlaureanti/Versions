
;; Function etafld2 (etafld2_, funcdef_no=0, decl_uid=3768, cgraph_uid=0, symbol_order=0)

      Creating newreg=2981
Removing SCRATCH in insn #522 (nop 3)
rescanning insn with uid = 522.
      Creating newreg=2982
Removing SCRATCH in insn #530 (nop 3)
rescanning insn with uid = 530.

********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=848, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 20 to 7 (offset=800, prev_offset=0)
Can eliminate 20 to 6 (offset=-32, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 3:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 7:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 8:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 10:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 11:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 13:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (0) r {*cmpdi_ccno_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 14:  (0) r  (2) 0  (3) rm {*movdicc_noc}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 15:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 16:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 17:  (0) r  (1) rm {*extendsidi2_rex64}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 18:  (0) m  (1) re {*movdi_internal}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 2 in insn 19:  (0) r  (1) 0  (2) mr {*muldi3_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 21:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 20:  (0) r {*cmpdi_ccno_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 22:  (0) r  (2) 0  (3) rm {*movdicc_noc}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 25:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 26:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 30:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 33:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 32:  (0) r {*cmpdi_ccno_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 34:  (0) r  (2) 0  (3) rm {*movdicc_noc}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 36:  (1) rBwBz {*call_value}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 39:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 41:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 42:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 43:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 44:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 45:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 47:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 46:  (0) r {*cmpdi_ccno_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 48:  (0) r  (2) 0  (3) rm {*movdicc_noc}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 49:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 50:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 51:  (0) r  (1) rm {*extendsidi2_rex64}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 52:  (0) m  (1) re {*movdi_internal}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 2 in insn 53:  (0) r  (1) 0  (2) mr {*muldi3_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 55:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 54:  (0) r {*cmpdi_ccno_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 56:  (0) r  (2) 0  (3) rm {*movdicc_noc}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 59:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 60:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 64:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 67:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 66:  (0) r {*cmpdi_ccno_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 68:  (0) r  (2) 0  (3) rm {*movdicc_noc}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 70:  (1) rBwBz {*call_value}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 73:  (0) m  (1) re {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 75:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 76:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 77:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 78:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 79:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 80:  (0) v  (1) r {*floatsisf2_mixed}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 81:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 82
	 Choosing alt 1 in insn 82:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 83:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 84:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 85:  (0) v  (1) vm {*cmpisf}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 91:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 92:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 97:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 98:  (0) v  (1) vm {*cmpisf}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 104:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 105:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 107:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 108:  (0) x  (1) 0  (2) xm {*fop_sf_1}
          alt=2,overall=6,losers=1,rld_nregs=1
	 Choosing alt 2 in insn 110:  (0) x  (1) 0  (2) xm {*fop_sf_1}
      Creating newreg=2983 from oldreg=107, assigning class SSE_REGS to r2983
  110: r2983:SF=r2983:SF/r109:SF
      REG_DEAD r109:SF
      REG_DEAD r107:SF
    Inserting insn reload before:
 5822: r2983:SF=r107:SF
    Inserting insn reload after:
 5823: r1766:SF=r2983:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 111:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 116:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 117:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 120:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 121:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 124:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 125:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 126:  (0) =<  (1) re*m {*pushdi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 127:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-8)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 130:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 131:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 132:  (0) r  (1) Z {*movdi_internal} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 133:  (0) r  (1) Z {*movdi_internal} (sp_off=-16)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 134:  (0) q  (1) n {*movqi_internal} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 135:  (0) rBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 136:  (0) =r  (1) %0  (2) rme {*adddi_1} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 137:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 138:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 139:  (0) r  (1) Z {*movdi_internal}
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            3 Small class reload: reject+=3
          alt=0,overall=19,losers=2,rld_nregs=2
	 Choosing alt 0 in insn 140:  (0) =D  (1) =c  (2) a  (3) 0  (4) 1 {*rep_stosdi_rex64}
      Creating newreg=2984 from oldreg=1770, assigning class DIREG to r2984
  140: {r1772:DI=0;r2984:DI=r1772:DI<<0x3+r2984:DI;[r2984:DI]=0;use r1771:DI;use r1772:DI;}
      REG_UNUSED r1772:DI
    Inserting insn reload before:
 5824: r2984:DI=r1770:DI
    Inserting insn reload after:
 5825: r1770:DI=r2984:DI

            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 141:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 142:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 143:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 144:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 145:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 147:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 149:  (0) =rm  (1) 0  (2) re {*subdi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 150:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 153:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 154:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 155:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 156:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 157:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 158:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 163:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 164:  (0) r  (1) Z {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 165:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 166:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 169:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 170:  (0) r {*cmpsi_ccno_1}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 173:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 174:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 175:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 176:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 177:  (0) =<  (1) re*m {*pushdi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 178:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-8)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 181:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 182:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 183:  (0) r  (1) Z {*movdi_internal} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 184:  (0) r  (1) Z {*movdi_internal} (sp_off=-16)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 185:  (0) q  (1) n {*movqi_internal} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 186:  (0) rBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 187:  (0) =r  (1) %0  (2) rme {*adddi_1} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 188:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 189:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 190:  (0) r  (1) Z {*movdi_internal}
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            3 Small class reload: reject+=3
          alt=0,overall=19,losers=2,rld_nregs=2
	 Choosing alt 0 in insn 191:  (0) =D  (1) =c  (2) a  (3) 0  (4) 1 {*rep_stosdi_rex64}
      Creating newreg=2985 from oldreg=1783, assigning class DIREG to r2985
  191: {r1785:DI=0;r2985:DI=r1785:DI<<0x3+r2985:DI;[r2985:DI]=0;use r1784:DI;use r1785:DI;}
      REG_UNUSED r1785:DI
    Inserting insn reload before:
 5826: r2985:DI=r1783:DI
    Inserting insn reload after:
 5827: r1783:DI=r2985:DI

            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 192:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 193:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 194:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 195:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 196:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 197:  (0) m  (1) re {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 198:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 200:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 201:  (0) r  (1) r  (2) le {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 202:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 203:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 205:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 206:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 208:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 209:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 210:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 211:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 213:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 215:  (0) =rm  (1) 0  (2) re {*subdi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 216:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 219:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 220:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 221:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 222:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 223:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 224:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 229:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 230:  (0) r  (1) Z {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 231:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 232:  (0) rBwBz {*call}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 235:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 236:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 237:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 238:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 239:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 241:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 242:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 243:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 244:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 247:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 249:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 250:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 251:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 252:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 255:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 256:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 257:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 258:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 259:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 260
	 Choosing alt 0 in insn 260:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 261:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 262:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 263:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 264:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 265:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 266:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 267:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 268:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 269:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 270
	 Choosing alt 0 in insn 270:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 271:  (0) r  (1) r  (2) le {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 272:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 273
	 Choosing alt 1 in insn 273:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 274:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 275:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 276:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 277:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 278:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 279:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 280:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 281:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 282
	 Choosing alt 0 in insn 282:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 283:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 284:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 285:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 286:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 287:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 288:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 289
	 Choosing alt 0 in insn 289:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 290:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 291:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 292:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 293:  (0) v  (1) m {*movsf_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 294:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 295:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 296:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 302:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 308:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 310:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 311:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 312:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 313:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 314:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 317:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 318:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 319:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 321:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 322:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 323:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 324:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 327:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 329:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 330:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 331:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 332:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 335:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 336:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 337:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 338:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 339:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 340:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 341:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 342:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 343:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 344
	 Choosing alt 0 in insn 344:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 345:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 346:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 347:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 348:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 349:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 350:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 351:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 352:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 353:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 354:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 355:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 356:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 357:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 358
	 Choosing alt 0 in insn 358:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 359:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 360:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 361:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 362:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 363
	 Choosing alt 1 in insn 363:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 364:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 365:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 366:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 367:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 368:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 369:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 370:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 371:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 372:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 373
	 Choosing alt 0 in insn 373:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 374:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 375:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 376:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 377:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 378:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 379:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 380:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 381
	 Choosing alt 1 in insn 381:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 383
	 Choosing alt 1 in insn 383:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 384:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 385:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 386:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 387:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 388:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 389:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 390:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 391:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 392:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 393:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 394:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 395:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 396:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 397
	 Choosing alt 0 in insn 397:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 398:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 399:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 400:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 401:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 402:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 403:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 404:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 405:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 406:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 407:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 408:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 409:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 410:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 411
	 Choosing alt 0 in insn 411:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 412:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 413:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 414:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 415:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 416:  (0) x  (1) 0  (2) xm {*fop_sf_1}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 418:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 419:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 420:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 421:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 422:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 423:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 424
	 Choosing alt 0 in insn 424:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 425:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 426:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 427:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 428:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 429:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 430:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 431:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 432:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 433
	 Choosing alt 0 in insn 433:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 434:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 435
	 Choosing alt 1 in insn 435:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 436:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 437:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 438:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 439:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 440:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 441:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 442:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 443
	 Choosing alt 0 in insn 443:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 444:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 445:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 446:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 447:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 448:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 449:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 450:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 451:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 452:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 453:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 454:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 455:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 456
	 Choosing alt 0 in insn 456:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 457:  (0) r  (1) r  (2) le {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 458:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 459
	 Choosing alt 1 in insn 459:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 460:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 461:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 462:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 463:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 464:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 465:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 466:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 467:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 468
	 Choosing alt 0 in insn 468:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 469:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 470:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 471:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 472:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 473:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 474:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 475
	 Choosing alt 0 in insn 475:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 476:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 477:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 478:  (0) v  (1) m {*movsf_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 479:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 480:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 481:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 487:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 493:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 494:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 495:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 501:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 502:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 503:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 504:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 505:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 507:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 508:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 509:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 510:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 513:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 514:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 515:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 516:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 517:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 518:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 519:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 520:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 521:  (0) =r  (1) g {*movsi_internal}
            1 Small class reload: reject+=3
            3 Matching alt: reject+=2
            3 Super set class reg: reject-=3
            3 Small class reload: reject+=3
            3 Non input pseudo reload: reject++
          alt=0,overall=24,losers=3,rld_nregs=2
            1 Small class reload: reject+=3
            3 Matching alt: reject+=2
            3 Super set class reg: reject-=3
            3 Small class reload: reject+=3
            3 Non input pseudo reload: reject++
          alt=0,overall=24,losers=3,rld_nregs=2
	 Choosing alt 0 in insn 522:  (0) =d  (1) %a  (2) rm  (3) =1 {*smulsi3_highpart_1}
      Creating newreg=2986 from oldreg=2981, assigning class AREG to r2986
  522: {r1870:SI=trunc(sign_extend(r2986:SI)*sign_extend(r1871:SI) 0>>0x20);clobber r2986:SI;clobber flags:CC;}
      REG_UNUSED r2981:SI
      REG_DEAD r1871:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
 5828: r2986:SI=r1869:SI

          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            alt=0,overall=8,losers=1 -- refuse
            1 Matching alt: reject+=2
            alt=1,overall=8,losers=1 -- refuse
            alt=2,overall=6,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 523:  (0) r  (1) r  (2) le {*addsi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 524:  (0) =rm  (1) 0  (2) cI {*ashrsi3_1}
      Creating newreg=2987 from oldreg=1872, assigning class GENERAL_REGS to r2987
  524: {r2987:SI=r2987:SI>>0x7;clobber flags:CC;}
      REG_DEAD r1872:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
 5829: r2987:SI=r1872:SI
    Inserting insn reload after:
 5830: r1873:SI=r2987:SI

            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Small class reload: reject+=3
          alt=0,overall=21,losers=2,rld_nregs=2
          alt=1,overall=6,losers=1,rld_nregs=1
	 Choosing alt 1 in insn 525:  (0) rm  (1) 0 {ashrsi3_cvt}
      Creating newreg=2988 from oldreg=1869, assigning class GENERAL_REGS to r2988
  525: {r2988:SI=r2988:SI>>0x1f;clobber flags:CC;}
      REG_DEAD r1869:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
 5831: r2988:SI=r1869:SI
    Inserting insn reload after:
 5832: r1874:SI=r2988:SI

          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 526:  (0) =rm  (1) 0  (2) re {*subsi_1}
      Creating newreg=2989 from oldreg=1873, assigning class GENERAL_REGS to r2989
  526: {r2989:SI=r2989:SI-r1874:SI;clobber flags:CC;}
      REG_DEAD r1874:SI
      REG_DEAD r1873:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
 5833: r2989:SI=r1873:SI
    Inserting insn reload after:
 5834: r1868:SI=r2989:SI

            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 527:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 528:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 529:  (0) =r  (1) g {*movsi_internal}
            1 Small class reload: reject+=3
            3 Matching alt: reject+=2
            3 Super set class reg: reject-=3
            3 Small class reload: reject+=3
            3 Non input pseudo reload: reject++
          alt=0,overall=24,losers=3,rld_nregs=2
            1 Small class reload: reject+=3
            3 Matching alt: reject+=2
            3 Super set class reg: reject-=3
            3 Small class reload: reject+=3
            3 Non input pseudo reload: reject++
          alt=0,overall=24,losers=3,rld_nregs=2
	 Choosing alt 0 in insn 530:  (0) =d  (1) %a  (2) rm  (3) =1 {*smulsi3_highpart_1}
      Creating newreg=2990 from oldreg=2982, assigning class AREG to r2990
  530: {r1877:SI=trunc(sign_extend(r2990:SI)*sign_extend(r1878:SI) 0>>0x20);clobber r2990:SI;clobber flags:CC;}
      REG_UNUSED r2982:SI
      REG_DEAD r1878:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
 5835: r2990:SI=r1876:SI

          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            alt=0,overall=8,losers=1 -- refuse
            1 Matching alt: reject+=2
            alt=1,overall=8,losers=1 -- refuse
            alt=2,overall=6,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 531:  (0) r  (1) r  (2) le {*addsi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 532:  (0) =rm  (1) 0  (2) cI {*ashrsi3_1}
      Creating newreg=2991 from oldreg=1879, assigning class GENERAL_REGS to r2991
  532: {r2991:SI=r2991:SI>>0x7;clobber flags:CC;}
      REG_DEAD r1879:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
 5836: r2991:SI=r1879:SI
    Inserting insn reload after:
 5837: r1880:SI=r2991:SI

            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Small class reload: reject+=3
          alt=0,overall=21,losers=2,rld_nregs=2
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
	 Choosing alt 1 in insn 533:  (0) rm  (1) 0 {ashrsi3_cvt}
      Creating newreg=2992 from oldreg=1881, assigning class GENERAL_REGS to r2992
  533: {r2992:SI=r2992:SI>>0x1f;clobber flags:CC;}
      REG_UNUSED flags:CC
    Inserting insn reload before:
 5838: r2992:SI=r1876:SI
    Inserting insn reload after:
 5839: r1881:SI=r2992:SI

          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 534:  (0) =rm  (1) 0  (2) re {*subsi_1}
      Creating newreg=2993 from oldreg=1880, assigning class GENERAL_REGS to r2993
  534: {r2993:SI=r2993:SI-r1881:SI;clobber flags:CC;}
      REG_DEAD r1881:SI
      REG_DEAD r1880:SI
      REG_UNUSED flags:CC
      REG_EQUAL r1876:SI/0xed
    Inserting insn reload before:
 5840: r2993:SI=r1880:SI
    Inserting insn reload after:
 5841: r1875:SI=r2993:SI

            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 535:  (0) r  (1) rm  (2) e {*mulsi3_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 536:  (0) =rm  (1) 0  (2) re {*subsi_1}
      Creating newreg=2994 from oldreg=1876, assigning class GENERAL_REGS to r2994
  536: {r2994:SI=r2994:SI-r1882:SI;clobber flags:CC;}
      REG_DEAD r1882:SI
      REG_DEAD r1876:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
 5842: r2994:SI=r1876:SI
    Inserting insn reload after:
 5843: r1883:SI=r2994:SI

            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 537:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 538:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 541:  (0) =r  (1) g {*movsi_internal}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 542:  (0) r  (1) rm  (2) e {*mulsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 543:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 544
	 Choosing alt 0 in insn 544:  (0) =r  (1) %0  (2) rme {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 545:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 546:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 547:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 552:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 555:  (0) =r  (1) g {*movsi_internal}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 556:  (0) r  (1) rm  (2) e {*mulsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 560:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 561
	 Choosing alt 0 in insn 561:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 562:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 563:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 568:  (0) ?mr {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 571:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 572:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 575:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 576:  (0) r  (1) l  (2) M {*ashlsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 580:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 581
	 Choosing alt 0 in insn 581:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 582:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 583:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 584:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 585:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 586:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 587:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 588
	 Choosing alt 0 in insn 588:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 589:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 590:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 591:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 592:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 593:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 594:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 595:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 596:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 598:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 599:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 600:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 601:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 602:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 605:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 606:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 607:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 608:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 609:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 610:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 611:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 612:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 613:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 614:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 615:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 616:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 617:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 618:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 619:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 620:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 621:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 622
	 Choosing alt 0 in insn 622:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 623:  (0) r  (1) r  (2) le {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 624:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 625
	 Choosing alt 1 in insn 625:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 626:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 627:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 628:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 629:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 630:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 631:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 637:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 643:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 645:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 646:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 647:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 648:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 649:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 652:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 653:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 654:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 656:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 657:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 658:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 659:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 662:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 664:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 665:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 666:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 667:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 670:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 671:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 672:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 673:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 674:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 675:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 676:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 677:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 678:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 679:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 680
	 Choosing alt 0 in insn 680:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 681:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 682:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 683:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 684:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 685:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 686:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 687:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 688:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 689:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 690:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 691:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 692:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 693
	 Choosing alt 0 in insn 693:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 694:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 695:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 696:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 697
	 Choosing alt 1 in insn 697:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 699:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 700:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 701:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 702:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 703:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 704:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 705:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 706:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 707:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 708
	 Choosing alt 0 in insn 708:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 709:  (0) r  (1) r  (2) le {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 710:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 711
	 Choosing alt 1 in insn 711:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 712:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 713:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 714:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 715:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 716:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 717:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 718:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 719:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 720:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 721:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 722:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 723:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 724
	 Choosing alt 0 in insn 724:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 725:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 726:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 727:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 728:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 729:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 730:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 731:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 732:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 733:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 734:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 735:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 736:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 737:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 738
	 Choosing alt 0 in insn 738:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 739:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 740:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 741:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 742:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 743
	 Choosing alt 1 in insn 743:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 745:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 746:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 747:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 748:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 749:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 750:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 751:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 752:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 753:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 754
	 Choosing alt 0 in insn 754:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 755:  (0) r  (1) r  (2) le {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 756:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 757
	 Choosing alt 1 in insn 757:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 758:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 759:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 760:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 766:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 772:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 773:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 774:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 780:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 781:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 782:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 785:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 786:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 789:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 790:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 793:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 794:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 797:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 798:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 801:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 802:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 805:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 806:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 809:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 810:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 813:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 814:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 817:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 818:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 821:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 822:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 825:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 826:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 829:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 830:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 833:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 834:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 837:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 838:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 841:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 842:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 845:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 846:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 849:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 850:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 853:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 854:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 857:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 858:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 861:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 862:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 865:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 866:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 869:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 870:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 874:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 875:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 878:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 879:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 882:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 883:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 886:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 887:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 890:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 891:  (0) r {*cmpsi_ccno_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 895:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 896:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 897:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 898:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 899:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 901:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 902:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 903:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 904:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 907:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 909:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 910:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 911:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 912:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 915:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 916:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 917:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 918:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 919:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 920
	 Choosing alt 0 in insn 920:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 921:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 922:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 923:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 924:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 925:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 931:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 937:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 939:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 940:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 941:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 942:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 943:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 946:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 947:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 948:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 950:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 951:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 952:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 953:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 956:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 958:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 959:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 960:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 961:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 964:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 965:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 966:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 967:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 968:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 969
	 Choosing alt 0 in insn 969:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 970:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 971:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 972:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 973:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 974:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 975:  (0) =rm  (1) 0  (2) re {*subsi_1}
      Creating newreg=2995 from oldreg=1949, assigning class GENERAL_REGS to r2995
  975: {r2995:SI=r2995:SI-r387:SI;clobber flags:CC;}
      REG_DEAD r1949:SI
      REG_DEAD r387:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
 5844: r2995:SI=r1949:SI
    Inserting insn reload after:
 5845: r1950:SI=r2995:SI

            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 976:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 977:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 978:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 979:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 980:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 981:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 982:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 983:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 984:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 985:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 986
	 Choosing alt 0 in insn 986:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 987:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 988:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 989:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 990:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 991:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 992:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 993:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 994:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 995:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 996
	 Choosing alt 0 in insn 996:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 997:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 998:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 999:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1000
	 Choosing alt 1 in insn 1000:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1001:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1002:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1003:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1004:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1005:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1006:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1007:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1008:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1009:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1010:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1011
	 Choosing alt 0 in insn 1011:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1012:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1013:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1014:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1015:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1016:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1017:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1018:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1019:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1020:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1021:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1022:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1023:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1024:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1025:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1026
	 Choosing alt 0 in insn 1026:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1027:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1028:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1029:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1030:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1031:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1032:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1033:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1034:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1035:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1036:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1037:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1038:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1039:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1040:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1041
	 Choosing alt 0 in insn 1041:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1042:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1043:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1044:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1045:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1046:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1047:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1048:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1050:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 1051:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1052:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1053:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1054:  (0) v  (1) vm {*cmpisf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1055:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1056:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1057:  (0) v  (1) vm {*cmpiusf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1058:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1059:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1060
	 Choosing alt 0 in insn 1060:  (0) =r  (1) %0  (2) rme {*iorsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1061:  (0) r {*cmpsi_ccno_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1064:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1067:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1068:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1069:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1070:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1071:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1072:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1073:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1074
	 Choosing alt 0 in insn 1074:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1075:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1076:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1077:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1078:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1079:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1080:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1081:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1082:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1083:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1084:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 1085:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1086:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1087:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1088
	 Choosing alt 1 in insn 1088:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1089:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1090:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1091:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1092
	 Choosing alt 1 in insn 1092:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
          alt=2,overall=8,losers=1,rld_nregs=2
	 Choosing alt 2 in insn 1093:  (0) x  (1) 0  (2) xm {*fop_sf_1}
      Creating newreg=2996 from oldreg=448, assigning class SSE_REGS to r2996
 1093: r2996:SF=r2996:SF/[frame:DI-0xb4]
      REG_DEAD r448:SF
    Inserting insn reload before:
 5846: r2996:SF=r448:SF
    Inserting insn reload after:
 5847: r449:SF=r2996:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1221,losers=3,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=614,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=3,overall=1219,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non pseudo reload: reject++
            1 Non-prefered reload: reject+=600
          alt=4,overall=613,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=7,overall=616,losers=2,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=8,overall=2,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 5847:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1094:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1095:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 1096:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1097:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1098:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1099:  (0) x  (1) 0  (2) xm {*fop_sf_1}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1101
	 Choosing alt 1 in insn 1101:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1102:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1103:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1104:  (0) x  (1) 0  (2) xm {*fop_sf_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1106:  (0) x  (1) 0  (2) xm {*fop_sf_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1108:  (1) rBwBz {*call_value}
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1110
	 Choosing alt 1 in insn 1110:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=2997 from oldreg=449, assigning class SSE_REGS to r2997
      Making reload reg 2997 for reg 449 optional
 1110: r1996:SF=r457:SF*r2997:SF
      REG_DEAD r457:SF
      REG_DEAD r449:SF
    Inserting insn reload before:
 5848: r2997:SF=r449:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=615,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            alt=1,overall=617,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=4,overall=622,losers=2 -- refuse
            0 Non pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=7,overall=2,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 5848:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1111:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1112:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1113:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1114:  (0) v  (1) vm {*cmpisf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1115:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1116:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1117:  (0) v  (1) vm {*cmpiusf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1118:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1119:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1120
	 Choosing alt 0 in insn 1120:  (0) =r  (1) %0  (2) rme {*iorsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1121:  (0) r {*cmpsi_ccno_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1124:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1127:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1128
	 Choosing alt 1 in insn 1128:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1129:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1130
	 Choosing alt 1 in insn 1130:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1132:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1133:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1134:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1135:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1136:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1137
	 Choosing alt 0 in insn 1137:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1138:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1139:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1140:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1141:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1142:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1143:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1144:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1145:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1146:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1147
	 Choosing alt 0 in insn 1147:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1148:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1149:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1150:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1151:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1152:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1153:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1154
	 Choosing alt 0 in insn 1154:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1155:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1156:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1157:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1158:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1159:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1160:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1161:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1162:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1163:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1164:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1165
	 Choosing alt 0 in insn 1165:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1166:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1167:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1168:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1169:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1170:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1171:  (0) x  (1) 0  (2) xm {*fop_sf_1}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1173
	 Choosing alt 1 in insn 1173:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1174:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1175
	 Choosing alt 1 in insn 1175:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1176:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1177:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1178:  (0) v  (1) vm {*cmpisf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1184:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1185:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1186:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1187:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1188:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1189
	 Choosing alt 0 in insn 1189:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1190:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1191:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1192:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1193:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=2998 from oldreg=496, assigning class SSE_REGS to r2998
 1193: r2998:SF=r2998:SF*[frame:DI-0xbc]
      REG_DEAD r496:SF
    Inserting insn reload before:
 5849: r2998:SF=r496:SF
    Inserting insn reload after:
 5850: r497:SF=r2998:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1194:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1195:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1196:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1197:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1198:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1199:  (0) v  (1) vm {*cmpisf}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1202:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1203:  (0) v  (1) vm {*cmpisf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1210:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1211:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1212:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1213:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1214:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1215:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1216:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1217:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1218:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1219
	 Choosing alt 0 in insn 1219:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1220:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1221:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1222:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1223:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1228:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1229:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1230:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1231:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1232:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1233:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1234:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1235:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1236:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1237
	 Choosing alt 0 in insn 1237:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1238:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1239:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1240:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1241:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1246:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1247:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1248:  (0) v  (1) vm {*cmpisf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1254:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1255:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1256:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1257:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1258:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1259:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1260:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1261:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1262:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1263
	 Choosing alt 0 in insn 1263:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1264:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1265:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1266:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1267:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1270:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1271:  (0) v  (1) vm {*cmpisf}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1277:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1278:  (0) v  (1) vm {*cmpisf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1284:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1285:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1286:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1287:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1288:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1289:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1290:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1291:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1292:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1293
	 Choosing alt 0 in insn 1293:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1294:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1295:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1296:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1297:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1298:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1299:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1300:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1301:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1302:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1303:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1304:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1305:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1306:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1307:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1308
	 Choosing alt 0 in insn 1308:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1309:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1310:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1311:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1312:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1313:  (0) v  (1) vm {*cmpiusf}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1315:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1316:  (0) v  (1) vm {*cmpiusf}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1322:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1323:  (0) v  (1) vm {*cmpisf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1329:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1330:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1331:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1332:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1333:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1334:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1335:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1336:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1337:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1338
	 Choosing alt 0 in insn 1338:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1339:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1340:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1341:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1342:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 1345:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 1351:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1357:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1358:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1359:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1365:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1367:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1368:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1369:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1370:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1371:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1374:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1375:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1378:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1379:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1381:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1383:  (0) =rm  (1) 0  (2) re {*subdi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1384:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1387:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1388:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1389
	 Choosing alt 0 in insn 1389:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1390:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1391:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1392:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1393:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1396:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1397:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1399:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1401:  (0) =rm  (1) 0  (2) re {*subdi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1402:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1405:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1406:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1407
	 Choosing alt 0 in insn 1407:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1408:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1409:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1410:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1411:  (0) m  (1) re {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1412:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1413:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1414:  (0) r  (1) i {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1415:  (0) r  (1) i {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1418:  (0) r  (1) i {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1419:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1420:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1421:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1422:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1423:  (0) =<  (1) re*m {*pushdi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1424:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-8)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1427:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1428:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1429:  (0) r  (1) Z {*movdi_internal} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1430:  (0) r  (1) Z {*movdi_internal} (sp_off=-16)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1431:  (0) q  (1) n {*movqi_internal} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1432:  (0) rBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1433:  (0) =r  (1) %0  (2) rme {*adddi_1} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1434:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1435:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1436:  (0) r  (1) Z {*movdi_internal}
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            3 Small class reload: reject+=3
          alt=0,overall=19,losers=2,rld_nregs=2
	 Choosing alt 0 in insn 1437:  (0) =D  (1) =c  (2) a  (3) 0  (4) 1 {*rep_stosdi_rex64}
      Creating newreg=2999 from oldreg=2070, assigning class DIREG to r2999
 1437: {r2072:DI=0;r2999:DI=r2072:DI<<0x3+r2999:DI;[r2999:DI]=0;use r2071:DI;use r2072:DI;}
      REG_UNUSED r2072:DI
    Inserting insn reload before:
 5851: r2999:DI=r2070:DI
    Inserting insn reload after:
 5852: r2070:DI=r2999:DI

            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1438:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1439:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1440:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1441:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1442:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1443:  (0) rm  (1) re {*cmpsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1446:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 1449:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1450:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1451:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1452:  (0) m  (1) re {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1453:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1455:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1456:  (0) r  (1) r  (2) le {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1457:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1458:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1460:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1461:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1463:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1464:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1465:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1466:  (0) r  (1) rem {*movdi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1467:  (0) r  (1) r  (2) le {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1472:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1473:  (0) r  (1) Z {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1474:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1475:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1478:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1479:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1482:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1483:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1485:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1487:  (0) =rm  (1) 0  (2) re {*subdi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1488:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1491:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1492:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1493
	 Choosing alt 0 in insn 1493:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1494:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1495:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1496:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1497:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1500:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1501:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1503:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1505:  (0) =rm  (1) 0  (2) re {*subdi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1506:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1509:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1510:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1511
	 Choosing alt 0 in insn 1511:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1512:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1513:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1514:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1515:  (0) m  (1) re {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1516:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1517:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1518:  (0) r  (1) i {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1519:  (0) r  (1) i {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1522:  (0) r  (1) i {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1523:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1524:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1525:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1526:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1527:  (0) =<  (1) re*m {*pushdi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1528:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-8)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1531:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1532:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1533:  (0) r  (1) Z {*movdi_internal} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1534:  (0) r  (1) Z {*movdi_internal} (sp_off=-16)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1535:  (0) q  (1) n {*movqi_internal} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1536:  (0) rBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1537:  (0) =r  (1) %0  (2) rme {*adddi_1} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1538:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1539:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1540:  (0) r  (1) Z {*movdi_internal}
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            3 Small class reload: reject+=3
          alt=0,overall=19,losers=2,rld_nregs=2
	 Choosing alt 0 in insn 1541:  (0) =D  (1) =c  (2) a  (3) 0  (4) 1 {*rep_stosdi_rex64}
      Creating newreg=3000 from oldreg=2092, assigning class DIREG to r3000
 1541: {r2094:DI=0;r3000:DI=r2094:DI<<0x3+r3000:DI;[r3000:DI]=0;use r2093:DI;use r2094:DI;}
      REG_UNUSED r2094:DI
    Inserting insn reload before:
 5853: r3000:DI=r2092:DI
    Inserting insn reload after:
 5854: r2092:DI=r3000:DI

            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1542:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1543:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1544:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1545:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1546:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1547:  (0) rm  (1) re {*cmpsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1550:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 1553:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1554:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1555:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1556:  (0) m  (1) re {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1557:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1559:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1560:  (0) r  (1) r  (2) le {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1561:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1562:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1564:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1565:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1567:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1568:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1569:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1570:  (0) r  (1) rem {*movdi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1571:  (0) r  (1) r  (2) le {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1576:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1577:  (0) r  (1) Z {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1578:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1579:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1582:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1583:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1586:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1587:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1589:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1591:  (0) =rm  (1) 0  (2) re {*subdi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1592:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1595:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1596:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1597
	 Choosing alt 0 in insn 1597:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1598:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1599:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1600:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1601:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1604:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1605:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1607:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1609:  (0) =rm  (1) 0  (2) re {*subdi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1610:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1613:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1614:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1615
	 Choosing alt 0 in insn 1615:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1616:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1617:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1618:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1619:  (0) m  (1) re {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1620:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1621:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1622:  (0) r  (1) i {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1623:  (0) r  (1) i {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1626:  (0) r  (1) i {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1627:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1628:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1629:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1630:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1631:  (0) =<  (1) re*m {*pushdi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1632:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-8)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1635:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1636:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1637:  (0) r  (1) Z {*movdi_internal} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1638:  (0) r  (1) Z {*movdi_internal} (sp_off=-16)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1639:  (0) q  (1) n {*movqi_internal} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1640:  (0) rBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1641:  (0) =r  (1) %0  (2) rme {*adddi_1} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1642:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1643:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1644:  (0) r  (1) Z {*movdi_internal}
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            3 Small class reload: reject+=3
          alt=0,overall=19,losers=2,rld_nregs=2
	 Choosing alt 0 in insn 1645:  (0) =D  (1) =c  (2) a  (3) 0  (4) 1 {*rep_stosdi_rex64}
      Creating newreg=3001 from oldreg=2114, assigning class DIREG to r3001
 1645: {r2116:DI=0;r3001:DI=r2116:DI<<0x3+r3001:DI;[r3001:DI]=0;use r2115:DI;use r2116:DI;}
      REG_UNUSED r2116:DI
    Inserting insn reload before:
 5855: r3001:DI=r2114:DI
    Inserting insn reload after:
 5856: r2114:DI=r3001:DI

            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1646:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1647:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1648:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1649:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1650:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1651:  (0) rm  (1) re {*cmpsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1654:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1657:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1658:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1659:  (0) r  (1) rem {*movdi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1660:  (0) r  (1) r  (2) le {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1665:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1666:  (0) r  (1) Z {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1667:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1668:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1671:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1672:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1675:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1676:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1678:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1680:  (0) =rm  (1) 0  (2) re {*subdi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1681:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1684:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1685:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1686
	 Choosing alt 0 in insn 1686:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1687:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1688:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1689:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1690:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1693:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1694:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1696:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1698:  (0) =rm  (1) 0  (2) re {*subdi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1699:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1702:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1703:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1704
	 Choosing alt 0 in insn 1704:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1705:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1706:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1707:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1708:  (0) m  (1) re {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1709:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1710:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1711:  (0) r  (1) i {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1712:  (0) r  (1) i {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1715:  (0) r  (1) i {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1716:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1717:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1718:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1719:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1720:  (0) r  (1) i {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1721:  (0) r  (1) i {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1724:  (0) r  (1) i {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1725:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1726:  (0) rBwBz {*call}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1727:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1728:  (0) r  (1) Z {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1729:  (0) r  (1) i {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1730:  (0) r  (1) i {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1731:  (0) r  (1) i {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1732:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1733:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1734:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1735:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1736:  (0) =<  (1) re*m {*pushdi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1737:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-8)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1740:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1741:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1742:  (0) r  (1) Z {*movdi_internal} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1743:  (0) r  (1) Z {*movdi_internal} (sp_off=-16)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1744:  (0) q  (1) n {*movqi_internal} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1745:  (0) rBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1746:  (0) =r  (1) %0  (2) rme {*adddi_1} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1747:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1748:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1749:  (0) r  (1) Z {*movdi_internal}
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            3 Small class reload: reject+=3
          alt=0,overall=19,losers=2,rld_nregs=2
	 Choosing alt 0 in insn 1750:  (0) =D  (1) =c  (2) a  (3) 0  (4) 1 {*rep_stosdi_rex64}
      Creating newreg=3002 from oldreg=2135, assigning class DIREG to r3002
 1750: {r2137:DI=0;r3002:DI=r2137:DI<<0x3+r3002:DI;[r3002:DI]=0;use r2136:DI;use r2137:DI;}
      REG_UNUSED r2137:DI
    Inserting insn reload before:
 5857: r3002:DI=r2135:DI
    Inserting insn reload after:
 5858: r2135:DI=r3002:DI

            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1751:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1752:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1753:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1754:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1755:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1756:  (0) rm  (1) re {*cmpsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1759:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1762:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1763:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1764:  (0) r  (1) rem {*movdi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1765:  (0) r  (1) r  (2) le {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1770:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1771:  (0) r  (1) Z {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1772:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1773:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1776:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1777:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1780:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1781:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1783:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1785:  (0) =rm  (1) 0  (2) re {*subdi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1786:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1789:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1790:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1791
	 Choosing alt 0 in insn 1791:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1792:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1793:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1794:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1795:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1798:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1799:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1801:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1803:  (0) =rm  (1) 0  (2) re {*subdi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1804:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1807:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1808:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1809
	 Choosing alt 0 in insn 1809:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1810:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1811:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1812:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1813:  (0) m  (1) re {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1814:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1815:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1816:  (0) r  (1) i {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1817:  (0) r  (1) i {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1820:  (0) r  (1) i {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1821:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1822:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1823:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1824:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1825:  (0) r  (1) i {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1826:  (0) r  (1) i {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1829:  (0) r  (1) i {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1830:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1831:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1832:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1833:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1834:  (0) r  (1) i {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1835:  (0) r  (1) i {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1838:  (0) r  (1) i {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1839:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1840:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1841:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1842:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1843:  (0) r  (1) i {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1844:  (0) r  (1) i {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1847:  (0) r  (1) i {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1848:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1849:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1850:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1851:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-8)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1852:  (0) r  (1) Z {*movdi_internal} (sp_off=-16)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1853:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1854:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1855:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1856:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1857:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1858:  (0) q  (1) n {*movqi_internal} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1859:  (0) rBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1860:  (0) =r  (1) %0  (2) rme {*adddi_1} (sp_off=-16)
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1861:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1862:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1863:  (0) =<  (1) re*m {*pushdi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1864:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-8)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1867:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1868:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1869:  (0) r  (1) Z {*movdi_internal} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1870:  (0) r  (1) Z {*movdi_internal} (sp_off=-16)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1871:  (0) q  (1) n {*movqi_internal} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1872:  (0) rBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1873:  (0) =r  (1) %0  (2) rme {*adddi_1} (sp_off=-16)
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1874:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1875:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1876:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1879:  (0) r  (1) Z {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1881:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1882:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1883:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1884:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1885:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1888:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1889:  (0) r  (1) Z {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1891:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1892:  (0) rBwBz {*call}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1893:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1894:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1895:  (0) r  (1) Z {*movdi_internal}
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            3 Small class reload: reject+=3
          alt=0,overall=19,losers=2,rld_nregs=2
	 Choosing alt 0 in insn 1896:  (0) =D  (1) =c  (2) a  (3) 0  (4) 1 {*rep_stosdi_rex64}
      Creating newreg=3003 from oldreg=2166, assigning class DIREG to r3003
 1896: {r2168:DI=0;r3003:DI=r2168:DI<<0x3+r3003:DI;[r3003:DI]=0;use r2167:DI;use r2168:DI;}
      REG_UNUSED r2168:DI
    Inserting insn reload before:
 5859: r3003:DI=r2166:DI
    Inserting insn reload after:
 5860: r2166:DI=r3003:DI

            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1897:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1898:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1899:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1900:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1901:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1902:  (0) rm  (1) re {*cmpsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1905:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1908:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1909:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1910:  (0) r  (1) rem {*movdi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1911:  (0) r  (1) r  (2) le {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1916:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1917:  (0) r  (1) Z {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1918:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1919:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1922:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1923:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1926:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1927:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1929:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1931:  (0) =rm  (1) 0  (2) re {*subdi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1932:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1935:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1936:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1937
	 Choosing alt 0 in insn 1937:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1938:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1939:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1940:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1941:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1944:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1945:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1947:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1949:  (0) =rm  (1) 0  (2) re {*subdi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1950:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1953:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1954:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1955
	 Choosing alt 0 in insn 1955:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1956:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1957:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1958:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1959:  (0) m  (1) re {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1960:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1961:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1962:  (0) r  (1) i {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1963:  (0) r  (1) i {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1966:  (0) r  (1) i {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1967:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1968:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1969:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1970:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1971:  (0) r  (1) i {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1972:  (0) r  (1) i {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1975:  (0) r  (1) i {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1976:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1977:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1978:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1979:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1980:  (0) r  (1) i {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1981:  (0) r  (1) i {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1984:  (0) r  (1) i {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1985:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1986:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1987:  (0) r  (1) i {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1988:  (0) r  (1) i {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1989:  (0) r  (1) i {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1990:  (0) r  (1) i {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1991:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1992:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1993:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1994:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1995:  (0) =<  (1) re*m {*pushdi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1996:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-8)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1999:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2000:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 2001:  (0) r  (1) Z {*movdi_internal} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 2002:  (0) r  (1) Z {*movdi_internal} (sp_off=-16)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2003:  (0) q  (1) n {*movqi_internal} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2004:  (0) rBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 2005:  (0) =r  (1) %0  (2) rme {*adddi_1} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 2006:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 2007:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 2008:  (0) r  (1) Z {*movdi_internal}
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            3 Small class reload: reject+=3
          alt=0,overall=19,losers=2,rld_nregs=2
	 Choosing alt 0 in insn 2009:  (0) =D  (1) =c  (2) a  (3) 0  (4) 1 {*rep_stosdi_rex64}
      Creating newreg=3004 from oldreg=2189, assigning class DIREG to r3004
 2009: {r2191:DI=0;r3004:DI=r2191:DI<<0x3+r3004:DI;[r3004:DI]=0;use r2190:DI;use r2191:DI;}
      REG_UNUSED r2191:DI
    Inserting insn reload before:
 5861: r3004:DI=r2189:DI
    Inserting insn reload after:
 5862: r2189:DI=r3004:DI

            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2010:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 2011:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2012:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2013:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2014:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2015:  (0) rm  (1) re {*cmpsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2018:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2021:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2022:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2023:  (0) r  (1) rem {*movdi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2024:  (0) r  (1) r  (2) le {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 2029:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 2030:  (0) r  (1) Z {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2031:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2032:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2035:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2036:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2039:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2040:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2042:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2044:  (0) =rm  (1) 0  (2) re {*subdi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2045:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2048:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2049:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2050
	 Choosing alt 0 in insn 2050:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 2051:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 2052:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2053:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2054:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2057:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2058:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2060:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2062:  (0) =rm  (1) 0  (2) re {*subdi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2063:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2066:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2067:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2068
	 Choosing alt 0 in insn 2068:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 2069:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 2070:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2071:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2072:  (0) m  (1) re {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2073:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2074:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2075:  (0) r  (1) i {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2076:  (0) r  (1) i {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2079:  (0) r  (1) i {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2080:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2081:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2082:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2083:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2084:  (0) =<  (1) re*m {*pushdi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2085:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-8)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2088:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2089:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 2090:  (0) r  (1) Z {*movdi_internal} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 2091:  (0) r  (1) Z {*movdi_internal} (sp_off=-16)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2092:  (0) q  (1) n {*movqi_internal} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2093:  (0) rBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 2094:  (0) =r  (1) %0  (2) rme {*adddi_1} (sp_off=-16)
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2095:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2096:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2097:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 2100:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 2101:  (0) r  (1) Z {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2103:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2104:  (0) rBwBz {*call}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 2105:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 2106:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 2107:  (0) r  (1) Z {*movdi_internal}
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            3 Small class reload: reject+=3
          alt=0,overall=19,losers=2,rld_nregs=2
	 Choosing alt 0 in insn 2108:  (0) =D  (1) =c  (2) a  (3) 0  (4) 1 {*rep_stosdi_rex64}
      Creating newreg=3005 from oldreg=2211, assigning class DIREG to r3005
 2108: {r2213:DI=0;r3005:DI=r2213:DI<<0x3+r3005:DI;[r3005:DI]=0;use r2212:DI;use r2213:DI;}
      REG_UNUSED r2213:DI
    Inserting insn reload before:
 5863: r3005:DI=r2211:DI
    Inserting insn reload after:
 5864: r2211:DI=r3005:DI

            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2109:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 2110:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2111:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2112:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2113:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2114:  (0) rm  (1) re {*cmpsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2117:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2120:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2121:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2122:  (0) r  (1) rem {*movdi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2123:  (0) r  (1) r  (2) le {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 2128:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 2129:  (0) r  (1) Z {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2130:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2131:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2134:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2135:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2138:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2139:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2141:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2143:  (0) =rm  (1) 0  (2) re {*subdi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2144:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2147:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2148:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2149
	 Choosing alt 0 in insn 2149:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 2150:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 2151:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2152:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2153:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2156:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2157:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2159:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2161:  (0) =rm  (1) 0  (2) re {*subdi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2162:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2165:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2166:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2167
	 Choosing alt 0 in insn 2167:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 2168:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 2169:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2170:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2171:  (0) m  (1) re {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2172:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2173:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2174:  (0) r  (1) i {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2175:  (0) r  (1) i {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2178:  (0) r  (1) i {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2179:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2180:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2181:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2182:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2183:  (0) r  (1) i {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2184:  (0) r  (1) i {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2187:  (0) r  (1) i {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2188:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2189:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2190:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2191:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2192:  (0) r  (1) i {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2193:  (0) r  (1) i {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2196:  (0) r  (1) i {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2197:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2198:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2199:  (0) r  (1) i {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 2200:  (0) r  (1) Z {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2201:  (0) r  (1) i {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2202:  (0) r  (1) i {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2203:  (0) r  (1) i {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2204:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2205:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2206:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2207:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2208:  (0) =<  (1) re*m {*pushdi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2209:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-8)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2212:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2213:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 2214:  (0) r  (1) Z {*movdi_internal} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 2215:  (0) r  (1) Z {*movdi_internal} (sp_off=-16)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2216:  (0) q  (1) n {*movqi_internal} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2217:  (0) rBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 2218:  (0) =r  (1) %0  (2) rme {*adddi_1} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 2219:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 2220:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 2221:  (0) r  (1) Z {*movdi_internal}
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            3 Small class reload: reject+=3
          alt=0,overall=19,losers=2,rld_nregs=2
	 Choosing alt 0 in insn 2222:  (0) =D  (1) =c  (2) a  (3) 0  (4) 1 {*rep_stosdi_rex64}
      Creating newreg=3006 from oldreg=2234, assigning class DIREG to r3006
 2222: {r2236:DI=0;r3006:DI=r2236:DI<<0x3+r3006:DI;[r3006:DI]=0;use r2235:DI;use r2236:DI;}
      REG_UNUSED r2236:DI
    Inserting insn reload before:
 5865: r3006:DI=r2234:DI
    Inserting insn reload after:
 5866: r2234:DI=r3006:DI

            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2223:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 2224:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2225:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2226:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2227:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2228:  (0) rm  (1) re {*cmpsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2231:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2234:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2235:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2236:  (0) r  (1) rem {*movdi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2237:  (0) r  (1) r  (2) le {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 2242:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 2243:  (0) r  (1) Z {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2244:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2245:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2248:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2249:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2252:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2253:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2257:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2258:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2260:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2262:  (0) =rm  (1) 0  (2) re {*subdi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2263:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2266:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2267:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2268
	 Choosing alt 0 in insn 2268:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 2269:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 2270:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2271:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2272:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2275:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2276:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2278:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2280:  (0) =rm  (1) 0  (2) re {*subdi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2281:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2284:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2285:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2286
	 Choosing alt 0 in insn 2286:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 2287:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 2288:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2289:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2290:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2294:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2295:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2297:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2299:  (0) =rm  (1) 0  (2) re {*subdi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2300:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2303:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2304:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2305
	 Choosing alt 0 in insn 2305:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 2306:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 2307:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2308:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2309:  (0) m  (1) re {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2310:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2311:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2312:  (0) r  (1) i {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2313:  (0) r  (1) i {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2316:  (0) r  (1) i {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2317:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2318:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2319:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2320:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2322:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2324:  (0) =rm  (1) 0  (2) re {*subdi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2325:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2328:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2329:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2330
	 Choosing alt 0 in insn 2330:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 2331:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 2332:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2333:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2334:  (0) m  (1) re {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2335:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2336:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2337:  (0) r  (1) i {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2338:  (0) r  (1) i {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2341:  (0) r  (1) i {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2342:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2343:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2344:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2345:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2346:  (0) =<  (1) re*m {*pushdi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2347:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-8)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2350:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2351:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 2352:  (0) r  (1) Z {*movdi_internal} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 2353:  (0) r  (1) Z {*movdi_internal} (sp_off=-16)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2354:  (0) q  (1) n {*movqi_internal} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2355:  (0) rBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 2356:  (0) =r  (1) %0  (2) rme {*adddi_1} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 2357:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 2358:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 2359:  (0) r  (1) Z {*movdi_internal}
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            3 Small class reload: reject+=3
          alt=0,overall=19,losers=2,rld_nregs=2
	 Choosing alt 0 in insn 2360:  (0) =D  (1) =c  (2) a  (3) 0  (4) 1 {*rep_stosdi_rex64}
      Creating newreg=3007 from oldreg=2263, assigning class DIREG to r3007
 2360: {r2265:DI=0;r3007:DI=r2265:DI<<0x3+r3007:DI;[r3007:DI]=0;use r2264:DI;use r2265:DI;}
      REG_UNUSED r2265:DI
    Inserting insn reload before:
 5867: r3007:DI=r2263:DI
    Inserting insn reload after:
 5868: r2263:DI=r3007:DI

            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2361:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 2362:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2363:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2364:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2365:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2366:  (0) rm  (1) re {*cmpsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2369:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2372:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2373:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2376:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2377:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2378:  (0) r  (1) rem {*movdi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2379:  (0) r  (1) r  (2) le {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 2384:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 2385:  (0) r  (1) Z {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2386:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2387:  (0) rBwBz {*call}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 2390:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 2391:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 2392:  (0) r  (1) Z {*movdi_internal}
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            3 Small class reload: reject+=3
          alt=0,overall=19,losers=2,rld_nregs=2
	 Choosing alt 0 in insn 2393:  (0) =D  (1) =c  (2) a  (3) 0  (4) 1 {*rep_stosdi_rex64}
      Creating newreg=3008 from oldreg=2270, assigning class DIREG to r3008
 2393: {r2272:DI=0;r3008:DI=r2272:DI<<0x3+r3008:DI;[r3008:DI]=0;use r2271:DI;use r2272:DI;}
      REG_UNUSED r2272:DI
    Inserting insn reload before:
 5869: r3008:DI=r2270:DI
    Inserting insn reload after:
 5870: r2270:DI=r3008:DI

            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2394:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 2395:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2396:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2397:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2398:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2399:  (0) rm  (1) re {*cmpsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2402:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2405:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2406:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2409:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2410:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2411:  (0) r  (1) rem {*movdi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2412:  (0) r  (1) r  (2) le {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 2417:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 2418:  (0) r  (1) Z {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2419:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2420:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2423:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2424:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2427:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2428:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2430:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2432:  (0) =rm  (1) 0  (2) re {*subdi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2433:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2436:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2437:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2438
	 Choosing alt 0 in insn 2438:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 2439:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 2440:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2441:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2442:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2445:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2446:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2448:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2450:  (0) =rm  (1) 0  (2) re {*subdi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2451:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2454:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2455:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2456
	 Choosing alt 0 in insn 2456:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 2457:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 2458:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2459:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2460:  (0) m  (1) re {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2461:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2462:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2463:  (0) r  (1) i {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2464:  (0) r  (1) i {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2467:  (0) r  (1) i {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2468:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2469:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2470:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2471:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2472:  (0) =<  (1) re*m {*pushdi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2473:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-8)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2476:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2477:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 2478:  (0) r  (1) Z {*movdi_internal} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 2479:  (0) r  (1) Z {*movdi_internal} (sp_off=-16)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2480:  (0) q  (1) n {*movqi_internal} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2481:  (0) rBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 2482:  (0) =r  (1) %0  (2) rme {*adddi_1} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 2483:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 2484:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 2485:  (0) r  (1) Z {*movdi_internal}
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            3 Small class reload: reject+=3
          alt=0,overall=19,losers=2,rld_nregs=2
	 Choosing alt 0 in insn 2486:  (0) =D  (1) =c  (2) a  (3) 0  (4) 1 {*rep_stosdi_rex64}
      Creating newreg=3009 from oldreg=2289, assigning class DIREG to r3009
 2486: {r2291:DI=0;r3009:DI=r2291:DI<<0x3+r3009:DI;[r3009:DI]=0;use r2290:DI;use r2291:DI;}
      REG_UNUSED r2291:DI
    Inserting insn reload before:
 5871: r3009:DI=r2289:DI
    Inserting insn reload after:
 5872: r2289:DI=r3009:DI

            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2487:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 2488:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2489:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2490:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2491:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2492:  (0) rm  (1) re {*cmpsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2495:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2498:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2499:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2500:  (0) r  (1) rem {*movdi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2501:  (0) r  (1) r  (2) le {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 2506:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 2507:  (0) r  (1) Z {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2508:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2509:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2512:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2513:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2516:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2517:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2519:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2521:  (0) =rm  (1) 0  (2) re {*subdi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2522:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2525:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2526:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2527
	 Choosing alt 0 in insn 2527:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 2528:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 2529:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2530:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2531:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2534:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2535:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2537:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2539:  (0) =rm  (1) 0  (2) re {*subdi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2540:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2543:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2544:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2545
	 Choosing alt 0 in insn 2545:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 2546:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 2547:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2548:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2549:  (0) m  (1) re {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2550:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2551:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2552:  (0) r  (1) i {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2553:  (0) r  (1) i {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2556:  (0) r  (1) i {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2557:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2558:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2559:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2560:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2561:  (0) r  (1) i {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2562:  (0) r  (1) i {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2565:  (0) r  (1) i {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2566:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2567:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2568:  (0) r  (1) i {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2569:  (0) r  (1) i {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2570:  (0) r  (1) i {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2571:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2572:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2573:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2574:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2575:  (0) =<  (1) re*m {*pushdi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2576:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-8)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2579:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2580:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 2581:  (0) r  (1) Z {*movdi_internal} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 2582:  (0) r  (1) Z {*movdi_internal} (sp_off=-16)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2583:  (0) q  (1) n {*movqi_internal} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2584:  (0) rBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 2585:  (0) =r  (1) %0  (2) rme {*adddi_1} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 2586:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 2587:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 2588:  (0) r  (1) Z {*movdi_internal}
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            3 Small class reload: reject+=3
          alt=0,overall=19,losers=2,rld_nregs=2
	 Choosing alt 0 in insn 2589:  (0) =D  (1) =c  (2) a  (3) 0  (4) 1 {*rep_stosdi_rex64}
      Creating newreg=3010 from oldreg=2310, assigning class DIREG to r3010
 2589: {r2312:DI=0;r3010:DI=r2312:DI<<0x3+r3010:DI;[r3010:DI]=0;use r2311:DI;use r2312:DI;}
      REG_UNUSED r2312:DI
    Inserting insn reload before:
 5873: r3010:DI=r2310:DI
    Inserting insn reload after:
 5874: r2310:DI=r3010:DI

            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2590:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 2591:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2592:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2593:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2594:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2595:  (0) rm  (1) re {*cmpsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2598:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2601:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2602:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2603:  (0) r  (1) rem {*movdi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2604:  (0) r  (1) r  (2) le {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 2609:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 2610:  (0) r  (1) Z {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2611:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2612:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2615:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2616:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2619:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2620:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2622:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2624:  (0) =rm  (1) 0  (2) re {*subdi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2625:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2628:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2629:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2630
	 Choosing alt 0 in insn 2630:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 2631:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 2632:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2633:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2634:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2637:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2638:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2640:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2642:  (0) =rm  (1) 0  (2) re {*subdi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2643:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2646:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2647:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2648
	 Choosing alt 0 in insn 2648:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 2649:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 2650:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2651:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2652:  (0) m  (1) re {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2653:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2654:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2655:  (0) r  (1) i {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2656:  (0) r  (1) i {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2659:  (0) r  (1) i {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2660:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2661:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2662:  (0) r  (1) i {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2663:  (0) r  (1) i {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2664:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2665:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2666:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2667:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2668:  (0) =<  (1) re*m {*pushdi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2669:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-8)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2672:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2673:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 2674:  (0) r  (1) Z {*movdi_internal} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 2675:  (0) r  (1) Z {*movdi_internal} (sp_off=-16)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2676:  (0) q  (1) n {*movqi_internal} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2677:  (0) rBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 2678:  (0) =r  (1) %0  (2) rme {*adddi_1} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 2679:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 2680:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 2681:  (0) r  (1) Z {*movdi_internal}
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            3 Small class reload: reject+=3
          alt=0,overall=19,losers=2,rld_nregs=2
	 Choosing alt 0 in insn 2682:  (0) =D  (1) =c  (2) a  (3) 0  (4) 1 {*rep_stosdi_rex64}
      Creating newreg=3011 from oldreg=2329, assigning class DIREG to r3011
 2682: {r2331:DI=0;r3011:DI=r2331:DI<<0x3+r3011:DI;[r3011:DI]=0;use r2330:DI;use r2331:DI;}
      REG_UNUSED r2331:DI
    Inserting insn reload before:
 5875: r3011:DI=r2329:DI
    Inserting insn reload after:
 5876: r2329:DI=r3011:DI

            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2683:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 2684:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2685:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2686:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2687:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2688:  (0) rm  (1) re {*cmpsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2691:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2694:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2695:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2696:  (0) r  (1) rem {*movdi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2697:  (0) r  (1) r  (2) le {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 2702:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 2703:  (0) r  (1) Z {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2704:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2705:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2708:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2709:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2712:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2713:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2715:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2717:  (0) =rm  (1) 0  (2) re {*subdi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2718:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2721:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2722:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2723
	 Choosing alt 0 in insn 2723:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 2724:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 2725:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2726:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2727:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2730:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2731:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2733:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2735:  (0) =rm  (1) 0  (2) re {*subdi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2736:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2739:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2740:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2741
	 Choosing alt 0 in insn 2741:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 2742:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 2743:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2744:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2745:  (0) m  (1) re {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2746:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2747:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2748:  (0) r  (1) i {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2749:  (0) r  (1) i {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2752:  (0) r  (1) i {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2753:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2754:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2755:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2756:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2757:  (0) =<  (1) re*m {*pushdi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2758:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-8)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2761:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2762:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 2763:  (0) r  (1) Z {*movdi_internal} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 2764:  (0) r  (1) Z {*movdi_internal} (sp_off=-16)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2765:  (0) q  (1) n {*movqi_internal} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2766:  (0) rBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 2767:  (0) =r  (1) %0  (2) rme {*adddi_1} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 2768:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 2769:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 2770:  (0) r  (1) Z {*movdi_internal}
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            3 Small class reload: reject+=3
          alt=0,overall=19,losers=2,rld_nregs=2
	 Choosing alt 0 in insn 2771:  (0) =D  (1) =c  (2) a  (3) 0  (4) 1 {*rep_stosdi_rex64}
      Creating newreg=3012 from oldreg=2348, assigning class DIREG to r3012
 2771: {r2350:DI=0;r3012:DI=r2350:DI<<0x3+r3012:DI;[r3012:DI]=0;use r2349:DI;use r2350:DI;}
      REG_UNUSED r2350:DI
    Inserting insn reload before:
 5877: r3012:DI=r2348:DI
    Inserting insn reload after:
 5878: r2348:DI=r3012:DI

            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2772:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 2773:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2774:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2775:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2776:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2777:  (0) rm  (1) re {*cmpsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2780:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2783:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2784:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2785:  (0) r  (1) rem {*movdi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2786:  (0) r  (1) r  (2) le {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 2791:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 2792:  (0) r  (1) Z {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2793:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2794:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2797:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2798:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2801:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2802:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2804:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2806:  (0) =rm  (1) 0  (2) re {*subdi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2807:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2810:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2811:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2812
	 Choosing alt 0 in insn 2812:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 2813:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 2814:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2815:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2816:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2819:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2820:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2821:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2823:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2824:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2825:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2826:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2829:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2831:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2832:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2833:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2834:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2837:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2838:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 2839:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2840:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2841:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 2842:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2843:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2844:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2845:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2846
	 Choosing alt 0 in insn 2846:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2847:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2848:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2849:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2850:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2851:  (0) v  (1) vm {*cmpisf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2857:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2858:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 2859:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2860:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2861:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 2862:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2863:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2864:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2865:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2866
	 Choosing alt 0 in insn 2866:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2867:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2868:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2869:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2870:  (0) v  (1) vm {*cmpisf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2876:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2877:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 2878:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2879:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2880:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 2881:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2882:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2883:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2884:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2885
	 Choosing alt 0 in insn 2885:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2886:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2887:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2888:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 2889:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 2892:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 2898:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2904:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2905:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2907:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2909:  (0) =rm  (1) 0  (2) re {*subdi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2910:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2913:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2914:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2915
	 Choosing alt 0 in insn 2915:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 2916:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 2917:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2918:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2919:  (0) m  (1) re {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2920:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2921:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2922:  (0) r  (1) i {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2923:  (0) r  (1) i {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2926:  (0) r  (1) i {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2927:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2928:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2929:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2930:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2931:  (0) r  (1) i {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2932:  (0) r  (1) i {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2935:  (0) r  (1) i {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2936:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2937:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2938:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2939:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2940:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2942:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2943:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2944:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2945:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2948:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2950:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2951:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2952:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2953:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2956:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2957:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 2958:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2959:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2960:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2961
	 Choosing alt 0 in insn 2961:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2962:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2963:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2964:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2965:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2966:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 2967:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2968:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2969:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2970
	 Choosing alt 0 in insn 2970:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2971:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2972:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2973:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2974:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 2975:  (0) x  (1) 0  (2) xm {*fop_sf_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2977:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2978:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 2979:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 2980:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 2981:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2982
	 Choosing alt 0 in insn 2982:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 2983:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 2984
	 Choosing alt 1 in insn 2984:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2985:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 2986:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 2987:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 2993:  (0) rm  (1) 0  (2) re {*addsi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 2999:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 3000:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3001:  (0) =<  (1) re*m {*pushdi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3002:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-8)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 3005:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 3006:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 3007:  (0) r  (1) Z {*movdi_internal} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 3008:  (0) r  (1) Z {*movdi_internal} (sp_off=-16)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 3009:  (0) q  (1) n {*movqi_internal} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3010:  (0) rBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 3011:  (0) =r  (1) %0  (2) rme {*adddi_1} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 3012:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 3013:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 3014:  (0) r  (1) Z {*movdi_internal}
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            3 Small class reload: reject+=3
          alt=0,overall=19,losers=2,rld_nregs=2
	 Choosing alt 0 in insn 3015:  (0) =D  (1) =c  (2) a  (3) 0  (4) 1 {*rep_stosdi_rex64}
      Creating newreg=3013 from oldreg=2394, assigning class DIREG to r3013
 3015: {r2396:DI=0;r3013:DI=r2396:DI<<0x3+r3013:DI;[r3013:DI]=0;use r2395:DI;use r2396:DI;}
      REG_UNUSED r2396:DI
    Inserting insn reload before:
 5879: r3013:DI=r2394:DI
    Inserting insn reload after:
 5880: r2394:DI=r3013:DI

            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3016:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 3017:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3018:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3019:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3020:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3021:  (0) rm  (1) re {*cmpsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3024:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 3027:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 3028:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 3029:  (0) r  (1) rem {*movdi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 3030:  (0) r  (1) r  (2) le {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 3035:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 3036:  (0) r  (1) Z {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 3037:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3038:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3041:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3042:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3045:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3046:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3048:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3050:  (0) =rm  (1) 0  (2) re {*subdi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3051:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3054:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3055:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 3056
	 Choosing alt 0 in insn 3056:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 3057:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 3058:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3059:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3060:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3063:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3064:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3066:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3068:  (0) =rm  (1) 0  (2) re {*subdi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3069:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3072:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3073:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 3074
	 Choosing alt 0 in insn 3074:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 3075:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 3076:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3077:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3078:  (0) m  (1) re {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 3079:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 3080:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 3081:  (0) r  (1) i {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 3082:  (0) r  (1) i {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 3085:  (0) r  (1) i {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 3086:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3087:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 3088:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 3089:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 3090:  (0) r  (1) i {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 3091:  (0) r  (1) i {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 3094:  (0) r  (1) i {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 3095:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3096:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3097:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3098:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3099:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3101:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3102:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3103:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3104:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3107:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3109:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3110:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3111:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3112:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3115:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3116:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 3117:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3118:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3119:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 3120
	 Choosing alt 0 in insn 3120:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 3121:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 3122:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3123:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3124:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3125:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 3126:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3127:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3128:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 3129
	 Choosing alt 0 in insn 3129:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 3130:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 3131:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3132:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3133:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3134:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 3135:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3136:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3137:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 3138
	 Choosing alt 0 in insn 3138:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 3139:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 3140
	 Choosing alt 1 in insn 3140:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 3141:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 3142:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 3143:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 3149:  (0) rm  (1) 0  (2) re {*addsi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 3155:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 3156:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3157:  (0) =<  (1) re*m {*pushdi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3158:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-8)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 3161:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 3162:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 3163:  (0) r  (1) Z {*movdi_internal} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 3164:  (0) r  (1) Z {*movdi_internal} (sp_off=-16)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 3165:  (0) q  (1) n {*movqi_internal} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3166:  (0) rBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 3167:  (0) =r  (1) %0  (2) rme {*adddi_1} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 3168:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 3169:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 3170:  (0) r  (1) Z {*movdi_internal}
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            3 Small class reload: reject+=3
          alt=0,overall=19,losers=2,rld_nregs=2
	 Choosing alt 0 in insn 3171:  (0) =D  (1) =c  (2) a  (3) 0  (4) 1 {*rep_stosdi_rex64}
      Creating newreg=3014 from oldreg=2426, assigning class DIREG to r3014
 3171: {r2428:DI=0;r3014:DI=r2428:DI<<0x3+r3014:DI;[r3014:DI]=0;use r2427:DI;use r2428:DI;}
      REG_UNUSED r2428:DI
    Inserting insn reload before:
 5881: r3014:DI=r2426:DI
    Inserting insn reload after:
 5882: r2426:DI=r3014:DI

            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3172:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 3173:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3174:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3175:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3176:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3177:  (0) rm  (1) re {*cmpsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3180:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 3183:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 3184:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 3185:  (0) r  (1) rem {*movdi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 3186:  (0) r  (1) r  (2) le {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 3191:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 3192:  (0) r  (1) Z {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 3193:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3194:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3197:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3198:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3201:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3202:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3204:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3206:  (0) =rm  (1) 0  (2) re {*subdi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3207:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3210:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3211:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 3212
	 Choosing alt 0 in insn 3212:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 3213:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 3214:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3215:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3216:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3219:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3220:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3222:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3224:  (0) =rm  (1) 0  (2) re {*subdi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3225:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3228:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3229:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 3230
	 Choosing alt 0 in insn 3230:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 3231:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 3232:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3233:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3234:  (0) m  (1) re {*movsi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3235:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 3236:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3237:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 3238:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3239:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 3240:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3241:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3242:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3245:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3246:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3247:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3249:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3250:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3251:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3252:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3255:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3257:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3258:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3259:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3260:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3263:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3264:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 3265:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3266:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3267:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 3268
	 Choosing alt 0 in insn 3268:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 3269:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 3270:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3271:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 3272:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 3273:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 3279:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3289:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3290:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3291:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3293:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3294:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3295:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3296:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3299:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3301:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3302:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3303:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3304:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3307:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3308:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 3309:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3310:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3311:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 3312
	 Choosing alt 0 in insn 3312:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 3313:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 3314:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 3315:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3316:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3317:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 3318:  (0) =rm  (1) 0  (2) re {*subsi_1}
      Creating newreg=3015 from oldreg=2456, assigning class GENERAL_REGS to r3015
 3318: {r3015:SI=r3015:SI-r958:SI;clobber flags:CC;}
      REG_DEAD r2456:SI
      REG_DEAD r958:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
 5883: r3015:SI=r2456:SI
    Inserting insn reload after:
 5884: r2457:SI=r3015:SI

            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3319:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3320:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3321:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 3322:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3323:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3324:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 3325:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3326:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3327:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3328:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 3329
	 Choosing alt 0 in insn 3329:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 3330:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 3331:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 3332:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3333:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3334:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3335:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 3336:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3337:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3338:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 3339
	 Choosing alt 0 in insn 3339:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 3340:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 3341:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3342:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 3343
	 Choosing alt 1 in insn 3343:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 3344:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3345:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3346:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 3347:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3348:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3349:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 3350:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3351:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3352:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3353:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 3354
	 Choosing alt 0 in insn 3354:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 3355:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 3356:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 3357:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3358:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 3359:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3360:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3361:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 3362:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3363:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3364:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 3365:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3366:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3367:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3368:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 3369
	 Choosing alt 0 in insn 3369:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 3370:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 3371:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 3372:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3373:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 3374:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3375:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3376:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 3377:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3378:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3379:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 3380:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3381:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3382:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3383:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 3384
	 Choosing alt 0 in insn 3384:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 3385:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 3386:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3387:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 3388:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3389:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3390:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 3391:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3393:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 3394:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 3395:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3396:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3397:  (0) v  (1) vm {*cmpisf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3398:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3399:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3400:  (0) v  (1) vm {*cmpiusf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3401:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3402:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 3403
	 Choosing alt 0 in insn 3403:  (0) =r  (1) %0  (2) rme {*iorsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3404:  (0) r {*cmpsi_ccno_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3407:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 3410:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 3411:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3412:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3413:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 3414:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3415:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3416:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 3417
	 Choosing alt 0 in insn 3417:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 3418:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 3419:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 3420:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3421:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3422:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3423:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 3424:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 3425:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 3426:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3427:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 3428:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 3429:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3430:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 3431
	 Choosing alt 1 in insn 3431:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 3432:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3433:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3434:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 3435
	 Choosing alt 1 in insn 3435:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
          alt=2,overall=8,losers=1,rld_nregs=2
	 Choosing alt 2 in insn 3436:  (0) x  (1) 0  (2) xm {*fop_sf_1}
      Creating newreg=3016 from oldreg=1019, assigning class SSE_REGS to r3016
 3436: r3016:SF=r3016:SF/[frame:DI-0xb4]
      REG_DEAD r1019:SF
    Inserting insn reload before:
 5885: r3016:SF=r1019:SF
    Inserting insn reload after:
 5886: r1020:SF=r3016:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1221,losers=3,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=614,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=3,overall=1219,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non pseudo reload: reject++
            1 Non-prefered reload: reject+=600
          alt=4,overall=613,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=7,overall=616,losers=2,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=8,overall=2,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 5886:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3437:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3438:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 3439:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3440:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3441:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 3442:  (0) x  (1) 0  (2) xm {*fop_sf_1}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 3444
	 Choosing alt 1 in insn 3444:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3445:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3446:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 3447:  (0) x  (1) 0  (2) xm {*fop_sf_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 3449:  (0) x  (1) 0  (2) xm {*fop_sf_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3451:  (1) rBwBz {*call_value}
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
  Commutative operand exchange in insn 3453
	 Choosing alt 1 in insn 3453:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=3017 from oldreg=1020, assigning class SSE_REGS to r3017
      Making reload reg 3017 for reg 1020 optional
 3453: r2503:SF=r1028:SF*r3017:SF
      REG_DEAD r1028:SF
      REG_DEAD r1020:SF
    Inserting insn reload before:
 5887: r3017:SF=r1020:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=615,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            alt=1,overall=617,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=4,overall=622,losers=2 -- refuse
            0 Non pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=7,overall=2,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 5887:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 3454:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3455:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3456:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3457:  (0) v  (1) vm {*cmpisf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3458:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3459:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3460:  (0) v  (1) vm {*cmpiusf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3461:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3462:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 3463
	 Choosing alt 0 in insn 3463:  (0) =r  (1) %0  (2) rme {*iorsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3464:  (0) r {*cmpsi_ccno_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3467:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3470:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 3471
	 Choosing alt 1 in insn 3471:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3472:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 3473
	 Choosing alt 1 in insn 3473:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3475:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3476:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 3477:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3478:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3479:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 3480
	 Choosing alt 0 in insn 3480:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 3481:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 3482:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 3483:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 3484:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3485:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3486:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 3487
	 Choosing alt 1 in insn 3487:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3488:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3489:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 3490
	 Choosing alt 1 in insn 3490:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 3492
	 Choosing alt 1 in insn 3492:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3493:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 3494:  (0) x  (1) 0  (2) xm {*fop_sf_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3496:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3497:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 3498:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3499:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3500:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 3501
	 Choosing alt 0 in insn 3501:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 3502:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 3503:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 3504:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 3505:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3506:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3507:  (0) v  (1) vm {*cmpisf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3513:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3514:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 3515:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3516:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3517:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 3518
	 Choosing alt 0 in insn 3518:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 3519:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3520:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3521:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 3522:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3523:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3524:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 3525
	 Choosing alt 0 in insn 3525:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 3526:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 3527:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3528:  (0) v  (1) m {*movsf_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 3529:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 3530:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3533:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3534:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 3535:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3536:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3537:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 3538
	 Choosing alt 0 in insn 3538:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 3539:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 3540:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 3541:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3542:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3543:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3544:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 3545
	 Choosing alt 0 in insn 3545:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3546:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 3547:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 3548:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 3549:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3550:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3551:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3552:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 3553:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3554:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3555:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 3556
	 Choosing alt 0 in insn 3556:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 3557:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 3558:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 3559:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3560:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3561:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 3562:  (0) x  (1) 0  (2) xm {*fop_sf_1}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 3564
	 Choosing alt 1 in insn 3564:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 3565:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 3566
	 Choosing alt 1 in insn 3566:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 3567:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3568:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3569:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 3570:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3571:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3572:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 3573:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3574:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3575:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3576:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 3577
	 Choosing alt 0 in insn 3577:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 3578:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 3579:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3580:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 3581:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3582:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 3583:  (0) x  (1) 0  (2) xm {*fop_sf_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3585:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3586:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 3587:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3588:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3589:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 3590
	 Choosing alt 0 in insn 3590:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 3591:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 3592:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3593:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 3594:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3595:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3596:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 3597:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3598:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3599:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 3600
	 Choosing alt 0 in insn 3600:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 3601:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 3602:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3603:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 3604:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 3605
	 Choosing alt 1 in insn 3605:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 3606:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3607:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3608:  (0) v  (1) vm {*cmpisf}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3614:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 3615:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3620:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 3621:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 3622:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3625:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3626:  (0) v  (1) vm {*cmpisf}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3632:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3633:  (0) v  (1) vm {*cmpisf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3634:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3635:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3636:  (0) v  (1) vm {*cmpiusf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3637:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3638:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 3639
	 Choosing alt 0 in insn 3639:  (0) =r  (1) %0  (2) rme {*iorsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3640:  (0) r {*cmpsi_ccno_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3643:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3646:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3647:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 3648:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3649:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3650:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 3651
	 Choosing alt 0 in insn 3651:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 3652:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 3653:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 3654:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3659:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3660:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 3661
	 Choosing alt 1 in insn 3661:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3662:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 3663:  (0) x  (1) 0  (2) xm {*fop_sf_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 3665:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 3666:  (0) v  (1) vm {movv4sf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3667:  (0) =Yv  (1) 0  (2) Yvm {*absnegsf2}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 3668:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3669:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3670:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3671:  (0) v  (1) vm {*cmpisf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3672:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3673:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3674:  (0) v  (1) vm {*cmpiusf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3675:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3676:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 3677
	 Choosing alt 0 in insn 3677:  (0) =r  (1) %0  (2) rme {*iorsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3678:  (0) r {*cmpsi_ccno_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3681:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 3684:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3685:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3687:  (1) rBwBz {*call_value}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3689:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 3690:  (0) x  (1) 0  (2) xm {*fop_sf_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3692:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3693:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 3694:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3695:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3696:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 3697
	 Choosing alt 0 in insn 3697:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 3698:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 3699:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 3700:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 3701:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 3704:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 3710:  (0) rm  (1) 0  (2) re {*addsi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 3716:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 3717:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3718:  (0) =<  (1) re*m {*pushdi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3719:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-8)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 3722:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 3723:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 3724:  (0) r  (1) Z {*movdi_internal} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 3725:  (0) r  (1) Z {*movdi_internal} (sp_off=-16)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 3726:  (0) q  (1) n {*movqi_internal} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3727:  (0) rBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 3728:  (0) =r  (1) %0  (2) rme {*adddi_1} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 3729:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 3730:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 3731:  (0) r  (1) Z {*movdi_internal}
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            3 Small class reload: reject+=3
          alt=0,overall=19,losers=2,rld_nregs=2
	 Choosing alt 0 in insn 3732:  (0) =D  (1) =c  (2) a  (3) 0  (4) 1 {*rep_stosdi_rex64}
      Creating newreg=3018 from oldreg=2579, assigning class DIREG to r3018
 3732: {r2581:DI=0;r3018:DI=r2581:DI<<0x3+r3018:DI;[r3018:DI]=0;use r2580:DI;use r2581:DI;}
      REG_UNUSED r2581:DI
    Inserting insn reload before:
 5888: r3018:DI=r2579:DI
    Inserting insn reload after:
 5889: r2579:DI=r3018:DI

            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3733:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 3734:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3735:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3736:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3737:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3738:  (0) rm  (1) re {*cmpsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3741:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 3744:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 3745:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 3746:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 3749:  (0) r  (1) Z {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 3751:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3752:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 3753:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 3754:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 3755:  (0) r  (1) rem {*movdi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 3756:  (0) r  (1) r  (2) le {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 3761:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 3762:  (0) r  (1) Z {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 3763:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3764:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3767:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3768:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3771:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3772:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3774:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3776:  (0) =rm  (1) 0  (2) re {*subdi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3777:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3780:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3781:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 3782
	 Choosing alt 0 in insn 3782:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 3783:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 3784:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3785:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3786:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3789:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 3790:  (0) r  (1) r  (2) le {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3792:  (0) =rm  (1) 0  (2) cI {*ashlsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3793:  (0) =r  (1) %0  (2) rme {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 3794:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3795:  (0) m  (1) re {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 3796:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 3797:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3798:  (0) =<  (1) re*m {*pushdi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3799:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-8)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 3802:  (0) r  (1) Z {*movdi_internal} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 3803:  (0) r  (1) Z {*movdi_internal} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 3804:  (0) r  (1) Z {*movdi_internal} (sp_off=-16)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 3805:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 3806:  (0) q  (1) n {*movqi_internal} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3807:  (0) rBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 3808:  (0) =r  (1) %0  (2) rme {*adddi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3809:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 3810:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3811:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3812:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3813:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3815:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3817:  (0) =rm  (1) 0  (2) re {*subdi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3818:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3821:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3822:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 3823
	 Choosing alt 0 in insn 3823:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 3824:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 3825:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3826:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3827:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 3828:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 3829:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3830:  (0) =<  (1) re*m {*pushdi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3831:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-8)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 3834:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 3835:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 3836:  (0) r  (1) Z {*movdi_internal} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 3837:  (0) r  (1) Z {*movdi_internal} (sp_off=-16)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 3838:  (0) q  (1) n {*movqi_internal} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3839:  (0) rBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 3840:  (0) =r  (1) %0  (2) rme {*adddi_1} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 3841:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 3842:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 3843:  (0) r  (1) Z {*movdi_internal}
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            3 Small class reload: reject+=3
          alt=0,overall=19,losers=2,rld_nregs=2
	 Choosing alt 0 in insn 3844:  (0) =D  (1) =c  (2) a  (3) 0  (4) 1 {*rep_stosdi_rex64}
      Creating newreg=3019 from oldreg=2602, assigning class DIREG to r3019
 3844: {r2604:DI=0;r3019:DI=r2604:DI<<0x3+r3019:DI;[r3019:DI]=0;use r2603:DI;use r2604:DI;}
      REG_UNUSED r2604:DI
    Inserting insn reload before:
 5890: r3019:DI=r2602:DI
    Inserting insn reload after:
 5891: r2602:DI=r3019:DI

            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3845:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 3846:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3847:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3848:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3849:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3850:  (0) rm  (1) re {*cmpsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3853:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 3856:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 3857:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 3858:  (0) r  (1) rem {*movdi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 3859:  (0) r  (1) r  (2) le {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 3864:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 3865:  (0) r  (1) Z {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 3866:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3867:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3870:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3871:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3874:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3875:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3877:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3879:  (0) =rm  (1) 0  (2) re {*subdi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3880:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3883:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3884:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 3885
	 Choosing alt 0 in insn 3885:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 3886:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 3887:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3888:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3889:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3892:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3893:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3895:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3897:  (0) =rm  (1) 0  (2) re {*subdi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3898:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3901:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3902:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 3903
	 Choosing alt 0 in insn 3903:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 3904:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 3905:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3906:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3907:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3908:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3909:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3910:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3912:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3913:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3914:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3915:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3918:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3920:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3921:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3922:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3923:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3926:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3927:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 3928:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3929:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3930:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 3931
	 Choosing alt 0 in insn 3931:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 3932:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 3933:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 3934:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 3935:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 3936:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 3942:  (0) rm  (1) 0  (2) re {*addsi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 3948:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 3949:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3950:  (0) =<  (1) re*m {*pushdi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3951:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-8)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 3954:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 3955:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 3956:  (0) r  (1) Z {*movdi_internal} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 3957:  (0) r  (1) Z {*movdi_internal} (sp_off=-16)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 3958:  (0) q  (1) n {*movqi_internal} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3959:  (0) rBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 3960:  (0) =r  (1) %0  (2) rme {*adddi_1} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 3961:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 3962:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 3963:  (0) r  (1) Z {*movdi_internal}
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            3 Small class reload: reject+=3
          alt=0,overall=19,losers=2,rld_nregs=2
	 Choosing alt 0 in insn 3964:  (0) =D  (1) =c  (2) a  (3) 0  (4) 1 {*rep_stosdi_rex64}
      Creating newreg=3020 from oldreg=2625, assigning class DIREG to r3020
 3964: {r2627:DI=0;r3020:DI=r2627:DI<<0x3+r3020:DI;[r3020:DI]=0;use r2626:DI;use r2627:DI;}
      REG_UNUSED r2627:DI
    Inserting insn reload before:
 5892: r3020:DI=r2625:DI
    Inserting insn reload after:
 5893: r2625:DI=r3020:DI

            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3965:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 3966:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3967:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3968:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3969:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3970:  (0) rm  (1) re {*cmpsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3973:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 3976:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 3977:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 3978:  (0) r  (1) rem {*movdi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 3979:  (0) r  (1) r  (2) le {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 3984:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 3985:  (0) r  (1) Z {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 3986:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3987:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3990:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3991:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3994:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3995:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3997:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 3999:  (0) =rm  (1) 0  (2) re {*subdi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4000:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4003:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4004:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 4005
	 Choosing alt 0 in insn 4005:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 4006:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 4007:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4008:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4009:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4012:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 4013:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4015:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4017:  (0) =rm  (1) 0  (2) re {*subdi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4018:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4021:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4022:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 4023
	 Choosing alt 0 in insn 4023:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 4024:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 4025:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4026:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 4027:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4028:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4029:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 4030:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4032:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4033:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4034:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4035:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 4038:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4040:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4041:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4042:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4043:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4046:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 4047:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 4048:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4049:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 4050:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 4051
	 Choosing alt 0 in insn 4051:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 4052:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 4053:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 4054:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 4055:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 4056:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 4062:  (0) rm  (1) 0  (2) re {*addsi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 4068:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 4069:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4070:  (0) =<  (1) re*m {*pushdi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4071:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-8)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 4074:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 4075:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 4076:  (0) r  (1) Z {*movdi_internal} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 4077:  (0) r  (1) Z {*movdi_internal} (sp_off=-16)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 4078:  (0) q  (1) n {*movqi_internal} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4079:  (0) rBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 4080:  (0) =r  (1) %0  (2) rme {*adddi_1} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 4081:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 4082:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 4083:  (0) r  (1) Z {*movdi_internal}
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            3 Small class reload: reject+=3
          alt=0,overall=19,losers=2,rld_nregs=2
	 Choosing alt 0 in insn 4084:  (0) =D  (1) =c  (2) a  (3) 0  (4) 1 {*rep_stosdi_rex64}
      Creating newreg=3021 from oldreg=2648, assigning class DIREG to r3021
 4084: {r2650:DI=0;r3021:DI=r2650:DI<<0x3+r3021:DI;[r3021:DI]=0;use r2649:DI;use r2650:DI;}
      REG_UNUSED r2650:DI
    Inserting insn reload before:
 5894: r3021:DI=r2648:DI
    Inserting insn reload after:
 5895: r2648:DI=r3021:DI

            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 4085:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 4086:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4087:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 4088:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4089:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4090:  (0) rm  (1) re {*cmpsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 4093:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 4096:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 4097:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 4098:  (0) r  (1) rem {*movdi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 4099:  (0) r  (1) r  (2) le {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 4104:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 4105:  (0) r  (1) Z {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 4106:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4107:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4110:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4111:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4114:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 4115:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4117:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4119:  (0) =rm  (1) 0  (2) re {*subdi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4120:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4123:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4124:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 4125
	 Choosing alt 0 in insn 4125:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 4126:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 4127:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4128:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4129:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4132:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 4133:  (0) r  (1) r  (2) le {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4135:  (0) =rm  (1) 0  (2) cI {*ashlsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4136:  (0) =r  (1) %0  (2) rme {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 4137:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 4138:  (0) m  (1) re {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 4139:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 4140:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4141:  (0) =<  (1) re*m {*pushdi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4142:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-8)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 4145:  (0) r  (1) Z {*movdi_internal} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 4146:  (0) r  (1) Z {*movdi_internal} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 4147:  (0) r  (1) Z {*movdi_internal} (sp_off=-16)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 4148:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 4149:  (0) q  (1) n {*movqi_internal} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4150:  (0) rBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 4151:  (0) =r  (1) %0  (2) rme {*adddi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4152:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 4153:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 4154:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4155:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 4156:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4158:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4160:  (0) =rm  (1) 0  (2) re {*subdi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4161:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4164:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4165:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 4166
	 Choosing alt 0 in insn 4166:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 4167:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 4168:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4169:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 4170:  (0) m  (1) re {*movsi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 4171:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 4172:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 4173:  (0) v  (1) vm {*cmpisf}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 4179:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 4180:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 4181:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 4182:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 4187:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 4188:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4191:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4192:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 4193:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4195:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4196:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4197:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4198:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 4201:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4203:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4204:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4205:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4206:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4209:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 4210:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 4211:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4212:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 4213:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 4214
	 Choosing alt 0 in insn 4214:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 4215:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 4216:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 4217:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4218:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 4219:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 4220:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4221:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 4222:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 4223
	 Choosing alt 0 in insn 4223:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 4224:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 4225:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 4226:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 4227:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 4228:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 4234:  (0) rm  (1) 0  (2) re {*addsi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 4240:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 4241:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4242:  (0) =<  (1) re*m {*pushdi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4243:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-8)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 4246:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 4247:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 4248:  (0) r  (1) Z {*movdi_internal} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 4249:  (0) r  (1) Z {*movdi_internal} (sp_off=-16)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 4250:  (0) q  (1) n {*movqi_internal} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4251:  (0) rBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 4252:  (0) =r  (1) %0  (2) rme {*adddi_1} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 4253:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 4254:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 4255:  (0) r  (1) Z {*movdi_internal}
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            3 Small class reload: reject+=3
          alt=0,overall=19,losers=2,rld_nregs=2
	 Choosing alt 0 in insn 4256:  (0) =D  (1) =c  (2) a  (3) 0  (4) 1 {*rep_stosdi_rex64}
      Creating newreg=3022 from oldreg=2680, assigning class DIREG to r3022
 4256: {r2682:DI=0;r3022:DI=r2682:DI<<0x3+r3022:DI;[r3022:DI]=0;use r2681:DI;use r2682:DI;}
      REG_UNUSED r2682:DI
    Inserting insn reload before:
 5896: r3022:DI=r2680:DI
    Inserting insn reload after:
 5897: r2680:DI=r3022:DI

            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 4257:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 4258:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4259:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 4260:  (0) m  (1) re {*movsi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 4261:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4262:  (0) =r  (1) v {fix_truncsfsi_sse}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 4263:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4264:  (0) =r  (1) g {*movsi_internal}
            1 Early clobber: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4265:  (0) =a  (1) =&d  (2) 0  (3) rm {*divmodsi4}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 4266:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4267:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 4268:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 4269:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 4270:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4273:  (0) =r  (1) g {*movsi_internal}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 4274:  (0) r  (1) 0  (2) rm {*subsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 4275:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4280:  (0) =r  (1) g {*movsi_internal}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 4281:  (0) r  (1) 0  (2) rm {*subsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 4282:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4285:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4286:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 4289:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4292:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 4293:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4294:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4295:  (0) rm  (1) re {*cmpsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 4298:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 4301:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 4302:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 4303:  (0) r  (1) rem {*movdi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 4304:  (0) r  (1) r  (2) le {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 4309:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 4310:  (0) r  (1) Z {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 4311:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4312:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4315:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4316:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4319:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 4320:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4322:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4324:  (0) =rm  (1) 0  (2) re {*subdi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4325:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4328:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4329:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 4330
	 Choosing alt 0 in insn 4330:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 4331:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 4332:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4333:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4334:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4337:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 4338:  (0) r  (1) r  (2) le {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4340:  (0) =rm  (1) 0  (2) cI {*ashlsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4341:  (0) =r  (1) %0  (2) rme {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 4342:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 4343:  (0) m  (1) re {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 4344:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 4345:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4346:  (0) =<  (1) re*m {*pushdi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4347:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-8)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 4350:  (0) r  (1) Z {*movdi_internal} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 4351:  (0) r  (1) Z {*movdi_internal} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 4352:  (0) r  (1) Z {*movdi_internal} (sp_off=-16)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 4353:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 4354:  (0) q  (1) n {*movqi_internal} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4355:  (0) rBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 4356:  (0) =r  (1) %0  (2) rme {*adddi_1} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4357:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 4358:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 4359:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4360:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 4361:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4363:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4365:  (0) =rm  (1) 0  (2) re {*subdi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4366:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4369:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4370:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 4371
	 Choosing alt 0 in insn 4371:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 4372:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 4373:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4374:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 4375:  (0) m  (1) re {*movsi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 4376:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 4377:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 4378:  (0) v  (1) vm {*cmpisf}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 4384:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 4385:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 4386:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 4387:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 4392:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 4393:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4396:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4397:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 4398:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4400:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4401:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4402:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4403:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 4406:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4408:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4409:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4410:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4411:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4414:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 4415:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 4416:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4417:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 4418:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 4419
	 Choosing alt 0 in insn 4419:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 4420:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 4421:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 4422:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4423:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 4424:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 4425:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4426:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 4427:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 4428
	 Choosing alt 0 in insn 4428:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 4429:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 4430:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 4431:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 4432:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 4433:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 4439:  (0) rm  (1) 0  (2) re {*addsi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 4445:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 4446:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4447:  (0) =<  (1) re*m {*pushdi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4448:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-8)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 4451:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 4452:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 4453:  (0) r  (1) Z {*movdi_internal} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 4454:  (0) r  (1) Z {*movdi_internal} (sp_off=-16)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 4455:  (0) q  (1) n {*movqi_internal} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4456:  (0) rBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 4457:  (0) =r  (1) %0  (2) rme {*adddi_1} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 4458:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 4459:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 4460:  (0) r  (1) Z {*movdi_internal}
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            3 Small class reload: reject+=3
          alt=0,overall=19,losers=2,rld_nregs=2
	 Choosing alt 0 in insn 4461:  (0) =D  (1) =c  (2) a  (3) 0  (4) 1 {*rep_stosdi_rex64}
      Creating newreg=3023 from oldreg=2721, assigning class DIREG to r3023
 4461: {r2723:DI=0;r3023:DI=r2723:DI<<0x3+r3023:DI;[r3023:DI]=0;use r2722:DI;use r2723:DI;}
      REG_UNUSED r2723:DI
    Inserting insn reload before:
 5898: r3023:DI=r2721:DI
    Inserting insn reload after:
 5899: r2721:DI=r3023:DI

            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 4462:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 4463:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4464:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 4465:  (0) m  (1) re {*movsi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 4466:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4467:  (0) =r  (1) v {fix_truncsfsi_sse}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 4468:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4469:  (0) =r  (1) g {*movsi_internal}
            1 Early clobber: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4470:  (0) =a  (1) =&d  (2) 0  (3) rm {*divmodsi4}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 4471:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4472:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 4473:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 4474:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 4475:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4478:  (0) =r  (1) g {*movsi_internal}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 4479:  (0) r  (1) 0  (2) rm {*subsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 4480:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4485:  (0) =r  (1) g {*movsi_internal}
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 4486:  (0) r  (1) 0  (2) rm {*subsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 4487:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4490:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4491:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 4494:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4497:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 4498:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4499:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4500:  (0) rm  (1) re {*cmpsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 4503:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 4506:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 4507:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 4508:  (0) r  (1) rem {*movdi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 4509:  (0) r  (1) r  (2) le {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 4514:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 4515:  (0) r  (1) Z {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 4516:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4517:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4520:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 4521:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 4522:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4528:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4529:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4532:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 4533:  (0) v  (1) r {*floatsisf2_mixed}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 4534:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 4535
	 Choosing alt 1 in insn 4535:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 4537:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 4538:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 4539:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4540:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4541:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 4542:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4544:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4545:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4546:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4547:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 4550:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4552:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4553:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4554:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4555:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4558:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4559:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 4560:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4561:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4562:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 4563
	 Choosing alt 0 in insn 4563:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 4564:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 4565:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 4566:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 4567:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 4568:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 4569:  (0) v  (1) vm {*cmpiusf}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 4571:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 4572:  (0) v  (1) vm {*cmpiusf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4578:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4579:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 4580:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4581:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4582:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 4583
	 Choosing alt 0 in insn 4583:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 4584:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 4585:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 4586:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 4587:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4588:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4589:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 4590:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4591:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4592:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 4593
	 Choosing alt 0 in insn 4593:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 4594:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 4595:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 4596:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 4597:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4602:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4603:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 4604:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4605:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4606:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 4607
	 Choosing alt 0 in insn 4607:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 4608:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 4609:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 4610:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4611:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 4612:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4613:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4614:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 4615:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4616:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4617:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 4618
	 Choosing alt 0 in insn 4618:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 4619:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 4620:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 4621:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 4622:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4623:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4624:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 4625:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4626:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4627:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 4628
	 Choosing alt 0 in insn 4628:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 4629:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 4630:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 4631:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 4632:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 4633
	 Choosing alt 1 in insn 4633:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 4634:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 4635
	 Choosing alt 1 in insn 4635:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 4636:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4637:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4638:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 4639:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4640:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4641:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 4642
	 Choosing alt 0 in insn 4642:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 4643:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 4644:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 4645:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 4646:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 4647:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 4648:  (0) x  (1) 0  (2) xm {*fop_sf_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4650:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4651:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 4652:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4653:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4654:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 4655
	 Choosing alt 0 in insn 4655:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 4656:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 4657:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 4658:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 4659:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 4660
	 Choosing alt 1 in insn 4660:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 4661:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 4662
	 Choosing alt 1 in insn 4662:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 4663:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4664:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4665:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 4666:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4667:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4668:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 4669
	 Choosing alt 0 in insn 4669:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 4670:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 4671:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 4672:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 4673:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4674:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4675:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 4676:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4677:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4678:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 4679
	 Choosing alt 0 in insn 4679:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 4680:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 4681:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 4682:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 4683:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 4684:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=616,losers=2,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=625,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=621,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=630,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 4686:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4688:  (1) rBwBz {*call_value}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
          alt=0,overall=1229,losers=4,rld_nregs=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
          alt=1,overall=628,losers=3,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=1214,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            Cycle danger: overall += LRA_MAX_REJECT
          alt=4,overall=1227,losers=2,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=7,overall=621,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
          alt=8,overall=13,losers=1,rld_nregs=0
            Staticly defined alt reject+=6
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 4689:  (0) ?r  (1) Yj {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 4690:  (0) ?m  (1) rF {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4691:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4692:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 4693:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4694:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4695:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 4696:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4697:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4698:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4699:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 4700
	 Choosing alt 0 in insn 4700:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 4701:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 4702:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 4703:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 4704:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4705:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4706:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 4707:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4708:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4709:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 4710
	 Choosing alt 0 in insn 4710:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 4711:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 4712:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 4713:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 4714:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4715:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4716:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 4717:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4718:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4719:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 4720
	 Choosing alt 0 in insn 4720:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 4721:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 4722:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 4723:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4724:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4725:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 4726:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 4727:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 4728:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 4729:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 4730:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 4731:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 4732:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 4733
	 Choosing alt 1 in insn 4733:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 4735:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=616,losers=2,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=625,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=621,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=630,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 4737:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4739:  (1) rBwBz {*call_value}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
          alt=0,overall=1229,losers=4,rld_nregs=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
          alt=1,overall=628,losers=3,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=1214,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            Cycle danger: overall += LRA_MAX_REJECT
          alt=4,overall=1227,losers=2,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=7,overall=621,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
          alt=8,overall=13,losers=1,rld_nregs=0
            Staticly defined alt reject+=6
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 4740:  (0) ?r  (1) Yj {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 4741:  (0) ?m  (1) rF {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 4742:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=616,losers=2,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=625,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=621,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=630,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 4743:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4745:  (1) rBwBz {*call_value}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
          alt=0,overall=1229,losers=4,rld_nregs=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
          alt=1,overall=628,losers=3,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=1214,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            Cycle danger: overall += LRA_MAX_REJECT
          alt=4,overall=1227,losers=2,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=7,overall=621,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
          alt=8,overall=13,losers=1,rld_nregs=0
            Staticly defined alt reject+=6
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 4746:  (0) ?r  (1) Yj {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 4747:  (0) ?m  (1) rF {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 4748:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 4749:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 4750
	 Choosing alt 1 in insn 4750:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 4751:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4752:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4753:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 4754:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4755:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4756:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 4757
	 Choosing alt 0 in insn 4757:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 4758:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 4759:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 4760:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 4761:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4762:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4763:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 4764:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4765:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4766:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 4767
	 Choosing alt 0 in insn 4767:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 4768:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 4769:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 4770:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 4771:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4772:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4773:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 4774:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4775:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4776:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 4777
	 Choosing alt 0 in insn 4777:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 4778:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 4779:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 4780:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 4781:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 4782:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=616,losers=2,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=625,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=621,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=630,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 4784:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4786:  (1) rBwBz {*call_value}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
          alt=0,overall=1229,losers=4,rld_nregs=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
          alt=1,overall=628,losers=3,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=1214,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            Cycle danger: overall += LRA_MAX_REJECT
          alt=4,overall=1227,losers=2,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=7,overall=621,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
          alt=8,overall=13,losers=1,rld_nregs=0
            Staticly defined alt reject+=6
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 4787:  (0) ?r  (1) Yj {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 4788:  (0) ?m  (1) rF {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4789:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4790:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 4791:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4792:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4793:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 4794:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4795:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4796:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4797:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 4798
	 Choosing alt 0 in insn 4798:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 4799:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 4800:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 4801:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 4802:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4803:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4804:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 4805:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4806:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4807:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 4808
	 Choosing alt 0 in insn 4808:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 4809:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 4810:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 4811:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 4812:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4813:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4814:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 4815:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4816:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4817:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 4818
	 Choosing alt 0 in insn 4818:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 4819:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 4820:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 4821:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4822:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4823:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 4824:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 4825:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 4826:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 4827:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 4828:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 4829:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 4830:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 4831
	 Choosing alt 1 in insn 4831:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 4833:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=616,losers=2,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=625,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=621,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=630,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 4835:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4837:  (1) rBwBz {*call_value}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
          alt=0,overall=1229,losers=4,rld_nregs=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
          alt=1,overall=628,losers=3,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=1214,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            Cycle danger: overall += LRA_MAX_REJECT
          alt=4,overall=1227,losers=2,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=7,overall=621,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
          alt=8,overall=13,losers=1,rld_nregs=0
            Staticly defined alt reject+=6
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 4838:  (0) ?r  (1) Yj {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 4839:  (0) ?m  (1) rF {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 4840:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=616,losers=2,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=625,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=621,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=630,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 4841:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4843:  (1) rBwBz {*call_value}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
          alt=0,overall=1229,losers=4,rld_nregs=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
          alt=1,overall=628,losers=3,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=1214,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            Cycle danger: overall += LRA_MAX_REJECT
          alt=4,overall=1227,losers=2,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=7,overall=621,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
          alt=8,overall=13,losers=1,rld_nregs=0
            Staticly defined alt reject+=6
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 4844:  (0) ?r  (1) Yj {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 4845:  (0) ?m  (1) rF {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 4846:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 4847:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 4848
	 Choosing alt 1 in insn 4848:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 4849:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4850:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4851:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 4852:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4853:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4854:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 4855
	 Choosing alt 0 in insn 4855:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 4856:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 4857:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 4858:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 4859:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4862:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4863:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 4864:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4865:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4866:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 4867
	 Choosing alt 0 in insn 4867:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 4868:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 4869:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 4870:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4871:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 4872:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4873:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4874:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 4875:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4876:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4877:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 4878:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4879:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4880:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4881:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 4882
	 Choosing alt 0 in insn 4882:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 4883:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4884:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4885:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 4886:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4887:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4888:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 4889
	 Choosing alt 0 in insn 4889:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 4890:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 4891:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 4892:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 4893:  (0) v  (1) m {*movsf_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 4894:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 4895:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4896:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4897:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 4898:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4899:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4900:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 4901:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4902:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4903:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4904:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 4905
	 Choosing alt 0 in insn 4905:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 4906:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4907:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4908:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 4909:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4910:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4911:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 4912
	 Choosing alt 0 in insn 4912:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 4913:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 4914:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 4915:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 4916:  (0) v  (1) m {*movsf_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 4917:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 4918:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4919:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4920:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 4921:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4922:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4923:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 4924:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4925:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4926:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4927:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 4928
	 Choosing alt 0 in insn 4928:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 4929:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 4930:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 4931:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 4932:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 4933:  (0) x  (1) 0  (2) xm {*fop_sf_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4935:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4936:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 4937:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4938:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4939:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 4940:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4941:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4942:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4943:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 4944
	 Choosing alt 0 in insn 4944:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 4945:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 4946:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 4947:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4948:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4949:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 4950:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4951:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4952:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 4953
	 Choosing alt 0 in insn 4953:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 4954:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 4955
	 Choosing alt 1 in insn 4955:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 4956:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 4957:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4958:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4959:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 4960:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4961:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4962:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 4963:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4964:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4965:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4966:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 4967
	 Choosing alt 0 in insn 4967:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 4968:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 4969:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 4970:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4971:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4972:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 4973:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4974:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4975:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 4976:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4977:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4978:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4979:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 4980
	 Choosing alt 0 in insn 4980:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 4981:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 4982:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 4983:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4984:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4985:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 4986:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4987:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4988:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 4989
	 Choosing alt 0 in insn 4989:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 4990:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 4991
	 Choosing alt 1 in insn 4991:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 4992:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 4993:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4994:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4995:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 4996:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4997:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 4998:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 4999
	 Choosing alt 0 in insn 4999:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 5000:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 5001:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 5002:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 5003:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5004:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5005:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 5006:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5007:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5008:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 5009
	 Choosing alt 0 in insn 5009:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 5010:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 5011:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 5012:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5013:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5014:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 5015:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 5016:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 5017:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 5018:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 5019:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 5020:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 5021:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5022:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5023:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 5024:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5025:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5026:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 5027
	 Choosing alt 0 in insn 5027:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 5028:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 5029
	 Choosing alt 1 in insn 5029:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 5030:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 5031:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 5032:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 5038:  (0) rm  (1) 0  (2) re {*addsi_1}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=600
            alt=1: Bad operand -- refuse
	 Choosing alt 0 in insn 5044:  (0) =<  (1) re*m {*pushdi2_rex64}
      Creating newreg=3024, assigning class GENERAL_REGS to r3024
 5044: [--sp:DI]=r3024:DI
      REG_ARGS_SIZE 0x8
    Inserting insn reload before:
 5900: r3024:DI=`vis.4483'

            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=610,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
          alt=4,overall=1,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 5900:  (0) r  (1) i {*movdi_internal}
      Change to class INDEX_REGS for r3024
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=600
            alt=1: Bad operand -- refuse
	 Choosing alt 0 in insn 5045:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-8)
      Creating newreg=3025, assigning class GENERAL_REGS to r3025
 5045: [--sp:DI]=r3025:DI
      REG_ARGS_SIZE 0x10
    Inserting insn reload before:
 5901: r3025:DI=`ppp.4437'

            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=610,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
          alt=4,overall=1,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 5901:  (0) r  (1) i {*movdi_internal} (sp_off=-8)
      Change to class INDEX_REGS for r3025
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 5046:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 5047:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 5048:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 5049:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 5050:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 5051:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 5052:  (0) q  (1) n {*movqi_internal} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5053:  (0) rBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 5054:  (0) =r  (1) %0  (2) rme {*adddi_1} (sp_off=-16)
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 5055:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 5056:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5057:  (0) =<  (1) re*m {*pushdi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5058:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-8)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 5061:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 5062:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 5063:  (0) r  (1) Z {*movdi_internal} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 5064:  (0) r  (1) Z {*movdi_internal} (sp_off=-16)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 5065:  (0) q  (1) n {*movqi_internal} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5066:  (0) rBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 5067:  (0) =r  (1) %0  (2) rme {*adddi_1} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 5068:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 5069:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 5070:  (0) r  (1) Z {*movdi_internal}
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            3 Small class reload: reject+=3
          alt=0,overall=19,losers=2,rld_nregs=2
	 Choosing alt 0 in insn 5071:  (0) =D  (1) =c  (2) a  (3) 0  (4) 1 {*rep_stosdi_rex64}
      Creating newreg=3026 from oldreg=2905, assigning class DIREG to r3026
 5071: {r2907:DI=0;r3026:DI=r2907:DI<<0x3+r3026:DI;[r3026:DI]=0;use r2906:DI;use r2907:DI;}
      REG_UNUSED r2907:DI
    Inserting insn reload before:
 5902: r3026:DI=r2905:DI
    Inserting insn reload after:
 5903: r2905:DI=r3026:DI

            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 5072:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 5073:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5074:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5075:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 5076:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5078:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5080:  (0) =rm  (1) 0  (2) re {*subdi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5081:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 5084:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5085:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 5086:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 5087:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 5088:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 5089:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 5094:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 5095:  (0) r  (1) Z {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 5096:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5097:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5100:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5101:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5104:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5105:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5108:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5109:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 5113:  (0) =r  (1) %0  (2) rme {*adddi_1}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=600
            alt=1: Bad operand -- refuse
	 Choosing alt 0 in insn 5114:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-8)
      Creating newreg=3027, assigning class GENERAL_REGS to r3027
 5114: [--sp:DI]=r3027:DI
      REG_ARGS_SIZE 0x10
    Inserting insn reload before:
 5904: r3027:DI=`egrid5.4394'

            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=610,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
          alt=4,overall=1,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 5904:  (0) r  (1) i {*movdi_internal} (sp_off=-8)
      Change to class INDEX_REGS for r3027
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=600
            alt=1: Bad operand -- refuse
	 Choosing alt 0 in insn 5115:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-16)
      Creating newreg=3028, assigning class GENERAL_REGS to r3028
 5115: [--sp:DI]=r3028:DI
      REG_ARGS_SIZE 0x18
    Inserting insn reload before:
 5905: r3028:DI=`egrid4.4392'

            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=610,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
          alt=4,overall=1,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 5905:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
      Change to class INDEX_REGS for r3028
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=600
            alt=1: Bad operand -- refuse
	 Choosing alt 0 in insn 5116:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-24)
      Creating newreg=3029, assigning class GENERAL_REGS to r3029
 5116: [--sp:DI]=r3029:DI
      REG_ARGS_SIZE 0x20
    Inserting insn reload before:
 5906: r3029:DI=`egrid3.4390'

            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=610,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
          alt=4,overall=1,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 5906:  (0) r  (1) i {*movdi_internal} (sp_off=-24)
      Change to class INDEX_REGS for r3029
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=600
            alt=1: Bad operand -- refuse
	 Choosing alt 0 in insn 5117:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-32)
      Creating newreg=3030, assigning class GENERAL_REGS to r3030
 5117: [--sp:DI]=r3030:DI
      REG_ARGS_SIZE 0x28
    Inserting insn reload before:
 5907: r3030:DI=`equiv.2.4368'

            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=610,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
          alt=4,overall=1,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 5907:  (0) r  (1) i {*movdi_internal} (sp_off=-32)
      Change to class INDEX_REGS for r3030
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=600
            alt=1: Bad operand -- refuse
	 Choosing alt 0 in insn 5118:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-40)
      Creating newreg=3031, assigning class GENERAL_REGS to r3031
 5118: [--sp:DI]=r3031:DI
      REG_ARGS_SIZE 0x30
    Inserting insn reload before:
 5908: r3031:DI=`equiv.3.4378'

            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=610,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
          alt=4,overall=1,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 5908:  (0) r  (1) i {*movdi_internal} (sp_off=-40)
      Change to class INDEX_REGS for r3031
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5119:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-48)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5120:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-56)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5121:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-64)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5122:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-72)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=600
            alt=1: Bad operand -- refuse
	 Choosing alt 0 in insn 5123:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-80)
      Creating newreg=3032, assigning class GENERAL_REGS to r3032
 5123: [--sp:DI]=r3032:DI
      REG_ARGS_SIZE 0x58
    Inserting insn reload before:
 5909: r3032:DI=const(`loops_'+0x25d0)

            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=610,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
          alt=4,overall=1,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 5909:  (0) r  (1) i {*movdi_internal} (sp_off=-80)
      Change to class INDEX_REGS for r3032
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=600
            alt=1: Bad operand -- refuse
	 Choosing alt 0 in insn 5124:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-88)
      Creating newreg=3033, assigning class GENERAL_REGS to r3033
 5124: [--sp:DI]=r3033:DI
      REG_ARGS_SIZE 0x60
    Inserting insn reload before:
 5910: r3033:DI=const(`extra_'+0xd1ca30)

            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=610,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
          alt=4,overall=1,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 5910:  (0) r  (1) i {*movdi_internal} (sp_off=-88)
      Change to class INDEX_REGS for r3033
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 5125:  (0) r  (1) i {*movdi_internal} (sp_off=-96)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 5126:  (0) r  (1) i {*movdi_internal} (sp_off=-96)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 5127:  (0) r  (1) i {*movdi_internal} (sp_off=-96)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 5128:  (0) r  (1) i {*movdi_internal} (sp_off=-96)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 5129:  (0) r  (1) i {*movdi_internal} (sp_off=-96)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 5130:  (0) r  (1) i {*movdi_internal} (sp_off=-96)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 5131:  (0) q  (1) n {*movqi_internal} (sp_off=-96)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5132:  (0) rBwBz {*call} (sp_off=-96)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 5133:  (0) =r  (1) %0  (2) rme {*adddi_1} (sp_off=-96)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5134:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5135:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 5138:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 5139:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5140:  (0) =<  (1) re*m {*pushdi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5141:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-8)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 5144:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 5145:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 5146:  (0) r  (1) Z {*movdi_internal} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 5147:  (0) r  (1) Z {*movdi_internal} (sp_off=-16)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 5148:  (0) q  (1) n {*movqi_internal} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5149:  (0) rBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 5150:  (0) =r  (1) %0  (2) rme {*adddi_1} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 5151:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 5152:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 5153:  (0) r  (1) Z {*movdi_internal}
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            3 Small class reload: reject+=3
          alt=0,overall=19,losers=2,rld_nregs=2
	 Choosing alt 0 in insn 5154:  (0) =D  (1) =c  (2) a  (3) 0  (4) 1 {*rep_stosdi_rex64}
      Creating newreg=3034 from oldreg=2918, assigning class DIREG to r3034
 5154: {r2920:DI=0;r3034:DI=r2920:DI<<0x3+r3034:DI;[r3034:DI]=0;use r2919:DI;use r2920:DI;}
      REG_UNUSED r2920:DI
    Inserting insn reload before:
 5911: r3034:DI=r2918:DI
    Inserting insn reload after:
 5912: r2918:DI=r3034:DI

            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 5155:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 5156:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 5157:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 5158:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 5159:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 5163:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 5164:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 5165:  (0) r  (1) Z {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 5166:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5167:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5170:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5171:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5174:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5175:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5179:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5180:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 5181:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5183:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5184:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5185:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5186:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 5189:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5191:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5192:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5193:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5194:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5197:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 5198:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 5199:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5200:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 5201:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 5202
	 Choosing alt 0 in insn 5202:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 5203:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5204:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 5205:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 5206:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5207:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 5208:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 5209
	 Choosing alt 0 in insn 5209:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 5210:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 5211:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 5212:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 5213:  (0) v  (1) m {*movsf_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 5214:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 5215:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 5216:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 5222:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 5228:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5230:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5231:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5232:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5233:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5234:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5237:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5238:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 5239:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5241:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5242:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5243:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5244:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 5247:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5249:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5250:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5251:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5252:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5255:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 5256:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 5257:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5258:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 5259:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 5260:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5261:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5262:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 5263:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 5264
	 Choosing alt 0 in insn 5264:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 5265:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 5266:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 5267:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 5268:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 5269:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 5275:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5281:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 5282:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 5283:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 5289:  (0) =r  (1) %0  (2) rme {*adddi_1}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=600
            alt=1: Bad operand -- refuse
	 Choosing alt 0 in insn 5290:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-8)
      Creating newreg=3035, assigning class GENERAL_REGS to r3035
 5290: [--sp:DI]=r3035:DI
      REG_ARGS_SIZE 0x10
    Inserting insn reload before:
 5913: r3035:DI=`equiv.1.4359'

            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=610,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
          alt=4,overall=1,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 5913:  (0) r  (1) i {*movdi_internal} (sp_off=-8)
      Change to class INDEX_REGS for r3035
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5291:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5292:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-24)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5293:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-32)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5294:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-40)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5295:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-48)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=600
            alt=1: Bad operand -- refuse
	 Choosing alt 0 in insn 5296:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-56)
      Creating newreg=3036, assigning class GENERAL_REGS to r3036
 5296: [--sp:DI]=r3036:DI
      REG_ARGS_SIZE 0x40
    Inserting insn reload before:
 5914: r3036:DI=`equiv.3.4378'

            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=610,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
          alt=4,overall=1,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 5914:  (0) r  (1) i {*movdi_internal} (sp_off=-56)
      Change to class INDEX_REGS for r3036
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=600
            alt=1: Bad operand -- refuse
	 Choosing alt 0 in insn 5297:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-64)
      Creating newreg=3037, assigning class GENERAL_REGS to r3037
 5297: [--sp:DI]=r3037:DI
      REG_ARGS_SIZE 0x48
    Inserting insn reload before:
 5915: r3037:DI=const(`masks_'+0x90aec)

            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=610,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
          alt=4,overall=1,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 5915:  (0) r  (1) i {*movdi_internal} (sp_off=-64)
      Change to class INDEX_REGS for r3037
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=600
            alt=1: Bad operand -- refuse
	 Choosing alt 0 in insn 5298:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-72)
      Creating newreg=3038, assigning class GENERAL_REGS to r3038
 5298: [--sp:DI]=r3038:DI
      REG_ARGS_SIZE 0x50
    Inserting insn reload before:
 5916: r3038:DI=`equiv.2.4368'

            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=610,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
          alt=4,overall=1,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 5916:  (0) r  (1) i {*movdi_internal} (sp_off=-72)
      Change to class INDEX_REGS for r3038
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 5299:  (0) r  (1) i {*movdi_internal} (sp_off=-80)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 5300:  (0) r  (1) i {*movdi_internal} (sp_off=-80)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 5301:  (0) r  (1) i {*movdi_internal} (sp_off=-80)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 5302:  (0) r  (1) i {*movdi_internal} (sp_off=-80)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 5303:  (0) r  (1) i {*movdi_internal} (sp_off=-80)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 5304:  (0) r  (1) i {*movdi_internal} (sp_off=-80)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 5305:  (0) q  (1) n {*movqi_internal} (sp_off=-80)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5306:  (0) rBwBz {*call} (sp_off=-80)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 5307:  (0) =r  (1) %0  (2) rme {*adddi_1} (sp_off=-80)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5308:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5309:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 5312:  (0) r  (1) i {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 5313:  (0) r  (1) i {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 5314:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5315:  (0) rBwBz {*call}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 5318:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5320:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5321:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5322:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5323:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5324:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5327:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5328:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5331:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 5332:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5334:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5336:  (0) =rm  (1) 0  (2) re {*subdi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5337:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5340:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5341:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 5342
	 Choosing alt 0 in insn 5342:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 5343:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 5344:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5345:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5346:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5349:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 5350:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5352:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5354:  (0) =rm  (1) 0  (2) re {*subdi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5355:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5358:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5359:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 5360
	 Choosing alt 0 in insn 5360:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 5361:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 5362:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5363:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 5364:  (0) m  (1) re {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 5365:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 5366:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 5367:  (0) r  (1) i {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 5368:  (0) r  (1) i {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 5371:  (0) r  (1) i {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 5372:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5373:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 5374:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 5375:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5376:  (0) =<  (1) re*m {*pushdi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5377:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-8)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 5380:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 5381:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 5382:  (0) r  (1) Z {*movdi_internal} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 5383:  (0) r  (1) Z {*movdi_internal} (sp_off=-16)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 5384:  (0) q  (1) n {*movqi_internal} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5385:  (0) rBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 5386:  (0) =r  (1) %0  (2) rme {*adddi_1} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 5387:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 5388:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 5389:  (0) r  (1) Z {*movdi_internal}
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            3 Small class reload: reject+=3
          alt=0,overall=19,losers=2,rld_nregs=2
	 Choosing alt 0 in insn 5390:  (0) =D  (1) =c  (2) a  (3) 0  (4) 1 {*rep_stosdi_rex64}
      Creating newreg=3039 from oldreg=2953, assigning class DIREG to r3039
 5390: {r2955:DI=0;r3039:DI=r2955:DI<<0x3+r3039:DI;[r3039:DI]=0;use r2954:DI;use r2955:DI;}
      REG_UNUSED r2955:DI
    Inserting insn reload before:
 5917: r3039:DI=r2953:DI
    Inserting insn reload after:
 5918: r2953:DI=r3039:DI

            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 5391:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 5392:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5393:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 5394:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5395:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5396:  (0) rm  (1) re {*cmpsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 5399:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 5402:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 5403:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 5404:  (0) r  (1) rem {*movdi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 5405:  (0) r  (1) r  (2) le {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 5410:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 5411:  (0) r  (1) Z {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 5412:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5413:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5416:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5417:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5420:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 5421:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5423:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5425:  (0) =rm  (1) 0  (2) re {*subdi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5426:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5429:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5430:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 5431
	 Choosing alt 0 in insn 5431:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 5432:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 5433:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5434:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5435:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5438:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 5439:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5441:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5443:  (0) =rm  (1) 0  (2) re {*subdi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5444:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5447:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5448:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 5449
	 Choosing alt 0 in insn 5449:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 5450:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 5451:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5452:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 5453:  (0) m  (1) re {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 5454:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 5455:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 5456:  (0) r  (1) i {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 5457:  (0) r  (1) i {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 5460:  (0) r  (1) i {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 5461:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5462:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 5463:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 5464:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5465:  (0) =<  (1) re*m {*pushdi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5466:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-8)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 5469:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 5470:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 5471:  (0) r  (1) Z {*movdi_internal} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 5472:  (0) r  (1) Z {*movdi_internal} (sp_off=-16)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 5473:  (0) q  (1) n {*movqi_internal} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5474:  (0) rBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 5475:  (0) =r  (1) %0  (2) rme {*adddi_1} (sp_off=-16)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 5476:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 5477:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 5478:  (0) r  (1) Z {*movdi_internal}
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            3 Small class reload: reject+=3
          alt=0,overall=19,losers=2,rld_nregs=2
	 Choosing alt 0 in insn 5479:  (0) =D  (1) =c  (2) a  (3) 0  (4) 1 {*rep_stosdi_rex64}
      Creating newreg=3040 from oldreg=2972, assigning class DIREG to r3040
 5479: {r2974:DI=0;r3040:DI=r2974:DI<<0x3+r3040:DI;[r3040:DI]=0;use r2973:DI;use r2974:DI;}
      REG_UNUSED r2974:DI
    Inserting insn reload before:
 5919: r3040:DI=r2972:DI
    Inserting insn reload after:
 5920: r2972:DI=r3040:DI

            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 5480:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 5481:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5482:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 5483:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5484:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5485:  (0) rm  (1) re {*cmpsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 5488:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 5491:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 5492:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 5493:  (0) r  (1) rem {*movdi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 5494:  (0) r  (1) r  (2) le {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 5499:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 5500:  (0) r  (1) Z {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 5501:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5502:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5505:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 5506:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 5507:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 5514:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5516:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 5517:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 5519:  (0) rBwBz {*call}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #1: **********

EBB 2 3
EBB 4 5
EBB 6
EBB 7 8
EBB 9 10
EBB 11
EBB 12 13
EBB 14 15
EBB 364
EBB 16
EBB 363
EBB 17
EBB 18 19
EBB 20 21
EBB 22 23
EBB 367
EBB 24
EBB 366
EBB 25
EBB 365
EBB 26
EBB 27 28 29
EBB 30 31
EBB 32 33
EBB 34
EBB 35 36
EBB 369
EBB 37
EBB 368
EBB 38
EBB 39 40
EBB 41 42
EBB 43 44
EBB 372
EBB 45
EBB 371
EBB 46
EBB 370
EBB 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69
EBB 70 71 72 73 74
EBB 75
EBB 76 77
EBB 78 79
EBB 376
EBB 80
EBB 375
EBB 81
EBB 82 83
EBB 84 85
EBB 86 87 88
EBB 89 90
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=3041 from oldreg=449, assigning class SSE_REGS to inheritance r3041
    Original reg change 449->3041 (bb89):
 5847: r3041:SF=r2996:SF
    Add original<-inheritance after:
 5921: r449:SF=r3041:SF

    Inheritance reuse change 449->3041 (bb89):
 5848: r2997:SF=r3041:SF
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
	    Removing dead insn:
  5921: r449:SF=r3041:SF
deleting insn with uid = 5921.
EBB 91 92 93
EBB 94
EBB 95
EBB 96 97
EBB 98 99 100 101 102 103
EBB 104
EBB 378
EBB 105
EBB 377
EBB 106
EBB 374
EBB 107
EBB 108 109 110 111 112
EBB 113
EBB 114 115 116 117
EBB 118
EBB 119 120 121 122
EBB 123
EBB 124 125 126 127
EBB 128
EBB 129 130 131 132
EBB 133
EBB 134 135 136 137
EBB 138
EBB 139 140 141 142
EBB 143
EBB 144 145 146 147
EBB 148
EBB 149 150
EBB 151 152
EBB 153 154
EBB 155 156
EBB 157 158
EBB 159 160
EBB 161 162 163 164
EBB 165
EBB 166 167 168 169
EBB 170
EBB 171 172 173 174
EBB 175
EBB 176 177 178 179
EBB 180
EBB 181 182 183
EBB 184 185
EBB 186 187 188 189
EBB 190
EBB 380
EBB 191
EBB 379
EBB 192
EBB 193 194
EBB 195 196
EBB 382
EBB 197
EBB 381
EBB 198 199
EBB 200
EBB 201 202 203
EBB 204 205
EBB 206 207
EBB 384
EBB 208
EBB 383
EBB 209 210
EBB 211
EBB 212 213 214 215
EBB 216 217
EBB 218 219
EBB 386
EBB 220
EBB 385
EBB 221
EBB 222
EBB 223 224
EBB 225 226 227
EBB 228 229
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=3042 from oldreg=1020, assigning class SSE_REGS to inheritance r3042
    Original reg change 1020->3042 (bb228):
 5886: r3042:SF=r3016:SF
    Add original<-inheritance after:
 5922: r1020:SF=r3042:SF

    Inheritance reuse change 1020->3042 (bb228):
 5887: r3017:SF=r3042:SF
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
	    Removing dead insn:
  5922: r1020:SF=r3042:SF
deleting insn with uid = 5922.
EBB 230 231
EBB 232 233
EBB 234
EBB 235 236 237
EBB 238
EBB 239 240
EBB 241
EBB 242
EBB 388
EBB 243
EBB 387
EBB 244 245
EBB 246
EBB 247 248 249 250
EBB 251
EBB 252 253 254
EBB 255 256
EBB 257 258
EBB 390
EBB 259
EBB 389
EBB 260 261
EBB 262
EBB 263 264 265
EBB 266 267
EBB 268 269
EBB 392
EBB 270
EBB 391
EBB 271 272
EBB 273
EBB 274 275 276 277
EBB 278
EBB 279
EBB 280 281
EBB 282 283
EBB 394
EBB 284
EBB 393
EBB 285 286
EBB 287
EBB 288 289
EBB 290 291
EBB 292
EBB 293 294 295 296
EBB 297
EBB 298
EBB 299 300
EBB 301 302
EBB 396
EBB 303
EBB 395
EBB 304 305
EBB 306
EBB 307 308
EBB 309 310
EBB 311
EBB 312
EBB 373
EBB 313 314
EBB 315 316
EBB 317 318 319 320
EBB 321
EBB 322
EBB 398
EBB 323
EBB 397
EBB 324
EBB 325 326 327
EBB 328 329
EBB 330 331
EBB 332
EBB 333 334
EBB 335 336
EBB 401
EBB 337
EBB 400
EBB 338
EBB 339 340
EBB 341 342
EBB 343 344
EBB 404
EBB 345
EBB 403
EBB 346
EBB 402
EBB 347 348
EBB 349
EBB 350 351 352 353 354
EBB 355
EBB 356 357 358 359
EBB 360
EBB 361
EBB 399
EBB 362

********** Pseudo live ranges #1: **********

  BB 362
   Insn 5577: point = 0, n_alt = -1
   Insn 5519: point = 0, n_alt = 0
   Insn 5518: point = 0, n_alt = -2
   Insn 5517: point = 1, n_alt = 3
   Insn 5516: point = 2, n_alt = 0
   Insn 5515: point = 2, n_alt = -2
   Insn 5514: point = 3, n_alt = 3
   Insn 5576: point = 4, n_alt = -1
  BB 399
   Insn 5805: point = 4, n_alt = -1
  BB 350
   Insn 5325: point = 4, n_alt = -1
   Insn 5324: point = 4, n_alt = 0
   Insn 5323: point = 5, n_alt = 0
   Insn 5322: point = 7, n_alt = 0
   Insn 5321: point = 8, n_alt = 0
   Insn 5320: point = 9, n_alt = 0
  BB 361
   Insn 5693: point = 10, n_alt = -1
   Insn 5507: point = 10, n_alt = 1
   Insn 5506: point = 11, n_alt = 0
   Insn 5505: point = 13, n_alt = 0
  BB 360
   Insn 5502: point = 14, n_alt = 0
   Insn 5501: point = 14, n_alt = 3
   Insn 5500: point = 14, n_alt = 2
   Insn 5499: point = 14, n_alt = 2
   Insn 5498: point = 14, n_alt = -2
   Insn 5497: point = 15, n_alt = -2
   Insn 5496: point = 16, n_alt = -2
   Insn 5495: point = 17, n_alt = -2
   Insn 5494: point = 18, n_alt = 3
   Insn 5493: point = 19, n_alt = 3
   Insn 5492: point = 20, n_alt = 3
   Insn 5491: point = 21, n_alt = 3
  BB 359
   Insn 5488: point = 22, n_alt = 1
  BB 358
   Insn 5486: point = 22, n_alt = -1
   Insn 5485: point = 22, n_alt = 0
   Insn 5484: point = 23, n_alt = 0
   Insn 5483: point = 24, n_alt = 1
   Insn 5482: point = 25, n_alt = 0
   Insn 5481: point = 26, n_alt = 0
   Insn 5480: point = 27, n_alt = 1
   Insn 5920: point = 28, n_alt = -2
	Hard reg 1 is preferable by r3040 with profit 1000
   Insn 5479: point = 30, n_alt = 0
   Insn 5919: point = 31, n_alt = -2
	Hard reg 1 is preferable by r3040 with profit 2000
   Insn 5478: point = 33, n_alt = 2
   Insn 5477: point = 34, n_alt = 2
   Insn 5476: point = 35, n_alt = 2
   Insn 5475: point = 36, n_alt = 0
   Insn 5474: point = 36, n_alt = 0
   Insn 5473: point = 36, n_alt = 3
   Insn 5472: point = 36, n_alt = 2
   Insn 5471: point = 36, n_alt = 2
   Insn 5470: point = 36, n_alt = 4
   Insn 5469: point = 36, n_alt = 4
   Insn 5468: point = 36, n_alt = -2
   Insn 5467: point = 37, n_alt = -2
   Insn 5466: point = 38, n_alt = 0
   Insn 5465: point = 38, n_alt = 0
   Insn 5464: point = 38, n_alt = 3
   Insn 5463: point = 39, n_alt = 3
   Insn 5462: point = 40, n_alt = 0
   Insn 5461: point = 40, n_alt = 3
   Insn 5460: point = 40, n_alt = 4
   Insn 5459: point = 40, n_alt = -2
   Insn 5458: point = 41, n_alt = -2
   Insn 5457: point = 42, n_alt = 4
   Insn 5456: point = 42, n_alt = 4
   Insn 5455: point = 42, n_alt = 3
   Insn 5454: point = 43, n_alt = 3
   Insn 5453: point = 44, n_alt = 1
   Insn 5452: point = 45, n_alt = 0
   Insn 5451: point = 47, n_alt = 0
   Insn 5450: point = 49, n_alt = 0
   Insn 5449: point = 51, n_alt = 0
   Insn 5448: point = 53, n_alt = 0
   Insn 5447: point = 55, n_alt = 0
   Insn 5446: point = 56, n_alt = -2
   Insn 5445: point = 58, n_alt = -2
   Insn 5444: point = 60, n_alt = 0
   Insn 5443: point = 62, n_alt = 0
   Insn 5442: point = 63, n_alt = -2
   Insn 5441: point = 65, n_alt = 0
   Insn 5440: point = 67, n_alt = -2
   Insn 5439: point = 68, n_alt = 1
   Insn 5438: point = 70, n_alt = 0
  BB 357
   Insn 5436: point = 71, n_alt = -1
   Insn 5435: point = 71, n_alt = 0
   Insn 5434: point = 72, n_alt = 0
   Insn 5433: point = 74, n_alt = 0
   Insn 5432: point = 76, n_alt = 0
   Insn 5431: point = 78, n_alt = 0
   Insn 5430: point = 80, n_alt = 0
   Insn 5429: point = 82, n_alt = 0
   Insn 5428: point = 83, n_alt = -2
   Insn 5427: point = 85, n_alt = -2
   Insn 5426: point = 87, n_alt = 0
   Insn 5425: point = 89, n_alt = 0
   Insn 5424: point = 90, n_alt = -2
   Insn 5423: point = 92, n_alt = 0
   Insn 5422: point = 94, n_alt = -2
   Insn 5421: point = 95, n_alt = 1
   Insn 5420: point = 97, n_alt = 0
  BB 356
   Insn 5418: point = 98, n_alt = -1
   Insn 5417: point = 98, n_alt = 0
   Insn 5416: point = 99, n_alt = 0
  BB 355
   Insn 5413: point = 100, n_alt = 0
   Insn 5412: point = 100, n_alt = 3
   Insn 5411: point = 100, n_alt = 2
   Insn 5410: point = 100, n_alt = 2
   Insn 5409: point = 100, n_alt = -2
   Insn 5408: point = 101, n_alt = -2
   Insn 5407: point = 102, n_alt = -2
   Insn 5406: point = 103, n_alt = -2
   Insn 5405: point = 104, n_alt = 3
   Insn 5404: point = 105, n_alt = 3
   Insn 5403: point = 106, n_alt = 3
   Insn 5402: point = 107, n_alt = 3
  BB 354
   Insn 5399: point = 108, n_alt = 1
  BB 353
   Insn 5397: point = 108, n_alt = -1
   Insn 5396: point = 108, n_alt = 0
   Insn 5395: point = 109, n_alt = 0
   Insn 5394: point = 110, n_alt = 1
   Insn 5393: point = 111, n_alt = 0
   Insn 5392: point = 112, n_alt = 0
   Insn 5391: point = 113, n_alt = 1
   Insn 5918: point = 114, n_alt = -2
	Hard reg 1 is preferable by r3039 with profit 1000
   Insn 5390: point = 116, n_alt = 0
   Insn 5917: point = 117, n_alt = -2
	Hard reg 1 is preferable by r3039 with profit 2000
   Insn 5389: point = 119, n_alt = 2
   Insn 5388: point = 120, n_alt = 2
   Insn 5387: point = 121, n_alt = 2
   Insn 5386: point = 122, n_alt = 0
   Insn 5385: point = 122, n_alt = 0
   Insn 5384: point = 122, n_alt = 3
   Insn 5383: point = 122, n_alt = 2
   Insn 5382: point = 122, n_alt = 2
   Insn 5381: point = 122, n_alt = 4
   Insn 5380: point = 122, n_alt = 4
   Insn 5379: point = 122, n_alt = -2
   Insn 5378: point = 123, n_alt = -2
   Insn 5377: point = 124, n_alt = 0
   Insn 5376: point = 124, n_alt = 0
   Insn 5375: point = 124, n_alt = 3
   Insn 5374: point = 125, n_alt = 3
   Insn 5373: point = 126, n_alt = 0
   Insn 5372: point = 126, n_alt = 3
   Insn 5371: point = 126, n_alt = 4
   Insn 5370: point = 126, n_alt = -2
   Insn 5369: point = 127, n_alt = -2
   Insn 5368: point = 128, n_alt = 4
   Insn 5367: point = 128, n_alt = 4
   Insn 5366: point = 128, n_alt = 3
   Insn 5365: point = 129, n_alt = 3
   Insn 5364: point = 130, n_alt = 1
   Insn 5363: point = 131, n_alt = 0
   Insn 5362: point = 133, n_alt = 0
   Insn 5361: point = 135, n_alt = 0
   Insn 5360: point = 137, n_alt = 0
   Insn 5359: point = 139, n_alt = 0
   Insn 5358: point = 141, n_alt = 0
   Insn 5357: point = 142, n_alt = -2
   Insn 5356: point = 144, n_alt = -2
   Insn 5355: point = 146, n_alt = 0
   Insn 5354: point = 148, n_alt = 0
   Insn 5353: point = 149, n_alt = -2
   Insn 5352: point = 151, n_alt = 0
   Insn 5351: point = 153, n_alt = -2
   Insn 5350: point = 154, n_alt = 1
   Insn 5349: point = 156, n_alt = 0
  BB 352
   Insn 5347: point = 157, n_alt = -1
   Insn 5346: point = 157, n_alt = 0
   Insn 5345: point = 158, n_alt = 0
   Insn 5344: point = 160, n_alt = 0
   Insn 5343: point = 162, n_alt = 0
   Insn 5342: point = 164, n_alt = 0
   Insn 5341: point = 166, n_alt = 0
   Insn 5340: point = 168, n_alt = 0
   Insn 5339: point = 169, n_alt = -2
   Insn 5338: point = 171, n_alt = -2
   Insn 5337: point = 173, n_alt = 0
   Insn 5336: point = 175, n_alt = 0
   Insn 5335: point = 176, n_alt = -2
   Insn 5334: point = 178, n_alt = 0
   Insn 5333: point = 180, n_alt = -2
   Insn 5332: point = 181, n_alt = 1
   Insn 5331: point = 183, n_alt = 0
  BB 351
   Insn 5329: point = 184, n_alt = -1
   Insn 5328: point = 184, n_alt = 0
   Insn 5327: point = 185, n_alt = 0
  BB 349
   Insn 5318: point = 186, n_alt = 1
  BB 348
   Insn 5315: point = 186, n_alt = 0
   Insn 5314: point = 186, n_alt = 3
   Insn 5313: point = 186, n_alt = 4
   Insn 5312: point = 186, n_alt = 4
  BB 347
   Insn 5310: point = 186, n_alt = -1
   Insn 5309: point = 186, n_alt = 0
   Insn 5308: point = 187, n_alt = 0
   Insn 5307: point = 188, n_alt = 0
   Insn 5306: point = 188, n_alt = 0
   Insn 5305: point = 188, n_alt = 3
   Insn 5304: point = 188, n_alt = 4
   Insn 5303: point = 188, n_alt = 4
   Insn 5302: point = 188, n_alt = 4
   Insn 5301: point = 188, n_alt = 4
   Insn 5300: point = 188, n_alt = 4
   Insn 5299: point = 188, n_alt = 4
   Insn 5298: point = 188, n_alt = 0
   Insn 5916: point = 189, n_alt = 4
   Insn 5297: point = 190, n_alt = 0
   Insn 5915: point = 191, n_alt = 4
   Insn 5296: point = 192, n_alt = 0
   Insn 5914: point = 193, n_alt = 4
   Insn 5295: point = 194, n_alt = 0
   Insn 5294: point = 194, n_alt = 0
   Insn 5293: point = 194, n_alt = 0
   Insn 5292: point = 194, n_alt = 0
   Insn 5291: point = 194, n_alt = 0
   Insn 5290: point = 194, n_alt = 0
   Insn 5913: point = 195, n_alt = 4
   Insn 5289: point = 196, n_alt = 0
  BB 402
   Insn 5814: point = 196, n_alt = -1
  BB 339
   Insn 5235: point = 196, n_alt = -1
   Insn 5234: point = 196, n_alt = 0
   Insn 5233: point = 197, n_alt = 0
   Insn 5232: point = 199, n_alt = 0
   Insn 5231: point = 200, n_alt = 0
   Insn 5230: point = 201, n_alt = 0
  BB 346
   Insn 5691: point = 202, n_alt = -1
   Insn 5283: point = 202, n_alt = 1
   Insn 5282: point = 203, n_alt = 0
   Insn 5281: point = 205, n_alt = 0
  BB 403
   Insn 5817: point = 206, n_alt = -1
  BB 341
   Insn 5245: point = 206, n_alt = -1
   Insn 5244: point = 206, n_alt = 0
   Insn 5243: point = 207, n_alt = 0
   Insn 5242: point = 209, n_alt = 0
   Insn 5241: point = 210, n_alt = 0
  BB 345
   Insn 5689: point = 211, n_alt = -1
   Insn 5275: point = 211, n_alt = 1
  BB 404
   Insn 5820: point = 212, n_alt = -1
  BB 343
   Insn 5253: point = 213, n_alt = -1
   Insn 5252: point = 213, n_alt = 0
   Insn 5251: point = 214, n_alt = 0
   Insn 5250: point = 216, n_alt = 0
   Insn 5249: point = 217, n_alt = 0
  BB 344
   Insn 5687: point = 218, n_alt = -1
   Insn 5269: point = 218, n_alt = 1
   Insn 5268: point = 218, n_alt = 8
   Insn 5267: point = 219, n_alt = 7
   Insn 5266: point = 220, n_alt = 4
   Insn 5265: point = 221, n_alt = 3
   Insn 5264: point = 223, n_alt = 0
   Insn 5263: point = 225, n_alt = 1
   Insn 5262: point = 227, n_alt = 0
   Insn 5261: point = 228, n_alt = 0
   Insn 5260: point = 230, n_alt = 0
   Insn 5259: point = 232, n_alt = 1
   Insn 5258: point = 234, n_alt = 0
   Insn 5257: point = 235, n_alt = 1
   Insn 5256: point = 237, n_alt = 1
   Insn 5255: point = 239, n_alt = 0
  BB 342
   Insn 5247: point = 241, n_alt = 1
  BB 340
   Insn 5239: point = 242, n_alt = 1
   Insn 5238: point = 243, n_alt = 0
   Insn 5237: point = 244, n_alt = 0
  BB 338
   Insn 5228: point = 245, n_alt = 1
  BB 400
   Insn 5808: point = 245, n_alt = -1
  BB 333
   Insn 5187: point = 245, n_alt = -1
   Insn 5186: point = 245, n_alt = 0
   Insn 5185: point = 246, n_alt = 0
   Insn 5184: point = 248, n_alt = 0
   Insn 5183: point = 249, n_alt = 0
  BB 337
   Insn 5685: point = 250, n_alt = -1
   Insn 5222: point = 250, n_alt = 1
  BB 401
   Insn 5811: point = 251, n_alt = -1
  BB 335
   Insn 5195: point = 252, n_alt = -1
   Insn 5194: point = 252, n_alt = 0
   Insn 5193: point = 253, n_alt = 0
   Insn 5192: point = 255, n_alt = 0
   Insn 5191: point = 256, n_alt = 0
  BB 336
   Insn 5683: point = 257, n_alt = -1
   Insn 5216: point = 257, n_alt = 1
   Insn 5215: point = 257, n_alt = 8
   Insn 5214: point = 258, n_alt = 4
   Insn 5213: point = 259, n_alt = 7
   Insn 5212: point = 261, n_alt = 0
   Insn 5211: point = 263, n_alt = 4
   Insn 5210: point = 264, n_alt = 3
   Insn 5209: point = 266, n_alt = 0
   Insn 5208: point = 268, n_alt = 1
   Insn 5207: point = 270, n_alt = 0
   Insn 5206: point = 271, n_alt = 0
   Insn 5205: point = 273, n_alt = 1
   Insn 5204: point = 275, n_alt = 0
   Insn 5203: point = 276, n_alt = 3
   Insn 5202: point = 278, n_alt = 0
   Insn 5201: point = 280, n_alt = 1
   Insn 5200: point = 282, n_alt = 0
   Insn 5199: point = 283, n_alt = 0
   Insn 5198: point = 285, n_alt = 1
   Insn 5197: point = 287, n_alt = 0
  BB 334
   Insn 5189: point = 289, n_alt = 1
  BB 332
   Insn 5181: point = 290, n_alt = 1
   Insn 5180: point = 291, n_alt = 0
   Insn 5179: point = 292, n_alt = 0
  BB 331
   Insn 5176: point = 293, n_alt = -1
   Insn 5175: point = 293, n_alt = 0
   Insn 5174: point = 294, n_alt = 0
  BB 330
   Insn 5172: point = 295, n_alt = -1
   Insn 5171: point = 295, n_alt = 0
   Insn 5170: point = 296, n_alt = 0
  BB 329
   Insn 5167: point = 297, n_alt = 0
   Insn 5166: point = 297, n_alt = 3
   Insn 5165: point = 297, n_alt = 2
   Insn 5164: point = 297, n_alt = 2
   Insn 5163: point = 297, n_alt = 2
   Insn 5162: point = 297, n_alt = -2
   Insn 5161: point = 298, n_alt = -2
   Insn 5160: point = 299, n_alt = -2
   Insn 5159: point = 300, n_alt = 3
   Insn 5158: point = 301, n_alt = 3
   Insn 5157: point = 302, n_alt = 3
   Insn 5156: point = 303, n_alt = 0
   Insn 5155: point = 304, n_alt = 1
   Insn 5912: point = 305, n_alt = -2
	Hard reg 1 is preferable by r3034 with profit 1000
   Insn 5154: point = 307, n_alt = 0
   Insn 5911: point = 308, n_alt = -2
	Hard reg 1 is preferable by r3034 with profit 2000
   Insn 5153: point = 310, n_alt = 2
   Insn 5152: point = 311, n_alt = 2
   Insn 5151: point = 312, n_alt = 2
   Insn 5150: point = 313, n_alt = 0
   Insn 5149: point = 313, n_alt = 0
   Insn 5148: point = 313, n_alt = 3
   Insn 5147: point = 313, n_alt = 2
   Insn 5146: point = 313, n_alt = 2
   Insn 5145: point = 313, n_alt = 4
   Insn 5144: point = 313, n_alt = 4
   Insn 5143: point = 313, n_alt = -2
   Insn 5142: point = 314, n_alt = -2
   Insn 5141: point = 315, n_alt = 0
   Insn 5140: point = 315, n_alt = 0
   Insn 5139: point = 315, n_alt = 3
   Insn 5138: point = 316, n_alt = 3
  BB 328
   Insn 5136: point = 317, n_alt = -1
   Insn 5135: point = 317, n_alt = 0
   Insn 5134: point = 318, n_alt = 0
   Insn 5133: point = 319, n_alt = 0
   Insn 5132: point = 319, n_alt = 0
   Insn 5131: point = 319, n_alt = 3
   Insn 5130: point = 319, n_alt = 4
   Insn 5129: point = 319, n_alt = 4
   Insn 5128: point = 319, n_alt = 4
   Insn 5127: point = 319, n_alt = 4
   Insn 5126: point = 319, n_alt = 4
   Insn 5125: point = 319, n_alt = 4
   Insn 5124: point = 319, n_alt = 0
   Insn 5910: point = 320, n_alt = 4
   Insn 5123: point = 321, n_alt = 0
   Insn 5909: point = 322, n_alt = 4
   Insn 5122: point = 323, n_alt = 0
   Insn 5121: point = 323, n_alt = 0
   Insn 5120: point = 323, n_alt = 0
   Insn 5119: point = 323, n_alt = 0
   Insn 5118: point = 323, n_alt = 0
   Insn 5908: point = 324, n_alt = 4
   Insn 5117: point = 325, n_alt = 0
   Insn 5907: point = 326, n_alt = 4
   Insn 5116: point = 327, n_alt = 0
   Insn 5906: point = 328, n_alt = 4
   Insn 5115: point = 329, n_alt = 0
   Insn 5905: point = 330, n_alt = 4
   Insn 5114: point = 331, n_alt = 0
   Insn 5904: point = 332, n_alt = 4
   Insn 5113: point = 333, n_alt = 0
  BB 327
   Insn 5110: point = 333, n_alt = -1
   Insn 5109: point = 333, n_alt = 0
   Insn 5108: point = 334, n_alt = 0
  BB 326
   Insn 5106: point = 335, n_alt = -1
   Insn 5105: point = 335, n_alt = 0
   Insn 5104: point = 336, n_alt = 0
  BB 325
   Insn 5102: point = 337, n_alt = -1
   Insn 5101: point = 337, n_alt = 0
   Insn 5100: point = 338, n_alt = 0
  BB 324
   Insn 5097: point = 339, n_alt = 0
   Insn 5096: point = 339, n_alt = 3
   Insn 5095: point = 339, n_alt = 2
   Insn 5094: point = 339, n_alt = 2
   Insn 5093: point = 339, n_alt = -2
   Insn 5092: point = 340, n_alt = -2
   Insn 5091: point = 341, n_alt = -2
   Insn 5090: point = 342, n_alt = -2
   Insn 5089: point = 343, n_alt = 3
   Insn 5088: point = 344, n_alt = 3
   Insn 5087: point = 345, n_alt = 3
   Insn 5086: point = 346, n_alt = 3
   Insn 5085: point = 348, n_alt = 0
   Insn 5084: point = 350, n_alt = 0
   Insn 5083: point = 352, n_alt = -2
   Insn 5082: point = 354, n_alt = -2
   Insn 5081: point = 356, n_alt = 0
   Insn 5080: point = 358, n_alt = 0
   Insn 5079: point = 359, n_alt = -2
   Insn 5078: point = 361, n_alt = 0
   Insn 5077: point = 363, n_alt = -2
   Insn 5076: point = 364, n_alt = 3
   Insn 5075: point = 366, n_alt = 0
   Insn 5074: point = 368, n_alt = 0
   Insn 5073: point = 369, n_alt = 0
   Insn 5072: point = 370, n_alt = 1
   Insn 5903: point = 371, n_alt = -2
	Hard reg 1 is preferable by r3026 with profit 1000
   Insn 5071: point = 373, n_alt = 0
   Insn 5902: point = 374, n_alt = -2
	Hard reg 1 is preferable by r3026 with profit 2000
   Insn 5070: point = 376, n_alt = 2
   Insn 5069: point = 377, n_alt = 2
   Insn 5068: point = 378, n_alt = 2
   Insn 5067: point = 379, n_alt = 0
   Insn 5066: point = 379, n_alt = 0
   Insn 5065: point = 379, n_alt = 3
   Insn 5064: point = 379, n_alt = 2
   Insn 5063: point = 379, n_alt = 2
   Insn 5062: point = 379, n_alt = 4
   Insn 5061: point = 379, n_alt = 4
   Insn 5060: point = 379, n_alt = -2
   Insn 5059: point = 380, n_alt = -2
   Insn 5058: point = 381, n_alt = 0
   Insn 5057: point = 381, n_alt = 0
   Insn 5056: point = 381, n_alt = 3
   Insn 5055: point = 382, n_alt = 3
   Insn 5054: point = 383, n_alt = 0
   Insn 5053: point = 383, n_alt = 0
   Insn 5052: point = 383, n_alt = 3
   Insn 5051: point = 383, n_alt = 4
   Insn 5050: point = 383, n_alt = 4
   Insn 5049: point = 383, n_alt = 4
   Insn 5048: point = 383, n_alt = 4
   Insn 5047: point = 383, n_alt = 4
   Insn 5046: point = 383, n_alt = 4
   Insn 5045: point = 383, n_alt = 0
   Insn 5901: point = 384, n_alt = 4
   Insn 5044: point = 385, n_alt = 0
   Insn 5900: point = 386, n_alt = 4
  BB 397
   Insn 5799: point = 387, n_alt = -1
  BB 315
   Insn 4548: point = 387, n_alt = -1
   Insn 4547: point = 387, n_alt = 0
   Insn 4546: point = 388, n_alt = 0
   Insn 4545: point = 390, n_alt = 0
   Insn 4544: point = 391, n_alt = 0
  BB 323
   Insn 5681: point = 392, n_alt = -1
   Insn 5038: point = 392, n_alt = 1
  BB 398
   Insn 5802: point = 393, n_alt = -1
  BB 317
   Insn 4556: point = 394, n_alt = -1
   Insn 4555: point = 394, n_alt = 0
   Insn 4554: point = 395, n_alt = 0
   Insn 4553: point = 397, n_alt = 0
   Insn 4552: point = 398, n_alt = 0
  BB 322
   Insn 5679: point = 399, n_alt = -1
   Insn 5032: point = 399, n_alt = 1
   Insn 5031: point = 399, n_alt = 8
   Insn 5030: point = 400, n_alt = 4
   Insn 5029: point = 401, n_alt = 1
   Insn 5028: point = 403, n_alt = 3
   Insn 5027: point = 405, n_alt = 0
   Insn 5026: point = 407, n_alt = 0
   Insn 5025: point = 409, n_alt = 0
   Insn 5024: point = 410, n_alt = 0
   Insn 5023: point = 412, n_alt = 0
   Insn 5022: point = 414, n_alt = 0
   Insn 5021: point = 415, n_alt = 7
   Insn 5020: point = 417, n_alt = 4
   Insn 5019: point = 418, n_alt = 1
   Insn 5018: point = 420, n_alt = 7
   Insn 5017: point = 422, n_alt = 0
   Insn 5016: point = 424, n_alt = 4
   Insn 5015: point = 425, n_alt = 3
   Insn 5014: point = 427, n_alt = 0
   Insn 5013: point = 429, n_alt = 0
   Insn 5012: point = 431, n_alt = 0
   Insn 5011: point = 433, n_alt = 4
   Insn 5010: point = 434, n_alt = 3
   Insn 5009: point = 436, n_alt = 0
   Insn 5008: point = 438, n_alt = 0
   Insn 5007: point = 440, n_alt = 0
   Insn 5006: point = 441, n_alt = 0
   Insn 5005: point = 443, n_alt = 0
   Insn 5004: point = 445, n_alt = 0
   Insn 5003: point = 446, n_alt = 7
   Insn 5002: point = 448, n_alt = 0
   Insn 5001: point = 450, n_alt = 4
   Insn 5000: point = 451, n_alt = 3
   Insn 4999: point = 453, n_alt = 0
   Insn 4998: point = 455, n_alt = 0
   Insn 4997: point = 457, n_alt = 0
   Insn 4996: point = 458, n_alt = 0
   Insn 4995: point = 460, n_alt = 0
   Insn 4994: point = 462, n_alt = 0
   Insn 4993: point = 463, n_alt = 8
   Insn 4992: point = 464, n_alt = 4
   Insn 4991: point = 465, n_alt = 1
   Insn 4990: point = 467, n_alt = 3
   Insn 4989: point = 469, n_alt = 0
   Insn 4988: point = 471, n_alt = 0
   Insn 4987: point = 473, n_alt = 0
   Insn 4986: point = 474, n_alt = 0
   Insn 4985: point = 476, n_alt = 0
   Insn 4984: point = 478, n_alt = 0
   Insn 4983: point = 479, n_alt = 7
   Insn 4982: point = 481, n_alt = 4
   Insn 4981: point = 482, n_alt = 3
   Insn 4980: point = 484, n_alt = 0
   Insn 4979: point = 486, n_alt = 0
   Insn 4978: point = 488, n_alt = 0
   Insn 4977: point = 489, n_alt = 0
   Insn 4976: point = 491, n_alt = 0
   Insn 4975: point = 493, n_alt = 0
   Insn 4974: point = 495, n_alt = 0
   Insn 4973: point = 496, n_alt = 1
   Insn 4972: point = 498, n_alt = 0
   Insn 4971: point = 500, n_alt = 0
   Insn 4970: point = 501, n_alt = 7
   Insn 4969: point = 503, n_alt = 4
   Insn 4968: point = 504, n_alt = 3
   Insn 4967: point = 506, n_alt = 0
   Insn 4966: point = 508, n_alt = 0
   Insn 4965: point = 510, n_alt = 0
   Insn 4964: point = 511, n_alt = 0
   Insn 4963: point = 513, n_alt = 0
   Insn 4962: point = 515, n_alt = 0
   Insn 4961: point = 517, n_alt = 0
   Insn 4960: point = 518, n_alt = 1
   Insn 4959: point = 520, n_alt = 0
   Insn 4958: point = 522, n_alt = 0
   Insn 4957: point = 523, n_alt = 8
   Insn 4956: point = 524, n_alt = 4
   Insn 4955: point = 525, n_alt = 1
   Insn 4954: point = 527, n_alt = 3
   Insn 4953: point = 529, n_alt = 0
   Insn 4952: point = 531, n_alt = 0
   Insn 4951: point = 533, n_alt = 0
   Insn 4950: point = 534, n_alt = 0
   Insn 4949: point = 536, n_alt = 0
   Insn 4948: point = 538, n_alt = 0
   Insn 4947: point = 539, n_alt = 7
   Insn 4946: point = 541, n_alt = 4
   Insn 4945: point = 542, n_alt = 3
   Insn 4944: point = 544, n_alt = 0
   Insn 4943: point = 546, n_alt = 0
   Insn 4942: point = 548, n_alt = 0
   Insn 4941: point = 549, n_alt = 0
   Insn 4940: point = 551, n_alt = 0
   Insn 4939: point = 553, n_alt = 0
   Insn 4938: point = 555, n_alt = 0
   Insn 4937: point = 556, n_alt = 1
   Insn 4936: point = 558, n_alt = 0
   Insn 4935: point = 560, n_alt = 0
   Insn 4934: point = 561, n_alt = -2
   Insn 4933: point = 563, n_alt = 2
   Insn 4932: point = 565, n_alt = 7
   Insn 4931: point = 566, n_alt = 7
   Insn 4930: point = 568, n_alt = 4
   Insn 4929: point = 569, n_alt = 3
   Insn 4928: point = 571, n_alt = 0
   Insn 4927: point = 573, n_alt = 0
   Insn 4926: point = 575, n_alt = 0
   Insn 4925: point = 576, n_alt = 0
   Insn 4924: point = 578, n_alt = 0
   Insn 4923: point = 580, n_alt = 0
   Insn 4922: point = 582, n_alt = 0
   Insn 4921: point = 583, n_alt = 1
   Insn 4920: point = 585, n_alt = 0
   Insn 4919: point = 587, n_alt = 0
   Insn 4918: point = 588, n_alt = 8
   Insn 4917: point = 589, n_alt = 4
   Insn 4916: point = 590, n_alt = 7
   Insn 4915: point = 592, n_alt = 0
   Insn 4914: point = 594, n_alt = 4
   Insn 4913: point = 595, n_alt = 3
   Insn 4912: point = 597, n_alt = 0
   Insn 4911: point = 599, n_alt = 0
   Insn 4910: point = 601, n_alt = 0
   Insn 4909: point = 602, n_alt = 0
   Insn 4908: point = 604, n_alt = 0
   Insn 4907: point = 606, n_alt = 0
   Insn 4906: point = 607, n_alt = 3
   Insn 4905: point = 609, n_alt = 0
   Insn 4904: point = 611, n_alt = 0
   Insn 4903: point = 613, n_alt = 0
   Insn 4902: point = 614, n_alt = 0
   Insn 4901: point = 616, n_alt = 0
   Insn 4900: point = 618, n_alt = 0
   Insn 4899: point = 620, n_alt = 0
   Insn 4898: point = 621, n_alt = 1
   Insn 4897: point = 623, n_alt = 0
   Insn 4896: point = 625, n_alt = 0
   Insn 4895: point = 626, n_alt = 8
   Insn 4894: point = 627, n_alt = 4
   Insn 4893: point = 628, n_alt = 7
   Insn 4892: point = 630, n_alt = 0
   Insn 4891: point = 632, n_alt = 4
   Insn 4890: point = 633, n_alt = 3
   Insn 4889: point = 635, n_alt = 0
   Insn 4888: point = 637, n_alt = 0
   Insn 4887: point = 639, n_alt = 0
   Insn 4886: point = 640, n_alt = 0
   Insn 4885: point = 642, n_alt = 0
   Insn 4884: point = 644, n_alt = 0
   Insn 4883: point = 645, n_alt = 3
   Insn 4882: point = 647, n_alt = 0
   Insn 4881: point = 649, n_alt = 0
   Insn 4880: point = 651, n_alt = 0
   Insn 4879: point = 652, n_alt = 0
   Insn 4878: point = 654, n_alt = 0
   Insn 4877: point = 656, n_alt = 0
   Insn 4876: point = 658, n_alt = 0
   Insn 4875: point = 659, n_alt = 1
   Insn 4874: point = 661, n_alt = 0
   Insn 4873: point = 663, n_alt = 0
   Insn 4872: point = 664, n_alt = 1
   Insn 4871: point = 665, n_alt = 0
   Insn 4870: point = 667, n_alt = 0
   Insn 4869: point = 669, n_alt = 4
   Insn 4868: point = 670, n_alt = 3
   Insn 4867: point = 672, n_alt = 0
   Insn 4866: point = 674, n_alt = 0
   Insn 4865: point = 676, n_alt = 0
   Insn 4864: point = 677, n_alt = 0
   Insn 4863: point = 679, n_alt = 0
   Insn 4862: point = 681, n_alt = 0
  BB 320
   Insn 5677: point = 683, n_alt = -1
   Insn 4597: point = 683, n_alt = 8
   Insn 4596: point = 684, n_alt = 7
   Insn 4595: point = 685, n_alt = 4
   Insn 4594: point = 686, n_alt = 3
   Insn 4593: point = 688, n_alt = 0
   Insn 4592: point = 690, n_alt = 0
   Insn 4591: point = 692, n_alt = 0
   Insn 4590: point = 693, n_alt = 0
   Insn 4589: point = 695, n_alt = 0
   Insn 4588: point = 697, n_alt = 0
   Insn 4587: point = 698, n_alt = 8
   Insn 4586: point = 699, n_alt = 7
   Insn 4585: point = 700, n_alt = 4
   Insn 4584: point = 701, n_alt = 3
   Insn 4583: point = 703, n_alt = 0
   Insn 4582: point = 705, n_alt = 0
   Insn 4581: point = 707, n_alt = 0
   Insn 4580: point = 708, n_alt = 0
   Insn 4579: point = 710, n_alt = 0
   Insn 4578: point = 712, n_alt = 0
  BB 321
   Insn 4859: point = 714, n_alt = 8
   Insn 4858: point = 715, n_alt = 4
   Insn 4857: point = 716, n_alt = 1
   Insn 4856: point = 718, n_alt = 3
   Insn 4855: point = 720, n_alt = 0
   Insn 4854: point = 722, n_alt = 0
   Insn 4853: point = 724, n_alt = 0
   Insn 4852: point = 725, n_alt = 0
   Insn 4851: point = 727, n_alt = 0
   Insn 4850: point = 729, n_alt = 0
   Insn 4849: point = 730, n_alt = 1
   Insn 4848: point = 732, n_alt = 1
   Insn 4847: point = 734, n_alt = 7
   Insn 4846: point = 735, n_alt = 7
   Insn 4845: point = 736, n_alt = 4
   Insn 4844: point = 737, n_alt = 9
   Insn 4843: point = 738, n_alt = 0
   Insn 4842: point = 738, n_alt = -2
   Insn 4841: point = 739, n_alt = 7
   Insn 4840: point = 739, n_alt = 7
   Insn 4839: point = 740, n_alt = 4
   Insn 4838: point = 741, n_alt = 9
   Insn 4837: point = 742, n_alt = 0
   Insn 4836: point = 742, n_alt = -2
   Insn 4835: point = 743, n_alt = 7
   Insn 4834: point = 743, n_alt = -2
   Insn 4833: point = 745, n_alt = 2
   Insn 4832: point = 747, n_alt = -2
   Insn 4831: point = 749, n_alt = 1
   Insn 4830: point = 751, n_alt = 7
   Insn 4829: point = 753, n_alt = 4
   Insn 4828: point = 754, n_alt = 1
   Insn 4827: point = 756, n_alt = 7
   Insn 4826: point = 758, n_alt = 0
   Insn 4825: point = 760, n_alt = 4
   Insn 4824: point = 761, n_alt = 3
   Insn 4823: point = 763, n_alt = 0
   Insn 4822: point = 765, n_alt = 0
   Insn 4821: point = 767, n_alt = 0
   Insn 4820: point = 769, n_alt = 4
   Insn 4819: point = 770, n_alt = 3
   Insn 4818: point = 772, n_alt = 0
   Insn 4817: point = 774, n_alt = 0
   Insn 4816: point = 776, n_alt = 0
   Insn 4815: point = 777, n_alt = 0
   Insn 4814: point = 779, n_alt = 0
   Insn 4813: point = 781, n_alt = 0
   Insn 4812: point = 782, n_alt = 7
   Insn 4811: point = 784, n_alt = 0
   Insn 4810: point = 786, n_alt = 4
   Insn 4809: point = 787, n_alt = 3
   Insn 4808: point = 789, n_alt = 0
   Insn 4807: point = 791, n_alt = 0
   Insn 4806: point = 793, n_alt = 0
   Insn 4805: point = 794, n_alt = 0
   Insn 4804: point = 796, n_alt = 0
   Insn 4803: point = 798, n_alt = 0
   Insn 4802: point = 799, n_alt = 7
   Insn 4801: point = 801, n_alt = 0
   Insn 4800: point = 803, n_alt = 4
   Insn 4799: point = 804, n_alt = 3
   Insn 4798: point = 806, n_alt = 0
   Insn 4797: point = 808, n_alt = 0
   Insn 4796: point = 810, n_alt = 0
   Insn 4795: point = 811, n_alt = 0
   Insn 4794: point = 813, n_alt = 0
   Insn 4793: point = 815, n_alt = 0
   Insn 4792: point = 817, n_alt = 0
   Insn 4791: point = 818, n_alt = 1
   Insn 4790: point = 820, n_alt = 0
   Insn 4789: point = 822, n_alt = 0
   Insn 4788: point = 823, n_alt = 4
   Insn 4787: point = 824, n_alt = 9
   Insn 4786: point = 825, n_alt = 0
   Insn 4785: point = 825, n_alt = -2
   Insn 4784: point = 826, n_alt = 7
   Insn 4783: point = 826, n_alt = -2
   Insn 4782: point = 828, n_alt = 2
   Insn 4781: point = 830, n_alt = 7
   Insn 4780: point = 832, n_alt = 0
   Insn 4779: point = 834, n_alt = 4
   Insn 4778: point = 835, n_alt = 3
   Insn 4777: point = 837, n_alt = 0
   Insn 4776: point = 839, n_alt = 0
   Insn 4775: point = 841, n_alt = 0
   Insn 4774: point = 842, n_alt = 0
   Insn 4773: point = 844, n_alt = 0
   Insn 4772: point = 846, n_alt = 0
   Insn 4771: point = 847, n_alt = 7
   Insn 4770: point = 849, n_alt = 0
   Insn 4769: point = 851, n_alt = 4
   Insn 4768: point = 852, n_alt = 3
   Insn 4767: point = 854, n_alt = 0
   Insn 4766: point = 856, n_alt = 0
   Insn 4765: point = 858, n_alt = 0
   Insn 4764: point = 859, n_alt = 0
   Insn 4763: point = 861, n_alt = 0
   Insn 4762: point = 863, n_alt = 0
   Insn 4761: point = 864, n_alt = 8
   Insn 4760: point = 865, n_alt = 4
   Insn 4759: point = 866, n_alt = 1
   Insn 4758: point = 868, n_alt = 3
   Insn 4757: point = 870, n_alt = 0
   Insn 4756: point = 872, n_alt = 0
   Insn 4755: point = 874, n_alt = 0
   Insn 4754: point = 875, n_alt = 0
   Insn 4753: point = 877, n_alt = 0
   Insn 4752: point = 879, n_alt = 0
   Insn 4751: point = 880, n_alt = 1
   Insn 4750: point = 882, n_alt = 1
   Insn 4749: point = 884, n_alt = 7
   Insn 4748: point = 885, n_alt = 7
   Insn 4747: point = 886, n_alt = 4
   Insn 4746: point = 887, n_alt = 9
   Insn 4745: point = 888, n_alt = 0
   Insn 4744: point = 888, n_alt = -2
   Insn 4743: point = 889, n_alt = 7
   Insn 4742: point = 889, n_alt = 7
   Insn 4741: point = 890, n_alt = 4
   Insn 4740: point = 891, n_alt = 9
   Insn 4739: point = 892, n_alt = 0
   Insn 4738: point = 892, n_alt = -2
   Insn 4737: point = 893, n_alt = 7
   Insn 4736: point = 893, n_alt = -2
   Insn 4735: point = 895, n_alt = 2
   Insn 4734: point = 897, n_alt = -2
   Insn 4733: point = 899, n_alt = 1
   Insn 4732: point = 901, n_alt = 7
   Insn 4731: point = 903, n_alt = 4
   Insn 4730: point = 904, n_alt = 1
   Insn 4729: point = 906, n_alt = 7
   Insn 4728: point = 908, n_alt = 0
   Insn 4727: point = 910, n_alt = 4
   Insn 4726: point = 911, n_alt = 3
   Insn 4725: point = 913, n_alt = 0
   Insn 4724: point = 915, n_alt = 0
   Insn 4723: point = 917, n_alt = 0
   Insn 4722: point = 919, n_alt = 4
   Insn 4721: point = 920, n_alt = 3
   Insn 4720: point = 922, n_alt = 0
   Insn 4719: point = 924, n_alt = 0
   Insn 4718: point = 926, n_alt = 0
   Insn 4717: point = 927, n_alt = 0
   Insn 4716: point = 929, n_alt = 0
   Insn 4715: point = 931, n_alt = 0
   Insn 4714: point = 932, n_alt = 7
   Insn 4713: point = 934, n_alt = 0
   Insn 4712: point = 936, n_alt = 4
   Insn 4711: point = 937, n_alt = 3
   Insn 4710: point = 939, n_alt = 0
   Insn 4709: point = 941, n_alt = 0
   Insn 4708: point = 943, n_alt = 0
   Insn 4707: point = 944, n_alt = 0
   Insn 4706: point = 946, n_alt = 0
   Insn 4705: point = 948, n_alt = 0
   Insn 4704: point = 949, n_alt = 7
   Insn 4703: point = 951, n_alt = 0
   Insn 4702: point = 953, n_alt = 4
   Insn 4701: point = 954, n_alt = 3
   Insn 4700: point = 956, n_alt = 0
   Insn 4699: point = 958, n_alt = 0
   Insn 4698: point = 960, n_alt = 0
   Insn 4697: point = 961, n_alt = 0
   Insn 4696: point = 963, n_alt = 0
   Insn 4695: point = 965, n_alt = 0
   Insn 4694: point = 967, n_alt = 0
   Insn 4693: point = 968, n_alt = 1
   Insn 4692: point = 970, n_alt = 0
   Insn 4691: point = 972, n_alt = 0
   Insn 4690: point = 973, n_alt = 4
   Insn 4689: point = 974, n_alt = 9
   Insn 4688: point = 975, n_alt = 0
   Insn 4687: point = 975, n_alt = -2
   Insn 4686: point = 976, n_alt = 7
   Insn 4685: point = 976, n_alt = -2
   Insn 4684: point = 978, n_alt = 2
   Insn 4683: point = 980, n_alt = 7
   Insn 4682: point = 982, n_alt = 0
   Insn 4681: point = 984, n_alt = 4
   Insn 4680: point = 985, n_alt = 3
   Insn 4679: point = 987, n_alt = 0
   Insn 4678: point = 989, n_alt = 0
   Insn 4677: point = 991, n_alt = 0
   Insn 4676: point = 992, n_alt = 0
   Insn 4675: point = 994, n_alt = 0
   Insn 4674: point = 996, n_alt = 0
   Insn 4673: point = 997, n_alt = 7
   Insn 4672: point = 999, n_alt = 0
   Insn 4671: point = 1001, n_alt = 4
   Insn 4670: point = 1002, n_alt = 3
   Insn 4669: point = 1004, n_alt = 0
   Insn 4668: point = 1006, n_alt = 0
   Insn 4667: point = 1008, n_alt = 0
   Insn 4666: point = 1009, n_alt = 0
   Insn 4665: point = 1011, n_alt = 0
   Insn 4664: point = 1013, n_alt = 0
   Insn 4663: point = 1014, n_alt = 8
   Insn 4662: point = 1015, n_alt = 1
   Insn 4661: point = 1017, n_alt = 7
   Insn 4660: point = 1018, n_alt = 1
   Insn 4659: point = 1020, n_alt = 7
   Insn 4658: point = 1022, n_alt = 0
   Insn 4657: point = 1024, n_alt = 4
   Insn 4656: point = 1025, n_alt = 3
   Insn 4655: point = 1027, n_alt = 0
   Insn 4654: point = 1029, n_alt = 0
   Insn 4653: point = 1031, n_alt = 0
   Insn 4652: point = 1032, n_alt = 0
   Insn 4651: point = 1034, n_alt = 0
   Insn 4650: point = 1036, n_alt = 0
   Insn 4649: point = 1037, n_alt = -2
   Insn 4648: point = 1039, n_alt = 2
   Insn 4647: point = 1041, n_alt = 7
   Insn 4646: point = 1042, n_alt = 7
   Insn 4645: point = 1044, n_alt = 0
   Insn 4644: point = 1046, n_alt = 4
   Insn 4643: point = 1047, n_alt = 3
   Insn 4642: point = 1049, n_alt = 0
   Insn 4641: point = 1051, n_alt = 0
   Insn 4640: point = 1053, n_alt = 0
   Insn 4639: point = 1054, n_alt = 0
   Insn 4638: point = 1056, n_alt = 0
   Insn 4637: point = 1058, n_alt = 0
   Insn 4636: point = 1059, n_alt = 8
   Insn 4635: point = 1060, n_alt = 1
   Insn 4634: point = 1062, n_alt = 7
   Insn 4633: point = 1063, n_alt = 1
   Insn 4632: point = 1065, n_alt = 7
   Insn 4631: point = 1067, n_alt = 0
   Insn 4630: point = 1069, n_alt = 4
   Insn 4629: point = 1070, n_alt = 3
   Insn 4628: point = 1072, n_alt = 0
   Insn 4627: point = 1074, n_alt = 0
   Insn 4626: point = 1076, n_alt = 0
   Insn 4625: point = 1077, n_alt = 0
   Insn 4624: point = 1079, n_alt = 0
   Insn 4623: point = 1081, n_alt = 0
   Insn 4622: point = 1082, n_alt = 7
   Insn 4621: point = 1084, n_alt = 0
   Insn 4620: point = 1086, n_alt = 4
   Insn 4619: point = 1087, n_alt = 3
   Insn 4618: point = 1089, n_alt = 0
   Insn 4617: point = 1091, n_alt = 0
   Insn 4616: point = 1093, n_alt = 0
   Insn 4615: point = 1094, n_alt = 0
   Insn 4614: point = 1096, n_alt = 0
   Insn 4613: point = 1098, n_alt = 0
   Insn 4612: point = 1099, n_alt = 1
   Insn 4611: point = 1100, n_alt = 0
   Insn 4610: point = 1102, n_alt = 0
   Insn 4609: point = 1104, n_alt = 4
   Insn 4608: point = 1105, n_alt = 3
   Insn 4607: point = 1107, n_alt = 0
   Insn 4606: point = 1109, n_alt = 0
   Insn 4605: point = 1111, n_alt = 0
   Insn 4604: point = 1112, n_alt = 0
   Insn 4603: point = 1114, n_alt = 0
   Insn 4602: point = 1116, n_alt = 0
  BB 319
   Insn 4573: point = 1118, n_alt = -1
   Insn 4572: point = 1118, n_alt = 1
   Insn 4571: point = 1119, n_alt = 7
  BB 318
   Insn 4570: point = 1121, n_alt = -1
   Insn 4569: point = 1121, n_alt = 1
   Insn 4568: point = 1122, n_alt = 7
   Insn 4567: point = 1123, n_alt = 7
   Insn 4566: point = 1125, n_alt = 0
   Insn 4565: point = 1127, n_alt = 4
   Insn 4564: point = 1128, n_alt = 3
   Insn 4563: point = 1130, n_alt = 0
   Insn 4562: point = 1132, n_alt = 0
   Insn 4561: point = 1134, n_alt = 0
   Insn 4560: point = 1135, n_alt = 0
   Insn 4559: point = 1137, n_alt = 0
   Insn 4558: point = 1139, n_alt = 0
  BB 316
   Insn 4550: point = 1141, n_alt = 1
  BB 314
   Insn 4542: point = 1142, n_alt = 1
   Insn 4541: point = 1143, n_alt = 0
   Insn 4540: point = 1144, n_alt = 0
   Insn 4539: point = 1145, n_alt = 8
   Insn 4538: point = 1146, n_alt = 2
   Insn 4537: point = 1148, n_alt = 7
   Insn 4536: point = 1149, n_alt = -2
   Insn 4535: point = 1151, n_alt = 1
   Insn 4534: point = 1153, n_alt = 7
   Insn 4533: point = 1154, n_alt = 1
   Insn 4532: point = 1156, n_alt = 0
  BB 313
   Insn 4530: point = 1157, n_alt = -1
   Insn 4529: point = 1157, n_alt = 0
   Insn 4528: point = 1158, n_alt = 0
  BB 373
   Insn 5727: point = 1159, n_alt = -1
  BB 108
   Insn 1372: point = 1159, n_alt = -1
   Insn 1371: point = 1159, n_alt = 0
   Insn 1370: point = 1160, n_alt = 0
   Insn 1369: point = 1162, n_alt = 0
   Insn 1368: point = 1163, n_alt = 0
   Insn 1367: point = 1164, n_alt = 0
  BB 312
   Insn 5675: point = 1165, n_alt = -1
   Insn 4522: point = 1165, n_alt = 1
   Insn 4521: point = 1166, n_alt = 0
   Insn 4520: point = 1168, n_alt = 0
  BB 311
   Insn 4517: point = 1169, n_alt = 0
   Insn 4516: point = 1169, n_alt = 3
   Insn 4515: point = 1169, n_alt = 2
   Insn 4514: point = 1169, n_alt = 2
   Insn 4513: point = 1169, n_alt = -2
   Insn 4512: point = 1170, n_alt = -2
   Insn 4511: point = 1171, n_alt = -2
   Insn 4510: point = 1172, n_alt = -2
   Insn 4509: point = 1173, n_alt = 3
   Insn 4508: point = 1174, n_alt = 3
   Insn 4507: point = 1175, n_alt = 3
   Insn 4506: point = 1176, n_alt = 3
  BB 310
   Insn 4503: point = 1177, n_alt = 1
  BB 309
   Insn 4501: point = 1177, n_alt = -1
   Insn 4500: point = 1177, n_alt = 0
   Insn 4499: point = 1178, n_alt = 0
   Insn 4498: point = 1179, n_alt = 1
   Insn 4497: point = 1180, n_alt = 0
  BB 308
   Insn 4494: point = 1181, n_alt = 1
  BB 307
   Insn 4492: point = 1181, n_alt = -1
   Insn 4491: point = 1181, n_alt = 0
   Insn 4490: point = 1182, n_alt = 0
  BB 305
   Insn 5673: point = 1183, n_alt = -1
   Insn 4480: point = 1183, n_alt = 1
   Insn 4479: point = 1184, n_alt = 1
   Insn 4478: point = 1186, n_alt = 0
  BB 306
   Insn 4487: point = 1187, n_alt = 1
   Insn 4486: point = 1188, n_alt = 1
   Insn 4485: point = 1190, n_alt = 0
  BB 304
   Insn 4476: point = 1191, n_alt = -1
   Insn 4475: point = 1191, n_alt = 1
   Insn 4474: point = 1191, n_alt = 1
   Insn 4473: point = 1191, n_alt = 1
   Insn 4472: point = 1192, n_alt = 0
   Insn 4471: point = 1193, n_alt = 1
   Insn 4470: point = 1194, n_alt = 0
   Insn 4469: point = 1196, n_alt = 0
   Insn 4468: point = 1197, n_alt = 1
   Insn 4467: point = 1198, n_alt = 0
   Insn 4466: point = 1200, n_alt = 7
   Insn 4465: point = 1201, n_alt = 1
   Insn 4464: point = 1202, n_alt = 0
   Insn 4463: point = 1203, n_alt = 0
   Insn 4462: point = 1204, n_alt = 1
   Insn 5899: point = 1205, n_alt = -2
	Hard reg 1 is preferable by r3023 with profit 1000
   Insn 4461: point = 1207, n_alt = 0
   Insn 5898: point = 1208, n_alt = -2
	Hard reg 1 is preferable by r3023 with profit 2000
   Insn 4460: point = 1210, n_alt = 2
   Insn 4459: point = 1211, n_alt = 2
   Insn 4458: point = 1212, n_alt = 2
   Insn 4457: point = 1213, n_alt = 0
   Insn 4456: point = 1213, n_alt = 0
   Insn 4455: point = 1213, n_alt = 3
   Insn 4454: point = 1213, n_alt = 2
   Insn 4453: point = 1213, n_alt = 2
   Insn 4452: point = 1213, n_alt = 4
   Insn 4451: point = 1213, n_alt = 4
   Insn 4450: point = 1213, n_alt = -2
   Insn 4449: point = 1214, n_alt = -2
   Insn 4448: point = 1215, n_alt = 0
   Insn 4447: point = 1215, n_alt = 0
   Insn 4446: point = 1215, n_alt = 3
   Insn 4445: point = 1216, n_alt = 3
  BB 395
   Insn 5793: point = 1217, n_alt = -1
  BB 299
   Insn 4404: point = 1217, n_alt = -1
   Insn 4403: point = 1217, n_alt = 0
   Insn 4402: point = 1218, n_alt = 0
   Insn 4401: point = 1220, n_alt = 0
   Insn 4400: point = 1221, n_alt = 0
  BB 303
   Insn 5671: point = 1222, n_alt = -1
   Insn 4439: point = 1222, n_alt = 1
  BB 396
   Insn 5796: point = 1223, n_alt = -1
  BB 301
   Insn 4412: point = 1224, n_alt = -1
   Insn 4411: point = 1224, n_alt = 0
   Insn 4410: point = 1225, n_alt = 0
   Insn 4409: point = 1227, n_alt = 0
   Insn 4408: point = 1228, n_alt = 0
  BB 302
   Insn 5669: point = 1229, n_alt = -1
   Insn 4433: point = 1229, n_alt = 1
   Insn 4432: point = 1229, n_alt = 8
   Insn 4431: point = 1230, n_alt = 4
   Insn 4430: point = 1231, n_alt = 1
   Insn 4429: point = 1233, n_alt = 3
   Insn 4428: point = 1235, n_alt = 0
   Insn 4427: point = 1237, n_alt = 1
   Insn 4426: point = 1239, n_alt = 0
   Insn 4425: point = 1240, n_alt = 0
   Insn 4424: point = 1242, n_alt = 1
   Insn 4423: point = 1244, n_alt = 0
   Insn 4422: point = 1245, n_alt = 7
   Insn 4421: point = 1247, n_alt = 4
   Insn 4420: point = 1248, n_alt = 3
   Insn 4419: point = 1250, n_alt = 0
   Insn 4418: point = 1252, n_alt = 1
   Insn 4417: point = 1254, n_alt = 0
   Insn 4416: point = 1255, n_alt = 0
   Insn 4415: point = 1257, n_alt = 1
   Insn 4414: point = 1259, n_alt = 0
  BB 300
   Insn 4406: point = 1261, n_alt = 1
  BB 298
   Insn 4398: point = 1262, n_alt = 1
   Insn 4397: point = 1263, n_alt = 0
   Insn 4396: point = 1264, n_alt = 0
  BB 296
   Insn 5667: point = 1265, n_alt = -1
   Insn 4387: point = 1265, n_alt = 8
   Insn 4386: point = 1266, n_alt = 2
   Insn 4385: point = 1268, n_alt = 7
   Insn 4384: point = 1269, n_alt = 7
  BB 297
   Insn 4393: point = 1270, n_alt = 8
   Insn 4392: point = 1271, n_alt = 7
  BB 295
   Insn 4379: point = 1272, n_alt = -1
   Insn 4378: point = 1272, n_alt = 1
   Insn 4377: point = 1273, n_alt = 7
   Insn 4376: point = 1274, n_alt = 7
   Insn 4375: point = 1275, n_alt = 1
   Insn 4374: point = 1276, n_alt = 0
   Insn 4373: point = 1278, n_alt = 0
   Insn 4372: point = 1280, n_alt = 0
   Insn 4371: point = 1282, n_alt = 0
   Insn 4370: point = 1284, n_alt = 0
   Insn 4369: point = 1286, n_alt = 0
   Insn 4368: point = 1287, n_alt = -2
   Insn 4367: point = 1289, n_alt = -2
   Insn 4366: point = 1291, n_alt = 0
   Insn 4365: point = 1293, n_alt = 0
   Insn 4364: point = 1294, n_alt = -2
   Insn 4363: point = 1296, n_alt = 0
   Insn 4362: point = 1298, n_alt = -2
   Insn 4361: point = 1299, n_alt = 1
   Insn 4360: point = 1301, n_alt = 0
   Insn 4359: point = 1302, n_alt = 1
   Insn 4358: point = 1303, n_alt = 0
   Insn 4357: point = 1305, n_alt = 0
   Insn 4356: point = 1306, n_alt = 0
   Insn 4355: point = 1306, n_alt = 0
   Insn 4354: point = 1306, n_alt = 3
   Insn 4353: point = 1306, n_alt = 4
   Insn 4352: point = 1306, n_alt = 2
   Insn 4351: point = 1306, n_alt = 2
   Insn 4350: point = 1306, n_alt = 2
   Insn 4349: point = 1306, n_alt = -2
   Insn 4348: point = 1307, n_alt = -2
   Insn 4347: point = 1308, n_alt = 0
   Insn 4346: point = 1308, n_alt = 0
   Insn 4345: point = 1308, n_alt = 3
   Insn 4344: point = 1309, n_alt = 3
   Insn 4343: point = 1310, n_alt = 1
   Insn 4342: point = 1311, n_alt = 0
   Insn 4341: point = 1313, n_alt = 0
   Insn 4340: point = 1315, n_alt = 0
   Insn 4339: point = 1315, n_alt = -2
   Insn 4338: point = 1316, n_alt = 3
   Insn 4337: point = 1318, n_alt = 0
  BB 294
   Insn 4335: point = 1319, n_alt = -1
   Insn 4334: point = 1319, n_alt = 0
   Insn 4333: point = 1320, n_alt = 0
   Insn 4332: point = 1322, n_alt = 0
   Insn 4331: point = 1324, n_alt = 0
   Insn 4330: point = 1326, n_alt = 0
   Insn 4329: point = 1328, n_alt = 0
   Insn 4328: point = 1330, n_alt = 0
   Insn 4327: point = 1331, n_alt = -2
   Insn 4326: point = 1333, n_alt = -2
   Insn 4325: point = 1335, n_alt = 0
   Insn 4324: point = 1337, n_alt = 0
   Insn 4323: point = 1338, n_alt = -2
   Insn 4322: point = 1340, n_alt = 0
   Insn 4321: point = 1342, n_alt = -2
   Insn 4320: point = 1343, n_alt = 1
   Insn 4319: point = 1345, n_alt = 0
  BB 293
   Insn 4317: point = 1346, n_alt = -1
   Insn 4316: point = 1346, n_alt = 0
   Insn 4315: point = 1347, n_alt = 0
  BB 292
   Insn 4312: point = 1348, n_alt = 0
   Insn 4311: point = 1348, n_alt = 3
   Insn 4310: point = 1348, n_alt = 2
   Insn 4309: point = 1348, n_alt = 2
   Insn 4308: point = 1348, n_alt = -2
   Insn 4307: point = 1349, n_alt = -2
   Insn 4306: point = 1350, n_alt = -2
   Insn 4305: point = 1351, n_alt = -2
   Insn 4304: point = 1352, n_alt = 3
   Insn 4303: point = 1353, n_alt = 3
   Insn 4302: point = 1354, n_alt = 3
   Insn 4301: point = 1355, n_alt = 3
  BB 291
   Insn 4298: point = 1356, n_alt = 1
  BB 290
   Insn 4296: point = 1356, n_alt = -1
   Insn 4295: point = 1356, n_alt = 0
   Insn 4294: point = 1357, n_alt = 0
   Insn 4293: point = 1358, n_alt = 1
   Insn 4292: point = 1359, n_alt = 0
  BB 289
   Insn 4289: point = 1360, n_alt = 1
  BB 288
   Insn 4287: point = 1360, n_alt = -1
   Insn 4286: point = 1360, n_alt = 0
   Insn 4285: point = 1361, n_alt = 0
  BB 286
   Insn 5664: point = 1362, n_alt = -1
   Insn 4275: point = 1362, n_alt = 1
   Insn 4274: point = 1363, n_alt = 1
   Insn 4273: point = 1365, n_alt = 0
  BB 287
   Insn 4282: point = 1366, n_alt = 1
   Insn 4281: point = 1367, n_alt = 1
   Insn 4280: point = 1369, n_alt = 0
  BB 285
   Insn 4271: point = 1370, n_alt = -1
   Insn 4270: point = 1370, n_alt = 1
   Insn 4269: point = 1370, n_alt = 1
   Insn 4268: point = 1370, n_alt = 1
   Insn 4267: point = 1371, n_alt = 0
   Insn 4266: point = 1372, n_alt = 1
   Insn 4265: point = 1373, n_alt = 0
   Insn 4264: point = 1375, n_alt = 0
   Insn 4263: point = 1376, n_alt = 1
   Insn 4262: point = 1377, n_alt = 0
   Insn 4261: point = 1379, n_alt = 7
   Insn 4260: point = 1380, n_alt = 1
   Insn 4259: point = 1381, n_alt = 0
   Insn 4258: point = 1382, n_alt = 0
   Insn 4257: point = 1383, n_alt = 1
   Insn 5897: point = 1384, n_alt = -2
	Hard reg 1 is preferable by r3022 with profit 1000
   Insn 4256: point = 1386, n_alt = 0
   Insn 5896: point = 1387, n_alt = -2
	Hard reg 1 is preferable by r3022 with profit 2000
   Insn 4255: point = 1389, n_alt = 2
   Insn 4254: point = 1390, n_alt = 2
   Insn 4253: point = 1391, n_alt = 2
   Insn 4252: point = 1392, n_alt = 0
   Insn 4251: point = 1392, n_alt = 0
   Insn 4250: point = 1392, n_alt = 3
   Insn 4249: point = 1392, n_alt = 2
   Insn 4248: point = 1392, n_alt = 2
   Insn 4247: point = 1392, n_alt = 4
   Insn 4246: point = 1392, n_alt = 4
   Insn 4245: point = 1392, n_alt = -2
   Insn 4244: point = 1393, n_alt = -2
   Insn 4243: point = 1394, n_alt = 0
   Insn 4242: point = 1394, n_alt = 0
   Insn 4241: point = 1394, n_alt = 3
   Insn 4240: point = 1395, n_alt = 3
  BB 393
   Insn 5787: point = 1396, n_alt = -1
  BB 280
   Insn 4199: point = 1396, n_alt = -1
   Insn 4198: point = 1396, n_alt = 0
   Insn 4197: point = 1397, n_alt = 0
   Insn 4196: point = 1399, n_alt = 0
   Insn 4195: point = 1400, n_alt = 0
  BB 284
   Insn 5662: point = 1401, n_alt = -1
   Insn 4234: point = 1401, n_alt = 1
  BB 394
   Insn 5790: point = 1402, n_alt = -1
  BB 282
   Insn 4207: point = 1403, n_alt = -1
   Insn 4206: point = 1403, n_alt = 0
   Insn 4205: point = 1404, n_alt = 0
   Insn 4204: point = 1406, n_alt = 0
   Insn 4203: point = 1407, n_alt = 0
  BB 283
   Insn 5660: point = 1408, n_alt = -1
   Insn 4228: point = 1408, n_alt = 1
   Insn 4227: point = 1408, n_alt = 8
   Insn 4226: point = 1409, n_alt = 4
   Insn 4225: point = 1410, n_alt = 1
   Insn 4224: point = 1412, n_alt = 3
   Insn 4223: point = 1414, n_alt = 0
   Insn 4222: point = 1416, n_alt = 1
   Insn 4221: point = 1418, n_alt = 0
   Insn 4220: point = 1419, n_alt = 0
   Insn 4219: point = 1421, n_alt = 1
   Insn 4218: point = 1423, n_alt = 0
   Insn 4217: point = 1424, n_alt = 7
   Insn 4216: point = 1426, n_alt = 4
   Insn 4215: point = 1427, n_alt = 3
   Insn 4214: point = 1429, n_alt = 0
   Insn 4213: point = 1431, n_alt = 1
   Insn 4212: point = 1433, n_alt = 0
   Insn 4211: point = 1434, n_alt = 0
   Insn 4210: point = 1436, n_alt = 1
   Insn 4209: point = 1438, n_alt = 0
  BB 281
   Insn 4201: point = 1440, n_alt = 1
  BB 279
   Insn 4193: point = 1441, n_alt = 1
   Insn 4192: point = 1442, n_alt = 0
   Insn 4191: point = 1443, n_alt = 0
  BB 277
   Insn 5658: point = 1444, n_alt = -1
   Insn 4182: point = 1444, n_alt = 8
   Insn 4181: point = 1445, n_alt = 2
   Insn 4180: point = 1447, n_alt = 7
   Insn 4179: point = 1448, n_alt = 7
  BB 278
   Insn 4188: point = 1449, n_alt = 8
   Insn 4187: point = 1450, n_alt = 7
  BB 276
   Insn 4174: point = 1451, n_alt = -1
   Insn 4173: point = 1451, n_alt = 1
   Insn 4172: point = 1452, n_alt = 7
   Insn 4171: point = 1453, n_alt = 7
   Insn 4170: point = 1454, n_alt = 1
   Insn 4169: point = 1455, n_alt = 0
   Insn 4168: point = 1457, n_alt = 0
   Insn 4167: point = 1459, n_alt = 0
   Insn 4166: point = 1461, n_alt = 0
   Insn 4165: point = 1463, n_alt = 0
   Insn 4164: point = 1465, n_alt = 0
   Insn 4163: point = 1466, n_alt = -2
   Insn 4162: point = 1468, n_alt = -2
   Insn 4161: point = 1470, n_alt = 0
   Insn 4160: point = 1472, n_alt = 0
   Insn 4159: point = 1473, n_alt = -2
   Insn 4158: point = 1475, n_alt = 0
   Insn 4157: point = 1477, n_alt = -2
   Insn 4156: point = 1478, n_alt = 1
   Insn 4155: point = 1480, n_alt = 0
   Insn 4154: point = 1481, n_alt = 1
   Insn 4153: point = 1482, n_alt = 0
   Insn 4152: point = 1484, n_alt = 0
   Insn 4151: point = 1485, n_alt = 0
   Insn 4150: point = 1485, n_alt = 0
   Insn 4149: point = 1485, n_alt = 3
   Insn 4148: point = 1485, n_alt = 4
   Insn 4147: point = 1485, n_alt = 2
   Insn 4146: point = 1485, n_alt = 2
   Insn 4145: point = 1485, n_alt = 2
   Insn 4144: point = 1485, n_alt = -2
   Insn 4143: point = 1486, n_alt = -2
   Insn 4142: point = 1487, n_alt = 0
   Insn 4141: point = 1487, n_alt = 0
   Insn 4140: point = 1487, n_alt = 3
   Insn 4139: point = 1488, n_alt = 3
   Insn 4138: point = 1489, n_alt = 1
   Insn 4137: point = 1490, n_alt = 0
   Insn 4136: point = 1492, n_alt = 0
   Insn 4135: point = 1494, n_alt = 0
   Insn 4134: point = 1494, n_alt = -2
   Insn 4133: point = 1495, n_alt = 3
   Insn 4132: point = 1497, n_alt = 0
  BB 275
   Insn 4130: point = 1498, n_alt = -1
   Insn 4129: point = 1498, n_alt = 0
   Insn 4128: point = 1499, n_alt = 0
   Insn 4127: point = 1501, n_alt = 0
   Insn 4126: point = 1503, n_alt = 0
   Insn 4125: point = 1505, n_alt = 0
   Insn 4124: point = 1507, n_alt = 0
   Insn 4123: point = 1509, n_alt = 0
   Insn 4122: point = 1510, n_alt = -2
   Insn 4121: point = 1512, n_alt = -2
   Insn 4120: point = 1514, n_alt = 0
   Insn 4119: point = 1516, n_alt = 0
   Insn 4118: point = 1517, n_alt = -2
   Insn 4117: point = 1519, n_alt = 0
   Insn 4116: point = 1521, n_alt = -2
   Insn 4115: point = 1522, n_alt = 1
   Insn 4114: point = 1524, n_alt = 0
  BB 274
   Insn 4112: point = 1525, n_alt = -1
   Insn 4111: point = 1525, n_alt = 0
   Insn 4110: point = 1526, n_alt = 0
  BB 273
   Insn 4107: point = 1527, n_alt = 0
   Insn 4106: point = 1527, n_alt = 3
   Insn 4105: point = 1527, n_alt = 2
   Insn 4104: point = 1527, n_alt = 2
   Insn 4103: point = 1527, n_alt = -2
   Insn 4102: point = 1528, n_alt = -2
   Insn 4101: point = 1529, n_alt = -2
   Insn 4100: point = 1530, n_alt = -2
   Insn 4099: point = 1531, n_alt = 3
   Insn 4098: point = 1532, n_alt = 3
   Insn 4097: point = 1533, n_alt = 3
   Insn 4096: point = 1534, n_alt = 3
  BB 272
   Insn 4093: point = 1535, n_alt = 1
  BB 271
   Insn 4091: point = 1535, n_alt = -1
   Insn 4090: point = 1535, n_alt = 0
   Insn 4089: point = 1536, n_alt = 0
   Insn 4088: point = 1537, n_alt = 1
   Insn 4087: point = 1538, n_alt = 0
   Insn 4086: point = 1539, n_alt = 0
   Insn 4085: point = 1540, n_alt = 1
   Insn 5895: point = 1541, n_alt = -2
	Hard reg 1 is preferable by r3021 with profit 1000
   Insn 4084: point = 1543, n_alt = 0
   Insn 5894: point = 1544, n_alt = -2
	Hard reg 1 is preferable by r3021 with profit 2000
   Insn 4083: point = 1546, n_alt = 2
   Insn 4082: point = 1547, n_alt = 2
   Insn 4081: point = 1548, n_alt = 2
   Insn 4080: point = 1549, n_alt = 0
   Insn 4079: point = 1549, n_alt = 0
   Insn 4078: point = 1549, n_alt = 3
   Insn 4077: point = 1549, n_alt = 2
   Insn 4076: point = 1549, n_alt = 2
   Insn 4075: point = 1549, n_alt = 4
   Insn 4074: point = 1549, n_alt = 4
   Insn 4073: point = 1549, n_alt = -2
   Insn 4072: point = 1550, n_alt = -2
   Insn 4071: point = 1551, n_alt = 0
   Insn 4070: point = 1551, n_alt = 0
   Insn 4069: point = 1551, n_alt = 3
   Insn 4068: point = 1552, n_alt = 3
  BB 391
   Insn 5781: point = 1553, n_alt = -1
  BB 266
   Insn 4036: point = 1553, n_alt = -1
   Insn 4035: point = 1553, n_alt = 0
   Insn 4034: point = 1554, n_alt = 0
   Insn 4033: point = 1556, n_alt = 0
   Insn 4032: point = 1557, n_alt = 0
  BB 270
   Insn 5655: point = 1558, n_alt = -1
   Insn 4062: point = 1558, n_alt = 1
  BB 392
   Insn 5784: point = 1559, n_alt = -1
  BB 268
   Insn 4044: point = 1560, n_alt = -1
   Insn 4043: point = 1560, n_alt = 0
   Insn 4042: point = 1561, n_alt = 0
   Insn 4041: point = 1563, n_alt = 0
   Insn 4040: point = 1564, n_alt = 0
  BB 269
   Insn 5653: point = 1565, n_alt = -1
   Insn 4056: point = 1565, n_alt = 1
   Insn 4055: point = 1565, n_alt = 8
   Insn 4054: point = 1566, n_alt = 7
   Insn 4053: point = 1567, n_alt = 4
   Insn 4052: point = 1568, n_alt = 3
   Insn 4051: point = 1570, n_alt = 0
   Insn 4050: point = 1572, n_alt = 1
   Insn 4049: point = 1574, n_alt = 0
   Insn 4048: point = 1575, n_alt = 0
   Insn 4047: point = 1577, n_alt = 1
   Insn 4046: point = 1579, n_alt = 0
  BB 267
   Insn 4038: point = 1581, n_alt = 1
  BB 265
   Insn 4030: point = 1582, n_alt = 1
   Insn 4029: point = 1583, n_alt = 0
   Insn 4028: point = 1584, n_alt = 0
   Insn 4027: point = 1585, n_alt = 1
   Insn 4026: point = 1586, n_alt = 0
   Insn 4025: point = 1588, n_alt = 0
   Insn 4024: point = 1590, n_alt = 0
   Insn 4023: point = 1592, n_alt = 0
   Insn 4022: point = 1594, n_alt = 0
   Insn 4021: point = 1596, n_alt = 0
   Insn 4020: point = 1597, n_alt = -2
   Insn 4019: point = 1599, n_alt = -2
   Insn 4018: point = 1601, n_alt = 0
   Insn 4017: point = 1603, n_alt = 0
   Insn 4016: point = 1604, n_alt = -2
   Insn 4015: point = 1606, n_alt = 0
   Insn 4014: point = 1608, n_alt = -2
   Insn 4013: point = 1609, n_alt = 1
   Insn 4012: point = 1611, n_alt = 0
  BB 264
   Insn 4010: point = 1612, n_alt = -1
   Insn 4009: point = 1612, n_alt = 0
   Insn 4008: point = 1613, n_alt = 0
   Insn 4007: point = 1615, n_alt = 0
   Insn 4006: point = 1617, n_alt = 0
   Insn 4005: point = 1619, n_alt = 0
   Insn 4004: point = 1621, n_alt = 0
   Insn 4003: point = 1623, n_alt = 0
   Insn 4002: point = 1624, n_alt = -2
   Insn 4001: point = 1626, n_alt = -2
   Insn 4000: point = 1628, n_alt = 0
   Insn 3999: point = 1630, n_alt = 0
   Insn 3998: point = 1631, n_alt = -2
   Insn 3997: point = 1633, n_alt = 0
   Insn 3996: point = 1635, n_alt = -2
   Insn 3995: point = 1636, n_alt = 1
   Insn 3994: point = 1638, n_alt = 0
  BB 263
   Insn 3992: point = 1639, n_alt = -1
   Insn 3991: point = 1639, n_alt = 0
   Insn 3990: point = 1640, n_alt = 0
  BB 262
   Insn 3987: point = 1641, n_alt = 0
   Insn 3986: point = 1641, n_alt = 3
   Insn 3985: point = 1641, n_alt = 2
   Insn 3984: point = 1641, n_alt = 2
   Insn 3983: point = 1641, n_alt = -2
   Insn 3982: point = 1642, n_alt = -2
   Insn 3981: point = 1643, n_alt = -2
   Insn 3980: point = 1644, n_alt = -2
   Insn 3979: point = 1645, n_alt = 3
   Insn 3978: point = 1646, n_alt = 3
   Insn 3977: point = 1647, n_alt = 3
   Insn 3976: point = 1648, n_alt = 3
  BB 261
   Insn 3973: point = 1649, n_alt = 1
  BB 260
   Insn 3971: point = 1649, n_alt = -1
   Insn 3970: point = 1649, n_alt = 0
   Insn 3969: point = 1650, n_alt = 0
   Insn 3968: point = 1651, n_alt = 1
   Insn 3967: point = 1652, n_alt = 0
   Insn 3966: point = 1653, n_alt = 0
   Insn 3965: point = 1654, n_alt = 1
   Insn 5893: point = 1655, n_alt = -2
	Hard reg 1 is preferable by r3020 with profit 1000
   Insn 3964: point = 1657, n_alt = 0
   Insn 5892: point = 1658, n_alt = -2
	Hard reg 1 is preferable by r3020 with profit 2000
   Insn 3963: point = 1660, n_alt = 2
   Insn 3962: point = 1661, n_alt = 2
   Insn 3961: point = 1662, n_alt = 2
   Insn 3960: point = 1663, n_alt = 0
   Insn 3959: point = 1663, n_alt = 0
   Insn 3958: point = 1663, n_alt = 3
   Insn 3957: point = 1663, n_alt = 2
   Insn 3956: point = 1663, n_alt = 2
   Insn 3955: point = 1663, n_alt = 4
   Insn 3954: point = 1663, n_alt = 4
   Insn 3953: point = 1663, n_alt = -2
   Insn 3952: point = 1664, n_alt = -2
   Insn 3951: point = 1665, n_alt = 0
   Insn 3950: point = 1665, n_alt = 0
   Insn 3949: point = 1665, n_alt = 3
   Insn 3948: point = 1666, n_alt = 3
  BB 389
   Insn 5775: point = 1667, n_alt = -1
  BB 255
   Insn 3916: point = 1667, n_alt = -1
   Insn 3915: point = 1667, n_alt = 0
   Insn 3914: point = 1668, n_alt = 0
   Insn 3913: point = 1670, n_alt = 0
   Insn 3912: point = 1671, n_alt = 0
  BB 259
   Insn 5651: point = 1672, n_alt = -1
   Insn 3942: point = 1672, n_alt = 1
  BB 390
   Insn 5778: point = 1673, n_alt = -1
  BB 257
   Insn 3924: point = 1674, n_alt = -1
   Insn 3923: point = 1674, n_alt = 0
   Insn 3922: point = 1675, n_alt = 0
   Insn 3921: point = 1677, n_alt = 0
   Insn 3920: point = 1678, n_alt = 0
  BB 258
   Insn 5649: point = 1679, n_alt = -1
   Insn 3936: point = 1679, n_alt = 1
   Insn 3935: point = 1679, n_alt = 8
   Insn 3934: point = 1680, n_alt = 7
   Insn 3933: point = 1681, n_alt = 4
   Insn 3932: point = 1682, n_alt = 3
   Insn 3931: point = 1684, n_alt = 0
   Insn 3930: point = 1686, n_alt = 1
   Insn 3929: point = 1688, n_alt = 0
   Insn 3928: point = 1689, n_alt = 0
   Insn 3927: point = 1691, n_alt = 1
   Insn 3926: point = 1693, n_alt = 0
  BB 256
   Insn 3918: point = 1695, n_alt = 1
  BB 254
   Insn 3910: point = 1696, n_alt = 1
   Insn 3909: point = 1697, n_alt = 0
   Insn 3908: point = 1698, n_alt = 0
   Insn 3907: point = 1699, n_alt = 1
   Insn 3906: point = 1700, n_alt = 0
   Insn 3905: point = 1702, n_alt = 0
   Insn 3904: point = 1704, n_alt = 0
   Insn 3903: point = 1706, n_alt = 0
   Insn 3902: point = 1708, n_alt = 0
   Insn 3901: point = 1710, n_alt = 0
   Insn 3900: point = 1711, n_alt = -2
   Insn 3899: point = 1713, n_alt = -2
   Insn 3898: point = 1715, n_alt = 0
   Insn 3897: point = 1717, n_alt = 0
   Insn 3896: point = 1718, n_alt = -2
   Insn 3895: point = 1720, n_alt = 0
   Insn 3894: point = 1722, n_alt = -2
   Insn 3893: point = 1723, n_alt = 1
   Insn 3892: point = 1725, n_alt = 0
  BB 253
   Insn 3890: point = 1726, n_alt = -1
   Insn 3889: point = 1726, n_alt = 0
   Insn 3888: point = 1727, n_alt = 0
   Insn 3887: point = 1729, n_alt = 0
   Insn 3886: point = 1731, n_alt = 0
   Insn 3885: point = 1733, n_alt = 0
   Insn 3884: point = 1735, n_alt = 0
   Insn 3883: point = 1737, n_alt = 0
   Insn 3882: point = 1738, n_alt = -2
   Insn 3881: point = 1740, n_alt = -2
   Insn 3880: point = 1742, n_alt = 0
   Insn 3879: point = 1744, n_alt = 0
   Insn 3878: point = 1745, n_alt = -2
   Insn 3877: point = 1747, n_alt = 0
   Insn 3876: point = 1749, n_alt = -2
   Insn 3875: point = 1750, n_alt = 1
   Insn 3874: point = 1752, n_alt = 0
  BB 252
   Insn 3872: point = 1753, n_alt = -1
   Insn 3871: point = 1753, n_alt = 0
   Insn 3870: point = 1754, n_alt = 0
  BB 251
   Insn 3867: point = 1755, n_alt = 0
   Insn 3866: point = 1755, n_alt = 3
   Insn 3865: point = 1755, n_alt = 2
   Insn 3864: point = 1755, n_alt = 2
   Insn 3863: point = 1755, n_alt = -2
   Insn 3862: point = 1756, n_alt = -2
   Insn 3861: point = 1757, n_alt = -2
   Insn 3860: point = 1758, n_alt = -2
   Insn 3859: point = 1759, n_alt = 3
   Insn 3858: point = 1760, n_alt = 3
   Insn 3857: point = 1761, n_alt = 3
   Insn 3856: point = 1762, n_alt = 3
  BB 250
   Insn 3853: point = 1763, n_alt = 1
  BB 249
   Insn 3851: point = 1763, n_alt = -1
   Insn 3850: point = 1763, n_alt = 0
   Insn 3849: point = 1764, n_alt = 0
   Insn 3848: point = 1765, n_alt = 1
   Insn 3847: point = 1766, n_alt = 0
   Insn 3846: point = 1767, n_alt = 0
   Insn 3845: point = 1768, n_alt = 1
   Insn 5891: point = 1769, n_alt = -2
	Hard reg 1 is preferable by r3019 with profit 1000
   Insn 3844: point = 1771, n_alt = 0
   Insn 5890: point = 1772, n_alt = -2
	Hard reg 1 is preferable by r3019 with profit 2000
   Insn 3843: point = 1774, n_alt = 2
   Insn 3842: point = 1775, n_alt = 2
   Insn 3841: point = 1776, n_alt = 2
   Insn 3840: point = 1777, n_alt = 0
   Insn 3839: point = 1777, n_alt = 0
   Insn 3838: point = 1777, n_alt = 3
   Insn 3837: point = 1777, n_alt = 2
   Insn 3836: point = 1777, n_alt = 2
   Insn 3835: point = 1777, n_alt = 4
   Insn 3834: point = 1777, n_alt = 4
   Insn 3833: point = 1777, n_alt = -2
   Insn 3832: point = 1778, n_alt = -2
   Insn 3831: point = 1779, n_alt = 0
   Insn 3830: point = 1779, n_alt = 0
   Insn 3829: point = 1779, n_alt = 3
   Insn 3828: point = 1780, n_alt = 3
   Insn 3827: point = 1781, n_alt = 1
   Insn 3826: point = 1782, n_alt = 0
   Insn 3825: point = 1784, n_alt = 0
   Insn 3824: point = 1786, n_alt = 0
   Insn 3823: point = 1788, n_alt = 0
   Insn 3822: point = 1790, n_alt = 0
   Insn 3821: point = 1792, n_alt = 0
   Insn 3820: point = 1793, n_alt = -2
   Insn 3819: point = 1795, n_alt = -2
   Insn 3818: point = 1797, n_alt = 0
   Insn 3817: point = 1799, n_alt = 0
   Insn 3816: point = 1800, n_alt = -2
   Insn 3815: point = 1802, n_alt = 0
   Insn 3814: point = 1804, n_alt = -2
   Insn 3813: point = 1805, n_alt = 1
   Insn 3812: point = 1807, n_alt = 0
   Insn 3811: point = 1808, n_alt = 1
   Insn 3810: point = 1809, n_alt = 0
   Insn 3809: point = 1811, n_alt = 0
   Insn 3808: point = 1812, n_alt = 0
   Insn 3807: point = 1812, n_alt = 0
   Insn 3806: point = 1812, n_alt = 3
   Insn 3805: point = 1812, n_alt = 4
   Insn 3804: point = 1812, n_alt = 2
   Insn 3803: point = 1812, n_alt = 2
   Insn 3802: point = 1812, n_alt = 2
   Insn 3801: point = 1812, n_alt = -2
   Insn 3800: point = 1813, n_alt = -2
   Insn 3799: point = 1814, n_alt = 0
   Insn 3798: point = 1814, n_alt = 0
   Insn 3797: point = 1814, n_alt = 3
   Insn 3796: point = 1815, n_alt = 3
   Insn 3795: point = 1816, n_alt = 1
   Insn 3794: point = 1817, n_alt = 0
   Insn 3793: point = 1819, n_alt = 0
   Insn 3792: point = 1821, n_alt = 0
   Insn 3791: point = 1821, n_alt = -2
   Insn 3790: point = 1822, n_alt = 3
   Insn 3789: point = 1824, n_alt = 0
  BB 248
   Insn 3787: point = 1825, n_alt = -1
   Insn 3786: point = 1825, n_alt = 0
   Insn 3785: point = 1826, n_alt = 0
   Insn 3784: point = 1828, n_alt = 0
   Insn 3783: point = 1830, n_alt = 0
   Insn 3782: point = 1832, n_alt = 0
   Insn 3781: point = 1834, n_alt = 0
   Insn 3780: point = 1836, n_alt = 0
   Insn 3779: point = 1837, n_alt = -2
   Insn 3778: point = 1839, n_alt = -2
   Insn 3777: point = 1841, n_alt = 0
   Insn 3776: point = 1843, n_alt = 0
   Insn 3775: point = 1844, n_alt = -2
   Insn 3774: point = 1846, n_alt = 0
   Insn 3773: point = 1848, n_alt = -2
   Insn 3772: point = 1849, n_alt = 1
   Insn 3771: point = 1851, n_alt = 0
  BB 247
   Insn 3769: point = 1852, n_alt = -1
   Insn 3768: point = 1852, n_alt = 0
   Insn 3767: point = 1853, n_alt = 0
  BB 246
   Insn 3764: point = 1854, n_alt = 0
   Insn 3763: point = 1854, n_alt = 3
   Insn 3762: point = 1854, n_alt = 2
   Insn 3761: point = 1854, n_alt = 2
   Insn 3760: point = 1854, n_alt = -2
   Insn 3759: point = 1855, n_alt = -2
   Insn 3758: point = 1856, n_alt = -2
   Insn 3757: point = 1857, n_alt = -2
   Insn 3756: point = 1858, n_alt = 3
   Insn 3755: point = 1859, n_alt = 3
   Insn 3754: point = 1860, n_alt = 3
   Insn 3753: point = 1861, n_alt = 3
   Insn 3752: point = 1862, n_alt = 0
   Insn 3751: point = 1862, n_alt = 3
   Insn 3750: point = 1862, n_alt = -2
   Insn 3749: point = 1863, n_alt = 2
   Insn 3748: point = 1863, n_alt = -2
   Insn 3747: point = 1864, n_alt = -2
   Insn 3746: point = 1865, n_alt = 3
   Insn 3745: point = 1866, n_alt = 3
   Insn 3744: point = 1867, n_alt = 3
  BB 245
   Insn 3741: point = 1868, n_alt = 1
  BB 244
   Insn 3739: point = 1868, n_alt = -1
   Insn 3738: point = 1868, n_alt = 0
   Insn 3737: point = 1869, n_alt = 0
   Insn 3736: point = 1870, n_alt = 1
   Insn 3735: point = 1871, n_alt = 0
   Insn 3734: point = 1872, n_alt = 0
   Insn 3733: point = 1873, n_alt = 1
   Insn 5889: point = 1874, n_alt = -2
	Hard reg 1 is preferable by r3018 with profit 1000
   Insn 3732: point = 1876, n_alt = 0
   Insn 5888: point = 1877, n_alt = -2
	Hard reg 1 is preferable by r3018 with profit 2000
   Insn 3731: point = 1879, n_alt = 2
   Insn 3730: point = 1880, n_alt = 2
   Insn 3729: point = 1881, n_alt = 2
   Insn 3728: point = 1882, n_alt = 0
   Insn 3727: point = 1882, n_alt = 0
   Insn 3726: point = 1882, n_alt = 3
   Insn 3725: point = 1882, n_alt = 2
   Insn 3724: point = 1882, n_alt = 2
   Insn 3723: point = 1882, n_alt = 4
   Insn 3722: point = 1882, n_alt = 4
   Insn 3721: point = 1882, n_alt = -2
   Insn 3720: point = 1883, n_alt = -2
   Insn 3719: point = 1884, n_alt = 0
   Insn 3718: point = 1884, n_alt = 0
   Insn 3717: point = 1884, n_alt = 3
   Insn 3716: point = 1885, n_alt = 3
  BB 221
   Insn 5637: point = 1886, n_alt = -1
  BB 385
   Insn 5763: point = 1886, n_alt = -1
  BB 216
   Insn 3253: point = 1886, n_alt = -1
   Insn 3252: point = 1886, n_alt = 0
   Insn 3251: point = 1887, n_alt = 0
   Insn 3250: point = 1889, n_alt = 0
   Insn 3249: point = 1890, n_alt = 0
  BB 220
   Insn 5635: point = 1891, n_alt = -1
   Insn 3279: point = 1891, n_alt = 1
  BB 386
   Insn 5766: point = 1892, n_alt = -1
  BB 218
   Insn 3261: point = 1893, n_alt = -1
   Insn 3260: point = 1893, n_alt = 0
   Insn 3259: point = 1894, n_alt = 0
   Insn 3258: point = 1896, n_alt = 0
   Insn 3257: point = 1897, n_alt = 0
  BB 219
   Insn 5633: point = 1898, n_alt = -1
   Insn 3273: point = 1898, n_alt = 1
   Insn 3272: point = 1898, n_alt = 8
   Insn 3271: point = 1899, n_alt = 7
   Insn 3270: point = 1900, n_alt = 4
   Insn 3269: point = 1901, n_alt = 3
   Insn 3268: point = 1903, n_alt = 0
   Insn 3267: point = 1905, n_alt = 1
   Insn 3266: point = 1907, n_alt = 0
   Insn 3265: point = 1908, n_alt = 0
   Insn 3264: point = 1910, n_alt = 1
   Insn 3263: point = 1912, n_alt = 0
  BB 217
   Insn 3255: point = 1914, n_alt = 1
  BB 215
   Insn 3247: point = 1915, n_alt = 1
   Insn 3246: point = 1916, n_alt = 0
   Insn 3245: point = 1917, n_alt = 0
  BB 387
   Insn 5769: point = 1918, n_alt = -1
  BB 223
   Insn 3297: point = 1918, n_alt = -1
   Insn 3296: point = 1918, n_alt = 0
   Insn 3295: point = 1919, n_alt = 0
   Insn 3294: point = 1921, n_alt = 0
   Insn 3293: point = 1922, n_alt = 0
  BB 243
   Insn 5647: point = 1923, n_alt = -1
   Insn 3710: point = 1923, n_alt = 1
  BB 388
   Insn 5772: point = 1924, n_alt = -1
  BB 225
   Insn 3305: point = 1925, n_alt = -1
   Insn 3304: point = 1925, n_alt = 0
   Insn 3303: point = 1926, n_alt = 0
   Insn 3302: point = 1928, n_alt = 0
   Insn 3301: point = 1929, n_alt = 0
  BB 242
   Insn 5645: point = 1930, n_alt = -1
   Insn 3704: point = 1930, n_alt = 1
  BB 238
   Insn 5643: point = 1931, n_alt = -1
   Insn 3654: point = 1931, n_alt = 8
   Insn 3653: point = 1932, n_alt = 4
   Insn 3652: point = 1933, n_alt = 3
   Insn 3651: point = 1935, n_alt = 0
   Insn 3650: point = 1937, n_alt = 0
   Insn 3649: point = 1939, n_alt = 0
   Insn 3648: point = 1940, n_alt = 0
   Insn 3647: point = 1942, n_alt = 0
   Insn 3646: point = 1944, n_alt = 0
  BB 237
   Insn 3643: point = 1946, n_alt = 7
  BB 236
   Insn 3641: point = 1948, n_alt = -1
   Insn 3640: point = 1948, n_alt = 0
   Insn 3639: point = 1949, n_alt = 0
   Insn 3638: point = 1951, n_alt = 0
   Insn 3637: point = 1953, n_alt = 0
   Insn 3636: point = 1954, n_alt = 1
   Insn 3635: point = 1954, n_alt = 0
   Insn 3634: point = 1956, n_alt = 0
   Insn 3633: point = 1957, n_alt = 1
   Insn 3632: point = 1957, n_alt = 7
  BB 241
   Insn 3701: point = 1959, n_alt = 8
   Insn 3700: point = 1960, n_alt = 4
   Insn 3699: point = 1961, n_alt = 1
   Insn 3698: point = 1963, n_alt = 3
   Insn 3697: point = 1965, n_alt = 0
   Insn 3696: point = 1967, n_alt = 0
   Insn 3695: point = 1969, n_alt = 0
   Insn 3694: point = 1970, n_alt = 0
   Insn 3693: point = 1972, n_alt = 0
   Insn 3692: point = 1974, n_alt = 0
   Insn 3691: point = 1975, n_alt = -2
   Insn 3690: point = 1977, n_alt = 2
   Insn 3689: point = 1979, n_alt = 7
   Insn 3688: point = 1980, n_alt = -2
   Insn 3687: point = 1981, n_alt = 0
   Insn 3686: point = 1981, n_alt = -2
   Insn 3685: point = 1982, n_alt = 7
   Insn 3684: point = 1983, n_alt = 8
  BB 240
   Insn 3681: point = 1985, n_alt = 7
  BB 239
   Insn 3679: point = 1987, n_alt = -1
   Insn 3678: point = 1987, n_alt = 0
   Insn 3677: point = 1988, n_alt = 0
   Insn 3676: point = 1990, n_alt = 0
   Insn 3675: point = 1992, n_alt = 0
   Insn 3674: point = 1993, n_alt = 1
   Insn 3673: point = 1993, n_alt = 0
   Insn 3672: point = 1995, n_alt = 0
   Insn 3671: point = 1996, n_alt = 1
   Insn 3670: point = 1997, n_alt = 7
   Insn 3669: point = 1998, n_alt = 7
   Insn 3668: point = 1999, n_alt = 8
   Insn 3667: point = 2000, n_alt = 0
   Insn 3666: point = 2002, n_alt = 2
   Insn 3665: point = 2003, n_alt = 2
   Insn 3664: point = 2005, n_alt = -2
   Insn 3663: point = 2007, n_alt = 2
   Insn 3662: point = 2009, n_alt = 7
   Insn 3661: point = 2010, n_alt = 1
   Insn 3660: point = 2012, n_alt = 7
   Insn 3659: point = 2013, n_alt = 7
  BB 235
   Insn 3627: point = 2015, n_alt = -1
   Insn 3626: point = 2015, n_alt = 1
   Insn 3625: point = 2016, n_alt = 7
  BB 233
   Insn 5640: point = 2018, n_alt = -1
   Insn 3615: point = 2018, n_alt = 8
   Insn 3614: point = 2019, n_alt = 7
  BB 234
   Insn 3622: point = 2021, n_alt = 8
   Insn 3621: point = 2022, n_alt = 2
   Insn 3620: point = 2024, n_alt = 7
  BB 232
   Insn 3609: point = 2026, n_alt = -1
   Insn 3608: point = 2026, n_alt = 1
   Insn 3607: point = 2027, n_alt = 7
   Insn 3606: point = 2028, n_alt = 8
   Insn 3605: point = 2029, n_alt = 1
   Insn 3604: point = 2031, n_alt = 1
   Insn 3603: point = 2033, n_alt = 7
   Insn 3602: point = 2035, n_alt = 4
   Insn 3601: point = 2036, n_alt = 3
   Insn 3600: point = 2038, n_alt = 0
   Insn 3599: point = 2040, n_alt = 0
   Insn 3598: point = 2042, n_alt = 0
   Insn 3597: point = 2043, n_alt = 0
   Insn 3596: point = 2045, n_alt = 0
   Insn 3595: point = 2047, n_alt = 0
   Insn 3594: point = 2048, n_alt = 1
   Insn 3593: point = 2050, n_alt = 7
   Insn 3592: point = 2052, n_alt = 4
   Insn 3591: point = 2053, n_alt = 3
   Insn 3590: point = 2055, n_alt = 0
   Insn 3589: point = 2057, n_alt = 0
   Insn 3588: point = 2059, n_alt = 0
   Insn 3587: point = 2060, n_alt = 0
   Insn 3586: point = 2062, n_alt = 0
   Insn 3585: point = 2064, n_alt = 0
   Insn 3584: point = 2065, n_alt = -2
   Insn 3583: point = 2067, n_alt = 2
   Insn 3582: point = 2069, n_alt = 7
   Insn 3581: point = 2070, n_alt = 8
   Insn 3580: point = 2071, n_alt = 7
   Insn 3579: point = 2073, n_alt = 4
   Insn 3578: point = 2074, n_alt = 3
   Insn 3577: point = 2076, n_alt = 0
   Insn 3576: point = 2078, n_alt = 0
   Insn 3575: point = 2080, n_alt = 0
   Insn 3574: point = 2081, n_alt = 0
   Insn 3573: point = 2083, n_alt = 0
   Insn 3572: point = 2085, n_alt = 0
   Insn 3571: point = 2087, n_alt = 0
   Insn 3570: point = 2088, n_alt = 1
   Insn 3569: point = 2090, n_alt = 0
   Insn 3568: point = 2092, n_alt = 0
   Insn 3567: point = 2093, n_alt = 8
   Insn 3566: point = 2094, n_alt = 1
   Insn 3565: point = 2096, n_alt = 1
   Insn 3564: point = 2098, n_alt = 1
   Insn 3563: point = 2100, n_alt = -2
   Insn 3562: point = 2102, n_alt = 2
   Insn 3561: point = 2104, n_alt = 7
   Insn 3560: point = 2105, n_alt = 7
   Insn 3559: point = 2107, n_alt = 0
   Insn 3558: point = 2109, n_alt = 4
   Insn 3557: point = 2110, n_alt = 3
   Insn 3556: point = 2112, n_alt = 0
   Insn 3555: point = 2114, n_alt = 0
   Insn 3554: point = 2116, n_alt = 0
   Insn 3553: point = 2117, n_alt = 0
   Insn 3552: point = 2119, n_alt = 0
   Insn 3551: point = 2121, n_alt = 0
   Insn 3550: point = 2122, n_alt = 7
   Insn 3549: point = 2124, n_alt = 0
   Insn 3548: point = 2126, n_alt = 4
   Insn 3547: point = 2127, n_alt = 3
   Insn 3546: point = 2129, n_alt = 0
   Insn 3545: point = 2131, n_alt = 0
   Insn 3544: point = 2133, n_alt = 0
   Insn 3543: point = 2134, n_alt = 0
   Insn 3542: point = 2135, n_alt = 7
   Insn 3541: point = 2137, n_alt = 0
   Insn 3540: point = 2139, n_alt = 4
   Insn 3539: point = 2140, n_alt = 3
   Insn 3538: point = 2142, n_alt = 0
   Insn 3537: point = 2144, n_alt = 0
   Insn 3536: point = 2146, n_alt = 0
   Insn 3535: point = 2147, n_alt = 0
   Insn 3534: point = 2149, n_alt = 0
   Insn 3533: point = 2151, n_alt = 0
  BB 231
   Insn 3530: point = 2153, n_alt = 8
   Insn 3529: point = 2154, n_alt = 4
   Insn 3528: point = 2155, n_alt = 7
   Insn 3527: point = 2157, n_alt = 4
   Insn 3526: point = 2158, n_alt = 3
   Insn 3525: point = 2160, n_alt = 0
   Insn 3524: point = 2162, n_alt = 0
   Insn 3523: point = 2164, n_alt = 0
   Insn 3522: point = 2165, n_alt = 0
   Insn 3521: point = 2167, n_alt = 0
   Insn 3520: point = 2169, n_alt = 0
   Insn 3519: point = 2170, n_alt = 3
   Insn 3518: point = 2172, n_alt = 0
   Insn 3517: point = 2174, n_alt = 0
   Insn 3516: point = 2176, n_alt = 0
   Insn 3515: point = 2177, n_alt = 0
   Insn 3514: point = 2179, n_alt = 0
   Insn 3513: point = 2181, n_alt = 0
  BB 230
   Insn 3508: point = 2183, n_alt = -1
   Insn 3507: point = 2183, n_alt = 1
   Insn 3506: point = 2184, n_alt = 7
   Insn 3505: point = 2185, n_alt = 8
   Insn 3504: point = 2186, n_alt = 4
   Insn 3503: point = 2187, n_alt = 1
   Insn 3502: point = 2189, n_alt = 3
   Insn 3501: point = 2191, n_alt = 0
   Insn 3500: point = 2193, n_alt = 0
   Insn 3499: point = 2195, n_alt = 0
   Insn 3498: point = 2196, n_alt = 0
   Insn 3497: point = 2198, n_alt = 0
   Insn 3496: point = 2200, n_alt = 0
   Insn 3495: point = 2201, n_alt = -2
   Insn 3494: point = 2203, n_alt = 2
   Insn 3493: point = 2205, n_alt = 7
   Insn 3492: point = 2206, n_alt = 1
   Insn 3491: point = 2208, n_alt = -2
   Insn 3490: point = 2210, n_alt = 1
   Insn 3489: point = 2212, n_alt = 7
   Insn 3488: point = 2213, n_alt = 7
   Insn 3487: point = 2214, n_alt = 1
   Insn 3486: point = 2216, n_alt = 7
   Insn 3485: point = 2217, n_alt = 7
   Insn 3484: point = 2218, n_alt = 8
   Insn 3483: point = 2219, n_alt = 4
   Insn 3482: point = 2220, n_alt = 1
   Insn 3481: point = 2222, n_alt = 3
   Insn 3480: point = 2224, n_alt = 0
   Insn 3479: point = 2226, n_alt = 0
   Insn 3478: point = 2228, n_alt = 0
   Insn 3477: point = 2229, n_alt = 0
   Insn 3476: point = 2231, n_alt = 0
   Insn 3475: point = 2233, n_alt = 0
   Insn 3474: point = 2234, n_alt = -2
   Insn 3473: point = 2236, n_alt = 1
   Insn 3472: point = 2238, n_alt = 7
   Insn 3471: point = 2239, n_alt = 1
   Insn 3470: point = 2241, n_alt = 7
  BB 229
   Insn 3467: point = 2243, n_alt = 7
  BB 228
   Insn 3465: point = 2245, n_alt = -1
   Insn 3464: point = 2245, n_alt = 0
   Insn 3463: point = 2246, n_alt = 0
   Insn 3462: point = 2248, n_alt = 0
   Insn 3461: point = 2250, n_alt = 0
   Insn 3460: point = 2251, n_alt = 1
   Insn 3459: point = 2251, n_alt = 0
   Insn 3458: point = 2253, n_alt = 0
   Insn 3457: point = 2254, n_alt = 1
   Insn 3456: point = 2255, n_alt = 7
   Insn 3455: point = 2256, n_alt = 7
   Insn 3454: point = 2257, n_alt = 8
   Insn 3453: point = 2258, n_alt = 1
   Insn 5887: point = 2260, n_alt = 7
	   Creating copy r3017<-r3042@1000
   Insn 3452: point = 2262, n_alt = -2
   Insn 3451: point = 2263, n_alt = 0
   Insn 3450: point = 2263, n_alt = -2
   Insn 3449: point = 2264, n_alt = 2
   Insn 3448: point = 2266, n_alt = -2
   Insn 3447: point = 2268, n_alt = 2
   Insn 3446: point = 2270, n_alt = 7
   Insn 3445: point = 2271, n_alt = 7
   Insn 3444: point = 2272, n_alt = 1
   Insn 3443: point = 2274, n_alt = -2
   Insn 3442: point = 2276, n_alt = 2
   Insn 3441: point = 2278, n_alt = 7
   Insn 3440: point = 2279, n_alt = 7
   Insn 3439: point = 2280, n_alt = 1
   Insn 3438: point = 2282, n_alt = 7
   Insn 3437: point = 2283, n_alt = 7
   Insn 5886: point = 2284, n_alt = 8
	   Creating copy r3016->r3042@1000
   Insn 3436: point = 2286, n_alt = 2
   Insn 5885: point = 2286, n_alt = -2
	Hard reg 21 is preferable by r3016 with profit 1000
   Insn 3435: point = 2288, n_alt = 1
   Insn 3434: point = 2290, n_alt = 7
   Insn 3433: point = 2291, n_alt = 7
   Insn 3432: point = 2292, n_alt = 8
   Insn 3431: point = 2293, n_alt = 1
   Insn 3430: point = 2295, n_alt = 7
   Insn 3429: point = 2297, n_alt = 4
   Insn 3428: point = 2298, n_alt = 1
   Insn 3427: point = 2300, n_alt = 7
   Insn 3426: point = 2302, n_alt = 0
   Insn 3425: point = 2304, n_alt = 4
   Insn 3424: point = 2305, n_alt = 3
   Insn 3423: point = 2307, n_alt = 0
   Insn 3422: point = 2309, n_alt = 0
   Insn 3421: point = 2310, n_alt = 7
   Insn 3420: point = 2312, n_alt = 0
   Insn 3419: point = 2314, n_alt = 4
   Insn 3418: point = 2315, n_alt = 3
   Insn 3417: point = 2317, n_alt = 0
   Insn 3416: point = 2319, n_alt = 0
   Insn 3415: point = 2321, n_alt = 0
   Insn 3414: point = 2322, n_alt = 0
   Insn 3413: point = 2324, n_alt = 0
   Insn 3412: point = 2326, n_alt = 0
   Insn 3411: point = 2327, n_alt = 8
   Insn 3410: point = 2328, n_alt = 1
  BB 227
   Insn 3407: point = 2331, n_alt = 7
  BB 226
   Insn 3405: point = 2333, n_alt = -1
   Insn 3404: point = 2333, n_alt = 0
   Insn 3403: point = 2334, n_alt = 0
   Insn 3402: point = 2336, n_alt = 0
   Insn 3401: point = 2338, n_alt = 0
   Insn 3400: point = 2339, n_alt = 1
   Insn 3399: point = 2339, n_alt = 0
   Insn 3398: point = 2341, n_alt = 0
   Insn 3397: point = 2342, n_alt = 1
   Insn 3396: point = 2342, n_alt = 7
   Insn 3395: point = 2343, n_alt = 8
   Insn 3394: point = 2344, n_alt = 1
   Insn 3393: point = 2346, n_alt = 7
   Insn 3392: point = 2347, n_alt = -2
   Insn 3391: point = 2349, n_alt = 2
   Insn 3390: point = 2351, n_alt = 7
   Insn 3389: point = 2352, n_alt = 7
   Insn 3388: point = 2353, n_alt = 8
   Insn 3387: point = 2354, n_alt = 7
   Insn 3386: point = 2356, n_alt = 4
   Insn 3385: point = 2357, n_alt = 3
   Insn 3384: point = 2359, n_alt = 0
   Insn 3383: point = 2361, n_alt = 0
   Insn 3382: point = 2363, n_alt = 0
   Insn 3381: point = 2364, n_alt = 0
   Insn 3380: point = 2366, n_alt = 0
   Insn 3379: point = 2368, n_alt = 0
   Insn 3378: point = 2370, n_alt = 0
   Insn 3377: point = 2371, n_alt = 1
   Insn 3376: point = 2373, n_alt = 0
   Insn 3375: point = 2375, n_alt = 0
   Insn 3374: point = 2376, n_alt = 8
   Insn 3373: point = 2377, n_alt = 7
   Insn 3372: point = 2379, n_alt = 0
   Insn 3371: point = 2381, n_alt = 4
   Insn 3370: point = 2382, n_alt = 3
   Insn 3369: point = 2384, n_alt = 0
   Insn 3368: point = 2386, n_alt = 0
   Insn 3367: point = 2388, n_alt = 0
   Insn 3366: point = 2389, n_alt = 0
   Insn 3365: point = 2391, n_alt = 0
   Insn 3364: point = 2393, n_alt = 0
   Insn 3363: point = 2395, n_alt = 0
   Insn 3362: point = 2396, n_alt = 1
   Insn 3361: point = 2398, n_alt = 0
   Insn 3360: point = 2400, n_alt = 0
   Insn 3359: point = 2401, n_alt = 8
   Insn 3358: point = 2402, n_alt = 7
   Insn 3357: point = 2404, n_alt = 0
   Insn 3356: point = 2406, n_alt = 4
   Insn 3355: point = 2407, n_alt = 3
   Insn 3354: point = 2409, n_alt = 0
   Insn 3353: point = 2411, n_alt = 0
   Insn 3352: point = 2413, n_alt = 0
   Insn 3351: point = 2414, n_alt = 0
   Insn 3350: point = 2416, n_alt = 0
   Insn 3349: point = 2418, n_alt = 0
   Insn 3348: point = 2420, n_alt = 0
   Insn 3347: point = 2421, n_alt = 1
   Insn 3346: point = 2423, n_alt = 0
   Insn 3345: point = 2425, n_alt = 0
   Insn 3344: point = 2426, n_alt = 8
   Insn 3343: point = 2427, n_alt = 1
   Insn 3342: point = 2429, n_alt = 7
   Insn 3341: point = 2431, n_alt = 4
   Insn 3340: point = 2432, n_alt = 3
   Insn 3339: point = 2434, n_alt = 0
   Insn 3338: point = 2436, n_alt = 0
   Insn 3337: point = 2438, n_alt = 0
   Insn 3336: point = 2439, n_alt = 0
   Insn 3335: point = 2441, n_alt = 0
   Insn 3334: point = 2443, n_alt = 0
   Insn 3333: point = 2444, n_alt = 7
   Insn 3332: point = 2446, n_alt = 0
   Insn 3331: point = 2448, n_alt = 4
   Insn 3330: point = 2449, n_alt = 3
   Insn 3329: point = 2451, n_alt = 0
   Insn 3328: point = 2453, n_alt = 0
   Insn 3327: point = 2455, n_alt = 0
   Insn 3326: point = 2456, n_alt = 0
   Insn 3325: point = 2458, n_alt = 0
   Insn 3324: point = 2460, n_alt = 0
   Insn 3323: point = 2462, n_alt = 0
   Insn 3322: point = 2463, n_alt = 1
   Insn 3321: point = 2465, n_alt = 0
   Insn 3320: point = 2467, n_alt = 0
   Insn 3319: point = 2468, n_alt = 1
   Insn 5884: point = 2469, n_alt = -2
	Hard reg 0 is preferable by r3015 with profit 1000
   Insn 3318: point = 2471, n_alt = 0
   Insn 5883: point = 2472, n_alt = -2
	Hard reg 0 is preferable by r3015 with profit 1000
	Hard reg 1 is preferable by r3015 with profit 1000
   Insn 3317: point = 2474, n_alt = 0
   Insn 3316: point = 2475, n_alt = 0
   Insn 3315: point = 2477, n_alt = 0
   Insn 3314: point = 2479, n_alt = 4
   Insn 3313: point = 2480, n_alt = 3
   Insn 3312: point = 2482, n_alt = 0
   Insn 3311: point = 2484, n_alt = 0
   Insn 3310: point = 2486, n_alt = 0
   Insn 3309: point = 2487, n_alt = 0
   Insn 3308: point = 2489, n_alt = 0
   Insn 3307: point = 2491, n_alt = 0
  BB 224
   Insn 3299: point = 2493, n_alt = 1
  BB 222
   Insn 3291: point = 2494, n_alt = 1
   Insn 3290: point = 2495, n_alt = 0
   Insn 3289: point = 2496, n_alt = 0
  BB 214
   Insn 3243: point = 2497, n_alt = -1
   Insn 3242: point = 2497, n_alt = 0
   Insn 3241: point = 2498, n_alt = 0
   Insn 3240: point = 2499, n_alt = 8
   Insn 3239: point = 2500, n_alt = 7
   Insn 3238: point = 2501, n_alt = 8
   Insn 3237: point = 2502, n_alt = 7
   Insn 3236: point = 2503, n_alt = 8
   Insn 3235: point = 2504, n_alt = 7
   Insn 3234: point = 2505, n_alt = 1
   Insn 3233: point = 2506, n_alt = 0
   Insn 3232: point = 2508, n_alt = 0
   Insn 3231: point = 2510, n_alt = 0
   Insn 3230: point = 2512, n_alt = 0
   Insn 3229: point = 2514, n_alt = 0
   Insn 3228: point = 2516, n_alt = 0
   Insn 3227: point = 2517, n_alt = -2
   Insn 3226: point = 2519, n_alt = -2
   Insn 3225: point = 2521, n_alt = 0
   Insn 3224: point = 2523, n_alt = 0
   Insn 3223: point = 2524, n_alt = -2
   Insn 3222: point = 2526, n_alt = 0
   Insn 3221: point = 2528, n_alt = -2
   Insn 3220: point = 2529, n_alt = 1
   Insn 3219: point = 2531, n_alt = 0
  BB 213
   Insn 3217: point = 2532, n_alt = -1
   Insn 3216: point = 2532, n_alt = 0
   Insn 3215: point = 2533, n_alt = 0
   Insn 3214: point = 2535, n_alt = 0
   Insn 3213: point = 2537, n_alt = 0
   Insn 3212: point = 2539, n_alt = 0
   Insn 3211: point = 2541, n_alt = 0
   Insn 3210: point = 2543, n_alt = 0
   Insn 3209: point = 2544, n_alt = -2
   Insn 3208: point = 2546, n_alt = -2
   Insn 3207: point = 2548, n_alt = 0
   Insn 3206: point = 2550, n_alt = 0
   Insn 3205: point = 2551, n_alt = -2
   Insn 3204: point = 2553, n_alt = 0
   Insn 3203: point = 2555, n_alt = -2
   Insn 3202: point = 2556, n_alt = 1
   Insn 3201: point = 2558, n_alt = 0
  BB 212
   Insn 3199: point = 2559, n_alt = -1
   Insn 3198: point = 2559, n_alt = 0
   Insn 3197: point = 2560, n_alt = 0
  BB 211
   Insn 3194: point = 2561, n_alt = 0
   Insn 3193: point = 2561, n_alt = 3
   Insn 3192: point = 2561, n_alt = 2
   Insn 3191: point = 2561, n_alt = 2
   Insn 3190: point = 2561, n_alt = -2
   Insn 3189: point = 2562, n_alt = -2
   Insn 3188: point = 2563, n_alt = -2
   Insn 3187: point = 2564, n_alt = -2
   Insn 3186: point = 2565, n_alt = 3
   Insn 3185: point = 2566, n_alt = 3
   Insn 3184: point = 2567, n_alt = 3
   Insn 3183: point = 2568, n_alt = 3
  BB 210
   Insn 3180: point = 2569, n_alt = 1
  BB 209
   Insn 3178: point = 2569, n_alt = -1
   Insn 3177: point = 2569, n_alt = 0
   Insn 3176: point = 2570, n_alt = 0
   Insn 3175: point = 2571, n_alt = 1
   Insn 3174: point = 2572, n_alt = 0
   Insn 3173: point = 2573, n_alt = 0
   Insn 3172: point = 2574, n_alt = 1
   Insn 5882: point = 2575, n_alt = -2
	Hard reg 1 is preferable by r3014 with profit 1000
   Insn 3171: point = 2577, n_alt = 0
   Insn 5881: point = 2578, n_alt = -2
	Hard reg 1 is preferable by r3014 with profit 2000
   Insn 3170: point = 2580, n_alt = 2
   Insn 3169: point = 2581, n_alt = 2
   Insn 3168: point = 2582, n_alt = 2
   Insn 3167: point = 2583, n_alt = 0
   Insn 3166: point = 2583, n_alt = 0
   Insn 3165: point = 2583, n_alt = 3
   Insn 3164: point = 2583, n_alt = 2
   Insn 3163: point = 2583, n_alt = 2
   Insn 3162: point = 2583, n_alt = 4
   Insn 3161: point = 2583, n_alt = 4
   Insn 3160: point = 2583, n_alt = -2
   Insn 3159: point = 2584, n_alt = -2
   Insn 3158: point = 2585, n_alt = 0
   Insn 3157: point = 2585, n_alt = 0
   Insn 3156: point = 2585, n_alt = 3
   Insn 3155: point = 2586, n_alt = 3
  BB 383
   Insn 5757: point = 2587, n_alt = -1
  BB 204
   Insn 3105: point = 2587, n_alt = -1
   Insn 3104: point = 2587, n_alt = 0
   Insn 3103: point = 2588, n_alt = 0
   Insn 3102: point = 2590, n_alt = 0
   Insn 3101: point = 2591, n_alt = 0
  BB 208
   Insn 5631: point = 2592, n_alt = -1
   Insn 3149: point = 2592, n_alt = 1
  BB 384
   Insn 5760: point = 2593, n_alt = -1
  BB 206
   Insn 3113: point = 2594, n_alt = -1
   Insn 3112: point = 2594, n_alt = 0
   Insn 3111: point = 2595, n_alt = 0
   Insn 3110: point = 2597, n_alt = 0
   Insn 3109: point = 2598, n_alt = 0
  BB 207
   Insn 5629: point = 2599, n_alt = -1
   Insn 3143: point = 2599, n_alt = 1
   Insn 3142: point = 2599, n_alt = 8
   Insn 3141: point = 2600, n_alt = 4
   Insn 3140: point = 2601, n_alt = 1
   Insn 3139: point = 2603, n_alt = 3
   Insn 3138: point = 2605, n_alt = 0
   Insn 3137: point = 2607, n_alt = 1
   Insn 3136: point = 2609, n_alt = 0
   Insn 3135: point = 2610, n_alt = 0
   Insn 3134: point = 2612, n_alt = 1
   Insn 3133: point = 2614, n_alt = 0
   Insn 3132: point = 2615, n_alt = 7
   Insn 3131: point = 2617, n_alt = 4
   Insn 3130: point = 2618, n_alt = 3
   Insn 3129: point = 2620, n_alt = 0
   Insn 3128: point = 2622, n_alt = 1
   Insn 3127: point = 2624, n_alt = 0
   Insn 3126: point = 2625, n_alt = 0
   Insn 3125: point = 2627, n_alt = 1
   Insn 3124: point = 2629, n_alt = 0
   Insn 3123: point = 2630, n_alt = 7
   Insn 3122: point = 2632, n_alt = 4
   Insn 3121: point = 2633, n_alt = 3
   Insn 3120: point = 2635, n_alt = 0
   Insn 3119: point = 2637, n_alt = 1
   Insn 3118: point = 2639, n_alt = 0
   Insn 3117: point = 2640, n_alt = 0
   Insn 3116: point = 2642, n_alt = 1
   Insn 3115: point = 2644, n_alt = 0
  BB 205
   Insn 3107: point = 2646, n_alt = 1
  BB 203
   Insn 3099: point = 2647, n_alt = 1
   Insn 3098: point = 2648, n_alt = 0
   Insn 3097: point = 2649, n_alt = 0
   Insn 3096: point = 2650, n_alt = 0
   Insn 3095: point = 2650, n_alt = 3
   Insn 3094: point = 2650, n_alt = 4
   Insn 3093: point = 2650, n_alt = -2
   Insn 3092: point = 2651, n_alt = -2
   Insn 3091: point = 2652, n_alt = 4
   Insn 3090: point = 2652, n_alt = 4
   Insn 3089: point = 2652, n_alt = 3
   Insn 3088: point = 2653, n_alt = 3
   Insn 3087: point = 2654, n_alt = 0
   Insn 3086: point = 2654, n_alt = 3
   Insn 3085: point = 2654, n_alt = 4
   Insn 3084: point = 2654, n_alt = -2
   Insn 3083: point = 2655, n_alt = -2
   Insn 3082: point = 2656, n_alt = 4
   Insn 3081: point = 2656, n_alt = 4
   Insn 3080: point = 2656, n_alt = 3
   Insn 3079: point = 2657, n_alt = 3
   Insn 3078: point = 2658, n_alt = 1
   Insn 3077: point = 2659, n_alt = 0
   Insn 3076: point = 2661, n_alt = 0
   Insn 3075: point = 2663, n_alt = 0
   Insn 3074: point = 2665, n_alt = 0
   Insn 3073: point = 2667, n_alt = 0
   Insn 3072: point = 2669, n_alt = 0
   Insn 3071: point = 2670, n_alt = -2
   Insn 3070: point = 2672, n_alt = -2
   Insn 3069: point = 2674, n_alt = 0
   Insn 3068: point = 2676, n_alt = 0
   Insn 3067: point = 2677, n_alt = -2
   Insn 3066: point = 2679, n_alt = 0
   Insn 3065: point = 2681, n_alt = -2
   Insn 3064: point = 2682, n_alt = 1
   Insn 3063: point = 2684, n_alt = 0
  BB 202
   Insn 3061: point = 2685, n_alt = -1
   Insn 3060: point = 2685, n_alt = 0
   Insn 3059: point = 2686, n_alt = 0
   Insn 3058: point = 2688, n_alt = 0
   Insn 3057: point = 2690, n_alt = 0
   Insn 3056: point = 2692, n_alt = 0
   Insn 3055: point = 2694, n_alt = 0
   Insn 3054: point = 2696, n_alt = 0
   Insn 3053: point = 2697, n_alt = -2
   Insn 3052: point = 2699, n_alt = -2
   Insn 3051: point = 2701, n_alt = 0
   Insn 3050: point = 2703, n_alt = 0
   Insn 3049: point = 2704, n_alt = -2
   Insn 3048: point = 2706, n_alt = 0
   Insn 3047: point = 2708, n_alt = -2
   Insn 3046: point = 2709, n_alt = 1
   Insn 3045: point = 2711, n_alt = 0
  BB 201
   Insn 3043: point = 2712, n_alt = -1
   Insn 3042: point = 2712, n_alt = 0
   Insn 3041: point = 2713, n_alt = 0
  BB 200
   Insn 3038: point = 2714, n_alt = 0
   Insn 3037: point = 2714, n_alt = 3
   Insn 3036: point = 2714, n_alt = 2
   Insn 3035: point = 2714, n_alt = 2
   Insn 3034: point = 2714, n_alt = -2
   Insn 3033: point = 2715, n_alt = -2
   Insn 3032: point = 2716, n_alt = -2
   Insn 3031: point = 2717, n_alt = -2
   Insn 3030: point = 2718, n_alt = 3
   Insn 3029: point = 2719, n_alt = 3
   Insn 3028: point = 2720, n_alt = 3
   Insn 3027: point = 2721, n_alt = 3
  BB 199
   Insn 3024: point = 2722, n_alt = 1
  BB 198
   Insn 3022: point = 2722, n_alt = -1
   Insn 3021: point = 2722, n_alt = 0
   Insn 3020: point = 2723, n_alt = 0
   Insn 3019: point = 2724, n_alt = 1
   Insn 3018: point = 2725, n_alt = 0
   Insn 3017: point = 2726, n_alt = 0
   Insn 3016: point = 2727, n_alt = 1
   Insn 5880: point = 2728, n_alt = -2
	Hard reg 1 is preferable by r3013 with profit 1000
   Insn 3015: point = 2730, n_alt = 0
   Insn 5879: point = 2731, n_alt = -2
	Hard reg 1 is preferable by r3013 with profit 2000
   Insn 3014: point = 2733, n_alt = 2
   Insn 3013: point = 2734, n_alt = 2
   Insn 3012: point = 2735, n_alt = 2
   Insn 3011: point = 2736, n_alt = 0
   Insn 3010: point = 2736, n_alt = 0
   Insn 3009: point = 2736, n_alt = 3
   Insn 3008: point = 2736, n_alt = 2
   Insn 3007: point = 2736, n_alt = 2
   Insn 3006: point = 2736, n_alt = 4
   Insn 3005: point = 2736, n_alt = 4
   Insn 3004: point = 2736, n_alt = -2
   Insn 3003: point = 2737, n_alt = -2
   Insn 3002: point = 2738, n_alt = 0
   Insn 3001: point = 2738, n_alt = 0
   Insn 3000: point = 2738, n_alt = 3
   Insn 2999: point = 2739, n_alt = 3
  BB 381
   Insn 5751: point = 2740, n_alt = -1
  BB 193
   Insn 2946: point = 2740, n_alt = -1
   Insn 2945: point = 2740, n_alt = 0
   Insn 2944: point = 2741, n_alt = 0
   Insn 2943: point = 2743, n_alt = 0
   Insn 2942: point = 2744, n_alt = 0
  BB 197
   Insn 5627: point = 2745, n_alt = -1
   Insn 2993: point = 2745, n_alt = 1
  BB 382
   Insn 5754: point = 2746, n_alt = -1
  BB 195
   Insn 2954: point = 2747, n_alt = -1
   Insn 2953: point = 2747, n_alt = 0
   Insn 2952: point = 2748, n_alt = 0
   Insn 2951: point = 2750, n_alt = 0
   Insn 2950: point = 2751, n_alt = 0
  BB 196
   Insn 5625: point = 2752, n_alt = -1
   Insn 2987: point = 2752, n_alt = 1
   Insn 2986: point = 2752, n_alt = 8
   Insn 2985: point = 2753, n_alt = 4
   Insn 2984: point = 2754, n_alt = 1
   Insn 2983: point = 2756, n_alt = 3
   Insn 2982: point = 2758, n_alt = 0
   Insn 2981: point = 2760, n_alt = 1
   Insn 2980: point = 2762, n_alt = 0
   Insn 2979: point = 2763, n_alt = 0
   Insn 2978: point = 2765, n_alt = 1
   Insn 2977: point = 2767, n_alt = 0
   Insn 2976: point = 2768, n_alt = -2
   Insn 2975: point = 2770, n_alt = 2
   Insn 2974: point = 2772, n_alt = 7
   Insn 2973: point = 2773, n_alt = 7
   Insn 2972: point = 2775, n_alt = 4
   Insn 2971: point = 2776, n_alt = 3
   Insn 2970: point = 2778, n_alt = 0
   Insn 2969: point = 2780, n_alt = 1
   Insn 2968: point = 2782, n_alt = 0
   Insn 2967: point = 2783, n_alt = 0
   Insn 2966: point = 2785, n_alt = 1
   Insn 2965: point = 2787, n_alt = 0
   Insn 2964: point = 2788, n_alt = 7
   Insn 2963: point = 2790, n_alt = 4
   Insn 2962: point = 2791, n_alt = 3
   Insn 2961: point = 2793, n_alt = 0
   Insn 2960: point = 2795, n_alt = 1
   Insn 2959: point = 2797, n_alt = 0
   Insn 2958: point = 2798, n_alt = 0
   Insn 2957: point = 2800, n_alt = 1
   Insn 2956: point = 2802, n_alt = 0
  BB 194
   Insn 2948: point = 2804, n_alt = 1
  BB 192
   Insn 2940: point = 2805, n_alt = 1
   Insn 2939: point = 2806, n_alt = 0
   Insn 2938: point = 2807, n_alt = 0
   Insn 2937: point = 2808, n_alt = 0
   Insn 2936: point = 2808, n_alt = 3
   Insn 2935: point = 2808, n_alt = 4
   Insn 2934: point = 2808, n_alt = -2
   Insn 2933: point = 2809, n_alt = -2
   Insn 2932: point = 2810, n_alt = 4
   Insn 2931: point = 2810, n_alt = 4
   Insn 2930: point = 2810, n_alt = 3
   Insn 2929: point = 2811, n_alt = 3
   Insn 2928: point = 2812, n_alt = 0
   Insn 2927: point = 2812, n_alt = 3
   Insn 2926: point = 2812, n_alt = 4
   Insn 2925: point = 2812, n_alt = -2
   Insn 2924: point = 2813, n_alt = -2
   Insn 2923: point = 2814, n_alt = 4
   Insn 2922: point = 2814, n_alt = 4
   Insn 2921: point = 2814, n_alt = 3
   Insn 2920: point = 2815, n_alt = 3
   Insn 2919: point = 2816, n_alt = 1
   Insn 2918: point = 2817, n_alt = 0
   Insn 2917: point = 2819, n_alt = 0
   Insn 2916: point = 2821, n_alt = 0
   Insn 2915: point = 2823, n_alt = 0
   Insn 2914: point = 2825, n_alt = 0
   Insn 2913: point = 2827, n_alt = 0
   Insn 2912: point = 2828, n_alt = -2
   Insn 2911: point = 2830, n_alt = -2
   Insn 2910: point = 2832, n_alt = 0
   Insn 2909: point = 2834, n_alt = 0
   Insn 2908: point = 2835, n_alt = -2
   Insn 2907: point = 2837, n_alt = 0
   Insn 2906: point = 2839, n_alt = -2
   Insn 2905: point = 2840, n_alt = 1
   Insn 2904: point = 2842, n_alt = 0
  BB 379
   Insn 5745: point = 2843, n_alt = -1
  BB 184
   Insn 2827: point = 2843, n_alt = -1
   Insn 2826: point = 2843, n_alt = 0
   Insn 2825: point = 2844, n_alt = 0
   Insn 2824: point = 2846, n_alt = 0
   Insn 2823: point = 2847, n_alt = 0
  BB 191
   Insn 5623: point = 2848, n_alt = -1
   Insn 2898: point = 2848, n_alt = 1
  BB 380
   Insn 5748: point = 2849, n_alt = -1
  BB 186
   Insn 2835: point = 2850, n_alt = -1
   Insn 2834: point = 2850, n_alt = 0
   Insn 2833: point = 2851, n_alt = 0
   Insn 2832: point = 2853, n_alt = 0
   Insn 2831: point = 2854, n_alt = 0
  BB 190
   Insn 5621: point = 2855, n_alt = -1
   Insn 2892: point = 2855, n_alt = 1
  BB 189
   Insn 2889: point = 2856, n_alt = 8
   Insn 2888: point = 2857, n_alt = 7
   Insn 2887: point = 2858, n_alt = 4
   Insn 2886: point = 2859, n_alt = 3
   Insn 2885: point = 2861, n_alt = 0
   Insn 2884: point = 2863, n_alt = 1
   Insn 2883: point = 2865, n_alt = 0
   Insn 2882: point = 2866, n_alt = 0
   Insn 2881: point = 2868, n_alt = 0
   Insn 2880: point = 2870, n_alt = 1
   Insn 2879: point = 2872, n_alt = 0
   Insn 2878: point = 2873, n_alt = 1
   Insn 2877: point = 2875, n_alt = 1
   Insn 2876: point = 2877, n_alt = 0
  BB 188
   Insn 2871: point = 2879, n_alt = -1
   Insn 2870: point = 2879, n_alt = 1
   Insn 2869: point = 2880, n_alt = 7
   Insn 2868: point = 2882, n_alt = 4
   Insn 2867: point = 2883, n_alt = 3
   Insn 2866: point = 2885, n_alt = 0
   Insn 2865: point = 2887, n_alt = 1
   Insn 2864: point = 2889, n_alt = 0
   Insn 2863: point = 2890, n_alt = 0
   Insn 2862: point = 2892, n_alt = 0
   Insn 2861: point = 2894, n_alt = 1
   Insn 2860: point = 2896, n_alt = 0
   Insn 2859: point = 2897, n_alt = 1
   Insn 2858: point = 2899, n_alt = 1
   Insn 2857: point = 2901, n_alt = 0
  BB 187
   Insn 2852: point = 2903, n_alt = -1
   Insn 2851: point = 2903, n_alt = 1
   Insn 2850: point = 2904, n_alt = 7
   Insn 2849: point = 2905, n_alt = 7
   Insn 2848: point = 2907, n_alt = 4
   Insn 2847: point = 2908, n_alt = 3
   Insn 2846: point = 2910, n_alt = 0
   Insn 2845: point = 2912, n_alt = 1
   Insn 2844: point = 2914, n_alt = 0
   Insn 2843: point = 2915, n_alt = 0
   Insn 2842: point = 2917, n_alt = 0
   Insn 2841: point = 2919, n_alt = 1
   Insn 2840: point = 2921, n_alt = 0
   Insn 2839: point = 2922, n_alt = 1
   Insn 2838: point = 2924, n_alt = 1
   Insn 2837: point = 2926, n_alt = 0
  BB 185
   Insn 2829: point = 2928, n_alt = 1
  BB 183
   Insn 2821: point = 2929, n_alt = 1
   Insn 2820: point = 2930, n_alt = 0
   Insn 2819: point = 2931, n_alt = 0
  BB 182
   Insn 2817: point = 2932, n_alt = -1
   Insn 2816: point = 2932, n_alt = 0
   Insn 2815: point = 2933, n_alt = 0
   Insn 2814: point = 2935, n_alt = 0
   Insn 2813: point = 2937, n_alt = 0
   Insn 2812: point = 2939, n_alt = 0
   Insn 2811: point = 2941, n_alt = 0
   Insn 2810: point = 2943, n_alt = 0
   Insn 2809: point = 2944, n_alt = -2
   Insn 2808: point = 2946, n_alt = -2
   Insn 2807: point = 2948, n_alt = 0
   Insn 2806: point = 2950, n_alt = 0
   Insn 2805: point = 2951, n_alt = -2
   Insn 2804: point = 2953, n_alt = 0
   Insn 2803: point = 2955, n_alt = -2
   Insn 2802: point = 2956, n_alt = 1
   Insn 2801: point = 2958, n_alt = 0
  BB 181
   Insn 2799: point = 2959, n_alt = -1
   Insn 2798: point = 2959, n_alt = 0
   Insn 2797: point = 2960, n_alt = 0
  BB 180
   Insn 2794: point = 2961, n_alt = 0
   Insn 2793: point = 2961, n_alt = 3
   Insn 2792: point = 2961, n_alt = 2
   Insn 2791: point = 2961, n_alt = 2
   Insn 2790: point = 2961, n_alt = -2
   Insn 2789: point = 2962, n_alt = -2
   Insn 2788: point = 2963, n_alt = -2
   Insn 2787: point = 2964, n_alt = -2
   Insn 2786: point = 2965, n_alt = 3
   Insn 2785: point = 2966, n_alt = 3
   Insn 2784: point = 2967, n_alt = 3
   Insn 2783: point = 2968, n_alt = 3
  BB 179
   Insn 2780: point = 2969, n_alt = 1
  BB 178
   Insn 2778: point = 2969, n_alt = -1
   Insn 2777: point = 2969, n_alt = 0
   Insn 2776: point = 2970, n_alt = 0
   Insn 2775: point = 2971, n_alt = 1
   Insn 2774: point = 2972, n_alt = 0
   Insn 2773: point = 2973, n_alt = 0
   Insn 2772: point = 2974, n_alt = 1
   Insn 5878: point = 2975, n_alt = -2
	Hard reg 1 is preferable by r3012 with profit 1000
   Insn 2771: point = 2977, n_alt = 0
   Insn 5877: point = 2978, n_alt = -2
	Hard reg 1 is preferable by r3012 with profit 2000
   Insn 2770: point = 2980, n_alt = 2
   Insn 2769: point = 2981, n_alt = 2
   Insn 2768: point = 2982, n_alt = 2
   Insn 2767: point = 2983, n_alt = 0
   Insn 2766: point = 2983, n_alt = 0
   Insn 2765: point = 2983, n_alt = 3
   Insn 2764: point = 2983, n_alt = 2
   Insn 2763: point = 2983, n_alt = 2
   Insn 2762: point = 2983, n_alt = 4
   Insn 2761: point = 2983, n_alt = 4
   Insn 2760: point = 2983, n_alt = -2
   Insn 2759: point = 2984, n_alt = -2
   Insn 2758: point = 2985, n_alt = 0
   Insn 2757: point = 2985, n_alt = 0
   Insn 2756: point = 2985, n_alt = 3
   Insn 2755: point = 2986, n_alt = 3
   Insn 2754: point = 2987, n_alt = 0
   Insn 2753: point = 2987, n_alt = 3
   Insn 2752: point = 2987, n_alt = 4
   Insn 2751: point = 2987, n_alt = -2
   Insn 2750: point = 2988, n_alt = -2
   Insn 2749: point = 2989, n_alt = 4
   Insn 2748: point = 2989, n_alt = 4
   Insn 2747: point = 2989, n_alt = 3
   Insn 2746: point = 2990, n_alt = 3
   Insn 2745: point = 2991, n_alt = 1
   Insn 2744: point = 2992, n_alt = 0
   Insn 2743: point = 2994, n_alt = 0
   Insn 2742: point = 2996, n_alt = 0
   Insn 2741: point = 2998, n_alt = 0
   Insn 2740: point = 3000, n_alt = 0
   Insn 2739: point = 3002, n_alt = 0
   Insn 2738: point = 3003, n_alt = -2
   Insn 2737: point = 3005, n_alt = -2
   Insn 2736: point = 3007, n_alt = 0
   Insn 2735: point = 3009, n_alt = 0
   Insn 2734: point = 3010, n_alt = -2
   Insn 2733: point = 3012, n_alt = 0
   Insn 2732: point = 3014, n_alt = -2
   Insn 2731: point = 3015, n_alt = 1
   Insn 2730: point = 3017, n_alt = 0
  BB 177
   Insn 2728: point = 3018, n_alt = -1
   Insn 2727: point = 3018, n_alt = 0
   Insn 2726: point = 3019, n_alt = 0
   Insn 2725: point = 3021, n_alt = 0
   Insn 2724: point = 3023, n_alt = 0
   Insn 2723: point = 3025, n_alt = 0
   Insn 2722: point = 3027, n_alt = 0
   Insn 2721: point = 3029, n_alt = 0
   Insn 2720: point = 3030, n_alt = -2
   Insn 2719: point = 3032, n_alt = -2
   Insn 2718: point = 3034, n_alt = 0
   Insn 2717: point = 3036, n_alt = 0
   Insn 2716: point = 3037, n_alt = -2
   Insn 2715: point = 3039, n_alt = 0
   Insn 2714: point = 3041, n_alt = -2
   Insn 2713: point = 3042, n_alt = 1
   Insn 2712: point = 3044, n_alt = 0
  BB 176
   Insn 2710: point = 3045, n_alt = -1
   Insn 2709: point = 3045, n_alt = 0
   Insn 2708: point = 3046, n_alt = 0
  BB 175
   Insn 2705: point = 3047, n_alt = 0
   Insn 2704: point = 3047, n_alt = 3
   Insn 2703: point = 3047, n_alt = 2
   Insn 2702: point = 3047, n_alt = 2
   Insn 2701: point = 3047, n_alt = -2
   Insn 2700: point = 3048, n_alt = -2
   Insn 2699: point = 3049, n_alt = -2
   Insn 2698: point = 3050, n_alt = -2
   Insn 2697: point = 3051, n_alt = 3
   Insn 2696: point = 3052, n_alt = 3
   Insn 2695: point = 3053, n_alt = 3
   Insn 2694: point = 3054, n_alt = 3
  BB 174
   Insn 2691: point = 3055, n_alt = 1
  BB 173
   Insn 2689: point = 3055, n_alt = -1
   Insn 2688: point = 3055, n_alt = 0
   Insn 2687: point = 3056, n_alt = 0
   Insn 2686: point = 3057, n_alt = 1
   Insn 2685: point = 3058, n_alt = 0
   Insn 2684: point = 3059, n_alt = 0
   Insn 2683: point = 3060, n_alt = 1
   Insn 5876: point = 3061, n_alt = -2
	Hard reg 1 is preferable by r3011 with profit 1000
   Insn 2682: point = 3063, n_alt = 0
   Insn 5875: point = 3064, n_alt = -2
	Hard reg 1 is preferable by r3011 with profit 2000
   Insn 2681: point = 3066, n_alt = 2
   Insn 2680: point = 3067, n_alt = 2
   Insn 2679: point = 3068, n_alt = 2
   Insn 2678: point = 3069, n_alt = 0
   Insn 2677: point = 3069, n_alt = 0
   Insn 2676: point = 3069, n_alt = 3
   Insn 2675: point = 3069, n_alt = 2
   Insn 2674: point = 3069, n_alt = 2
   Insn 2673: point = 3069, n_alt = 4
   Insn 2672: point = 3069, n_alt = 4
   Insn 2671: point = 3069, n_alt = -2
   Insn 2670: point = 3070, n_alt = -2
   Insn 2669: point = 3071, n_alt = 0
   Insn 2668: point = 3071, n_alt = 0
   Insn 2667: point = 3071, n_alt = 3
   Insn 2666: point = 3072, n_alt = 3
   Insn 2665: point = 3073, n_alt = 0
   Insn 2664: point = 3073, n_alt = 3
   Insn 2663: point = 3073, n_alt = 4
   Insn 2662: point = 3073, n_alt = 4
   Insn 2661: point = 3073, n_alt = 0
   Insn 2660: point = 3073, n_alt = 3
   Insn 2659: point = 3073, n_alt = 4
   Insn 2658: point = 3073, n_alt = -2
   Insn 2657: point = 3074, n_alt = -2
   Insn 2656: point = 3075, n_alt = 4
   Insn 2655: point = 3075, n_alt = 4
   Insn 2654: point = 3075, n_alt = 3
   Insn 2653: point = 3076, n_alt = 3
   Insn 2652: point = 3077, n_alt = 1
   Insn 2651: point = 3078, n_alt = 0
   Insn 2650: point = 3080, n_alt = 0
   Insn 2649: point = 3082, n_alt = 0
   Insn 2648: point = 3084, n_alt = 0
   Insn 2647: point = 3086, n_alt = 0
   Insn 2646: point = 3088, n_alt = 0
   Insn 2645: point = 3089, n_alt = -2
   Insn 2644: point = 3091, n_alt = -2
   Insn 2643: point = 3093, n_alt = 0
   Insn 2642: point = 3095, n_alt = 0
   Insn 2641: point = 3096, n_alt = -2
   Insn 2640: point = 3098, n_alt = 0
   Insn 2639: point = 3100, n_alt = -2
   Insn 2638: point = 3101, n_alt = 1
   Insn 2637: point = 3103, n_alt = 0
  BB 172
   Insn 2635: point = 3104, n_alt = -1
   Insn 2634: point = 3104, n_alt = 0
   Insn 2633: point = 3105, n_alt = 0
   Insn 2632: point = 3107, n_alt = 0
   Insn 2631: point = 3109, n_alt = 0
   Insn 2630: point = 3111, n_alt = 0
   Insn 2629: point = 3113, n_alt = 0
   Insn 2628: point = 3115, n_alt = 0
   Insn 2627: point = 3116, n_alt = -2
   Insn 2626: point = 3118, n_alt = -2
   Insn 2625: point = 3120, n_alt = 0
   Insn 2624: point = 3122, n_alt = 0
   Insn 2623: point = 3123, n_alt = -2
   Insn 2622: point = 3125, n_alt = 0
   Insn 2621: point = 3127, n_alt = -2
   Insn 2620: point = 3128, n_alt = 1
   Insn 2619: point = 3130, n_alt = 0
  BB 171
   Insn 2617: point = 3131, n_alt = -1
   Insn 2616: point = 3131, n_alt = 0
   Insn 2615: point = 3132, n_alt = 0
  BB 170
   Insn 2612: point = 3133, n_alt = 0
   Insn 2611: point = 3133, n_alt = 3
   Insn 2610: point = 3133, n_alt = 2
   Insn 2609: point = 3133, n_alt = 2
   Insn 2608: point = 3133, n_alt = -2
   Insn 2607: point = 3134, n_alt = -2
   Insn 2606: point = 3135, n_alt = -2
   Insn 2605: point = 3136, n_alt = -2
   Insn 2604: point = 3137, n_alt = 3
   Insn 2603: point = 3138, n_alt = 3
   Insn 2602: point = 3139, n_alt = 3
   Insn 2601: point = 3140, n_alt = 3
  BB 169
   Insn 2598: point = 3141, n_alt = 1
  BB 168
   Insn 2596: point = 3141, n_alt = -1
   Insn 2595: point = 3141, n_alt = 0
   Insn 2594: point = 3142, n_alt = 0
   Insn 2593: point = 3143, n_alt = 1
   Insn 2592: point = 3144, n_alt = 0
   Insn 2591: point = 3145, n_alt = 0
   Insn 2590: point = 3146, n_alt = 1
   Insn 5874: point = 3147, n_alt = -2
	Hard reg 1 is preferable by r3010 with profit 1000
   Insn 2589: point = 3149, n_alt = 0
   Insn 5873: point = 3150, n_alt = -2
	Hard reg 1 is preferable by r3010 with profit 2000
   Insn 2588: point = 3152, n_alt = 2
   Insn 2587: point = 3153, n_alt = 2
   Insn 2586: point = 3154, n_alt = 2
   Insn 2585: point = 3155, n_alt = 0
   Insn 2584: point = 3155, n_alt = 0
   Insn 2583: point = 3155, n_alt = 3
   Insn 2582: point = 3155, n_alt = 2
   Insn 2581: point = 3155, n_alt = 2
   Insn 2580: point = 3155, n_alt = 4
   Insn 2579: point = 3155, n_alt = 4
   Insn 2578: point = 3155, n_alt = -2
   Insn 2577: point = 3156, n_alt = -2
   Insn 2576: point = 3157, n_alt = 0
   Insn 2575: point = 3157, n_alt = 0
   Insn 2574: point = 3157, n_alt = 3
   Insn 2573: point = 3158, n_alt = 3
   Insn 2572: point = 3159, n_alt = 0
   Insn 2571: point = 3159, n_alt = 3
   Insn 2570: point = 3159, n_alt = 4
   Insn 2569: point = 3159, n_alt = 4
   Insn 2568: point = 3159, n_alt = 4
   Insn 2567: point = 3159, n_alt = 0
   Insn 2566: point = 3159, n_alt = 3
   Insn 2565: point = 3159, n_alt = 4
   Insn 2564: point = 3159, n_alt = -2
   Insn 2563: point = 3160, n_alt = -2
   Insn 2562: point = 3161, n_alt = 4
   Insn 2561: point = 3161, n_alt = 4
   Insn 2560: point = 3161, n_alt = 3
   Insn 2559: point = 3162, n_alt = 3
   Insn 2558: point = 3163, n_alt = 0
   Insn 2557: point = 3163, n_alt = 3
   Insn 2556: point = 3163, n_alt = 4
   Insn 2555: point = 3163, n_alt = -2
   Insn 2554: point = 3164, n_alt = -2
   Insn 2553: point = 3165, n_alt = 4
   Insn 2552: point = 3165, n_alt = 4
   Insn 2551: point = 3165, n_alt = 3
   Insn 2550: point = 3166, n_alt = 3
   Insn 2549: point = 3167, n_alt = 1
   Insn 2548: point = 3168, n_alt = 0
   Insn 2547: point = 3170, n_alt = 0
   Insn 2546: point = 3172, n_alt = 0
   Insn 2545: point = 3174, n_alt = 0
   Insn 2544: point = 3176, n_alt = 0
   Insn 2543: point = 3178, n_alt = 0
   Insn 2542: point = 3179, n_alt = -2
   Insn 2541: point = 3181, n_alt = -2
   Insn 2540: point = 3183, n_alt = 0
   Insn 2539: point = 3185, n_alt = 0
   Insn 2538: point = 3186, n_alt = -2
   Insn 2537: point = 3188, n_alt = 0
   Insn 2536: point = 3190, n_alt = -2
   Insn 2535: point = 3191, n_alt = 1
   Insn 2534: point = 3193, n_alt = 0
  BB 167
   Insn 2532: point = 3194, n_alt = -1
   Insn 2531: point = 3194, n_alt = 0
   Insn 2530: point = 3195, n_alt = 0
   Insn 2529: point = 3197, n_alt = 0
   Insn 2528: point = 3199, n_alt = 0
   Insn 2527: point = 3201, n_alt = 0
   Insn 2526: point = 3203, n_alt = 0
   Insn 2525: point = 3205, n_alt = 0
   Insn 2524: point = 3206, n_alt = -2
   Insn 2523: point = 3208, n_alt = -2
   Insn 2522: point = 3210, n_alt = 0
   Insn 2521: point = 3212, n_alt = 0
   Insn 2520: point = 3213, n_alt = -2
   Insn 2519: point = 3215, n_alt = 0
   Insn 2518: point = 3217, n_alt = -2
   Insn 2517: point = 3218, n_alt = 1
   Insn 2516: point = 3220, n_alt = 0
  BB 166
   Insn 2514: point = 3221, n_alt = -1
   Insn 2513: point = 3221, n_alt = 0
   Insn 2512: point = 3222, n_alt = 0
  BB 165
   Insn 2509: point = 3223, n_alt = 0
   Insn 2508: point = 3223, n_alt = 3
   Insn 2507: point = 3223, n_alt = 2
   Insn 2506: point = 3223, n_alt = 2
   Insn 2505: point = 3223, n_alt = -2
   Insn 2504: point = 3224, n_alt = -2
   Insn 2503: point = 3225, n_alt = -2
   Insn 2502: point = 3226, n_alt = -2
   Insn 2501: point = 3227, n_alt = 3
   Insn 2500: point = 3228, n_alt = 3
   Insn 2499: point = 3229, n_alt = 3
   Insn 2498: point = 3230, n_alt = 3
  BB 164
   Insn 2495: point = 3231, n_alt = 1
  BB 163
   Insn 2493: point = 3231, n_alt = -1
   Insn 2492: point = 3231, n_alt = 0
   Insn 2491: point = 3232, n_alt = 0
   Insn 2490: point = 3233, n_alt = 1
   Insn 2489: point = 3234, n_alt = 0
   Insn 2488: point = 3235, n_alt = 0
   Insn 2487: point = 3236, n_alt = 1
   Insn 5872: point = 3237, n_alt = -2
	Hard reg 1 is preferable by r3009 with profit 1000
   Insn 2486: point = 3239, n_alt = 0
   Insn 5871: point = 3240, n_alt = -2
	Hard reg 1 is preferable by r3009 with profit 2000
   Insn 2485: point = 3242, n_alt = 2
   Insn 2484: point = 3243, n_alt = 2
   Insn 2483: point = 3244, n_alt = 2
   Insn 2482: point = 3245, n_alt = 0
   Insn 2481: point = 3245, n_alt = 0
   Insn 2480: point = 3245, n_alt = 3
   Insn 2479: point = 3245, n_alt = 2
   Insn 2478: point = 3245, n_alt = 2
   Insn 2477: point = 3245, n_alt = 4
   Insn 2476: point = 3245, n_alt = 4
   Insn 2475: point = 3245, n_alt = -2
   Insn 2474: point = 3246, n_alt = -2
   Insn 2473: point = 3247, n_alt = 0
   Insn 2472: point = 3247, n_alt = 0
   Insn 2471: point = 3247, n_alt = 3
   Insn 2470: point = 3248, n_alt = 3
   Insn 2469: point = 3249, n_alt = 0
   Insn 2468: point = 3249, n_alt = 3
   Insn 2467: point = 3249, n_alt = 4
   Insn 2466: point = 3249, n_alt = -2
   Insn 2465: point = 3250, n_alt = -2
   Insn 2464: point = 3251, n_alt = 4
   Insn 2463: point = 3251, n_alt = 4
   Insn 2462: point = 3251, n_alt = 3
   Insn 2461: point = 3252, n_alt = 3
   Insn 2460: point = 3253, n_alt = 1
   Insn 2459: point = 3254, n_alt = 0
   Insn 2458: point = 3256, n_alt = 0
   Insn 2457: point = 3258, n_alt = 0
   Insn 2456: point = 3260, n_alt = 0
   Insn 2455: point = 3262, n_alt = 0
   Insn 2454: point = 3264, n_alt = 0
   Insn 2453: point = 3265, n_alt = -2
   Insn 2452: point = 3267, n_alt = -2
   Insn 2451: point = 3269, n_alt = 0
   Insn 2450: point = 3271, n_alt = 0
   Insn 2449: point = 3272, n_alt = -2
   Insn 2448: point = 3274, n_alt = 0
   Insn 2447: point = 3276, n_alt = -2
   Insn 2446: point = 3277, n_alt = 1
   Insn 2445: point = 3279, n_alt = 0
  BB 162
   Insn 2443: point = 3280, n_alt = -1
   Insn 2442: point = 3280, n_alt = 0
   Insn 2441: point = 3281, n_alt = 0
   Insn 2440: point = 3283, n_alt = 0
   Insn 2439: point = 3285, n_alt = 0
   Insn 2438: point = 3287, n_alt = 0
   Insn 2437: point = 3289, n_alt = 0
   Insn 2436: point = 3291, n_alt = 0
   Insn 2435: point = 3292, n_alt = -2
   Insn 2434: point = 3294, n_alt = -2
   Insn 2433: point = 3296, n_alt = 0
   Insn 2432: point = 3298, n_alt = 0
   Insn 2431: point = 3299, n_alt = -2
   Insn 2430: point = 3301, n_alt = 0
   Insn 2429: point = 3303, n_alt = -2
   Insn 2428: point = 3304, n_alt = 1
   Insn 2427: point = 3306, n_alt = 0
  BB 161
   Insn 2425: point = 3307, n_alt = -1
   Insn 2424: point = 3307, n_alt = 0
   Insn 2423: point = 3308, n_alt = 0
  BB 160
   Insn 2420: point = 3309, n_alt = 0
   Insn 2419: point = 3309, n_alt = 3
   Insn 2418: point = 3309, n_alt = 2
   Insn 2417: point = 3309, n_alt = 2
   Insn 2416: point = 3309, n_alt = -2
   Insn 2415: point = 3310, n_alt = -2
   Insn 2414: point = 3311, n_alt = -2
   Insn 2413: point = 3312, n_alt = -2
   Insn 2412: point = 3313, n_alt = 3
   Insn 2411: point = 3314, n_alt = 3
   Insn 2410: point = 3315, n_alt = 3
   Insn 2409: point = 3316, n_alt = 3
  BB 159
   Insn 2407: point = 3317, n_alt = -1
   Insn 2406: point = 3317, n_alt = 0
   Insn 2405: point = 3318, n_alt = 0
  BB 158
   Insn 2402: point = 3319, n_alt = 1
  BB 157
   Insn 2400: point = 3319, n_alt = -1
   Insn 2399: point = 3319, n_alt = 0
   Insn 2398: point = 3320, n_alt = 0
   Insn 2397: point = 3321, n_alt = 1
   Insn 2396: point = 3322, n_alt = 0
   Insn 2395: point = 3323, n_alt = 0
   Insn 2394: point = 3324, n_alt = 1
   Insn 5870: point = 3325, n_alt = -2
	Hard reg 1 is preferable by r3008 with profit 1000
   Insn 2393: point = 3327, n_alt = 0
   Insn 5869: point = 3328, n_alt = -2
	Hard reg 1 is preferable by r3008 with profit 2000
   Insn 2392: point = 3330, n_alt = 2
   Insn 2391: point = 3331, n_alt = 2
   Insn 2390: point = 3332, n_alt = 2
  BB 156
   Insn 2387: point = 3333, n_alt = 0
   Insn 2386: point = 3333, n_alt = 3
   Insn 2385: point = 3333, n_alt = 2
   Insn 2384: point = 3333, n_alt = 2
   Insn 2383: point = 3333, n_alt = -2
   Insn 2382: point = 3334, n_alt = -2
   Insn 2381: point = 3335, n_alt = -2
   Insn 2380: point = 3336, n_alt = -2
   Insn 2379: point = 3337, n_alt = 3
   Insn 2378: point = 3338, n_alt = 3
   Insn 2377: point = 3339, n_alt = 3
   Insn 2376: point = 3340, n_alt = 3
  BB 155
   Insn 2374: point = 3341, n_alt = -1
   Insn 2373: point = 3341, n_alt = 0
   Insn 2372: point = 3342, n_alt = 0
  BB 154
   Insn 2369: point = 3343, n_alt = 1
  BB 153
   Insn 2367: point = 3343, n_alt = -1
   Insn 2366: point = 3343, n_alt = 0
   Insn 2365: point = 3344, n_alt = 0
   Insn 2364: point = 3345, n_alt = 1
   Insn 2363: point = 3346, n_alt = 0
   Insn 2362: point = 3347, n_alt = 0
   Insn 2361: point = 3348, n_alt = 1
   Insn 5868: point = 3349, n_alt = -2
	Hard reg 1 is preferable by r3007 with profit 1000
   Insn 2360: point = 3351, n_alt = 0
   Insn 5867: point = 3352, n_alt = -2
	Hard reg 1 is preferable by r3007 with profit 2000
   Insn 2359: point = 3354, n_alt = 2
   Insn 2358: point = 3355, n_alt = 2
   Insn 2357: point = 3356, n_alt = 2
   Insn 2356: point = 3357, n_alt = 0
   Insn 2355: point = 3357, n_alt = 0
   Insn 2354: point = 3357, n_alt = 3
   Insn 2353: point = 3357, n_alt = 2
   Insn 2352: point = 3357, n_alt = 2
   Insn 2351: point = 3357, n_alt = 4
   Insn 2350: point = 3357, n_alt = 4
   Insn 2349: point = 3357, n_alt = -2
   Insn 2348: point = 3358, n_alt = -2
   Insn 2347: point = 3359, n_alt = 0
   Insn 2346: point = 3359, n_alt = 0
   Insn 2345: point = 3359, n_alt = 3
   Insn 2344: point = 3360, n_alt = 3
   Insn 2343: point = 3361, n_alt = 0
   Insn 2342: point = 3361, n_alt = 3
   Insn 2341: point = 3361, n_alt = 4
   Insn 2340: point = 3361, n_alt = -2
   Insn 2339: point = 3362, n_alt = -2
   Insn 2338: point = 3363, n_alt = 4
   Insn 2337: point = 3363, n_alt = 4
   Insn 2336: point = 3363, n_alt = 3
   Insn 2335: point = 3364, n_alt = 3
   Insn 2334: point = 3365, n_alt = 1
   Insn 2333: point = 3366, n_alt = 0
   Insn 2332: point = 3368, n_alt = 0
   Insn 2331: point = 3370, n_alt = 0
   Insn 2330: point = 3372, n_alt = 0
   Insn 2329: point = 3374, n_alt = 0
   Insn 2328: point = 3376, n_alt = 0
   Insn 2327: point = 3377, n_alt = -2
   Insn 2326: point = 3379, n_alt = -2
   Insn 2325: point = 3381, n_alt = 0
   Insn 2324: point = 3383, n_alt = 0
   Insn 2323: point = 3384, n_alt = -2
   Insn 2322: point = 3386, n_alt = 0
   Insn 2321: point = 3388, n_alt = -2
   Insn 2320: point = 3389, n_alt = 1
   Insn 2319: point = 3391, n_alt = 0
   Insn 2318: point = 3392, n_alt = 0
   Insn 2317: point = 3392, n_alt = 3
   Insn 2316: point = 3392, n_alt = 4
   Insn 2315: point = 3392, n_alt = -2
   Insn 2314: point = 3393, n_alt = -2
   Insn 2313: point = 3394, n_alt = 4
   Insn 2312: point = 3394, n_alt = 4
   Insn 2311: point = 3394, n_alt = 3
   Insn 2310: point = 3395, n_alt = 3
   Insn 2309: point = 3396, n_alt = 1
   Insn 2308: point = 3397, n_alt = 0
   Insn 2307: point = 3399, n_alt = 0
   Insn 2306: point = 3401, n_alt = 0
   Insn 2305: point = 3403, n_alt = 0
   Insn 2304: point = 3405, n_alt = 0
   Insn 2303: point = 3407, n_alt = 0
   Insn 2302: point = 3408, n_alt = -2
   Insn 2301: point = 3410, n_alt = -2
   Insn 2300: point = 3412, n_alt = 0
   Insn 2299: point = 3414, n_alt = 0
   Insn 2298: point = 3415, n_alt = -2
   Insn 2297: point = 3417, n_alt = 0
   Insn 2296: point = 3419, n_alt = -2
   Insn 2295: point = 3420, n_alt = 1
   Insn 2294: point = 3422, n_alt = 0
  BB 152
   Insn 2291: point = 3423, n_alt = -1
   Insn 2290: point = 3423, n_alt = 0
   Insn 2289: point = 3424, n_alt = 0
   Insn 2288: point = 3426, n_alt = 0
   Insn 2287: point = 3428, n_alt = 0
   Insn 2286: point = 3430, n_alt = 0
   Insn 2285: point = 3432, n_alt = 0
   Insn 2284: point = 3434, n_alt = 0
   Insn 2283: point = 3435, n_alt = -2
   Insn 2282: point = 3437, n_alt = -2
   Insn 2281: point = 3439, n_alt = 0
   Insn 2280: point = 3441, n_alt = 0
   Insn 2279: point = 3442, n_alt = -2
   Insn 2278: point = 3444, n_alt = 0
   Insn 2277: point = 3446, n_alt = -2
   Insn 2276: point = 3447, n_alt = 1
   Insn 2275: point = 3449, n_alt = 0
  BB 151
   Insn 2273: point = 3450, n_alt = -1
   Insn 2272: point = 3450, n_alt = 0
   Insn 2271: point = 3451, n_alt = 0
   Insn 2270: point = 3453, n_alt = 0
   Insn 2269: point = 3455, n_alt = 0
   Insn 2268: point = 3457, n_alt = 0
   Insn 2267: point = 3459, n_alt = 0
   Insn 2266: point = 3461, n_alt = 0
   Insn 2265: point = 3462, n_alt = -2
   Insn 2264: point = 3464, n_alt = -2
   Insn 2263: point = 3466, n_alt = 0
   Insn 2262: point = 3468, n_alt = 0
   Insn 2261: point = 3469, n_alt = -2
   Insn 2260: point = 3471, n_alt = 0
   Insn 2259: point = 3473, n_alt = -2
   Insn 2258: point = 3474, n_alt = 1
   Insn 2257: point = 3476, n_alt = 0
  BB 150
   Insn 2254: point = 3477, n_alt = -1
   Insn 2253: point = 3477, n_alt = 0
   Insn 2252: point = 3478, n_alt = 0
  BB 149
   Insn 2250: point = 3479, n_alt = -1
   Insn 2249: point = 3479, n_alt = 0
   Insn 2248: point = 3480, n_alt = 0
  BB 148
   Insn 2245: point = 3481, n_alt = 0
   Insn 2244: point = 3481, n_alt = 3
   Insn 2243: point = 3481, n_alt = 2
   Insn 2242: point = 3481, n_alt = 2
   Insn 2241: point = 3481, n_alt = -2
   Insn 2240: point = 3482, n_alt = -2
   Insn 2239: point = 3483, n_alt = -2
   Insn 2238: point = 3484, n_alt = -2
   Insn 2237: point = 3485, n_alt = 3
   Insn 2236: point = 3486, n_alt = 3
   Insn 2235: point = 3487, n_alt = 3
   Insn 2234: point = 3488, n_alt = 3
  BB 147
   Insn 2231: point = 3489, n_alt = 1
  BB 146
   Insn 2229: point = 3489, n_alt = -1
   Insn 2228: point = 3489, n_alt = 0
   Insn 2227: point = 3490, n_alt = 0
   Insn 2226: point = 3491, n_alt = 1
   Insn 2225: point = 3492, n_alt = 0
   Insn 2224: point = 3493, n_alt = 0
   Insn 2223: point = 3494, n_alt = 1
   Insn 5866: point = 3495, n_alt = -2
	Hard reg 1 is preferable by r3006 with profit 1000
   Insn 2222: point = 3497, n_alt = 0
   Insn 5865: point = 3498, n_alt = -2
	Hard reg 1 is preferable by r3006 with profit 2000
   Insn 2221: point = 3500, n_alt = 2
   Insn 2220: point = 3501, n_alt = 2
   Insn 2219: point = 3502, n_alt = 2
   Insn 2218: point = 3503, n_alt = 0
   Insn 2217: point = 3503, n_alt = 0
   Insn 2216: point = 3503, n_alt = 3
   Insn 2215: point = 3503, n_alt = 2
   Insn 2214: point = 3503, n_alt = 2
   Insn 2213: point = 3503, n_alt = 4
   Insn 2212: point = 3503, n_alt = 4
   Insn 2211: point = 3503, n_alt = -2
   Insn 2210: point = 3504, n_alt = -2
   Insn 2209: point = 3505, n_alt = 0
   Insn 2208: point = 3505, n_alt = 0
   Insn 2207: point = 3505, n_alt = 3
   Insn 2206: point = 3506, n_alt = 3
   Insn 2205: point = 3507, n_alt = 0
   Insn 2204: point = 3507, n_alt = 3
   Insn 2203: point = 3507, n_alt = 4
   Insn 2202: point = 3507, n_alt = 4
   Insn 2201: point = 3507, n_alt = 4
   Insn 2200: point = 3507, n_alt = 2
   Insn 2199: point = 3507, n_alt = 4
   Insn 2198: point = 3507, n_alt = 0
   Insn 2197: point = 3507, n_alt = 3
   Insn 2196: point = 3507, n_alt = 4
   Insn 2195: point = 3507, n_alt = -2
   Insn 2194: point = 3508, n_alt = -2
   Insn 2193: point = 3509, n_alt = 4
   Insn 2192: point = 3509, n_alt = 4
   Insn 2191: point = 3509, n_alt = 3
   Insn 2190: point = 3510, n_alt = 3
   Insn 2189: point = 3511, n_alt = 0
   Insn 2188: point = 3511, n_alt = 3
   Insn 2187: point = 3511, n_alt = 4
   Insn 2186: point = 3511, n_alt = -2
   Insn 2185: point = 3512, n_alt = -2
   Insn 2184: point = 3513, n_alt = 4
   Insn 2183: point = 3513, n_alt = 4
   Insn 2182: point = 3513, n_alt = 3
   Insn 2181: point = 3514, n_alt = 3
   Insn 2180: point = 3515, n_alt = 0
   Insn 2179: point = 3515, n_alt = 3
   Insn 2178: point = 3515, n_alt = 4
   Insn 2177: point = 3515, n_alt = -2
   Insn 2176: point = 3516, n_alt = -2
   Insn 2175: point = 3517, n_alt = 4
   Insn 2174: point = 3517, n_alt = 4
   Insn 2173: point = 3517, n_alt = 3
   Insn 2172: point = 3518, n_alt = 3
   Insn 2171: point = 3519, n_alt = 1
   Insn 2170: point = 3520, n_alt = 0
   Insn 2169: point = 3522, n_alt = 0
   Insn 2168: point = 3524, n_alt = 0
   Insn 2167: point = 3526, n_alt = 0
   Insn 2166: point = 3528, n_alt = 0
   Insn 2165: point = 3530, n_alt = 0
   Insn 2164: point = 3531, n_alt = -2
   Insn 2163: point = 3533, n_alt = -2
   Insn 2162: point = 3535, n_alt = 0
   Insn 2161: point = 3537, n_alt = 0
   Insn 2160: point = 3538, n_alt = -2
   Insn 2159: point = 3540, n_alt = 0
   Insn 2158: point = 3542, n_alt = -2
   Insn 2157: point = 3543, n_alt = 1
   Insn 2156: point = 3545, n_alt = 0
  BB 145
   Insn 2154: point = 3546, n_alt = -1
   Insn 2153: point = 3546, n_alt = 0
   Insn 2152: point = 3547, n_alt = 0
   Insn 2151: point = 3549, n_alt = 0
   Insn 2150: point = 3551, n_alt = 0
   Insn 2149: point = 3553, n_alt = 0
   Insn 2148: point = 3555, n_alt = 0
   Insn 2147: point = 3557, n_alt = 0
   Insn 2146: point = 3558, n_alt = -2
   Insn 2145: point = 3560, n_alt = -2
   Insn 2144: point = 3562, n_alt = 0
   Insn 2143: point = 3564, n_alt = 0
   Insn 2142: point = 3565, n_alt = -2
   Insn 2141: point = 3567, n_alt = 0
   Insn 2140: point = 3569, n_alt = -2
   Insn 2139: point = 3570, n_alt = 1
   Insn 2138: point = 3572, n_alt = 0
  BB 144
   Insn 2136: point = 3573, n_alt = -1
   Insn 2135: point = 3573, n_alt = 0
   Insn 2134: point = 3574, n_alt = 0
  BB 143
   Insn 2131: point = 3575, n_alt = 0
   Insn 2130: point = 3575, n_alt = 3
   Insn 2129: point = 3575, n_alt = 2
   Insn 2128: point = 3575, n_alt = 2
   Insn 2127: point = 3575, n_alt = -2
   Insn 2126: point = 3576, n_alt = -2
   Insn 2125: point = 3577, n_alt = -2
   Insn 2124: point = 3578, n_alt = -2
   Insn 2123: point = 3579, n_alt = 3
   Insn 2122: point = 3580, n_alt = 3
   Insn 2121: point = 3581, n_alt = 3
   Insn 2120: point = 3582, n_alt = 3
  BB 142
   Insn 2117: point = 3583, n_alt = 1
  BB 141
   Insn 2115: point = 3583, n_alt = -1
   Insn 2114: point = 3583, n_alt = 0
   Insn 2113: point = 3584, n_alt = 0
   Insn 2112: point = 3585, n_alt = 1
   Insn 2111: point = 3586, n_alt = 0
   Insn 2110: point = 3587, n_alt = 0
   Insn 2109: point = 3588, n_alt = 1
   Insn 5864: point = 3589, n_alt = -2
	Hard reg 1 is preferable by r3005 with profit 1000
   Insn 2108: point = 3591, n_alt = 0
   Insn 5863: point = 3592, n_alt = -2
	Hard reg 1 is preferable by r3005 with profit 2000
   Insn 2107: point = 3594, n_alt = 2
   Insn 2106: point = 3595, n_alt = 2
   Insn 2105: point = 3596, n_alt = 2
   Insn 2104: point = 3597, n_alt = 0
   Insn 2103: point = 3597, n_alt = 3
   Insn 2102: point = 3597, n_alt = -2
   Insn 2101: point = 3598, n_alt = 2
   Insn 2100: point = 3598, n_alt = 2
   Insn 2099: point = 3598, n_alt = -2
   Insn 2098: point = 3599, n_alt = -2
   Insn 2097: point = 3600, n_alt = 3
   Insn 2096: point = 3601, n_alt = 3
   Insn 2095: point = 3602, n_alt = 3
   Insn 2094: point = 3603, n_alt = 0
   Insn 2093: point = 3603, n_alt = 0
   Insn 2092: point = 3603, n_alt = 3
   Insn 2091: point = 3603, n_alt = 2
   Insn 2090: point = 3603, n_alt = 2
   Insn 2089: point = 3603, n_alt = 4
   Insn 2088: point = 3603, n_alt = 4
   Insn 2087: point = 3603, n_alt = -2
   Insn 2086: point = 3604, n_alt = -2
   Insn 2085: point = 3605, n_alt = 0
   Insn 2084: point = 3605, n_alt = 0
   Insn 2083: point = 3605, n_alt = 3
   Insn 2082: point = 3606, n_alt = 3
   Insn 2081: point = 3607, n_alt = 0
   Insn 2080: point = 3607, n_alt = 3
   Insn 2079: point = 3607, n_alt = 4
   Insn 2078: point = 3607, n_alt = -2
   Insn 2077: point = 3608, n_alt = -2
   Insn 2076: point = 3609, n_alt = 4
   Insn 2075: point = 3609, n_alt = 4
   Insn 2074: point = 3609, n_alt = 3
   Insn 2073: point = 3610, n_alt = 3
   Insn 2072: point = 3611, n_alt = 1
   Insn 2071: point = 3612, n_alt = 0
   Insn 2070: point = 3614, n_alt = 0
   Insn 2069: point = 3616, n_alt = 0
   Insn 2068: point = 3618, n_alt = 0
   Insn 2067: point = 3620, n_alt = 0
   Insn 2066: point = 3622, n_alt = 0
   Insn 2065: point = 3623, n_alt = -2
   Insn 2064: point = 3625, n_alt = -2
   Insn 2063: point = 3627, n_alt = 0
   Insn 2062: point = 3629, n_alt = 0
   Insn 2061: point = 3630, n_alt = -2
   Insn 2060: point = 3632, n_alt = 0
   Insn 2059: point = 3634, n_alt = -2
   Insn 2058: point = 3635, n_alt = 1
   Insn 2057: point = 3637, n_alt = 0
  BB 140
   Insn 2055: point = 3638, n_alt = -1
   Insn 2054: point = 3638, n_alt = 0
   Insn 2053: point = 3639, n_alt = 0
   Insn 2052: point = 3641, n_alt = 0
   Insn 2051: point = 3643, n_alt = 0
   Insn 2050: point = 3645, n_alt = 0
   Insn 2049: point = 3647, n_alt = 0
   Insn 2048: point = 3649, n_alt = 0
   Insn 2047: point = 3650, n_alt = -2
   Insn 2046: point = 3652, n_alt = -2
   Insn 2045: point = 3654, n_alt = 0
   Insn 2044: point = 3656, n_alt = 0
   Insn 2043: point = 3657, n_alt = -2
   Insn 2042: point = 3659, n_alt = 0
   Insn 2041: point = 3661, n_alt = -2
   Insn 2040: point = 3662, n_alt = 1
   Insn 2039: point = 3664, n_alt = 0
  BB 139
   Insn 2037: point = 3665, n_alt = -1
   Insn 2036: point = 3665, n_alt = 0
   Insn 2035: point = 3666, n_alt = 0
  BB 138
   Insn 2032: point = 3667, n_alt = 0
   Insn 2031: point = 3667, n_alt = 3
   Insn 2030: point = 3667, n_alt = 2
   Insn 2029: point = 3667, n_alt = 2
   Insn 2028: point = 3667, n_alt = -2
   Insn 2027: point = 3668, n_alt = -2
   Insn 2026: point = 3669, n_alt = -2
   Insn 2025: point = 3670, n_alt = -2
   Insn 2024: point = 3671, n_alt = 3
   Insn 2023: point = 3672, n_alt = 3
   Insn 2022: point = 3673, n_alt = 3
   Insn 2021: point = 3674, n_alt = 3
  BB 137
   Insn 2018: point = 3675, n_alt = 1
  BB 136
   Insn 2016: point = 3675, n_alt = -1
   Insn 2015: point = 3675, n_alt = 0
   Insn 2014: point = 3676, n_alt = 0
   Insn 2013: point = 3677, n_alt = 1
   Insn 2012: point = 3678, n_alt = 0
   Insn 2011: point = 3679, n_alt = 0
   Insn 2010: point = 3680, n_alt = 1
   Insn 5862: point = 3681, n_alt = -2
	Hard reg 1 is preferable by r3004 with profit 1000
   Insn 2009: point = 3683, n_alt = 0
   Insn 5861: point = 3684, n_alt = -2
	Hard reg 1 is preferable by r3004 with profit 2000
   Insn 2008: point = 3686, n_alt = 2
   Insn 2007: point = 3687, n_alt = 2
   Insn 2006: point = 3688, n_alt = 2
   Insn 2005: point = 3689, n_alt = 0
   Insn 2004: point = 3689, n_alt = 0
   Insn 2003: point = 3689, n_alt = 3
   Insn 2002: point = 3689, n_alt = 2
   Insn 2001: point = 3689, n_alt = 2
   Insn 2000: point = 3689, n_alt = 4
   Insn 1999: point = 3689, n_alt = 4
   Insn 1998: point = 3689, n_alt = -2
   Insn 1997: point = 3690, n_alt = -2
   Insn 1996: point = 3691, n_alt = 0
   Insn 1995: point = 3691, n_alt = 0
   Insn 1994: point = 3691, n_alt = 3
   Insn 1993: point = 3692, n_alt = 3
   Insn 1992: point = 3693, n_alt = 0
   Insn 1991: point = 3693, n_alt = 3
   Insn 1990: point = 3693, n_alt = 4
   Insn 1989: point = 3693, n_alt = 4
   Insn 1988: point = 3693, n_alt = 4
   Insn 1987: point = 3693, n_alt = 4
   Insn 1986: point = 3693, n_alt = 0
   Insn 1985: point = 3693, n_alt = 3
   Insn 1984: point = 3693, n_alt = 4
   Insn 1983: point = 3693, n_alt = -2
   Insn 1982: point = 3694, n_alt = -2
   Insn 1981: point = 3695, n_alt = 4
   Insn 1980: point = 3695, n_alt = 4
   Insn 1979: point = 3695, n_alt = 3
   Insn 1978: point = 3696, n_alt = 3
   Insn 1977: point = 3697, n_alt = 0
   Insn 1976: point = 3697, n_alt = 3
   Insn 1975: point = 3697, n_alt = 4
   Insn 1974: point = 3697, n_alt = -2
   Insn 1973: point = 3698, n_alt = -2
   Insn 1972: point = 3699, n_alt = 4
   Insn 1971: point = 3699, n_alt = 4
   Insn 1970: point = 3699, n_alt = 3
   Insn 1969: point = 3700, n_alt = 3
   Insn 1968: point = 3701, n_alt = 0
   Insn 1967: point = 3701, n_alt = 3
   Insn 1966: point = 3701, n_alt = 4
   Insn 1965: point = 3701, n_alt = -2
   Insn 1964: point = 3702, n_alt = -2
   Insn 1963: point = 3703, n_alt = 4
   Insn 1962: point = 3703, n_alt = 4
   Insn 1961: point = 3703, n_alt = 3
   Insn 1960: point = 3704, n_alt = 3
   Insn 1959: point = 3705, n_alt = 1
   Insn 1958: point = 3706, n_alt = 0
   Insn 1957: point = 3708, n_alt = 0
   Insn 1956: point = 3710, n_alt = 0
   Insn 1955: point = 3712, n_alt = 0
   Insn 1954: point = 3714, n_alt = 0
   Insn 1953: point = 3716, n_alt = 0
   Insn 1952: point = 3717, n_alt = -2
   Insn 1951: point = 3719, n_alt = -2
   Insn 1950: point = 3721, n_alt = 0
   Insn 1949: point = 3723, n_alt = 0
   Insn 1948: point = 3724, n_alt = -2
   Insn 1947: point = 3726, n_alt = 0
   Insn 1946: point = 3728, n_alt = -2
   Insn 1945: point = 3729, n_alt = 1
   Insn 1944: point = 3731, n_alt = 0
  BB 135
   Insn 1942: point = 3732, n_alt = -1
   Insn 1941: point = 3732, n_alt = 0
   Insn 1940: point = 3733, n_alt = 0
   Insn 1939: point = 3735, n_alt = 0
   Insn 1938: point = 3737, n_alt = 0
   Insn 1937: point = 3739, n_alt = 0
   Insn 1936: point = 3741, n_alt = 0
   Insn 1935: point = 3743, n_alt = 0
   Insn 1934: point = 3744, n_alt = -2
   Insn 1933: point = 3746, n_alt = -2
   Insn 1932: point = 3748, n_alt = 0
   Insn 1931: point = 3750, n_alt = 0
   Insn 1930: point = 3751, n_alt = -2
   Insn 1929: point = 3753, n_alt = 0
   Insn 1928: point = 3755, n_alt = -2
   Insn 1927: point = 3756, n_alt = 1
   Insn 1926: point = 3758, n_alt = 0
  BB 134
   Insn 1924: point = 3759, n_alt = -1
   Insn 1923: point = 3759, n_alt = 0
   Insn 1922: point = 3760, n_alt = 0
  BB 133
   Insn 1919: point = 3761, n_alt = 0
   Insn 1918: point = 3761, n_alt = 3
   Insn 1917: point = 3761, n_alt = 2
   Insn 1916: point = 3761, n_alt = 2
   Insn 1915: point = 3761, n_alt = -2
   Insn 1914: point = 3762, n_alt = -2
   Insn 1913: point = 3763, n_alt = -2
   Insn 1912: point = 3764, n_alt = -2
   Insn 1911: point = 3765, n_alt = 3
   Insn 1910: point = 3766, n_alt = 3
   Insn 1909: point = 3767, n_alt = 3
   Insn 1908: point = 3768, n_alt = 3
  BB 132
   Insn 1905: point = 3769, n_alt = 1
  BB 131
   Insn 1903: point = 3769, n_alt = -1
   Insn 1902: point = 3769, n_alt = 0
   Insn 1901: point = 3770, n_alt = 0
   Insn 1900: point = 3771, n_alt = 1
   Insn 1899: point = 3772, n_alt = 0
   Insn 1898: point = 3773, n_alt = 0
   Insn 1897: point = 3774, n_alt = 1
   Insn 5860: point = 3775, n_alt = -2
	Hard reg 1 is preferable by r3003 with profit 1000
   Insn 1896: point = 3777, n_alt = 0
   Insn 5859: point = 3778, n_alt = -2
	Hard reg 1 is preferable by r3003 with profit 2000
   Insn 1895: point = 3780, n_alt = 2
   Insn 1894: point = 3781, n_alt = 2
   Insn 1893: point = 3782, n_alt = 2
   Insn 1892: point = 3783, n_alt = 0
   Insn 1891: point = 3783, n_alt = 3
   Insn 1890: point = 3783, n_alt = -2
   Insn 1889: point = 3784, n_alt = 2
   Insn 1888: point = 3784, n_alt = 2
   Insn 1887: point = 3784, n_alt = -2
   Insn 1886: point = 3785, n_alt = -2
   Insn 1885: point = 3786, n_alt = 3
   Insn 1884: point = 3787, n_alt = 3
   Insn 1883: point = 3788, n_alt = 3
   Insn 1882: point = 3789, n_alt = 0
   Insn 1881: point = 3789, n_alt = 3
   Insn 1880: point = 3789, n_alt = -2
   Insn 1879: point = 3790, n_alt = 2
   Insn 1878: point = 3790, n_alt = -2
   Insn 1877: point = 3791, n_alt = -2
   Insn 1876: point = 3792, n_alt = 3
   Insn 1875: point = 3793, n_alt = 3
   Insn 1874: point = 3794, n_alt = 3
   Insn 1873: point = 3795, n_alt = 0
   Insn 1872: point = 3795, n_alt = 0
   Insn 1871: point = 3795, n_alt = 3
   Insn 1870: point = 3795, n_alt = 2
   Insn 1869: point = 3795, n_alt = 2
   Insn 1868: point = 3795, n_alt = 4
   Insn 1867: point = 3795, n_alt = 4
   Insn 1866: point = 3795, n_alt = -2
   Insn 1865: point = 3796, n_alt = -2
   Insn 1864: point = 3797, n_alt = 0
   Insn 1863: point = 3797, n_alt = 0
   Insn 1862: point = 3797, n_alt = 3
   Insn 1861: point = 3798, n_alt = 3
   Insn 1860: point = 3799, n_alt = 0
   Insn 1859: point = 3799, n_alt = 0
   Insn 1858: point = 3799, n_alt = 3
   Insn 1857: point = 3799, n_alt = 4
   Insn 1856: point = 3799, n_alt = 4
   Insn 1855: point = 3799, n_alt = 4
   Insn 1854: point = 3799, n_alt = 4
   Insn 1853: point = 3799, n_alt = 4
   Insn 1852: point = 3799, n_alt = 2
   Insn 1851: point = 3799, n_alt = 0
   Insn 1850: point = 3799, n_alt = 0
   Insn 1849: point = 3799, n_alt = 0
   Insn 1848: point = 3799, n_alt = 3
   Insn 1847: point = 3799, n_alt = 4
   Insn 1846: point = 3799, n_alt = -2
   Insn 1845: point = 3800, n_alt = -2
   Insn 1844: point = 3801, n_alt = 4
   Insn 1843: point = 3801, n_alt = 4
   Insn 1842: point = 3801, n_alt = 3
   Insn 1841: point = 3802, n_alt = 3
   Insn 1840: point = 3803, n_alt = 0
   Insn 1839: point = 3803, n_alt = 3
   Insn 1838: point = 3803, n_alt = 4
   Insn 1837: point = 3803, n_alt = -2
   Insn 1836: point = 3804, n_alt = -2
   Insn 1835: point = 3805, n_alt = 4
   Insn 1834: point = 3805, n_alt = 4
   Insn 1833: point = 3805, n_alt = 3
   Insn 1832: point = 3806, n_alt = 3
   Insn 1831: point = 3807, n_alt = 0
   Insn 1830: point = 3807, n_alt = 3
   Insn 1829: point = 3807, n_alt = 4
   Insn 1828: point = 3807, n_alt = -2
   Insn 1827: point = 3808, n_alt = -2
   Insn 1826: point = 3809, n_alt = 4
   Insn 1825: point = 3809, n_alt = 4
   Insn 1824: point = 3809, n_alt = 3
   Insn 1823: point = 3810, n_alt = 3
   Insn 1822: point = 3811, n_alt = 0
   Insn 1821: point = 3811, n_alt = 3
   Insn 1820: point = 3811, n_alt = 4
   Insn 1819: point = 3811, n_alt = -2
   Insn 1818: point = 3812, n_alt = -2
   Insn 1817: point = 3813, n_alt = 4
   Insn 1816: point = 3813, n_alt = 4
   Insn 1815: point = 3813, n_alt = 3
   Insn 1814: point = 3814, n_alt = 3
   Insn 1813: point = 3815, n_alt = 1
   Insn 1812: point = 3816, n_alt = 0
   Insn 1811: point = 3818, n_alt = 0
   Insn 1810: point = 3820, n_alt = 0
   Insn 1809: point = 3822, n_alt = 0
   Insn 1808: point = 3824, n_alt = 0
   Insn 1807: point = 3826, n_alt = 0
   Insn 1806: point = 3827, n_alt = -2
   Insn 1805: point = 3829, n_alt = -2
   Insn 1804: point = 3831, n_alt = 0
   Insn 1803: point = 3833, n_alt = 0
   Insn 1802: point = 3834, n_alt = -2
   Insn 1801: point = 3836, n_alt = 0
   Insn 1800: point = 3838, n_alt = -2
   Insn 1799: point = 3839, n_alt = 1
   Insn 1798: point = 3841, n_alt = 0
  BB 130
   Insn 1796: point = 3842, n_alt = -1
   Insn 1795: point = 3842, n_alt = 0
   Insn 1794: point = 3843, n_alt = 0
   Insn 1793: point = 3845, n_alt = 0
   Insn 1792: point = 3847, n_alt = 0
   Insn 1791: point = 3849, n_alt = 0
   Insn 1790: point = 3851, n_alt = 0
   Insn 1789: point = 3853, n_alt = 0
   Insn 1788: point = 3854, n_alt = -2
   Insn 1787: point = 3856, n_alt = -2
   Insn 1786: point = 3858, n_alt = 0
   Insn 1785: point = 3860, n_alt = 0
   Insn 1784: point = 3861, n_alt = -2
   Insn 1783: point = 3863, n_alt = 0
   Insn 1782: point = 3865, n_alt = -2
   Insn 1781: point = 3866, n_alt = 1
   Insn 1780: point = 3868, n_alt = 0
  BB 129
   Insn 1778: point = 3869, n_alt = -1
   Insn 1777: point = 3869, n_alt = 0
   Insn 1776: point = 3870, n_alt = 0
  BB 128
   Insn 1773: point = 3871, n_alt = 0
   Insn 1772: point = 3871, n_alt = 3
   Insn 1771: point = 3871, n_alt = 2
   Insn 1770: point = 3871, n_alt = 2
   Insn 1769: point = 3871, n_alt = -2
   Insn 1768: point = 3872, n_alt = -2
   Insn 1767: point = 3873, n_alt = -2
   Insn 1766: point = 3874, n_alt = -2
   Insn 1765: point = 3875, n_alt = 3
   Insn 1764: point = 3876, n_alt = 3
   Insn 1763: point = 3877, n_alt = 3
   Insn 1762: point = 3878, n_alt = 3
  BB 127
   Insn 1759: point = 3879, n_alt = 1
  BB 126
   Insn 1757: point = 3879, n_alt = -1
   Insn 1756: point = 3879, n_alt = 0
   Insn 1755: point = 3880, n_alt = 0
   Insn 1754: point = 3881, n_alt = 1
   Insn 1753: point = 3882, n_alt = 0
   Insn 1752: point = 3883, n_alt = 0
   Insn 1751: point = 3884, n_alt = 1
   Insn 5858: point = 3885, n_alt = -2
	Hard reg 1 is preferable by r3002 with profit 1000
   Insn 1750: point = 3887, n_alt = 0
   Insn 5857: point = 3888, n_alt = -2
	Hard reg 1 is preferable by r3002 with profit 2000
   Insn 1749: point = 3890, n_alt = 2
   Insn 1748: point = 3891, n_alt = 2
   Insn 1747: point = 3892, n_alt = 2
   Insn 1746: point = 3893, n_alt = 0
   Insn 1745: point = 3893, n_alt = 0
   Insn 1744: point = 3893, n_alt = 3
   Insn 1743: point = 3893, n_alt = 2
   Insn 1742: point = 3893, n_alt = 2
   Insn 1741: point = 3893, n_alt = 4
   Insn 1740: point = 3893, n_alt = 4
   Insn 1739: point = 3893, n_alt = -2
   Insn 1738: point = 3894, n_alt = -2
   Insn 1737: point = 3895, n_alt = 0
   Insn 1736: point = 3895, n_alt = 0
   Insn 1735: point = 3895, n_alt = 3
   Insn 1734: point = 3896, n_alt = 3
   Insn 1733: point = 3897, n_alt = 0
   Insn 1732: point = 3897, n_alt = 3
   Insn 1731: point = 3897, n_alt = 4
   Insn 1730: point = 3897, n_alt = 4
   Insn 1729: point = 3897, n_alt = 4
   Insn 1728: point = 3897, n_alt = 2
   Insn 1727: point = 3897, n_alt = 2
   Insn 1726: point = 3897, n_alt = 0
   Insn 1725: point = 3897, n_alt = 3
   Insn 1724: point = 3897, n_alt = 4
   Insn 1723: point = 3897, n_alt = -2
   Insn 1722: point = 3898, n_alt = -2
   Insn 1721: point = 3899, n_alt = 4
   Insn 1720: point = 3899, n_alt = 4
   Insn 1719: point = 3899, n_alt = 3
   Insn 1718: point = 3900, n_alt = 3
   Insn 1717: point = 3901, n_alt = 0
   Insn 1716: point = 3901, n_alt = 3
   Insn 1715: point = 3901, n_alt = 4
   Insn 1714: point = 3901, n_alt = -2
   Insn 1713: point = 3902, n_alt = -2
   Insn 1712: point = 3903, n_alt = 4
   Insn 1711: point = 3903, n_alt = 4
   Insn 1710: point = 3903, n_alt = 3
   Insn 1709: point = 3904, n_alt = 3
   Insn 1708: point = 3905, n_alt = 1
   Insn 1707: point = 3906, n_alt = 0
   Insn 1706: point = 3908, n_alt = 0
   Insn 1705: point = 3910, n_alt = 0
   Insn 1704: point = 3912, n_alt = 0
   Insn 1703: point = 3914, n_alt = 0
   Insn 1702: point = 3916, n_alt = 0
   Insn 1701: point = 3917, n_alt = -2
   Insn 1700: point = 3919, n_alt = -2
   Insn 1699: point = 3921, n_alt = 0
   Insn 1698: point = 3923, n_alt = 0
   Insn 1697: point = 3924, n_alt = -2
   Insn 1696: point = 3926, n_alt = 0
   Insn 1695: point = 3928, n_alt = -2
   Insn 1694: point = 3929, n_alt = 1
   Insn 1693: point = 3931, n_alt = 0
  BB 125
   Insn 1691: point = 3932, n_alt = -1
   Insn 1690: point = 3932, n_alt = 0
   Insn 1689: point = 3933, n_alt = 0
   Insn 1688: point = 3935, n_alt = 0
   Insn 1687: point = 3937, n_alt = 0
   Insn 1686: point = 3939, n_alt = 0
   Insn 1685: point = 3941, n_alt = 0
   Insn 1684: point = 3943, n_alt = 0
   Insn 1683: point = 3944, n_alt = -2
   Insn 1682: point = 3946, n_alt = -2
   Insn 1681: point = 3948, n_alt = 0
   Insn 1680: point = 3950, n_alt = 0
   Insn 1679: point = 3951, n_alt = -2
   Insn 1678: point = 3953, n_alt = 0
   Insn 1677: point = 3955, n_alt = -2
   Insn 1676: point = 3956, n_alt = 1
   Insn 1675: point = 3958, n_alt = 0
  BB 124
   Insn 1673: point = 3959, n_alt = -1
   Insn 1672: point = 3959, n_alt = 0
   Insn 1671: point = 3960, n_alt = 0
  BB 123
   Insn 1668: point = 3961, n_alt = 0
   Insn 1667: point = 3961, n_alt = 3
   Insn 1666: point = 3961, n_alt = 2
   Insn 1665: point = 3961, n_alt = 2
   Insn 1664: point = 3961, n_alt = -2
   Insn 1663: point = 3962, n_alt = -2
   Insn 1662: point = 3963, n_alt = -2
   Insn 1661: point = 3964, n_alt = -2
   Insn 1660: point = 3965, n_alt = 3
   Insn 1659: point = 3966, n_alt = 3
   Insn 1658: point = 3967, n_alt = 3
   Insn 1657: point = 3968, n_alt = 3
  BB 122
   Insn 1654: point = 3969, n_alt = 1
  BB 121
   Insn 1652: point = 3969, n_alt = -1
   Insn 1651: point = 3969, n_alt = 0
   Insn 1650: point = 3970, n_alt = 0
   Insn 1649: point = 3971, n_alt = 1
   Insn 1648: point = 3972, n_alt = 0
   Insn 1647: point = 3973, n_alt = 0
   Insn 1646: point = 3974, n_alt = 1
   Insn 5856: point = 3975, n_alt = -2
	Hard reg 1 is preferable by r3001 with profit 1000
   Insn 1645: point = 3977, n_alt = 0
   Insn 5855: point = 3978, n_alt = -2
	Hard reg 1 is preferable by r3001 with profit 2000
   Insn 1644: point = 3980, n_alt = 2
   Insn 1643: point = 3981, n_alt = 2
   Insn 1642: point = 3982, n_alt = 2
   Insn 1641: point = 3983, n_alt = 0
   Insn 1640: point = 3983, n_alt = 0
   Insn 1639: point = 3983, n_alt = 3
   Insn 1638: point = 3983, n_alt = 2
   Insn 1637: point = 3983, n_alt = 2
   Insn 1636: point = 3983, n_alt = 4
   Insn 1635: point = 3983, n_alt = 4
   Insn 1634: point = 3983, n_alt = -2
   Insn 1633: point = 3984, n_alt = -2
   Insn 1632: point = 3985, n_alt = 0
   Insn 1631: point = 3985, n_alt = 0
   Insn 1630: point = 3985, n_alt = 3
   Insn 1629: point = 3986, n_alt = 3
   Insn 1628: point = 3987, n_alt = 0
   Insn 1627: point = 3987, n_alt = 3
   Insn 1626: point = 3987, n_alt = 4
   Insn 1625: point = 3987, n_alt = -2
   Insn 1624: point = 3988, n_alt = -2
   Insn 1623: point = 3989, n_alt = 4
   Insn 1622: point = 3989, n_alt = 4
   Insn 1621: point = 3989, n_alt = 3
   Insn 1620: point = 3990, n_alt = 3
   Insn 1619: point = 3991, n_alt = 1
   Insn 1618: point = 3992, n_alt = 0
   Insn 1617: point = 3994, n_alt = 0
   Insn 1616: point = 3996, n_alt = 0
   Insn 1615: point = 3998, n_alt = 0
   Insn 1614: point = 4000, n_alt = 0
   Insn 1613: point = 4002, n_alt = 0
   Insn 1612: point = 4003, n_alt = -2
   Insn 1611: point = 4005, n_alt = -2
   Insn 1610: point = 4007, n_alt = 0
   Insn 1609: point = 4009, n_alt = 0
   Insn 1608: point = 4010, n_alt = -2
   Insn 1607: point = 4012, n_alt = 0
   Insn 1606: point = 4014, n_alt = -2
   Insn 1605: point = 4015, n_alt = 1
   Insn 1604: point = 4017, n_alt = 0
  BB 120
   Insn 1602: point = 4018, n_alt = -1
   Insn 1601: point = 4018, n_alt = 0
   Insn 1600: point = 4019, n_alt = 0
   Insn 1599: point = 4021, n_alt = 0
   Insn 1598: point = 4023, n_alt = 0
   Insn 1597: point = 4025, n_alt = 0
   Insn 1596: point = 4027, n_alt = 0
   Insn 1595: point = 4029, n_alt = 0
   Insn 1594: point = 4030, n_alt = -2
   Insn 1593: point = 4032, n_alt = -2
   Insn 1592: point = 4034, n_alt = 0
   Insn 1591: point = 4036, n_alt = 0
   Insn 1590: point = 4037, n_alt = -2
   Insn 1589: point = 4039, n_alt = 0
   Insn 1588: point = 4041, n_alt = -2
   Insn 1587: point = 4042, n_alt = 1
   Insn 1586: point = 4044, n_alt = 0
  BB 119
   Insn 1584: point = 4045, n_alt = -1
   Insn 1583: point = 4045, n_alt = 0
   Insn 1582: point = 4046, n_alt = 0
  BB 118
   Insn 1579: point = 4047, n_alt = 0
   Insn 1578: point = 4047, n_alt = 3
   Insn 1577: point = 4047, n_alt = 2
   Insn 1576: point = 4047, n_alt = 2
   Insn 1575: point = 4047, n_alt = -2
   Insn 1574: point = 4048, n_alt = -2
   Insn 1573: point = 4049, n_alt = -2
   Insn 1572: point = 4050, n_alt = -2
   Insn 1571: point = 4051, n_alt = 3
   Insn 1570: point = 4052, n_alt = 3
   Insn 1569: point = 4053, n_alt = 3
   Insn 1568: point = 4054, n_alt = 3
   Insn 1567: point = 4055, n_alt = 0
   Insn 1566: point = 4055, n_alt = -2
   Insn 1565: point = 4056, n_alt = 3
   Insn 1564: point = 4057, n_alt = 0
   Insn 1563: point = 4057, n_alt = -2
   Insn 1562: point = 4058, n_alt = 2
   Insn 1561: point = 4058, n_alt = 2
   Insn 1560: point = 4058, n_alt = 3
   Insn 1559: point = 4059, n_alt = 0
   Insn 1558: point = 4059, n_alt = -2
   Insn 1557: point = 4060, n_alt = 3
   Insn 1556: point = 4061, n_alt = 1
   Insn 1555: point = 4061, n_alt = 1
   Insn 1554: point = 4061, n_alt = 1
   Insn 1553: point = 4061, n_alt = 5
  BB 117
   Insn 1550: point = 4061, n_alt = 1
  BB 116
   Insn 1548: point = 4061, n_alt = -1
   Insn 1547: point = 4061, n_alt = 0
   Insn 1546: point = 4062, n_alt = 0
   Insn 1545: point = 4063, n_alt = 1
   Insn 1544: point = 4064, n_alt = 0
   Insn 1543: point = 4065, n_alt = 0
   Insn 1542: point = 4066, n_alt = 1
   Insn 5854: point = 4067, n_alt = -2
	Hard reg 1 is preferable by r3000 with profit 1000
   Insn 1541: point = 4069, n_alt = 0
   Insn 5853: point = 4070, n_alt = -2
	Hard reg 1 is preferable by r3000 with profit 2000
   Insn 1540: point = 4072, n_alt = 2
   Insn 1539: point = 4073, n_alt = 2
   Insn 1538: point = 4074, n_alt = 2
   Insn 1537: point = 4075, n_alt = 0
   Insn 1536: point = 4075, n_alt = 0
   Insn 1535: point = 4075, n_alt = 3
   Insn 1534: point = 4075, n_alt = 2
   Insn 1533: point = 4075, n_alt = 2
   Insn 1532: point = 4075, n_alt = 4
   Insn 1531: point = 4075, n_alt = 4
   Insn 1530: point = 4075, n_alt = -2
   Insn 1529: point = 4076, n_alt = -2
   Insn 1528: point = 4077, n_alt = 0
   Insn 1527: point = 4077, n_alt = 0
   Insn 1526: point = 4077, n_alt = 3
   Insn 1525: point = 4078, n_alt = 3
   Insn 1524: point = 4079, n_alt = 0
   Insn 1523: point = 4079, n_alt = 3
   Insn 1522: point = 4079, n_alt = 4
   Insn 1521: point = 4079, n_alt = -2
   Insn 1520: point = 4080, n_alt = -2
   Insn 1519: point = 4081, n_alt = 4
   Insn 1518: point = 4081, n_alt = 4
   Insn 1517: point = 4081, n_alt = 3
   Insn 1516: point = 4082, n_alt = 3
   Insn 1515: point = 4083, n_alt = 1
   Insn 1514: point = 4084, n_alt = 0
   Insn 1513: point = 4086, n_alt = 0
   Insn 1512: point = 4088, n_alt = 0
   Insn 1511: point = 4090, n_alt = 0
   Insn 1510: point = 4092, n_alt = 0
   Insn 1509: point = 4094, n_alt = 0
   Insn 1508: point = 4095, n_alt = -2
   Insn 1507: point = 4097, n_alt = -2
   Insn 1506: point = 4099, n_alt = 0
   Insn 1505: point = 4101, n_alt = 0
   Insn 1504: point = 4102, n_alt = -2
   Insn 1503: point = 4104, n_alt = 0
   Insn 1502: point = 4106, n_alt = -2
   Insn 1501: point = 4107, n_alt = 1
   Insn 1500: point = 4109, n_alt = 0
  BB 115
   Insn 1498: point = 4110, n_alt = -1
   Insn 1497: point = 4110, n_alt = 0
   Insn 1496: point = 4111, n_alt = 0
   Insn 1495: point = 4113, n_alt = 0
   Insn 1494: point = 4115, n_alt = 0
   Insn 1493: point = 4117, n_alt = 0
   Insn 1492: point = 4119, n_alt = 0
   Insn 1491: point = 4121, n_alt = 0
   Insn 1490: point = 4122, n_alt = -2
   Insn 1489: point = 4124, n_alt = -2
   Insn 1488: point = 4126, n_alt = 0
   Insn 1487: point = 4128, n_alt = 0
   Insn 1486: point = 4129, n_alt = -2
   Insn 1485: point = 4131, n_alt = 0
   Insn 1484: point = 4133, n_alt = -2
   Insn 1483: point = 4134, n_alt = 1
   Insn 1482: point = 4136, n_alt = 0
  BB 114
   Insn 1480: point = 4137, n_alt = -1
   Insn 1479: point = 4137, n_alt = 0
   Insn 1478: point = 4138, n_alt = 0
  BB 113
   Insn 1475: point = 4139, n_alt = 0
   Insn 1474: point = 4139, n_alt = 3
   Insn 1473: point = 4139, n_alt = 2
   Insn 1472: point = 4139, n_alt = 2
   Insn 1471: point = 4139, n_alt = -2
   Insn 1470: point = 4140, n_alt = -2
   Insn 1469: point = 4141, n_alt = -2
   Insn 1468: point = 4142, n_alt = -2
   Insn 1467: point = 4143, n_alt = 3
   Insn 1466: point = 4144, n_alt = 3
   Insn 1465: point = 4145, n_alt = 3
   Insn 1464: point = 4146, n_alt = 3
   Insn 1463: point = 4147, n_alt = 0
   Insn 1462: point = 4147, n_alt = -2
   Insn 1461: point = 4148, n_alt = 3
   Insn 1460: point = 4149, n_alt = 0
   Insn 1459: point = 4149, n_alt = -2
   Insn 1458: point = 4150, n_alt = 2
   Insn 1457: point = 4150, n_alt = 2
   Insn 1456: point = 4150, n_alt = 3
   Insn 1455: point = 4151, n_alt = 0
   Insn 1454: point = 4151, n_alt = -2
   Insn 1453: point = 4152, n_alt = 3
   Insn 1452: point = 4153, n_alt = 1
   Insn 1451: point = 4153, n_alt = 1
   Insn 1450: point = 4153, n_alt = 1
   Insn 1449: point = 4153, n_alt = 5
  BB 112
   Insn 1446: point = 4153, n_alt = 1
  BB 111
   Insn 1444: point = 4153, n_alt = -1
   Insn 1443: point = 4153, n_alt = 0
   Insn 1442: point = 4154, n_alt = 0
   Insn 1441: point = 4155, n_alt = 1
   Insn 1440: point = 4156, n_alt = 0
   Insn 1439: point = 4157, n_alt = 0
   Insn 1438: point = 4158, n_alt = 1
   Insn 5852: point = 4159, n_alt = -2
	Hard reg 1 is preferable by r2999 with profit 1000
   Insn 1437: point = 4161, n_alt = 0
   Insn 5851: point = 4162, n_alt = -2
	Hard reg 1 is preferable by r2999 with profit 2000
   Insn 1436: point = 4164, n_alt = 2
   Insn 1435: point = 4165, n_alt = 2
   Insn 1434: point = 4166, n_alt = 2
   Insn 1433: point = 4167, n_alt = 0
   Insn 1432: point = 4167, n_alt = 0
   Insn 1431: point = 4167, n_alt = 3
   Insn 1430: point = 4167, n_alt = 2
   Insn 1429: point = 4167, n_alt = 2
   Insn 1428: point = 4167, n_alt = 4
   Insn 1427: point = 4167, n_alt = 4
   Insn 1426: point = 4167, n_alt = -2
   Insn 1425: point = 4168, n_alt = -2
   Insn 1424: point = 4169, n_alt = 0
   Insn 1423: point = 4169, n_alt = 0
   Insn 1422: point = 4169, n_alt = 3
   Insn 1421: point = 4170, n_alt = 3
   Insn 1420: point = 4171, n_alt = 0
   Insn 1419: point = 4171, n_alt = 3
   Insn 1418: point = 4171, n_alt = 4
   Insn 1417: point = 4171, n_alt = -2
   Insn 1416: point = 4172, n_alt = -2
   Insn 1415: point = 4173, n_alt = 4
   Insn 1414: point = 4173, n_alt = 4
   Insn 1413: point = 4173, n_alt = 3
   Insn 1412: point = 4174, n_alt = 3
   Insn 1411: point = 4175, n_alt = 1
   Insn 1410: point = 4176, n_alt = 0
   Insn 1409: point = 4178, n_alt = 0
   Insn 1408: point = 4180, n_alt = 0
   Insn 1407: point = 4182, n_alt = 0
   Insn 1406: point = 4184, n_alt = 0
   Insn 1405: point = 4186, n_alt = 0
   Insn 1404: point = 4187, n_alt = -2
   Insn 1403: point = 4189, n_alt = -2
   Insn 1402: point = 4191, n_alt = 0
   Insn 1401: point = 4193, n_alt = 0
   Insn 1400: point = 4194, n_alt = -2
   Insn 1399: point = 4196, n_alt = 0
   Insn 1398: point = 4198, n_alt = -2
   Insn 1397: point = 4199, n_alt = 1
   Insn 1396: point = 4201, n_alt = 0
  BB 110
   Insn 1394: point = 4202, n_alt = -1
   Insn 1393: point = 4202, n_alt = 0
   Insn 1392: point = 4203, n_alt = 0
   Insn 1391: point = 4205, n_alt = 0
   Insn 1390: point = 4207, n_alt = 0
   Insn 1389: point = 4209, n_alt = 0
   Insn 1388: point = 4211, n_alt = 0
   Insn 1387: point = 4213, n_alt = 0
   Insn 1386: point = 4214, n_alt = -2
   Insn 1385: point = 4216, n_alt = -2
   Insn 1384: point = 4218, n_alt = 0
   Insn 1383: point = 4220, n_alt = 0
   Insn 1382: point = 4221, n_alt = -2
   Insn 1381: point = 4223, n_alt = 0
   Insn 1380: point = 4225, n_alt = -2
   Insn 1379: point = 4226, n_alt = 1
   Insn 1378: point = 4228, n_alt = 0
  BB 109
   Insn 1376: point = 4229, n_alt = -1
   Insn 1375: point = 4229, n_alt = 0
   Insn 1374: point = 4230, n_alt = 0
  BB 107
   Insn 1365: point = 4231, n_alt = 1
  BB 374
   Insn 5730: point = 4231, n_alt = -1
  BB 82
   Insn 944: point = 4231, n_alt = -1
   Insn 943: point = 4231, n_alt = 0
   Insn 942: point = 4232, n_alt = 0
   Insn 941: point = 4234, n_alt = 0
   Insn 940: point = 4235, n_alt = 0
   Insn 939: point = 4236, n_alt = 0
  BB 106
   Insn 5619: point = 4237, n_alt = -1
   Insn 1359: point = 4237, n_alt = 1
   Insn 1358: point = 4238, n_alt = 0
   Insn 1357: point = 4240, n_alt = 0
  BB 377
   Insn 5739: point = 4241, n_alt = -1
  BB 84
   Insn 954: point = 4241, n_alt = -1
   Insn 953: point = 4241, n_alt = 0
   Insn 952: point = 4242, n_alt = 0
   Insn 951: point = 4244, n_alt = 0
   Insn 950: point = 4245, n_alt = 0
  BB 105
   Insn 5617: point = 4246, n_alt = -1
   Insn 1351: point = 4246, n_alt = 1
  BB 378
   Insn 5742: point = 4247, n_alt = -1
  BB 86
   Insn 962: point = 4248, n_alt = -1
   Insn 961: point = 4248, n_alt = 0
   Insn 960: point = 4249, n_alt = 0
   Insn 959: point = 4251, n_alt = 0
   Insn 958: point = 4252, n_alt = 0
  BB 104
   Insn 5615: point = 4253, n_alt = -1
   Insn 1345: point = 4253, n_alt = 1
  BB 103
   Insn 1342: point = 4254, n_alt = 8
   Insn 1341: point = 4255, n_alt = 7
   Insn 1340: point = 4256, n_alt = 4
   Insn 1339: point = 4257, n_alt = 3
   Insn 1338: point = 4259, n_alt = 0
   Insn 1337: point = 4261, n_alt = 0
   Insn 1336: point = 4263, n_alt = 0
   Insn 1335: point = 4264, n_alt = 0
   Insn 1334: point = 4266, n_alt = 0
   Insn 1333: point = 4268, n_alt = 0
   Insn 1332: point = 4270, n_alt = 0
   Insn 1331: point = 4271, n_alt = 1
   Insn 1330: point = 4273, n_alt = 0
   Insn 1329: point = 4275, n_alt = 0
  BB 102
   Insn 1324: point = 4277, n_alt = -1
   Insn 1323: point = 4277, n_alt = 1
   Insn 1322: point = 4278, n_alt = 7
  BB 101
   Insn 1317: point = 4280, n_alt = -1
   Insn 1316: point = 4280, n_alt = 1
   Insn 1315: point = 4281, n_alt = 7
  BB 100
   Insn 1314: point = 4283, n_alt = -1
   Insn 1313: point = 4283, n_alt = 1
   Insn 1312: point = 4284, n_alt = 7
   Insn 1311: point = 4285, n_alt = 7
   Insn 1310: point = 4287, n_alt = 4
   Insn 1309: point = 4288, n_alt = 3
   Insn 1308: point = 4290, n_alt = 0
   Insn 1307: point = 4292, n_alt = 0
   Insn 1306: point = 4294, n_alt = 0
   Insn 1305: point = 4295, n_alt = 0
   Insn 1304: point = 4297, n_alt = 0
   Insn 1303: point = 4299, n_alt = 0
   Insn 1302: point = 4301, n_alt = 0
   Insn 1301: point = 4302, n_alt = 1
   Insn 1300: point = 4304, n_alt = 0
   Insn 1299: point = 4306, n_alt = 0
   Insn 1298: point = 4308, n_alt = 0
   Insn 1297: point = 4309, n_alt = 8
   Insn 1296: point = 4310, n_alt = 7
   Insn 1295: point = 4311, n_alt = 4
   Insn 1294: point = 4312, n_alt = 3
   Insn 1293: point = 4314, n_alt = 0
   Insn 1292: point = 4316, n_alt = 0
   Insn 1291: point = 4318, n_alt = 0
   Insn 1290: point = 4319, n_alt = 0
   Insn 1289: point = 4321, n_alt = 0
   Insn 1288: point = 4323, n_alt = 0
   Insn 1287: point = 4325, n_alt = 0
   Insn 1286: point = 4326, n_alt = 1
   Insn 1285: point = 4328, n_alt = 0
   Insn 1284: point = 4330, n_alt = 0
  BB 99
   Insn 1279: point = 4332, n_alt = -1
   Insn 1278: point = 4332, n_alt = 1
   Insn 1277: point = 4333, n_alt = 7
  BB 98
   Insn 1272: point = 4335, n_alt = -1
   Insn 1271: point = 4335, n_alt = 1
   Insn 1270: point = 4336, n_alt = 7
  BB 97
   Insn 1267: point = 4338, n_alt = 8
   Insn 1266: point = 4339, n_alt = 7
   Insn 1265: point = 4340, n_alt = 4
   Insn 1264: point = 4341, n_alt = 3
   Insn 1263: point = 4343, n_alt = 0
   Insn 1262: point = 4345, n_alt = 0
   Insn 1261: point = 4347, n_alt = 0
   Insn 1260: point = 4348, n_alt = 0
   Insn 1259: point = 4350, n_alt = 0
   Insn 1258: point = 4352, n_alt = 0
   Insn 1257: point = 4354, n_alt = 0
   Insn 1256: point = 4355, n_alt = 1
   Insn 1255: point = 4357, n_alt = 0
   Insn 1254: point = 4359, n_alt = 0
  BB 96
   Insn 1249: point = 4361, n_alt = -1
   Insn 1248: point = 4361, n_alt = 1
   Insn 1247: point = 4362, n_alt = 7
   Insn 1246: point = 4363, n_alt = 7
  BB 94
   Insn 5613: point = 4365, n_alt = -1
   Insn 1223: point = 4365, n_alt = 8
   Insn 1222: point = 4366, n_alt = 7
   Insn 1221: point = 4367, n_alt = 4
   Insn 1220: point = 4368, n_alt = 3
   Insn 1219: point = 4370, n_alt = 0
   Insn 1218: point = 4372, n_alt = 0
   Insn 1217: point = 4374, n_alt = 0
   Insn 1216: point = 4375, n_alt = 0
   Insn 1215: point = 4377, n_alt = 0
   Insn 1214: point = 4379, n_alt = 0
   Insn 1213: point = 4381, n_alt = 0
   Insn 1212: point = 4382, n_alt = 1
   Insn 1211: point = 4384, n_alt = 0
   Insn 1210: point = 4386, n_alt = 0
  BB 95
   Insn 1241: point = 4388, n_alt = 8
   Insn 1240: point = 4389, n_alt = 7
   Insn 1239: point = 4390, n_alt = 4
   Insn 1238: point = 4391, n_alt = 3
   Insn 1237: point = 4393, n_alt = 0
   Insn 1236: point = 4395, n_alt = 0
   Insn 1235: point = 4397, n_alt = 0
   Insn 1234: point = 4398, n_alt = 0
   Insn 1233: point = 4400, n_alt = 0
   Insn 1232: point = 4402, n_alt = 0
   Insn 1231: point = 4404, n_alt = 0
   Insn 1230: point = 4405, n_alt = 1
   Insn 1229: point = 4407, n_alt = 0
   Insn 1228: point = 4409, n_alt = 0
  BB 93
   Insn 1204: point = 4411, n_alt = -1
   Insn 1203: point = 4411, n_alt = 1
   Insn 1202: point = 4412, n_alt = 7
  BB 92
   Insn 1200: point = 4414, n_alt = -1
   Insn 1199: point = 4414, n_alt = 1
   Insn 1198: point = 4415, n_alt = 7
   Insn 1197: point = 4416, n_alt = 7
   Insn 1196: point = 4417, n_alt = 8
   Insn 1195: point = 4418, n_alt = 2
   Insn 1194: point = 4420, n_alt = 7
   Insn 5850: point = 4421, n_alt = -2
	Hard reg 22 is preferable by r2998 with profit 1000
   Insn 1193: point = 4423, n_alt = 1
   Insn 5849: point = 4423, n_alt = -2
	Hard reg 22 is preferable by r2998 with profit 1000
	Hard reg 21 is preferable by r2998 with profit 1000
   Insn 1192: point = 4425, n_alt = 7
   Insn 1191: point = 4427, n_alt = 4
   Insn 1190: point = 4428, n_alt = 3
   Insn 1189: point = 4430, n_alt = 0
   Insn 1188: point = 4432, n_alt = 0
   Insn 1187: point = 4434, n_alt = 0
   Insn 1186: point = 4435, n_alt = 0
   Insn 1185: point = 4437, n_alt = 0
   Insn 1184: point = 4439, n_alt = 0
  BB 91
   Insn 1179: point = 4441, n_alt = -1
   Insn 1178: point = 4441, n_alt = 1
   Insn 1177: point = 4442, n_alt = 7
   Insn 1176: point = 4443, n_alt = 8
   Insn 1175: point = 4444, n_alt = 1
   Insn 1174: point = 4446, n_alt = 1
   Insn 1173: point = 4448, n_alt = 1
   Insn 1172: point = 4450, n_alt = -2
   Insn 1171: point = 4452, n_alt = 2
   Insn 1170: point = 4454, n_alt = 7
   Insn 1169: point = 4455, n_alt = 7
   Insn 1168: point = 4457, n_alt = 0
   Insn 1167: point = 4459, n_alt = 4
   Insn 1166: point = 4460, n_alt = 3
   Insn 1165: point = 4462, n_alt = 0
   Insn 1164: point = 4464, n_alt = 0
   Insn 1163: point = 4466, n_alt = 0
   Insn 1162: point = 4467, n_alt = 0
   Insn 1161: point = 4469, n_alt = 0
   Insn 1160: point = 4471, n_alt = 0
   Insn 1159: point = 4472, n_alt = 7
   Insn 1158: point = 4474, n_alt = 0
   Insn 1157: point = 4476, n_alt = 4
   Insn 1156: point = 4477, n_alt = 3
   Insn 1155: point = 4479, n_alt = 0
   Insn 1154: point = 4481, n_alt = 0
   Insn 1153: point = 4483, n_alt = 0
   Insn 1152: point = 4484, n_alt = 0
   Insn 1151: point = 4485, n_alt = 7
   Insn 1150: point = 4487, n_alt = 0
   Insn 1149: point = 4489, n_alt = 4
   Insn 1148: point = 4490, n_alt = 3
   Insn 1147: point = 4492, n_alt = 0
   Insn 1146: point = 4494, n_alt = 0
   Insn 1145: point = 4496, n_alt = 0
   Insn 1144: point = 4497, n_alt = 0
   Insn 1143: point = 4499, n_alt = 0
   Insn 1142: point = 4501, n_alt = 0
   Insn 1141: point = 4502, n_alt = 8
   Insn 1140: point = 4503, n_alt = 4
   Insn 1139: point = 4504, n_alt = 1
   Insn 1138: point = 4506, n_alt = 3
   Insn 1137: point = 4508, n_alt = 0
   Insn 1136: point = 4510, n_alt = 0
   Insn 1135: point = 4512, n_alt = 0
   Insn 1134: point = 4513, n_alt = 0
   Insn 1133: point = 4515, n_alt = 0
   Insn 1132: point = 4517, n_alt = 0
   Insn 1131: point = 4518, n_alt = -2
   Insn 1130: point = 4520, n_alt = 1
   Insn 1129: point = 4522, n_alt = 7
   Insn 1128: point = 4523, n_alt = 1
   Insn 1127: point = 4525, n_alt = 7
  BB 90
   Insn 1124: point = 4527, n_alt = 7
  BB 89
   Insn 1122: point = 4529, n_alt = -1
   Insn 1121: point = 4529, n_alt = 0
   Insn 1120: point = 4530, n_alt = 0
   Insn 1119: point = 4532, n_alt = 0
   Insn 1118: point = 4534, n_alt = 0
   Insn 1117: point = 4535, n_alt = 1
   Insn 1116: point = 4535, n_alt = 0
   Insn 1115: point = 4537, n_alt = 0
   Insn 1114: point = 4538, n_alt = 1
   Insn 1113: point = 4539, n_alt = 7
   Insn 1112: point = 4540, n_alt = 7
   Insn 1111: point = 4541, n_alt = 8
   Insn 1110: point = 4542, n_alt = 1
   Insn 5848: point = 4544, n_alt = 7
	   Creating copy r2997<-r3041@1000
   Insn 1109: point = 4546, n_alt = -2
   Insn 1108: point = 4547, n_alt = 0
   Insn 1107: point = 4547, n_alt = -2
   Insn 1106: point = 4548, n_alt = 2
   Insn 1105: point = 4550, n_alt = -2
   Insn 1104: point = 4552, n_alt = 2
   Insn 1103: point = 4554, n_alt = 7
   Insn 1102: point = 4555, n_alt = 7
   Insn 1101: point = 4556, n_alt = 1
   Insn 1100: point = 4558, n_alt = -2
   Insn 1099: point = 4560, n_alt = 2
   Insn 1098: point = 4562, n_alt = 7
   Insn 1097: point = 4563, n_alt = 7
   Insn 1096: point = 4564, n_alt = 1
   Insn 1095: point = 4566, n_alt = 7
   Insn 1094: point = 4567, n_alt = 7
   Insn 5847: point = 4568, n_alt = 8
	   Creating copy r2996->r3041@1000
   Insn 1093: point = 4570, n_alt = 2
   Insn 5846: point = 4570, n_alt = -2
	Hard reg 21 is preferable by r2996 with profit 1000
   Insn 1092: point = 4572, n_alt = 1
   Insn 1091: point = 4574, n_alt = 7
   Insn 1090: point = 4575, n_alt = 7
   Insn 1089: point = 4576, n_alt = 8
   Insn 1088: point = 4577, n_alt = 1
   Insn 1087: point = 4579, n_alt = 7
   Insn 1086: point = 4581, n_alt = 4
   Insn 1085: point = 4582, n_alt = 1
   Insn 1084: point = 4584, n_alt = 7
   Insn 1083: point = 4586, n_alt = 0
   Insn 1082: point = 4588, n_alt = 4
   Insn 1081: point = 4589, n_alt = 3
   Insn 1080: point = 4591, n_alt = 0
   Insn 1079: point = 4593, n_alt = 0
   Insn 1078: point = 4594, n_alt = 7
   Insn 1077: point = 4596, n_alt = 0
   Insn 1076: point = 4598, n_alt = 4
   Insn 1075: point = 4599, n_alt = 3
   Insn 1074: point = 4601, n_alt = 0
   Insn 1073: point = 4603, n_alt = 0
   Insn 1072: point = 4605, n_alt = 0
   Insn 1071: point = 4606, n_alt = 0
   Insn 1070: point = 4608, n_alt = 0
   Insn 1069: point = 4610, n_alt = 0
   Insn 1068: point = 4611, n_alt = 8
   Insn 1067: point = 4612, n_alt = 1
  BB 88
   Insn 1064: point = 4615, n_alt = 7
  BB 87
   Insn 1062: point = 4617, n_alt = -1
   Insn 1061: point = 4617, n_alt = 0
   Insn 1060: point = 4618, n_alt = 0
   Insn 1059: point = 4620, n_alt = 0
   Insn 1058: point = 4622, n_alt = 0
   Insn 1057: point = 4623, n_alt = 1
   Insn 1056: point = 4623, n_alt = 0
   Insn 1055: point = 4625, n_alt = 0
   Insn 1054: point = 4626, n_alt = 1
   Insn 1053: point = 4626, n_alt = 7
   Insn 1052: point = 4627, n_alt = 8
   Insn 1051: point = 4628, n_alt = 1
   Insn 1050: point = 4630, n_alt = 7
   Insn 1049: point = 4631, n_alt = -2
   Insn 1048: point = 4633, n_alt = 2
   Insn 1047: point = 4635, n_alt = 7
   Insn 1046: point = 4636, n_alt = 7
   Insn 1045: point = 4637, n_alt = 8
   Insn 1044: point = 4638, n_alt = 7
   Insn 1043: point = 4640, n_alt = 4
   Insn 1042: point = 4641, n_alt = 3
   Insn 1041: point = 4643, n_alt = 0
   Insn 1040: point = 4645, n_alt = 0
   Insn 1039: point = 4647, n_alt = 0
   Insn 1038: point = 4648, n_alt = 0
   Insn 1037: point = 4650, n_alt = 0
   Insn 1036: point = 4652, n_alt = 0
   Insn 1035: point = 4654, n_alt = 0
   Insn 1034: point = 4655, n_alt = 1
   Insn 1033: point = 4657, n_alt = 0
   Insn 1032: point = 4659, n_alt = 0
   Insn 1031: point = 4660, n_alt = 8
   Insn 1030: point = 4661, n_alt = 7
   Insn 1029: point = 4663, n_alt = 0
   Insn 1028: point = 4665, n_alt = 4
   Insn 1027: point = 4666, n_alt = 3
   Insn 1026: point = 4668, n_alt = 0
   Insn 1025: point = 4670, n_alt = 0
   Insn 1024: point = 4672, n_alt = 0
   Insn 1023: point = 4673, n_alt = 0
   Insn 1022: point = 4675, n_alt = 0
   Insn 1021: point = 4677, n_alt = 0
   Insn 1020: point = 4679, n_alt = 0
   Insn 1019: point = 4680, n_alt = 1
   Insn 1018: point = 4682, n_alt = 0
   Insn 1017: point = 4684, n_alt = 0
   Insn 1016: point = 4685, n_alt = 8
   Insn 1015: point = 4686, n_alt = 7
   Insn 1014: point = 4688, n_alt = 0
   Insn 1013: point = 4690, n_alt = 4
   Insn 1012: point = 4691, n_alt = 3
   Insn 1011: point = 4693, n_alt = 0
   Insn 1010: point = 4695, n_alt = 0
   Insn 1009: point = 4697, n_alt = 0
   Insn 1008: point = 4698, n_alt = 0
   Insn 1007: point = 4700, n_alt = 0
   Insn 1006: point = 4702, n_alt = 0
   Insn 1005: point = 4704, n_alt = 0
   Insn 1004: point = 4705, n_alt = 1
   Insn 1003: point = 4707, n_alt = 0
   Insn 1002: point = 4709, n_alt = 0
   Insn 1001: point = 4710, n_alt = 8
   Insn 1000: point = 4711, n_alt = 1
   Insn 999: point = 4713, n_alt = 7
   Insn 998: point = 4715, n_alt = 4
   Insn 997: point = 4716, n_alt = 3
   Insn 996: point = 4718, n_alt = 0
   Insn 995: point = 4720, n_alt = 0
   Insn 994: point = 4722, n_alt = 0
   Insn 993: point = 4723, n_alt = 0
   Insn 992: point = 4725, n_alt = 0
   Insn 991: point = 4727, n_alt = 0
   Insn 990: point = 4728, n_alt = 7
   Insn 989: point = 4730, n_alt = 0
   Insn 988: point = 4732, n_alt = 4
   Insn 987: point = 4733, n_alt = 3
   Insn 986: point = 4735, n_alt = 0
   Insn 985: point = 4737, n_alt = 0
   Insn 984: point = 4739, n_alt = 0
   Insn 983: point = 4740, n_alt = 0
   Insn 982: point = 4742, n_alt = 0
   Insn 981: point = 4744, n_alt = 0
   Insn 980: point = 4746, n_alt = 0
   Insn 979: point = 4747, n_alt = 1
   Insn 978: point = 4749, n_alt = 0
   Insn 977: point = 4751, n_alt = 0
   Insn 976: point = 4752, n_alt = 1
   Insn 5845: point = 4753, n_alt = -2
	Hard reg 0 is preferable by r2995 with profit 1000
   Insn 975: point = 4755, n_alt = 0
   Insn 5844: point = 4756, n_alt = -2
	Hard reg 0 is preferable by r2995 with profit 1000
	Hard reg 1 is preferable by r2995 with profit 1000
   Insn 974: point = 4758, n_alt = 0
   Insn 973: point = 4759, n_alt = 0
   Insn 972: point = 4761, n_alt = 0
   Insn 971: point = 4763, n_alt = 4
   Insn 970: point = 4764, n_alt = 3
   Insn 969: point = 4766, n_alt = 0
   Insn 968: point = 4768, n_alt = 0
   Insn 967: point = 4770, n_alt = 0
   Insn 966: point = 4771, n_alt = 0
   Insn 965: point = 4773, n_alt = 0
   Insn 964: point = 4775, n_alt = 0
  BB 85
   Insn 956: point = 4777, n_alt = 1
  BB 83
   Insn 948: point = 4778, n_alt = 1
   Insn 947: point = 4779, n_alt = 0
   Insn 946: point = 4780, n_alt = 0
  BB 81
   Insn 937: point = 4781, n_alt = 1
  BB 375
   Insn 5733: point = 4781, n_alt = -1
  BB 76
   Insn 905: point = 4781, n_alt = -1
   Insn 904: point = 4781, n_alt = 0
   Insn 903: point = 4782, n_alt = 0
   Insn 902: point = 4784, n_alt = 0
   Insn 901: point = 4785, n_alt = 0
  BB 80
   Insn 5610: point = 4786, n_alt = -1
   Insn 931: point = 4786, n_alt = 1
  BB 376
   Insn 5736: point = 4787, n_alt = -1
  BB 78
   Insn 913: point = 4788, n_alt = -1
   Insn 912: point = 4788, n_alt = 0
   Insn 911: point = 4789, n_alt = 0
   Insn 910: point = 4791, n_alt = 0
   Insn 909: point = 4792, n_alt = 0
  BB 79
   Insn 5608: point = 4793, n_alt = -1
   Insn 925: point = 4793, n_alt = 1
   Insn 924: point = 4793, n_alt = 8
   Insn 923: point = 4794, n_alt = 7
   Insn 922: point = 4795, n_alt = 4
   Insn 921: point = 4796, n_alt = 3
   Insn 920: point = 4798, n_alt = 0
   Insn 919: point = 4800, n_alt = 1
   Insn 918: point = 4802, n_alt = 0
   Insn 917: point = 4803, n_alt = 0
   Insn 916: point = 4805, n_alt = 1
   Insn 915: point = 4807, n_alt = 0
  BB 77
   Insn 907: point = 4809, n_alt = 1
  BB 75
   Insn 899: point = 4810, n_alt = 1
   Insn 898: point = 4811, n_alt = 0
   Insn 897: point = 4812, n_alt = 0
   Insn 896: point = 4813, n_alt = 8
   Insn 895: point = 4814, n_alt = 7
  BB 74
   Insn 892: point = 4815, n_alt = -1
   Insn 891: point = 4815, n_alt = 0
   Insn 890: point = 4816, n_alt = 0
  BB 73
   Insn 888: point = 4817, n_alt = -1
   Insn 887: point = 4817, n_alt = 0
   Insn 886: point = 4818, n_alt = 0
  BB 72
   Insn 884: point = 4819, n_alt = -1
   Insn 883: point = 4819, n_alt = 0
   Insn 882: point = 4820, n_alt = 0
  BB 71
   Insn 880: point = 4821, n_alt = -1
   Insn 879: point = 4821, n_alt = 0
   Insn 878: point = 4822, n_alt = 0
  BB 70
   Insn 876: point = 4823, n_alt = -1
   Insn 875: point = 4823, n_alt = 0
   Insn 874: point = 4824, n_alt = 0
  BB 69
   Insn 871: point = 4825, n_alt = -1
   Insn 870: point = 4825, n_alt = 0
   Insn 869: point = 4826, n_alt = 0
  BB 68
   Insn 867: point = 4827, n_alt = -1
   Insn 866: point = 4827, n_alt = 0
   Insn 865: point = 4828, n_alt = 0
  BB 67
   Insn 863: point = 4829, n_alt = -1
   Insn 862: point = 4829, n_alt = 0
   Insn 861: point = 4830, n_alt = 0
  BB 66
   Insn 859: point = 4831, n_alt = -1
   Insn 858: point = 4831, n_alt = 0
   Insn 857: point = 4832, n_alt = 0
  BB 65
   Insn 855: point = 4833, n_alt = -1
   Insn 854: point = 4833, n_alt = 0
   Insn 853: point = 4834, n_alt = 0
  BB 64
   Insn 851: point = 4835, n_alt = -1
   Insn 850: point = 4835, n_alt = 0
   Insn 849: point = 4836, n_alt = 0
  BB 63
   Insn 847: point = 4837, n_alt = -1
   Insn 846: point = 4837, n_alt = 0
   Insn 845: point = 4838, n_alt = 0
  BB 62
   Insn 843: point = 4839, n_alt = -1
   Insn 842: point = 4839, n_alt = 0
   Insn 841: point = 4840, n_alt = 0
  BB 61
   Insn 839: point = 4841, n_alt = -1
   Insn 838: point = 4841, n_alt = 0
   Insn 837: point = 4842, n_alt = 0
  BB 60
   Insn 835: point = 4843, n_alt = -1
   Insn 834: point = 4843, n_alt = 0
   Insn 833: point = 4844, n_alt = 0
  BB 59
   Insn 831: point = 4845, n_alt = -1
   Insn 830: point = 4845, n_alt = 0
   Insn 829: point = 4846, n_alt = 0
  BB 58
   Insn 827: point = 4847, n_alt = -1
   Insn 826: point = 4847, n_alt = 0
   Insn 825: point = 4848, n_alt = 0
  BB 57
   Insn 823: point = 4849, n_alt = -1
   Insn 822: point = 4849, n_alt = 0
   Insn 821: point = 4850, n_alt = 0
  BB 56
   Insn 819: point = 4851, n_alt = -1
   Insn 818: point = 4851, n_alt = 0
   Insn 817: point = 4852, n_alt = 0
  BB 55
   Insn 815: point = 4853, n_alt = -1
   Insn 814: point = 4853, n_alt = 0
   Insn 813: point = 4854, n_alt = 0
  BB 54
   Insn 811: point = 4855, n_alt = -1
   Insn 810: point = 4855, n_alt = 0
   Insn 809: point = 4856, n_alt = 0
  BB 53
   Insn 807: point = 4857, n_alt = -1
   Insn 806: point = 4857, n_alt = 0
   Insn 805: point = 4858, n_alt = 0
  BB 52
   Insn 803: point = 4859, n_alt = -1
   Insn 802: point = 4859, n_alt = 0
   Insn 801: point = 4860, n_alt = 0
  BB 51
   Insn 799: point = 4861, n_alt = -1
   Insn 798: point = 4861, n_alt = 0
   Insn 797: point = 4862, n_alt = 0
  BB 50
   Insn 795: point = 4863, n_alt = -1
   Insn 794: point = 4863, n_alt = 0
   Insn 793: point = 4864, n_alt = 0
  BB 49
   Insn 791: point = 4865, n_alt = -1
   Insn 790: point = 4865, n_alt = 0
   Insn 789: point = 4866, n_alt = 0
  BB 48
   Insn 787: point = 4867, n_alt = -1
   Insn 786: point = 4867, n_alt = 0
   Insn 785: point = 4868, n_alt = 0
  BB 47
   Insn 783: point = 4869, n_alt = -1
   Insn 782: point = 4869, n_alt = 0
   Insn 781: point = 4870, n_alt = 0
   Insn 780: point = 4871, n_alt = 1
  BB 370
   Insn 5718: point = 4871, n_alt = -1
  BB 39
   Insn 650: point = 4871, n_alt = -1
   Insn 649: point = 4871, n_alt = 0
   Insn 648: point = 4872, n_alt = 0
   Insn 647: point = 4874, n_alt = 0
   Insn 646: point = 4875, n_alt = 0
   Insn 645: point = 4876, n_alt = 0
  BB 46
   Insn 5606: point = 4877, n_alt = -1
   Insn 774: point = 4877, n_alt = 1
   Insn 773: point = 4878, n_alt = 0
   Insn 772: point = 4880, n_alt = 0
  BB 371
   Insn 5721: point = 4881, n_alt = -1
  BB 41
   Insn 660: point = 4881, n_alt = -1
   Insn 659: point = 4881, n_alt = 0
   Insn 658: point = 4882, n_alt = 0
   Insn 657: point = 4884, n_alt = 0
   Insn 656: point = 4885, n_alt = 0
  BB 45
   Insn 5604: point = 4886, n_alt = -1
   Insn 766: point = 4886, n_alt = 1
  BB 372
   Insn 5724: point = 4887, n_alt = -1
  BB 43
   Insn 668: point = 4888, n_alt = -1
   Insn 667: point = 4888, n_alt = 0
   Insn 666: point = 4889, n_alt = 0
   Insn 665: point = 4891, n_alt = 0
   Insn 664: point = 4892, n_alt = 0
  BB 44
   Insn 5602: point = 4893, n_alt = -1
   Insn 760: point = 4893, n_alt = 1
   Insn 759: point = 4893, n_alt = 8
   Insn 758: point = 4894, n_alt = 4
   Insn 757: point = 4895, n_alt = 1
   Insn 756: point = 4897, n_alt = 7
   Insn 755: point = 4898, n_alt = 3
   Insn 754: point = 4900, n_alt = 0
   Insn 753: point = 4902, n_alt = 1
   Insn 752: point = 4904, n_alt = 0
   Insn 751: point = 4905, n_alt = 0
   Insn 750: point = 4907, n_alt = 0
   Insn 749: point = 4909, n_alt = 1
   Insn 748: point = 4911, n_alt = 0
   Insn 747: point = 4912, n_alt = 1
   Insn 746: point = 4914, n_alt = 1
   Insn 745: point = 4916, n_alt = 0
   Insn 744: point = 4917, n_alt = -2
   Insn 743: point = 4919, n_alt = 1
   Insn 742: point = 4921, n_alt = 7
   Insn 741: point = 4923, n_alt = 0
   Insn 740: point = 4925, n_alt = 4
   Insn 739: point = 4926, n_alt = 3
   Insn 738: point = 4928, n_alt = 0
   Insn 737: point = 4930, n_alt = 1
   Insn 736: point = 4932, n_alt = 0
   Insn 735: point = 4933, n_alt = 0
   Insn 734: point = 4935, n_alt = 0
   Insn 733: point = 4937, n_alt = 1
   Insn 732: point = 4939, n_alt = 0
   Insn 731: point = 4940, n_alt = 1
   Insn 730: point = 4942, n_alt = 1
   Insn 729: point = 4944, n_alt = 0
   Insn 728: point = 4945, n_alt = 7
   Insn 727: point = 4947, n_alt = 0
   Insn 726: point = 4949, n_alt = 4
   Insn 725: point = 4950, n_alt = 3
   Insn 724: point = 4952, n_alt = 0
   Insn 723: point = 4954, n_alt = 1
   Insn 722: point = 4956, n_alt = 0
   Insn 721: point = 4957, n_alt = 0
   Insn 720: point = 4959, n_alt = 0
   Insn 719: point = 4961, n_alt = 1
   Insn 718: point = 4963, n_alt = 0
   Insn 717: point = 4964, n_alt = 1
   Insn 716: point = 4966, n_alt = 1
   Insn 715: point = 4968, n_alt = 0
   Insn 714: point = 4970, n_alt = 0
   Insn 713: point = 4971, n_alt = 8
   Insn 712: point = 4972, n_alt = 4
   Insn 711: point = 4973, n_alt = 1
   Insn 710: point = 4975, n_alt = 7
   Insn 709: point = 4976, n_alt = 3
   Insn 708: point = 4978, n_alt = 0
   Insn 707: point = 4980, n_alt = 1
   Insn 706: point = 4982, n_alt = 0
   Insn 705: point = 4983, n_alt = 0
   Insn 704: point = 4985, n_alt = 0
   Insn 703: point = 4987, n_alt = 1
   Insn 702: point = 4989, n_alt = 0
   Insn 701: point = 4990, n_alt = 1
   Insn 700: point = 4992, n_alt = 1
   Insn 699: point = 4994, n_alt = 0
   Insn 698: point = 4995, n_alt = -2
   Insn 697: point = 4997, n_alt = 1
   Insn 696: point = 4999, n_alt = 7
   Insn 695: point = 5001, n_alt = 4
   Insn 694: point = 5002, n_alt = 3
   Insn 693: point = 5004, n_alt = 0
   Insn 692: point = 5006, n_alt = 1
   Insn 691: point = 5008, n_alt = 0
   Insn 690: point = 5009, n_alt = 0
   Insn 689: point = 5011, n_alt = 0
   Insn 688: point = 5013, n_alt = 1
   Insn 687: point = 5015, n_alt = 0
   Insn 686: point = 5016, n_alt = 1
   Insn 685: point = 5018, n_alt = 1
   Insn 684: point = 5020, n_alt = 0
   Insn 683: point = 5021, n_alt = 7
   Insn 682: point = 5023, n_alt = 4
   Insn 681: point = 5024, n_alt = 3
   Insn 680: point = 5026, n_alt = 0
   Insn 679: point = 5028, n_alt = 1
   Insn 678: point = 5030, n_alt = 0
   Insn 677: point = 5031, n_alt = 0
   Insn 676: point = 5033, n_alt = 0
   Insn 675: point = 5035, n_alt = 1
   Insn 674: point = 5037, n_alt = 0
   Insn 673: point = 5038, n_alt = 1
   Insn 672: point = 5040, n_alt = 1
   Insn 671: point = 5042, n_alt = 0
   Insn 670: point = 5044, n_alt = 0
  BB 42
   Insn 662: point = 5046, n_alt = 1
  BB 40
   Insn 654: point = 5047, n_alt = 1
   Insn 653: point = 5048, n_alt = 0
   Insn 652: point = 5049, n_alt = 0
  BB 38
   Insn 643: point = 5050, n_alt = 1
  BB 368
   Insn 5712: point = 5050, n_alt = -1
  BB 27
   Insn 511: point = 5050, n_alt = -1
   Insn 510: point = 5050, n_alt = 0
   Insn 509: point = 5051, n_alt = 0
   Insn 508: point = 5053, n_alt = 0
   Insn 507: point = 5054, n_alt = 0
  BB 37
   Insn 5600: point = 5055, n_alt = -1
   Insn 637: point = 5055, n_alt = 1
  BB 369
   Insn 5715: point = 5056, n_alt = -1
  BB 35
   Insn 603: point = 5057, n_alt = -1
   Insn 602: point = 5057, n_alt = 0
   Insn 601: point = 5058, n_alt = 0
   Insn 600: point = 5060, n_alt = 0
   Insn 599: point = 5061, n_alt = 0
   Insn 598: point = 5062, n_alt = 0
  BB 36
   Insn 5598: point = 5064, n_alt = -1
   Insn 631: point = 5064, n_alt = 1
   Insn 630: point = 5065, n_alt = 0
   Insn 629: point = 5067, n_alt = 0
   Insn 628: point = 5068, n_alt = 8
   Insn 627: point = 5069, n_alt = 0
   Insn 626: point = 5071, n_alt = 4
   Insn 625: point = 5072, n_alt = 1
   Insn 624: point = 5074, n_alt = 7
   Insn 623: point = 5075, n_alt = 3
   Insn 622: point = 5077, n_alt = 0
   Insn 621: point = 5079, n_alt = 0
   Insn 620: point = 5081, n_alt = 0
   Insn 619: point = 5082, n_alt = 0
   Insn 618: point = 5084, n_alt = 0
   Insn 617: point = 5086, n_alt = 0
   Insn 616: point = 5088, n_alt = 0
   Insn 615: point = 5089, n_alt = 1
   Insn 614: point = 5091, n_alt = 0
   Insn 613: point = 5093, n_alt = 0
   Insn 612: point = 5095, n_alt = 0
   Insn 611: point = 5096, n_alt = 7
   Insn 610: point = 5098, n_alt = 0
   Insn 609: point = 5100, n_alt = 4
   Insn 608: point = 5101, n_alt = 3
   Insn 607: point = 5103, n_alt = 0
   Insn 606: point = 5105, n_alt = 0
   Insn 605: point = 5107, n_alt = 0
  BB 34
   Insn 596: point = 5109, n_alt = 1
   Insn 595: point = 5110, n_alt = 0
   Insn 594: point = 5111, n_alt = 1
   Insn 593: point = 5112, n_alt = 0
   Insn 592: point = 5114, n_alt = 0
   Insn 591: point = 5116, n_alt = 0
   Insn 590: point = 5118, n_alt = 4
   Insn 589: point = 5119, n_alt = 3
   Insn 588: point = 5121, n_alt = 0
   Insn 587: point = 5123, n_alt = 0
   Insn 586: point = 5125, n_alt = 0
   Insn 585: point = 5126, n_alt = 0
   Insn 584: point = 5128, n_alt = 0
   Insn 583: point = 5130, n_alt = 0
   Insn 582: point = 5131, n_alt = 1
   Insn 581: point = 5132, n_alt = 0
   Insn 580: point = 5134, n_alt = 0
   Insn 576: point = 5135, n_alt = 1
   Insn 575: point = 5137, n_alt = 0
  BB 31
   Insn 5596: point = 5139, n_alt = -1
   Insn 563: point = 5139, n_alt = 1
   Insn 562: point = 5139, n_alt = 1
   Insn 561: point = 5140, n_alt = 0
   Insn 560: point = 5142, n_alt = 0
   Insn 556: point = 5143, n_alt = 1
   Insn 555: point = 5145, n_alt = 0
  BB 29
   Insn 5594: point = 5147, n_alt = -1
   Insn 547: point = 5147, n_alt = 1
   Insn 546: point = 5147, n_alt = 1
   Insn 545: point = 5148, n_alt = 0
   Insn 544: point = 5150, n_alt = 0
   Insn 543: point = 5152, n_alt = 0
   Insn 542: point = 5153, n_alt = 1
   Insn 541: point = 5155, n_alt = 0
  BB 33
   Insn 572: point = 5157, n_alt = 1
   Insn 571: point = 5157, n_alt = 1
  BB 32
   Insn 569: point = 5158, n_alt = -1
   Insn 568: point = 5158, n_alt = 1
  BB 30
   Insn 553: point = 5159, n_alt = -1
   Insn 552: point = 5159, n_alt = 1
  BB 28
   Insn 539: point = 5160, n_alt = -1
   Insn 538: point = 5160, n_alt = 0
   Insn 537: point = 5160, n_alt = 1
   Insn 5843: point = 5161, n_alt = -2
	Hard reg 0 is preferable by r2994 with profit 1000
   Insn 536: point = 5163, n_alt = 0
   Insn 5842: point = 5164, n_alt = -2
	Hard reg 0 is preferable by r2994 with profit 1000
	Hard reg 2 is preferable by r2994 with profit 1000
   Insn 535: point = 5166, n_alt = 1
   Insn 5841: point = 5168, n_alt = -2
	Hard reg 0 is preferable by r2993 with profit 1000
   Insn 534: point = 5170, n_alt = 0
   Insn 5840: point = 5171, n_alt = -2
	Hard reg 0 is preferable by r2993 with profit 1000
	Hard reg 1 is preferable by r2993 with profit 1000
   Insn 5839: point = 5173, n_alt = -2
	Hard reg 0 is preferable by r2992 with profit 1000
   Insn 533: point = 5175, n_alt = 1
   Insn 5838: point = 5175, n_alt = -2
   Insn 5837: point = 5176, n_alt = -2
	Hard reg 1 is preferable by r2991 with profit 1000
   Insn 532: point = 5178, n_alt = 0
   Insn 5836: point = 5178, n_alt = -2
	Hard reg 1 is preferable by r2991 with profit 1000
	Hard reg 0 is preferable by r2991 with profit 1000
   Insn 531: point = 5180, n_alt = 3
   Insn 530: point = 5182, n_alt = 0
   Insn 5835: point = 5184, n_alt = -2
   Insn 529: point = 5185, n_alt = 0
   Insn 528: point = 5186, n_alt = 0
   Insn 527: point = 5187, n_alt = 1
   Insn 5834: point = 5188, n_alt = -2
	Hard reg 0 is preferable by r2989 with profit 1000
   Insn 526: point = 5190, n_alt = 0
   Insn 5833: point = 5191, n_alt = -2
	Hard reg 0 is preferable by r2989 with profit 1000
	Hard reg 1 is preferable by r2989 with profit 1000
   Insn 5832: point = 5193, n_alt = -2
	Hard reg 0 is preferable by r2988 with profit 1000
   Insn 525: point = 5195, n_alt = 1
   Insn 5831: point = 5195, n_alt = -2
	Hard reg 0 is preferable by r2988 with profit 1000
	Hard reg 2 is preferable by r2988 with profit 1000
   Insn 5830: point = 5197, n_alt = -2
	Hard reg 1 is preferable by r2987 with profit 1000
   Insn 524: point = 5199, n_alt = 0
   Insn 5829: point = 5199, n_alt = -2
	Hard reg 1 is preferable by r2987 with profit 1000
	Hard reg 0 is preferable by r2987 with profit 1000
   Insn 523: point = 5201, n_alt = 3
   Insn 522: point = 5203, n_alt = 0
   Insn 5828: point = 5205, n_alt = -2
   Insn 521: point = 5206, n_alt = 0
   Insn 520: point = 5207, n_alt = 0
   Insn 519: point = 5208, n_alt = 1
   Insn 518: point = 5209, n_alt = 0
   Insn 517: point = 5211, n_alt = 0
   Insn 516: point = 5213, n_alt = 4
   Insn 515: point = 5214, n_alt = 3
   Insn 514: point = 5216, n_alt = 0
   Insn 513: point = 5218, n_alt = 0
  BB 26
   Insn 505: point = 5220, n_alt = 1
   Insn 504: point = 5220, n_alt = 0
   Insn 503: point = 5221, n_alt = 1
   Insn 502: point = 5222, n_alt = 0
   Insn 501: point = 5224, n_alt = 4
  BB 365
   Insn 5703: point = 5225, n_alt = -1
  BB 18
   Insn 315: point = 5225, n_alt = -1
   Insn 314: point = 5225, n_alt = 0
   Insn 313: point = 5226, n_alt = 0
   Insn 312: point = 5228, n_alt = 0
   Insn 311: point = 5229, n_alt = 0
   Insn 310: point = 5230, n_alt = 0
  BB 25
   Insn 5592: point = 5231, n_alt = -1
   Insn 495: point = 5231, n_alt = 1
   Insn 494: point = 5232, n_alt = 0
   Insn 493: point = 5234, n_alt = 0
  BB 366
   Insn 5706: point = 5235, n_alt = -1
  BB 20
   Insn 325: point = 5235, n_alt = -1
   Insn 324: point = 5235, n_alt = 0
   Insn 323: point = 5236, n_alt = 0
   Insn 322: point = 5238, n_alt = 0
   Insn 321: point = 5239, n_alt = 0
  BB 24
   Insn 5590: point = 5240, n_alt = -1
   Insn 487: point = 5240, n_alt = 1
  BB 367
   Insn 5709: point = 5241, n_alt = -1
  BB 22
   Insn 333: point = 5242, n_alt = -1
   Insn 332: point = 5242, n_alt = 0
   Insn 331: point = 5243, n_alt = 0
   Insn 330: point = 5245, n_alt = 0
   Insn 329: point = 5246, n_alt = 0
  BB 23
   Insn 5588: point = 5247, n_alt = -1
   Insn 481: point = 5247, n_alt = 1
   Insn 480: point = 5247, n_alt = 8
   Insn 479: point = 5248, n_alt = 4
   Insn 478: point = 5249, n_alt = 7
   Insn 477: point = 5251, n_alt = 4
   Insn 476: point = 5252, n_alt = 3
   Insn 475: point = 5254, n_alt = 0
   Insn 474: point = 5256, n_alt = 1
   Insn 473: point = 5258, n_alt = 0
   Insn 472: point = 5259, n_alt = 0
   Insn 471: point = 5261, n_alt = 1
   Insn 470: point = 5263, n_alt = 0
   Insn 469: point = 5264, n_alt = 3
   Insn 468: point = 5266, n_alt = 0
   Insn 467: point = 5268, n_alt = 1
   Insn 466: point = 5270, n_alt = 0
   Insn 465: point = 5271, n_alt = 0
   Insn 464: point = 5273, n_alt = 1
   Insn 463: point = 5275, n_alt = 0
   Insn 462: point = 5276, n_alt = 8
   Insn 461: point = 5277, n_alt = 0
   Insn 460: point = 5279, n_alt = 4
   Insn 459: point = 5280, n_alt = 1
   Insn 458: point = 5282, n_alt = 7
   Insn 457: point = 5283, n_alt = 3
   Insn 456: point = 5285, n_alt = 0
   Insn 455: point = 5287, n_alt = 1
   Insn 454: point = 5289, n_alt = 0
   Insn 453: point = 5290, n_alt = 0
   Insn 452: point = 5292, n_alt = 0
   Insn 451: point = 5294, n_alt = 1
   Insn 450: point = 5296, n_alt = 0
   Insn 449: point = 5297, n_alt = 1
   Insn 448: point = 5299, n_alt = 1
   Insn 447: point = 5301, n_alt = 0
   Insn 446: point = 5302, n_alt = 7
   Insn 445: point = 5304, n_alt = 4
   Insn 444: point = 5305, n_alt = 3
   Insn 443: point = 5307, n_alt = 0
   Insn 442: point = 5309, n_alt = 1
   Insn 441: point = 5311, n_alt = 0
   Insn 440: point = 5312, n_alt = 0
   Insn 439: point = 5314, n_alt = 1
   Insn 438: point = 5316, n_alt = 0
   Insn 437: point = 5317, n_alt = 8
   Insn 436: point = 5318, n_alt = 4
   Insn 435: point = 5319, n_alt = 1
   Insn 434: point = 5321, n_alt = 3
   Insn 433: point = 5323, n_alt = 0
   Insn 432: point = 5325, n_alt = 1
   Insn 431: point = 5327, n_alt = 0
   Insn 430: point = 5328, n_alt = 0
   Insn 429: point = 5330, n_alt = 1
   Insn 428: point = 5332, n_alt = 0
   Insn 427: point = 5333, n_alt = 7
   Insn 426: point = 5335, n_alt = 4
   Insn 425: point = 5336, n_alt = 3
   Insn 424: point = 5338, n_alt = 0
   Insn 423: point = 5340, n_alt = 1
   Insn 422: point = 5342, n_alt = 0
   Insn 421: point = 5343, n_alt = 0
   Insn 420: point = 5345, n_alt = 1
   Insn 419: point = 5347, n_alt = 0
   Insn 418: point = 5348, n_alt = 1
   Insn 417: point = 5350, n_alt = -2
   Insn 416: point = 5352, n_alt = 2
   Insn 415: point = 5354, n_alt = 7
   Insn 414: point = 5356, n_alt = 0
   Insn 413: point = 5358, n_alt = 4
   Insn 412: point = 5359, n_alt = 3
   Insn 411: point = 5361, n_alt = 0
   Insn 410: point = 5363, n_alt = 1
   Insn 409: point = 5365, n_alt = 0
   Insn 408: point = 5366, n_alt = 0
   Insn 407: point = 5368, n_alt = 0
   Insn 406: point = 5370, n_alt = 1
   Insn 405: point = 5372, n_alt = 0
   Insn 404: point = 5373, n_alt = 1
   Insn 403: point = 5375, n_alt = 1
   Insn 402: point = 5377, n_alt = 0
   Insn 401: point = 5378, n_alt = 7
   Insn 400: point = 5380, n_alt = 0
   Insn 399: point = 5382, n_alt = 4
   Insn 398: point = 5383, n_alt = 3
   Insn 397: point = 5385, n_alt = 0
   Insn 396: point = 5387, n_alt = 1
   Insn 395: point = 5389, n_alt = 0
   Insn 394: point = 5390, n_alt = 0
   Insn 393: point = 5392, n_alt = 0
   Insn 392: point = 5394, n_alt = 1
   Insn 391: point = 5396, n_alt = 0
   Insn 390: point = 5397, n_alt = 1
   Insn 389: point = 5399, n_alt = 1
   Insn 388: point = 5401, n_alt = 0
   Insn 387: point = 5403, n_alt = 0
   Insn 386: point = 5404, n_alt = 1
   Insn 385: point = 5406, n_alt = 7
   Insn 384: point = 5408, n_alt = 4
   Insn 383: point = 5409, n_alt = 1
   Insn 382: point = 5411, n_alt = -2
   Insn 381: point = 5413, n_alt = 1
   Insn 380: point = 5415, n_alt = 7
   Insn 379: point = 5416, n_alt = 1
   Insn 378: point = 5418, n_alt = 7
   Insn 377: point = 5419, n_alt = 7
   Insn 376: point = 5421, n_alt = 0
   Insn 375: point = 5423, n_alt = 4
   Insn 374: point = 5424, n_alt = 3
   Insn 373: point = 5426, n_alt = 0
   Insn 372: point = 5428, n_alt = 1
   Insn 371: point = 5430, n_alt = 0
   Insn 370: point = 5431, n_alt = 0
   Insn 369: point = 5433, n_alt = 0
   Insn 368: point = 5435, n_alt = 1
   Insn 367: point = 5437, n_alt = 0
   Insn 366: point = 5438, n_alt = 1
   Insn 365: point = 5440, n_alt = 1
   Insn 364: point = 5442, n_alt = 0
   Insn 363: point = 5443, n_alt = 1
   Insn 362: point = 5445, n_alt = 7
   Insn 361: point = 5447, n_alt = 0
   Insn 360: point = 5449, n_alt = 4
   Insn 359: point = 5450, n_alt = 3
   Insn 358: point = 5452, n_alt = 0
   Insn 357: point = 5454, n_alt = 1
   Insn 356: point = 5456, n_alt = 0
   Insn 355: point = 5457, n_alt = 0
   Insn 354: point = 5459, n_alt = 0
   Insn 353: point = 5461, n_alt = 1
   Insn 352: point = 5463, n_alt = 0
   Insn 351: point = 5464, n_alt = 1
   Insn 350: point = 5466, n_alt = 1
   Insn 349: point = 5468, n_alt = 0
   Insn 348: point = 5469, n_alt = 7
   Insn 347: point = 5471, n_alt = 0
   Insn 346: point = 5473, n_alt = 4
   Insn 345: point = 5474, n_alt = 3
   Insn 344: point = 5476, n_alt = 0
   Insn 343: point = 5478, n_alt = 1
   Insn 342: point = 5480, n_alt = 0
   Insn 341: point = 5481, n_alt = 0
   Insn 340: point = 5483, n_alt = 0
   Insn 339: point = 5485, n_alt = 1
   Insn 338: point = 5487, n_alt = 0
   Insn 337: point = 5488, n_alt = 1
   Insn 336: point = 5490, n_alt = 1
   Insn 335: point = 5492, n_alt = 0
  BB 21
   Insn 327: point = 5494, n_alt = 1
  BB 19
   Insn 319: point = 5495, n_alt = 1
   Insn 318: point = 5496, n_alt = 0
   Insn 317: point = 5497, n_alt = 0
  BB 17
   Insn 308: point = 5498, n_alt = 1
  BB 363
   Insn 5697: point = 5498, n_alt = -1
  BB 12
   Insn 245: point = 5498, n_alt = -1
   Insn 244: point = 5498, n_alt = 0
   Insn 243: point = 5499, n_alt = 0
   Insn 242: point = 5501, n_alt = 0
   Insn 241: point = 5502, n_alt = 0
  BB 16
   Insn 5586: point = 5503, n_alt = -1
   Insn 302: point = 5503, n_alt = 1
  BB 364
   Insn 5700: point = 5504, n_alt = -1
  BB 14
   Insn 253: point = 5505, n_alt = -1
   Insn 252: point = 5505, n_alt = 0
   Insn 251: point = 5506, n_alt = 0
   Insn 250: point = 5508, n_alt = 0
   Insn 249: point = 5509, n_alt = 0
  BB 15
   Insn 5584: point = 5510, n_alt = -1
   Insn 296: point = 5510, n_alt = 1
   Insn 295: point = 5510, n_alt = 8
   Insn 294: point = 5511, n_alt = 4
   Insn 293: point = 5512, n_alt = 7
   Insn 292: point = 5514, n_alt = 0
   Insn 291: point = 5516, n_alt = 4
   Insn 290: point = 5517, n_alt = 3
   Insn 289: point = 5519, n_alt = 0
   Insn 288: point = 5521, n_alt = 1
   Insn 287: point = 5523, n_alt = 0
   Insn 286: point = 5524, n_alt = 0
   Insn 285: point = 5526, n_alt = 1
   Insn 284: point = 5528, n_alt = 0
   Insn 283: point = 5529, n_alt = 3
   Insn 282: point = 5531, n_alt = 0
   Insn 281: point = 5533, n_alt = 1
   Insn 280: point = 5535, n_alt = 0
   Insn 279: point = 5536, n_alt = 0
   Insn 278: point = 5538, n_alt = 1
   Insn 277: point = 5540, n_alt = 0
   Insn 276: point = 5541, n_alt = 8
   Insn 275: point = 5542, n_alt = 0
   Insn 274: point = 5544, n_alt = 4
   Insn 273: point = 5545, n_alt = 1
   Insn 272: point = 5547, n_alt = 7
   Insn 271: point = 5548, n_alt = 3
   Insn 270: point = 5550, n_alt = 0
   Insn 269: point = 5552, n_alt = 1
   Insn 268: point = 5554, n_alt = 0
   Insn 267: point = 5555, n_alt = 0
   Insn 266: point = 5557, n_alt = 1
   Insn 265: point = 5559, n_alt = 0
   Insn 264: point = 5560, n_alt = 7
   Insn 263: point = 5562, n_alt = 0
   Insn 262: point = 5564, n_alt = 4
   Insn 261: point = 5565, n_alt = 3
   Insn 260: point = 5567, n_alt = 0
   Insn 259: point = 5569, n_alt = 1
   Insn 258: point = 5571, n_alt = 0
   Insn 257: point = 5572, n_alt = 0
   Insn 256: point = 5574, n_alt = 1
   Insn 255: point = 5576, n_alt = 0
  BB 13
   Insn 247: point = 5578, n_alt = 1
  BB 11
   Insn 239: point = 5579, n_alt = 1
   Insn 238: point = 5580, n_alt = 0
   Insn 237: point = 5581, n_alt = 0
   Insn 236: point = 5582, n_alt = 0
   Insn 235: point = 5582, n_alt = 3
  BB 10
   Insn 232: point = 5582, n_alt = 0
   Insn 231: point = 5582, n_alt = 3
   Insn 230: point = 5582, n_alt = 2
   Insn 229: point = 5582, n_alt = 2
   Insn 228: point = 5582, n_alt = -2
   Insn 227: point = 5583, n_alt = -2
   Insn 226: point = 5584, n_alt = -2
   Insn 225: point = 5585, n_alt = -2
   Insn 224: point = 5586, n_alt = 3
   Insn 223: point = 5587, n_alt = 3
   Insn 222: point = 5588, n_alt = 3
   Insn 221: point = 5589, n_alt = 3
   Insn 220: point = 5591, n_alt = 0
   Insn 219: point = 5593, n_alt = 0
   Insn 218: point = 5595, n_alt = -2
   Insn 217: point = 5597, n_alt = -2
   Insn 216: point = 5599, n_alt = 0
   Insn 215: point = 5601, n_alt = 0
   Insn 214: point = 5602, n_alt = -2
   Insn 213: point = 5604, n_alt = 0
   Insn 212: point = 5606, n_alt = -2
   Insn 211: point = 5607, n_alt = 3
   Insn 210: point = 5609, n_alt = 0
   Insn 209: point = 5611, n_alt = 0
   Insn 208: point = 5612, n_alt = 0
   Insn 207: point = 5612, n_alt = -2
   Insn 206: point = 5613, n_alt = 3
   Insn 205: point = 5614, n_alt = 0
   Insn 204: point = 5614, n_alt = -2
   Insn 203: point = 5615, n_alt = 2
   Insn 202: point = 5615, n_alt = 2
   Insn 201: point = 5615, n_alt = 3
   Insn 200: point = 5616, n_alt = 0
   Insn 199: point = 5616, n_alt = -2
   Insn 198: point = 5617, n_alt = 3
   Insn 197: point = 5618, n_alt = 1
   Insn 196: point = 5618, n_alt = 1
   Insn 195: point = 5618, n_alt = 1
   Insn 194: point = 5618, n_alt = 5
   Insn 193: point = 5618, n_alt = 0
   Insn 192: point = 5619, n_alt = 1
   Insn 5827: point = 5620, n_alt = -2
	Hard reg 1 is preferable by r2985 with profit 1000
   Insn 191: point = 5622, n_alt = 0
   Insn 5826: point = 5623, n_alt = -2
	Hard reg 1 is preferable by r2985 with profit 2000
   Insn 190: point = 5625, n_alt = 2
   Insn 189: point = 5626, n_alt = 2
   Insn 188: point = 5627, n_alt = 2
   Insn 187: point = 5628, n_alt = 0
   Insn 186: point = 5628, n_alt = 0
   Insn 185: point = 5628, n_alt = 3
   Insn 184: point = 5628, n_alt = 2
   Insn 183: point = 5628, n_alt = 2
   Insn 182: point = 5628, n_alt = 4
   Insn 181: point = 5628, n_alt = 4
   Insn 180: point = 5628, n_alt = -2
   Insn 179: point = 5629, n_alt = -2
   Insn 178: point = 5630, n_alt = 0
   Insn 177: point = 5630, n_alt = 0
   Insn 176: point = 5630, n_alt = 3
   Insn 175: point = 5631, n_alt = 3
   Insn 174: point = 5632, n_alt = 0
   Insn 173: point = 5632, n_alt = 3
  BB 9
   Insn 171: point = 5632, n_alt = -1
   Insn 170: point = 5632, n_alt = 0
   Insn 169: point = 5633, n_alt = 0
  BB 8
   Insn 166: point = 5634, n_alt = 0
   Insn 165: point = 5634, n_alt = 3
   Insn 164: point = 5634, n_alt = 2
   Insn 163: point = 5634, n_alt = 2
   Insn 162: point = 5634, n_alt = -2
   Insn 161: point = 5635, n_alt = -2
   Insn 160: point = 5636, n_alt = -2
   Insn 159: point = 5637, n_alt = -2
   Insn 158: point = 5638, n_alt = 3
   Insn 157: point = 5639, n_alt = 3
   Insn 156: point = 5640, n_alt = 3
   Insn 155: point = 5641, n_alt = 3
   Insn 154: point = 5643, n_alt = 0
   Insn 153: point = 5645, n_alt = 0
   Insn 152: point = 5647, n_alt = -2
   Insn 151: point = 5649, n_alt = -2
   Insn 150: point = 5651, n_alt = 0
   Insn 149: point = 5653, n_alt = 0
   Insn 148: point = 5654, n_alt = -2
   Insn 147: point = 5656, n_alt = 0
   Insn 146: point = 5658, n_alt = -2
   Insn 145: point = 5659, n_alt = 3
   Insn 144: point = 5661, n_alt = 0
   Insn 143: point = 5663, n_alt = 0
   Insn 142: point = 5664, n_alt = 0
   Insn 141: point = 5665, n_alt = 1
   Insn 5825: point = 5666, n_alt = -2
	Hard reg 1 is preferable by r2984 with profit 1000
   Insn 140: point = 5668, n_alt = 0
   Insn 5824: point = 5669, n_alt = -2
	Hard reg 1 is preferable by r2984 with profit 2000
   Insn 139: point = 5671, n_alt = 2
   Insn 138: point = 5672, n_alt = 2
   Insn 137: point = 5673, n_alt = 2
   Insn 136: point = 5674, n_alt = 0
   Insn 135: point = 5674, n_alt = 0
   Insn 134: point = 5674, n_alt = 3
   Insn 133: point = 5674, n_alt = 2
   Insn 132: point = 5674, n_alt = 2
   Insn 131: point = 5674, n_alt = 4
   Insn 130: point = 5674, n_alt = 4
   Insn 129: point = 5674, n_alt = -2
   Insn 128: point = 5675, n_alt = -2
   Insn 127: point = 5676, n_alt = 0
   Insn 126: point = 5676, n_alt = 0
   Insn 125: point = 5676, n_alt = 3
   Insn 124: point = 5677, n_alt = 3
  BB 7
   Insn 122: point = 5678, n_alt = -1
   Insn 121: point = 5678, n_alt = 0
   Insn 120: point = 5679, n_alt = 0
  BB 5
   Insn 5582: point = 5680, n_alt = -1
   Insn 111: point = 5680, n_alt = 8
   Insn 5823: point = 5681, n_alt = -2
	Hard reg 21 is preferable by r2983 with profit 1000
   Insn 110: point = 5683, n_alt = 2
   Insn 5822: point = 5684, n_alt = -2
	Hard reg 21 is preferable by r2983 with profit 1000
	Hard reg 22 is preferable by r2983 with profit 1000
   Insn 109: point = 5686, n_alt = -2
   Insn 108: point = 5688, n_alt = 2
   Insn 107: point = 5690, n_alt = 7
   Insn 106: point = 5691, n_alt = -2
   Insn 105: point = 5693, n_alt = 2
   Insn 104: point = 5695, n_alt = 7
  BB 3
   Insn 5579: point = 5696, n_alt = -1
   Insn 92: point = 5696, n_alt = 8
   Insn 91: point = 5697, n_alt = 7
  BB 6
   Insn 117: point = 5698, n_alt = 8
   Insn 116: point = 5699, n_alt = 7
  BB 4
   Insn 99: point = 5700, n_alt = -1
   Insn 98: point = 5700, n_alt = 1
   Insn 97: point = 5701, n_alt = 7
  BB 2
   Insn 86: point = 5702, n_alt = -1
   Insn 85: point = 5702, n_alt = 1
   Insn 84: point = 5703, n_alt = 7
   Insn 83: point = 5704, n_alt = 8
   Insn 82: point = 5705, n_alt = 1
   Insn 81: point = 5707, n_alt = 7
   Insn 80: point = 5708, n_alt = 1
   Insn 79: point = 5710, n_alt = 0
   Insn 78: point = 5711, n_alt = 8
   Insn 77: point = 5712, n_alt = 7
   Insn 76: point = 5713, n_alt = 8
   Insn 75: point = 5714, n_alt = 7
   Insn 73: point = 5715, n_alt = 5
   Insn 72: point = 5716, n_alt = -2
   Insn 71: point = 5718, n_alt = -2
   Insn 70: point = 5719, n_alt = 0
   Insn 69: point = 5719, n_alt = -2
   Insn 68: point = 5720, n_alt = 1
   Insn 66: point = 5722, n_alt = 0
   Insn 67: point = 5722, n_alt = 2
   Insn 65: point = 5723, n_alt = -2
   Insn 64: point = 5725, n_alt = 0
   Insn 60: point = 5727, n_alt = 2
   Insn 59: point = 5728, n_alt = 3
   Insn 58: point = 5729, n_alt = -2
   Insn 56: point = 5730, n_alt = 1
   Insn 54: point = 5732, n_alt = 0
   Insn 55: point = 5732, n_alt = 2
   Insn 53: point = 5733, n_alt = 2
   Insn 52: point = 5735, n_alt = 5
   Insn 51: point = 5736, n_alt = 1
   Insn 50: point = 5738, n_alt = 0
   Insn 49: point = 5740, n_alt = 3
   Insn 48: point = 5741, n_alt = 1
   Insn 46: point = 5743, n_alt = 0
   Insn 47: point = 5743, n_alt = 2
   Insn 45: point = 5744, n_alt = 3
   Insn 44: point = 5745, n_alt = 5
   Insn 43: point = 5746, n_alt = 0
   Insn 42: point = 5748, n_alt = 0
   Insn 41: point = 5750, n_alt = 3
   Insn 39: point = 5751, n_alt = 5
   Insn 38: point = 5752, n_alt = -2
   Insn 37: point = 5754, n_alt = -2
   Insn 36: point = 5755, n_alt = 0
   Insn 35: point = 5755, n_alt = -2
   Insn 34: point = 5756, n_alt = 1
   Insn 32: point = 5758, n_alt = 0
   Insn 33: point = 5758, n_alt = 2
   Insn 31: point = 5759, n_alt = -2
   Insn 30: point = 5761, n_alt = 0
   Insn 26: point = 5763, n_alt = 2
   Insn 25: point = 5764, n_alt = 3
   Insn 24: point = 5765, n_alt = -2
   Insn 22: point = 5766, n_alt = 1
   Insn 20: point = 5768, n_alt = 0
   Insn 21: point = 5768, n_alt = 2
   Insn 19: point = 5769, n_alt = 2
   Insn 18: point = 5771, n_alt = 5
   Insn 17: point = 5772, n_alt = 1
   Insn 16: point = 5774, n_alt = 0
   Insn 15: point = 5776, n_alt = 3
   Insn 14: point = 5777, n_alt = 1
   Insn 12: point = 5779, n_alt = 0
   Insn 13: point = 5779, n_alt = 2
   Insn 11: point = 5780, n_alt = 3
   Insn 10: point = 5781, n_alt = 5
   Insn 9: point = 5782, n_alt = 0
   Insn 8: point = 5784, n_alt = 0
   Insn 7: point = 5786, n_alt = 3
   Insn 3: point = 5787, n_alt = 5
   Insn 2: point = 5787, n_alt = 5
 r87: [5783..5784]
 r88: [5773..5774]
 r89: [5764..5765]
 r90: [5763..5787]
 r92: [5760..5761]
 r93: [5757..5759]
 r94: [5755..5756]
 r95: [5747..5748]
 r96: [5737..5738]
 r97: [5728..5729]
 r98: [5727..5787]
 r100: [5724..5725]
 r101: [5721..5723]
 r102: [5719..5720]
 r103: [5709..5710]
 r104: [5706..5708]
 r105: [5706..5707]
 r106: [5692..5693]
 r107: [5685..5691]
 r108: [5687..5688]
 r109: [5683..5686]
 r110: [5678..5679]
 r111: [5662..5663]
 r112: [5660..5661]
 r113: [5653..5659]
 r114: [5646..5647]
 r115: [5634..5641]
 r116: [5632..5633]
 r117: [5610..5611]
 r118: [5608..5609]
 r119: [5601..5607]
 r120: [5594..5595]
 r121: [5582..5589]
 r122: [5573..5574]
 r123: [5568..5572]
 r124: [5568..5569]
 r125: [5566..5567]
 r126: [5563..5565]
 r127: [5546..5560]
 r128: [5556..5557]
 r129: [5551..5555]
 r130: [5551..5552]
 r131: [5549..5550]
 r132: [5543..5548]
 r133: [5541..5545]
 r134: [5537..5538]
 r135: [5532..5536]
 r136: [5532..5533]
 r137: [5530..5531]
 r138: [5515..5529]
 r139: [5525..5526]
 r140: [5520..5524]
 r141: [5520..5521]
 r142: [5518..5519]
 r143: [5510..5517]
 r144: [5510..5512]
 r145: [5229..5230]
 r146: [5491..5492]
 r147: [5489..5490]
 r148: [5482..5488]
 r149: [5484..5485]
 r150: [5482..5483]
 r151: [5477..5481]
 r152: [5477..5478]
 r153: [5475..5476]
 r154: [5472..5474]
 r155: [5444..5469]
 r156: [5467..5468]
 r157: [5465..5466]
 r158: [5458..5464]
 r159: [5460..5461]
 r160: [5458..5459]
 r161: [5453..5457]
 r162: [5453..5454]
 r163: [5451..5452]
 r164: [5448..5450]
 r165: [5444..5445]
 r166: [5410..5443]
 r167: [5441..5442]
 r168: [5439..5440]
 r169: [5432..5438]
 r170: [5434..5435]
 r171: [5432..5433]
 r172: [5427..5431]
 r173: [5427..5428]
 r174: [5425..5426]
 r175: [5422..5424]
 r176: [5417..5419]
 r177: [5414..5416]
 r178: [5412..5413]
 r179: [5410..5411]
 r180: [5405..5409]
 r181: [5405..5406]
 r182: [5349..5404]
 r183: [5402..5403]
 r184: [5400..5401]
 r185: [5398..5399]
 r186: [5391..5397]
 r187: [5393..5394]
 r188: [5391..5392]
 r189: [5386..5390]
 r190: [5386..5387]
 r191: [5384..5385]
 r192: [5381..5383]
 r193: [5353..5378]
 r194: [5376..5377]
 r195: [5374..5375]
 r196: [5367..5373]
 r197: [5369..5370]
 r198: [5367..5368]
 r199: [5362..5366]
 r200: [5362..5363]
 r201: [5360..5361]
 r202: [5357..5359]
 r203: [5353..5354]
 r204: [5351..5352]
 r205: [5349..5350]
 r206: [5320..5348]
 r207: [5344..5345]
 r208: [5339..5343]
 r209: [5339..5340]
 r210: [5337..5338]
 r211: [5334..5336]
 r212: [5320..5333]
 r213: [5329..5330]
 r214: [5324..5328]
 r215: [5324..5325]
 r216: [5322..5323]
 r217: [5317..5321]
 r218: [5317..5319]
 r219: [5313..5314]
 r220: [5308..5312]
 r221: [5308..5309]
 r222: [5306..5307]
 r223: [5303..5305]
 r224: [5281..5302]
 r225: [5300..5301]
 r226: [5298..5299]
 r227: [5291..5297]
 r228: [5293..5294]
 r229: [5291..5292]
 r230: [5286..5290]
 r231: [5286..5287]
 r232: [5284..5285]
 r233: [5278..5283]
 r234: [5276..5280]
 r235: [5272..5273]
 r236: [5267..5271]
 r237: [5267..5268]
 r238: [5265..5266]
 r239: [5250..5264]
 r240: [5260..5261]
 r241: [5255..5259]
 r242: [5255..5256]
 r243: [5253..5254]
 r244: [5247..5252]
 r245: [5247..5249]
 r246: [5233..5234]
 r247: [5231..5232]
 r248: [5215..5216]
 r249: [5212..5214]
 r250: [5151..5153]
 r251: [5149..5150]
 r252: [5141..5143]
 r253: [5133..5135]
 r254: [5127..5128]
 r255: [5122..5126]
 r256: [5122..5123]
 r257: [5120..5121]
 r258: [5117..5119]
 r259: [5113..5114]
 r260: [5061..5062]
 r261: [5106..5107]
 r262: [5104..5105]
 r263: [5102..5103]
 r264: [5099..5101]
 r265: [5073..5096]
 r266: [5094..5095]
 r267: [5092..5093]
 r268: [5090..5091]
 r269: [5083..5089]
 r270: [5085..5086]
 r271: [5083..5084]
 r272: [5078..5082]
 r273: [5078..5079]
 r274: [5076..5077]
 r275: [5070..5075]
 r276: [5068..5072]
 r277: [5066..5067]
 r278: [5064..5065]
 r279: [4875..4876]
 r280: [5043..5044]
 r281: [5041..5042]
 r282: [5039..5040]
 r283: [5032..5038]
 r284: [5034..5035]
 r285: [5032..5033]
 r286: [5027..5031]
 r287: [5027..5028]
 r288: [5025..5026]
 r289: [5022..5024]
 r290: [4998..5021]
 r291: [5019..5020]
 r292: [5017..5018]
 r293: [5010..5016]
 r294: [5012..5013]
 r295: [5010..5011]
 r296: [5005..5009]
 r297: [5005..5006]
 r298: [5003..5004]
 r299: [5000..5002]
 r300: [4998..4999]
 r301: [4996..4997]
 r302: [4974..4995]
 r303: [4993..4994]
 r304: [4991..4992]
 r305: [4984..4990]
 r306: [4986..4987]
 r307: [4984..4985]
 r308: [4979..4983]
 r309: [4979..4980]
 r310: [4977..4978]
 r311: [4971..4976]
 r312: [4971..4973]
 r313: [4969..4970]
 r314: [4967..4968]
 r315: [4965..4966]
 r316: [4958..4964]
 r317: [4960..4961]
 r318: [4958..4959]
 r319: [4953..4957]
 r320: [4953..4954]
 r321: [4951..4952]
 r322: [4948..4950]
 r323: [4920..4945]
 r324: [4943..4944]
 r325: [4941..4942]
 r326: [4934..4940]
 r327: [4936..4937]
 r328: [4934..4935]
 r329: [4929..4933]
 r330: [4929..4930]
 r331: [4927..4928]
 r332: [4924..4926]
 r333: [4920..4921]
 r334: [4918..4919]
 r335: [4896..4917]
 r336: [4915..4916]
 r337: [4913..4914]
 r338: [4906..4912]
 r339: [4908..4909]
 r340: [4906..4907]
 r341: [4901..4905]
 r342: [4901..4902]
 r343: [4899..4900]
 r344: [4893..4898]
 r345: [4893..4895]
 r346: [4879..4880]
 r347: [4877..4878]
 r348: [4869..4870]
 r349: [4867..4868]
 r350: [4865..4866]
 r351: [4863..4864]
 r352: [4861..4862]
 r353: [4859..4860]
 r354: [4857..4858]
 r355: [4855..4856]
 r356: [4853..4854]
 r357: [4851..4852]
 r358: [4849..4850]
 r359: [4847..4848]
 r360: [4845..4846]
 r361: [4843..4844]
 r362: [4841..4842]
 r363: [4839..4840]
 r364: [4837..4838]
 r365: [4835..4836]
 r366: [4833..4834]
 r367: [4831..4832]
 r368: [4829..4830]
 r369: [4827..4828]
 r370: [4825..4826]
 r371: [4823..4824]
 r372: [4821..4822]
 r373: [4819..4820]
 r374: [4817..4818]
 r375: [4815..4816]
 r376: [4804..4805]
 r377: [4799..4803]
 r378: [4799..4800]
 r379: [4797..4798]
 r380: [4793..4796]
 r381: [4235..4236]
 r382: [4772..4773]
 r383: [4767..4771]
 r384: [4767..4768]
 r385: [4765..4766]
 r386: [4762..4764]
 r387: [4755..4759]
 r388: [4750..4751]
 r389: [4748..4749]
 r390: [4741..4747]
 r391: [4743..4744]
 r392: [4741..4742]
 r393: [4736..4740]
 r394: [4736..4737]
 r395: [4734..4735]
 r396: [4731..4733]
 r397: [4712..4728]
 r398: [4724..4725]
 r399: [4719..4723]
 r400: [4719..4720]
 r401: [4717..4718]
 r402: [4714..4716]
 r403: [4712..4713]
 r404: [4708..4709]
 r405: [4706..4707]
 r406: [4699..4705]
 r407: [4701..4702]
 r408: [4699..4700]
 r409: [4694..4698]
 r410: [4694..4695]
 r411: [4692..4693]
 r412: [4689..4691]
 r413: [4683..4684]
 r414: [4681..4682]
 r415: [4674..4680]
 r416: [4676..4677]
 r417: [4674..4675]
 r418: [4669..4673]
 r419: [4669..4670]
 r420: [4667..4668]
 r421: [4664..4666]
 r422: [4658..4659]
 r423: [4656..4657]
 r424: [4649..4655]
 r425: [4651..4652]
 r426: [4649..4650]
 r427: [4644..4648]
 r428: [4644..4645]
 r429: [4642..4643]
 r430: [4639..4641]
 r431: [4632..4633]
 r432: [4629..4631]
 r433: [4619..4623]
 r434: [4619..4620]
 r435: [4617..4618]
 r436: [4607..4608]
 r437: [4602..4606]
 r438: [4602..4603]
 r439: [4600..4601]
 r440: [4597..4599]
 r441: [4583..4594]
 r442: [4592..4593]
 r443: [4590..4591]
 r444: [4587..4589]
 r445: [4583..4584]
 r446: [4578..4582]
 r447: [4578..4579]
 r448: [4571..4572]
 r450: [4557..4564]
 r451: [4559..4560]
 r452: [4557..4558]
 r453: [4549..4556]
 r454: [4551..4552]
 r455: [4549..4550]
 r456: [4547..4548]
 r457: [4543..4546]
 r458: [4531..4535]
 r459: [4531..4532]
 r460: [4529..4530]
 r461: [4521..4523]
 r462: [4519..4520]
 r463: [4505..4518]
 r464: [4514..4515]
 r465: [4509..4513]
 r466: [4509..4510]
 r467: [4507..4508]
 r468: [4502..4506]
 r469: [4502..4504]
 r470: [4498..4499]
 r471: [4493..4497]
 r472: [4493..4494]
 r473: [4491..4492]
 r474: [4488..4490]
 r475: [4445..4485]
 r476: [4482..4484]
 r477: [4480..4481]
 r478: [4478..4479]
 r479: [4475..4477]
 r480: [4449..4472]
 r481: [4468..4469]
 r482: [4463..4467]
 r483: [4463..4464]
 r484: [4461..4462]
 r485: [4458..4460]
 r486: [4453..4455]
 r487: [4451..4452]
 r488: [4449..4450]
 r489: [4447..4448]
 r490: [4445..4446]
 r491: [4436..4437]
 r492: [4431..4435]
 r493: [4431..4432]
 r494: [4429..4430]
 r495: [4426..4428]
 r496: [4424..4425]
 r497: [4419..4421]
 r498: [4385..4386]
 r499: [4383..4384]
 r500: [4376..4382]
 r501: [4378..4379]
 r502: [4376..4377]
 r503: [4371..4375]
 r504: [4371..4372]
 r505: [4369..4370]
 r506: [4365..4368]
 r507: [4408..4409]
 r508: [4406..4407]
 r509: [4399..4405]
 r510: [4401..4402]
 r511: [4399..4400]
 r512: [4394..4398]
 r513: [4394..4395]
 r514: [4392..4393]
 r515: [4388..4391]
 r516: [4358..4359]
 r517: [4356..4357]
 r518: [4349..4355]
 r519: [4351..4352]
 r520: [4349..4350]
 r521: [4344..4348]
 r522: [4344..4345]
 r523: [4342..4343]
 r524: [4338..4341]
 r525: [4329..4330]
 r526: [4327..4328]
 r527: [4320..4326]
 r528: [4322..4323]
 r529: [4320..4321]
 r530: [4315..4319]
 r531: [4315..4316]
 r532: [4313..4314]
 r533: [4309..4312]
 r534: [4307..4308]
 r535: [4305..4306]
 r536: [4303..4304]
 r537: [4296..4302]
 r538: [4298..4299]
 r539: [4296..4297]
 r540: [4291..4295]
 r541: [4291..4292]
 r542: [4289..4290]
 r543: [4286..4288]
 r544: [4280..4285]
 r545: [4274..4275]
 r546: [4272..4273]
 r547: [4265..4271]
 r548: [4267..4268]
 r549: [4265..4266]
 r550: [4260..4264]
 r551: [4260..4261]
 r552: [4258..4259]
 r553: [4254..4257]
 r554: [4239..4240]
 r555: [4237..4238]
 r556: [1163..1164]
 r557: [4229..4230]
 r558: [4227..4228]
 r559: [4220..4226]
 r560: [4210..4214]
 r561: [4212..4213]
 r562: [4210..4211]
 r563: [4208..4209]
 r564: [4206..4207]
 r565: [4202..4203]
 r566: [4200..4201]
 r567: [4193..4199]
 r568: [4183..4187]
 r569: [4185..4186]
 r570: [4183..4184]
 r571: [4181..4182]
 r572: [4179..4180]
 r573: [4175..4176]
 r574: [4155..4156]
 r575: [4153..4154]
 r576: [4137..4138]
 r577: [4135..4136]
 r578: [4128..4134]
 r579: [4118..4122]
 r580: [4120..4121]
 r581: [4118..4119]
 r582: [4116..4117]
 r583: [4114..4115]
 r584: [4110..4111]
 r585: [4108..4109]
 r586: [4101..4107]
 r587: [4091..4095]
 r588: [4093..4094]
 r589: [4091..4092]
 r590: [4089..4090]
 r591: [4087..4088]
 r592: [4083..4084]
 r593: [4063..4064]
 r594: [4061..4062]
 r595: [4045..4046]
 r596: [4043..4044]
 r597: [4036..4042]
 r598: [4026..4030]
 r599: [4028..4029]
 r600: [4026..4027]
 r601: [4024..4025]
 r602: [4022..4023]
 r603: [4018..4019]
 r604: [4016..4017]
 r605: [4009..4015]
 r606: [3999..4003]
 r607: [4001..4002]
 r608: [3999..4000]
 r609: [3997..3998]
 r610: [3995..3996]
 r611: [3991..3992]
 r612: [3971..3972]
 r613: [3969..3970]
 r614: [3959..3960]
 r615: [3957..3958]
 r616: [3950..3956]
 r617: [3940..3944]
 r618: [3942..3943]
 r619: [3940..3941]
 r620: [3938..3939]
 r621: [3936..3937]
 r622: [3932..3933]
 r623: [3930..3931]
 r624: [3923..3929]
 r625: [3913..3917]
 r626: [3915..3916]
 r627: [3913..3914]
 r628: [3911..3912]
 r629: [3909..3910]
 r630: [3905..3906]
 r631: [3881..3882]
 r632: [3879..3880]
 r633: [3869..3870]
 r634: [3867..3868]
 r635: [3860..3866]
 r636: [3850..3854]
 r637: [3852..3853]
 r638: [3850..3851]
 r639: [3848..3849]
 r640: [3846..3847]
 r641: [3842..3843]
 r642: [3840..3841]
 r643: [3833..3839]
 r644: [3823..3827]
 r645: [3825..3826]
 r646: [3823..3824]
 r647: [3821..3822]
 r648: [3819..3820]
 r649: [3815..3816]
 r650: [3771..3772]
 r651: [3769..3770]
 r652: [3759..3760]
 r653: [3757..3758]
 r654: [3750..3756]
 r655: [3740..3744]
 r656: [3742..3743]
 r657: [3740..3741]
 r658: [3738..3739]
 r659: [3736..3737]
 r660: [3732..3733]
 r661: [3730..3731]
 r662: [3723..3729]
 r663: [3713..3717]
 r664: [3715..3716]
 r665: [3713..3714]
 r666: [3711..3712]
 r667: [3709..3710]
 r668: [3705..3706]
 r669: [3677..3678]
 r670: [3675..3676]
 r671: [3665..3666]
 r672: [3663..3664]
 r673: [3656..3662]
 r674: [3646..3650]
 r675: [3648..3649]
 r676: [3646..3647]
 r677: [3644..3645]
 r678: [3642..3643]
 r679: [3638..3639]
 r680: [3636..3637]
 r681: [3629..3635]
 r682: [3619..3623]
 r683: [3621..3622]
 r684: [3619..3620]
 r685: [3617..3618]
 r686: [3615..3616]
 r687: [3611..3612]
 r688: [3585..3586]
 r689: [3583..3584]
 r690: [3573..3574]
 r691: [3571..3572]
 r692: [3564..3570]
 r693: [3554..3558]
 r694: [3556..3557]
 r695: [3554..3555]
 r696: [3552..3553]
 r697: [3550..3551]
 r698: [3546..3547]
 r699: [3544..3545]
 r700: [3537..3543]
 r701: [3527..3531]
 r702: [3529..3530]
 r703: [3527..3528]
 r704: [3525..3526]
 r705: [3523..3524]
 r706: [3519..3520]
 r707: [3491..3492]
 r708: [3489..3490]
 r709: [3479..3480]
 r710: [3477..3478]
 r711: [3475..3476]
 r712: [3468..3474]
 r713: [3458..3462]
 r714: [3460..3461]
 r715: [3458..3459]
 r716: [3456..3457]
 r717: [3454..3455]
 r718: [3450..3451]
 r719: [3448..3449]
 r720: [3441..3447]
 r721: [3431..3435]
 r722: [3433..3434]
 r723: [3431..3432]
 r724: [3429..3430]
 r725: [3427..3428]
 r726: [3423..3424]
 r727: [3421..3422]
 r728: [3414..3420]
 r729: [3404..3408]
 r730: [3406..3407]
 r731: [3404..3405]
 r732: [3402..3403]
 r733: [3400..3401]
 r734: [3396..3397]
 r735: [3390..3391]
 r736: [3383..3389]
 r737: [3373..3377]
 r738: [3375..3376]
 r739: [3373..3374]
 r740: [3371..3372]
 r741: [3369..3370]
 r742: [3365..3366]
 r743: [3345..3346]
 r744: [3343..3344]
 r745: [3341..3342]
 r746: [3321..3322]
 r747: [3319..3320]
 r748: [3317..3318]
 r749: [3307..3308]
 r750: [3305..3306]
 r751: [3298..3304]
 r752: [3288..3292]
 r753: [3290..3291]
 r754: [3288..3289]
 r755: [3286..3287]
 r756: [3284..3285]
 r757: [3280..3281]
 r758: [3278..3279]
 r759: [3271..3277]
 r760: [3261..3265]
 r761: [3263..3264]
 r762: [3261..3262]
 r763: [3259..3260]
 r764: [3257..3258]
 r765: [3253..3254]
 r766: [3233..3234]
 r767: [3231..3232]
 r768: [3221..3222]
 r769: [3219..3220]
 r770: [3212..3218]
 r771: [3202..3206]
 r772: [3204..3205]
 r773: [3202..3203]
 r774: [3200..3201]
 r775: [3198..3199]
 r776: [3194..3195]
 r777: [3192..3193]
 r778: [3185..3191]
 r779: [3175..3179]
 r780: [3177..3178]
 r781: [3175..3176]
 r782: [3173..3174]
 r783: [3171..3172]
 r784: [3167..3168]
 r785: [3143..3144]
 r786: [3141..3142]
 r787: [3131..3132]
 r788: [3129..3130]
 r789: [3122..3128]
 r790: [3112..3116]
 r791: [3114..3115]
 r792: [3112..3113]
 r793: [3110..3111]
 r794: [3108..3109]
 r795: [3104..3105]
 r796: [3102..3103]
 r797: [3095..3101]
 r798: [3085..3089]
 r799: [3087..3088]
 r800: [3085..3086]
 r801: [3083..3084]
 r802: [3081..3082]
 r803: [3077..3078]
 r804: [3057..3058]
 r805: [3055..3056]
 r806: [3045..3046]
 r807: [3043..3044]
 r808: [3036..3042]
 r809: [3026..3030]
 r810: [3028..3029]
 r811: [3026..3027]
 r812: [3024..3025]
 r813: [3022..3023]
 r814: [3018..3019]
 r815: [3016..3017]
 r816: [3009..3015]
 r817: [2999..3003]
 r818: [3001..3002]
 r819: [2999..3000]
 r820: [2997..2998]
 r821: [2995..2996]
 r822: [2991..2992]
 r823: [2971..2972]
 r824: [2969..2970]
 r825: [2959..2960]
 r826: [2957..2958]
 r827: [2950..2956]
 r828: [2940..2944]
 r829: [2942..2943]
 r830: [2940..2941]
 r831: [2938..2939]
 r832: [2936..2937]
 r833: [2932..2933]
 r834: [2925..2926]
 r835: [2923..2924]
 r836: [2916..2922]
 r837: [2918..2919]
 r838: [2916..2917]
 r839: [2911..2915]
 r840: [2911..2912]
 r841: [2909..2910]
 r842: [2906..2908]
 r843: [2903..2905]
 r844: [2900..2901]
 r845: [2898..2899]
 r846: [2891..2897]
 r847: [2893..2894]
 r848: [2891..2892]
 r849: [2886..2890]
 r850: [2886..2887]
 r851: [2884..2885]
 r852: [2881..2883]
 r853: [2879..2880]
 r854: [2876..2877]
 r855: [2874..2875]
 r856: [2867..2873]
 r857: [2869..2870]
 r858: [2867..2868]
 r859: [2862..2866]
 r860: [2862..2863]
 r861: [2860..2861]
 r862: [2856..2859]
 r863: [2841..2842]
 r864: [2834..2840]
 r865: [2824..2828]
 r866: [2826..2827]
 r867: [2824..2825]
 r868: [2822..2823]
 r869: [2820..2821]
 r870: [2816..2817]
 r871: [2799..2800]
 r872: [2794..2798]
 r873: [2794..2795]
 r874: [2792..2793]
 r875: [2789..2791]
 r876: [2755..2788]
 r877: [2784..2785]
 r878: [2779..2783]
 r879: [2779..2780]
 r880: [2777..2778]
 r881: [2774..2776]
 r882: [2771..2773]
 r883: [2769..2770]
 r884: [2755..2768]
 r885: [2764..2765]
 r886: [2759..2763]
 r887: [2759..2760]
 r888: [2757..2758]
 r889: [2752..2756]
 r890: [2752..2754]
 r891: [2724..2725]
 r892: [2722..2723]
 r893: [2712..2713]
 r894: [2710..2711]
 r895: [2703..2709]
 r896: [2693..2697]
 r897: [2695..2696]
 r898: [2693..2694]
 r899: [2691..2692]
 r900: [2689..2690]
 r901: [2685..2686]
 r902: [2683..2684]
 r903: [2676..2682]
 r904: [2666..2670]
 r905: [2668..2669]
 r906: [2666..2667]
 r907: [2664..2665]
 r908: [2662..2663]
 r909: [2658..2659]
 r910: [2641..2642]
 r911: [2636..2640]
 r912: [2636..2637]
 r913: [2634..2635]
 r914: [2631..2633]
 r915: [2602..2630]
 r916: [2626..2627]
 r917: [2621..2625]
 r918: [2621..2622]
 r919: [2619..2620]
 r920: [2616..2618]
 r921: [2602..2615]
 r922: [2611..2612]
 r923: [2606..2610]
 r924: [2606..2607]
 r925: [2604..2605]
 r926: [2599..2603]
 r927: [2599..2601]
 r928: [2571..2572]
 r929: [2569..2570]
 r930: [2559..2560]
 r931: [2557..2558]
 r932: [2550..2556]
 r933: [2540..2544]
 r934: [2542..2543]
 r935: [2540..2541]
 r936: [2538..2539]
 r937: [2536..2537]
 r938: [2532..2533]
 r939: [2530..2531]
 r940: [2523..2529]
 r941: [2513..2517]
 r942: [2515..2516]
 r943: [2513..2514]
 r944: [2511..2512]
 r945: [2509..2510]
 r946: [2505..2506]
 r947: [2497..2498]
 r948: [1909..1910]
 r949: [1904..1908]
 r950: [1904..1905]
 r951: [1902..1903]
 r952: [1898..1901]
 r953: [2488..2489]
 r954: [2483..2487]
 r955: [2483..2484]
 r956: [2481..2482]
 r957: [2478..2480]
 r958: [2471..2475]
 r959: [2466..2467]
 r960: [2464..2465]
 r961: [2457..2463]
 r962: [2459..2460]
 r963: [2457..2458]
 r964: [2452..2456]
 r965: [2452..2453]
 r966: [2450..2451]
 r967: [2447..2449]
 r968: [2428..2444]
 r969: [2440..2441]
 r970: [2435..2439]
 r971: [2435..2436]
 r972: [2433..2434]
 r973: [2430..2432]
 r974: [2428..2429]
 r975: [2424..2425]
 r976: [2422..2423]
 r977: [2415..2421]
 r978: [2417..2418]
 r979: [2415..2416]
 r980: [2410..2414]
 r981: [2410..2411]
 r982: [2408..2409]
 r983: [2405..2407]
 r984: [2399..2400]
 r985: [2397..2398]
 r986: [2390..2396]
 r987: [2392..2393]
 r988: [2390..2391]
 r989: [2385..2389]
 r990: [2385..2386]
 r991: [2383..2384]
 r992: [2380..2382]
 r993: [2374..2375]
 r994: [2372..2373]
 r995: [2365..2371]
 r996: [2367..2368]
 r997: [2365..2366]
 r998: [2360..2364]
 r999: [2360..2361]
 r1000: [2358..2359]
 r1001: [2355..2357]
 r1002: [2348..2349]
 r1003: [2345..2347]
 r1004: [2335..2339]
 r1005: [2335..2336]
 r1006: [2333..2334]
 r1007: [2323..2324]
 r1008: [2318..2322]
 r1009: [2318..2319]
 r1010: [2316..2317]
 r1011: [2313..2315]
 r1012: [2299..2310]
 r1013: [2308..2309]
 r1014: [2306..2307]
 r1015: [2303..2305]
 r1016: [2299..2300]
 r1017: [2294..2298]
 r1018: [2294..2295]
 r1019: [2287..2288]
 r1021: [2273..2280]
 r1022: [2275..2276]
 r1023: [2273..2274]
 r1024: [2265..2272]
 r1025: [2267..2268]
 r1026: [2265..2266]
 r1027: [2263..2264]
 r1028: [2259..2262]
 r1029: [2247..2251]
 r1030: [2247..2248]
 r1031: [2245..2246]
 r1032: [2237..2239]
 r1033: [2235..2236]
 r1034: [2221..2234]
 r1035: [2230..2231]
 r1036: [2225..2229]
 r1037: [2225..2226]
 r1038: [2223..2224]
 r1039: [2218..2222]
 r1040: [2218..2220]
 r1041: [2207..2214]
 r1042: [2209..2210]
 r1043: [2207..2208]
 r1044: [2204..2206]
 r1045: [2202..2203]
 r1046: [2188..2201]
 r1047: [2197..2198]
 r1048: [2192..2196]
 r1049: [2192..2193]
 r1050: [2190..2191]
 r1051: [2185..2189]
 r1052: [2185..2187]
 r1053: [2178..2179]
 r1054: [2173..2177]
 r1055: [2173..2174]
 r1056: [2171..2172]
 r1057: [2156..2170]
 r1058: [2166..2167]
 r1059: [2161..2165]
 r1060: [2161..2162]
 r1061: [2159..2160]
 r1062: [2153..2158]
 r1063: [2153..2155]
 r1064: [2148..2149]
 r1065: [2143..2147]
 r1066: [2143..2144]
 r1067: [2141..2142]
 r1068: [2138..2140]
 r1069: [2095..2135]
 r1070: [2132..2134]
 r1071: [2130..2131]
 r1072: [2128..2129]
 r1073: [2125..2127]
 r1074: [2099..2122]
 r1075: [2118..2119]
 r1076: [2113..2117]
 r1077: [2113..2114]
 r1078: [2111..2112]
 r1079: [2108..2110]
 r1080: [2103..2105]
 r1081: [2101..2102]
 r1082: [2099..2100]
 r1083: [2097..2098]
 r1084: [2095..2096]
 r1085: [2091..2092]
 r1086: [2089..2090]
 r1087: [2082..2088]
 r1088: [2084..2085]
 r1089: [2082..2083]
 r1090: [2077..2081]
 r1091: [2077..2078]
 r1092: [2075..2076]
 r1093: [2072..2074]
 r1094: [2066..2067]
 r1095: [2049..2065]
 r1096: [2061..2062]
 r1097: [2056..2060]
 r1098: [2056..2057]
 r1099: [2054..2055]
 r1100: [2051..2053]
 r1101: [2049..2050]
 r1102: [2030..2048]
 r1103: [2044..2045]
 r1104: [2039..2043]
 r1105: [2039..2040]
 r1106: [2037..2038]
 r1107: [2034..2036]
 r1108: [2032..2033]
 r1109: [2030..2031]
 r1110: [1950..1954]
 r1111: [1950..1951]
 r1112: [1948..1949]
 r1113: [1941..1942]
 r1114: [1936..1940]
 r1115: [1936..1937]
 r1116: [1934..1935]
 r1117: [1931..1933]
 r1118: [2004..2010]
 r1119: [2006..2007]
 r1120: [2004..2005]
 r1121: [2001..2003]
 r1122: [1989..1993]
 r1123: [1989..1990]
 r1124: [1987..1988]
 r1125: [1978..1980]
 r1126: [1976..1977]
 r1127: [1962..1975]
 r1128: [1971..1972]
 r1129: [1966..1970]
 r1130: [1966..1967]
 r1131: [1964..1965]
 r1132: [1959..1963]
 r1133: [1959..1961]
 r1134: [1870..1871]
 r1135: [1868..1869]
 r1136: [1852..1853]
 r1137: [1850..1851]
 r1138: [1843..1849]
 r1139: [1833..1837]
 r1140: [1835..1836]
 r1141: [1833..1834]
 r1142: [1831..1832]
 r1143: [1829..1830]
 r1144: [1825..1826]
 r1145: [1823..1824]
 r1146: [1820..1822]
 r1147: [1818..1819]
 r1148: [1816..1817]
 r1149: [1810..1811]
 r1150: [1808..1809]
 r1151: [1806..1807]
 r1152: [1799..1805]
 r1153: [1789..1793]
 r1154: [1791..1792]
 r1155: [1789..1790]
 r1156: [1787..1788]
 r1157: [1785..1786]
 r1158: [1781..1782]
 r1159: [1765..1766]
 r1160: [1763..1764]
 r1161: [1753..1754]
 r1162: [1751..1752]
 r1163: [1744..1750]
 r1164: [1734..1738]
 r1165: [1736..1737]
 r1166: [1734..1735]
 r1167: [1732..1733]
 r1168: [1730..1731]
 r1169: [1726..1727]
 r1170: [1724..1725]
 r1171: [1717..1723]
 r1172: [1707..1711]
 r1173: [1709..1710]
 r1174: [1707..1708]
 r1175: [1705..1706]
 r1176: [1703..1704]
 r1177: [1699..1700]
 r1178: [1690..1691]
 r1179: [1685..1689]
 r1180: [1685..1686]
 r1181: [1683..1684]
 r1182: [1679..1682]
 r1183: [1651..1652]
 r1184: [1649..1650]
 r1185: [1639..1640]
 r1186: [1637..1638]
 r1187: [1630..1636]
 r1188: [1620..1624]
 r1189: [1622..1623]
 r1190: [1620..1621]
 r1191: [1618..1619]
 r1192: [1616..1617]
 r1193: [1612..1613]
 r1194: [1610..1611]
 r1195: [1603..1609]
 r1196: [1593..1597]
 r1197: [1595..1596]
 r1198: [1593..1594]
 r1199: [1591..1592]
 r1200: [1589..1590]
 r1201: [1585..1586]
 r1202: [1576..1577]
 r1203: [1571..1575]
 r1204: [1571..1572]
 r1205: [1569..1570]
 r1206: [1565..1568]
 r1207: [1537..1538]
 r1208: [1535..1536]
 r1209: [1525..1526]
 r1210: [1523..1524]
 r1211: [1516..1522]
 r1212: [1506..1510]
 r1213: [1508..1509]
 r1214: [1506..1507]
 r1215: [1504..1505]
 r1216: [1502..1503]
 r1217: [1498..1499]
 r1218: [1496..1497]
 r1219: [1493..1495]
 r1220: [1491..1492]
 r1221: [1489..1490]
 r1222: [1483..1484]
 r1223: [1481..1482]
 r1224: [1479..1480]
 r1225: [1472..1478]
 r1226: [1462..1466]
 r1227: [1464..1465]
 r1228: [1462..1463]
 r1229: [1460..1461]
 r1230: [1458..1459]
 r1231: [1454..1455]
 r1232: [1451..1453]
 r1233: [1446..1448]
 r1234: [1435..1436]
 r1235: [1430..1434]
 r1236: [1430..1431]
 r1237: [1428..1429]
 r1238: [1425..1427]
 r1239: [1411..1424]
 r1240: [1420..1421]
 r1241: [1415..1419]
 r1242: [1415..1416]
 r1243: [1413..1414]
 r1244: [1408..1412]
 r1245: [1408..1410]
 r1246: [1378..1379]
 r1247: [1362..1363]
 r1248: [1366..1367]
 r1249: [1360..1361]
 r1250: [1358..1359]
 r1251: [1356..1357]
 r1252: [1346..1347]
 r1253: [1344..1345]
 r1254: [1337..1343]
 r1255: [1327..1331]
 r1256: [1329..1330]
 r1257: [1327..1328]
 r1258: [1325..1326]
 r1259: [1323..1324]
 r1260: [1319..1320]
 r1261: [1317..1318]
 r1262: [1314..1316]
 r1263: [1312..1313]
 r1264: [1310..1311]
 r1265: [1304..1305]
 r1266: [1302..1303]
 r1267: [1300..1301]
 r1268: [1293..1299]
 r1269: [1283..1287]
 r1270: [1285..1286]
 r1271: [1283..1284]
 r1272: [1281..1282]
 r1273: [1279..1280]
 r1274: [1275..1276]
 r1275: [1272..1274]
 r1276: [1267..1269]
 r1277: [1256..1257]
 r1278: [1251..1255]
 r1279: [1251..1252]
 r1280: [1249..1250]
 r1281: [1246..1248]
 r1282: [1232..1245]
 r1283: [1241..1242]
 r1284: [1236..1240]
 r1285: [1236..1237]
 r1286: [1234..1235]
 r1287: [1229..1233]
 r1288: [1229..1231]
 r1289: [1199..1200]
 r1290: [1183..1184]
 r1291: [1187..1188]
 r1292: [1181..1182]
 r1293: [1179..1180]
 r1294: [1177..1178]
 r1295: [1167..1168]
 r1296: [1165..1166]
 r1297: [1157..1158]
 r1298: [1155..1156]
 r1299: [1152..1154]
 r1300: [1152..1153]
 r1301: [1150..1151]
 r1302: [1147..1149]
 r1303: [1136..1137]
 r1304: [1131..1135]
 r1305: [1131..1132]
 r1306: [1129..1130]
 r1307: [1126..1128]
 r1308: [1118..1123]
 r1309: [709..710]
 r1310: [704..708]
 r1311: [704..705]
 r1312: [702..703]
 r1313: [698..701]
 r1314: [694..695]
 r1315: [689..693]
 r1316: [689..690]
 r1317: [687..688]
 r1318: [683..686]
 r1319: [1113..1114]
 r1320: [1108..1112]
 r1321: [1108..1109]
 r1322: [1106..1107]
 r1323: [1103..1105]
 r1324: [1095..1096]
 r1325: [1090..1094]
 r1326: [1090..1091]
 r1327: [1088..1089]
 r1328: [1085..1087]
 r1329: [1064..1082]
 r1330: [1078..1079]
 r1331: [1073..1077]
 r1332: [1073..1074]
 r1333: [1071..1072]
 r1334: [1068..1070]
 r1335: [1064..1065]
 r1336: [1061..1063]
 r1337: [1055..1056]
 r1338: [1050..1054]
 r1339: [1050..1051]
 r1340: [1048..1049]
 r1341: [1045..1047]
 r1342: [1040..1042]
 r1343: [1038..1039]
 r1344: [1019..1037]
 r1345: [1033..1034]
 r1346: [1028..1032]
 r1347: [1028..1029]
 r1348: [1026..1027]
 r1349: [1023..1025]
 r1350: [1019..1020]
 r1351: [1016..1018]
 r1352: [1010..1011]
 r1353: [1005..1009]
 r1354: [1005..1006]
 r1355: [1003..1004]
 r1356: [1000..1002]
 r1357: [979..997]
 r1358: [993..994]
 r1359: [988..992]
 r1360: [988..989]
 r1361: [986..987]
 r1362: [983..985]
 r1363: [979..980]
 r1364: [977..978]
 r1365: [969..970]
 r1366: [962..968]
 r1367: [964..965]
 r1368: [962..963]
 r1369: [957..961]
 r1370: [957..958]
 r1371: [955..956]
 r1372: [952..954]
 r1373: [896..949]
 r1374: [945..946]
 r1375: [940..944]
 r1376: [940..941]
 r1377: [938..939]
 r1378: [935..937]
 r1379: [905..932]
 r1380: [928..929]
 r1381: [923..927]
 r1382: [923..924]
 r1383: [921..922]
 r1384: [918..920]
 r1385: [914..915]
 r1386: [912..913]
 r1387: [909..911]
 r1388: [905..906]
 r1389: [900..904]
 r1390: [900..901]
 r1391: [898..899]
 r1392: [896..897]
 r1393: [894..895]
 r1394: [881..882]
 r1395: [867..880]
 r1396: [876..877]
 r1397: [871..875]
 r1398: [871..872]
 r1399: [869..870]
 r1400: [864..868]
 r1401: [864..866]
 r1402: [860..861]
 r1403: [855..859]
 r1404: [855..856]
 r1405: [853..854]
 r1406: [850..852]
 r1407: [829..847]
 r1408: [843..844]
 r1409: [838..842]
 r1410: [838..839]
 r1411: [836..837]
 r1412: [833..835]
 r1413: [829..830]
 r1414: [827..828]
 r1415: [819..820]
 r1416: [812..818]
 r1417: [814..815]
 r1418: [812..813]
 r1419: [807..811]
 r1420: [807..808]
 r1421: [805..806]
 r1422: [802..804]
 r1423: [746..799]
 r1424: [795..796]
 r1425: [790..794]
 r1426: [790..791]
 r1427: [788..789]
 r1428: [785..787]
 r1429: [755..782]
 r1430: [778..779]
 r1431: [773..777]
 r1432: [773..774]
 r1433: [771..772]
 r1434: [768..770]
 r1435: [764..765]
 r1436: [762..763]
 r1437: [759..761]
 r1438: [755..756]
 r1439: [750..754]
 r1440: [750..751]
 r1441: [748..749]
 r1442: [746..747]
 r1443: [744..745]
 r1444: [731..732]
 r1445: [717..730]
 r1446: [726..727]
 r1447: [721..725]
 r1448: [721..722]
 r1449: [719..720]
 r1450: [714..718]
 r1451: [714..716]
 r1452: [678..679]
 r1453: [673..677]
 r1454: [673..674]
 r1455: [671..672]
 r1456: [668..670]
 r1457: [660..661]
 r1458: [653..659]
 r1459: [655..656]
 r1460: [653..654]
 r1461: [648..652]
 r1462: [648..649]
 r1463: [646..647]
 r1464: [631..645]
 r1465: [641..642]
 r1466: [636..640]
 r1467: [636..637]
 r1468: [634..635]
 r1469: [626..633]
 r1470: [626..628]
 r1471: [622..623]
 r1472: [615..621]
 r1473: [617..618]
 r1474: [615..616]
 r1475: [610..614]
 r1476: [610..611]
 r1477: [608..609]
 r1478: [593..607]
 r1479: [603..604]
 r1480: [598..602]
 r1481: [598..599]
 r1482: [596..597]
 r1483: [588..595]
 r1484: [588..590]
 r1485: [584..585]
 r1486: [577..583]
 r1487: [579..580]
 r1488: [577..578]
 r1489: [572..576]
 r1490: [572..573]
 r1491: [570..571]
 r1492: [567..569]
 r1493: [564..566]
 r1494: [562..563]
 r1495: [526..561]
 r1496: [557..558]
 r1497: [550..556]
 r1498: [552..553]
 r1499: [550..551]
 r1500: [545..549]
 r1501: [545..546]
 r1502: [543..544]
 r1503: [540..542]
 r1504: [526..539]
 r1505: [535..536]
 r1506: [530..534]
 r1507: [530..531]
 r1508: [528..529]
 r1509: [523..527]
 r1510: [523..525]
 r1511: [519..520]
 r1512: [512..518]
 r1513: [514..515]
 r1514: [512..513]
 r1515: [507..511]
 r1516: [507..508]
 r1517: [505..506]
 r1518: [502..504]
 r1519: [466..501]
 r1520: [497..498]
 r1521: [490..496]
 r1522: [492..493]
 r1523: [490..491]
 r1524: [485..489]
 r1525: [485..486]
 r1526: [483..484]
 r1527: [480..482]
 r1528: [466..479]
 r1529: [475..476]
 r1530: [470..474]
 r1531: [470..471]
 r1532: [468..469]
 r1533: [463..467]
 r1534: [463..465]
 r1535: [459..460]
 r1536: [454..458]
 r1537: [454..455]
 r1538: [452..453]
 r1539: [449..451]
 r1540: [419..446]
 r1541: [442..443]
 r1542: [437..441]
 r1543: [437..438]
 r1544: [435..436]
 r1545: [432..434]
 r1546: [428..429]
 r1547: [426..427]
 r1548: [423..425]
 r1549: [419..420]
 r1550: [402..418]
 r1551: [402..415]
 r1552: [411..412]
 r1553: [406..410]
 r1554: [406..407]
 r1555: [404..405]
 r1556: [399..403]
 r1557: [399..401]
 r1558: [367..368]
 r1559: [365..366]
 r1560: [358..364]
 r1561: [351..352]
 r1562: [339..346]
 r1563: [337..338]
 r1564: [335..336]
 r1565: [333..334]
 r1566: [317..318]
 r1567: [295..296]
 r1568: [293..294]
 r1569: [284..285]
 r1570: [279..283]
 r1571: [279..280]
 r1572: [277..278]
 r1573: [262..276]
 r1574: [272..273]
 r1575: [267..271]
 r1576: [267..268]
 r1577: [265..266]
 r1578: [257..264]
 r1579: [257..259]
 r1580: [200..201]
 r1581: [238..239]
 r1582: [236..237]
 r1583: [229..235]
 r1584: [231..232]
 r1585: [229..230]
 r1586: [224..228]
 r1587: [224..225]
 r1588: [222..223]
 r1589: [218..221]
 r1590: [204..205]
 r1591: [202..203]
 r1592: [186..187]
 r1593: [8..9]
 r1594: [184..185]
 r1595: [182..183]
 r1596: [175..181]
 r1597: [165..169]
 r1598: [167..168]
 r1599: [165..166]
 r1600: [163..164]
 r1601: [161..162]
 r1602: [157..158]
 r1603: [155..156]
 r1604: [148..154]
 r1605: [138..142]
 r1606: [140..141]
 r1607: [138..139]
 r1608: [136..137]
 r1609: [134..135]
 r1610: [130..131]
 r1611: [110..111]
 r1612: [108..109]
 r1613: [98..99]
 r1614: [96..97]
 r1615: [89..95]
 r1616: [79..83]
 r1617: [81..82]
 r1618: [79..80]
 r1619: [77..78]
 r1620: [75..76]
 r1621: [71..72]
 r1622: [69..70]
 r1623: [62..68]
 r1624: [52..56]
 r1625: [54..55]
 r1626: [52..53]
 r1627: [50..51]
 r1628: [48..49]
 r1629: [44..45]
 r1630: [24..25]
 r1631: [22..23]
 r1632: [12..13]
 r1633: [10..11]
 r1634: [4617..4626] [4613..4615]
 r1635: [4529..4540] [4524..4527]
 r1636: [2333..2342] [2329..2331]
 r1637: [2245..2256] [2240..2243]
 r1638: [1948..1957] [1931..1946]
 r1639: [1987..1998] [1983..1985]
 r1640: [5778..5780]
 r1641: [5770..5777]
 r1642: [5767..5769]
 r1643: [5762..5766]
 r1647: [5751..5752]
 r1649: [5742..5744]
 r1650: [5734..5741]
 r1651: [5731..5733]
 r1652: [5726..5730]
 r1656: [5715..5716]
 r1658: [5579..5581]
 r1659: [5498..5580]
 r1660: [5498..5499]
 r1661: [5505..5506]
 r1662: [5225..5226]
 r1663: [5495..5497]
 r1664: [5235..5496]
 r1665: [5235..5236]
 r1666: [5242..5243]
 r1667: [5050..5220]
 r1668: [5050..5051]
 r1669: [5109..5110]
 r1670: [5057..5058]
 r1671: [4871..4872]
 r1672: [5047..5049]
 r1673: [4881..5048]
 r1674: [4881..4882]
 r1675: [4888..4889]
 r1676: [4810..4812]
 r1677: [4781..4811]
 r1678: [4781..4782]
 r1679: [4788..4789]
 r1680: [4231..4232]
 r1681: [4778..4780]
 r1682: [4241..4779]
 r1683: [4241..4242]
 r1684: [4248..4249]
 r1685: [1159..1160]
 r1686: [2929..2931]
 r1687: [2843..2930]
 r1688: [2843..2844]
 r1689: [2850..2851]
 r1690: [2805..2807]
 r1691: [2740..2806]
 r1692: [2740..2741]
 r1693: [2747..2748]
 r1694: [2647..2649]
 r1695: [2587..2648]
 r1696: [2587..2588]
 r1697: [2594..2595]
 r1698: [1915..1917]
 r1699: [1886..1916]
 r1700: [1886..1887]
 r1701: [1893..1894]
 r1702: [2494..2496]
 r1703: [1918..2495]
 r1704: [1918..1919]
 r1705: [1925..1926]
 r1706: [1696..1698]
 r1707: [1667..1697]
 r1708: [1667..1668]
 r1709: [1674..1675]
 r1710: [1582..1584]
 r1711: [1553..1583]
 r1712: [1553..1554]
 r1713: [1560..1561]
 r1714: [1441..1443]
 r1715: [1396..1442]
 r1716: [1396..1397]
 r1717: [1403..1404]
 r1718: [1262..1264]
 r1719: [1217..1263]
 r1720: [1217..1218]
 r1721: [1224..1225]
 r1722: [1142..1144]
 r1723: [387..1143]
 r1724: [387..388]
 r1725: [394..395]
 r1726: [975..976]
 r1727: [892..893]
 r1728: [888..889]
 r1729: [825..826]
 r1730: [742..743]
 r1731: [738..739]
 r1732: [290..292]
 r1733: [245..291]
 r1734: [245..246]
 r1735: [252..253]
 r1736: [196..197]
 r1737: [242..244]
 r1738: [206..243]
 r1739: [206..207]
 r1740: [213..214]
 r1741: [4..5]
 r1742: [5785..5786]
 r1743: [5781..5782]
 r1744: [5778..5779]
 r1745: [5775..5776]
 r1746: [5771..5772]
 r1747: [5767..5768]
 r1748: [5757..5758]
 r1749: [5753..5754]
 r1750: [5749..5750]
 r1751: [5745..5746]
 r1752: [5742..5743]
 r1753: [5739..5740]
 r1754: [5735..5736]
 r1755: [5731..5732]
 r1756: [5721..5722]
 r1757: [5717..5718]
 r1758: [5713..5714]
 r1759: [5711..5712]
 r1760: [5704..5705]
 r1761: [5702..5703]
 r1762: [5696..5697]
 r1763: [5700..5701]
 r1764: [5694..5695]
 r1765: [5689..5690]
 r1766: [5680..5681]
 r1767: [5698..5699]
 r1768: [5675..5677]
 r1769: [5674..5676]
 r1770: [5670..5673] [5664..5666]
 r1771: [5665..5672]
 r1772: [5668..5671]
 r1773: [5657..5658] [5652..5654] [5648..5649]
 r1774: [5655..5656]
 r1775: [5650..5651]
 r1776: [5644..5645]
 r1777: [5642..5643]
 r1778: [5637..5640]
 r1779: [5636..5639]
 r1780: [5635..5638]
 r1781: [5629..5631]
 r1782: [5628..5630]
 r1783: [5624..5627] [5618..5620]
 r1784: [5619..5626]
 r1785: [5622..5625]
 r1786: [5616..5617]
 r1787: [5614..5615]
 r1788: [5612..5613]
 r1789: [5605..5606] [5600..5602] [5596..5597]
 r1790: [5603..5604]
 r1791: [5598..5599]
 r1792: [5592..5593]
 r1793: [5590..5591]
 r1794: [5585..5588]
 r1795: [5584..5587]
 r1796: [5583..5586]
 r1797: [5500..5501]
 r1798: [5507..5508]
 r1799: [5575..5576]
 r1800: [5570..5571]
 r1801: [5561..5564]
 r1802: [5561..5562]
 r1803: [5558..5559]
 r1804: [5553..5554]
 r1805: [5546..5547]
 r1806: [5541..5544]
 r1807: [5541..5542]
 r1808: [5539..5540]
 r1809: [5534..5535]
 r1810: [5527..5528]
 r1811: [5522..5523]
 r1812: [5513..5516]
 r1813: [5513..5514]
 r1814: [5510..5511]
 r1815: [5227..5228]
 r1816: [5237..5238]
 r1817: [5244..5245]
 r1818: [5486..5487]
 r1819: [5479..5480]
 r1820: [5470..5473]
 r1821: [5470..5471]
 r1822: [5462..5463]
 r1823: [5455..5456]
 r1824: [5446..5449]
 r1825: [5446..5447]
 r1826: [5436..5437]
 r1827: [5429..5430]
 r1828: [5420..5423]
 r1829: [5420..5421]
 r1830: [5417..5418]
 r1831: [5414..5415]
 r1832: [5407..5408]
 r1833: [5395..5396]
 r1834: [5388..5389]
 r1835: [5379..5382]
 r1836: [5379..5380]
 r1837: [5371..5372]
 r1838: [5364..5365]
 r1839: [5355..5358]
 r1840: [5355..5356]
 r1841: [5346..5347]
 r1842: [5341..5342]
 r1843: [5334..5335]
 r1844: [5331..5332]
 r1845: [5326..5327]
 r1846: [5317..5318]
 r1847: [5315..5316]
 r1848: [5310..5311]
 r1849: [5303..5304]
 r1850: [5295..5296]
 r1851: [5288..5289]
 r1852: [5281..5282]
 r1853: [5276..5279]
 r1854: [5276..5277]
 r1855: [5274..5275]
 r1856: [5269..5270]
 r1857: [5262..5263]
 r1858: [5257..5258]
 r1859: [5250..5251]
 r1860: [5247..5248]
 r1861: [5223..5224]
 r1862: [5221..5222]
 r1863: [5052..5053]
 r1864: [5217..5218]
 r1865: [5210..5213]
 r1866: [5210..5211]
 r1867: [5208..5209]
 r1868: [5187..5188]
 r1869: [5196..5207]
 r1870: [5202..5203]
 r1871: [5204..5206]
 r1872: [5200..5201]
 r1873: [5192..5197]
 r1874: [5190..5193]
 r1875: [5167..5168]
 r1876: [5165..5186]
 r1877: [5181..5182]
 r1878: [5183..5185]
 r1879: [5179..5180]
 r1880: [5172..5176]
 r1881: [5170..5173]
 r1882: [5163..5166]
 r1883: [5160..5161]
 r1884: [5154..5155]
 r1885: [5151..5152]
 r1886: [5147..5148]
 r1887: [5144..5145]
 r1890: [5139..5140]
 r1891: [5141..5142]
 r1892: [5136..5137]
 r1895: [5131..5132]
 r1896: [5133..5134]
 r1897: [5129..5130]
 r1898: [5124..5125]
 r1899: [5115..5118]
 r1900: [5115..5116]
 r1901: [5111..5112]
 r1902: [5059..5060]
 r1903: [5097..5100]
 r1904: [5097..5098]
 r1905: [5087..5088]
 r1906: [5080..5081]
 r1907: [5073..5074]
 r1908: [5068..5071]
 r1909: [5068..5069]
 r1910: [4873..4874]
 r1911: [4883..4884]
 r1912: [4890..4891]
 r1913: [5036..5037]
 r1914: [5029..5030]
 r1915: [5022..5023]
 r1916: [5014..5015]
 r1917: [5007..5008]
 r1918: [5000..5001]
 r1919: [4988..4989]
 r1920: [4981..4982]
 r1921: [4974..4975]
 r1922: [4971..4972]
 r1923: [4962..4963]
 r1924: [4955..4956]
 r1925: [4946..4949]
 r1926: [4946..4947]
 r1927: [4938..4939]
 r1928: [4931..4932]
 r1929: [4922..4925]
 r1930: [4922..4923]
 r1931: [4910..4911]
 r1932: [4903..4904]
 r1933: [4896..4897]
 r1934: [4893..4894]
 r1935: [4813..4814]
 r1936: [4783..4784]
 r1937: [4790..4791]
 r1938: [4806..4807]
 r1939: [4801..4802]
 r1940: [4793..4795]
 r1941: [4793..4794]
 r1942: [4233..4234]
 r1943: [4243..4244]
 r1944: [4250..4251]
 r1945: [4774..4775]
 r1946: [4769..4770]
 r1947: [4760..4763]
 r1948: [4760..4761]
 r1949: [4757..4758]
 r1950: [4752..4753]
 r1951: [4745..4746]
 r1952: [4738..4739]
 r1953: [4729..4732]
 r1954: [4729..4730]
 r1955: [4726..4727]
 r1956: [4721..4722]
 r1957: [4714..4715]
 r1958: [4710..4711]
 r1959: [4703..4704]
 r1960: [4696..4697]
 r1961: [4687..4690]
 r1962: [4687..4688]
 r1963: [4685..4686]
 r1964: [4678..4679]
 r1965: [4671..4672]
 r1966: [4662..4665]
 r1967: [4662..4663]
 r1968: [4660..4661]
 r1969: [4653..4654]
 r1970: [4646..4647]
 r1971: [4639..4640]
 r1972: [4637..4638]
 r1973: [4634..4636]
 r1974: [4634..4635]
 r1975: [4627..4628]
 r1976: [4629..4630]
 r1977: [4624..4625]
 r1978: [4621..4622]
 r1979: [4611..4612]
 r1980: [4609..4610]
 r1981: [4604..4605]
 r1982: [4595..4598]
 r1983: [4595..4596]
 r1984: [4585..4588]
 r1985: [4585..4586]
 r1986: [4580..4581]
 r1987: [4576..4577]
 r1988: [4573..4575]
 r1989: [4573..4574]
 r1990: [4565..4567]
 r1991: [4565..4566]
 r1992: [4561..4563]
 r1993: [4561..4562]
 r1994: [4553..4555]
 r1995: [4553..4554]
 r1996: [4541..4542]
 r1997: [4536..4537]
 r1998: [4538..4539]
 r1999: [4533..4534]
 r2000: [4524..4525]
 r2001: [4521..4522]
 r2002: [4516..4517]
 r2003: [4511..4512]
 r2004: [4502..4503]
 r2005: [4500..4501]
 r2006: [4495..4496]
 r2007: [4486..4489]
 r2008: [4486..4487]
 r2009: [4482..4483]
 r2010: [4473..4476]
 r2011: [4473..4474]
 r2012: [4470..4471]
 r2013: [4465..4466]
 r2014: [4456..4459]
 r2015: [4456..4457]
 r2016: [4453..4454]
 r2017: [4443..4444]
 r2018: [4441..4442]
 r2019: [4438..4439]
 r2020: [4433..4434]
 r2021: [4426..4427]
 r2022: [4417..4418]
 r2023: [4419..4420]
 r2024: [4414..4416]
 r2025: [4414..4415]
 r2026: [4411..4412]
 r2027: [4380..4381]
 r2028: [4373..4374]
 r2029: [4365..4367]
 r2030: [4365..4366]
 r2031: [4403..4404]
 r2032: [4396..4397]
 r2033: [4388..4390]
 r2034: [4388..4389]
 r2035: [4361..4363]
 r2036: [4361..4362]
 r2037: [4353..4354]
 r2038: [4346..4347]
 r2039: [4338..4340]
 r2040: [4338..4339]
 r2041: [4335..4336]
 r2042: [4332..4333]
 r2043: [4324..4325]
 r2044: [4317..4318]
 r2045: [4309..4311]
 r2046: [4309..4310]
 r2047: [4300..4301]
 r2048: [4293..4294]
 r2049: [4286..4287]
 r2050: [4283..4284]
 r2051: [4280..4281]
 r2052: [4277..4278]
 r2053: [4269..4270]
 r2054: [4262..4263]
 r2055: [4254..4256]
 r2056: [4254..4255]
 r2057: [1161..1162]
 r2058: [4224..4225] [4219..4221] [4215..4216]
 r2059: [4222..4223]
 r2060: [4217..4218]
 r2061: [4204..4205]
 r2062: [4197..4198] [4192..4194] [4188..4189]
 r2063: [4195..4196]
 r2064: [4190..4191]
 r2065: [4177..4178]
 r2066: [4172..4174]
 r2067: [4171..4173]
 r2068: [4168..4170]
 r2069: [4167..4169]
 r2070: [4163..4166] [4157..4159]
 r2071: [4158..4165]
 r2072: [4161..4164]
 r2073: [4151..4152]
 r2074: [4149..4150]
 r2075: [4147..4148]
 r2076: [4142..4146]
 r2077: [4141..4145]
 r2078: [4140..4144]
 r2079: [4139..4143]
 r2080: [4132..4133] [4127..4129] [4123..4124]
 r2081: [4130..4131]
 r2082: [4125..4126]
 r2083: [4112..4113]
 r2084: [4105..4106] [4100..4102] [4096..4097]
 r2085: [4103..4104]
 r2086: [4098..4099]
 r2087: [4085..4086]
 r2088: [4080..4082]
 r2089: [4079..4081]
 r2090: [4076..4078]
 r2091: [4075..4077]
 r2092: [4071..4074] [4065..4067]
 r2093: [4066..4073]
 r2094: [4069..4072]
 r2095: [4059..4060]
 r2096: [4057..4058]
 r2097: [4055..4056]
 r2098: [4050..4054]
 r2099: [4049..4053]
 r2100: [4048..4052]
 r2101: [4047..4051]
 r2102: [4040..4041] [4035..4037] [4031..4032]
 r2103: [4038..4039]
 r2104: [4033..4034]
 r2105: [4020..4021]
 r2106: [4013..4014] [4008..4010] [4004..4005]
 r2107: [4011..4012]
 r2108: [4006..4007]
 r2109: [3993..3994]
 r2110: [3988..3990]
 r2111: [3987..3989]
 r2112: [3984..3986]
 r2113: [3983..3985]
 r2114: [3979..3982] [3973..3975]
 r2115: [3974..3981]
 r2116: [3977..3980]
 r2117: [3964..3968]
 r2118: [3963..3967]
 r2119: [3962..3966]
 r2120: [3961..3965]
 r2121: [3954..3955] [3949..3951] [3945..3946]
 r2122: [3952..3953]
 r2123: [3947..3948]
 r2124: [3934..3935]
 r2125: [3927..3928] [3922..3924] [3918..3919]
 r2126: [3925..3926]
 r2127: [3920..3921]
 r2128: [3907..3908]
 r2129: [3902..3904]
 r2130: [3901..3903]
 r2131: [3898..3900]
 r2132: [3897..3899]
 r2133: [3894..3896]
 r2134: [3893..3895]
 r2135: [3889..3892] [3883..3885]
 r2136: [3884..3891]
 r2137: [3887..3890]
 r2138: [3874..3878]
 r2139: [3873..3877]
 r2140: [3872..3876]
 r2141: [3871..3875]
 r2142: [3864..3865] [3859..3861] [3855..3856]
 r2143: [3862..3863]
 r2144: [3857..3858]
 r2145: [3844..3845]
 r2146: [3837..3838] [3832..3834] [3828..3829]
 r2147: [3835..3836]
 r2148: [3830..3831]
 r2149: [3817..3818]
 r2150: [3812..3814]
 r2151: [3811..3813]
 r2152: [3808..3810]
 r2153: [3807..3809]
 r2154: [3804..3806]
 r2155: [3803..3805]
 r2156: [3800..3802]
 r2157: [3799..3801]
 r2158: [3796..3798]
 r2159: [3795..3797]
 r2160: [3791..3794]
 r2161: [3790..3793]
 r2162: [3789..3792]
 r2163: [3785..3788]
 r2164: [3784..3787]
 r2165: [3783..3786]
 r2166: [3779..3782] [3773..3775]
 r2167: [3774..3781]
 r2168: [3777..3780]
 r2169: [3764..3768]
 r2170: [3763..3767]
 r2171: [3762..3766]
 r2172: [3761..3765]
 r2173: [3754..3755] [3749..3751] [3745..3746]
 r2174: [3752..3753]
 r2175: [3747..3748]
 r2176: [3734..3735]
 r2177: [3727..3728] [3722..3724] [3718..3719]
 r2178: [3725..3726]
 r2179: [3720..3721]
 r2180: [3707..3708]
 r2181: [3702..3704]
 r2182: [3701..3703]
 r2183: [3698..3700]
 r2184: [3697..3699]
 r2185: [3694..3696]
 r2186: [3693..3695]
 r2187: [3690..3692]
 r2188: [3689..3691]
 r2189: [3685..3688] [3679..3681]
 r2190: [3680..3687]
 r2191: [3683..3686]
 r2192: [3670..3674]
 r2193: [3669..3673]
 r2194: [3668..3672]
 r2195: [3667..3671]
 r2196: [3660..3661] [3655..3657] [3651..3652]
 r2197: [3658..3659]
 r2198: [3653..3654]
 r2199: [3640..3641]
 r2200: [3633..3634] [3628..3630] [3624..3625]
 r2201: [3631..3632]
 r2202: [3626..3627]
 r2203: [3613..3614]
 r2204: [3608..3610]
 r2205: [3607..3609]
 r2206: [3604..3606]
 r2207: [3603..3605]
 r2208: [3599..3602]
 r2209: [3598..3601]
 r2210: [3597..3600]
 r2211: [3593..3596] [3587..3589]
 r2212: [3588..3595]
 r2213: [3591..3594]
 r2214: [3578..3582]
 r2215: [3577..3581]
 r2216: [3576..3580]
 r2217: [3575..3579]
 r2218: [3568..3569] [3563..3565] [3559..3560]
 r2219: [3566..3567]
 r2220: [3561..3562]
 r2221: [3548..3549]
 r2222: [3541..3542] [3536..3538] [3532..3533]
 r2223: [3539..3540]
 r2224: [3534..3535]
 r2225: [3521..3522]
 r2226: [3516..3518]
 r2227: [3515..3517]
 r2228: [3512..3514]
 r2229: [3511..3513]
 r2230: [3508..3510]
 r2231: [3507..3509]
 r2232: [3504..3506]
 r2233: [3503..3505]
 r2234: [3499..3502] [3493..3495]
 r2235: [3494..3501]
 r2236: [3497..3500]
 r2237: [3484..3488]
 r2238: [3483..3487]
 r2239: [3482..3486]
 r2240: [3481..3485]
 r2241: [3472..3473] [3467..3469] [3463..3464]
 r2242: [3470..3471]
 r2243: [3465..3466]
 r2244: [3452..3453]
 r2245: [3445..3446] [3440..3442] [3436..3437]
 r2246: [3443..3444]
 r2247: [3438..3439]
 r2248: [3425..3426]
 r2249: [3418..3419] [3413..3415] [3409..3410]
 r2250: [3416..3417]
 r2251: [3411..3412]
 r2252: [3398..3399]
 r2253: [3393..3395]
 r2254: [3392..3394]
 r2255: [3387..3388] [3382..3384] [3378..3379]
 r2256: [3385..3386]
 r2257: [3380..3381]
 r2258: [3367..3368]
 r2259: [3362..3364]
 r2260: [3361..3363]
 r2261: [3358..3360]
 r2262: [3357..3359]
 r2263: [3353..3356] [3347..3349]
 r2264: [3348..3355]
 r2265: [3351..3354]
 r2266: [3336..3340]
 r2267: [3335..3339]
 r2268: [3334..3338]
 r2269: [3333..3337]
 r2270: [3329..3332] [3323..3325]
 r2271: [3324..3331]
 r2272: [3327..3330]
 r2273: [3312..3316]
 r2274: [3311..3315]
 r2275: [3310..3314]
 r2276: [3309..3313]
 r2277: [3302..3303] [3297..3299] [3293..3294]
 r2278: [3300..3301]
 r2279: [3295..3296]
 r2280: [3282..3283]
 r2281: [3275..3276] [3270..3272] [3266..3267]
 r2282: [3273..3274]
 r2283: [3268..3269]
 r2284: [3255..3256]
 r2285: [3250..3252]
 r2286: [3249..3251]
 r2287: [3246..3248]
 r2288: [3245..3247]
 r2289: [3241..3244] [3235..3237]
 r2290: [3236..3243]
 r2291: [3239..3242]
 r2292: [3226..3230]
 r2293: [3225..3229]
 r2294: [3224..3228]
 r2295: [3223..3227]
 r2296: [3216..3217] [3211..3213] [3207..3208]
 r2297: [3214..3215]
 r2298: [3209..3210]
 r2299: [3196..3197]
 r2300: [3189..3190] [3184..3186] [3180..3181]
 r2301: [3187..3188]
 r2302: [3182..3183]
 r2303: [3169..3170]
 r2304: [3164..3166]
 r2305: [3163..3165]
 r2306: [3160..3162]
 r2307: [3159..3161]
 r2308: [3156..3158]
 r2309: [3155..3157]
 r2310: [3151..3154] [3145..3147]
 r2311: [3146..3153]
 r2312: [3149..3152]
 r2313: [3136..3140]
 r2314: [3135..3139]
 r2315: [3134..3138]
 r2316: [3133..3137]
 r2317: [3126..3127] [3121..3123] [3117..3118]
 r2318: [3124..3125]
 r2319: [3119..3120]
 r2320: [3106..3107]
 r2321: [3099..3100] [3094..3096] [3090..3091]
 r2322: [3097..3098]
 r2323: [3092..3093]
 r2324: [3079..3080]
 r2325: [3074..3076]
 r2326: [3073..3075]
 r2327: [3070..3072]
 r2328: [3069..3071]
 r2329: [3065..3068] [3059..3061]
 r2330: [3060..3067]
 r2331: [3063..3066]
 r2332: [3050..3054]
 r2333: [3049..3053]
 r2334: [3048..3052]
 r2335: [3047..3051]
 r2336: [3040..3041] [3035..3037] [3031..3032]
 r2337: [3038..3039]
 r2338: [3033..3034]
 r2339: [3020..3021]
 r2340: [3013..3014] [3008..3010] [3004..3005]
 r2341: [3011..3012]
 r2342: [3006..3007]
 r2343: [2993..2994]
 r2344: [2988..2990]
 r2345: [2987..2989]
 r2346: [2984..2986]
 r2347: [2983..2985]
 r2348: [2979..2982] [2973..2975]
 r2349: [2974..2981]
 r2350: [2977..2980]
 r2351: [2964..2968]
 r2352: [2963..2967]
 r2353: [2962..2966]
 r2354: [2961..2965]
 r2355: [2954..2955] [2949..2951] [2945..2946]
 r2356: [2952..2953]
 r2357: [2947..2948]
 r2358: [2934..2935]
 r2359: [2845..2846]
 r2360: [2852..2853]
 r2361: [2920..2921]
 r2362: [2913..2914]
 r2363: [2906..2907]
 r2364: [2903..2904]
 r2365: [2895..2896]
 r2366: [2888..2889]
 r2367: [2881..2882]
 r2368: [2871..2872]
 r2369: [2864..2865]
 r2370: [2856..2858]
 r2371: [2856..2857]
 r2372: [2838..2839] [2833..2835] [2829..2830]
 r2373: [2836..2837]
 r2374: [2831..2832]
 r2375: [2818..2819]
 r2376: [2813..2815]
 r2377: [2812..2814]
 r2378: [2809..2811]
 r2379: [2808..2810]
 r2380: [2742..2743]
 r2381: [2749..2750]
 r2382: [2801..2802]
 r2383: [2796..2797]
 r2384: [2789..2790]
 r2385: [2786..2787]
 r2386: [2781..2782]
 r2387: [2774..2775]
 r2388: [2771..2772]
 r2389: [2766..2767]
 r2390: [2761..2762]
 r2391: [2752..2753]
 r2392: [2737..2739]
 r2393: [2736..2738]
 r2394: [2732..2735] [2726..2728]
 r2395: [2727..2734]
 r2396: [2730..2733]
 r2397: [2717..2721]
 r2398: [2716..2720]
 r2399: [2715..2719]
 r2400: [2714..2718]
 r2401: [2707..2708] [2702..2704] [2698..2699]
 r2402: [2705..2706]
 r2403: [2700..2701]
 r2404: [2687..2688]
 r2405: [2680..2681] [2675..2677] [2671..2672]
 r2406: [2678..2679]
 r2407: [2673..2674]
 r2408: [2660..2661]
 r2409: [2655..2657]
 r2410: [2654..2656]
 r2411: [2651..2653]
 r2412: [2650..2652]
 r2413: [2589..2590]
 r2414: [2596..2597]
 r2415: [2643..2644]
 r2416: [2638..2639]
 r2417: [2631..2632]
 r2418: [2628..2629]
 r2419: [2623..2624]
 r2420: [2616..2617]
 r2421: [2613..2614]
 r2422: [2608..2609]
 r2423: [2599..2600]
 r2424: [2584..2586]
 r2425: [2583..2585]
 r2426: [2579..2582] [2573..2575]
 r2427: [2574..2581]
 r2428: [2577..2580]
 r2429: [2564..2568]
 r2430: [2563..2567]
 r2431: [2562..2566]
 r2432: [2561..2565]
 r2433: [2554..2555] [2549..2551] [2545..2546]
 r2434: [2552..2553]
 r2435: [2547..2548]
 r2436: [2534..2535]
 r2437: [2527..2528] [2522..2524] [2518..2519]
 r2438: [2525..2526]
 r2439: [2520..2521]
 r2440: [2507..2508]
 r2441: [2503..2504]
 r2442: [2501..2502]
 r2443: [2499..2500]
 r2444: [1888..1889]
 r2445: [1895..1896]
 r2446: [1911..1912]
 r2447: [1906..1907]
 r2448: [1898..1900]
 r2449: [1898..1899]
 r2450: [1920..1921]
 r2451: [1927..1928]
 r2452: [2490..2491]
 r2453: [2485..2486]
 r2454: [2476..2479]
 r2455: [2476..2477]
 r2456: [2473..2474]
 r2457: [2468..2469]
 r2458: [2461..2462]
 r2459: [2454..2455]
 r2460: [2445..2448]
 r2461: [2445..2446]
 r2462: [2442..2443]
 r2463: [2437..2438]
 r2464: [2430..2431]
 r2465: [2426..2427]
 r2466: [2419..2420]
 r2467: [2412..2413]
 r2468: [2403..2406]
 r2469: [2403..2404]
 r2470: [2401..2402]
 r2471: [2394..2395]
 r2472: [2387..2388]
 r2473: [2378..2381]
 r2474: [2378..2379]
 r2475: [2376..2377]
 r2476: [2369..2370]
 r2477: [2362..2363]
 r2478: [2355..2356]
 r2479: [2353..2354]
 r2480: [2350..2352]
 r2481: [2350..2351]
 r2482: [2343..2344]
 r2483: [2345..2346]
 r2484: [2340..2341]
 r2485: [2337..2338]
 r2486: [2327..2328]
 r2487: [2325..2326]
 r2488: [2320..2321]
 r2489: [2311..2314]
 r2490: [2311..2312]
 r2491: [2301..2304]
 r2492: [2301..2302]
 r2493: [2296..2297]
 r2494: [2292..2293]
 r2495: [2289..2291]
 r2496: [2289..2290]
 r2497: [2281..2283]
 r2498: [2281..2282]
 r2499: [2277..2279]
 r2500: [2277..2278]
 r2501: [2269..2271]
 r2502: [2269..2270]
 r2503: [2257..2258]
 r2504: [2252..2253]
 r2505: [2254..2255]
 r2506: [2249..2250]
 r2507: [2240..2241]
 r2508: [2237..2238]
 r2509: [2232..2233]
 r2510: [2227..2228]
 r2511: [2218..2219]
 r2512: [2215..2217]
 r2513: [2215..2216]
 r2514: [2211..2213]
 r2515: [2211..2212]
 r2516: [2204..2205]
 r2517: [2199..2200]
 r2518: [2194..2195]
 r2519: [2185..2186]
 r2520: [2183..2184]
 r2521: [2180..2181]
 r2522: [2175..2176]
 r2523: [2168..2169]
 r2524: [2163..2164]
 r2525: [2156..2157]
 r2526: [2153..2154]
 r2527: [2150..2151]
 r2528: [2145..2146]
 r2529: [2136..2139]
 r2530: [2136..2137]
 r2531: [2132..2133]
 r2532: [2123..2126]
 r2533: [2123..2124]
 r2534: [2120..2121]
 r2535: [2115..2116]
 r2536: [2106..2109]
 r2537: [2106..2107]
 r2538: [2103..2104]
 r2539: [2093..2094]
 r2540: [2086..2087]
 r2541: [2079..2080]
 r2542: [2072..2073]
 r2543: [2070..2071]
 r2544: [2068..2069]
 r2545: [2063..2064]
 r2546: [2058..2059]
 r2547: [2051..2052]
 r2548: [2046..2047]
 r2549: [2041..2042]
 r2550: [2034..2035]
 r2551: [2028..2029]
 r2552: [2026..2027]
 r2553: [2018..2019]
 r2554: [2021..2022]
 r2555: [2023..2024]
 r2556: [2015..2016]
 r2558: [1955..1956]
 r2559: [1952..1953]
 r2560: [1943..1944]
 r2561: [1938..1939]
 r2562: [1931..1932]
 r2563: [2011..2013]
 r2564: [2011..2012]
 r2565: [2008..2009]
 r2566: [1999..2000]
 r2567: [2001..2002]
 r2569: [1994..1995]
 r2570: [1996..1997]
 r2571: [1991..1992]
 r2572: [1981..1982]
 r2573: [1978..1979]
 r2574: [1973..1974]
 r2575: [1968..1969]
 r2576: [1959..1960]
 r2577: [1883..1885]
 r2578: [1882..1884]
 r2579: [1878..1881] [1872..1874]
 r2580: [1873..1880]
 r2581: [1876..1879]
 r2582: [1864..1867]
 r2583: [1863..1866]
 r2584: [1862..1865]
 r2585: [1857..1861]
 r2586: [1856..1860]
 r2587: [1855..1859]
 r2588: [1854..1858]
 r2589: [1847..1848] [1842..1844] [1838..1839]
 r2590: [1845..1846]
 r2591: [1840..1841]
 r2592: [1827..1828]
 r2593: [1820..1821]
 r2594: [1813..1815]
 r2595: [1812..1814]
 r2596: [1803..1804] [1798..1800] [1794..1795]
 r2597: [1801..1802]
 r2598: [1796..1797]
 r2599: [1783..1784]
 r2600: [1778..1780]
 r2601: [1777..1779]
 r2602: [1773..1776] [1767..1769]
 r2603: [1768..1775]
 r2604: [1771..1774]
 r2605: [1758..1762]
 r2606: [1757..1761]
 r2607: [1756..1760]
 r2608: [1755..1759]
 r2609: [1748..1749] [1743..1745] [1739..1740]
 r2610: [1746..1747]
 r2611: [1741..1742]
 r2612: [1728..1729]
 r2613: [1721..1722] [1716..1718] [1712..1713]
 r2614: [1719..1720]
 r2615: [1714..1715]
 r2616: [1701..1702]
 r2617: [1669..1670]
 r2618: [1676..1677]
 r2619: [1692..1693]
 r2620: [1687..1688]
 r2621: [1679..1681]
 r2622: [1679..1680]
 r2623: [1664..1666]
 r2624: [1663..1665]
 r2625: [1659..1662] [1653..1655]
 r2626: [1654..1661]
 r2627: [1657..1660]
 r2628: [1644..1648]
 r2629: [1643..1647]
 r2630: [1642..1646]
 r2631: [1641..1645]
 r2632: [1634..1635] [1629..1631] [1625..1626]
 r2633: [1632..1633]
 r2634: [1627..1628]
 r2635: [1614..1615]
 r2636: [1607..1608] [1602..1604] [1598..1599]
 r2637: [1605..1606]
 r2638: [1600..1601]
 r2639: [1587..1588]
 r2640: [1555..1556]
 r2641: [1562..1563]
 r2642: [1578..1579]
 r2643: [1573..1574]
 r2644: [1565..1567]
 r2645: [1565..1566]
 r2646: [1550..1552]
 r2647: [1549..1551]
 r2648: [1545..1548] [1539..1541]
 r2649: [1540..1547]
 r2650: [1543..1546]
 r2651: [1530..1534]
 r2652: [1529..1533]
 r2653: [1528..1532]
 r2654: [1527..1531]
 r2655: [1520..1521] [1515..1517] [1511..1512]
 r2656: [1518..1519]
 r2657: [1513..1514]
 r2658: [1500..1501]
 r2659: [1493..1494]
 r2660: [1486..1488]
 r2661: [1485..1487]
 r2662: [1476..1477] [1471..1473] [1467..1468]
 r2663: [1474..1475]
 r2664: [1469..1470]
 r2665: [1456..1457]
 r2666: [1451..1452]
 r2667: [1444..1445]
 r2668: [1446..1447]
 r2669: [1449..1450]
 r2670: [1398..1399]
 r2671: [1405..1406]
 r2672: [1437..1438]
 r2673: [1432..1433]
 r2674: [1425..1426]
 r2675: [1422..1423]
 r2676: [1417..1418]
 r2677: [1408..1409]
 r2678: [1393..1395]
 r2679: [1392..1394]
 r2680: [1388..1391] [1382..1384]
 r2681: [1383..1390]
 r2682: [1386..1389]
 r2683: [1380..1381]
 r2684: [1376..1377]
 r2686: [1374..1375]
 r2687: [1372..1374]
 r2688: [1373..1373]
 r2689: [1370..1371]
 r2690: [1364..1365]
 r2691: [1368..1369]
 r2692: [1351..1355]
 r2693: [1350..1354]
 r2694: [1349..1353]
 r2695: [1348..1352]
 r2696: [1341..1342] [1336..1338] [1332..1333]
 r2697: [1339..1340]
 r2698: [1334..1335]
 r2699: [1321..1322]
 r2700: [1314..1315]
 r2701: [1307..1309]
 r2702: [1306..1308]
 r2703: [1297..1298] [1292..1294] [1288..1289]
 r2704: [1295..1296]
 r2705: [1290..1291]
 r2706: [1277..1278]
 r2707: [1272..1273]
 r2708: [1265..1266]
 r2709: [1267..1268]
 r2710: [1270..1271]
 r2711: [1219..1220]
 r2712: [1226..1227]
 r2713: [1258..1259]
 r2714: [1253..1254]
 r2715: [1246..1247]
 r2716: [1243..1244]
 r2717: [1238..1239]
 r2718: [1229..1230]
 r2719: [1214..1216]
 r2720: [1213..1215]
 r2721: [1209..1212] [1203..1205]
 r2722: [1204..1211]
 r2723: [1207..1210]
 r2724: [1201..1202]
 r2725: [1197..1198]
 r2727: [1195..1196]
 r2728: [1193..1195]
 r2729: [1194..1194]
 r2730: [1191..1192]
 r2731: [1185..1186]
 r2732: [1189..1190]
 r2733: [1172..1176]
 r2734: [1171..1175]
 r2735: [1170..1174]
 r2736: [1169..1173]
 r2737: [1145..1146]
 r2738: [1147..1148]
 r2739: [389..390]
 r2740: [396..397]
 r2741: [1138..1139]
 r2742: [1133..1134]
 r2743: [1124..1127]
 r2744: [1124..1125]
 r2745: [1121..1122]
 r2746: [1118..1119]
 r2747: [711..712]
 r2748: [706..707]
 r2749: [698..700]
 r2750: [698..699]
 r2751: [696..697]
 r2752: [691..692]
 r2753: [683..685]
 r2754: [683..684]
 r2755: [1115..1116]
 r2756: [1110..1111]
 r2757: [1101..1104]
 r2758: [1101..1102]
 r2759: [1099..1100]
 r2760: [1097..1098]
 r2761: [1092..1093]
 r2762: [1083..1086]
 r2763: [1083..1084]
 r2764: [1080..1081]
 r2765: [1075..1076]
 r2766: [1066..1069]
 r2767: [1066..1067]
 r2768: [1059..1060]
 r2769: [1061..1062]
 r2770: [1057..1058]
 r2771: [1052..1053]
 r2772: [1043..1046]
 r2773: [1043..1044]
 r2774: [1040..1041]
 r2775: [1035..1036]
 r2776: [1030..1031]
 r2777: [1021..1024]
 r2778: [1021..1022]
 r2779: [1014..1015]
 r2780: [1016..1017]
 r2781: [1012..1013]
 r2782: [1007..1008]
 r2783: [998..1001]
 r2784: [998..999]
 r2785: [995..996]
 r2786: [990..991]
 r2787: [981..984]
 r2788: [981..982]
 r2789: [973..974]
 r2790: [971..972]
 r2791: [966..967]
 r2792: [959..960]
 r2793: [950..953]
 r2794: [950..951]
 r2795: [947..948]
 r2796: [942..943]
 r2797: [933..936]
 r2798: [933..934]
 r2799: [930..931]
 r2800: [925..926]
 r2801: [916..919]
 r2802: [916..917]
 r2803: [907..910]
 r2804: [907..908]
 r2805: [902..903]
 r2806: [890..891]
 r2807: [886..887]
 r2808: [883..885]
 r2809: [883..884]
 r2810: [878..879]
 r2811: [873..874]
 r2812: [864..865]
 r2813: [862..863]
 r2814: [857..858]
 r2815: [848..851]
 r2816: [848..849]
 r2817: [845..846]
 r2818: [840..841]
 r2819: [831..834]
 r2820: [831..832]
 r2821: [823..824]
 r2822: [821..822]
 r2823: [816..817]
 r2824: [809..810]
 r2825: [800..803]
 r2826: [800..801]
 r2827: [797..798]
 r2828: [792..793]
 r2829: [783..786]
 r2830: [783..784]
 r2831: [780..781]
 r2832: [775..776]
 r2833: [766..769]
 r2834: [766..767]
 r2835: [757..760]
 r2836: [757..758]
 r2837: [752..753]
 r2838: [740..741]
 r2839: [736..737]
 r2840: [733..735]
 r2841: [733..734]
 r2842: [728..729]
 r2843: [723..724]
 r2844: [714..715]
 r2845: [680..681]
 r2846: [675..676]
 r2847: [666..669]
 r2848: [666..667]
 r2849: [664..665]
 r2850: [662..663]
 r2851: [657..658]
 r2852: [650..651]
 r2853: [643..644]
 r2854: [638..639]
 r2855: [629..632]
 r2856: [629..630]
 r2857: [626..627]
 r2858: [624..625]
 r2859: [619..620]
 r2860: [612..613]
 r2861: [605..606]
 r2862: [600..601]
 r2863: [591..594]
 r2864: [591..592]
 r2865: [588..589]
 r2866: [586..587]
 r2867: [581..582]
 r2868: [574..575]
 r2869: [567..568]
 r2870: [564..565]
 r2871: [559..560]
 r2872: [554..555]
 r2873: [547..548]
 r2874: [540..541]
 r2875: [537..538]
 r2876: [532..533]
 r2877: [523..524]
 r2878: [521..522]
 r2879: [516..517]
 r2880: [509..510]
 r2881: [502..503]
 r2882: [499..500]
 r2883: [494..495]
 r2884: [487..488]
 r2885: [480..481]
 r2886: [477..478]
 r2887: [472..473]
 r2888: [463..464]
 r2889: [461..462]
 r2890: [456..457]
 r2891: [447..450]
 r2892: [447..448]
 r2893: [444..445]
 r2894: [439..440]
 r2895: [430..433]
 r2896: [430..431]
 r2897: [421..424]
 r2898: [421..422]
 r2899: [416..417]
 r2900: [413..414]
 r2901: [408..409]
 r2902: [399..400]
 r2903: [380..382]
 r2904: [379..381]
 r2905: [375..378] [369..371]
 r2906: [370..377]
 r2907: [373..376]
 r2908: [362..363] [357..359] [353..354]
 r2909: [360..361]
 r2910: [355..356]
 r2911: [349..350]
 r2912: [347..348]
 r2913: [342..345]
 r2914: [341..344]
 r2915: [340..343]
 r2916: [314..316]
 r2917: [313..315]
 r2918: [309..312] [303..305]
 r2919: [304..311]
 r2920: [307..310]
 r2921: [299..302]
 r2922: [298..301]
 r2923: [297..300]
 r2924: [247..248]
 r2925: [254..255]
 r2926: [286..287]
 r2927: [281..282]
 r2928: [274..275]
 r2929: [269..270]
 r2930: [260..263]
 r2931: [260..261]
 r2932: [257..258]
 r2933: [198..199]
 r2934: [208..209]
 r2935: [215..216]
 r2936: [233..234]
 r2937: [226..227]
 r2938: [218..220]
 r2939: [218..219]
 r2940: [6..7]
 r2941: [179..180] [174..176] [170..171]
 r2942: [177..178]
 r2943: [172..173]
 r2944: [159..160]
 r2945: [152..153] [147..149] [143..144]
 r2946: [150..151]
 r2947: [145..146]
 r2948: [132..133]
 r2949: [127..129]
 r2950: [126..128]
 r2951: [123..125]
 r2952: [122..124]
 r2953: [118..121] [112..114]
 r2954: [113..120]
 r2955: [116..119]
 r2956: [103..107]
 r2957: [102..106]
 r2958: [101..105]
 r2959: [100..104]
 r2960: [93..94] [88..90] [84..85]
 r2961: [91..92]
 r2962: [86..87]
 r2963: [73..74]
 r2964: [66..67] [61..63] [57..58]
 r2965: [64..65]
 r2966: [59..60]
 r2967: [46..47]
 r2968: [41..43]
 r2969: [40..42]
 r2970: [37..39]
 r2971: [36..38]
 r2972: [32..35] [26..28]
 r2973: [27..34]
 r2974: [30..33]
 r2975: [17..21]
 r2976: [16..20]
 r2977: [15..19]
 r2978: [14..18]
 r2979: [2..3]
 r2980: [0..1]
 r2983: [5682..5684]
 r2984: [5667..5669]
 r2985: [5621..5623]
 r2986: [5203..5205]
 r2987: [5198..5199]
 r2988: [5194..5195]
 r2989: [5189..5191]
 r2990: [5182..5184]
 r2991: [5177..5178]
 r2992: [5174..5175]
 r2993: [5169..5171]
 r2994: [5162..5164]
 r2995: [4754..4756]
 r2996: [4569..4570]
 r2997: [4543..4544]
 r2998: [4422..4423]
 r2999: [4160..4162]
 r3000: [4068..4070]
 r3001: [3976..3978]
 r3002: [3886..3888]
 r3003: [3776..3778]
 r3004: [3682..3684]
 r3005: [3590..3592]
 r3006: [3496..3498]
 r3007: [3350..3352]
 r3008: [3326..3328]
 r3009: [3238..3240]
 r3010: [3148..3150]
 r3011: [3062..3064]
 r3012: [2976..2978]
 r3013: [2729..2731]
 r3014: [2576..2578]
 r3015: [2470..2472]
 r3016: [2285..2286]
 r3017: [2259..2260]
 r3018: [1875..1877]
 r3019: [1770..1772]
 r3020: [1656..1658]
 r3021: [1542..1544]
 r3022: [1385..1387]
 r3023: [1206..1208]
 r3024: [385..386]
 r3025: [383..384]
 r3026: [372..374]
 r3027: [331..332]
 r3028: [329..330]
 r3029: [327..328]
 r3030: [325..326]
 r3031: [323..324]
 r3032: [321..322]
 r3033: [319..320]
 r3034: [306..308]
 r3035: [194..195]
 r3036: [192..193]
 r3037: [190..191]
 r3038: [188..189]
 r3039: [115..117]
 r3040: [29..31]
 r3041: [4545..4568]
 r3042: [2261..2284]
Compressing live ranges: from 5788 to 4596 - 79%
Ranges after the compression:
 r87: [4592..4593]
 r88: [4584..4585]
 r89: [4578..4579]
 r90: [4578..4595]
 r92: [4576..4577]
 r93: [4574..4575]
 r94: [4572..4573]
 r95: [4564..4565]
 r96: [4556..4557]
 r97: [4550..4551]
 r98: [4550..4595]
 r100: [4548..4549]
 r101: [4546..4547]
 r102: [4544..4545]
 r103: [4534..4535]
 r104: [4532..4533]
 r105: [4532..4533]
 r106: [4518..4519]
 r107: [4512..4517]
 r108: [4514..4515]
 r109: [4510..4513]
 r110: [4506..4507]
 r111: [4496..4497]
 r112: [4494..4495]
 r113: [4488..4493]
 r114: [4482..4483]
 r115: [4476..4477]
 r116: [4474..4475]
 r117: [4458..4459]
 r118: [4456..4457]
 r119: [4450..4455]
 r120: [4444..4445]
 r121: [4438..4439]
 r122: [4432..4433]
 r123: [4428..4431]
 r124: [4428..4429]
 r125: [4426..4427]
 r126: [4424..4425]
 r127: [4410..4421]
 r128: [4418..4419]
 r129: [4414..4417]
 r130: [4414..4415]
 r131: [4412..4413]
 r132: [4408..4411]
 r133: [4406..4409]
 r134: [4402..4403]
 r135: [4398..4401]
 r136: [4398..4399]
 r137: [4396..4397]
 r138: [4384..4395]
 r139: [4392..4393]
 r140: [4388..4391]
 r141: [4388..4389]
 r142: [4386..4387]
 r143: [4380..4385]
 r144: [4380..4381]
 r145: [4150..4151]
 r146: [4368..4369]
 r147: [4366..4367]
 r148: [4360..4365]
 r149: [4362..4363]
 r150: [4360..4361]
 r151: [4356..4359]
 r152: [4356..4357]
 r153: [4354..4355]
 r154: [4352..4353]
 r155: [4328..4349]
 r156: [4348..4349]
 r157: [4346..4347]
 r158: [4340..4345]
 r159: [4342..4343]
 r160: [4340..4341]
 r161: [4336..4339]
 r162: [4336..4337]
 r163: [4334..4335]
 r164: [4332..4333]
 r165: [4328..4329]
 r166: [4300..4327]
 r167: [4326..4327]
 r168: [4324..4325]
 r169: [4318..4323]
 r170: [4320..4321]
 r171: [4318..4319]
 r172: [4314..4317]
 r173: [4314..4315]
 r174: [4312..4313]
 r175: [4310..4311]
 r176: [4306..4307]
 r177: [4304..4305]
 r178: [4302..4303]
 r179: [4300..4301]
 r180: [4296..4299]
 r181: [4296..4297]
 r182: [4248..4295]
 r183: [4294..4295]
 r184: [4292..4293]
 r185: [4290..4291]
 r186: [4284..4289]
 r187: [4286..4287]
 r188: [4284..4285]
 r189: [4280..4283]
 r190: [4280..4281]
 r191: [4278..4279]
 r192: [4276..4277]
 r193: [4252..4273]
 r194: [4272..4273]
 r195: [4270..4271]
 r196: [4264..4269]
 r197: [4266..4267]
 r198: [4264..4265]
 r199: [4260..4263]
 r200: [4260..4261]
 r201: [4258..4259]
 r202: [4256..4257]
 r203: [4252..4253]
 r204: [4250..4251]
 r205: [4248..4249]
 r206: [4224..4247]
 r207: [4244..4245]
 r208: [4240..4243]
 r209: [4240..4241]
 r210: [4238..4239]
 r211: [4236..4237]
 r212: [4224..4235]
 r213: [4232..4233]
 r214: [4228..4231]
 r215: [4228..4229]
 r216: [4226..4227]
 r217: [4222..4225]
 r218: [4222..4223]
 r219: [4218..4219]
 r220: [4214..4217]
 r221: [4214..4215]
 r222: [4212..4213]
 r223: [4210..4211]
 r224: [4192..4209]
 r225: [4208..4209]
 r226: [4206..4207]
 r227: [4200..4205]
 r228: [4202..4203]
 r229: [4200..4201]
 r230: [4196..4199]
 r231: [4196..4197]
 r232: [4194..4195]
 r233: [4190..4193]
 r234: [4188..4191]
 r235: [4184..4185]
 r236: [4180..4183]
 r237: [4180..4181]
 r238: [4178..4179]
 r239: [4166..4177]
 r240: [4174..4175]
 r241: [4170..4173]
 r242: [4170..4171]
 r243: [4168..4169]
 r244: [4164..4167]
 r245: [4164..4165]
 r246: [4154..4155]
 r247: [4152..4153]
 r248: [4138..4139]
 r249: [4136..4137]
 r250: [4088..4089]
 r251: [4086..4087]
 r252: [4080..4081]
 r253: [4074..4075]
 r254: [4068..4069]
 r255: [4064..4067]
 r256: [4064..4065]
 r257: [4062..4063]
 r258: [4060..4061]
 r259: [4056..4057]
 r260: [4012..4013]
 r261: [4050..4051]
 r262: [4048..4049]
 r263: [4046..4047]
 r264: [4044..4045]
 r265: [4022..4041]
 r266: [4040..4041]
 r267: [4038..4039]
 r268: [4036..4037]
 r269: [4030..4035]
 r270: [4032..4033]
 r271: [4030..4031]
 r272: [4026..4029]
 r273: [4026..4027]
 r274: [4024..4025]
 r275: [4020..4023]
 r276: [4018..4021]
 r277: [4016..4017]
 r278: [4014..4015]
 r279: [3860..3861]
 r280: [4000..4001]
 r281: [3998..3999]
 r282: [3996..3997]
 r283: [3990..3995]
 r284: [3992..3993]
 r285: [3990..3991]
 r286: [3986..3989]
 r287: [3986..3987]
 r288: [3984..3985]
 r289: [3982..3983]
 r290: [3962..3981]
 r291: [3980..3981]
 r292: [3978..3979]
 r293: [3972..3977]
 r294: [3974..3975]
 r295: [3972..3973]
 r296: [3968..3971]
 r297: [3968..3969]
 r298: [3966..3967]
 r299: [3964..3965]
 r300: [3962..3963]
 r301: [3960..3961]
 r302: [3942..3959]
 r303: [3958..3959]
 r304: [3956..3957]
 r305: [3950..3955]
 r306: [3952..3953]
 r307: [3950..3951]
 r308: [3946..3949]
 r309: [3946..3947]
 r310: [3944..3945]
 r311: [3940..3943]
 r312: [3940..3941]
 r313: [3938..3939]
 r314: [3936..3937]
 r315: [3934..3935]
 r316: [3928..3933]
 r317: [3930..3931]
 r318: [3928..3929]
 r319: [3924..3927]
 r320: [3924..3925]
 r321: [3922..3923]
 r322: [3920..3921]
 r323: [3896..3917]
 r324: [3916..3917]
 r325: [3914..3915]
 r326: [3908..3913]
 r327: [3910..3911]
 r328: [3908..3909]
 r329: [3904..3907]
 r330: [3904..3905]
 r331: [3902..3903]
 r332: [3900..3901]
 r333: [3896..3897]
 r334: [3894..3895]
 r335: [3876..3893]
 r336: [3892..3893]
 r337: [3890..3891]
 r338: [3884..3889]
 r339: [3886..3887]
 r340: [3884..3885]
 r341: [3880..3883]
 r342: [3880..3881]
 r343: [3878..3879]
 r344: [3874..3877]
 r345: [3874..3875]
 r346: [3864..3865]
 r347: [3862..3863]
 r348: [3854..3855]
 r349: [3852..3853]
 r350: [3850..3851]
 r351: [3848..3849]
 r352: [3846..3847]
 r353: [3844..3845]
 r354: [3842..3843]
 r355: [3840..3841]
 r356: [3838..3839]
 r357: [3836..3837]
 r358: [3834..3835]
 r359: [3832..3833]
 r360: [3830..3831]
 r361: [3828..3829]
 r362: [3826..3827]
 r363: [3824..3825]
 r364: [3822..3823]
 r365: [3820..3821]
 r366: [3818..3819]
 r367: [3816..3817]
 r368: [3814..3815]
 r369: [3812..3813]
 r370: [3810..3811]
 r371: [3808..3809]
 r372: [3806..3807]
 r373: [3804..3805]
 r374: [3802..3803]
 r375: [3800..3801]
 r376: [3792..3793]
 r377: [3788..3791]
 r378: [3788..3789]
 r379: [3786..3787]
 r380: [3784..3785]
 r381: [3334..3335]
 r382: [3770..3771]
 r383: [3766..3769]
 r384: [3766..3767]
 r385: [3764..3765]
 r386: [3762..3763]
 r387: [3756..3759]
 r388: [3752..3753]
 r389: [3750..3751]
 r390: [3744..3749]
 r391: [3746..3747]
 r392: [3744..3745]
 r393: [3740..3743]
 r394: [3740..3741]
 r395: [3738..3739]
 r396: [3736..3737]
 r397: [3720..3733]
 r398: [3730..3731]
 r399: [3726..3729]
 r400: [3726..3727]
 r401: [3724..3725]
 r402: [3722..3723]
 r403: [3720..3721]
 r404: [3716..3717]
 r405: [3714..3715]
 r406: [3708..3713]
 r407: [3710..3711]
 r408: [3708..3709]
 r409: [3704..3707]
 r410: [3704..3705]
 r411: [3702..3703]
 r412: [3700..3701]
 r413: [3694..3695]
 r414: [3692..3693]
 r415: [3686..3691]
 r416: [3688..3689]
 r417: [3686..3687]
 r418: [3682..3685]
 r419: [3682..3683]
 r420: [3680..3681]
 r421: [3678..3679]
 r422: [3672..3673]
 r423: [3670..3671]
 r424: [3664..3669]
 r425: [3666..3667]
 r426: [3664..3665]
 r427: [3660..3663]
 r428: [3660..3661]
 r429: [3658..3659]
 r430: [3656..3657]
 r431: [3650..3651]
 r432: [3648..3649]
 r433: [3640..3643]
 r434: [3640..3641]
 r435: [3638..3639]
 r436: [3630..3631]
 r437: [3626..3629]
 r438: [3626..3627]
 r439: [3624..3625]
 r440: [3622..3623]
 r441: [3610..3619]
 r442: [3618..3619]
 r443: [3616..3617]
 r444: [3614..3615]
 r445: [3610..3611]
 r446: [3606..3609]
 r447: [3606..3607]
 r448: [3600..3601]
 r450: [3590..3595]
 r451: [3592..3593]
 r452: [3590..3591]
 r453: [3584..3589]
 r454: [3586..3587]
 r455: [3584..3585]
 r456: [3582..3583]
 r457: [3578..3581]
 r458: [3568..3571]
 r459: [3568..3569]
 r460: [3566..3567]
 r461: [3562..3563]
 r462: [3560..3561]
 r463: [3548..3559]
 r464: [3556..3557]
 r465: [3552..3555]
 r466: [3552..3553]
 r467: [3550..3551]
 r468: [3546..3549]
 r469: [3546..3547]
 r470: [3542..3543]
 r471: [3538..3541]
 r472: [3538..3539]
 r473: [3536..3537]
 r474: [3534..3535]
 r475: [3498..3531]
 r476: [3530..3531]
 r477: [3528..3529]
 r478: [3526..3527]
 r479: [3524..3525]
 r480: [3502..3521]
 r481: [3518..3519]
 r482: [3514..3517]
 r483: [3514..3515]
 r484: [3512..3513]
 r485: [3510..3511]
 r486: [3506..3507]
 r487: [3504..3505]
 r488: [3502..3503]
 r489: [3500..3501]
 r490: [3498..3499]
 r491: [3490..3491]
 r492: [3486..3489]
 r493: [3486..3487]
 r494: [3484..3485]
 r495: [3482..3483]
 r496: [3480..3481]
 r497: [3476..3477]
 r498: [3450..3451]
 r499: [3448..3449]
 r500: [3442..3447]
 r501: [3444..3445]
 r502: [3442..3443]
 r503: [3438..3441]
 r504: [3438..3439]
 r505: [3436..3437]
 r506: [3434..3435]
 r507: [3468..3469]
 r508: [3466..3467]
 r509: [3460..3465]
 r510: [3462..3463]
 r511: [3460..3461]
 r512: [3456..3459]
 r513: [3456..3457]
 r514: [3454..3455]
 r515: [3452..3453]
 r516: [3430..3431]
 r517: [3428..3429]
 r518: [3422..3427]
 r519: [3424..3425]
 r520: [3422..3423]
 r521: [3418..3421]
 r522: [3418..3419]
 r523: [3416..3417]
 r524: [3414..3415]
 r525: [3408..3409]
 r526: [3406..3407]
 r527: [3400..3405]
 r528: [3402..3403]
 r529: [3400..3401]
 r530: [3396..3399]
 r531: [3396..3397]
 r532: [3394..3395]
 r533: [3392..3393]
 r534: [3390..3391]
 r535: [3388..3389]
 r536: [3386..3387]
 r537: [3380..3385]
 r538: [3382..3383]
 r539: [3380..3381]
 r540: [3376..3379]
 r541: [3376..3377]
 r542: [3374..3375]
 r543: [3372..3373]
 r544: [3368..3371]
 r545: [3364..3365]
 r546: [3362..3363]
 r547: [3356..3361]
 r548: [3358..3359]
 r549: [3356..3357]
 r550: [3352..3355]
 r551: [3352..3353]
 r552: [3350..3351]
 r553: [3348..3349]
 r554: [3338..3339]
 r555: [3336..3337]
 r556: [954..955]
 r557: [3328..3329]
 r558: [3326..3327]
 r559: [3320..3325]
 r560: [3312..3315]
 r561: [3314..3315]
 r562: [3312..3313]
 r563: [3310..3311]
 r564: [3308..3309]
 r565: [3304..3305]
 r566: [3302..3303]
 r567: [3296..3301]
 r568: [3288..3291]
 r569: [3290..3291]
 r570: [3288..3289]
 r571: [3286..3287]
 r572: [3284..3285]
 r573: [3280..3281]
 r574: [3268..3269]
 r575: [3266..3267]
 r576: [3256..3257]
 r577: [3254..3255]
 r578: [3248..3253]
 r579: [3240..3243]
 r580: [3242..3243]
 r581: [3240..3241]
 r582: [3238..3239]
 r583: [3236..3237]
 r584: [3232..3233]
 r585: [3230..3231]
 r586: [3224..3229]
 r587: [3216..3219]
 r588: [3218..3219]
 r589: [3216..3217]
 r590: [3214..3215]
 r591: [3212..3213]
 r592: [3208..3209]
 r593: [3196..3197]
 r594: [3194..3195]
 r595: [3184..3185]
 r596: [3182..3183]
 r597: [3176..3181]
 r598: [3168..3171]
 r599: [3170..3171]
 r600: [3168..3169]
 r601: [3166..3167]
 r602: [3164..3165]
 r603: [3160..3161]
 r604: [3158..3159]
 r605: [3152..3157]
 r606: [3144..3147]
 r607: [3146..3147]
 r608: [3144..3145]
 r609: [3142..3143]
 r610: [3140..3141]
 r611: [3136..3137]
 r612: [3124..3125]
 r613: [3122..3123]
 r614: [3118..3119]
 r615: [3116..3117]
 r616: [3110..3115]
 r617: [3102..3105]
 r618: [3104..3105]
 r619: [3102..3103]
 r620: [3100..3101]
 r621: [3098..3099]
 r622: [3094..3095]
 r623: [3092..3093]
 r624: [3086..3091]
 r625: [3078..3081]
 r626: [3080..3081]
 r627: [3078..3079]
 r628: [3076..3077]
 r629: [3074..3075]
 r630: [3070..3071]
 r631: [3056..3057]
 r632: [3054..3055]
 r633: [3050..3051]
 r634: [3048..3049]
 r635: [3042..3047]
 r636: [3034..3037]
 r637: [3036..3037]
 r638: [3034..3035]
 r639: [3032..3033]
 r640: [3030..3031]
 r641: [3026..3027]
 r642: [3024..3025]
 r643: [3018..3023]
 r644: [3010..3013]
 r645: [3012..3013]
 r646: [3010..3011]
 r647: [3008..3009]
 r648: [3006..3007]
 r649: [3002..3003]
 r650: [2980..2981]
 r651: [2978..2979]
 r652: [2974..2975]
 r653: [2972..2973]
 r654: [2966..2971]
 r655: [2958..2961]
 r656: [2960..2961]
 r657: [2958..2959]
 r658: [2956..2957]
 r659: [2954..2955]
 r660: [2950..2951]
 r661: [2948..2949]
 r662: [2942..2947]
 r663: [2934..2937]
 r664: [2936..2937]
 r665: [2934..2935]
 r666: [2932..2933]
 r667: [2930..2931]
 r668: [2926..2927]
 r669: [2910..2911]
 r670: [2908..2909]
 r671: [2904..2905]
 r672: [2902..2903]
 r673: [2896..2901]
 r674: [2888..2891]
 r675: [2890..2891]
 r676: [2888..2889]
 r677: [2886..2887]
 r678: [2884..2885]
 r679: [2880..2881]
 r680: [2878..2879]
 r681: [2872..2877]
 r682: [2864..2867]
 r683: [2866..2867]
 r684: [2864..2865]
 r685: [2862..2863]
 r686: [2860..2861]
 r687: [2856..2857]
 r688: [2842..2843]
 r689: [2840..2841]
 r690: [2836..2837]
 r691: [2834..2835]
 r692: [2828..2833]
 r693: [2820..2823]
 r694: [2822..2823]
 r695: [2820..2821]
 r696: [2818..2819]
 r697: [2816..2817]
 r698: [2812..2813]
 r699: [2810..2811]
 r700: [2804..2809]
 r701: [2796..2799]
 r702: [2798..2799]
 r703: [2796..2797]
 r704: [2794..2795]
 r705: [2792..2793]
 r706: [2788..2789]
 r707: [2772..2773]
 r708: [2770..2771]
 r709: [2766..2767]
 r710: [2764..2765]
 r711: [2762..2763]
 r712: [2756..2761]
 r713: [2748..2751]
 r714: [2750..2751]
 r715: [2748..2749]
 r716: [2746..2747]
 r717: [2744..2745]
 r718: [2740..2741]
 r719: [2738..2739]
 r720: [2732..2737]
 r721: [2724..2727]
 r722: [2726..2727]
 r723: [2724..2725]
 r724: [2722..2723]
 r725: [2720..2721]
 r726: [2716..2717]
 r727: [2714..2715]
 r728: [2708..2713]
 r729: [2700..2703]
 r730: [2702..2703]
 r731: [2700..2701]
 r732: [2698..2699]
 r733: [2696..2697]
 r734: [2692..2693]
 r735: [2688..2689]
 r736: [2682..2687]
 r737: [2674..2677]
 r738: [2676..2677]
 r739: [2674..2675]
 r740: [2672..2673]
 r741: [2670..2671]
 r742: [2666..2667]
 r743: [2654..2655]
 r744: [2652..2653]
 r745: [2650..2651]
 r746: [2640..2641]
 r747: [2638..2639]
 r748: [2636..2637]
 r749: [2632..2633]
 r750: [2630..2631]
 r751: [2624..2629]
 r752: [2616..2619]
 r753: [2618..2619]
 r754: [2616..2617]
 r755: [2614..2615]
 r756: [2612..2613]
 r757: [2608..2609]
 r758: [2606..2607]
 r759: [2600..2605]
 r760: [2592..2595]
 r761: [2594..2595]
 r762: [2592..2593]
 r763: [2590..2591]
 r764: [2588..2589]
 r765: [2584..2585]
 r766: [2572..2573]
 r767: [2570..2571]
 r768: [2566..2567]
 r769: [2564..2565]
 r770: [2558..2563]
 r771: [2550..2553]
 r772: [2552..2553]
 r773: [2550..2551]
 r774: [2548..2549]
 r775: [2546..2547]
 r776: [2542..2543]
 r777: [2540..2541]
 r778: [2534..2539]
 r779: [2526..2529]
 r780: [2528..2529]
 r781: [2526..2527]
 r782: [2524..2525]
 r783: [2522..2523]
 r784: [2518..2519]
 r785: [2504..2505]
 r786: [2502..2503]
 r787: [2498..2499]
 r788: [2496..2497]
 r789: [2490..2495]
 r790: [2482..2485]
 r791: [2484..2485]
 r792: [2482..2483]
 r793: [2480..2481]
 r794: [2478..2479]
 r795: [2474..2475]
 r796: [2472..2473]
 r797: [2466..2471]
 r798: [2458..2461]
 r799: [2460..2461]
 r800: [2458..2459]
 r801: [2456..2457]
 r802: [2454..2455]
 r803: [2450..2451]
 r804: [2438..2439]
 r805: [2436..2437]
 r806: [2432..2433]
 r807: [2430..2431]
 r808: [2424..2429]
 r809: [2416..2419]
 r810: [2418..2419]
 r811: [2416..2417]
 r812: [2414..2415]
 r813: [2412..2413]
 r814: [2408..2409]
 r815: [2406..2407]
 r816: [2400..2405]
 r817: [2392..2395]
 r818: [2394..2395]
 r819: [2392..2393]
 r820: [2390..2391]
 r821: [2388..2389]
 r822: [2384..2385]
 r823: [2372..2373]
 r824: [2370..2371]
 r825: [2366..2367]
 r826: [2364..2365]
 r827: [2358..2363]
 r828: [2350..2353]
 r829: [2352..2353]
 r830: [2350..2351]
 r831: [2348..2349]
 r832: [2346..2347]
 r833: [2342..2343]
 r834: [2338..2339]
 r835: [2336..2337]
 r836: [2330..2335]
 r837: [2332..2333]
 r838: [2330..2331]
 r839: [2326..2329]
 r840: [2326..2327]
 r841: [2324..2325]
 r842: [2322..2323]
 r843: [2320..2321]
 r844: [2318..2319]
 r845: [2316..2317]
 r846: [2310..2315]
 r847: [2312..2313]
 r848: [2310..2311]
 r849: [2306..2309]
 r850: [2306..2307]
 r851: [2304..2305]
 r852: [2302..2303]
 r853: [2300..2301]
 r854: [2298..2299]
 r855: [2296..2297]
 r856: [2290..2295]
 r857: [2292..2293]
 r858: [2290..2291]
 r859: [2286..2289]
 r860: [2286..2287]
 r861: [2284..2285]
 r862: [2282..2283]
 r863: [2272..2273]
 r864: [2266..2271]
 r865: [2258..2261]
 r866: [2260..2261]
 r867: [2258..2259]
 r868: [2256..2257]
 r869: [2254..2255]
 r870: [2250..2251]
 r871: [2240..2241]
 r872: [2236..2239]
 r873: [2236..2237]
 r874: [2234..2235]
 r875: [2232..2233]
 r876: [2204..2231]
 r877: [2228..2229]
 r878: [2224..2227]
 r879: [2224..2225]
 r880: [2222..2223]
 r881: [2220..2221]
 r882: [2218..2219]
 r883: [2216..2217]
 r884: [2204..2215]
 r885: [2212..2213]
 r886: [2208..2211]
 r887: [2208..2209]
 r888: [2206..2207]
 r889: [2202..2205]
 r890: [2202..2203]
 r891: [2184..2185]
 r892: [2182..2183]
 r893: [2178..2179]
 r894: [2176..2177]
 r895: [2170..2175]
 r896: [2162..2165]
 r897: [2164..2165]
 r898: [2162..2163]
 r899: [2160..2161]
 r900: [2158..2159]
 r901: [2154..2155]
 r902: [2152..2153]
 r903: [2146..2151]
 r904: [2138..2141]
 r905: [2140..2141]
 r906: [2138..2139]
 r907: [2136..2137]
 r908: [2134..2135]
 r909: [2130..2131]
 r910: [2120..2121]
 r911: [2116..2119]
 r912: [2116..2117]
 r913: [2114..2115]
 r914: [2112..2113]
 r915: [2088..2111]
 r916: [2108..2109]
 r917: [2104..2107]
 r918: [2104..2105]
 r919: [2102..2103]
 r920: [2100..2101]
 r921: [2088..2099]
 r922: [2096..2097]
 r923: [2092..2095]
 r924: [2092..2093]
 r925: [2090..2091]
 r926: [2086..2089]
 r927: [2086..2087]
 r928: [2068..2069]
 r929: [2066..2067]
 r930: [2062..2063]
 r931: [2060..2061]
 r932: [2054..2059]
 r933: [2046..2049]
 r934: [2048..2049]
 r935: [2046..2047]
 r936: [2044..2045]
 r937: [2042..2043]
 r938: [2038..2039]
 r939: [2036..2037]
 r940: [2030..2035]
 r941: [2022..2025]
 r942: [2024..2025]
 r943: [2022..2023]
 r944: [2020..2021]
 r945: [2018..2019]
 r946: [2014..2015]
 r947: [2006..2007]
 r948: [1530..1531]
 r949: [1526..1529]
 r950: [1526..1527]
 r951: [1524..1525]
 r952: [1522..1523]
 r953: [2000..2001]
 r954: [1996..1999]
 r955: [1996..1997]
 r956: [1994..1995]
 r957: [1992..1993]
 r958: [1986..1989]
 r959: [1982..1983]
 r960: [1980..1981]
 r961: [1974..1979]
 r962: [1976..1977]
 r963: [1974..1975]
 r964: [1970..1973]
 r965: [1970..1971]
 r966: [1968..1969]
 r967: [1966..1967]
 r968: [1950..1963]
 r969: [1960..1961]
 r970: [1956..1959]
 r971: [1956..1957]
 r972: [1954..1955]
 r973: [1952..1953]
 r974: [1950..1951]
 r975: [1946..1947]
 r976: [1944..1945]
 r977: [1938..1943]
 r978: [1940..1941]
 r979: [1938..1939]
 r980: [1934..1937]
 r981: [1934..1935]
 r982: [1932..1933]
 r983: [1930..1931]
 r984: [1924..1925]
 r985: [1922..1923]
 r986: [1916..1921]
 r987: [1918..1919]
 r988: [1916..1917]
 r989: [1912..1915]
 r990: [1912..1913]
 r991: [1910..1911]
 r992: [1908..1909]
 r993: [1902..1903]
 r994: [1900..1901]
 r995: [1894..1899]
 r996: [1896..1897]
 r997: [1894..1895]
 r998: [1890..1893]
 r999: [1890..1891]
 r1000: [1888..1889]
 r1001: [1886..1887]
 r1002: [1880..1881]
 r1003: [1878..1879]
 r1004: [1870..1873]
 r1005: [1870..1871]
 r1006: [1868..1869]
 r1007: [1860..1861]
 r1008: [1856..1859]
 r1009: [1856..1857]
 r1010: [1854..1855]
 r1011: [1852..1853]
 r1012: [1840..1849]
 r1013: [1848..1849]
 r1014: [1846..1847]
 r1015: [1844..1845]
 r1016: [1840..1841]
 r1017: [1836..1839]
 r1018: [1836..1837]
 r1019: [1830..1831]
 r1021: [1820..1825]
 r1022: [1822..1823]
 r1023: [1820..1821]
 r1024: [1814..1819]
 r1025: [1816..1817]
 r1026: [1814..1815]
 r1027: [1812..1813]
 r1028: [1808..1811]
 r1029: [1798..1801]
 r1030: [1798..1799]
 r1031: [1796..1797]
 r1032: [1792..1793]
 r1033: [1790..1791]
 r1034: [1778..1789]
 r1035: [1786..1787]
 r1036: [1782..1785]
 r1037: [1782..1783]
 r1038: [1780..1781]
 r1039: [1776..1779]
 r1040: [1776..1777]
 r1041: [1768..1773]
 r1042: [1770..1771]
 r1043: [1768..1769]
 r1044: [1766..1767]
 r1045: [1764..1765]
 r1046: [1752..1763]
 r1047: [1760..1761]
 r1048: [1756..1759]
 r1049: [1756..1757]
 r1050: [1754..1755]
 r1051: [1750..1753]
 r1052: [1750..1751]
 r1053: [1744..1745]
 r1054: [1740..1743]
 r1055: [1740..1741]
 r1056: [1738..1739]
 r1057: [1726..1737]
 r1058: [1734..1735]
 r1059: [1730..1733]
 r1060: [1730..1731]
 r1061: [1728..1729]
 r1062: [1724..1727]
 r1063: [1724..1725]
 r1064: [1720..1721]
 r1065: [1716..1719]
 r1066: [1716..1717]
 r1067: [1714..1715]
 r1068: [1712..1713]
 r1069: [1676..1709]
 r1070: [1708..1709]
 r1071: [1706..1707]
 r1072: [1704..1705]
 r1073: [1702..1703]
 r1074: [1680..1699]
 r1075: [1696..1697]
 r1076: [1692..1695]
 r1077: [1692..1693]
 r1078: [1690..1691]
 r1079: [1688..1689]
 r1080: [1684..1685]
 r1081: [1682..1683]
 r1082: [1680..1681]
 r1083: [1678..1679]
 r1084: [1676..1677]
 r1085: [1672..1673]
 r1086: [1670..1671]
 r1087: [1664..1669]
 r1088: [1666..1667]
 r1089: [1664..1665]
 r1090: [1660..1663]
 r1091: [1660..1661]
 r1092: [1658..1659]
 r1093: [1656..1657]
 r1094: [1650..1651]
 r1095: [1636..1649]
 r1096: [1646..1647]
 r1097: [1642..1645]
 r1098: [1642..1643]
 r1099: [1640..1641]
 r1100: [1638..1639]
 r1101: [1636..1637]
 r1102: [1620..1635]
 r1103: [1632..1633]
 r1104: [1628..1631]
 r1105: [1628..1629]
 r1106: [1626..1627]
 r1107: [1624..1625]
 r1108: [1622..1623]
 r1109: [1620..1621]
 r1110: [1558..1561]
 r1111: [1558..1559]
 r1112: [1556..1557]
 r1113: [1552..1553]
 r1114: [1548..1551]
 r1115: [1548..1549]
 r1116: [1546..1547]
 r1117: [1544..1545]
 r1118: [1600..1605]
 r1119: [1602..1603]
 r1120: [1600..1601]
 r1121: [1598..1599]
 r1122: [1588..1591]
 r1123: [1588..1589]
 r1124: [1586..1587]
 r1125: [1580..1581]
 r1126: [1578..1579]
 r1127: [1566..1577]
 r1128: [1574..1575]
 r1129: [1570..1573]
 r1130: [1570..1571]
 r1131: [1568..1569]
 r1132: [1564..1567]
 r1133: [1564..1565]
 r1134: [1504..1505]
 r1135: [1502..1503]
 r1136: [1496..1497]
 r1137: [1494..1495]
 r1138: [1488..1493]
 r1139: [1480..1483]
 r1140: [1482..1483]
 r1141: [1480..1481]
 r1142: [1478..1479]
 r1143: [1476..1477]
 r1144: [1472..1473]
 r1145: [1470..1471]
 r1146: [1468..1469]
 r1147: [1466..1467]
 r1148: [1464..1465]
 r1149: [1460..1461]
 r1150: [1458..1459]
 r1151: [1456..1457]
 r1152: [1450..1455]
 r1153: [1442..1445]
 r1154: [1444..1445]
 r1155: [1442..1443]
 r1156: [1440..1441]
 r1157: [1438..1439]
 r1158: [1434..1435]
 r1159: [1424..1425]
 r1160: [1422..1423]
 r1161: [1418..1419]
 r1162: [1416..1417]
 r1163: [1410..1415]
 r1164: [1402..1405]
 r1165: [1404..1405]
 r1166: [1402..1403]
 r1167: [1400..1401]
 r1168: [1398..1399]
 r1169: [1394..1395]
 r1170: [1392..1393]
 r1171: [1386..1391]
 r1172: [1378..1381]
 r1173: [1380..1381]
 r1174: [1378..1379]
 r1175: [1376..1377]
 r1176: [1374..1375]
 r1177: [1370..1371]
 r1178: [1364..1365]
 r1179: [1360..1363]
 r1180: [1360..1361]
 r1181: [1358..1359]
 r1182: [1356..1357]
 r1183: [1338..1339]
 r1184: [1336..1337]
 r1185: [1332..1333]
 r1186: [1330..1331]
 r1187: [1324..1329]
 r1188: [1316..1319]
 r1189: [1318..1319]
 r1190: [1316..1317]
 r1191: [1314..1315]
 r1192: [1312..1313]
 r1193: [1308..1309]
 r1194: [1306..1307]
 r1195: [1300..1305]
 r1196: [1292..1295]
 r1197: [1294..1295]
 r1198: [1292..1293]
 r1199: [1290..1291]
 r1200: [1288..1289]
 r1201: [1284..1285]
 r1202: [1278..1279]
 r1203: [1274..1277]
 r1204: [1274..1275]
 r1205: [1272..1273]
 r1206: [1270..1271]
 r1207: [1252..1253]
 r1208: [1250..1251]
 r1209: [1246..1247]
 r1210: [1244..1245]
 r1211: [1238..1243]
 r1212: [1230..1233]
 r1213: [1232..1233]
 r1214: [1230..1231]
 r1215: [1228..1229]
 r1216: [1226..1227]
 r1217: [1222..1223]
 r1218: [1220..1221]
 r1219: [1218..1219]
 r1220: [1216..1217]
 r1221: [1214..1215]
 r1222: [1210..1211]
 r1223: [1208..1209]
 r1224: [1206..1207]
 r1225: [1200..1205]
 r1226: [1192..1195]
 r1227: [1194..1195]
 r1228: [1192..1193]
 r1229: [1190..1191]
 r1230: [1188..1189]
 r1231: [1184..1185]
 r1232: [1182..1183]
 r1233: [1178..1179]
 r1234: [1170..1171]
 r1235: [1166..1169]
 r1236: [1166..1167]
 r1237: [1164..1165]
 r1238: [1162..1163]
 r1239: [1150..1161]
 r1240: [1158..1159]
 r1241: [1154..1157]
 r1242: [1154..1155]
 r1243: [1152..1153]
 r1244: [1148..1151]
 r1245: [1148..1149]
 r1246: [1128..1129]
 r1247: [1112..1113]
 r1248: [1116..1117]
 r1249: [1110..1111]
 r1250: [1108..1109]
 r1251: [1106..1107]
 r1252: [1102..1103]
 r1253: [1100..1101]
 r1254: [1094..1099]
 r1255: [1086..1089]
 r1256: [1088..1089]
 r1257: [1086..1087]
 r1258: [1084..1085]
 r1259: [1082..1083]
 r1260: [1078..1079]
 r1261: [1076..1077]
 r1262: [1074..1075]
 r1263: [1072..1073]
 r1264: [1070..1071]
 r1265: [1066..1067]
 r1266: [1064..1065]
 r1267: [1062..1063]
 r1268: [1056..1061]
 r1269: [1048..1051]
 r1270: [1050..1051]
 r1271: [1048..1049]
 r1272: [1046..1047]
 r1273: [1044..1045]
 r1274: [1040..1041]
 r1275: [1038..1039]
 r1276: [1034..1035]
 r1277: [1026..1027]
 r1278: [1022..1025]
 r1279: [1022..1023]
 r1280: [1020..1021]
 r1281: [1018..1019]
 r1282: [1006..1017]
 r1283: [1014..1015]
 r1284: [1010..1013]
 r1285: [1010..1011]
 r1286: [1008..1009]
 r1287: [1004..1007]
 r1288: [1004..1005]
 r1289: [984..985]
 r1290: [968..969]
 r1291: [972..973]
 r1292: [966..967]
 r1293: [964..965]
 r1294: [962..963]
 r1295: [958..959]
 r1296: [956..957]
 r1297: [948..949]
 r1298: [946..947]
 r1299: [944..945]
 r1300: [944..945]
 r1301: [942..943]
 r1302: [940..941]
 r1303: [932..933]
 r1304: [928..931]
 r1305: [928..929]
 r1306: [926..927]
 r1307: [924..925]
 r1308: [918..921]
 r1309: [566..567]
 r1310: [562..565]
 r1311: [562..563]
 r1312: [560..561]
 r1313: [558..559]
 r1314: [554..555]
 r1315: [550..553]
 r1316: [550..551]
 r1317: [548..549]
 r1318: [546..547]
 r1319: [914..915]
 r1320: [910..913]
 r1321: [910..911]
 r1322: [908..909]
 r1323: [906..907]
 r1324: [898..899]
 r1325: [894..897]
 r1326: [894..895]
 r1327: [892..893]
 r1328: [890..891]
 r1329: [872..887]
 r1330: [884..885]
 r1331: [880..883]
 r1332: [880..881]
 r1333: [878..879]
 r1334: [876..877]
 r1335: [872..873]
 r1336: [870..871]
 r1337: [864..865]
 r1338: [860..863]
 r1339: [860..861]
 r1340: [858..859]
 r1341: [856..857]
 r1342: [852..853]
 r1343: [850..851]
 r1344: [834..849]
 r1345: [846..847]
 r1346: [842..845]
 r1347: [842..843]
 r1348: [840..841]
 r1349: [838..839]
 r1350: [834..835]
 r1351: [832..833]
 r1352: [826..827]
 r1353: [822..825]
 r1354: [822..823]
 r1355: [820..821]
 r1356: [818..819]
 r1357: [800..815]
 r1358: [812..813]
 r1359: [808..811]
 r1360: [808..809]
 r1361: [806..807]
 r1362: [804..805]
 r1363: [800..801]
 r1364: [798..799]
 r1365: [790..791]
 r1366: [784..789]
 r1367: [786..787]
 r1368: [784..785]
 r1369: [780..783]
 r1370: [780..781]
 r1371: [778..779]
 r1372: [776..777]
 r1373: [728..773]
 r1374: [770..771]
 r1375: [766..769]
 r1376: [766..767]
 r1377: [764..765]
 r1378: [762..763]
 r1379: [736..759]
 r1380: [756..757]
 r1381: [752..755]
 r1382: [752..753]
 r1383: [750..751]
 r1384: [748..749]
 r1385: [744..745]
 r1386: [742..743]
 r1387: [740..741]
 r1388: [736..737]
 r1389: [732..735]
 r1390: [732..733]
 r1391: [730..731]
 r1392: [728..729]
 r1393: [726..727]
 r1394: [714..715]
 r1395: [702..713]
 r1396: [710..711]
 r1397: [706..709]
 r1398: [706..707]
 r1399: [704..705]
 r1400: [700..703]
 r1401: [700..701]
 r1402: [696..697]
 r1403: [692..695]
 r1404: [692..693]
 r1405: [690..691]
 r1406: [688..689]
 r1407: [670..685]
 r1408: [682..683]
 r1409: [678..681]
 r1410: [678..679]
 r1411: [676..677]
 r1412: [674..675]
 r1413: [670..671]
 r1414: [668..669]
 r1415: [660..661]
 r1416: [654..659]
 r1417: [656..657]
 r1418: [654..655]
 r1419: [650..653]
 r1420: [650..651]
 r1421: [648..649]
 r1422: [646..647]
 r1423: [598..643]
 r1424: [640..641]
 r1425: [636..639]
 r1426: [636..637]
 r1427: [634..635]
 r1428: [632..633]
 r1429: [606..629]
 r1430: [626..627]
 r1431: [622..625]
 r1432: [622..623]
 r1433: [620..621]
 r1434: [618..619]
 r1435: [614..615]
 r1436: [612..613]
 r1437: [610..611]
 r1438: [606..607]
 r1439: [602..605]
 r1440: [602..603]
 r1441: [600..601]
 r1442: [598..599]
 r1443: [596..597]
 r1444: [584..585]
 r1445: [572..583]
 r1446: [580..581]
 r1447: [576..579]
 r1448: [576..577]
 r1449: [574..575]
 r1450: [570..573]
 r1451: [570..571]
 r1452: [542..543]
 r1453: [538..541]
 r1454: [538..539]
 r1455: [536..537]
 r1456: [534..535]
 r1457: [526..527]
 r1458: [520..525]
 r1459: [522..523]
 r1460: [520..521]
 r1461: [516..519]
 r1462: [516..517]
 r1463: [514..515]
 r1464: [502..513]
 r1465: [510..511]
 r1466: [506..509]
 r1467: [506..507]
 r1468: [504..505]
 r1469: [498..503]
 r1470: [498..499]
 r1471: [494..495]
 r1472: [488..493]
 r1473: [490..491]
 r1474: [488..489]
 r1475: [484..487]
 r1476: [484..485]
 r1477: [482..483]
 r1478: [470..481]
 r1479: [478..479]
 r1480: [474..477]
 r1481: [474..475]
 r1482: [472..473]
 r1483: [466..471]
 r1484: [466..467]
 r1485: [462..463]
 r1486: [456..461]
 r1487: [458..459]
 r1488: [456..457]
 r1489: [452..455]
 r1490: [452..453]
 r1491: [450..451]
 r1492: [448..449]
 r1493: [446..447]
 r1494: [444..445]
 r1495: [414..443]
 r1496: [440..441]
 r1497: [434..439]
 r1498: [436..437]
 r1499: [434..435]
 r1500: [430..433]
 r1501: [430..431]
 r1502: [428..429]
 r1503: [426..427]
 r1504: [414..425]
 r1505: [422..423]
 r1506: [418..421]
 r1507: [418..419]
 r1508: [416..417]
 r1509: [412..415]
 r1510: [412..413]
 r1511: [408..409]
 r1512: [402..407]
 r1513: [404..405]
 r1514: [402..403]
 r1515: [398..401]
 r1516: [398..399]
 r1517: [396..397]
 r1518: [394..395]
 r1519: [364..393]
 r1520: [390..391]
 r1521: [384..389]
 r1522: [386..387]
 r1523: [384..385]
 r1524: [380..383]
 r1525: [380..381]
 r1526: [378..379]
 r1527: [376..377]
 r1528: [364..375]
 r1529: [372..373]
 r1530: [368..371]
 r1531: [368..369]
 r1532: [366..367]
 r1533: [362..365]
 r1534: [362..363]
 r1535: [358..359]
 r1536: [354..357]
 r1537: [354..355]
 r1538: [352..353]
 r1539: [350..351]
 r1540: [324..347]
 r1541: [344..345]
 r1542: [340..343]
 r1543: [340..341]
 r1544: [338..339]
 r1545: [336..337]
 r1546: [332..333]
 r1547: [330..331]
 r1548: [328..329]
 r1549: [324..325]
 r1550: [310..323]
 r1551: [310..321]
 r1552: [318..319]
 r1553: [314..317]
 r1554: [314..315]
 r1555: [312..313]
 r1556: [308..311]
 r1557: [308..309]
 r1558: [286..287]
 r1559: [284..285]
 r1560: [278..283]
 r1561: [272..273]
 r1562: [266..267]
 r1563: [264..265]
 r1564: [262..263]
 r1565: [260..261]
 r1566: [244..245]
 r1567: [232..233]
 r1568: [230..231]
 r1569: [224..225]
 r1570: [220..223]
 r1571: [220..221]
 r1572: [218..219]
 r1573: [206..217]
 r1574: [214..215]
 r1575: [210..213]
 r1576: [210..211]
 r1577: [208..209]
 r1578: [202..207]
 r1579: [202..203]
 r1580: [160..161]
 r1581: [190..191]
 r1582: [188..189]
 r1583: [182..187]
 r1584: [184..185]
 r1585: [182..183]
 r1586: [178..181]
 r1587: [178..179]
 r1588: [176..177]
 r1589: [174..175]
 r1590: [164..165]
 r1591: [162..163]
 r1592: [146..147]
 r1593: [8..9]
 r1594: [144..145]
 r1595: [142..143]
 r1596: [136..141]
 r1597: [128..131]
 r1598: [130..131]
 r1599: [128..129]
 r1600: [126..127]
 r1601: [124..125]
 r1602: [120..121]
 r1603: [118..119]
 r1604: [112..117]
 r1605: [104..107]
 r1606: [106..107]
 r1607: [104..105]
 r1608: [102..103]
 r1609: [100..101]
 r1610: [96..97]
 r1611: [84..85]
 r1612: [82..83]
 r1613: [78..79]
 r1614: [76..77]
 r1615: [70..75]
 r1616: [62..65]
 r1617: [64..65]
 r1618: [62..63]
 r1619: [60..61]
 r1620: [58..59]
 r1621: [54..55]
 r1622: [52..53]
 r1623: [46..51]
 r1624: [38..41]
 r1625: [40..41]
 r1626: [38..39]
 r1627: [36..37]
 r1628: [34..35]
 r1629: [30..31]
 r1630: [18..19]
 r1631: [16..17]
 r1632: [12..13]
 r1633: [10..11]
 r1634: [3636..3645]
 r1635: [3564..3575]
 r1636: [1866..1875]
 r1637: [1794..1805]
 r1638: [1544..1563]
 r1639: [1584..1595]
 r1640: [4588..4589]
 r1641: [4582..4587]
 r1642: [4580..4581]
 r1643: [4578..4579]
 r1647: [4568..4569]
 r1649: [4560..4561]
 r1650: [4554..4559]
 r1651: [4552..4553]
 r1652: [4550..4551]
 r1656: [4540..4541]
 r1658: [4436..4437]
 r1659: [4372..4437]
 r1660: [4372..4373]
 r1661: [4376..4377]
 r1662: [4146..4147]
 r1663: [4370..4371]
 r1664: [4156..4371]
 r1665: [4156..4157]
 r1666: [4160..4161]
 r1667: [4004..4141]
 r1668: [4004..4005]
 r1669: [4052..4053]
 r1670: [4008..4009]
 r1671: [3856..3857]
 r1672: [4002..4003]
 r1673: [3866..4003]
 r1674: [3866..3867]
 r1675: [3870..3871]
 r1676: [3796..3797]
 r1677: [3776..3797]
 r1678: [3776..3777]
 r1679: [3780..3781]
 r1680: [3330..3331]
 r1681: [3774..3775]
 r1682: [3340..3775]
 r1683: [3340..3341]
 r1684: [3344..3345]
 r1685: [950..951]
 r1686: [2340..2341]
 r1687: [2274..2341]
 r1688: [2274..2275]
 r1689: [2278..2279]
 r1690: [2244..2245]
 r1691: [2194..2245]
 r1692: [2194..2195]
 r1693: [2198..2199]
 r1694: [2124..2125]
 r1695: [2078..2125]
 r1696: [2078..2079]
 r1697: [2082..2083]
 r1698: [1534..1535]
 r1699: [1514..1535]
 r1700: [1514..1515]
 r1701: [1518..1519]
 r1702: [2004..2005]
 r1703: [1536..2005]
 r1704: [1536..1537]
 r1705: [1540..1541]
 r1706: [1368..1369]
 r1707: [1348..1369]
 r1708: [1348..1349]
 r1709: [1352..1353]
 r1710: [1282..1283]
 r1711: [1262..1283]
 r1712: [1262..1263]
 r1713: [1266..1267]
 r1714: [1174..1175]
 r1715: [1140..1175]
 r1716: [1140..1141]
 r1717: [1144..1145]
 r1718: [1030..1031]
 r1719: [996..1031]
 r1720: [996..997]
 r1721: [1000..1001]
 r1722: [936..937]
 r1723: [300..937]
 r1724: [300..301]
 r1725: [304..305]
 r1726: [796..797]
 r1727: [724..725]
 r1728: [720..721]
 r1729: [666..667]
 r1730: [594..595]
 r1731: [590..591]
 r1732: [228..229]
 r1733: [194..229]
 r1734: [194..195]
 r1735: [198..199]
 r1736: [156..157]
 r1737: [192..193]
 r1738: [166..193]
 r1739: [166..167]
 r1740: [170..171]
 r1741: [4..5]
 r1742: [4594..4595]
 r1743: [4590..4591]
 r1744: [4588..4589]
 r1745: [4586..4587]
 r1746: [4582..4583]
 r1747: [4580..4581]
 r1748: [4574..4575]
 r1749: [4570..4571]
 r1750: [4566..4567]
 r1751: [4562..4563]
 r1752: [4560..4561]
 r1753: [4558..4559]
 r1754: [4554..4555]
 r1755: [4552..4553]
 r1756: [4546..4547]
 r1757: [4542..4543]
 r1758: [4538..4539]
 r1759: [4536..4537]
 r1760: [4530..4531]
 r1761: [4528..4529]
 r1762: [4522..4523]
 r1763: [4526..4527]
 r1764: [4520..4521]
 r1765: [4516..4517]
 r1766: [4508..4509]
 r1767: [4524..4525]
 r1768: [4504..4505]
 r1769: [4504..4505]
 r1770: [4502..4503] [4498..4499]
 r1771: [4498..4503]
 r1772: [4500..4503]
 r1773: [4492..4493] [4488..4489] [4484..4485]
 r1774: [4490..4491]
 r1775: [4486..4487]
 r1776: [4480..4481]
 r1777: [4478..4479]
 r1778: [4476..4477]
 r1779: [4476..4477]
 r1780: [4476..4477]
 r1781: [4472..4473]
 r1782: [4472..4473]
 r1783: [4470..4471] [4466..4467]
 r1784: [4466..4471]
 r1785: [4468..4471]
 r1786: [4464..4465]
 r1787: [4462..4463]
 r1788: [4460..4461]
 r1789: [4454..4455] [4450..4451] [4446..4447]
 r1790: [4452..4453]
 r1791: [4448..4449]
 r1792: [4442..4443]
 r1793: [4440..4441]
 r1794: [4438..4439]
 r1795: [4438..4439]
 r1796: [4438..4439]
 r1797: [4374..4375]
 r1798: [4378..4379]
 r1799: [4434..4435]
 r1800: [4430..4431]
 r1801: [4422..4425]
 r1802: [4422..4423]
 r1803: [4420..4421]
 r1804: [4416..4417]
 r1805: [4410..4411]
 r1806: [4406..4409]
 r1807: [4406..4407]
 r1808: [4404..4405]
 r1809: [4400..4401]
 r1810: [4394..4395]
 r1811: [4390..4391]
 r1812: [4382..4385]
 r1813: [4382..4383]
 r1814: [4380..4381]
 r1815: [4148..4149]
 r1816: [4158..4159]
 r1817: [4162..4163]
 r1818: [4364..4365]
 r1819: [4358..4359]
 r1820: [4350..4353]
 r1821: [4350..4351]
 r1822: [4344..4345]
 r1823: [4338..4339]
 r1824: [4330..4333]
 r1825: [4330..4331]
 r1826: [4322..4323]
 r1827: [4316..4317]
 r1828: [4308..4311]
 r1829: [4308..4309]
 r1830: [4306..4307]
 r1831: [4304..4305]
 r1832: [4298..4299]
 r1833: [4288..4289]
 r1834: [4282..4283]
 r1835: [4274..4277]
 r1836: [4274..4275]
 r1837: [4268..4269]
 r1838: [4262..4263]
 r1839: [4254..4257]
 r1840: [4254..4255]
 r1841: [4246..4247]
 r1842: [4242..4243]
 r1843: [4236..4237]
 r1844: [4234..4235]
 r1845: [4230..4231]
 r1846: [4222..4223]
 r1847: [4220..4221]
 r1848: [4216..4217]
 r1849: [4210..4211]
 r1850: [4204..4205]
 r1851: [4198..4199]
 r1852: [4192..4193]
 r1853: [4188..4191]
 r1854: [4188..4189]
 r1855: [4186..4187]
 r1856: [4182..4183]
 r1857: [4176..4177]
 r1858: [4172..4173]
 r1859: [4166..4167]
 r1860: [4164..4165]
 r1861: [4144..4145]
 r1862: [4142..4143]
 r1863: [4006..4007]
 r1864: [4140..4141]
 r1865: [4134..4137]
 r1866: [4134..4135]
 r1867: [4132..4133]
 r1868: [4114..4115]
 r1869: [4122..4131]
 r1870: [4128..4129]
 r1871: [4130..4131]
 r1872: [4126..4127]
 r1873: [4118..4123]
 r1874: [4116..4119]
 r1875: [4098..4099]
 r1876: [4096..4113]
 r1877: [4110..4111]
 r1878: [4112..4113]
 r1879: [4108..4109]
 r1880: [4102..4105]
 r1881: [4100..4103]
 r1882: [4094..4097]
 r1883: [4092..4093]
 r1884: [4090..4091]
 r1885: [4088..4089]
 r1886: [4084..4085]
 r1887: [4082..4083]
 r1890: [4078..4079]
 r1891: [4080..4081]
 r1892: [4076..4077]
 r1895: [4072..4073]
 r1896: [4074..4075]
 r1897: [4070..4071]
 r1898: [4066..4067]
 r1899: [4058..4061]
 r1900: [4058..4059]
 r1901: [4054..4055]
 r1902: [4010..4011]
 r1903: [4042..4045]
 r1904: [4042..4043]
 r1905: [4034..4035]
 r1906: [4028..4029]
 r1907: [4022..4023]
 r1908: [4018..4021]
 r1909: [4018..4019]
 r1910: [3858..3859]
 r1911: [3868..3869]
 r1912: [3872..3873]
 r1913: [3994..3995]
 r1914: [3988..3989]
 r1915: [3982..3983]
 r1916: [3976..3977]
 r1917: [3970..3971]
 r1918: [3964..3965]
 r1919: [3954..3955]
 r1920: [3948..3949]
 r1921: [3942..3943]
 r1922: [3940..3941]
 r1923: [3932..3933]
 r1924: [3926..3927]
 r1925: [3918..3921]
 r1926: [3918..3919]
 r1927: [3912..3913]
 r1928: [3906..3907]
 r1929: [3898..3901]
 r1930: [3898..3899]
 r1931: [3888..3889]
 r1932: [3882..3883]
 r1933: [3876..3877]
 r1934: [3874..3875]
 r1935: [3798..3799]
 r1936: [3778..3779]
 r1937: [3782..3783]
 r1938: [3794..3795]
 r1939: [3790..3791]
 r1940: [3784..3785]
 r1941: [3784..3785]
 r1942: [3332..3333]
 r1943: [3342..3343]
 r1944: [3346..3347]
 r1945: [3772..3773]
 r1946: [3768..3769]
 r1947: [3760..3763]
 r1948: [3760..3761]
 r1949: [3758..3759]
 r1950: [3754..3755]
 r1951: [3748..3749]
 r1952: [3742..3743]
 r1953: [3734..3737]
 r1954: [3734..3735]
 r1955: [3732..3733]
 r1956: [3728..3729]
 r1957: [3722..3723]
 r1958: [3718..3719]
 r1959: [3712..3713]
 r1960: [3706..3707]
 r1961: [3698..3701]
 r1962: [3698..3699]
 r1963: [3696..3697]
 r1964: [3690..3691]
 r1965: [3684..3685]
 r1966: [3676..3679]
 r1967: [3676..3677]
 r1968: [3674..3675]
 r1969: [3668..3669]
 r1970: [3662..3663]
 r1971: [3656..3657]
 r1972: [3654..3655]
 r1973: [3652..3653]
 r1974: [3652..3653]
 r1975: [3646..3647]
 r1976: [3648..3649]
 r1977: [3644..3645]
 r1978: [3642..3643]
 r1979: [3634..3635]
 r1980: [3632..3633]
 r1981: [3628..3629]
 r1982: [3620..3623]
 r1983: [3620..3621]
 r1984: [3612..3615]
 r1985: [3612..3613]
 r1986: [3608..3609]
 r1987: [3604..3605]
 r1988: [3602..3603]
 r1989: [3602..3603]
 r1990: [3596..3597]
 r1991: [3596..3597]
 r1992: [3594..3595]
 r1993: [3594..3595]
 r1994: [3588..3589]
 r1995: [3588..3589]
 r1996: [3576..3577]
 r1997: [3572..3573]
 r1998: [3574..3575]
 r1999: [3570..3571]
 r2000: [3564..3565]
 r2001: [3562..3563]
 r2002: [3558..3559]
 r2003: [3554..3555]
 r2004: [3546..3547]
 r2005: [3544..3545]
 r2006: [3540..3541]
 r2007: [3532..3535]
 r2008: [3532..3533]
 r2009: [3530..3531]
 r2010: [3522..3525]
 r2011: [3522..3523]
 r2012: [3520..3521]
 r2013: [3516..3517]
 r2014: [3508..3511]
 r2015: [3508..3509]
 r2016: [3506..3507]
 r2017: [3496..3497]
 r2018: [3494..3495]
 r2019: [3492..3493]
 r2020: [3488..3489]
 r2021: [3482..3483]
 r2022: [3474..3475]
 r2023: [3476..3477]
 r2024: [3472..3473]
 r2025: [3472..3473]
 r2026: [3470..3471]
 r2027: [3446..3447]
 r2028: [3440..3441]
 r2029: [3434..3435]
 r2030: [3434..3435]
 r2031: [3464..3465]
 r2032: [3458..3459]
 r2033: [3452..3453]
 r2034: [3452..3453]
 r2035: [3432..3433]
 r2036: [3432..3433]
 r2037: [3426..3427]
 r2038: [3420..3421]
 r2039: [3414..3415]
 r2040: [3414..3415]
 r2041: [3412..3413]
 r2042: [3410..3411]
 r2043: [3404..3405]
 r2044: [3398..3399]
 r2045: [3392..3393]
 r2046: [3392..3393]
 r2047: [3384..3385]
 r2048: [3378..3379]
 r2049: [3372..3373]
 r2050: [3370..3371]
 r2051: [3368..3369]
 r2052: [3366..3367]
 r2053: [3360..3361]
 r2054: [3354..3355]
 r2055: [3348..3349]
 r2056: [3348..3349]
 r2057: [952..953]
 r2058: [3324..3325] [3320..3321] [3316..3317]
 r2059: [3322..3323]
 r2060: [3318..3319]
 r2061: [3306..3307]
 r2062: [3300..3301] [3296..3297] [3292..3293]
 r2063: [3298..3299]
 r2064: [3294..3295]
 r2065: [3282..3283]
 r2066: [3278..3279]
 r2067: [3278..3279]
 r2068: [3276..3277]
 r2069: [3276..3277]
 r2070: [3274..3275] [3270..3271]
 r2071: [3270..3275]
 r2072: [3272..3275]
 r2073: [3264..3265]
 r2074: [3262..3263]
 r2075: [3260..3261]
 r2076: [3258..3259]
 r2077: [3258..3259]
 r2078: [3258..3259]
 r2079: [3258..3259]
 r2080: [3252..3253] [3248..3249] [3244..3245]
 r2081: [3250..3251]
 r2082: [3246..3247]
 r2083: [3234..3235]
 r2084: [3228..3229] [3224..3225] [3220..3221]
 r2085: [3226..3227]
 r2086: [3222..3223]
 r2087: [3210..3211]
 r2088: [3206..3207]
 r2089: [3206..3207]
 r2090: [3204..3205]
 r2091: [3204..3205]
 r2092: [3202..3203] [3198..3199]
 r2093: [3198..3203]
 r2094: [3200..3203]
 r2095: [3192..3193]
 r2096: [3190..3191]
 r2097: [3188..3189]
 r2098: [3186..3187]
 r2099: [3186..3187]
 r2100: [3186..3187]
 r2101: [3186..3187]
 r2102: [3180..3181] [3176..3177] [3172..3173]
 r2103: [3178..3179]
 r2104: [3174..3175]
 r2105: [3162..3163]
 r2106: [3156..3157] [3152..3153] [3148..3149]
 r2107: [3154..3155]
 r2108: [3150..3151]
 r2109: [3138..3139]
 r2110: [3134..3135]
 r2111: [3134..3135]
 r2112: [3132..3133]
 r2113: [3132..3133]
 r2114: [3130..3131] [3126..3127]
 r2115: [3126..3131]
 r2116: [3128..3131]
 r2117: [3120..3121]
 r2118: [3120..3121]
 r2119: [3120..3121]
 r2120: [3120..3121]
 r2121: [3114..3115] [3110..3111] [3106..3107]
 r2122: [3112..3113]
 r2123: [3108..3109]
 r2124: [3096..3097]
 r2125: [3090..3091] [3086..3087] [3082..3083]
 r2126: [3088..3089]
 r2127: [3084..3085]
 r2128: [3072..3073]
 r2129: [3068..3069]
 r2130: [3068..3069]
 r2131: [3066..3067]
 r2132: [3066..3067]
 r2133: [3064..3065]
 r2134: [3064..3065]
 r2135: [3062..3063] [3058..3059]
 r2136: [3058..3063]
 r2137: [3060..3063]
 r2138: [3052..3053]
 r2139: [3052..3053]
 r2140: [3052..3053]
 r2141: [3052..3053]
 r2142: [3046..3047] [3042..3043] [3038..3039]
 r2143: [3044..3045]
 r2144: [3040..3041]
 r2145: [3028..3029]
 r2146: [3022..3023] [3018..3019] [3014..3015]
 r2147: [3020..3021]
 r2148: [3016..3017]
 r2149: [3004..3005]
 r2150: [3000..3001]
 r2151: [3000..3001]
 r2152: [2998..2999]
 r2153: [2998..2999]
 r2154: [2996..2997]
 r2155: [2996..2997]
 r2156: [2994..2995]
 r2157: [2994..2995]
 r2158: [2992..2993]
 r2159: [2992..2993]
 r2160: [2990..2991]
 r2161: [2990..2991]
 r2162: [2990..2991]
 r2163: [2988..2989]
 r2164: [2988..2989]
 r2165: [2988..2989]
 r2166: [2986..2987] [2982..2983]
 r2167: [2982..2987]
 r2168: [2984..2987]
 r2169: [2976..2977]
 r2170: [2976..2977]
 r2171: [2976..2977]
 r2172: [2976..2977]
 r2173: [2970..2971] [2966..2967] [2962..2963]
 r2174: [2968..2969]
 r2175: [2964..2965]
 r2176: [2952..2953]
 r2177: [2946..2947] [2942..2943] [2938..2939]
 r2178: [2944..2945]
 r2179: [2940..2941]
 r2180: [2928..2929]
 r2181: [2924..2925]
 r2182: [2924..2925]
 r2183: [2922..2923]
 r2184: [2922..2923]
 r2185: [2920..2921]
 r2186: [2920..2921]
 r2187: [2918..2919]
 r2188: [2918..2919]
 r2189: [2916..2917] [2912..2913]
 r2190: [2912..2917]
 r2191: [2914..2917]
 r2192: [2906..2907]
 r2193: [2906..2907]
 r2194: [2906..2907]
 r2195: [2906..2907]
 r2196: [2900..2901] [2896..2897] [2892..2893]
 r2197: [2898..2899]
 r2198: [2894..2895]
 r2199: [2882..2883]
 r2200: [2876..2877] [2872..2873] [2868..2869]
 r2201: [2874..2875]
 r2202: [2870..2871]
 r2203: [2858..2859]
 r2204: [2854..2855]
 r2205: [2854..2855]
 r2206: [2852..2853]
 r2207: [2852..2853]
 r2208: [2850..2851]
 r2209: [2850..2851]
 r2210: [2850..2851]
 r2211: [2848..2849] [2844..2845]
 r2212: [2844..2849]
 r2213: [2846..2849]
 r2214: [2838..2839]
 r2215: [2838..2839]
 r2216: [2838..2839]
 r2217: [2838..2839]
 r2218: [2832..2833] [2828..2829] [2824..2825]
 r2219: [2830..2831]
 r2220: [2826..2827]
 r2221: [2814..2815]
 r2222: [2808..2809] [2804..2805] [2800..2801]
 r2223: [2806..2807]
 r2224: [2802..2803]
 r2225: [2790..2791]
 r2226: [2786..2787]
 r2227: [2786..2787]
 r2228: [2784..2785]
 r2229: [2784..2785]
 r2230: [2782..2783]
 r2231: [2782..2783]
 r2232: [2780..2781]
 r2233: [2780..2781]
 r2234: [2778..2779] [2774..2775]
 r2235: [2774..2779]
 r2236: [2776..2779]
 r2237: [2768..2769]
 r2238: [2768..2769]
 r2239: [2768..2769]
 r2240: [2768..2769]
 r2241: [2760..2761] [2756..2757] [2752..2753]
 r2242: [2758..2759]
 r2243: [2754..2755]
 r2244: [2742..2743]
 r2245: [2736..2737] [2732..2733] [2728..2729]
 r2246: [2734..2735]
 r2247: [2730..2731]
 r2248: [2718..2719]
 r2249: [2712..2713] [2708..2709] [2704..2705]
 r2250: [2710..2711]
 r2251: [2706..2707]
 r2252: [2694..2695]
 r2253: [2690..2691]
 r2254: [2690..2691]
 r2255: [2686..2687] [2682..2683] [2678..2679]
 r2256: [2684..2685]
 r2257: [2680..2681]
 r2258: [2668..2669]
 r2259: [2664..2665]
 r2260: [2664..2665]
 r2261: [2662..2663]
 r2262: [2662..2663]
 r2263: [2660..2661] [2656..2657]
 r2264: [2656..2661]
 r2265: [2658..2661]
 r2266: [2648..2649]
 r2267: [2648..2649]
 r2268: [2648..2649]
 r2269: [2648..2649]
 r2270: [2646..2647] [2642..2643]
 r2271: [2642..2647]
 r2272: [2644..2647]
 r2273: [2634..2635]
 r2274: [2634..2635]
 r2275: [2634..2635]
 r2276: [2634..2635]
 r2277: [2628..2629] [2624..2625] [2620..2621]
 r2278: [2626..2627]
 r2279: [2622..2623]
 r2280: [2610..2611]
 r2281: [2604..2605] [2600..2601] [2596..2597]
 r2282: [2602..2603]
 r2283: [2598..2599]
 r2284: [2586..2587]
 r2285: [2582..2583]
 r2286: [2582..2583]
 r2287: [2580..2581]
 r2288: [2580..2581]
 r2289: [2578..2579] [2574..2575]
 r2290: [2574..2579]
 r2291: [2576..2579]
 r2292: [2568..2569]
 r2293: [2568..2569]
 r2294: [2568..2569]
 r2295: [2568..2569]
 r2296: [2562..2563] [2558..2559] [2554..2555]
 r2297: [2560..2561]
 r2298: [2556..2557]
 r2299: [2544..2545]
 r2300: [2538..2539] [2534..2535] [2530..2531]
 r2301: [2536..2537]
 r2302: [2532..2533]
 r2303: [2520..2521]
 r2304: [2516..2517]
 r2305: [2516..2517]
 r2306: [2514..2515]
 r2307: [2514..2515]
 r2308: [2512..2513]
 r2309: [2512..2513]
 r2310: [2510..2511] [2506..2507]
 r2311: [2506..2511]
 r2312: [2508..2511]
 r2313: [2500..2501]
 r2314: [2500..2501]
 r2315: [2500..2501]
 r2316: [2500..2501]
 r2317: [2494..2495] [2490..2491] [2486..2487]
 r2318: [2492..2493]
 r2319: [2488..2489]
 r2320: [2476..2477]
 r2321: [2470..2471] [2466..2467] [2462..2463]
 r2322: [2468..2469]
 r2323: [2464..2465]
 r2324: [2452..2453]
 r2325: [2448..2449]
 r2326: [2448..2449]
 r2327: [2446..2447]
 r2328: [2446..2447]
 r2329: [2444..2445] [2440..2441]
 r2330: [2440..2445]
 r2331: [2442..2445]
 r2332: [2434..2435]
 r2333: [2434..2435]
 r2334: [2434..2435]
 r2335: [2434..2435]
 r2336: [2428..2429] [2424..2425] [2420..2421]
 r2337: [2426..2427]
 r2338: [2422..2423]
 r2339: [2410..2411]
 r2340: [2404..2405] [2400..2401] [2396..2397]
 r2341: [2402..2403]
 r2342: [2398..2399]
 r2343: [2386..2387]
 r2344: [2382..2383]
 r2345: [2382..2383]
 r2346: [2380..2381]
 r2347: [2380..2381]
 r2348: [2378..2379] [2374..2375]
 r2349: [2374..2379]
 r2350: [2376..2379]
 r2351: [2368..2369]
 r2352: [2368..2369]
 r2353: [2368..2369]
 r2354: [2368..2369]
 r2355: [2362..2363] [2358..2359] [2354..2355]
 r2356: [2360..2361]
 r2357: [2356..2357]
 r2358: [2344..2345]
 r2359: [2276..2277]
 r2360: [2280..2281]
 r2361: [2334..2335]
 r2362: [2328..2329]
 r2363: [2322..2323]
 r2364: [2320..2321]
 r2365: [2314..2315]
 r2366: [2308..2309]
 r2367: [2302..2303]
 r2368: [2294..2295]
 r2369: [2288..2289]
 r2370: [2282..2283]
 r2371: [2282..2283]
 r2372: [2270..2271] [2266..2267] [2262..2263]
 r2373: [2268..2269]
 r2374: [2264..2265]
 r2375: [2252..2253]
 r2376: [2248..2249]
 r2377: [2248..2249]
 r2378: [2246..2247]
 r2379: [2246..2247]
 r2380: [2196..2197]
 r2381: [2200..2201]
 r2382: [2242..2243]
 r2383: [2238..2239]
 r2384: [2232..2233]
 r2385: [2230..2231]
 r2386: [2226..2227]
 r2387: [2220..2221]
 r2388: [2218..2219]
 r2389: [2214..2215]
 r2390: [2210..2211]
 r2391: [2202..2203]
 r2392: [2192..2193]
 r2393: [2192..2193]
 r2394: [2190..2191] [2186..2187]
 r2395: [2186..2191]
 r2396: [2188..2191]
 r2397: [2180..2181]
 r2398: [2180..2181]
 r2399: [2180..2181]
 r2400: [2180..2181]
 r2401: [2174..2175] [2170..2171] [2166..2167]
 r2402: [2172..2173]
 r2403: [2168..2169]
 r2404: [2156..2157]
 r2405: [2150..2151] [2146..2147] [2142..2143]
 r2406: [2148..2149]
 r2407: [2144..2145]
 r2408: [2132..2133]
 r2409: [2128..2129]
 r2410: [2128..2129]
 r2411: [2126..2127]
 r2412: [2126..2127]
 r2413: [2080..2081]
 r2414: [2084..2085]
 r2415: [2122..2123]
 r2416: [2118..2119]
 r2417: [2112..2113]
 r2418: [2110..2111]
 r2419: [2106..2107]
 r2420: [2100..2101]
 r2421: [2098..2099]
 r2422: [2094..2095]
 r2423: [2086..2087]
 r2424: [2076..2077]
 r2425: [2076..2077]
 r2426: [2074..2075] [2070..2071]
 r2427: [2070..2075]
 r2428: [2072..2075]
 r2429: [2064..2065]
 r2430: [2064..2065]
 r2431: [2064..2065]
 r2432: [2064..2065]
 r2433: [2058..2059] [2054..2055] [2050..2051]
 r2434: [2056..2057]
 r2435: [2052..2053]
 r2436: [2040..2041]
 r2437: [2034..2035] [2030..2031] [2026..2027]
 r2438: [2032..2033]
 r2439: [2028..2029]
 r2440: [2016..2017]
 r2441: [2012..2013]
 r2442: [2010..2011]
 r2443: [2008..2009]
 r2444: [1516..1517]
 r2445: [1520..1521]
 r2446: [1532..1533]
 r2447: [1528..1529]
 r2448: [1522..1523]
 r2449: [1522..1523]
 r2450: [1538..1539]
 r2451: [1542..1543]
 r2452: [2002..2003]
 r2453: [1998..1999]
 r2454: [1990..1993]
 r2455: [1990..1991]
 r2456: [1988..1989]
 r2457: [1984..1985]
 r2458: [1978..1979]
 r2459: [1972..1973]
 r2460: [1964..1967]
 r2461: [1964..1965]
 r2462: [1962..1963]
 r2463: [1958..1959]
 r2464: [1952..1953]
 r2465: [1948..1949]
 r2466: [1942..1943]
 r2467: [1936..1937]
 r2468: [1928..1931]
 r2469: [1928..1929]
 r2470: [1926..1927]
 r2471: [1920..1921]
 r2472: [1914..1915]
 r2473: [1906..1909]
 r2474: [1906..1907]
 r2475: [1904..1905]
 r2476: [1898..1899]
 r2477: [1892..1893]
 r2478: [1886..1887]
 r2479: [1884..1885]
 r2480: [1882..1883]
 r2481: [1882..1883]
 r2482: [1876..1877]
 r2483: [1878..1879]
 r2484: [1874..1875]
 r2485: [1872..1873]
 r2486: [1864..1865]
 r2487: [1862..1863]
 r2488: [1858..1859]
 r2489: [1850..1853]
 r2490: [1850..1851]
 r2491: [1842..1845]
 r2492: [1842..1843]
 r2493: [1838..1839]
 r2494: [1834..1835]
 r2495: [1832..1833]
 r2496: [1832..1833]
 r2497: [1826..1827]
 r2498: [1826..1827]
 r2499: [1824..1825]
 r2500: [1824..1825]
 r2501: [1818..1819]
 r2502: [1818..1819]
 r2503: [1806..1807]
 r2504: [1802..1803]
 r2505: [1804..1805]
 r2506: [1800..1801]
 r2507: [1794..1795]
 r2508: [1792..1793]
 r2509: [1788..1789]
 r2510: [1784..1785]
 r2511: [1776..1777]
 r2512: [1774..1775]
 r2513: [1774..1775]
 r2514: [1772..1773]
 r2515: [1772..1773]
 r2516: [1766..1767]
 r2517: [1762..1763]
 r2518: [1758..1759]
 r2519: [1750..1751]
 r2520: [1748..1749]
 r2521: [1746..1747]
 r2522: [1742..1743]
 r2523: [1736..1737]
 r2524: [1732..1733]
 r2525: [1726..1727]
 r2526: [1724..1725]
 r2527: [1722..1723]
 r2528: [1718..1719]
 r2529: [1710..1713]
 r2530: [1710..1711]
 r2531: [1708..1709]
 r2532: [1700..1703]
 r2533: [1700..1701]
 r2534: [1698..1699]
 r2535: [1694..1695]
 r2536: [1686..1689]
 r2537: [1686..1687]
 r2538: [1684..1685]
 r2539: [1674..1675]
 r2540: [1668..1669]
 r2541: [1662..1663]
 r2542: [1656..1657]
 r2543: [1654..1655]
 r2544: [1652..1653]
 r2545: [1648..1649]
 r2546: [1644..1645]
 r2547: [1638..1639]
 r2548: [1634..1635]
 r2549: [1630..1631]
 r2550: [1624..1625]
 r2551: [1618..1619]
 r2552: [1616..1617]
 r2553: [1610..1611]
 r2554: [1612..1613]
 r2555: [1614..1615]
 r2556: [1608..1609]
 r2558: [1562..1563]
 r2559: [1560..1561]
 r2560: [1554..1555]
 r2561: [1550..1551]
 r2562: [1544..1545]
 r2563: [1606..1607]
 r2564: [1606..1607]
 r2565: [1604..1605]
 r2566: [1596..1597]
 r2567: [1598..1599]
 r2569: [1592..1593]
 r2570: [1594..1595]
 r2571: [1590..1591]
 r2572: [1582..1583]
 r2573: [1580..1581]
 r2574: [1576..1577]
 r2575: [1572..1573]
 r2576: [1564..1565]
 r2577: [1512..1513]
 r2578: [1512..1513]
 r2579: [1510..1511] [1506..1507]
 r2580: [1506..1511]
 r2581: [1508..1511]
 r2582: [1500..1501]
 r2583: [1500..1501]
 r2584: [1500..1501]
 r2585: [1498..1499]
 r2586: [1498..1499]
 r2587: [1498..1499]
 r2588: [1498..1499]
 r2589: [1492..1493] [1488..1489] [1484..1485]
 r2590: [1490..1491]
 r2591: [1486..1487]
 r2592: [1474..1475]
 r2593: [1468..1469]
 r2594: [1462..1463]
 r2595: [1462..1463]
 r2596: [1454..1455] [1450..1451] [1446..1447]
 r2597: [1452..1453]
 r2598: [1448..1449]
 r2599: [1436..1437]
 r2600: [1432..1433]
 r2601: [1432..1433]
 r2602: [1430..1431] [1426..1427]
 r2603: [1426..1431]
 r2604: [1428..1431]
 r2605: [1420..1421]
 r2606: [1420..1421]
 r2607: [1420..1421]
 r2608: [1420..1421]
 r2609: [1414..1415] [1410..1411] [1406..1407]
 r2610: [1412..1413]
 r2611: [1408..1409]
 r2612: [1396..1397]
 r2613: [1390..1391] [1386..1387] [1382..1383]
 r2614: [1388..1389]
 r2615: [1384..1385]
 r2616: [1372..1373]
 r2617: [1350..1351]
 r2618: [1354..1355]
 r2619: [1366..1367]
 r2620: [1362..1363]
 r2621: [1356..1357]
 r2622: [1356..1357]
 r2623: [1346..1347]
 r2624: [1346..1347]
 r2625: [1344..1345] [1340..1341]
 r2626: [1340..1345]
 r2627: [1342..1345]
 r2628: [1334..1335]
 r2629: [1334..1335]
 r2630: [1334..1335]
 r2631: [1334..1335]
 r2632: [1328..1329] [1324..1325] [1320..1321]
 r2633: [1326..1327]
 r2634: [1322..1323]
 r2635: [1310..1311]
 r2636: [1304..1305] [1300..1301] [1296..1297]
 r2637: [1302..1303]
 r2638: [1298..1299]
 r2639: [1286..1287]
 r2640: [1264..1265]
 r2641: [1268..1269]
 r2642: [1280..1281]
 r2643: [1276..1277]
 r2644: [1270..1271]
 r2645: [1270..1271]
 r2646: [1260..1261]
 r2647: [1260..1261]
 r2648: [1258..1259] [1254..1255]
 r2649: [1254..1259]
 r2650: [1256..1259]
 r2651: [1248..1249]
 r2652: [1248..1249]
 r2653: [1248..1249]
 r2654: [1248..1249]
 r2655: [1242..1243] [1238..1239] [1234..1235]
 r2656: [1240..1241]
 r2657: [1236..1237]
 r2658: [1224..1225]
 r2659: [1218..1219]
 r2660: [1212..1213]
 r2661: [1212..1213]
 r2662: [1204..1205] [1200..1201] [1196..1197]
 r2663: [1202..1203]
 r2664: [1198..1199]
 r2665: [1186..1187]
 r2666: [1182..1183]
 r2667: [1176..1177]
 r2668: [1178..1179]
 r2669: [1180..1181]
 r2670: [1142..1143]
 r2671: [1146..1147]
 r2672: [1172..1173]
 r2673: [1168..1169]
 r2674: [1162..1163]
 r2675: [1160..1161]
 r2676: [1156..1157]
 r2677: [1148..1149]
 r2678: [1138..1139]
 r2679: [1138..1139]
 r2680: [1136..1137] [1132..1133]
 r2681: [1132..1137]
 r2682: [1134..1137]
 r2683: [1130..1131]
 r2684: [1126..1127]
 r2686: [1124..1125]
 r2687: [1122..1124]
 r2688: [1123..1123]
 r2689: [1120..1121]
 r2690: [1114..1115]
 r2691: [1118..1119]
 r2692: [1104..1105]
 r2693: [1104..1105]
 r2694: [1104..1105]
 r2695: [1104..1105]
 r2696: [1098..1099] [1094..1095] [1090..1091]
 r2697: [1096..1097]
 r2698: [1092..1093]
 r2699: [1080..1081]
 r2700: [1074..1075]
 r2701: [1068..1069]
 r2702: [1068..1069]
 r2703: [1060..1061] [1056..1057] [1052..1053]
 r2704: [1058..1059]
 r2705: [1054..1055]
 r2706: [1042..1043]
 r2707: [1038..1039]
 r2708: [1032..1033]
 r2709: [1034..1035]
 r2710: [1036..1037]
 r2711: [998..999]
 r2712: [1002..1003]
 r2713: [1028..1029]
 r2714: [1024..1025]
 r2715: [1018..1019]
 r2716: [1016..1017]
 r2717: [1012..1013]
 r2718: [1004..1005]
 r2719: [994..995]
 r2720: [994..995]
 r2721: [992..993] [988..989]
 r2722: [988..993]
 r2723: [990..993]
 r2724: [986..987]
 r2725: [982..983]
 r2727: [980..981]
 r2728: [978..980]
 r2729: [979..979]
 r2730: [976..977]
 r2731: [970..971]
 r2732: [974..975]
 r2733: [960..961]
 r2734: [960..961]
 r2735: [960..961]
 r2736: [960..961]
 r2737: [938..939]
 r2738: [940..941]
 r2739: [302..303]
 r2740: [306..307]
 r2741: [934..935]
 r2742: [930..931]
 r2743: [922..925]
 r2744: [922..923]
 r2745: [920..921]
 r2746: [918..919]
 r2747: [568..569]
 r2748: [564..565]
 r2749: [558..559]
 r2750: [558..559]
 r2751: [556..557]
 r2752: [552..553]
 r2753: [546..547]
 r2754: [546..547]
 r2755: [916..917]
 r2756: [912..913]
 r2757: [904..907]
 r2758: [904..905]
 r2759: [902..903]
 r2760: [900..901]
 r2761: [896..897]
 r2762: [888..891]
 r2763: [888..889]
 r2764: [886..887]
 r2765: [882..883]
 r2766: [874..877]
 r2767: [874..875]
 r2768: [868..869]
 r2769: [870..871]
 r2770: [866..867]
 r2771: [862..863]
 r2772: [854..857]
 r2773: [854..855]
 r2774: [852..853]
 r2775: [848..849]
 r2776: [844..845]
 r2777: [836..839]
 r2778: [836..837]
 r2779: [830..831]
 r2780: [832..833]
 r2781: [828..829]
 r2782: [824..825]
 r2783: [816..819]
 r2784: [816..817]
 r2785: [814..815]
 r2786: [810..811]
 r2787: [802..805]
 r2788: [802..803]
 r2789: [794..795]
 r2790: [792..793]
 r2791: [788..789]
 r2792: [782..783]
 r2793: [774..777]
 r2794: [774..775]
 r2795: [772..773]
 r2796: [768..769]
 r2797: [760..763]
 r2798: [760..761]
 r2799: [758..759]
 r2800: [754..755]
 r2801: [746..749]
 r2802: [746..747]
 r2803: [738..741]
 r2804: [738..739]
 r2805: [734..735]
 r2806: [722..723]
 r2807: [718..719]
 r2808: [716..717]
 r2809: [716..717]
 r2810: [712..713]
 r2811: [708..709]
 r2812: [700..701]
 r2813: [698..699]
 r2814: [694..695]
 r2815: [686..689]
 r2816: [686..687]
 r2817: [684..685]
 r2818: [680..681]
 r2819: [672..675]
 r2820: [672..673]
 r2821: [664..665]
 r2822: [662..663]
 r2823: [658..659]
 r2824: [652..653]
 r2825: [644..647]
 r2826: [644..645]
 r2827: [642..643]
 r2828: [638..639]
 r2829: [630..633]
 r2830: [630..631]
 r2831: [628..629]
 r2832: [624..625]
 r2833: [616..619]
 r2834: [616..617]
 r2835: [608..611]
 r2836: [608..609]
 r2837: [604..605]
 r2838: [592..593]
 r2839: [588..589]
 r2840: [586..587]
 r2841: [586..587]
 r2842: [582..583]
 r2843: [578..579]
 r2844: [570..571]
 r2845: [544..545]
 r2846: [540..541]
 r2847: [532..535]
 r2848: [532..533]
 r2849: [530..531]
 r2850: [528..529]
 r2851: [524..525]
 r2852: [518..519]
 r2853: [512..513]
 r2854: [508..509]
 r2855: [500..503]
 r2856: [500..501]
 r2857: [498..499]
 r2858: [496..497]
 r2859: [492..493]
 r2860: [486..487]
 r2861: [480..481]
 r2862: [476..477]
 r2863: [468..471]
 r2864: [468..469]
 r2865: [466..467]
 r2866: [464..465]
 r2867: [460..461]
 r2868: [454..455]
 r2869: [448..449]
 r2870: [446..447]
 r2871: [442..443]
 r2872: [438..439]
 r2873: [432..433]
 r2874: [426..427]
 r2875: [424..425]
 r2876: [420..421]
 r2877: [412..413]
 r2878: [410..411]
 r2879: [406..407]
 r2880: [400..401]
 r2881: [394..395]
 r2882: [392..393]
 r2883: [388..389]
 r2884: [382..383]
 r2885: [376..377]
 r2886: [374..375]
 r2887: [370..371]
 r2888: [362..363]
 r2889: [360..361]
 r2890: [356..357]
 r2891: [348..351]
 r2892: [348..349]
 r2893: [346..347]
 r2894: [342..343]
 r2895: [334..337]
 r2896: [334..335]
 r2897: [326..329]
 r2898: [326..327]
 r2899: [322..323]
 r2900: [320..321]
 r2901: [316..317]
 r2902: [308..309]
 r2903: [294..295]
 r2904: [294..295]
 r2905: [292..293] [288..289]
 r2906: [288..293]
 r2907: [290..293]
 r2908: [282..283] [278..279] [274..275]
 r2909: [280..281]
 r2910: [276..277]
 r2911: [270..271]
 r2912: [268..269]
 r2913: [266..267]
 r2914: [266..267]
 r2915: [266..267]
 r2916: [242..243]
 r2917: [242..243]
 r2918: [240..241] [236..237]
 r2919: [236..241]
 r2920: [238..241]
 r2921: [234..235]
 r2922: [234..235]
 r2923: [234..235]
 r2924: [196..197]
 r2925: [200..201]
 r2926: [226..227]
 r2927: [222..223]
 r2928: [216..217]
 r2929: [212..213]
 r2930: [204..207]
 r2931: [204..205]
 r2932: [202..203]
 r2933: [158..159]
 r2934: [168..169]
 r2935: [172..173]
 r2936: [186..187]
 r2937: [180..181]
 r2938: [174..175]
 r2939: [174..175]
 r2940: [6..7]
 r2941: [140..141] [136..137] [132..133]
 r2942: [138..139]
 r2943: [134..135]
 r2944: [122..123]
 r2945: [116..117] [112..113] [108..109]
 r2946: [114..115]
 r2947: [110..111]
 r2948: [98..99]
 r2949: [94..95]
 r2950: [94..95]
 r2951: [92..93]
 r2952: [92..93]
 r2953: [90..91] [86..87]
 r2954: [86..91]
 r2955: [88..91]
 r2956: [80..81]
 r2957: [80..81]
 r2958: [80..81]
 r2959: [80..81]
 r2960: [74..75] [70..71] [66..67]
 r2961: [72..73]
 r2962: [68..69]
 r2963: [56..57]
 r2964: [50..51] [46..47] [42..43]
 r2965: [48..49]
 r2966: [44..45]
 r2967: [32..33]
 r2968: [28..29]
 r2969: [28..29]
 r2970: [26..27]
 r2971: [26..27]
 r2972: [24..25] [20..21]
 r2973: [20..25]
 r2974: [22..25]
 r2975: [14..15]
 r2976: [14..15]
 r2977: [14..15]
 r2978: [14..15]
 r2979: [2..3]
 r2980: [0..1]
 r2983: [4510..4511]
 r2984: [4500..4501]
 r2985: [4468..4469]
 r2986: [4129..4131]
 r2987: [4124..4125]
 r2988: [4120..4121]
 r2989: [4116..4117]
 r2990: [4111..4113]
 r2991: [4106..4107]
 r2992: [4104..4105]
 r2993: [4100..4101]
 r2994: [4094..4095]
 r2995: [3756..3757]
 r2996: [3598..3599]
 r2997: [3578..3579]
 r2998: [3478..3479]
 r2999: [3272..3273]
 r3000: [3200..3201]
 r3001: [3128..3129]
 r3002: [3060..3061]
 r3003: [2984..2985]
 r3004: [2914..2915]
 r3005: [2846..2847]
 r3006: [2776..2777]
 r3007: [2658..2659]
 r3008: [2644..2645]
 r3009: [2576..2577]
 r3010: [2508..2509]
 r3011: [2442..2443]
 r3012: [2376..2377]
 r3013: [2188..2189]
 r3014: [2072..2073]
 r3015: [1986..1987]
 r3016: [1828..1829]
 r3017: [1808..1809]
 r3018: [1508..1509]
 r3019: [1428..1429]
 r3020: [1342..1343]
 r3021: [1256..1257]
 r3022: [1134..1135]
 r3023: [990..991]
 r3024: [298..299]
 r3025: [296..297]
 r3026: [290..291]
 r3027: [258..259]
 r3028: [256..257]
 r3029: [254..255]
 r3030: [252..253]
 r3031: [250..251]
 r3032: [248..249]
 r3033: [246..247]
 r3034: [238..239]
 r3035: [154..155]
 r3036: [152..153]
 r3037: [150..151]
 r3038: [148..149]
 r3039: [88..89]
 r3040: [22..23]
 r3041: [3580..3597]
 r3042: [1810..1827]

********** Assignment #1: **********

	 Assigning to 2984 (cl=DIREG, orig=1770, freq=3000, tfirst=2984, tfreq=3000)...
	   Assign 5 to reload r2984 (freq=3000)
	 Assigning to 2985 (cl=DIREG, orig=1783, freq=3000, tfirst=2985, tfreq=3000)...
	   Assign 5 to reload r2985 (freq=3000)
	 Assigning to 2999 (cl=DIREG, orig=2070, freq=3000, tfirst=2999, tfreq=3000)...
	   Assign 5 to reload r2999 (freq=3000)
	 Assigning to 3000 (cl=DIREG, orig=2092, freq=3000, tfirst=3000, tfreq=3000)...
	   Assign 5 to reload r3000 (freq=3000)
	 Assigning to 3001 (cl=DIREG, orig=2114, freq=3000, tfirst=3001, tfreq=3000)...
	   Assign 5 to reload r3001 (freq=3000)
	 Assigning to 3002 (cl=DIREG, orig=2135, freq=3000, tfirst=3002, tfreq=3000)...
	   Assign 5 to reload r3002 (freq=3000)
	 Assigning to 3003 (cl=DIREG, orig=2166, freq=3000, tfirst=3003, tfreq=3000)...
	   Assign 5 to reload r3003 (freq=3000)
	 Assigning to 3004 (cl=DIREG, orig=2189, freq=3000, tfirst=3004, tfreq=3000)...
	   Assign 5 to reload r3004 (freq=3000)
	 Assigning to 3005 (cl=DIREG, orig=2211, freq=3000, tfirst=3005, tfreq=3000)...
	   Assign 5 to reload r3005 (freq=3000)
	 Assigning to 3006 (cl=DIREG, orig=2234, freq=3000, tfirst=3006, tfreq=3000)...
	   Assign 5 to reload r3006 (freq=3000)
	 Assigning to 3007 (cl=DIREG, orig=2263, freq=3000, tfirst=3007, tfreq=3000)...
	   Assign 5 to reload r3007 (freq=3000)
	 Assigning to 3008 (cl=DIREG, orig=2270, freq=3000, tfirst=3008, tfreq=3000)...
	   Assign 5 to reload r3008 (freq=3000)
	 Assigning to 3009 (cl=DIREG, orig=2289, freq=3000, tfirst=3009, tfreq=3000)...
	   Assign 5 to reload r3009 (freq=3000)
	 Assigning to 3010 (cl=DIREG, orig=2310, freq=3000, tfirst=3010, tfreq=3000)...
	   Assign 5 to reload r3010 (freq=3000)
	 Assigning to 3011 (cl=DIREG, orig=2329, freq=3000, tfirst=3011, tfreq=3000)...
	   Assign 5 to reload r3011 (freq=3000)
	 Assigning to 3012 (cl=DIREG, orig=2348, freq=3000, tfirst=3012, tfreq=3000)...
	   Assign 5 to reload r3012 (freq=3000)
	 Assigning to 3013 (cl=DIREG, orig=2394, freq=3000, tfirst=3013, tfreq=3000)...
	   Assign 5 to reload r3013 (freq=3000)
	 Assigning to 3014 (cl=DIREG, orig=2426, freq=3000, tfirst=3014, tfreq=3000)...
	   Assign 5 to reload r3014 (freq=3000)
	 Assigning to 3018 (cl=DIREG, orig=2579, freq=3000, tfirst=3018, tfreq=3000)...
	   Assign 5 to reload r3018 (freq=3000)
	 Assigning to 3019 (cl=DIREG, orig=2602, freq=3000, tfirst=3019, tfreq=3000)...
	   Assign 5 to reload r3019 (freq=3000)
	 Assigning to 3020 (cl=DIREG, orig=2625, freq=3000, tfirst=3020, tfreq=3000)...
	   Assign 5 to reload r3020 (freq=3000)
	 Assigning to 3021 (cl=DIREG, orig=2648, freq=3000, tfirst=3021, tfreq=3000)...
	   Assign 5 to reload r3021 (freq=3000)
	 Assigning to 3022 (cl=DIREG, orig=2680, freq=3000, tfirst=3022, tfreq=3000)...
	   Assign 5 to reload r3022 (freq=3000)
	 Assigning to 3023 (cl=DIREG, orig=2721, freq=3000, tfirst=3023, tfreq=3000)...
	   Assign 5 to reload r3023 (freq=3000)
	 Assigning to 3026 (cl=DIREG, orig=2905, freq=3000, tfirst=3026, tfreq=3000)...
	   Assign 5 to reload r3026 (freq=3000)
	 Assigning to 3034 (cl=DIREG, orig=2918, freq=3000, tfirst=3034, tfreq=3000)...
	   Assign 5 to reload r3034 (freq=3000)
	 Assigning to 3039 (cl=DIREG, orig=2953, freq=3000, tfirst=3039, tfreq=3000)...
	   Assign 5 to reload r3039 (freq=3000)
	 Assigning to 3040 (cl=DIREG, orig=2972, freq=3000, tfirst=3040, tfreq=3000)...
	   Assign 5 to reload r3040 (freq=3000)
	 Assigning to 2986 (cl=AREG, orig=2981, freq=2000, tfirst=2986, tfreq=2000)...
	   Assign 0 to reload r2986 (freq=2000)
	 Assigning to 2990 (cl=AREG, orig=2982, freq=2000, tfirst=2990, tfreq=2000)...
	   Assign 0 to reload r2990 (freq=2000)
	 Assigning to 2987 (cl=GENERAL_REGS, orig=1872, freq=3000, tfirst=2987, tfreq=3000)...
	   Assign 0 to reload r2987 (freq=3000)
	 Assigning to 2988 (cl=GENERAL_REGS, orig=1869, freq=3000, tfirst=2988, tfreq=3000)...
	   Assign 0 to reload r2988 (freq=3000)
	 Assigning to 2989 (cl=GENERAL_REGS, orig=1873, freq=3000, tfirst=2989, tfreq=3000)...
	   Assign 1 to reload r2989 (freq=3000)
	 Assigning to 2991 (cl=GENERAL_REGS, orig=1879, freq=3000, tfirst=2991, tfreq=3000)...
	   Assign 0 to reload r2991 (freq=3000)
	 Assigning to 2992 (cl=GENERAL_REGS, orig=1881, freq=3000, tfirst=2992, tfreq=3000)...
	   Assign 0 to reload r2992 (freq=3000)
	 Assigning to 2993 (cl=GENERAL_REGS, orig=1880, freq=3000, tfirst=2993, tfreq=3000)...
	   Assign 1 to reload r2993 (freq=3000)
	 Assigning to 2994 (cl=GENERAL_REGS, orig=1876, freq=3000, tfirst=2994, tfreq=3000)...
	   Assign 2 to reload r2994 (freq=3000)
	 Assigning to 2995 (cl=GENERAL_REGS, orig=1949, freq=3000, tfirst=2995, tfreq=3000)...
	   Assign 1 to reload r2995 (freq=3000)
	 Assigning to 3015 (cl=GENERAL_REGS, orig=2456, freq=3000, tfirst=3015, tfreq=3000)...
	   Assign 1 to reload r3015 (freq=3000)
	 Assigning to 3024 (cl=INDEX_REGS, orig=3024, freq=2000, tfirst=3024, tfreq=2000)...
	   Assign 0 to reload r3024 (freq=2000)
	 Assigning to 3025 (cl=INDEX_REGS, orig=3025, freq=2000, tfirst=3025, tfreq=2000)...
	   Assign 0 to reload r3025 (freq=2000)
	 Assigning to 3027 (cl=INDEX_REGS, orig=3027, freq=2000, tfirst=3027, tfreq=2000)...
	   Assign 0 to reload r3027 (freq=2000)
	 Assigning to 3028 (cl=INDEX_REGS, orig=3028, freq=2000, tfirst=3028, tfreq=2000)...
	   Assign 0 to reload r3028 (freq=2000)
	 Assigning to 3029 (cl=INDEX_REGS, orig=3029, freq=2000, tfirst=3029, tfreq=2000)...
	   Assign 0 to reload r3029 (freq=2000)
	 Assigning to 3030 (cl=INDEX_REGS, orig=3030, freq=2000, tfirst=3030, tfreq=2000)...
	   Assign 0 to reload r3030 (freq=2000)
	 Assigning to 3031 (cl=INDEX_REGS, orig=3031, freq=2000, tfirst=3031, tfreq=2000)...
	   Assign 0 to reload r3031 (freq=2000)
	 Assigning to 3032 (cl=INDEX_REGS, orig=3032, freq=2000, tfirst=3032, tfreq=2000)...
	   Assign 0 to reload r3032 (freq=2000)
	 Assigning to 3033 (cl=INDEX_REGS, orig=3033, freq=2000, tfirst=3033, tfreq=2000)...
	   Assign 0 to reload r3033 (freq=2000)
	 Assigning to 3035 (cl=INDEX_REGS, orig=3035, freq=2000, tfirst=3035, tfreq=2000)...
	   Assign 0 to reload r3035 (freq=2000)
	 Assigning to 3036 (cl=INDEX_REGS, orig=3036, freq=2000, tfirst=3036, tfreq=2000)...
	   Assign 0 to reload r3036 (freq=2000)
	 Assigning to 3037 (cl=INDEX_REGS, orig=3037, freq=2000, tfirst=3037, tfreq=2000)...
	   Assign 0 to reload r3037 (freq=2000)
	 Assigning to 3038 (cl=INDEX_REGS, orig=3038, freq=2000, tfirst=3038, tfreq=2000)...
	   Assign 0 to reload r3038 (freq=2000)
	 Assigning to 2983 (cl=SSE_REGS, orig=107, freq=3000, tfirst=2983, tfreq=3000)...
	   Assign 22 to reload r2983 (freq=3000)
	 Assigning to 3041 (cl=SSE_REGS, orig=449, freq=2000, tfirst=2996, tfreq=3000)...
	 Assigning to 2996 (cl=SSE_REGS, orig=448, freq=3000, tfirst=2996, tfreq=3000)...
	   Assign 21 to reload r2996 (freq=3000)
	Hard reg 21 is preferable by r3041 with profit 1000
	Hard reg 21 is preferable by r2997 with profit 500
	 Assigning to 2997 (cl=SSE_REGS, orig=449, freq=2000, tfirst=2996, tfreq=3000)...
	   Assign 25 to optional reload r2997 (freq=2000)
	Hard reg 21 is preferable by r3041 with profit 1000
	Hard reg 25 is preferable by r3041 with profit 1000
	 Assigning to 2998 (cl=SSE_REGS, orig=496, freq=3000, tfirst=2998, tfreq=3000)...
	   Assign 22 to reload r2998 (freq=3000)
	 Assigning to 3042 (cl=SSE_REGS, orig=1020, freq=2000, tfirst=3016, tfreq=3000)...
	 Assigning to 3016 (cl=SSE_REGS, orig=1019, freq=3000, tfirst=3016, tfreq=3000)...
	   Assign 21 to reload r3016 (freq=3000)
	Hard reg 21 is preferable by r3042 with profit 1000
	Hard reg 21 is preferable by r3017 with profit 500
	 Assigning to 3017 (cl=SSE_REGS, orig=1020, freq=2000, tfirst=3016, tfreq=3000)...
	   Assign 26 to optional reload r3017 (freq=2000)
	Hard reg 21 is preferable by r3042 with profit 1000
	Hard reg 26 is preferable by r3042 with profit 1000
  Reassigning non-reload pseudos

********** Undoing inheritance #1: **********

Inherit 0 out of 2 (0.00%)
   Insn after restoring regs:
 5848: r2997:SF=r449:SF
      REG_DEAD r449:SF
   Insn after restoring regs:
 5847: r449:SF=r2996:SF
      REG_DEAD r2996:SF
   Insn after restoring regs:
 5887: r3017:SF=r1020:SF
      REG_DEAD r1020:SF
   Insn after restoring regs:
 5886: r1020:SF=r3016:SF
      REG_DEAD r3016:SF
Remove optional reload reg 2997
  Restoring original insn:
 1110: r1996:SF=r457:SF*r449:SF
      REG_DEAD r449:SF
      REG_DEAD r457:SF
  Deleting move 5848
 5848: r2997:SF=r449:SF
      REG_DEAD r449:SF
deleting insn with uid = 5848.
Remove optional reload reg 3017
  Restoring original insn:
 3453: r2503:SF=r1028:SF*r1020:SF
      REG_DEAD r1020:SF
      REG_DEAD r1028:SF
  Deleting move 5887
 5887: r3017:SF=r1020:SF
      REG_DEAD r1020:SF
deleting insn with uid = 5887.

********** Local #2: **********

	   Spilling non-eliminable hard regs: 6
            2 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 3453:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=3043 from oldreg=1020, assigning class SSE_REGS to r3043
      Making reload reg 3043 for reg 1020 optional
 3453: r2503:SF=r1028:SF*r3043:SF
      REG_DEAD r1020:SF
      REG_DEAD r1028:SF
    Inserting insn reload before:
 5923: r3043:SF=r1020:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=615,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            alt=1,overall=617,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=4,overall=622,losers=2 -- refuse
            0 Non pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=7,overall=2,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 5923:  (0) v  (1) m {*movsf_internal}
            2 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 1110:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=3044 from oldreg=449, assigning class SSE_REGS to r3044
      Making reload reg 3044 for reg 449 optional
 1110: r1996:SF=r457:SF*r3044:SF
      REG_DEAD r449:SF
      REG_DEAD r457:SF
    Inserting insn reload before:
 5924: r3044:SF=r449:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=615,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            alt=1,overall=617,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=4,overall=622,losers=2 -- refuse
            0 Non pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=7,overall=2,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 5924:  (0) v  (1) m {*movsf_internal}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #2: **********

EBB 2 3
EBB 4 5
EBB 6
EBB 7 8
EBB 9 10
EBB 11
EBB 12 13
EBB 14 15
EBB 364
EBB 16
EBB 363
EBB 17
EBB 18 19
EBB 20 21
EBB 22 23
EBB 367
EBB 24
EBB 366
EBB 25
EBB 365
EBB 26
EBB 27 28 29
EBB 30 31
EBB 32 33
EBB 34
EBB 35 36
EBB 369
EBB 37
EBB 368
EBB 38
EBB 39 40
EBB 41 42
EBB 43 44
EBB 372
EBB 45
EBB 371
EBB 46
EBB 370
EBB 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69
EBB 70 71 72 73 74
EBB 75
EBB 76 77
EBB 78 79
EBB 376
EBB 80
EBB 375
EBB 81
EBB 82 83
EBB 84 85
EBB 86 87 88
EBB 89 90
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=3045 from oldreg=449, assigning class SSE_REGS to inheritance r3045
    Original reg change 449->3045 (bb89):
 5847: r3045:SF=r2996:SF
      REG_DEAD r2996:SF
    Add original<-inheritance after:
 5925: r449:SF=r3045:SF

    Inheritance reuse change 449->3045 (bb89):
 5924: r3044:SF=r3045:SF
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
	    Removing dead insn:
  5925: r449:SF=r3045:SF
deleting insn with uid = 5925.
EBB 91 92 93
EBB 94
EBB 95
EBB 96 97
EBB 98 99 100 101 102 103
EBB 104
EBB 378
EBB 105
EBB 377
EBB 106
EBB 374
EBB 107
EBB 108 109 110 111 112
EBB 113
EBB 114 115 116 117
EBB 118
EBB 119 120 121 122
EBB 123
EBB 124 125 126 127
EBB 128
EBB 129 130 131 132
EBB 133
EBB 134 135 136 137
EBB 138
EBB 139 140 141 142
EBB 143
EBB 144 145 146 147
EBB 148
EBB 149 150
EBB 151 152
EBB 153 154
EBB 155 156
EBB 157 158
EBB 159 160
EBB 161 162 163 164
EBB 165
EBB 166 167 168 169
EBB 170
EBB 171 172 173 174
EBB 175
EBB 176 177 178 179
EBB 180
EBB 181 182 183
EBB 184 185
EBB 186 187 188 189
EBB 190
EBB 380
EBB 191
EBB 379
EBB 192
EBB 193 194
EBB 195 196
EBB 382
EBB 197
EBB 381
EBB 198 199
EBB 200
EBB 201 202 203
EBB 204 205
EBB 206 207
EBB 384
EBB 208
EBB 383
EBB 209 210
EBB 211
EBB 212 213 214 215
EBB 216 217
EBB 218 219
EBB 386
EBB 220
EBB 385
EBB 221
EBB 222
EBB 223 224
EBB 225 226 227
EBB 228 229
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=3046 from oldreg=1020, assigning class SSE_REGS to inheritance r3046
    Original reg change 1020->3046 (bb228):
 5886: r3046:SF=r3016:SF
      REG_DEAD r3016:SF
    Add original<-inheritance after:
 5926: r1020:SF=r3046:SF

    Inheritance reuse change 1020->3046 (bb228):
 5923: r3043:SF=r3046:SF
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
	    Removing dead insn:
  5926: r1020:SF=r3046:SF
deleting insn with uid = 5926.
EBB 230 231
EBB 232 233
EBB 234
EBB 235 236 237
EBB 238
EBB 239 240
EBB 241
EBB 242
EBB 388
EBB 243
EBB 387
EBB 244 245
EBB 246
EBB 247 248 249 250
EBB 251
EBB 252 253 254
EBB 255 256
EBB 257 258
EBB 390
EBB 259
EBB 389
EBB 260 261
EBB 262
EBB 263 264 265
EBB 266 267
EBB 268 269
EBB 392
EBB 270
EBB 391
EBB 271 272
EBB 273
EBB 274 275 276 277
EBB 278
EBB 279
EBB 280 281
EBB 282 283
EBB 394
EBB 284
EBB 393
EBB 285 286
EBB 287
EBB 288 289
EBB 290 291
EBB 292
EBB 293 294 295 296
EBB 297
EBB 298
EBB 299 300
EBB 301 302
EBB 396
EBB 303
EBB 395
EBB 304 305
EBB 306
EBB 307 308
EBB 309 310
EBB 311
EBB 312
EBB 373
EBB 313 314
EBB 315 316
EBB 317 318 319 320
EBB 321
EBB 322
EBB 398
EBB 323
EBB 397
EBB 324
EBB 325 326 327
EBB 328 329
EBB 330 331
EBB 332
EBB 333 334
EBB 335 336
EBB 401
EBB 337
EBB 400
EBB 338
EBB 339 340
EBB 341 342
EBB 343 344
EBB 404
EBB 345
EBB 403
EBB 346
EBB 402
EBB 347 348
EBB 349
EBB 350 351 352 353 354
EBB 355
EBB 356 357 358 359
EBB 360
EBB 361
EBB 399
EBB 362

********** Pseudo live ranges #2: **********

  BB 362
   Insn 5577: point = 0, n_alt = -1
   Insn 5519: point = 0, n_alt = 0
   Insn 5518: point = 0, n_alt = -2
   Insn 5517: point = 1, n_alt = 3
   Insn 5516: point = 2, n_alt = 0
   Insn 5515: point = 2, n_alt = -2
   Insn 5514: point = 3, n_alt = 3
   Insn 5576: point = 4, n_alt = -1
  BB 399
   Insn 5805: point = 4, n_alt = -1
  BB 350
   Insn 5325: point = 4, n_alt = -1
   Insn 5324: point = 4, n_alt = 0
   Insn 5323: point = 5, n_alt = 0
   Insn 5322: point = 7, n_alt = 0
   Insn 5321: point = 8, n_alt = 0
   Insn 5320: point = 9, n_alt = 0
  BB 361
   Insn 5693: point = 10, n_alt = -1
   Insn 5507: point = 10, n_alt = 1
   Insn 5506: point = 11, n_alt = 0
   Insn 5505: point = 13, n_alt = 0
  BB 360
   Insn 5502: point = 14, n_alt = 0
   Insn 5501: point = 14, n_alt = 3
   Insn 5500: point = 14, n_alt = 2
   Insn 5499: point = 14, n_alt = 2
   Insn 5498: point = 14, n_alt = -2
   Insn 5497: point = 15, n_alt = -2
   Insn 5496: point = 16, n_alt = -2
   Insn 5495: point = 17, n_alt = -2
   Insn 5494: point = 18, n_alt = 3
   Insn 5493: point = 19, n_alt = 3
   Insn 5492: point = 20, n_alt = 3
   Insn 5491: point = 21, n_alt = 3
  BB 359
   Insn 5488: point = 22, n_alt = 1
  BB 358
   Insn 5486: point = 22, n_alt = -1
   Insn 5485: point = 22, n_alt = 0
   Insn 5484: point = 23, n_alt = 0
   Insn 5483: point = 24, n_alt = 1
   Insn 5482: point = 25, n_alt = 0
   Insn 5481: point = 26, n_alt = 0
   Insn 5480: point = 27, n_alt = 1
   Insn 5920: point = 28, n_alt = -2
	Hard reg 1 is preferable by r3040 with profit 1000
   Insn 5479: point = 30, n_alt = 0
   Insn 5919: point = 31, n_alt = -2
	Hard reg 1 is preferable by r3040 with profit 2000
   Insn 5478: point = 33, n_alt = 2
   Insn 5477: point = 34, n_alt = 2
   Insn 5476: point = 35, n_alt = 2
   Insn 5475: point = 36, n_alt = 0
   Insn 5474: point = 36, n_alt = 0
   Insn 5473: point = 36, n_alt = 3
   Insn 5472: point = 36, n_alt = 2
   Insn 5471: point = 36, n_alt = 2
   Insn 5470: point = 36, n_alt = 4
   Insn 5469: point = 36, n_alt = 4
   Insn 5468: point = 36, n_alt = -2
   Insn 5467: point = 37, n_alt = -2
   Insn 5466: point = 38, n_alt = 0
   Insn 5465: point = 38, n_alt = 0
   Insn 5464: point = 38, n_alt = 3
   Insn 5463: point = 39, n_alt = 3
   Insn 5462: point = 40, n_alt = 0
   Insn 5461: point = 40, n_alt = 3
   Insn 5460: point = 40, n_alt = 4
   Insn 5459: point = 40, n_alt = -2
   Insn 5458: point = 41, n_alt = -2
   Insn 5457: point = 42, n_alt = 4
   Insn 5456: point = 42, n_alt = 4
   Insn 5455: point = 42, n_alt = 3
   Insn 5454: point = 43, n_alt = 3
   Insn 5453: point = 44, n_alt = 1
   Insn 5452: point = 45, n_alt = 0
   Insn 5451: point = 47, n_alt = 0
   Insn 5450: point = 49, n_alt = 0
   Insn 5449: point = 51, n_alt = 0
   Insn 5448: point = 53, n_alt = 0
   Insn 5447: point = 55, n_alt = 0
   Insn 5446: point = 56, n_alt = -2
   Insn 5445: point = 58, n_alt = -2
   Insn 5444: point = 60, n_alt = 0
   Insn 5443: point = 62, n_alt = 0
   Insn 5442: point = 63, n_alt = -2
   Insn 5441: point = 65, n_alt = 0
   Insn 5440: point = 67, n_alt = -2
   Insn 5439: point = 68, n_alt = 1
   Insn 5438: point = 70, n_alt = 0
  BB 357
   Insn 5436: point = 71, n_alt = -1
   Insn 5435: point = 71, n_alt = 0
   Insn 5434: point = 72, n_alt = 0
   Insn 5433: point = 74, n_alt = 0
   Insn 5432: point = 76, n_alt = 0
   Insn 5431: point = 78, n_alt = 0
   Insn 5430: point = 80, n_alt = 0
   Insn 5429: point = 82, n_alt = 0
   Insn 5428: point = 83, n_alt = -2
   Insn 5427: point = 85, n_alt = -2
   Insn 5426: point = 87, n_alt = 0
   Insn 5425: point = 89, n_alt = 0
   Insn 5424: point = 90, n_alt = -2
   Insn 5423: point = 92, n_alt = 0
   Insn 5422: point = 94, n_alt = -2
   Insn 5421: point = 95, n_alt = 1
   Insn 5420: point = 97, n_alt = 0
  BB 356
   Insn 5418: point = 98, n_alt = -1
   Insn 5417: point = 98, n_alt = 0
   Insn 5416: point = 99, n_alt = 0
  BB 355
   Insn 5413: point = 100, n_alt = 0
   Insn 5412: point = 100, n_alt = 3
   Insn 5411: point = 100, n_alt = 2
   Insn 5410: point = 100, n_alt = 2
   Insn 5409: point = 100, n_alt = -2
   Insn 5408: point = 101, n_alt = -2
   Insn 5407: point = 102, n_alt = -2
   Insn 5406: point = 103, n_alt = -2
   Insn 5405: point = 104, n_alt = 3
   Insn 5404: point = 105, n_alt = 3
   Insn 5403: point = 106, n_alt = 3
   Insn 5402: point = 107, n_alt = 3
  BB 354
   Insn 5399: point = 108, n_alt = 1
  BB 353
   Insn 5397: point = 108, n_alt = -1
   Insn 5396: point = 108, n_alt = 0
   Insn 5395: point = 109, n_alt = 0
   Insn 5394: point = 110, n_alt = 1
   Insn 5393: point = 111, n_alt = 0
   Insn 5392: point = 112, n_alt = 0
   Insn 5391: point = 113, n_alt = 1
   Insn 5918: point = 114, n_alt = -2
	Hard reg 1 is preferable by r3039 with profit 1000
   Insn 5390: point = 116, n_alt = 0
   Insn 5917: point = 117, n_alt = -2
	Hard reg 1 is preferable by r3039 with profit 2000
   Insn 5389: point = 119, n_alt = 2
   Insn 5388: point = 120, n_alt = 2
   Insn 5387: point = 121, n_alt = 2
   Insn 5386: point = 122, n_alt = 0
   Insn 5385: point = 122, n_alt = 0
   Insn 5384: point = 122, n_alt = 3
   Insn 5383: point = 122, n_alt = 2
   Insn 5382: point = 122, n_alt = 2
   Insn 5381: point = 122, n_alt = 4
   Insn 5380: point = 122, n_alt = 4
   Insn 5379: point = 122, n_alt = -2
   Insn 5378: point = 123, n_alt = -2
   Insn 5377: point = 124, n_alt = 0
   Insn 5376: point = 124, n_alt = 0
   Insn 5375: point = 124, n_alt = 3
   Insn 5374: point = 125, n_alt = 3
   Insn 5373: point = 126, n_alt = 0
   Insn 5372: point = 126, n_alt = 3
   Insn 5371: point = 126, n_alt = 4
   Insn 5370: point = 126, n_alt = -2
   Insn 5369: point = 127, n_alt = -2
   Insn 5368: point = 128, n_alt = 4
   Insn 5367: point = 128, n_alt = 4
   Insn 5366: point = 128, n_alt = 3
   Insn 5365: point = 129, n_alt = 3
   Insn 5364: point = 130, n_alt = 1
   Insn 5363: point = 131, n_alt = 0
   Insn 5362: point = 133, n_alt = 0
   Insn 5361: point = 135, n_alt = 0
   Insn 5360: point = 137, n_alt = 0
   Insn 5359: point = 139, n_alt = 0
   Insn 5358: point = 141, n_alt = 0
   Insn 5357: point = 142, n_alt = -2
   Insn 5356: point = 144, n_alt = -2
   Insn 5355: point = 146, n_alt = 0
   Insn 5354: point = 148, n_alt = 0
   Insn 5353: point = 149, n_alt = -2
   Insn 5352: point = 151, n_alt = 0
   Insn 5351: point = 153, n_alt = -2
   Insn 5350: point = 154, n_alt = 1
   Insn 5349: point = 156, n_alt = 0
  BB 352
   Insn 5347: point = 157, n_alt = -1
   Insn 5346: point = 157, n_alt = 0
   Insn 5345: point = 158, n_alt = 0
   Insn 5344: point = 160, n_alt = 0
   Insn 5343: point = 162, n_alt = 0
   Insn 5342: point = 164, n_alt = 0
   Insn 5341: point = 166, n_alt = 0
   Insn 5340: point = 168, n_alt = 0
   Insn 5339: point = 169, n_alt = -2
   Insn 5338: point = 171, n_alt = -2
   Insn 5337: point = 173, n_alt = 0
   Insn 5336: point = 175, n_alt = 0
   Insn 5335: point = 176, n_alt = -2
   Insn 5334: point = 178, n_alt = 0
   Insn 5333: point = 180, n_alt = -2
   Insn 5332: point = 181, n_alt = 1
   Insn 5331: point = 183, n_alt = 0
  BB 351
   Insn 5329: point = 184, n_alt = -1
   Insn 5328: point = 184, n_alt = 0
   Insn 5327: point = 185, n_alt = 0
  BB 349
   Insn 5318: point = 186, n_alt = 1
  BB 348
   Insn 5315: point = 186, n_alt = 0
   Insn 5314: point = 186, n_alt = 3
   Insn 5313: point = 186, n_alt = 4
   Insn 5312: point = 186, n_alt = 4
  BB 347
   Insn 5310: point = 186, n_alt = -1
   Insn 5309: point = 186, n_alt = 0
   Insn 5308: point = 187, n_alt = 0
   Insn 5307: point = 188, n_alt = 0
   Insn 5306: point = 188, n_alt = 0
   Insn 5305: point = 188, n_alt = 3
   Insn 5304: point = 188, n_alt = 4
   Insn 5303: point = 188, n_alt = 4
   Insn 5302: point = 188, n_alt = 4
   Insn 5301: point = 188, n_alt = 4
   Insn 5300: point = 188, n_alt = 4
   Insn 5299: point = 188, n_alt = 4
   Insn 5298: point = 188, n_alt = 0
   Insn 5916: point = 189, n_alt = 4
   Insn 5297: point = 190, n_alt = 0
   Insn 5915: point = 191, n_alt = 4
   Insn 5296: point = 192, n_alt = 0
   Insn 5914: point = 193, n_alt = 4
   Insn 5295: point = 194, n_alt = 0
   Insn 5294: point = 194, n_alt = 0
   Insn 5293: point = 194, n_alt = 0
   Insn 5292: point = 194, n_alt = 0
   Insn 5291: point = 194, n_alt = 0
   Insn 5290: point = 194, n_alt = 0
   Insn 5913: point = 195, n_alt = 4
   Insn 5289: point = 196, n_alt = 0
  BB 402
   Insn 5814: point = 196, n_alt = -1
  BB 339
   Insn 5235: point = 196, n_alt = -1
   Insn 5234: point = 196, n_alt = 0
   Insn 5233: point = 197, n_alt = 0
   Insn 5232: point = 199, n_alt = 0
   Insn 5231: point = 200, n_alt = 0
   Insn 5230: point = 201, n_alt = 0
  BB 346
   Insn 5691: point = 202, n_alt = -1
   Insn 5283: point = 202, n_alt = 1
   Insn 5282: point = 203, n_alt = 0
   Insn 5281: point = 205, n_alt = 0
  BB 403
   Insn 5817: point = 206, n_alt = -1
  BB 341
   Insn 5245: point = 206, n_alt = -1
   Insn 5244: point = 206, n_alt = 0
   Insn 5243: point = 207, n_alt = 0
   Insn 5242: point = 209, n_alt = 0
   Insn 5241: point = 210, n_alt = 0
  BB 345
   Insn 5689: point = 211, n_alt = -1
   Insn 5275: point = 211, n_alt = 1
  BB 404
   Insn 5820: point = 212, n_alt = -1
  BB 343
   Insn 5253: point = 213, n_alt = -1
   Insn 5252: point = 213, n_alt = 0
   Insn 5251: point = 214, n_alt = 0
   Insn 5250: point = 216, n_alt = 0
   Insn 5249: point = 217, n_alt = 0
  BB 344
   Insn 5687: point = 218, n_alt = -1
   Insn 5269: point = 218, n_alt = 1
   Insn 5268: point = 218, n_alt = 8
   Insn 5267: point = 219, n_alt = 7
   Insn 5266: point = 220, n_alt = 4
   Insn 5265: point = 221, n_alt = 3
   Insn 5264: point = 223, n_alt = 0
   Insn 5263: point = 225, n_alt = 1
   Insn 5262: point = 227, n_alt = 0
   Insn 5261: point = 228, n_alt = 0
   Insn 5260: point = 230, n_alt = 0
   Insn 5259: point = 232, n_alt = 1
   Insn 5258: point = 234, n_alt = 0
   Insn 5257: point = 235, n_alt = 1
   Insn 5256: point = 237, n_alt = 1
   Insn 5255: point = 239, n_alt = 0
  BB 342
   Insn 5247: point = 241, n_alt = 1
  BB 340
   Insn 5239: point = 242, n_alt = 1
   Insn 5238: point = 243, n_alt = 0
   Insn 5237: point = 244, n_alt = 0
  BB 338
   Insn 5228: point = 245, n_alt = 1
  BB 400
   Insn 5808: point = 245, n_alt = -1
  BB 333
   Insn 5187: point = 245, n_alt = -1
   Insn 5186: point = 245, n_alt = 0
   Insn 5185: point = 246, n_alt = 0
   Insn 5184: point = 248, n_alt = 0
   Insn 5183: point = 249, n_alt = 0
  BB 337
   Insn 5685: point = 250, n_alt = -1
   Insn 5222: point = 250, n_alt = 1
  BB 401
   Insn 5811: point = 251, n_alt = -1
  BB 335
   Insn 5195: point = 252, n_alt = -1
   Insn 5194: point = 252, n_alt = 0
   Insn 5193: point = 253, n_alt = 0
   Insn 5192: point = 255, n_alt = 0
   Insn 5191: point = 256, n_alt = 0
  BB 336
   Insn 5683: point = 257, n_alt = -1
   Insn 5216: point = 257, n_alt = 1
   Insn 5215: point = 257, n_alt = 8
   Insn 5214: point = 258, n_alt = 4
   Insn 5213: point = 259, n_alt = 7
   Insn 5212: point = 261, n_alt = 0
   Insn 5211: point = 263, n_alt = 4
   Insn 5210: point = 264, n_alt = 3
   Insn 5209: point = 266, n_alt = 0
   Insn 5208: point = 268, n_alt = 1
   Insn 5207: point = 270, n_alt = 0
   Insn 5206: point = 271, n_alt = 0
   Insn 5205: point = 273, n_alt = 1
   Insn 5204: point = 275, n_alt = 0
   Insn 5203: point = 276, n_alt = 3
   Insn 5202: point = 278, n_alt = 0
   Insn 5201: point = 280, n_alt = 1
   Insn 5200: point = 282, n_alt = 0
   Insn 5199: point = 283, n_alt = 0
   Insn 5198: point = 285, n_alt = 1
   Insn 5197: point = 287, n_alt = 0
  BB 334
   Insn 5189: point = 289, n_alt = 1
  BB 332
   Insn 5181: point = 290, n_alt = 1
   Insn 5180: point = 291, n_alt = 0
   Insn 5179: point = 292, n_alt = 0
  BB 331
   Insn 5176: point = 293, n_alt = -1
   Insn 5175: point = 293, n_alt = 0
   Insn 5174: point = 294, n_alt = 0
  BB 330
   Insn 5172: point = 295, n_alt = -1
   Insn 5171: point = 295, n_alt = 0
   Insn 5170: point = 296, n_alt = 0
  BB 329
   Insn 5167: point = 297, n_alt = 0
   Insn 5166: point = 297, n_alt = 3
   Insn 5165: point = 297, n_alt = 2
   Insn 5164: point = 297, n_alt = 2
   Insn 5163: point = 297, n_alt = 2
   Insn 5162: point = 297, n_alt = -2
   Insn 5161: point = 298, n_alt = -2
   Insn 5160: point = 299, n_alt = -2
   Insn 5159: point = 300, n_alt = 3
   Insn 5158: point = 301, n_alt = 3
   Insn 5157: point = 302, n_alt = 3
   Insn 5156: point = 303, n_alt = 0
   Insn 5155: point = 304, n_alt = 1
   Insn 5912: point = 305, n_alt = -2
	Hard reg 1 is preferable by r3034 with profit 1000
   Insn 5154: point = 307, n_alt = 0
   Insn 5911: point = 308, n_alt = -2
	Hard reg 1 is preferable by r3034 with profit 2000
   Insn 5153: point = 310, n_alt = 2
   Insn 5152: point = 311, n_alt = 2
   Insn 5151: point = 312, n_alt = 2
   Insn 5150: point = 313, n_alt = 0
   Insn 5149: point = 313, n_alt = 0
   Insn 5148: point = 313, n_alt = 3
   Insn 5147: point = 313, n_alt = 2
   Insn 5146: point = 313, n_alt = 2
   Insn 5145: point = 313, n_alt = 4
   Insn 5144: point = 313, n_alt = 4
   Insn 5143: point = 313, n_alt = -2
   Insn 5142: point = 314, n_alt = -2
   Insn 5141: point = 315, n_alt = 0
   Insn 5140: point = 315, n_alt = 0
   Insn 5139: point = 315, n_alt = 3
   Insn 5138: point = 316, n_alt = 3
  BB 328
   Insn 5136: point = 317, n_alt = -1
   Insn 5135: point = 317, n_alt = 0
   Insn 5134: point = 318, n_alt = 0
   Insn 5133: point = 319, n_alt = 0
   Insn 5132: point = 319, n_alt = 0
   Insn 5131: point = 319, n_alt = 3
   Insn 5130: point = 319, n_alt = 4
   Insn 5129: point = 319, n_alt = 4
   Insn 5128: point = 319, n_alt = 4
   Insn 5127: point = 319, n_alt = 4
   Insn 5126: point = 319, n_alt = 4
   Insn 5125: point = 319, n_alt = 4
   Insn 5124: point = 319, n_alt = 0
   Insn 5910: point = 320, n_alt = 4
   Insn 5123: point = 321, n_alt = 0
   Insn 5909: point = 322, n_alt = 4
   Insn 5122: point = 323, n_alt = 0
   Insn 5121: point = 323, n_alt = 0
   Insn 5120: point = 323, n_alt = 0
   Insn 5119: point = 323, n_alt = 0
   Insn 5118: point = 323, n_alt = 0
   Insn 5908: point = 324, n_alt = 4
   Insn 5117: point = 325, n_alt = 0
   Insn 5907: point = 326, n_alt = 4
   Insn 5116: point = 327, n_alt = 0
   Insn 5906: point = 328, n_alt = 4
   Insn 5115: point = 329, n_alt = 0
   Insn 5905: point = 330, n_alt = 4
   Insn 5114: point = 331, n_alt = 0
   Insn 5904: point = 332, n_alt = 4
   Insn 5113: point = 333, n_alt = 0
  BB 327
   Insn 5110: point = 333, n_alt = -1
   Insn 5109: point = 333, n_alt = 0
   Insn 5108: point = 334, n_alt = 0
  BB 326
   Insn 5106: point = 335, n_alt = -1
   Insn 5105: point = 335, n_alt = 0
   Insn 5104: point = 336, n_alt = 0
  BB 325
   Insn 5102: point = 337, n_alt = -1
   Insn 5101: point = 337, n_alt = 0
   Insn 5100: point = 338, n_alt = 0
  BB 324
   Insn 5097: point = 339, n_alt = 0
   Insn 5096: point = 339, n_alt = 3
   Insn 5095: point = 339, n_alt = 2
   Insn 5094: point = 339, n_alt = 2
   Insn 5093: point = 339, n_alt = -2
   Insn 5092: point = 340, n_alt = -2
   Insn 5091: point = 341, n_alt = -2
   Insn 5090: point = 342, n_alt = -2
   Insn 5089: point = 343, n_alt = 3
   Insn 5088: point = 344, n_alt = 3
   Insn 5087: point = 345, n_alt = 3
   Insn 5086: point = 346, n_alt = 3
   Insn 5085: point = 348, n_alt = 0
   Insn 5084: point = 350, n_alt = 0
   Insn 5083: point = 352, n_alt = -2
   Insn 5082: point = 354, n_alt = -2
   Insn 5081: point = 356, n_alt = 0
   Insn 5080: point = 358, n_alt = 0
   Insn 5079: point = 359, n_alt = -2
   Insn 5078: point = 361, n_alt = 0
   Insn 5077: point = 363, n_alt = -2
   Insn 5076: point = 364, n_alt = 3
   Insn 5075: point = 366, n_alt = 0
   Insn 5074: point = 368, n_alt = 0
   Insn 5073: point = 369, n_alt = 0
   Insn 5072: point = 370, n_alt = 1
   Insn 5903: point = 371, n_alt = -2
	Hard reg 1 is preferable by r3026 with profit 1000
   Insn 5071: point = 373, n_alt = 0
   Insn 5902: point = 374, n_alt = -2
	Hard reg 1 is preferable by r3026 with profit 2000
   Insn 5070: point = 376, n_alt = 2
   Insn 5069: point = 377, n_alt = 2
   Insn 5068: point = 378, n_alt = 2
   Insn 5067: point = 379, n_alt = 0
   Insn 5066: point = 379, n_alt = 0
   Insn 5065: point = 379, n_alt = 3
   Insn 5064: point = 379, n_alt = 2
   Insn 5063: point = 379, n_alt = 2
   Insn 5062: point = 379, n_alt = 4
   Insn 5061: point = 379, n_alt = 4
   Insn 5060: point = 379, n_alt = -2
   Insn 5059: point = 380, n_alt = -2
   Insn 5058: point = 381, n_alt = 0
   Insn 5057: point = 381, n_alt = 0
   Insn 5056: point = 381, n_alt = 3
   Insn 5055: point = 382, n_alt = 3
   Insn 5054: point = 383, n_alt = 0
   Insn 5053: point = 383, n_alt = 0
   Insn 5052: point = 383, n_alt = 3
   Insn 5051: point = 383, n_alt = 4
   Insn 5050: point = 383, n_alt = 4
   Insn 5049: point = 383, n_alt = 4
   Insn 5048: point = 383, n_alt = 4
   Insn 5047: point = 383, n_alt = 4
   Insn 5046: point = 383, n_alt = 4
   Insn 5045: point = 383, n_alt = 0
   Insn 5901: point = 384, n_alt = 4
   Insn 5044: point = 385, n_alt = 0
   Insn 5900: point = 386, n_alt = 4
  BB 397
   Insn 5799: point = 387, n_alt = -1
  BB 315
   Insn 4548: point = 387, n_alt = -1
   Insn 4547: point = 387, n_alt = 0
   Insn 4546: point = 388, n_alt = 0
   Insn 4545: point = 390, n_alt = 0
   Insn 4544: point = 391, n_alt = 0
  BB 323
   Insn 5681: point = 392, n_alt = -1
   Insn 5038: point = 392, n_alt = 1
  BB 398
   Insn 5802: point = 393, n_alt = -1
  BB 317
   Insn 4556: point = 394, n_alt = -1
   Insn 4555: point = 394, n_alt = 0
   Insn 4554: point = 395, n_alt = 0
   Insn 4553: point = 397, n_alt = 0
   Insn 4552: point = 398, n_alt = 0
  BB 322
   Insn 5679: point = 399, n_alt = -1
   Insn 5032: point = 399, n_alt = 1
   Insn 5031: point = 399, n_alt = 8
   Insn 5030: point = 400, n_alt = 4
   Insn 5029: point = 401, n_alt = 1
   Insn 5028: point = 403, n_alt = 3
   Insn 5027: point = 405, n_alt = 0
   Insn 5026: point = 407, n_alt = 0
   Insn 5025: point = 409, n_alt = 0
   Insn 5024: point = 410, n_alt = 0
   Insn 5023: point = 412, n_alt = 0
   Insn 5022: point = 414, n_alt = 0
   Insn 5021: point = 415, n_alt = 7
   Insn 5020: point = 417, n_alt = 4
   Insn 5019: point = 418, n_alt = 1
   Insn 5018: point = 420, n_alt = 7
   Insn 5017: point = 422, n_alt = 0
   Insn 5016: point = 424, n_alt = 4
   Insn 5015: point = 425, n_alt = 3
   Insn 5014: point = 427, n_alt = 0
   Insn 5013: point = 429, n_alt = 0
   Insn 5012: point = 431, n_alt = 0
   Insn 5011: point = 433, n_alt = 4
   Insn 5010: point = 434, n_alt = 3
   Insn 5009: point = 436, n_alt = 0
   Insn 5008: point = 438, n_alt = 0
   Insn 5007: point = 440, n_alt = 0
   Insn 5006: point = 441, n_alt = 0
   Insn 5005: point = 443, n_alt = 0
   Insn 5004: point = 445, n_alt = 0
   Insn 5003: point = 446, n_alt = 7
   Insn 5002: point = 448, n_alt = 0
   Insn 5001: point = 450, n_alt = 4
   Insn 5000: point = 451, n_alt = 3
   Insn 4999: point = 453, n_alt = 0
   Insn 4998: point = 455, n_alt = 0
   Insn 4997: point = 457, n_alt = 0
   Insn 4996: point = 458, n_alt = 0
   Insn 4995: point = 460, n_alt = 0
   Insn 4994: point = 462, n_alt = 0
   Insn 4993: point = 463, n_alt = 8
   Insn 4992: point = 464, n_alt = 4
   Insn 4991: point = 465, n_alt = 1
   Insn 4990: point = 467, n_alt = 3
   Insn 4989: point = 469, n_alt = 0
   Insn 4988: point = 471, n_alt = 0
   Insn 4987: point = 473, n_alt = 0
   Insn 4986: point = 474, n_alt = 0
   Insn 4985: point = 476, n_alt = 0
   Insn 4984: point = 478, n_alt = 0
   Insn 4983: point = 479, n_alt = 7
   Insn 4982: point = 481, n_alt = 4
   Insn 4981: point = 482, n_alt = 3
   Insn 4980: point = 484, n_alt = 0
   Insn 4979: point = 486, n_alt = 0
   Insn 4978: point = 488, n_alt = 0
   Insn 4977: point = 489, n_alt = 0
   Insn 4976: point = 491, n_alt = 0
   Insn 4975: point = 493, n_alt = 0
   Insn 4974: point = 495, n_alt = 0
   Insn 4973: point = 496, n_alt = 1
   Insn 4972: point = 498, n_alt = 0
   Insn 4971: point = 500, n_alt = 0
   Insn 4970: point = 501, n_alt = 7
   Insn 4969: point = 503, n_alt = 4
   Insn 4968: point = 504, n_alt = 3
   Insn 4967: point = 506, n_alt = 0
   Insn 4966: point = 508, n_alt = 0
   Insn 4965: point = 510, n_alt = 0
   Insn 4964: point = 511, n_alt = 0
   Insn 4963: point = 513, n_alt = 0
   Insn 4962: point = 515, n_alt = 0
   Insn 4961: point = 517, n_alt = 0
   Insn 4960: point = 518, n_alt = 1
   Insn 4959: point = 520, n_alt = 0
   Insn 4958: point = 522, n_alt = 0
   Insn 4957: point = 523, n_alt = 8
   Insn 4956: point = 524, n_alt = 4
   Insn 4955: point = 525, n_alt = 1
   Insn 4954: point = 527, n_alt = 3
   Insn 4953: point = 529, n_alt = 0
   Insn 4952: point = 531, n_alt = 0
   Insn 4951: point = 533, n_alt = 0
   Insn 4950: point = 534, n_alt = 0
   Insn 4949: point = 536, n_alt = 0
   Insn 4948: point = 538, n_alt = 0
   Insn 4947: point = 539, n_alt = 7
   Insn 4946: point = 541, n_alt = 4
   Insn 4945: point = 542, n_alt = 3
   Insn 4944: point = 544, n_alt = 0
   Insn 4943: point = 546, n_alt = 0
   Insn 4942: point = 548, n_alt = 0
   Insn 4941: point = 549, n_alt = 0
   Insn 4940: point = 551, n_alt = 0
   Insn 4939: point = 553, n_alt = 0
   Insn 4938: point = 555, n_alt = 0
   Insn 4937: point = 556, n_alt = 1
   Insn 4936: point = 558, n_alt = 0
   Insn 4935: point = 560, n_alt = 0
   Insn 4934: point = 561, n_alt = -2
   Insn 4933: point = 563, n_alt = 2
   Insn 4932: point = 565, n_alt = 7
   Insn 4931: point = 566, n_alt = 7
   Insn 4930: point = 568, n_alt = 4
   Insn 4929: point = 569, n_alt = 3
   Insn 4928: point = 571, n_alt = 0
   Insn 4927: point = 573, n_alt = 0
   Insn 4926: point = 575, n_alt = 0
   Insn 4925: point = 576, n_alt = 0
   Insn 4924: point = 578, n_alt = 0
   Insn 4923: point = 580, n_alt = 0
   Insn 4922: point = 582, n_alt = 0
   Insn 4921: point = 583, n_alt = 1
   Insn 4920: point = 585, n_alt = 0
   Insn 4919: point = 587, n_alt = 0
   Insn 4918: point = 588, n_alt = 8
   Insn 4917: point = 589, n_alt = 4
   Insn 4916: point = 590, n_alt = 7
   Insn 4915: point = 592, n_alt = 0
   Insn 4914: point = 594, n_alt = 4
   Insn 4913: point = 595, n_alt = 3
   Insn 4912: point = 597, n_alt = 0
   Insn 4911: point = 599, n_alt = 0
   Insn 4910: point = 601, n_alt = 0
   Insn 4909: point = 602, n_alt = 0
   Insn 4908: point = 604, n_alt = 0
   Insn 4907: point = 606, n_alt = 0
   Insn 4906: point = 607, n_alt = 3
   Insn 4905: point = 609, n_alt = 0
   Insn 4904: point = 611, n_alt = 0
   Insn 4903: point = 613, n_alt = 0
   Insn 4902: point = 614, n_alt = 0
   Insn 4901: point = 616, n_alt = 0
   Insn 4900: point = 618, n_alt = 0
   Insn 4899: point = 620, n_alt = 0
   Insn 4898: point = 621, n_alt = 1
   Insn 4897: point = 623, n_alt = 0
   Insn 4896: point = 625, n_alt = 0
   Insn 4895: point = 626, n_alt = 8
   Insn 4894: point = 627, n_alt = 4
   Insn 4893: point = 628, n_alt = 7
   Insn 4892: point = 630, n_alt = 0
   Insn 4891: point = 632, n_alt = 4
   Insn 4890: point = 633, n_alt = 3
   Insn 4889: point = 635, n_alt = 0
   Insn 4888: point = 637, n_alt = 0
   Insn 4887: point = 639, n_alt = 0
   Insn 4886: point = 640, n_alt = 0
   Insn 4885: point = 642, n_alt = 0
   Insn 4884: point = 644, n_alt = 0
   Insn 4883: point = 645, n_alt = 3
   Insn 4882: point = 647, n_alt = 0
   Insn 4881: point = 649, n_alt = 0
   Insn 4880: point = 651, n_alt = 0
   Insn 4879: point = 652, n_alt = 0
   Insn 4878: point = 654, n_alt = 0
   Insn 4877: point = 656, n_alt = 0
   Insn 4876: point = 658, n_alt = 0
   Insn 4875: point = 659, n_alt = 1
   Insn 4874: point = 661, n_alt = 0
   Insn 4873: point = 663, n_alt = 0
   Insn 4872: point = 664, n_alt = 1
   Insn 4871: point = 665, n_alt = 0
   Insn 4870: point = 667, n_alt = 0
   Insn 4869: point = 669, n_alt = 4
   Insn 4868: point = 670, n_alt = 3
   Insn 4867: point = 672, n_alt = 0
   Insn 4866: point = 674, n_alt = 0
   Insn 4865: point = 676, n_alt = 0
   Insn 4864: point = 677, n_alt = 0
   Insn 4863: point = 679, n_alt = 0
   Insn 4862: point = 681, n_alt = 0
  BB 320
   Insn 5677: point = 683, n_alt = -1
   Insn 4597: point = 683, n_alt = 8
   Insn 4596: point = 684, n_alt = 7
   Insn 4595: point = 685, n_alt = 4
   Insn 4594: point = 686, n_alt = 3
   Insn 4593: point = 688, n_alt = 0
   Insn 4592: point = 690, n_alt = 0
   Insn 4591: point = 692, n_alt = 0
   Insn 4590: point = 693, n_alt = 0
   Insn 4589: point = 695, n_alt = 0
   Insn 4588: point = 697, n_alt = 0
   Insn 4587: point = 698, n_alt = 8
   Insn 4586: point = 699, n_alt = 7
   Insn 4585: point = 700, n_alt = 4
   Insn 4584: point = 701, n_alt = 3
   Insn 4583: point = 703, n_alt = 0
   Insn 4582: point = 705, n_alt = 0
   Insn 4581: point = 707, n_alt = 0
   Insn 4580: point = 708, n_alt = 0
   Insn 4579: point = 710, n_alt = 0
   Insn 4578: point = 712, n_alt = 0
  BB 321
   Insn 4859: point = 714, n_alt = 8
   Insn 4858: point = 715, n_alt = 4
   Insn 4857: point = 716, n_alt = 1
   Insn 4856: point = 718, n_alt = 3
   Insn 4855: point = 720, n_alt = 0
   Insn 4854: point = 722, n_alt = 0
   Insn 4853: point = 724, n_alt = 0
   Insn 4852: point = 725, n_alt = 0
   Insn 4851: point = 727, n_alt = 0
   Insn 4850: point = 729, n_alt = 0
   Insn 4849: point = 730, n_alt = 1
   Insn 4848: point = 732, n_alt = 1
   Insn 4847: point = 734, n_alt = 7
   Insn 4846: point = 735, n_alt = 7
   Insn 4845: point = 736, n_alt = 4
   Insn 4844: point = 737, n_alt = 9
   Insn 4843: point = 738, n_alt = 0
   Insn 4842: point = 738, n_alt = -2
   Insn 4841: point = 739, n_alt = 7
   Insn 4840: point = 739, n_alt = 7
   Insn 4839: point = 740, n_alt = 4
   Insn 4838: point = 741, n_alt = 9
   Insn 4837: point = 742, n_alt = 0
   Insn 4836: point = 742, n_alt = -2
   Insn 4835: point = 743, n_alt = 7
   Insn 4834: point = 743, n_alt = -2
   Insn 4833: point = 745, n_alt = 2
   Insn 4832: point = 747, n_alt = -2
   Insn 4831: point = 749, n_alt = 1
   Insn 4830: point = 751, n_alt = 7
   Insn 4829: point = 753, n_alt = 4
   Insn 4828: point = 754, n_alt = 1
   Insn 4827: point = 756, n_alt = 7
   Insn 4826: point = 758, n_alt = 0
   Insn 4825: point = 760, n_alt = 4
   Insn 4824: point = 761, n_alt = 3
   Insn 4823: point = 763, n_alt = 0
   Insn 4822: point = 765, n_alt = 0
   Insn 4821: point = 767, n_alt = 0
   Insn 4820: point = 769, n_alt = 4
   Insn 4819: point = 770, n_alt = 3
   Insn 4818: point = 772, n_alt = 0
   Insn 4817: point = 774, n_alt = 0
   Insn 4816: point = 776, n_alt = 0
   Insn 4815: point = 777, n_alt = 0
   Insn 4814: point = 779, n_alt = 0
   Insn 4813: point = 781, n_alt = 0
   Insn 4812: point = 782, n_alt = 7
   Insn 4811: point = 784, n_alt = 0
   Insn 4810: point = 786, n_alt = 4
   Insn 4809: point = 787, n_alt = 3
   Insn 4808: point = 789, n_alt = 0
   Insn 4807: point = 791, n_alt = 0
   Insn 4806: point = 793, n_alt = 0
   Insn 4805: point = 794, n_alt = 0
   Insn 4804: point = 796, n_alt = 0
   Insn 4803: point = 798, n_alt = 0
   Insn 4802: point = 799, n_alt = 7
   Insn 4801: point = 801, n_alt = 0
   Insn 4800: point = 803, n_alt = 4
   Insn 4799: point = 804, n_alt = 3
   Insn 4798: point = 806, n_alt = 0
   Insn 4797: point = 808, n_alt = 0
   Insn 4796: point = 810, n_alt = 0
   Insn 4795: point = 811, n_alt = 0
   Insn 4794: point = 813, n_alt = 0
   Insn 4793: point = 815, n_alt = 0
   Insn 4792: point = 817, n_alt = 0
   Insn 4791: point = 818, n_alt = 1
   Insn 4790: point = 820, n_alt = 0
   Insn 4789: point = 822, n_alt = 0
   Insn 4788: point = 823, n_alt = 4
   Insn 4787: point = 824, n_alt = 9
   Insn 4786: point = 825, n_alt = 0
   Insn 4785: point = 825, n_alt = -2
   Insn 4784: point = 826, n_alt = 7
   Insn 4783: point = 826, n_alt = -2
   Insn 4782: point = 828, n_alt = 2
   Insn 4781: point = 830, n_alt = 7
   Insn 4780: point = 832, n_alt = 0
   Insn 4779: point = 834, n_alt = 4
   Insn 4778: point = 835, n_alt = 3
   Insn 4777: point = 837, n_alt = 0
   Insn 4776: point = 839, n_alt = 0
   Insn 4775: point = 841, n_alt = 0
   Insn 4774: point = 842, n_alt = 0
   Insn 4773: point = 844, n_alt = 0
   Insn 4772: point = 846, n_alt = 0
   Insn 4771: point = 847, n_alt = 7
   Insn 4770: point = 849, n_alt = 0
   Insn 4769: point = 851, n_alt = 4
   Insn 4768: point = 852, n_alt = 3
   Insn 4767: point = 854, n_alt = 0
   Insn 4766: point = 856, n_alt = 0
   Insn 4765: point = 858, n_alt = 0
   Insn 4764: point = 859, n_alt = 0
   Insn 4763: point = 861, n_alt = 0
   Insn 4762: point = 863, n_alt = 0
   Insn 4761: point = 864, n_alt = 8
   Insn 4760: point = 865, n_alt = 4
   Insn 4759: point = 866, n_alt = 1
   Insn 4758: point = 868, n_alt = 3
   Insn 4757: point = 870, n_alt = 0
   Insn 4756: point = 872, n_alt = 0
   Insn 4755: point = 874, n_alt = 0
   Insn 4754: point = 875, n_alt = 0
   Insn 4753: point = 877, n_alt = 0
   Insn 4752: point = 879, n_alt = 0
   Insn 4751: point = 880, n_alt = 1
   Insn 4750: point = 882, n_alt = 1
   Insn 4749: point = 884, n_alt = 7
   Insn 4748: point = 885, n_alt = 7
   Insn 4747: point = 886, n_alt = 4
   Insn 4746: point = 887, n_alt = 9
   Insn 4745: point = 888, n_alt = 0
   Insn 4744: point = 888, n_alt = -2
   Insn 4743: point = 889, n_alt = 7
   Insn 4742: point = 889, n_alt = 7
   Insn 4741: point = 890, n_alt = 4
   Insn 4740: point = 891, n_alt = 9
   Insn 4739: point = 892, n_alt = 0
   Insn 4738: point = 892, n_alt = -2
   Insn 4737: point = 893, n_alt = 7
   Insn 4736: point = 893, n_alt = -2
   Insn 4735: point = 895, n_alt = 2
   Insn 4734: point = 897, n_alt = -2
   Insn 4733: point = 899, n_alt = 1
   Insn 4732: point = 901, n_alt = 7
   Insn 4731: point = 903, n_alt = 4
   Insn 4730: point = 904, n_alt = 1
   Insn 4729: point = 906, n_alt = 7
   Insn 4728: point = 908, n_alt = 0
   Insn 4727: point = 910, n_alt = 4
   Insn 4726: point = 911, n_alt = 3
   Insn 4725: point = 913, n_alt = 0
   Insn 4724: point = 915, n_alt = 0
   Insn 4723: point = 917, n_alt = 0
   Insn 4722: point = 919, n_alt = 4
   Insn 4721: point = 920, n_alt = 3
   Insn 4720: point = 922, n_alt = 0
   Insn 4719: point = 924, n_alt = 0
   Insn 4718: point = 926, n_alt = 0
   Insn 4717: point = 927, n_alt = 0
   Insn 4716: point = 929, n_alt = 0
   Insn 4715: point = 931, n_alt = 0
   Insn 4714: point = 932, n_alt = 7
   Insn 4713: point = 934, n_alt = 0
   Insn 4712: point = 936, n_alt = 4
   Insn 4711: point = 937, n_alt = 3
   Insn 4710: point = 939, n_alt = 0
   Insn 4709: point = 941, n_alt = 0
   Insn 4708: point = 943, n_alt = 0
   Insn 4707: point = 944, n_alt = 0
   Insn 4706: point = 946, n_alt = 0
   Insn 4705: point = 948, n_alt = 0
   Insn 4704: point = 949, n_alt = 7
   Insn 4703: point = 951, n_alt = 0
   Insn 4702: point = 953, n_alt = 4
   Insn 4701: point = 954, n_alt = 3
   Insn 4700: point = 956, n_alt = 0
   Insn 4699: point = 958, n_alt = 0
   Insn 4698: point = 960, n_alt = 0
   Insn 4697: point = 961, n_alt = 0
   Insn 4696: point = 963, n_alt = 0
   Insn 4695: point = 965, n_alt = 0
   Insn 4694: point = 967, n_alt = 0
   Insn 4693: point = 968, n_alt = 1
   Insn 4692: point = 970, n_alt = 0
   Insn 4691: point = 972, n_alt = 0
   Insn 4690: point = 973, n_alt = 4
   Insn 4689: point = 974, n_alt = 9
   Insn 4688: point = 975, n_alt = 0
   Insn 4687: point = 975, n_alt = -2
   Insn 4686: point = 976, n_alt = 7
   Insn 4685: point = 976, n_alt = -2
   Insn 4684: point = 978, n_alt = 2
   Insn 4683: point = 980, n_alt = 7
   Insn 4682: point = 982, n_alt = 0
   Insn 4681: point = 984, n_alt = 4
   Insn 4680: point = 985, n_alt = 3
   Insn 4679: point = 987, n_alt = 0
   Insn 4678: point = 989, n_alt = 0
   Insn 4677: point = 991, n_alt = 0
   Insn 4676: point = 992, n_alt = 0
   Insn 4675: point = 994, n_alt = 0
   Insn 4674: point = 996, n_alt = 0
   Insn 4673: point = 997, n_alt = 7
   Insn 4672: point = 999, n_alt = 0
   Insn 4671: point = 1001, n_alt = 4
   Insn 4670: point = 1002, n_alt = 3
   Insn 4669: point = 1004, n_alt = 0
   Insn 4668: point = 1006, n_alt = 0
   Insn 4667: point = 1008, n_alt = 0
   Insn 4666: point = 1009, n_alt = 0
   Insn 4665: point = 1011, n_alt = 0
   Insn 4664: point = 1013, n_alt = 0
   Insn 4663: point = 1014, n_alt = 8
   Insn 4662: point = 1015, n_alt = 1
   Insn 4661: point = 1017, n_alt = 7
   Insn 4660: point = 1018, n_alt = 1
   Insn 4659: point = 1020, n_alt = 7
   Insn 4658: point = 1022, n_alt = 0
   Insn 4657: point = 1024, n_alt = 4
   Insn 4656: point = 1025, n_alt = 3
   Insn 4655: point = 1027, n_alt = 0
   Insn 4654: point = 1029, n_alt = 0
   Insn 4653: point = 1031, n_alt = 0
   Insn 4652: point = 1032, n_alt = 0
   Insn 4651: point = 1034, n_alt = 0
   Insn 4650: point = 1036, n_alt = 0
   Insn 4649: point = 1037, n_alt = -2
   Insn 4648: point = 1039, n_alt = 2
   Insn 4647: point = 1041, n_alt = 7
   Insn 4646: point = 1042, n_alt = 7
   Insn 4645: point = 1044, n_alt = 0
   Insn 4644: point = 1046, n_alt = 4
   Insn 4643: point = 1047, n_alt = 3
   Insn 4642: point = 1049, n_alt = 0
   Insn 4641: point = 1051, n_alt = 0
   Insn 4640: point = 1053, n_alt = 0
   Insn 4639: point = 1054, n_alt = 0
   Insn 4638: point = 1056, n_alt = 0
   Insn 4637: point = 1058, n_alt = 0
   Insn 4636: point = 1059, n_alt = 8
   Insn 4635: point = 1060, n_alt = 1
   Insn 4634: point = 1062, n_alt = 7
   Insn 4633: point = 1063, n_alt = 1
   Insn 4632: point = 1065, n_alt = 7
   Insn 4631: point = 1067, n_alt = 0
   Insn 4630: point = 1069, n_alt = 4
   Insn 4629: point = 1070, n_alt = 3
   Insn 4628: point = 1072, n_alt = 0
   Insn 4627: point = 1074, n_alt = 0
   Insn 4626: point = 1076, n_alt = 0
   Insn 4625: point = 1077, n_alt = 0
   Insn 4624: point = 1079, n_alt = 0
   Insn 4623: point = 1081, n_alt = 0
   Insn 4622: point = 1082, n_alt = 7
   Insn 4621: point = 1084, n_alt = 0
   Insn 4620: point = 1086, n_alt = 4
   Insn 4619: point = 1087, n_alt = 3
   Insn 4618: point = 1089, n_alt = 0
   Insn 4617: point = 1091, n_alt = 0
   Insn 4616: point = 1093, n_alt = 0
   Insn 4615: point = 1094, n_alt = 0
   Insn 4614: point = 1096, n_alt = 0
   Insn 4613: point = 1098, n_alt = 0
   Insn 4612: point = 1099, n_alt = 1
   Insn 4611: point = 1100, n_alt = 0
   Insn 4610: point = 1102, n_alt = 0
   Insn 4609: point = 1104, n_alt = 4
   Insn 4608: point = 1105, n_alt = 3
   Insn 4607: point = 1107, n_alt = 0
   Insn 4606: point = 1109, n_alt = 0
   Insn 4605: point = 1111, n_alt = 0
   Insn 4604: point = 1112, n_alt = 0
   Insn 4603: point = 1114, n_alt = 0
   Insn 4602: point = 1116, n_alt = 0
  BB 319
   Insn 4573: point = 1118, n_alt = -1
   Insn 4572: point = 1118, n_alt = 1
   Insn 4571: point = 1119, n_alt = 7
  BB 318
   Insn 4570: point = 1121, n_alt = -1
   Insn 4569: point = 1121, n_alt = 1
   Insn 4568: point = 1122, n_alt = 7
   Insn 4567: point = 1123, n_alt = 7
   Insn 4566: point = 1125, n_alt = 0
   Insn 4565: point = 1127, n_alt = 4
   Insn 4564: point = 1128, n_alt = 3
   Insn 4563: point = 1130, n_alt = 0
   Insn 4562: point = 1132, n_alt = 0
   Insn 4561: point = 1134, n_alt = 0
   Insn 4560: point = 1135, n_alt = 0
   Insn 4559: point = 1137, n_alt = 0
   Insn 4558: point = 1139, n_alt = 0
  BB 316
   Insn 4550: point = 1141, n_alt = 1
  BB 314
   Insn 4542: point = 1142, n_alt = 1
   Insn 4541: point = 1143, n_alt = 0
   Insn 4540: point = 1144, n_alt = 0
   Insn 4539: point = 1145, n_alt = 8
   Insn 4538: point = 1146, n_alt = 2
   Insn 4537: point = 1148, n_alt = 7
   Insn 4536: point = 1149, n_alt = -2
   Insn 4535: point = 1151, n_alt = 1
   Insn 4534: point = 1153, n_alt = 7
   Insn 4533: point = 1154, n_alt = 1
   Insn 4532: point = 1156, n_alt = 0
  BB 313
   Insn 4530: point = 1157, n_alt = -1
   Insn 4529: point = 1157, n_alt = 0
   Insn 4528: point = 1158, n_alt = 0
  BB 373
   Insn 5727: point = 1159, n_alt = -1
  BB 108
   Insn 1372: point = 1159, n_alt = -1
   Insn 1371: point = 1159, n_alt = 0
   Insn 1370: point = 1160, n_alt = 0
   Insn 1369: point = 1162, n_alt = 0
   Insn 1368: point = 1163, n_alt = 0
   Insn 1367: point = 1164, n_alt = 0
  BB 312
   Insn 5675: point = 1165, n_alt = -1
   Insn 4522: point = 1165, n_alt = 1
   Insn 4521: point = 1166, n_alt = 0
   Insn 4520: point = 1168, n_alt = 0
  BB 311
   Insn 4517: point = 1169, n_alt = 0
   Insn 4516: point = 1169, n_alt = 3
   Insn 4515: point = 1169, n_alt = 2
   Insn 4514: point = 1169, n_alt = 2
   Insn 4513: point = 1169, n_alt = -2
   Insn 4512: point = 1170, n_alt = -2
   Insn 4511: point = 1171, n_alt = -2
   Insn 4510: point = 1172, n_alt = -2
   Insn 4509: point = 1173, n_alt = 3
   Insn 4508: point = 1174, n_alt = 3
   Insn 4507: point = 1175, n_alt = 3
   Insn 4506: point = 1176, n_alt = 3
  BB 310
   Insn 4503: point = 1177, n_alt = 1
  BB 309
   Insn 4501: point = 1177, n_alt = -1
   Insn 4500: point = 1177, n_alt = 0
   Insn 4499: point = 1178, n_alt = 0
   Insn 4498: point = 1179, n_alt = 1
   Insn 4497: point = 1180, n_alt = 0
  BB 308
   Insn 4494: point = 1181, n_alt = 1
  BB 307
   Insn 4492: point = 1181, n_alt = -1
   Insn 4491: point = 1181, n_alt = 0
   Insn 4490: point = 1182, n_alt = 0
  BB 305
   Insn 5673: point = 1183, n_alt = -1
   Insn 4480: point = 1183, n_alt = 1
   Insn 4479: point = 1184, n_alt = 1
   Insn 4478: point = 1186, n_alt = 0
  BB 306
   Insn 4487: point = 1187, n_alt = 1
   Insn 4486: point = 1188, n_alt = 1
   Insn 4485: point = 1190, n_alt = 0
  BB 304
   Insn 4476: point = 1191, n_alt = -1
   Insn 4475: point = 1191, n_alt = 1
   Insn 4474: point = 1191, n_alt = 1
   Insn 4473: point = 1191, n_alt = 1
   Insn 4472: point = 1192, n_alt = 0
   Insn 4471: point = 1193, n_alt = 1
   Insn 4470: point = 1194, n_alt = 0
   Insn 4469: point = 1196, n_alt = 0
   Insn 4468: point = 1197, n_alt = 1
   Insn 4467: point = 1198, n_alt = 0
   Insn 4466: point = 1200, n_alt = 7
   Insn 4465: point = 1201, n_alt = 1
   Insn 4464: point = 1202, n_alt = 0
   Insn 4463: point = 1203, n_alt = 0
   Insn 4462: point = 1204, n_alt = 1
   Insn 5899: point = 1205, n_alt = -2
	Hard reg 1 is preferable by r3023 with profit 1000
   Insn 4461: point = 1207, n_alt = 0
   Insn 5898: point = 1208, n_alt = -2
	Hard reg 1 is preferable by r3023 with profit 2000
   Insn 4460: point = 1210, n_alt = 2
   Insn 4459: point = 1211, n_alt = 2
   Insn 4458: point = 1212, n_alt = 2
   Insn 4457: point = 1213, n_alt = 0
   Insn 4456: point = 1213, n_alt = 0
   Insn 4455: point = 1213, n_alt = 3
   Insn 4454: point = 1213, n_alt = 2
   Insn 4453: point = 1213, n_alt = 2
   Insn 4452: point = 1213, n_alt = 4
   Insn 4451: point = 1213, n_alt = 4
   Insn 4450: point = 1213, n_alt = -2
   Insn 4449: point = 1214, n_alt = -2
   Insn 4448: point = 1215, n_alt = 0
   Insn 4447: point = 1215, n_alt = 0
   Insn 4446: point = 1215, n_alt = 3
   Insn 4445: point = 1216, n_alt = 3
  BB 395
   Insn 5793: point = 1217, n_alt = -1
  BB 299
   Insn 4404: point = 1217, n_alt = -1
   Insn 4403: point = 1217, n_alt = 0
   Insn 4402: point = 1218, n_alt = 0
   Insn 4401: point = 1220, n_alt = 0
   Insn 4400: point = 1221, n_alt = 0
  BB 303
   Insn 5671: point = 1222, n_alt = -1
   Insn 4439: point = 1222, n_alt = 1
  BB 396
   Insn 5796: point = 1223, n_alt = -1
  BB 301
   Insn 4412: point = 1224, n_alt = -1
   Insn 4411: point = 1224, n_alt = 0
   Insn 4410: point = 1225, n_alt = 0
   Insn 4409: point = 1227, n_alt = 0
   Insn 4408: point = 1228, n_alt = 0
  BB 302
   Insn 5669: point = 1229, n_alt = -1
   Insn 4433: point = 1229, n_alt = 1
   Insn 4432: point = 1229, n_alt = 8
   Insn 4431: point = 1230, n_alt = 4
   Insn 4430: point = 1231, n_alt = 1
   Insn 4429: point = 1233, n_alt = 3
   Insn 4428: point = 1235, n_alt = 0
   Insn 4427: point = 1237, n_alt = 1
   Insn 4426: point = 1239, n_alt = 0
   Insn 4425: point = 1240, n_alt = 0
   Insn 4424: point = 1242, n_alt = 1
   Insn 4423: point = 1244, n_alt = 0
   Insn 4422: point = 1245, n_alt = 7
   Insn 4421: point = 1247, n_alt = 4
   Insn 4420: point = 1248, n_alt = 3
   Insn 4419: point = 1250, n_alt = 0
   Insn 4418: point = 1252, n_alt = 1
   Insn 4417: point = 1254, n_alt = 0
   Insn 4416: point = 1255, n_alt = 0
   Insn 4415: point = 1257, n_alt = 1
   Insn 4414: point = 1259, n_alt = 0
  BB 300
   Insn 4406: point = 1261, n_alt = 1
  BB 298
   Insn 4398: point = 1262, n_alt = 1
   Insn 4397: point = 1263, n_alt = 0
   Insn 4396: point = 1264, n_alt = 0
  BB 296
   Insn 5667: point = 1265, n_alt = -1
   Insn 4387: point = 1265, n_alt = 8
   Insn 4386: point = 1266, n_alt = 2
   Insn 4385: point = 1268, n_alt = 7
   Insn 4384: point = 1269, n_alt = 7
  BB 297
   Insn 4393: point = 1270, n_alt = 8
   Insn 4392: point = 1271, n_alt = 7
  BB 295
   Insn 4379: point = 1272, n_alt = -1
   Insn 4378: point = 1272, n_alt = 1
   Insn 4377: point = 1273, n_alt = 7
   Insn 4376: point = 1274, n_alt = 7
   Insn 4375: point = 1275, n_alt = 1
   Insn 4374: point = 1276, n_alt = 0
   Insn 4373: point = 1278, n_alt = 0
   Insn 4372: point = 1280, n_alt = 0
   Insn 4371: point = 1282, n_alt = 0
   Insn 4370: point = 1284, n_alt = 0
   Insn 4369: point = 1286, n_alt = 0
   Insn 4368: point = 1287, n_alt = -2
   Insn 4367: point = 1289, n_alt = -2
   Insn 4366: point = 1291, n_alt = 0
   Insn 4365: point = 1293, n_alt = 0
   Insn 4364: point = 1294, n_alt = -2
   Insn 4363: point = 1296, n_alt = 0
   Insn 4362: point = 1298, n_alt = -2
   Insn 4361: point = 1299, n_alt = 1
   Insn 4360: point = 1301, n_alt = 0
   Insn 4359: point = 1302, n_alt = 1
   Insn 4358: point = 1303, n_alt = 0
   Insn 4357: point = 1305, n_alt = 0
   Insn 4356: point = 1306, n_alt = 0
   Insn 4355: point = 1306, n_alt = 0
   Insn 4354: point = 1306, n_alt = 3
   Insn 4353: point = 1306, n_alt = 4
   Insn 4352: point = 1306, n_alt = 2
   Insn 4351: point = 1306, n_alt = 2
   Insn 4350: point = 1306, n_alt = 2
   Insn 4349: point = 1306, n_alt = -2
   Insn 4348: point = 1307, n_alt = -2
   Insn 4347: point = 1308, n_alt = 0
   Insn 4346: point = 1308, n_alt = 0
   Insn 4345: point = 1308, n_alt = 3
   Insn 4344: point = 1309, n_alt = 3
   Insn 4343: point = 1310, n_alt = 1
   Insn 4342: point = 1311, n_alt = 0
   Insn 4341: point = 1313, n_alt = 0
   Insn 4340: point = 1315, n_alt = 0
   Insn 4339: point = 1315, n_alt = -2
   Insn 4338: point = 1316, n_alt = 3
   Insn 4337: point = 1318, n_alt = 0
  BB 294
   Insn 4335: point = 1319, n_alt = -1
   Insn 4334: point = 1319, n_alt = 0
   Insn 4333: point = 1320, n_alt = 0
   Insn 4332: point = 1322, n_alt = 0
   Insn 4331: point = 1324, n_alt = 0
   Insn 4330: point = 1326, n_alt = 0
   Insn 4329: point = 1328, n_alt = 0
   Insn 4328: point = 1330, n_alt = 0
   Insn 4327: point = 1331, n_alt = -2
   Insn 4326: point = 1333, n_alt = -2
   Insn 4325: point = 1335, n_alt = 0
   Insn 4324: point = 1337, n_alt = 0
   Insn 4323: point = 1338, n_alt = -2
   Insn 4322: point = 1340, n_alt = 0
   Insn 4321: point = 1342, n_alt = -2
   Insn 4320: point = 1343, n_alt = 1
   Insn 4319: point = 1345, n_alt = 0
  BB 293
   Insn 4317: point = 1346, n_alt = -1
   Insn 4316: point = 1346, n_alt = 0
   Insn 4315: point = 1347, n_alt = 0
  BB 292
   Insn 4312: point = 1348, n_alt = 0
   Insn 4311: point = 1348, n_alt = 3
   Insn 4310: point = 1348, n_alt = 2
   Insn 4309: point = 1348, n_alt = 2
   Insn 4308: point = 1348, n_alt = -2
   Insn 4307: point = 1349, n_alt = -2
   Insn 4306: point = 1350, n_alt = -2
   Insn 4305: point = 1351, n_alt = -2
   Insn 4304: point = 1352, n_alt = 3
   Insn 4303: point = 1353, n_alt = 3
   Insn 4302: point = 1354, n_alt = 3
   Insn 4301: point = 1355, n_alt = 3
  BB 291
   Insn 4298: point = 1356, n_alt = 1
  BB 290
   Insn 4296: point = 1356, n_alt = -1
   Insn 4295: point = 1356, n_alt = 0
   Insn 4294: point = 1357, n_alt = 0
   Insn 4293: point = 1358, n_alt = 1
   Insn 4292: point = 1359, n_alt = 0
  BB 289
   Insn 4289: point = 1360, n_alt = 1
  BB 288
   Insn 4287: point = 1360, n_alt = -1
   Insn 4286: point = 1360, n_alt = 0
   Insn 4285: point = 1361, n_alt = 0
  BB 286
   Insn 5664: point = 1362, n_alt = -1
   Insn 4275: point = 1362, n_alt = 1
   Insn 4274: point = 1363, n_alt = 1
   Insn 4273: point = 1365, n_alt = 0
  BB 287
   Insn 4282: point = 1366, n_alt = 1
   Insn 4281: point = 1367, n_alt = 1
   Insn 4280: point = 1369, n_alt = 0
  BB 285
   Insn 4271: point = 1370, n_alt = -1
   Insn 4270: point = 1370, n_alt = 1
   Insn 4269: point = 1370, n_alt = 1
   Insn 4268: point = 1370, n_alt = 1
   Insn 4267: point = 1371, n_alt = 0
   Insn 4266: point = 1372, n_alt = 1
   Insn 4265: point = 1373, n_alt = 0
   Insn 4264: point = 1375, n_alt = 0
   Insn 4263: point = 1376, n_alt = 1
   Insn 4262: point = 1377, n_alt = 0
   Insn 4261: point = 1379, n_alt = 7
   Insn 4260: point = 1380, n_alt = 1
   Insn 4259: point = 1381, n_alt = 0
   Insn 4258: point = 1382, n_alt = 0
   Insn 4257: point = 1383, n_alt = 1
   Insn 5897: point = 1384, n_alt = -2
	Hard reg 1 is preferable by r3022 with profit 1000
   Insn 4256: point = 1386, n_alt = 0
   Insn 5896: point = 1387, n_alt = -2
	Hard reg 1 is preferable by r3022 with profit 2000
   Insn 4255: point = 1389, n_alt = 2
   Insn 4254: point = 1390, n_alt = 2
   Insn 4253: point = 1391, n_alt = 2
   Insn 4252: point = 1392, n_alt = 0
   Insn 4251: point = 1392, n_alt = 0
   Insn 4250: point = 1392, n_alt = 3
   Insn 4249: point = 1392, n_alt = 2
   Insn 4248: point = 1392, n_alt = 2
   Insn 4247: point = 1392, n_alt = 4
   Insn 4246: point = 1392, n_alt = 4
   Insn 4245: point = 1392, n_alt = -2
   Insn 4244: point = 1393, n_alt = -2
   Insn 4243: point = 1394, n_alt = 0
   Insn 4242: point = 1394, n_alt = 0
   Insn 4241: point = 1394, n_alt = 3
   Insn 4240: point = 1395, n_alt = 3
  BB 393
   Insn 5787: point = 1396, n_alt = -1
  BB 280
   Insn 4199: point = 1396, n_alt = -1
   Insn 4198: point = 1396, n_alt = 0
   Insn 4197: point = 1397, n_alt = 0
   Insn 4196: point = 1399, n_alt = 0
   Insn 4195: point = 1400, n_alt = 0
  BB 284
   Insn 5662: point = 1401, n_alt = -1
   Insn 4234: point = 1401, n_alt = 1
  BB 394
   Insn 5790: point = 1402, n_alt = -1
  BB 282
   Insn 4207: point = 1403, n_alt = -1
   Insn 4206: point = 1403, n_alt = 0
   Insn 4205: point = 1404, n_alt = 0
   Insn 4204: point = 1406, n_alt = 0
   Insn 4203: point = 1407, n_alt = 0
  BB 283
   Insn 5660: point = 1408, n_alt = -1
   Insn 4228: point = 1408, n_alt = 1
   Insn 4227: point = 1408, n_alt = 8
   Insn 4226: point = 1409, n_alt = 4
   Insn 4225: point = 1410, n_alt = 1
   Insn 4224: point = 1412, n_alt = 3
   Insn 4223: point = 1414, n_alt = 0
   Insn 4222: point = 1416, n_alt = 1
   Insn 4221: point = 1418, n_alt = 0
   Insn 4220: point = 1419, n_alt = 0
   Insn 4219: point = 1421, n_alt = 1
   Insn 4218: point = 1423, n_alt = 0
   Insn 4217: point = 1424, n_alt = 7
   Insn 4216: point = 1426, n_alt = 4
   Insn 4215: point = 1427, n_alt = 3
   Insn 4214: point = 1429, n_alt = 0
   Insn 4213: point = 1431, n_alt = 1
   Insn 4212: point = 1433, n_alt = 0
   Insn 4211: point = 1434, n_alt = 0
   Insn 4210: point = 1436, n_alt = 1
   Insn 4209: point = 1438, n_alt = 0
  BB 281
   Insn 4201: point = 1440, n_alt = 1
  BB 279
   Insn 4193: point = 1441, n_alt = 1
   Insn 4192: point = 1442, n_alt = 0
   Insn 4191: point = 1443, n_alt = 0
  BB 277
   Insn 5658: point = 1444, n_alt = -1
   Insn 4182: point = 1444, n_alt = 8
   Insn 4181: point = 1445, n_alt = 2
   Insn 4180: point = 1447, n_alt = 7
   Insn 4179: point = 1448, n_alt = 7
  BB 278
   Insn 4188: point = 1449, n_alt = 8
   Insn 4187: point = 1450, n_alt = 7
  BB 276
   Insn 4174: point = 1451, n_alt = -1
   Insn 4173: point = 1451, n_alt = 1
   Insn 4172: point = 1452, n_alt = 7
   Insn 4171: point = 1453, n_alt = 7
   Insn 4170: point = 1454, n_alt = 1
   Insn 4169: point = 1455, n_alt = 0
   Insn 4168: point = 1457, n_alt = 0
   Insn 4167: point = 1459, n_alt = 0
   Insn 4166: point = 1461, n_alt = 0
   Insn 4165: point = 1463, n_alt = 0
   Insn 4164: point = 1465, n_alt = 0
   Insn 4163: point = 1466, n_alt = -2
   Insn 4162: point = 1468, n_alt = -2
   Insn 4161: point = 1470, n_alt = 0
   Insn 4160: point = 1472, n_alt = 0
   Insn 4159: point = 1473, n_alt = -2
   Insn 4158: point = 1475, n_alt = 0
   Insn 4157: point = 1477, n_alt = -2
   Insn 4156: point = 1478, n_alt = 1
   Insn 4155: point = 1480, n_alt = 0
   Insn 4154: point = 1481, n_alt = 1
   Insn 4153: point = 1482, n_alt = 0
   Insn 4152: point = 1484, n_alt = 0
   Insn 4151: point = 1485, n_alt = 0
   Insn 4150: point = 1485, n_alt = 0
   Insn 4149: point = 1485, n_alt = 3
   Insn 4148: point = 1485, n_alt = 4
   Insn 4147: point = 1485, n_alt = 2
   Insn 4146: point = 1485, n_alt = 2
   Insn 4145: point = 1485, n_alt = 2
   Insn 4144: point = 1485, n_alt = -2
   Insn 4143: point = 1486, n_alt = -2
   Insn 4142: point = 1487, n_alt = 0
   Insn 4141: point = 1487, n_alt = 0
   Insn 4140: point = 1487, n_alt = 3
   Insn 4139: point = 1488, n_alt = 3
   Insn 4138: point = 1489, n_alt = 1
   Insn 4137: point = 1490, n_alt = 0
   Insn 4136: point = 1492, n_alt = 0
   Insn 4135: point = 1494, n_alt = 0
   Insn 4134: point = 1494, n_alt = -2
   Insn 4133: point = 1495, n_alt = 3
   Insn 4132: point = 1497, n_alt = 0
  BB 275
   Insn 4130: point = 1498, n_alt = -1
   Insn 4129: point = 1498, n_alt = 0
   Insn 4128: point = 1499, n_alt = 0
   Insn 4127: point = 1501, n_alt = 0
   Insn 4126: point = 1503, n_alt = 0
   Insn 4125: point = 1505, n_alt = 0
   Insn 4124: point = 1507, n_alt = 0
   Insn 4123: point = 1509, n_alt = 0
   Insn 4122: point = 1510, n_alt = -2
   Insn 4121: point = 1512, n_alt = -2
   Insn 4120: point = 1514, n_alt = 0
   Insn 4119: point = 1516, n_alt = 0
   Insn 4118: point = 1517, n_alt = -2
   Insn 4117: point = 1519, n_alt = 0
   Insn 4116: point = 1521, n_alt = -2
   Insn 4115: point = 1522, n_alt = 1
   Insn 4114: point = 1524, n_alt = 0
  BB 274
   Insn 4112: point = 1525, n_alt = -1
   Insn 4111: point = 1525, n_alt = 0
   Insn 4110: point = 1526, n_alt = 0
  BB 273
   Insn 4107: point = 1527, n_alt = 0
   Insn 4106: point = 1527, n_alt = 3
   Insn 4105: point = 1527, n_alt = 2
   Insn 4104: point = 1527, n_alt = 2
   Insn 4103: point = 1527, n_alt = -2
   Insn 4102: point = 1528, n_alt = -2
   Insn 4101: point = 1529, n_alt = -2
   Insn 4100: point = 1530, n_alt = -2
   Insn 4099: point = 1531, n_alt = 3
   Insn 4098: point = 1532, n_alt = 3
   Insn 4097: point = 1533, n_alt = 3
   Insn 4096: point = 1534, n_alt = 3
  BB 272
   Insn 4093: point = 1535, n_alt = 1
  BB 271
   Insn 4091: point = 1535, n_alt = -1
   Insn 4090: point = 1535, n_alt = 0
   Insn 4089: point = 1536, n_alt = 0
   Insn 4088: point = 1537, n_alt = 1
   Insn 4087: point = 1538, n_alt = 0
   Insn 4086: point = 1539, n_alt = 0
   Insn 4085: point = 1540, n_alt = 1
   Insn 5895: point = 1541, n_alt = -2
	Hard reg 1 is preferable by r3021 with profit 1000
   Insn 4084: point = 1543, n_alt = 0
   Insn 5894: point = 1544, n_alt = -2
	Hard reg 1 is preferable by r3021 with profit 2000
   Insn 4083: point = 1546, n_alt = 2
   Insn 4082: point = 1547, n_alt = 2
   Insn 4081: point = 1548, n_alt = 2
   Insn 4080: point = 1549, n_alt = 0
   Insn 4079: point = 1549, n_alt = 0
   Insn 4078: point = 1549, n_alt = 3
   Insn 4077: point = 1549, n_alt = 2
   Insn 4076: point = 1549, n_alt = 2
   Insn 4075: point = 1549, n_alt = 4
   Insn 4074: point = 1549, n_alt = 4
   Insn 4073: point = 1549, n_alt = -2
   Insn 4072: point = 1550, n_alt = -2
   Insn 4071: point = 1551, n_alt = 0
   Insn 4070: point = 1551, n_alt = 0
   Insn 4069: point = 1551, n_alt = 3
   Insn 4068: point = 1552, n_alt = 3
  BB 391
   Insn 5781: point = 1553, n_alt = -1
  BB 266
   Insn 4036: point = 1553, n_alt = -1
   Insn 4035: point = 1553, n_alt = 0
   Insn 4034: point = 1554, n_alt = 0
   Insn 4033: point = 1556, n_alt = 0
   Insn 4032: point = 1557, n_alt = 0
  BB 270
   Insn 5655: point = 1558, n_alt = -1
   Insn 4062: point = 1558, n_alt = 1
  BB 392
   Insn 5784: point = 1559, n_alt = -1
  BB 268
   Insn 4044: point = 1560, n_alt = -1
   Insn 4043: point = 1560, n_alt = 0
   Insn 4042: point = 1561, n_alt = 0
   Insn 4041: point = 1563, n_alt = 0
   Insn 4040: point = 1564, n_alt = 0
  BB 269
   Insn 5653: point = 1565, n_alt = -1
   Insn 4056: point = 1565, n_alt = 1
   Insn 4055: point = 1565, n_alt = 8
   Insn 4054: point = 1566, n_alt = 7
   Insn 4053: point = 1567, n_alt = 4
   Insn 4052: point = 1568, n_alt = 3
   Insn 4051: point = 1570, n_alt = 0
   Insn 4050: point = 1572, n_alt = 1
   Insn 4049: point = 1574, n_alt = 0
   Insn 4048: point = 1575, n_alt = 0
   Insn 4047: point = 1577, n_alt = 1
   Insn 4046: point = 1579, n_alt = 0
  BB 267
   Insn 4038: point = 1581, n_alt = 1
  BB 265
   Insn 4030: point = 1582, n_alt = 1
   Insn 4029: point = 1583, n_alt = 0
   Insn 4028: point = 1584, n_alt = 0
   Insn 4027: point = 1585, n_alt = 1
   Insn 4026: point = 1586, n_alt = 0
   Insn 4025: point = 1588, n_alt = 0
   Insn 4024: point = 1590, n_alt = 0
   Insn 4023: point = 1592, n_alt = 0
   Insn 4022: point = 1594, n_alt = 0
   Insn 4021: point = 1596, n_alt = 0
   Insn 4020: point = 1597, n_alt = -2
   Insn 4019: point = 1599, n_alt = -2
   Insn 4018: point = 1601, n_alt = 0
   Insn 4017: point = 1603, n_alt = 0
   Insn 4016: point = 1604, n_alt = -2
   Insn 4015: point = 1606, n_alt = 0
   Insn 4014: point = 1608, n_alt = -2
   Insn 4013: point = 1609, n_alt = 1
   Insn 4012: point = 1611, n_alt = 0
  BB 264
   Insn 4010: point = 1612, n_alt = -1
   Insn 4009: point = 1612, n_alt = 0
   Insn 4008: point = 1613, n_alt = 0
   Insn 4007: point = 1615, n_alt = 0
   Insn 4006: point = 1617, n_alt = 0
   Insn 4005: point = 1619, n_alt = 0
   Insn 4004: point = 1621, n_alt = 0
   Insn 4003: point = 1623, n_alt = 0
   Insn 4002: point = 1624, n_alt = -2
   Insn 4001: point = 1626, n_alt = -2
   Insn 4000: point = 1628, n_alt = 0
   Insn 3999: point = 1630, n_alt = 0
   Insn 3998: point = 1631, n_alt = -2
   Insn 3997: point = 1633, n_alt = 0
   Insn 3996: point = 1635, n_alt = -2
   Insn 3995: point = 1636, n_alt = 1
   Insn 3994: point = 1638, n_alt = 0
  BB 263
   Insn 3992: point = 1639, n_alt = -1
   Insn 3991: point = 1639, n_alt = 0
   Insn 3990: point = 1640, n_alt = 0
  BB 262
   Insn 3987: point = 1641, n_alt = 0
   Insn 3986: point = 1641, n_alt = 3
   Insn 3985: point = 1641, n_alt = 2
   Insn 3984: point = 1641, n_alt = 2
   Insn 3983: point = 1641, n_alt = -2
   Insn 3982: point = 1642, n_alt = -2
   Insn 3981: point = 1643, n_alt = -2
   Insn 3980: point = 1644, n_alt = -2
   Insn 3979: point = 1645, n_alt = 3
   Insn 3978: point = 1646, n_alt = 3
   Insn 3977: point = 1647, n_alt = 3
   Insn 3976: point = 1648, n_alt = 3
  BB 261
   Insn 3973: point = 1649, n_alt = 1
  BB 260
   Insn 3971: point = 1649, n_alt = -1
   Insn 3970: point = 1649, n_alt = 0
   Insn 3969: point = 1650, n_alt = 0
   Insn 3968: point = 1651, n_alt = 1
   Insn 3967: point = 1652, n_alt = 0
   Insn 3966: point = 1653, n_alt = 0
   Insn 3965: point = 1654, n_alt = 1
   Insn 5893: point = 1655, n_alt = -2
	Hard reg 1 is preferable by r3020 with profit 1000
   Insn 3964: point = 1657, n_alt = 0
   Insn 5892: point = 1658, n_alt = -2
	Hard reg 1 is preferable by r3020 with profit 2000
   Insn 3963: point = 1660, n_alt = 2
   Insn 3962: point = 1661, n_alt = 2
   Insn 3961: point = 1662, n_alt = 2
   Insn 3960: point = 1663, n_alt = 0
   Insn 3959: point = 1663, n_alt = 0
   Insn 3958: point = 1663, n_alt = 3
   Insn 3957: point = 1663, n_alt = 2
   Insn 3956: point = 1663, n_alt = 2
   Insn 3955: point = 1663, n_alt = 4
   Insn 3954: point = 1663, n_alt = 4
   Insn 3953: point = 1663, n_alt = -2
   Insn 3952: point = 1664, n_alt = -2
   Insn 3951: point = 1665, n_alt = 0
   Insn 3950: point = 1665, n_alt = 0
   Insn 3949: point = 1665, n_alt = 3
   Insn 3948: point = 1666, n_alt = 3
  BB 389
   Insn 5775: point = 1667, n_alt = -1
  BB 255
   Insn 3916: point = 1667, n_alt = -1
   Insn 3915: point = 1667, n_alt = 0
   Insn 3914: point = 1668, n_alt = 0
   Insn 3913: point = 1670, n_alt = 0
   Insn 3912: point = 1671, n_alt = 0
  BB 259
   Insn 5651: point = 1672, n_alt = -1
   Insn 3942: point = 1672, n_alt = 1
  BB 390
   Insn 5778: point = 1673, n_alt = -1
  BB 257
   Insn 3924: point = 1674, n_alt = -1
   Insn 3923: point = 1674, n_alt = 0
   Insn 3922: point = 1675, n_alt = 0
   Insn 3921: point = 1677, n_alt = 0
   Insn 3920: point = 1678, n_alt = 0
  BB 258
   Insn 5649: point = 1679, n_alt = -1
   Insn 3936: point = 1679, n_alt = 1
   Insn 3935: point = 1679, n_alt = 8
   Insn 3934: point = 1680, n_alt = 7
   Insn 3933: point = 1681, n_alt = 4
   Insn 3932: point = 1682, n_alt = 3
   Insn 3931: point = 1684, n_alt = 0
   Insn 3930: point = 1686, n_alt = 1
   Insn 3929: point = 1688, n_alt = 0
   Insn 3928: point = 1689, n_alt = 0
   Insn 3927: point = 1691, n_alt = 1
   Insn 3926: point = 1693, n_alt = 0
  BB 256
   Insn 3918: point = 1695, n_alt = 1
  BB 254
   Insn 3910: point = 1696, n_alt = 1
   Insn 3909: point = 1697, n_alt = 0
   Insn 3908: point = 1698, n_alt = 0
   Insn 3907: point = 1699, n_alt = 1
   Insn 3906: point = 1700, n_alt = 0
   Insn 3905: point = 1702, n_alt = 0
   Insn 3904: point = 1704, n_alt = 0
   Insn 3903: point = 1706, n_alt = 0
   Insn 3902: point = 1708, n_alt = 0
   Insn 3901: point = 1710, n_alt = 0
   Insn 3900: point = 1711, n_alt = -2
   Insn 3899: point = 1713, n_alt = -2
   Insn 3898: point = 1715, n_alt = 0
   Insn 3897: point = 1717, n_alt = 0
   Insn 3896: point = 1718, n_alt = -2
   Insn 3895: point = 1720, n_alt = 0
   Insn 3894: point = 1722, n_alt = -2
   Insn 3893: point = 1723, n_alt = 1
   Insn 3892: point = 1725, n_alt = 0
  BB 253
   Insn 3890: point = 1726, n_alt = -1
   Insn 3889: point = 1726, n_alt = 0
   Insn 3888: point = 1727, n_alt = 0
   Insn 3887: point = 1729, n_alt = 0
   Insn 3886: point = 1731, n_alt = 0
   Insn 3885: point = 1733, n_alt = 0
   Insn 3884: point = 1735, n_alt = 0
   Insn 3883: point = 1737, n_alt = 0
   Insn 3882: point = 1738, n_alt = -2
   Insn 3881: point = 1740, n_alt = -2
   Insn 3880: point = 1742, n_alt = 0
   Insn 3879: point = 1744, n_alt = 0
   Insn 3878: point = 1745, n_alt = -2
   Insn 3877: point = 1747, n_alt = 0
   Insn 3876: point = 1749, n_alt = -2
   Insn 3875: point = 1750, n_alt = 1
   Insn 3874: point = 1752, n_alt = 0
  BB 252
   Insn 3872: point = 1753, n_alt = -1
   Insn 3871: point = 1753, n_alt = 0
   Insn 3870: point = 1754, n_alt = 0
  BB 251
   Insn 3867: point = 1755, n_alt = 0
   Insn 3866: point = 1755, n_alt = 3
   Insn 3865: point = 1755, n_alt = 2
   Insn 3864: point = 1755, n_alt = 2
   Insn 3863: point = 1755, n_alt = -2
   Insn 3862: point = 1756, n_alt = -2
   Insn 3861: point = 1757, n_alt = -2
   Insn 3860: point = 1758, n_alt = -2
   Insn 3859: point = 1759, n_alt = 3
   Insn 3858: point = 1760, n_alt = 3
   Insn 3857: point = 1761, n_alt = 3
   Insn 3856: point = 1762, n_alt = 3
  BB 250
   Insn 3853: point = 1763, n_alt = 1
  BB 249
   Insn 3851: point = 1763, n_alt = -1
   Insn 3850: point = 1763, n_alt = 0
   Insn 3849: point = 1764, n_alt = 0
   Insn 3848: point = 1765, n_alt = 1
   Insn 3847: point = 1766, n_alt = 0
   Insn 3846: point = 1767, n_alt = 0
   Insn 3845: point = 1768, n_alt = 1
   Insn 5891: point = 1769, n_alt = -2
	Hard reg 1 is preferable by r3019 with profit 1000
   Insn 3844: point = 1771, n_alt = 0
   Insn 5890: point = 1772, n_alt = -2
	Hard reg 1 is preferable by r3019 with profit 2000
   Insn 3843: point = 1774, n_alt = 2
   Insn 3842: point = 1775, n_alt = 2
   Insn 3841: point = 1776, n_alt = 2
   Insn 3840: point = 1777, n_alt = 0
   Insn 3839: point = 1777, n_alt = 0
   Insn 3838: point = 1777, n_alt = 3
   Insn 3837: point = 1777, n_alt = 2
   Insn 3836: point = 1777, n_alt = 2
   Insn 3835: point = 1777, n_alt = 4
   Insn 3834: point = 1777, n_alt = 4
   Insn 3833: point = 1777, n_alt = -2
   Insn 3832: point = 1778, n_alt = -2
   Insn 3831: point = 1779, n_alt = 0
   Insn 3830: point = 1779, n_alt = 0
   Insn 3829: point = 1779, n_alt = 3
   Insn 3828: point = 1780, n_alt = 3
   Insn 3827: point = 1781, n_alt = 1
   Insn 3826: point = 1782, n_alt = 0
   Insn 3825: point = 1784, n_alt = 0
   Insn 3824: point = 1786, n_alt = 0
   Insn 3823: point = 1788, n_alt = 0
   Insn 3822: point = 1790, n_alt = 0
   Insn 3821: point = 1792, n_alt = 0
   Insn 3820: point = 1793, n_alt = -2
   Insn 3819: point = 1795, n_alt = -2
   Insn 3818: point = 1797, n_alt = 0
   Insn 3817: point = 1799, n_alt = 0
   Insn 3816: point = 1800, n_alt = -2
   Insn 3815: point = 1802, n_alt = 0
   Insn 3814: point = 1804, n_alt = -2
   Insn 3813: point = 1805, n_alt = 1
   Insn 3812: point = 1807, n_alt = 0
   Insn 3811: point = 1808, n_alt = 1
   Insn 3810: point = 1809, n_alt = 0
   Insn 3809: point = 1811, n_alt = 0
   Insn 3808: point = 1812, n_alt = 0
   Insn 3807: point = 1812, n_alt = 0
   Insn 3806: point = 1812, n_alt = 3
   Insn 3805: point = 1812, n_alt = 4
   Insn 3804: point = 1812, n_alt = 2
   Insn 3803: point = 1812, n_alt = 2
   Insn 3802: point = 1812, n_alt = 2
   Insn 3801: point = 1812, n_alt = -2
   Insn 3800: point = 1813, n_alt = -2
   Insn 3799: point = 1814, n_alt = 0
   Insn 3798: point = 1814, n_alt = 0
   Insn 3797: point = 1814, n_alt = 3
   Insn 3796: point = 1815, n_alt = 3
   Insn 3795: point = 1816, n_alt = 1
   Insn 3794: point = 1817, n_alt = 0
   Insn 3793: point = 1819, n_alt = 0
   Insn 3792: point = 1821, n_alt = 0
   Insn 3791: point = 1821, n_alt = -2
   Insn 3790: point = 1822, n_alt = 3
   Insn 3789: point = 1824, n_alt = 0
  BB 248
   Insn 3787: point = 1825, n_alt = -1
   Insn 3786: point = 1825, n_alt = 0
   Insn 3785: point = 1826, n_alt = 0
   Insn 3784: point = 1828, n_alt = 0
   Insn 3783: point = 1830, n_alt = 0
   Insn 3782: point = 1832, n_alt = 0
   Insn 3781: point = 1834, n_alt = 0
   Insn 3780: point = 1836, n_alt = 0
   Insn 3779: point = 1837, n_alt = -2
   Insn 3778: point = 1839, n_alt = -2
   Insn 3777: point = 1841, n_alt = 0
   Insn 3776: point = 1843, n_alt = 0
   Insn 3775: point = 1844, n_alt = -2
   Insn 3774: point = 1846, n_alt = 0
   Insn 3773: point = 1848, n_alt = -2
   Insn 3772: point = 1849, n_alt = 1
   Insn 3771: point = 1851, n_alt = 0
  BB 247
   Insn 3769: point = 1852, n_alt = -1
   Insn 3768: point = 1852, n_alt = 0
   Insn 3767: point = 1853, n_alt = 0
  BB 246
   Insn 3764: point = 1854, n_alt = 0
   Insn 3763: point = 1854, n_alt = 3
   Insn 3762: point = 1854, n_alt = 2
   Insn 3761: point = 1854, n_alt = 2
   Insn 3760: point = 1854, n_alt = -2
   Insn 3759: point = 1855, n_alt = -2
   Insn 3758: point = 1856, n_alt = -2
   Insn 3757: point = 1857, n_alt = -2
   Insn 3756: point = 1858, n_alt = 3
   Insn 3755: point = 1859, n_alt = 3
   Insn 3754: point = 1860, n_alt = 3
   Insn 3753: point = 1861, n_alt = 3
   Insn 3752: point = 1862, n_alt = 0
   Insn 3751: point = 1862, n_alt = 3
   Insn 3750: point = 1862, n_alt = -2
   Insn 3749: point = 1863, n_alt = 2
   Insn 3748: point = 1863, n_alt = -2
   Insn 3747: point = 1864, n_alt = -2
   Insn 3746: point = 1865, n_alt = 3
   Insn 3745: point = 1866, n_alt = 3
   Insn 3744: point = 1867, n_alt = 3
  BB 245
   Insn 3741: point = 1868, n_alt = 1
  BB 244
   Insn 3739: point = 1868, n_alt = -1
   Insn 3738: point = 1868, n_alt = 0
   Insn 3737: point = 1869, n_alt = 0
   Insn 3736: point = 1870, n_alt = 1
   Insn 3735: point = 1871, n_alt = 0
   Insn 3734: point = 1872, n_alt = 0
   Insn 3733: point = 1873, n_alt = 1
   Insn 5889: point = 1874, n_alt = -2
	Hard reg 1 is preferable by r3018 with profit 1000
   Insn 3732: point = 1876, n_alt = 0
   Insn 5888: point = 1877, n_alt = -2
	Hard reg 1 is preferable by r3018 with profit 2000
   Insn 3731: point = 1879, n_alt = 2
   Insn 3730: point = 1880, n_alt = 2
   Insn 3729: point = 1881, n_alt = 2
   Insn 3728: point = 1882, n_alt = 0
   Insn 3727: point = 1882, n_alt = 0
   Insn 3726: point = 1882, n_alt = 3
   Insn 3725: point = 1882, n_alt = 2
   Insn 3724: point = 1882, n_alt = 2
   Insn 3723: point = 1882, n_alt = 4
   Insn 3722: point = 1882, n_alt = 4
   Insn 3721: point = 1882, n_alt = -2
   Insn 3720: point = 1883, n_alt = -2
   Insn 3719: point = 1884, n_alt = 0
   Insn 3718: point = 1884, n_alt = 0
   Insn 3717: point = 1884, n_alt = 3
   Insn 3716: point = 1885, n_alt = 3
  BB 221
   Insn 5637: point = 1886, n_alt = -1
  BB 385
   Insn 5763: point = 1886, n_alt = -1
  BB 216
   Insn 3253: point = 1886, n_alt = -1
   Insn 3252: point = 1886, n_alt = 0
   Insn 3251: point = 1887, n_alt = 0
   Insn 3250: point = 1889, n_alt = 0
   Insn 3249: point = 1890, n_alt = 0
  BB 220
   Insn 5635: point = 1891, n_alt = -1
   Insn 3279: point = 1891, n_alt = 1
  BB 386
   Insn 5766: point = 1892, n_alt = -1
  BB 218
   Insn 3261: point = 1893, n_alt = -1
   Insn 3260: point = 1893, n_alt = 0
   Insn 3259: point = 1894, n_alt = 0
   Insn 3258: point = 1896, n_alt = 0
   Insn 3257: point = 1897, n_alt = 0
  BB 219
   Insn 5633: point = 1898, n_alt = -1
   Insn 3273: point = 1898, n_alt = 1
   Insn 3272: point = 1898, n_alt = 8
   Insn 3271: point = 1899, n_alt = 7
   Insn 3270: point = 1900, n_alt = 4
   Insn 3269: point = 1901, n_alt = 3
   Insn 3268: point = 1903, n_alt = 0
   Insn 3267: point = 1905, n_alt = 1
   Insn 3266: point = 1907, n_alt = 0
   Insn 3265: point = 1908, n_alt = 0
   Insn 3264: point = 1910, n_alt = 1
   Insn 3263: point = 1912, n_alt = 0
  BB 217
   Insn 3255: point = 1914, n_alt = 1
  BB 215
   Insn 3247: point = 1915, n_alt = 1
   Insn 3246: point = 1916, n_alt = 0
   Insn 3245: point = 1917, n_alt = 0
  BB 387
   Insn 5769: point = 1918, n_alt = -1
  BB 223
   Insn 3297: point = 1918, n_alt = -1
   Insn 3296: point = 1918, n_alt = 0
   Insn 3295: point = 1919, n_alt = 0
   Insn 3294: point = 1921, n_alt = 0
   Insn 3293: point = 1922, n_alt = 0
  BB 243
   Insn 5647: point = 1923, n_alt = -1
   Insn 3710: point = 1923, n_alt = 1
  BB 388
   Insn 5772: point = 1924, n_alt = -1
  BB 225
   Insn 3305: point = 1925, n_alt = -1
   Insn 3304: point = 1925, n_alt = 0
   Insn 3303: point = 1926, n_alt = 0
   Insn 3302: point = 1928, n_alt = 0
   Insn 3301: point = 1929, n_alt = 0
  BB 242
   Insn 5645: point = 1930, n_alt = -1
   Insn 3704: point = 1930, n_alt = 1
  BB 238
   Insn 5643: point = 1931, n_alt = -1
   Insn 3654: point = 1931, n_alt = 8
   Insn 3653: point = 1932, n_alt = 4
   Insn 3652: point = 1933, n_alt = 3
   Insn 3651: point = 1935, n_alt = 0
   Insn 3650: point = 1937, n_alt = 0
   Insn 3649: point = 1939, n_alt = 0
   Insn 3648: point = 1940, n_alt = 0
   Insn 3647: point = 1942, n_alt = 0
   Insn 3646: point = 1944, n_alt = 0
  BB 237
   Insn 3643: point = 1946, n_alt = 7
  BB 236
   Insn 3641: point = 1948, n_alt = -1
   Insn 3640: point = 1948, n_alt = 0
   Insn 3639: point = 1949, n_alt = 0
   Insn 3638: point = 1951, n_alt = 0
   Insn 3637: point = 1953, n_alt = 0
   Insn 3636: point = 1954, n_alt = 1
   Insn 3635: point = 1954, n_alt = 0
   Insn 3634: point = 1956, n_alt = 0
   Insn 3633: point = 1957, n_alt = 1
   Insn 3632: point = 1957, n_alt = 7
  BB 241
   Insn 3701: point = 1959, n_alt = 8
   Insn 3700: point = 1960, n_alt = 4
   Insn 3699: point = 1961, n_alt = 1
   Insn 3698: point = 1963, n_alt = 3
   Insn 3697: point = 1965, n_alt = 0
   Insn 3696: point = 1967, n_alt = 0
   Insn 3695: point = 1969, n_alt = 0
   Insn 3694: point = 1970, n_alt = 0
   Insn 3693: point = 1972, n_alt = 0
   Insn 3692: point = 1974, n_alt = 0
   Insn 3691: point = 1975, n_alt = -2
   Insn 3690: point = 1977, n_alt = 2
   Insn 3689: point = 1979, n_alt = 7
   Insn 3688: point = 1980, n_alt = -2
   Insn 3687: point = 1981, n_alt = 0
   Insn 3686: point = 1981, n_alt = -2
   Insn 3685: point = 1982, n_alt = 7
   Insn 3684: point = 1983, n_alt = 8
  BB 240
   Insn 3681: point = 1985, n_alt = 7
  BB 239
   Insn 3679: point = 1987, n_alt = -1
   Insn 3678: point = 1987, n_alt = 0
   Insn 3677: point = 1988, n_alt = 0
   Insn 3676: point = 1990, n_alt = 0
   Insn 3675: point = 1992, n_alt = 0
   Insn 3674: point = 1993, n_alt = 1
   Insn 3673: point = 1993, n_alt = 0
   Insn 3672: point = 1995, n_alt = 0
   Insn 3671: point = 1996, n_alt = 1
   Insn 3670: point = 1997, n_alt = 7
   Insn 3669: point = 1998, n_alt = 7
   Insn 3668: point = 1999, n_alt = 8
   Insn 3667: point = 2000, n_alt = 0
   Insn 3666: point = 2002, n_alt = 2
   Insn 3665: point = 2003, n_alt = 2
   Insn 3664: point = 2005, n_alt = -2
   Insn 3663: point = 2007, n_alt = 2
   Insn 3662: point = 2009, n_alt = 7
   Insn 3661: point = 2010, n_alt = 1
   Insn 3660: point = 2012, n_alt = 7
   Insn 3659: point = 2013, n_alt = 7
  BB 235
   Insn 3627: point = 2015, n_alt = -1
   Insn 3626: point = 2015, n_alt = 1
   Insn 3625: point = 2016, n_alt = 7
  BB 233
   Insn 5640: point = 2018, n_alt = -1
   Insn 3615: point = 2018, n_alt = 8
   Insn 3614: point = 2019, n_alt = 7
  BB 234
   Insn 3622: point = 2021, n_alt = 8
   Insn 3621: point = 2022, n_alt = 2
   Insn 3620: point = 2024, n_alt = 7
  BB 232
   Insn 3609: point = 2026, n_alt = -1
   Insn 3608: point = 2026, n_alt = 1
   Insn 3607: point = 2027, n_alt = 7
   Insn 3606: point = 2028, n_alt = 8
   Insn 3605: point = 2029, n_alt = 1
   Insn 3604: point = 2031, n_alt = 1
   Insn 3603: point = 2033, n_alt = 7
   Insn 3602: point = 2035, n_alt = 4
   Insn 3601: point = 2036, n_alt = 3
   Insn 3600: point = 2038, n_alt = 0
   Insn 3599: point = 2040, n_alt = 0
   Insn 3598: point = 2042, n_alt = 0
   Insn 3597: point = 2043, n_alt = 0
   Insn 3596: point = 2045, n_alt = 0
   Insn 3595: point = 2047, n_alt = 0
   Insn 3594: point = 2048, n_alt = 1
   Insn 3593: point = 2050, n_alt = 7
   Insn 3592: point = 2052, n_alt = 4
   Insn 3591: point = 2053, n_alt = 3
   Insn 3590: point = 2055, n_alt = 0
   Insn 3589: point = 2057, n_alt = 0
   Insn 3588: point = 2059, n_alt = 0
   Insn 3587: point = 2060, n_alt = 0
   Insn 3586: point = 2062, n_alt = 0
   Insn 3585: point = 2064, n_alt = 0
   Insn 3584: point = 2065, n_alt = -2
   Insn 3583: point = 2067, n_alt = 2
   Insn 3582: point = 2069, n_alt = 7
   Insn 3581: point = 2070, n_alt = 8
   Insn 3580: point = 2071, n_alt = 7
   Insn 3579: point = 2073, n_alt = 4
   Insn 3578: point = 2074, n_alt = 3
   Insn 3577: point = 2076, n_alt = 0
   Insn 3576: point = 2078, n_alt = 0
   Insn 3575: point = 2080, n_alt = 0
   Insn 3574: point = 2081, n_alt = 0
   Insn 3573: point = 2083, n_alt = 0
   Insn 3572: point = 2085, n_alt = 0
   Insn 3571: point = 2087, n_alt = 0
   Insn 3570: point = 2088, n_alt = 1
   Insn 3569: point = 2090, n_alt = 0
   Insn 3568: point = 2092, n_alt = 0
   Insn 3567: point = 2093, n_alt = 8
   Insn 3566: point = 2094, n_alt = 1
   Insn 3565: point = 2096, n_alt = 1
   Insn 3564: point = 2098, n_alt = 1
   Insn 3563: point = 2100, n_alt = -2
   Insn 3562: point = 2102, n_alt = 2
   Insn 3561: point = 2104, n_alt = 7
   Insn 3560: point = 2105, n_alt = 7
   Insn 3559: point = 2107, n_alt = 0
   Insn 3558: point = 2109, n_alt = 4
   Insn 3557: point = 2110, n_alt = 3
   Insn 3556: point = 2112, n_alt = 0
   Insn 3555: point = 2114, n_alt = 0
   Insn 3554: point = 2116, n_alt = 0
   Insn 3553: point = 2117, n_alt = 0
   Insn 3552: point = 2119, n_alt = 0
   Insn 3551: point = 2121, n_alt = 0
   Insn 3550: point = 2122, n_alt = 7
   Insn 3549: point = 2124, n_alt = 0
   Insn 3548: point = 2126, n_alt = 4
   Insn 3547: point = 2127, n_alt = 3
   Insn 3546: point = 2129, n_alt = 0
   Insn 3545: point = 2131, n_alt = 0
   Insn 3544: point = 2133, n_alt = 0
   Insn 3543: point = 2134, n_alt = 0
   Insn 3542: point = 2135, n_alt = 7
   Insn 3541: point = 2137, n_alt = 0
   Insn 3540: point = 2139, n_alt = 4
   Insn 3539: point = 2140, n_alt = 3
   Insn 3538: point = 2142, n_alt = 0
   Insn 3537: point = 2144, n_alt = 0
   Insn 3536: point = 2146, n_alt = 0
   Insn 3535: point = 2147, n_alt = 0
   Insn 3534: point = 2149, n_alt = 0
   Insn 3533: point = 2151, n_alt = 0
  BB 231
   Insn 3530: point = 2153, n_alt = 8
   Insn 3529: point = 2154, n_alt = 4
   Insn 3528: point = 2155, n_alt = 7
   Insn 3527: point = 2157, n_alt = 4
   Insn 3526: point = 2158, n_alt = 3
   Insn 3525: point = 2160, n_alt = 0
   Insn 3524: point = 2162, n_alt = 0
   Insn 3523: point = 2164, n_alt = 0
   Insn 3522: point = 2165, n_alt = 0
   Insn 3521: point = 2167, n_alt = 0
   Insn 3520: point = 2169, n_alt = 0
   Insn 3519: point = 2170, n_alt = 3
   Insn 3518: point = 2172, n_alt = 0
   Insn 3517: point = 2174, n_alt = 0
   Insn 3516: point = 2176, n_alt = 0
   Insn 3515: point = 2177, n_alt = 0
   Insn 3514: point = 2179, n_alt = 0
   Insn 3513: point = 2181, n_alt = 0
  BB 230
   Insn 3508: point = 2183, n_alt = -1
   Insn 3507: point = 2183, n_alt = 1
   Insn 3506: point = 2184, n_alt = 7
   Insn 3505: point = 2185, n_alt = 8
   Insn 3504: point = 2186, n_alt = 4
   Insn 3503: point = 2187, n_alt = 1
   Insn 3502: point = 2189, n_alt = 3
   Insn 3501: point = 2191, n_alt = 0
   Insn 3500: point = 2193, n_alt = 0
   Insn 3499: point = 2195, n_alt = 0
   Insn 3498: point = 2196, n_alt = 0
   Insn 3497: point = 2198, n_alt = 0
   Insn 3496: point = 2200, n_alt = 0
   Insn 3495: point = 2201, n_alt = -2
   Insn 3494: point = 2203, n_alt = 2
   Insn 3493: point = 2205, n_alt = 7
   Insn 3492: point = 2206, n_alt = 1
   Insn 3491: point = 2208, n_alt = -2
   Insn 3490: point = 2210, n_alt = 1
   Insn 3489: point = 2212, n_alt = 7
   Insn 3488: point = 2213, n_alt = 7
   Insn 3487: point = 2214, n_alt = 1
   Insn 3486: point = 2216, n_alt = 7
   Insn 3485: point = 2217, n_alt = 7
   Insn 3484: point = 2218, n_alt = 8
   Insn 3483: point = 2219, n_alt = 4
   Insn 3482: point = 2220, n_alt = 1
   Insn 3481: point = 2222, n_alt = 3
   Insn 3480: point = 2224, n_alt = 0
   Insn 3479: point = 2226, n_alt = 0
   Insn 3478: point = 2228, n_alt = 0
   Insn 3477: point = 2229, n_alt = 0
   Insn 3476: point = 2231, n_alt = 0
   Insn 3475: point = 2233, n_alt = 0
   Insn 3474: point = 2234, n_alt = -2
   Insn 3473: point = 2236, n_alt = 1
   Insn 3472: point = 2238, n_alt = 7
   Insn 3471: point = 2239, n_alt = 1
   Insn 3470: point = 2241, n_alt = 7
  BB 229
   Insn 3467: point = 2243, n_alt = 7
  BB 228
   Insn 3465: point = 2245, n_alt = -1
   Insn 3464: point = 2245, n_alt = 0
   Insn 3463: point = 2246, n_alt = 0
   Insn 3462: point = 2248, n_alt = 0
   Insn 3461: point = 2250, n_alt = 0
   Insn 3460: point = 2251, n_alt = 1
   Insn 3459: point = 2251, n_alt = 0
   Insn 3458: point = 2253, n_alt = 0
   Insn 3457: point = 2254, n_alt = 1
   Insn 3456: point = 2255, n_alt = 7
   Insn 3455: point = 2256, n_alt = 7
   Insn 3454: point = 2257, n_alt = 8
   Insn 3453: point = 2258, n_alt = 1
   Insn 5923: point = 2260, n_alt = 7
	   Creating copy r3043<-r3046@1000
   Insn 3452: point = 2262, n_alt = -2
   Insn 3451: point = 2263, n_alt = 0
   Insn 3450: point = 2263, n_alt = -2
   Insn 3449: point = 2264, n_alt = 2
   Insn 3448: point = 2266, n_alt = -2
   Insn 3447: point = 2268, n_alt = 2
   Insn 3446: point = 2270, n_alt = 7
   Insn 3445: point = 2271, n_alt = 7
   Insn 3444: point = 2272, n_alt = 1
   Insn 3443: point = 2274, n_alt = -2
   Insn 3442: point = 2276, n_alt = 2
   Insn 3441: point = 2278, n_alt = 7
   Insn 3440: point = 2279, n_alt = 7
   Insn 3439: point = 2280, n_alt = 1
   Insn 3438: point = 2282, n_alt = 7
   Insn 3437: point = 2283, n_alt = 7
   Insn 5886: point = 2284, n_alt = 8
	   Creating copy r3016->r3046@1000
   Insn 3436: point = 2286, n_alt = 2
   Insn 5885: point = 2286, n_alt = -2
	Hard reg 21 is preferable by r3016 with profit 1000
   Insn 3435: point = 2288, n_alt = 1
   Insn 3434: point = 2290, n_alt = 7
   Insn 3433: point = 2291, n_alt = 7
   Insn 3432: point = 2292, n_alt = 8
   Insn 3431: point = 2293, n_alt = 1
   Insn 3430: point = 2295, n_alt = 7
   Insn 3429: point = 2297, n_alt = 4
   Insn 3428: point = 2298, n_alt = 1
   Insn 3427: point = 2300, n_alt = 7
   Insn 3426: point = 2302, n_alt = 0
   Insn 3425: point = 2304, n_alt = 4
   Insn 3424: point = 2305, n_alt = 3
   Insn 3423: point = 2307, n_alt = 0
   Insn 3422: point = 2309, n_alt = 0
   Insn 3421: point = 2310, n_alt = 7
   Insn 3420: point = 2312, n_alt = 0
   Insn 3419: point = 2314, n_alt = 4
   Insn 3418: point = 2315, n_alt = 3
   Insn 3417: point = 2317, n_alt = 0
   Insn 3416: point = 2319, n_alt = 0
   Insn 3415: point = 2321, n_alt = 0
   Insn 3414: point = 2322, n_alt = 0
   Insn 3413: point = 2324, n_alt = 0
   Insn 3412: point = 2326, n_alt = 0
   Insn 3411: point = 2327, n_alt = 8
   Insn 3410: point = 2328, n_alt = 1
  BB 227
   Insn 3407: point = 2331, n_alt = 7
  BB 226
   Insn 3405: point = 2333, n_alt = -1
   Insn 3404: point = 2333, n_alt = 0
   Insn 3403: point = 2334, n_alt = 0
   Insn 3402: point = 2336, n_alt = 0
   Insn 3401: point = 2338, n_alt = 0
   Insn 3400: point = 2339, n_alt = 1
   Insn 3399: point = 2339, n_alt = 0
   Insn 3398: point = 2341, n_alt = 0
   Insn 3397: point = 2342, n_alt = 1
   Insn 3396: point = 2342, n_alt = 7
   Insn 3395: point = 2343, n_alt = 8
   Insn 3394: point = 2344, n_alt = 1
   Insn 3393: point = 2346, n_alt = 7
   Insn 3392: point = 2347, n_alt = -2
   Insn 3391: point = 2349, n_alt = 2
   Insn 3390: point = 2351, n_alt = 7
   Insn 3389: point = 2352, n_alt = 7
   Insn 3388: point = 2353, n_alt = 8
   Insn 3387: point = 2354, n_alt = 7
   Insn 3386: point = 2356, n_alt = 4
   Insn 3385: point = 2357, n_alt = 3
   Insn 3384: point = 2359, n_alt = 0
   Insn 3383: point = 2361, n_alt = 0
   Insn 3382: point = 2363, n_alt = 0
   Insn 3381: point = 2364, n_alt = 0
   Insn 3380: point = 2366, n_alt = 0
   Insn 3379: point = 2368, n_alt = 0
   Insn 3378: point = 2370, n_alt = 0
   Insn 3377: point = 2371, n_alt = 1
   Insn 3376: point = 2373, n_alt = 0
   Insn 3375: point = 2375, n_alt = 0
   Insn 3374: point = 2376, n_alt = 8
   Insn 3373: point = 2377, n_alt = 7
   Insn 3372: point = 2379, n_alt = 0
   Insn 3371: point = 2381, n_alt = 4
   Insn 3370: point = 2382, n_alt = 3
   Insn 3369: point = 2384, n_alt = 0
   Insn 3368: point = 2386, n_alt = 0
   Insn 3367: point = 2388, n_alt = 0
   Insn 3366: point = 2389, n_alt = 0
   Insn 3365: point = 2391, n_alt = 0
   Insn 3364: point = 2393, n_alt = 0
   Insn 3363: point = 2395, n_alt = 0
   Insn 3362: point = 2396, n_alt = 1
   Insn 3361: point = 2398, n_alt = 0
   Insn 3360: point = 2400, n_alt = 0
   Insn 3359: point = 2401, n_alt = 8
   Insn 3358: point = 2402, n_alt = 7
   Insn 3357: point = 2404, n_alt = 0
   Insn 3356: point = 2406, n_alt = 4
   Insn 3355: point = 2407, n_alt = 3
   Insn 3354: point = 2409, n_alt = 0
   Insn 3353: point = 2411, n_alt = 0
   Insn 3352: point = 2413, n_alt = 0
   Insn 3351: point = 2414, n_alt = 0
   Insn 3350: point = 2416, n_alt = 0
   Insn 3349: point = 2418, n_alt = 0
   Insn 3348: point = 2420, n_alt = 0
   Insn 3347: point = 2421, n_alt = 1
   Insn 3346: point = 2423, n_alt = 0
   Insn 3345: point = 2425, n_alt = 0
   Insn 3344: point = 2426, n_alt = 8
   Insn 3343: point = 2427, n_alt = 1
   Insn 3342: point = 2429, n_alt = 7
   Insn 3341: point = 2431, n_alt = 4
   Insn 3340: point = 2432, n_alt = 3
   Insn 3339: point = 2434, n_alt = 0
   Insn 3338: point = 2436, n_alt = 0
   Insn 3337: point = 2438, n_alt = 0
   Insn 3336: point = 2439, n_alt = 0
   Insn 3335: point = 2441, n_alt = 0
   Insn 3334: point = 2443, n_alt = 0
   Insn 3333: point = 2444, n_alt = 7
   Insn 3332: point = 2446, n_alt = 0
   Insn 3331: point = 2448, n_alt = 4
   Insn 3330: point = 2449, n_alt = 3
   Insn 3329: point = 2451, n_alt = 0
   Insn 3328: point = 2453, n_alt = 0
   Insn 3327: point = 2455, n_alt = 0
   Insn 3326: point = 2456, n_alt = 0
   Insn 3325: point = 2458, n_alt = 0
   Insn 3324: point = 2460, n_alt = 0
   Insn 3323: point = 2462, n_alt = 0
   Insn 3322: point = 2463, n_alt = 1
   Insn 3321: point = 2465, n_alt = 0
   Insn 3320: point = 2467, n_alt = 0
   Insn 3319: point = 2468, n_alt = 1
   Insn 5884: point = 2469, n_alt = -2
	Hard reg 0 is preferable by r3015 with profit 1000
   Insn 3318: point = 2471, n_alt = 0
   Insn 5883: point = 2472, n_alt = -2
	Hard reg 0 is preferable by r3015 with profit 1000
	Hard reg 1 is preferable by r3015 with profit 1000
   Insn 3317: point = 2474, n_alt = 0
   Insn 3316: point = 2475, n_alt = 0
   Insn 3315: point = 2477, n_alt = 0
   Insn 3314: point = 2479, n_alt = 4
   Insn 3313: point = 2480, n_alt = 3
   Insn 3312: point = 2482, n_alt = 0
   Insn 3311: point = 2484, n_alt = 0
   Insn 3310: point = 2486, n_alt = 0
   Insn 3309: point = 2487, n_alt = 0
   Insn 3308: point = 2489, n_alt = 0
   Insn 3307: point = 2491, n_alt = 0
  BB 224
   Insn 3299: point = 2493, n_alt = 1
  BB 222
   Insn 3291: point = 2494, n_alt = 1
   Insn 3290: point = 2495, n_alt = 0
   Insn 3289: point = 2496, n_alt = 0
  BB 214
   Insn 3243: point = 2497, n_alt = -1
   Insn 3242: point = 2497, n_alt = 0
   Insn 3241: point = 2498, n_alt = 0
   Insn 3240: point = 2499, n_alt = 8
   Insn 3239: point = 2500, n_alt = 7
   Insn 3238: point = 2501, n_alt = 8
   Insn 3237: point = 2502, n_alt = 7
   Insn 3236: point = 2503, n_alt = 8
   Insn 3235: point = 2504, n_alt = 7
   Insn 3234: point = 2505, n_alt = 1
   Insn 3233: point = 2506, n_alt = 0
   Insn 3232: point = 2508, n_alt = 0
   Insn 3231: point = 2510, n_alt = 0
   Insn 3230: point = 2512, n_alt = 0
   Insn 3229: point = 2514, n_alt = 0
   Insn 3228: point = 2516, n_alt = 0
   Insn 3227: point = 2517, n_alt = -2
   Insn 3226: point = 2519, n_alt = -2
   Insn 3225: point = 2521, n_alt = 0
   Insn 3224: point = 2523, n_alt = 0
   Insn 3223: point = 2524, n_alt = -2
   Insn 3222: point = 2526, n_alt = 0
   Insn 3221: point = 2528, n_alt = -2
   Insn 3220: point = 2529, n_alt = 1
   Insn 3219: point = 2531, n_alt = 0
  BB 213
   Insn 3217: point = 2532, n_alt = -1
   Insn 3216: point = 2532, n_alt = 0
   Insn 3215: point = 2533, n_alt = 0
   Insn 3214: point = 2535, n_alt = 0
   Insn 3213: point = 2537, n_alt = 0
   Insn 3212: point = 2539, n_alt = 0
   Insn 3211: point = 2541, n_alt = 0
   Insn 3210: point = 2543, n_alt = 0
   Insn 3209: point = 2544, n_alt = -2
   Insn 3208: point = 2546, n_alt = -2
   Insn 3207: point = 2548, n_alt = 0
   Insn 3206: point = 2550, n_alt = 0
   Insn 3205: point = 2551, n_alt = -2
   Insn 3204: point = 2553, n_alt = 0
   Insn 3203: point = 2555, n_alt = -2
   Insn 3202: point = 2556, n_alt = 1
   Insn 3201: point = 2558, n_alt = 0
  BB 212
   Insn 3199: point = 2559, n_alt = -1
   Insn 3198: point = 2559, n_alt = 0
   Insn 3197: point = 2560, n_alt = 0
  BB 211
   Insn 3194: point = 2561, n_alt = 0
   Insn 3193: point = 2561, n_alt = 3
   Insn 3192: point = 2561, n_alt = 2
   Insn 3191: point = 2561, n_alt = 2
   Insn 3190: point = 2561, n_alt = -2
   Insn 3189: point = 2562, n_alt = -2
   Insn 3188: point = 2563, n_alt = -2
   Insn 3187: point = 2564, n_alt = -2
   Insn 3186: point = 2565, n_alt = 3
   Insn 3185: point = 2566, n_alt = 3
   Insn 3184: point = 2567, n_alt = 3
   Insn 3183: point = 2568, n_alt = 3
  BB 210
   Insn 3180: point = 2569, n_alt = 1
  BB 209
   Insn 3178: point = 2569, n_alt = -1
   Insn 3177: point = 2569, n_alt = 0
   Insn 3176: point = 2570, n_alt = 0
   Insn 3175: point = 2571, n_alt = 1
   Insn 3174: point = 2572, n_alt = 0
   Insn 3173: point = 2573, n_alt = 0
   Insn 3172: point = 2574, n_alt = 1
   Insn 5882: point = 2575, n_alt = -2
	Hard reg 1 is preferable by r3014 with profit 1000
   Insn 3171: point = 2577, n_alt = 0
   Insn 5881: point = 2578, n_alt = -2
	Hard reg 1 is preferable by r3014 with profit 2000
   Insn 3170: point = 2580, n_alt = 2
   Insn 3169: point = 2581, n_alt = 2
   Insn 3168: point = 2582, n_alt = 2
   Insn 3167: point = 2583, n_alt = 0
   Insn 3166: point = 2583, n_alt = 0
   Insn 3165: point = 2583, n_alt = 3
   Insn 3164: point = 2583, n_alt = 2
   Insn 3163: point = 2583, n_alt = 2
   Insn 3162: point = 2583, n_alt = 4
   Insn 3161: point = 2583, n_alt = 4
   Insn 3160: point = 2583, n_alt = -2
   Insn 3159: point = 2584, n_alt = -2
   Insn 3158: point = 2585, n_alt = 0
   Insn 3157: point = 2585, n_alt = 0
   Insn 3156: point = 2585, n_alt = 3
   Insn 3155: point = 2586, n_alt = 3
  BB 383
   Insn 5757: point = 2587, n_alt = -1
  BB 204
   Insn 3105: point = 2587, n_alt = -1
   Insn 3104: point = 2587, n_alt = 0
   Insn 3103: point = 2588, n_alt = 0
   Insn 3102: point = 2590, n_alt = 0
   Insn 3101: point = 2591, n_alt = 0
  BB 208
   Insn 5631: point = 2592, n_alt = -1
   Insn 3149: point = 2592, n_alt = 1
  BB 384
   Insn 5760: point = 2593, n_alt = -1
  BB 206
   Insn 3113: point = 2594, n_alt = -1
   Insn 3112: point = 2594, n_alt = 0
   Insn 3111: point = 2595, n_alt = 0
   Insn 3110: point = 2597, n_alt = 0
   Insn 3109: point = 2598, n_alt = 0
  BB 207
   Insn 5629: point = 2599, n_alt = -1
   Insn 3143: point = 2599, n_alt = 1
   Insn 3142: point = 2599, n_alt = 8
   Insn 3141: point = 2600, n_alt = 4
   Insn 3140: point = 2601, n_alt = 1
   Insn 3139: point = 2603, n_alt = 3
   Insn 3138: point = 2605, n_alt = 0
   Insn 3137: point = 2607, n_alt = 1
   Insn 3136: point = 2609, n_alt = 0
   Insn 3135: point = 2610, n_alt = 0
   Insn 3134: point = 2612, n_alt = 1
   Insn 3133: point = 2614, n_alt = 0
   Insn 3132: point = 2615, n_alt = 7
   Insn 3131: point = 2617, n_alt = 4
   Insn 3130: point = 2618, n_alt = 3
   Insn 3129: point = 2620, n_alt = 0
   Insn 3128: point = 2622, n_alt = 1
   Insn 3127: point = 2624, n_alt = 0
   Insn 3126: point = 2625, n_alt = 0
   Insn 3125: point = 2627, n_alt = 1
   Insn 3124: point = 2629, n_alt = 0
   Insn 3123: point = 2630, n_alt = 7
   Insn 3122: point = 2632, n_alt = 4
   Insn 3121: point = 2633, n_alt = 3
   Insn 3120: point = 2635, n_alt = 0
   Insn 3119: point = 2637, n_alt = 1
   Insn 3118: point = 2639, n_alt = 0
   Insn 3117: point = 2640, n_alt = 0
   Insn 3116: point = 2642, n_alt = 1
   Insn 3115: point = 2644, n_alt = 0
  BB 205
   Insn 3107: point = 2646, n_alt = 1
  BB 203
   Insn 3099: point = 2647, n_alt = 1
   Insn 3098: point = 2648, n_alt = 0
   Insn 3097: point = 2649, n_alt = 0
   Insn 3096: point = 2650, n_alt = 0
   Insn 3095: point = 2650, n_alt = 3
   Insn 3094: point = 2650, n_alt = 4
   Insn 3093: point = 2650, n_alt = -2
   Insn 3092: point = 2651, n_alt = -2
   Insn 3091: point = 2652, n_alt = 4
   Insn 3090: point = 2652, n_alt = 4
   Insn 3089: point = 2652, n_alt = 3
   Insn 3088: point = 2653, n_alt = 3
   Insn 3087: point = 2654, n_alt = 0
   Insn 3086: point = 2654, n_alt = 3
   Insn 3085: point = 2654, n_alt = 4
   Insn 3084: point = 2654, n_alt = -2
   Insn 3083: point = 2655, n_alt = -2
   Insn 3082: point = 2656, n_alt = 4
   Insn 3081: point = 2656, n_alt = 4
   Insn 3080: point = 2656, n_alt = 3
   Insn 3079: point = 2657, n_alt = 3
   Insn 3078: point = 2658, n_alt = 1
   Insn 3077: point = 2659, n_alt = 0
   Insn 3076: point = 2661, n_alt = 0
   Insn 3075: point = 2663, n_alt = 0
   Insn 3074: point = 2665, n_alt = 0
   Insn 3073: point = 2667, n_alt = 0
   Insn 3072: point = 2669, n_alt = 0
   Insn 3071: point = 2670, n_alt = -2
   Insn 3070: point = 2672, n_alt = -2
   Insn 3069: point = 2674, n_alt = 0
   Insn 3068: point = 2676, n_alt = 0
   Insn 3067: point = 2677, n_alt = -2
   Insn 3066: point = 2679, n_alt = 0
   Insn 3065: point = 2681, n_alt = -2
   Insn 3064: point = 2682, n_alt = 1
   Insn 3063: point = 2684, n_alt = 0
  BB 202
   Insn 3061: point = 2685, n_alt = -1
   Insn 3060: point = 2685, n_alt = 0
   Insn 3059: point = 2686, n_alt = 0
   Insn 3058: point = 2688, n_alt = 0
   Insn 3057: point = 2690, n_alt = 0
   Insn 3056: point = 2692, n_alt = 0
   Insn 3055: point = 2694, n_alt = 0
   Insn 3054: point = 2696, n_alt = 0
   Insn 3053: point = 2697, n_alt = -2
   Insn 3052: point = 2699, n_alt = -2
   Insn 3051: point = 2701, n_alt = 0
   Insn 3050: point = 2703, n_alt = 0
   Insn 3049: point = 2704, n_alt = -2
   Insn 3048: point = 2706, n_alt = 0
   Insn 3047: point = 2708, n_alt = -2
   Insn 3046: point = 2709, n_alt = 1
   Insn 3045: point = 2711, n_alt = 0
  BB 201
   Insn 3043: point = 2712, n_alt = -1
   Insn 3042: point = 2712, n_alt = 0
   Insn 3041: point = 2713, n_alt = 0
  BB 200
   Insn 3038: point = 2714, n_alt = 0
   Insn 3037: point = 2714, n_alt = 3
   Insn 3036: point = 2714, n_alt = 2
   Insn 3035: point = 2714, n_alt = 2
   Insn 3034: point = 2714, n_alt = -2
   Insn 3033: point = 2715, n_alt = -2
   Insn 3032: point = 2716, n_alt = -2
   Insn 3031: point = 2717, n_alt = -2
   Insn 3030: point = 2718, n_alt = 3
   Insn 3029: point = 2719, n_alt = 3
   Insn 3028: point = 2720, n_alt = 3
   Insn 3027: point = 2721, n_alt = 3
  BB 199
   Insn 3024: point = 2722, n_alt = 1
  BB 198
   Insn 3022: point = 2722, n_alt = -1
   Insn 3021: point = 2722, n_alt = 0
   Insn 3020: point = 2723, n_alt = 0
   Insn 3019: point = 2724, n_alt = 1
   Insn 3018: point = 2725, n_alt = 0
   Insn 3017: point = 2726, n_alt = 0
   Insn 3016: point = 2727, n_alt = 1
   Insn 5880: point = 2728, n_alt = -2
	Hard reg 1 is preferable by r3013 with profit 1000
   Insn 3015: point = 2730, n_alt = 0
   Insn 5879: point = 2731, n_alt = -2
	Hard reg 1 is preferable by r3013 with profit 2000
   Insn 3014: point = 2733, n_alt = 2
   Insn 3013: point = 2734, n_alt = 2
   Insn 3012: point = 2735, n_alt = 2
   Insn 3011: point = 2736, n_alt = 0
   Insn 3010: point = 2736, n_alt = 0
   Insn 3009: point = 2736, n_alt = 3
   Insn 3008: point = 2736, n_alt = 2
   Insn 3007: point = 2736, n_alt = 2
   Insn 3006: point = 2736, n_alt = 4
   Insn 3005: point = 2736, n_alt = 4
   Insn 3004: point = 2736, n_alt = -2
   Insn 3003: point = 2737, n_alt = -2
   Insn 3002: point = 2738, n_alt = 0
   Insn 3001: point = 2738, n_alt = 0
   Insn 3000: point = 2738, n_alt = 3
   Insn 2999: point = 2739, n_alt = 3
  BB 381
   Insn 5751: point = 2740, n_alt = -1
  BB 193
   Insn 2946: point = 2740, n_alt = -1
   Insn 2945: point = 2740, n_alt = 0
   Insn 2944: point = 2741, n_alt = 0
   Insn 2943: point = 2743, n_alt = 0
   Insn 2942: point = 2744, n_alt = 0
  BB 197
   Insn 5627: point = 2745, n_alt = -1
   Insn 2993: point = 2745, n_alt = 1
  BB 382
   Insn 5754: point = 2746, n_alt = -1
  BB 195
   Insn 2954: point = 2747, n_alt = -1
   Insn 2953: point = 2747, n_alt = 0
   Insn 2952: point = 2748, n_alt = 0
   Insn 2951: point = 2750, n_alt = 0
   Insn 2950: point = 2751, n_alt = 0
  BB 196
   Insn 5625: point = 2752, n_alt = -1
   Insn 2987: point = 2752, n_alt = 1
   Insn 2986: point = 2752, n_alt = 8
   Insn 2985: point = 2753, n_alt = 4
   Insn 2984: point = 2754, n_alt = 1
   Insn 2983: point = 2756, n_alt = 3
   Insn 2982: point = 2758, n_alt = 0
   Insn 2981: point = 2760, n_alt = 1
   Insn 2980: point = 2762, n_alt = 0
   Insn 2979: point = 2763, n_alt = 0
   Insn 2978: point = 2765, n_alt = 1
   Insn 2977: point = 2767, n_alt = 0
   Insn 2976: point = 2768, n_alt = -2
   Insn 2975: point = 2770, n_alt = 2
   Insn 2974: point = 2772, n_alt = 7
   Insn 2973: point = 2773, n_alt = 7
   Insn 2972: point = 2775, n_alt = 4
   Insn 2971: point = 2776, n_alt = 3
   Insn 2970: point = 2778, n_alt = 0
   Insn 2969: point = 2780, n_alt = 1
   Insn 2968: point = 2782, n_alt = 0
   Insn 2967: point = 2783, n_alt = 0
   Insn 2966: point = 2785, n_alt = 1
   Insn 2965: point = 2787, n_alt = 0
   Insn 2964: point = 2788, n_alt = 7
   Insn 2963: point = 2790, n_alt = 4
   Insn 2962: point = 2791, n_alt = 3
   Insn 2961: point = 2793, n_alt = 0
   Insn 2960: point = 2795, n_alt = 1
   Insn 2959: point = 2797, n_alt = 0
   Insn 2958: point = 2798, n_alt = 0
   Insn 2957: point = 2800, n_alt = 1
   Insn 2956: point = 2802, n_alt = 0
  BB 194
   Insn 2948: point = 2804, n_alt = 1
  BB 192
   Insn 2940: point = 2805, n_alt = 1
   Insn 2939: point = 2806, n_alt = 0
   Insn 2938: point = 2807, n_alt = 0
   Insn 2937: point = 2808, n_alt = 0
   Insn 2936: point = 2808, n_alt = 3
   Insn 2935: point = 2808, n_alt = 4
   Insn 2934: point = 2808, n_alt = -2
   Insn 2933: point = 2809, n_alt = -2
   Insn 2932: point = 2810, n_alt = 4
   Insn 2931: point = 2810, n_alt = 4
   Insn 2930: point = 2810, n_alt = 3
   Insn 2929: point = 2811, n_alt = 3
   Insn 2928: point = 2812, n_alt = 0
   Insn 2927: point = 2812, n_alt = 3
   Insn 2926: point = 2812, n_alt = 4
   Insn 2925: point = 2812, n_alt = -2
   Insn 2924: point = 2813, n_alt = -2
   Insn 2923: point = 2814, n_alt = 4
   Insn 2922: point = 2814, n_alt = 4
   Insn 2921: point = 2814, n_alt = 3
   Insn 2920: point = 2815, n_alt = 3
   Insn 2919: point = 2816, n_alt = 1
   Insn 2918: point = 2817, n_alt = 0
   Insn 2917: point = 2819, n_alt = 0
   Insn 2916: point = 2821, n_alt = 0
   Insn 2915: point = 2823, n_alt = 0
   Insn 2914: point = 2825, n_alt = 0
   Insn 2913: point = 2827, n_alt = 0
   Insn 2912: point = 2828, n_alt = -2
   Insn 2911: point = 2830, n_alt = -2
   Insn 2910: point = 2832, n_alt = 0
   Insn 2909: point = 2834, n_alt = 0
   Insn 2908: point = 2835, n_alt = -2
   Insn 2907: point = 2837, n_alt = 0
   Insn 2906: point = 2839, n_alt = -2
   Insn 2905: point = 2840, n_alt = 1
   Insn 2904: point = 2842, n_alt = 0
  BB 379
   Insn 5745: point = 2843, n_alt = -1
  BB 184
   Insn 2827: point = 2843, n_alt = -1
   Insn 2826: point = 2843, n_alt = 0
   Insn 2825: point = 2844, n_alt = 0
   Insn 2824: point = 2846, n_alt = 0
   Insn 2823: point = 2847, n_alt = 0
  BB 191
   Insn 5623: point = 2848, n_alt = -1
   Insn 2898: point = 2848, n_alt = 1
  BB 380
   Insn 5748: point = 2849, n_alt = -1
  BB 186
   Insn 2835: point = 2850, n_alt = -1
   Insn 2834: point = 2850, n_alt = 0
   Insn 2833: point = 2851, n_alt = 0
   Insn 2832: point = 2853, n_alt = 0
   Insn 2831: point = 2854, n_alt = 0
  BB 190
   Insn 5621: point = 2855, n_alt = -1
   Insn 2892: point = 2855, n_alt = 1
  BB 189
   Insn 2889: point = 2856, n_alt = 8
   Insn 2888: point = 2857, n_alt = 7
   Insn 2887: point = 2858, n_alt = 4
   Insn 2886: point = 2859, n_alt = 3
   Insn 2885: point = 2861, n_alt = 0
   Insn 2884: point = 2863, n_alt = 1
   Insn 2883: point = 2865, n_alt = 0
   Insn 2882: point = 2866, n_alt = 0
   Insn 2881: point = 2868, n_alt = 0
   Insn 2880: point = 2870, n_alt = 1
   Insn 2879: point = 2872, n_alt = 0
   Insn 2878: point = 2873, n_alt = 1
   Insn 2877: point = 2875, n_alt = 1
   Insn 2876: point = 2877, n_alt = 0
  BB 188
   Insn 2871: point = 2879, n_alt = -1
   Insn 2870: point = 2879, n_alt = 1
   Insn 2869: point = 2880, n_alt = 7
   Insn 2868: point = 2882, n_alt = 4
   Insn 2867: point = 2883, n_alt = 3
   Insn 2866: point = 2885, n_alt = 0
   Insn 2865: point = 2887, n_alt = 1
   Insn 2864: point = 2889, n_alt = 0
   Insn 2863: point = 2890, n_alt = 0
   Insn 2862: point = 2892, n_alt = 0
   Insn 2861: point = 2894, n_alt = 1
   Insn 2860: point = 2896, n_alt = 0
   Insn 2859: point = 2897, n_alt = 1
   Insn 2858: point = 2899, n_alt = 1
   Insn 2857: point = 2901, n_alt = 0
  BB 187
   Insn 2852: point = 2903, n_alt = -1
   Insn 2851: point = 2903, n_alt = 1
   Insn 2850: point = 2904, n_alt = 7
   Insn 2849: point = 2905, n_alt = 7
   Insn 2848: point = 2907, n_alt = 4
   Insn 2847: point = 2908, n_alt = 3
   Insn 2846: point = 2910, n_alt = 0
   Insn 2845: point = 2912, n_alt = 1
   Insn 2844: point = 2914, n_alt = 0
   Insn 2843: point = 2915, n_alt = 0
   Insn 2842: point = 2917, n_alt = 0
   Insn 2841: point = 2919, n_alt = 1
   Insn 2840: point = 2921, n_alt = 0
   Insn 2839: point = 2922, n_alt = 1
   Insn 2838: point = 2924, n_alt = 1
   Insn 2837: point = 2926, n_alt = 0
  BB 185
   Insn 2829: point = 2928, n_alt = 1
  BB 183
   Insn 2821: point = 2929, n_alt = 1
   Insn 2820: point = 2930, n_alt = 0
   Insn 2819: point = 2931, n_alt = 0
  BB 182
   Insn 2817: point = 2932, n_alt = -1
   Insn 2816: point = 2932, n_alt = 0
   Insn 2815: point = 2933, n_alt = 0
   Insn 2814: point = 2935, n_alt = 0
   Insn 2813: point = 2937, n_alt = 0
   Insn 2812: point = 2939, n_alt = 0
   Insn 2811: point = 2941, n_alt = 0
   Insn 2810: point = 2943, n_alt = 0
   Insn 2809: point = 2944, n_alt = -2
   Insn 2808: point = 2946, n_alt = -2
   Insn 2807: point = 2948, n_alt = 0
   Insn 2806: point = 2950, n_alt = 0
   Insn 2805: point = 2951, n_alt = -2
   Insn 2804: point = 2953, n_alt = 0
   Insn 2803: point = 2955, n_alt = -2
   Insn 2802: point = 2956, n_alt = 1
   Insn 2801: point = 2958, n_alt = 0
  BB 181
   Insn 2799: point = 2959, n_alt = -1
   Insn 2798: point = 2959, n_alt = 0
   Insn 2797: point = 2960, n_alt = 0
  BB 180
   Insn 2794: point = 2961, n_alt = 0
   Insn 2793: point = 2961, n_alt = 3
   Insn 2792: point = 2961, n_alt = 2
   Insn 2791: point = 2961, n_alt = 2
   Insn 2790: point = 2961, n_alt = -2
   Insn 2789: point = 2962, n_alt = -2
   Insn 2788: point = 2963, n_alt = -2
   Insn 2787: point = 2964, n_alt = -2
   Insn 2786: point = 2965, n_alt = 3
   Insn 2785: point = 2966, n_alt = 3
   Insn 2784: point = 2967, n_alt = 3
   Insn 2783: point = 2968, n_alt = 3
  BB 179
   Insn 2780: point = 2969, n_alt = 1
  BB 178
   Insn 2778: point = 2969, n_alt = -1
   Insn 2777: point = 2969, n_alt = 0
   Insn 2776: point = 2970, n_alt = 0
   Insn 2775: point = 2971, n_alt = 1
   Insn 2774: point = 2972, n_alt = 0
   Insn 2773: point = 2973, n_alt = 0
   Insn 2772: point = 2974, n_alt = 1
   Insn 5878: point = 2975, n_alt = -2
	Hard reg 1 is preferable by r3012 with profit 1000
   Insn 2771: point = 2977, n_alt = 0
   Insn 5877: point = 2978, n_alt = -2
	Hard reg 1 is preferable by r3012 with profit 2000
   Insn 2770: point = 2980, n_alt = 2
   Insn 2769: point = 2981, n_alt = 2
   Insn 2768: point = 2982, n_alt = 2
   Insn 2767: point = 2983, n_alt = 0
   Insn 2766: point = 2983, n_alt = 0
   Insn 2765: point = 2983, n_alt = 3
   Insn 2764: point = 2983, n_alt = 2
   Insn 2763: point = 2983, n_alt = 2
   Insn 2762: point = 2983, n_alt = 4
   Insn 2761: point = 2983, n_alt = 4
   Insn 2760: point = 2983, n_alt = -2
   Insn 2759: point = 2984, n_alt = -2
   Insn 2758: point = 2985, n_alt = 0
   Insn 2757: point = 2985, n_alt = 0
   Insn 2756: point = 2985, n_alt = 3
   Insn 2755: point = 2986, n_alt = 3
   Insn 2754: point = 2987, n_alt = 0
   Insn 2753: point = 2987, n_alt = 3
   Insn 2752: point = 2987, n_alt = 4
   Insn 2751: point = 2987, n_alt = -2
   Insn 2750: point = 2988, n_alt = -2
   Insn 2749: point = 2989, n_alt = 4
   Insn 2748: point = 2989, n_alt = 4
   Insn 2747: point = 2989, n_alt = 3
   Insn 2746: point = 2990, n_alt = 3
   Insn 2745: point = 2991, n_alt = 1
   Insn 2744: point = 2992, n_alt = 0
   Insn 2743: point = 2994, n_alt = 0
   Insn 2742: point = 2996, n_alt = 0
   Insn 2741: point = 2998, n_alt = 0
   Insn 2740: point = 3000, n_alt = 0
   Insn 2739: point = 3002, n_alt = 0
   Insn 2738: point = 3003, n_alt = -2
   Insn 2737: point = 3005, n_alt = -2
   Insn 2736: point = 3007, n_alt = 0
   Insn 2735: point = 3009, n_alt = 0
   Insn 2734: point = 3010, n_alt = -2
   Insn 2733: point = 3012, n_alt = 0
   Insn 2732: point = 3014, n_alt = -2
   Insn 2731: point = 3015, n_alt = 1
   Insn 2730: point = 3017, n_alt = 0
  BB 177
   Insn 2728: point = 3018, n_alt = -1
   Insn 2727: point = 3018, n_alt = 0
   Insn 2726: point = 3019, n_alt = 0
   Insn 2725: point = 3021, n_alt = 0
   Insn 2724: point = 3023, n_alt = 0
   Insn 2723: point = 3025, n_alt = 0
   Insn 2722: point = 3027, n_alt = 0
   Insn 2721: point = 3029, n_alt = 0
   Insn 2720: point = 3030, n_alt = -2
   Insn 2719: point = 3032, n_alt = -2
   Insn 2718: point = 3034, n_alt = 0
   Insn 2717: point = 3036, n_alt = 0
   Insn 2716: point = 3037, n_alt = -2
   Insn 2715: point = 3039, n_alt = 0
   Insn 2714: point = 3041, n_alt = -2
   Insn 2713: point = 3042, n_alt = 1
   Insn 2712: point = 3044, n_alt = 0
  BB 176
   Insn 2710: point = 3045, n_alt = -1
   Insn 2709: point = 3045, n_alt = 0
   Insn 2708: point = 3046, n_alt = 0
  BB 175
   Insn 2705: point = 3047, n_alt = 0
   Insn 2704: point = 3047, n_alt = 3
   Insn 2703: point = 3047, n_alt = 2
   Insn 2702: point = 3047, n_alt = 2
   Insn 2701: point = 3047, n_alt = -2
   Insn 2700: point = 3048, n_alt = -2
   Insn 2699: point = 3049, n_alt = -2
   Insn 2698: point = 3050, n_alt = -2
   Insn 2697: point = 3051, n_alt = 3
   Insn 2696: point = 3052, n_alt = 3
   Insn 2695: point = 3053, n_alt = 3
   Insn 2694: point = 3054, n_alt = 3
  BB 174
   Insn 2691: point = 3055, n_alt = 1
  BB 173
   Insn 2689: point = 3055, n_alt = -1
   Insn 2688: point = 3055, n_alt = 0
   Insn 2687: point = 3056, n_alt = 0
   Insn 2686: point = 3057, n_alt = 1
   Insn 2685: point = 3058, n_alt = 0
   Insn 2684: point = 3059, n_alt = 0
   Insn 2683: point = 3060, n_alt = 1
   Insn 5876: point = 3061, n_alt = -2
	Hard reg 1 is preferable by r3011 with profit 1000
   Insn 2682: point = 3063, n_alt = 0
   Insn 5875: point = 3064, n_alt = -2
	Hard reg 1 is preferable by r3011 with profit 2000
   Insn 2681: point = 3066, n_alt = 2
   Insn 2680: point = 3067, n_alt = 2
   Insn 2679: point = 3068, n_alt = 2
   Insn 2678: point = 3069, n_alt = 0
   Insn 2677: point = 3069, n_alt = 0
   Insn 2676: point = 3069, n_alt = 3
   Insn 2675: point = 3069, n_alt = 2
   Insn 2674: point = 3069, n_alt = 2
   Insn 2673: point = 3069, n_alt = 4
   Insn 2672: point = 3069, n_alt = 4
   Insn 2671: point = 3069, n_alt = -2
   Insn 2670: point = 3070, n_alt = -2
   Insn 2669: point = 3071, n_alt = 0
   Insn 2668: point = 3071, n_alt = 0
   Insn 2667: point = 3071, n_alt = 3
   Insn 2666: point = 3072, n_alt = 3
   Insn 2665: point = 3073, n_alt = 0
   Insn 2664: point = 3073, n_alt = 3
   Insn 2663: point = 3073, n_alt = 4
   Insn 2662: point = 3073, n_alt = 4
   Insn 2661: point = 3073, n_alt = 0
   Insn 2660: point = 3073, n_alt = 3
   Insn 2659: point = 3073, n_alt = 4
   Insn 2658: point = 3073, n_alt = -2
   Insn 2657: point = 3074, n_alt = -2
   Insn 2656: point = 3075, n_alt = 4
   Insn 2655: point = 3075, n_alt = 4
   Insn 2654: point = 3075, n_alt = 3
   Insn 2653: point = 3076, n_alt = 3
   Insn 2652: point = 3077, n_alt = 1
   Insn 2651: point = 3078, n_alt = 0
   Insn 2650: point = 3080, n_alt = 0
   Insn 2649: point = 3082, n_alt = 0
   Insn 2648: point = 3084, n_alt = 0
   Insn 2647: point = 3086, n_alt = 0
   Insn 2646: point = 3088, n_alt = 0
   Insn 2645: point = 3089, n_alt = -2
   Insn 2644: point = 3091, n_alt = -2
   Insn 2643: point = 3093, n_alt = 0
   Insn 2642: point = 3095, n_alt = 0
   Insn 2641: point = 3096, n_alt = -2
   Insn 2640: point = 3098, n_alt = 0
   Insn 2639: point = 3100, n_alt = -2
   Insn 2638: point = 3101, n_alt = 1
   Insn 2637: point = 3103, n_alt = 0
  BB 172
   Insn 2635: point = 3104, n_alt = -1
   Insn 2634: point = 3104, n_alt = 0
   Insn 2633: point = 3105, n_alt = 0
   Insn 2632: point = 3107, n_alt = 0
   Insn 2631: point = 3109, n_alt = 0
   Insn 2630: point = 3111, n_alt = 0
   Insn 2629: point = 3113, n_alt = 0
   Insn 2628: point = 3115, n_alt = 0
   Insn 2627: point = 3116, n_alt = -2
   Insn 2626: point = 3118, n_alt = -2
   Insn 2625: point = 3120, n_alt = 0
   Insn 2624: point = 3122, n_alt = 0
   Insn 2623: point = 3123, n_alt = -2
   Insn 2622: point = 3125, n_alt = 0
   Insn 2621: point = 3127, n_alt = -2
   Insn 2620: point = 3128, n_alt = 1
   Insn 2619: point = 3130, n_alt = 0
  BB 171
   Insn 2617: point = 3131, n_alt = -1
   Insn 2616: point = 3131, n_alt = 0
   Insn 2615: point = 3132, n_alt = 0
  BB 170
   Insn 2612: point = 3133, n_alt = 0
   Insn 2611: point = 3133, n_alt = 3
   Insn 2610: point = 3133, n_alt = 2
   Insn 2609: point = 3133, n_alt = 2
   Insn 2608: point = 3133, n_alt = -2
   Insn 2607: point = 3134, n_alt = -2
   Insn 2606: point = 3135, n_alt = -2
   Insn 2605: point = 3136, n_alt = -2
   Insn 2604: point = 3137, n_alt = 3
   Insn 2603: point = 3138, n_alt = 3
   Insn 2602: point = 3139, n_alt = 3
   Insn 2601: point = 3140, n_alt = 3
  BB 169
   Insn 2598: point = 3141, n_alt = 1
  BB 168
   Insn 2596: point = 3141, n_alt = -1
   Insn 2595: point = 3141, n_alt = 0
   Insn 2594: point = 3142, n_alt = 0
   Insn 2593: point = 3143, n_alt = 1
   Insn 2592: point = 3144, n_alt = 0
   Insn 2591: point = 3145, n_alt = 0
   Insn 2590: point = 3146, n_alt = 1
   Insn 5874: point = 3147, n_alt = -2
	Hard reg 1 is preferable by r3010 with profit 1000
   Insn 2589: point = 3149, n_alt = 0
   Insn 5873: point = 3150, n_alt = -2
	Hard reg 1 is preferable by r3010 with profit 2000
   Insn 2588: point = 3152, n_alt = 2
   Insn 2587: point = 3153, n_alt = 2
   Insn 2586: point = 3154, n_alt = 2
   Insn 2585: point = 3155, n_alt = 0
   Insn 2584: point = 3155, n_alt = 0
   Insn 2583: point = 3155, n_alt = 3
   Insn 2582: point = 3155, n_alt = 2
   Insn 2581: point = 3155, n_alt = 2
   Insn 2580: point = 3155, n_alt = 4
   Insn 2579: point = 3155, n_alt = 4
   Insn 2578: point = 3155, n_alt = -2
   Insn 2577: point = 3156, n_alt = -2
   Insn 2576: point = 3157, n_alt = 0
   Insn 2575: point = 3157, n_alt = 0
   Insn 2574: point = 3157, n_alt = 3
   Insn 2573: point = 3158, n_alt = 3
   Insn 2572: point = 3159, n_alt = 0
   Insn 2571: point = 3159, n_alt = 3
   Insn 2570: point = 3159, n_alt = 4
   Insn 2569: point = 3159, n_alt = 4
   Insn 2568: point = 3159, n_alt = 4
   Insn 2567: point = 3159, n_alt = 0
   Insn 2566: point = 3159, n_alt = 3
   Insn 2565: point = 3159, n_alt = 4
   Insn 2564: point = 3159, n_alt = -2
   Insn 2563: point = 3160, n_alt = -2
   Insn 2562: point = 3161, n_alt = 4
   Insn 2561: point = 3161, n_alt = 4
   Insn 2560: point = 3161, n_alt = 3
   Insn 2559: point = 3162, n_alt = 3
   Insn 2558: point = 3163, n_alt = 0
   Insn 2557: point = 3163, n_alt = 3
   Insn 2556: point = 3163, n_alt = 4
   Insn 2555: point = 3163, n_alt = -2
   Insn 2554: point = 3164, n_alt = -2
   Insn 2553: point = 3165, n_alt = 4
   Insn 2552: point = 3165, n_alt = 4
   Insn 2551: point = 3165, n_alt = 3
   Insn 2550: point = 3166, n_alt = 3
   Insn 2549: point = 3167, n_alt = 1
   Insn 2548: point = 3168, n_alt = 0
   Insn 2547: point = 3170, n_alt = 0
   Insn 2546: point = 3172, n_alt = 0
   Insn 2545: point = 3174, n_alt = 0
   Insn 2544: point = 3176, n_alt = 0
   Insn 2543: point = 3178, n_alt = 0
   Insn 2542: point = 3179, n_alt = -2
   Insn 2541: point = 3181, n_alt = -2
   Insn 2540: point = 3183, n_alt = 0
   Insn 2539: point = 3185, n_alt = 0
   Insn 2538: point = 3186, n_alt = -2
   Insn 2537: point = 3188, n_alt = 0
   Insn 2536: point = 3190, n_alt = -2
   Insn 2535: point = 3191, n_alt = 1
   Insn 2534: point = 3193, n_alt = 0
  BB 167
   Insn 2532: point = 3194, n_alt = -1
   Insn 2531: point = 3194, n_alt = 0
   Insn 2530: point = 3195, n_alt = 0
   Insn 2529: point = 3197, n_alt = 0
   Insn 2528: point = 3199, n_alt = 0
   Insn 2527: point = 3201, n_alt = 0
   Insn 2526: point = 3203, n_alt = 0
   Insn 2525: point = 3205, n_alt = 0
   Insn 2524: point = 3206, n_alt = -2
   Insn 2523: point = 3208, n_alt = -2
   Insn 2522: point = 3210, n_alt = 0
   Insn 2521: point = 3212, n_alt = 0
   Insn 2520: point = 3213, n_alt = -2
   Insn 2519: point = 3215, n_alt = 0
   Insn 2518: point = 3217, n_alt = -2
   Insn 2517: point = 3218, n_alt = 1
   Insn 2516: point = 3220, n_alt = 0
  BB 166
   Insn 2514: point = 3221, n_alt = -1
   Insn 2513: point = 3221, n_alt = 0
   Insn 2512: point = 3222, n_alt = 0
  BB 165
   Insn 2509: point = 3223, n_alt = 0
   Insn 2508: point = 3223, n_alt = 3
   Insn 2507: point = 3223, n_alt = 2
   Insn 2506: point = 3223, n_alt = 2
   Insn 2505: point = 3223, n_alt = -2
   Insn 2504: point = 3224, n_alt = -2
   Insn 2503: point = 3225, n_alt = -2
   Insn 2502: point = 3226, n_alt = -2
   Insn 2501: point = 3227, n_alt = 3
   Insn 2500: point = 3228, n_alt = 3
   Insn 2499: point = 3229, n_alt = 3
   Insn 2498: point = 3230, n_alt = 3
  BB 164
   Insn 2495: point = 3231, n_alt = 1
  BB 163
   Insn 2493: point = 3231, n_alt = -1
   Insn 2492: point = 3231, n_alt = 0
   Insn 2491: point = 3232, n_alt = 0
   Insn 2490: point = 3233, n_alt = 1
   Insn 2489: point = 3234, n_alt = 0
   Insn 2488: point = 3235, n_alt = 0
   Insn 2487: point = 3236, n_alt = 1
   Insn 5872: point = 3237, n_alt = -2
	Hard reg 1 is preferable by r3009 with profit 1000
   Insn 2486: point = 3239, n_alt = 0
   Insn 5871: point = 3240, n_alt = -2
	Hard reg 1 is preferable by r3009 with profit 2000
   Insn 2485: point = 3242, n_alt = 2
   Insn 2484: point = 3243, n_alt = 2
   Insn 2483: point = 3244, n_alt = 2
   Insn 2482: point = 3245, n_alt = 0
   Insn 2481: point = 3245, n_alt = 0
   Insn 2480: point = 3245, n_alt = 3
   Insn 2479: point = 3245, n_alt = 2
   Insn 2478: point = 3245, n_alt = 2
   Insn 2477: point = 3245, n_alt = 4
   Insn 2476: point = 3245, n_alt = 4
   Insn 2475: point = 3245, n_alt = -2
   Insn 2474: point = 3246, n_alt = -2
   Insn 2473: point = 3247, n_alt = 0
   Insn 2472: point = 3247, n_alt = 0
   Insn 2471: point = 3247, n_alt = 3
   Insn 2470: point = 3248, n_alt = 3
   Insn 2469: point = 3249, n_alt = 0
   Insn 2468: point = 3249, n_alt = 3
   Insn 2467: point = 3249, n_alt = 4
   Insn 2466: point = 3249, n_alt = -2
   Insn 2465: point = 3250, n_alt = -2
   Insn 2464: point = 3251, n_alt = 4
   Insn 2463: point = 3251, n_alt = 4
   Insn 2462: point = 3251, n_alt = 3
   Insn 2461: point = 3252, n_alt = 3
   Insn 2460: point = 3253, n_alt = 1
   Insn 2459: point = 3254, n_alt = 0
   Insn 2458: point = 3256, n_alt = 0
   Insn 2457: point = 3258, n_alt = 0
   Insn 2456: point = 3260, n_alt = 0
   Insn 2455: point = 3262, n_alt = 0
   Insn 2454: point = 3264, n_alt = 0
   Insn 2453: point = 3265, n_alt = -2
   Insn 2452: point = 3267, n_alt = -2
   Insn 2451: point = 3269, n_alt = 0
   Insn 2450: point = 3271, n_alt = 0
   Insn 2449: point = 3272, n_alt = -2
   Insn 2448: point = 3274, n_alt = 0
   Insn 2447: point = 3276, n_alt = -2
   Insn 2446: point = 3277, n_alt = 1
   Insn 2445: point = 3279, n_alt = 0
  BB 162
   Insn 2443: point = 3280, n_alt = -1
   Insn 2442: point = 3280, n_alt = 0
   Insn 2441: point = 3281, n_alt = 0
   Insn 2440: point = 3283, n_alt = 0
   Insn 2439: point = 3285, n_alt = 0
   Insn 2438: point = 3287, n_alt = 0
   Insn 2437: point = 3289, n_alt = 0
   Insn 2436: point = 3291, n_alt = 0
   Insn 2435: point = 3292, n_alt = -2
   Insn 2434: point = 3294, n_alt = -2
   Insn 2433: point = 3296, n_alt = 0
   Insn 2432: point = 3298, n_alt = 0
   Insn 2431: point = 3299, n_alt = -2
   Insn 2430: point = 3301, n_alt = 0
   Insn 2429: point = 3303, n_alt = -2
   Insn 2428: point = 3304, n_alt = 1
   Insn 2427: point = 3306, n_alt = 0
  BB 161
   Insn 2425: point = 3307, n_alt = -1
   Insn 2424: point = 3307, n_alt = 0
   Insn 2423: point = 3308, n_alt = 0
  BB 160
   Insn 2420: point = 3309, n_alt = 0
   Insn 2419: point = 3309, n_alt = 3
   Insn 2418: point = 3309, n_alt = 2
   Insn 2417: point = 3309, n_alt = 2
   Insn 2416: point = 3309, n_alt = -2
   Insn 2415: point = 3310, n_alt = -2
   Insn 2414: point = 3311, n_alt = -2
   Insn 2413: point = 3312, n_alt = -2
   Insn 2412: point = 3313, n_alt = 3
   Insn 2411: point = 3314, n_alt = 3
   Insn 2410: point = 3315, n_alt = 3
   Insn 2409: point = 3316, n_alt = 3
  BB 159
   Insn 2407: point = 3317, n_alt = -1
   Insn 2406: point = 3317, n_alt = 0
   Insn 2405: point = 3318, n_alt = 0
  BB 158
   Insn 2402: point = 3319, n_alt = 1
  BB 157
   Insn 2400: point = 3319, n_alt = -1
   Insn 2399: point = 3319, n_alt = 0
   Insn 2398: point = 3320, n_alt = 0
   Insn 2397: point = 3321, n_alt = 1
   Insn 2396: point = 3322, n_alt = 0
   Insn 2395: point = 3323, n_alt = 0
   Insn 2394: point = 3324, n_alt = 1
   Insn 5870: point = 3325, n_alt = -2
	Hard reg 1 is preferable by r3008 with profit 1000
   Insn 2393: point = 3327, n_alt = 0
   Insn 5869: point = 3328, n_alt = -2
	Hard reg 1 is preferable by r3008 with profit 2000
   Insn 2392: point = 3330, n_alt = 2
   Insn 2391: point = 3331, n_alt = 2
   Insn 2390: point = 3332, n_alt = 2
  BB 156
   Insn 2387: point = 3333, n_alt = 0
   Insn 2386: point = 3333, n_alt = 3
   Insn 2385: point = 3333, n_alt = 2
   Insn 2384: point = 3333, n_alt = 2
   Insn 2383: point = 3333, n_alt = -2
   Insn 2382: point = 3334, n_alt = -2
   Insn 2381: point = 3335, n_alt = -2
   Insn 2380: point = 3336, n_alt = -2
   Insn 2379: point = 3337, n_alt = 3
   Insn 2378: point = 3338, n_alt = 3
   Insn 2377: point = 3339, n_alt = 3
   Insn 2376: point = 3340, n_alt = 3
  BB 155
   Insn 2374: point = 3341, n_alt = -1
   Insn 2373: point = 3341, n_alt = 0
   Insn 2372: point = 3342, n_alt = 0
  BB 154
   Insn 2369: point = 3343, n_alt = 1
  BB 153
   Insn 2367: point = 3343, n_alt = -1
   Insn 2366: point = 3343, n_alt = 0
   Insn 2365: point = 3344, n_alt = 0
   Insn 2364: point = 3345, n_alt = 1
   Insn 2363: point = 3346, n_alt = 0
   Insn 2362: point = 3347, n_alt = 0
   Insn 2361: point = 3348, n_alt = 1
   Insn 5868: point = 3349, n_alt = -2
	Hard reg 1 is preferable by r3007 with profit 1000
   Insn 2360: point = 3351, n_alt = 0
   Insn 5867: point = 3352, n_alt = -2
	Hard reg 1 is preferable by r3007 with profit 2000
   Insn 2359: point = 3354, n_alt = 2
   Insn 2358: point = 3355, n_alt = 2
   Insn 2357: point = 3356, n_alt = 2
   Insn 2356: point = 3357, n_alt = 0
   Insn 2355: point = 3357, n_alt = 0
   Insn 2354: point = 3357, n_alt = 3
   Insn 2353: point = 3357, n_alt = 2
   Insn 2352: point = 3357, n_alt = 2
   Insn 2351: point = 3357, n_alt = 4
   Insn 2350: point = 3357, n_alt = 4
   Insn 2349: point = 3357, n_alt = -2
   Insn 2348: point = 3358, n_alt = -2
   Insn 2347: point = 3359, n_alt = 0
   Insn 2346: point = 3359, n_alt = 0
   Insn 2345: point = 3359, n_alt = 3
   Insn 2344: point = 3360, n_alt = 3
   Insn 2343: point = 3361, n_alt = 0
   Insn 2342: point = 3361, n_alt = 3
   Insn 2341: point = 3361, n_alt = 4
   Insn 2340: point = 3361, n_alt = -2
   Insn 2339: point = 3362, n_alt = -2
   Insn 2338: point = 3363, n_alt = 4
   Insn 2337: point = 3363, n_alt = 4
   Insn 2336: point = 3363, n_alt = 3
   Insn 2335: point = 3364, n_alt = 3
   Insn 2334: point = 3365, n_alt = 1
   Insn 2333: point = 3366, n_alt = 0
   Insn 2332: point = 3368, n_alt = 0
   Insn 2331: point = 3370, n_alt = 0
   Insn 2330: point = 3372, n_alt = 0
   Insn 2329: point = 3374, n_alt = 0
   Insn 2328: point = 3376, n_alt = 0
   Insn 2327: point = 3377, n_alt = -2
   Insn 2326: point = 3379, n_alt = -2
   Insn 2325: point = 3381, n_alt = 0
   Insn 2324: point = 3383, n_alt = 0
   Insn 2323: point = 3384, n_alt = -2
   Insn 2322: point = 3386, n_alt = 0
   Insn 2321: point = 3388, n_alt = -2
   Insn 2320: point = 3389, n_alt = 1
   Insn 2319: point = 3391, n_alt = 0
   Insn 2318: point = 3392, n_alt = 0
   Insn 2317: point = 3392, n_alt = 3
   Insn 2316: point = 3392, n_alt = 4
   Insn 2315: point = 3392, n_alt = -2
   Insn 2314: point = 3393, n_alt = -2
   Insn 2313: point = 3394, n_alt = 4
   Insn 2312: point = 3394, n_alt = 4
   Insn 2311: point = 3394, n_alt = 3
   Insn 2310: point = 3395, n_alt = 3
   Insn 2309: point = 3396, n_alt = 1
   Insn 2308: point = 3397, n_alt = 0
   Insn 2307: point = 3399, n_alt = 0
   Insn 2306: point = 3401, n_alt = 0
   Insn 2305: point = 3403, n_alt = 0
   Insn 2304: point = 3405, n_alt = 0
   Insn 2303: point = 3407, n_alt = 0
   Insn 2302: point = 3408, n_alt = -2
   Insn 2301: point = 3410, n_alt = -2
   Insn 2300: point = 3412, n_alt = 0
   Insn 2299: point = 3414, n_alt = 0
   Insn 2298: point = 3415, n_alt = -2
   Insn 2297: point = 3417, n_alt = 0
   Insn 2296: point = 3419, n_alt = -2
   Insn 2295: point = 3420, n_alt = 1
   Insn 2294: point = 3422, n_alt = 0
  BB 152
   Insn 2291: point = 3423, n_alt = -1
   Insn 2290: point = 3423, n_alt = 0
   Insn 2289: point = 3424, n_alt = 0
   Insn 2288: point = 3426, n_alt = 0
   Insn 2287: point = 3428, n_alt = 0
   Insn 2286: point = 3430, n_alt = 0
   Insn 2285: point = 3432, n_alt = 0
   Insn 2284: point = 3434, n_alt = 0
   Insn 2283: point = 3435, n_alt = -2
   Insn 2282: point = 3437, n_alt = -2
   Insn 2281: point = 3439, n_alt = 0
   Insn 2280: point = 3441, n_alt = 0
   Insn 2279: point = 3442, n_alt = -2
   Insn 2278: point = 3444, n_alt = 0
   Insn 2277: point = 3446, n_alt = -2
   Insn 2276: point = 3447, n_alt = 1
   Insn 2275: point = 3449, n_alt = 0
  BB 151
   Insn 2273: point = 3450, n_alt = -1
   Insn 2272: point = 3450, n_alt = 0
   Insn 2271: point = 3451, n_alt = 0
   Insn 2270: point = 3453, n_alt = 0
   Insn 2269: point = 3455, n_alt = 0
   Insn 2268: point = 3457, n_alt = 0
   Insn 2267: point = 3459, n_alt = 0
   Insn 2266: point = 3461, n_alt = 0
   Insn 2265: point = 3462, n_alt = -2
   Insn 2264: point = 3464, n_alt = -2
   Insn 2263: point = 3466, n_alt = 0
   Insn 2262: point = 3468, n_alt = 0
   Insn 2261: point = 3469, n_alt = -2
   Insn 2260: point = 3471, n_alt = 0
   Insn 2259: point = 3473, n_alt = -2
   Insn 2258: point = 3474, n_alt = 1
   Insn 2257: point = 3476, n_alt = 0
  BB 150
   Insn 2254: point = 3477, n_alt = -1
   Insn 2253: point = 3477, n_alt = 0
   Insn 2252: point = 3478, n_alt = 0
  BB 149
   Insn 2250: point = 3479, n_alt = -1
   Insn 2249: point = 3479, n_alt = 0
   Insn 2248: point = 3480, n_alt = 0
  BB 148
   Insn 2245: point = 3481, n_alt = 0
   Insn 2244: point = 3481, n_alt = 3
   Insn 2243: point = 3481, n_alt = 2
   Insn 2242: point = 3481, n_alt = 2
   Insn 2241: point = 3481, n_alt = -2
   Insn 2240: point = 3482, n_alt = -2
   Insn 2239: point = 3483, n_alt = -2
   Insn 2238: point = 3484, n_alt = -2
   Insn 2237: point = 3485, n_alt = 3
   Insn 2236: point = 3486, n_alt = 3
   Insn 2235: point = 3487, n_alt = 3
   Insn 2234: point = 3488, n_alt = 3
  BB 147
   Insn 2231: point = 3489, n_alt = 1
  BB 146
   Insn 2229: point = 3489, n_alt = -1
   Insn 2228: point = 3489, n_alt = 0
   Insn 2227: point = 3490, n_alt = 0
   Insn 2226: point = 3491, n_alt = 1
   Insn 2225: point = 3492, n_alt = 0
   Insn 2224: point = 3493, n_alt = 0
   Insn 2223: point = 3494, n_alt = 1
   Insn 5866: point = 3495, n_alt = -2
	Hard reg 1 is preferable by r3006 with profit 1000
   Insn 2222: point = 3497, n_alt = 0
   Insn 5865: point = 3498, n_alt = -2
	Hard reg 1 is preferable by r3006 with profit 2000
   Insn 2221: point = 3500, n_alt = 2
   Insn 2220: point = 3501, n_alt = 2
   Insn 2219: point = 3502, n_alt = 2
   Insn 2218: point = 3503, n_alt = 0
   Insn 2217: point = 3503, n_alt = 0
   Insn 2216: point = 3503, n_alt = 3
   Insn 2215: point = 3503, n_alt = 2
   Insn 2214: point = 3503, n_alt = 2
   Insn 2213: point = 3503, n_alt = 4
   Insn 2212: point = 3503, n_alt = 4
   Insn 2211: point = 3503, n_alt = -2
   Insn 2210: point = 3504, n_alt = -2
   Insn 2209: point = 3505, n_alt = 0
   Insn 2208: point = 3505, n_alt = 0
   Insn 2207: point = 3505, n_alt = 3
   Insn 2206: point = 3506, n_alt = 3
   Insn 2205: point = 3507, n_alt = 0
   Insn 2204: point = 3507, n_alt = 3
   Insn 2203: point = 3507, n_alt = 4
   Insn 2202: point = 3507, n_alt = 4
   Insn 2201: point = 3507, n_alt = 4
   Insn 2200: point = 3507, n_alt = 2
   Insn 2199: point = 3507, n_alt = 4
   Insn 2198: point = 3507, n_alt = 0
   Insn 2197: point = 3507, n_alt = 3
   Insn 2196: point = 3507, n_alt = 4
   Insn 2195: point = 3507, n_alt = -2
   Insn 2194: point = 3508, n_alt = -2
   Insn 2193: point = 3509, n_alt = 4
   Insn 2192: point = 3509, n_alt = 4
   Insn 2191: point = 3509, n_alt = 3
   Insn 2190: point = 3510, n_alt = 3
   Insn 2189: point = 3511, n_alt = 0
   Insn 2188: point = 3511, n_alt = 3
   Insn 2187: point = 3511, n_alt = 4
   Insn 2186: point = 3511, n_alt = -2
   Insn 2185: point = 3512, n_alt = -2
   Insn 2184: point = 3513, n_alt = 4
   Insn 2183: point = 3513, n_alt = 4
   Insn 2182: point = 3513, n_alt = 3
   Insn 2181: point = 3514, n_alt = 3
   Insn 2180: point = 3515, n_alt = 0
   Insn 2179: point = 3515, n_alt = 3
   Insn 2178: point = 3515, n_alt = 4
   Insn 2177: point = 3515, n_alt = -2
   Insn 2176: point = 3516, n_alt = -2
   Insn 2175: point = 3517, n_alt = 4
   Insn 2174: point = 3517, n_alt = 4
   Insn 2173: point = 3517, n_alt = 3
   Insn 2172: point = 3518, n_alt = 3
   Insn 2171: point = 3519, n_alt = 1
   Insn 2170: point = 3520, n_alt = 0
   Insn 2169: point = 3522, n_alt = 0
   Insn 2168: point = 3524, n_alt = 0
   Insn 2167: point = 3526, n_alt = 0
   Insn 2166: point = 3528, n_alt = 0
   Insn 2165: point = 3530, n_alt = 0
   Insn 2164: point = 3531, n_alt = -2
   Insn 2163: point = 3533, n_alt = -2
   Insn 2162: point = 3535, n_alt = 0
   Insn 2161: point = 3537, n_alt = 0
   Insn 2160: point = 3538, n_alt = -2
   Insn 2159: point = 3540, n_alt = 0
   Insn 2158: point = 3542, n_alt = -2
   Insn 2157: point = 3543, n_alt = 1
   Insn 2156: point = 3545, n_alt = 0
  BB 145
   Insn 2154: point = 3546, n_alt = -1
   Insn 2153: point = 3546, n_alt = 0
   Insn 2152: point = 3547, n_alt = 0
   Insn 2151: point = 3549, n_alt = 0
   Insn 2150: point = 3551, n_alt = 0
   Insn 2149: point = 3553, n_alt = 0
   Insn 2148: point = 3555, n_alt = 0
   Insn 2147: point = 3557, n_alt = 0
   Insn 2146: point = 3558, n_alt = -2
   Insn 2145: point = 3560, n_alt = -2
   Insn 2144: point = 3562, n_alt = 0
   Insn 2143: point = 3564, n_alt = 0
   Insn 2142: point = 3565, n_alt = -2
   Insn 2141: point = 3567, n_alt = 0
   Insn 2140: point = 3569, n_alt = -2
   Insn 2139: point = 3570, n_alt = 1
   Insn 2138: point = 3572, n_alt = 0
  BB 144
   Insn 2136: point = 3573, n_alt = -1
   Insn 2135: point = 3573, n_alt = 0
   Insn 2134: point = 3574, n_alt = 0
  BB 143
   Insn 2131: point = 3575, n_alt = 0
   Insn 2130: point = 3575, n_alt = 3
   Insn 2129: point = 3575, n_alt = 2
   Insn 2128: point = 3575, n_alt = 2
   Insn 2127: point = 3575, n_alt = -2
   Insn 2126: point = 3576, n_alt = -2
   Insn 2125: point = 3577, n_alt = -2
   Insn 2124: point = 3578, n_alt = -2
   Insn 2123: point = 3579, n_alt = 3
   Insn 2122: point = 3580, n_alt = 3
   Insn 2121: point = 3581, n_alt = 3
   Insn 2120: point = 3582, n_alt = 3
  BB 142
   Insn 2117: point = 3583, n_alt = 1
  BB 141
   Insn 2115: point = 3583, n_alt = -1
   Insn 2114: point = 3583, n_alt = 0
   Insn 2113: point = 3584, n_alt = 0
   Insn 2112: point = 3585, n_alt = 1
   Insn 2111: point = 3586, n_alt = 0
   Insn 2110: point = 3587, n_alt = 0
   Insn 2109: point = 3588, n_alt = 1
   Insn 5864: point = 3589, n_alt = -2
	Hard reg 1 is preferable by r3005 with profit 1000
   Insn 2108: point = 3591, n_alt = 0
   Insn 5863: point = 3592, n_alt = -2
	Hard reg 1 is preferable by r3005 with profit 2000
   Insn 2107: point = 3594, n_alt = 2
   Insn 2106: point = 3595, n_alt = 2
   Insn 2105: point = 3596, n_alt = 2
   Insn 2104: point = 3597, n_alt = 0
   Insn 2103: point = 3597, n_alt = 3
   Insn 2102: point = 3597, n_alt = -2
   Insn 2101: point = 3598, n_alt = 2
   Insn 2100: point = 3598, n_alt = 2
   Insn 2099: point = 3598, n_alt = -2
   Insn 2098: point = 3599, n_alt = -2
   Insn 2097: point = 3600, n_alt = 3
   Insn 2096: point = 3601, n_alt = 3
   Insn 2095: point = 3602, n_alt = 3
   Insn 2094: point = 3603, n_alt = 0
   Insn 2093: point = 3603, n_alt = 0
   Insn 2092: point = 3603, n_alt = 3
   Insn 2091: point = 3603, n_alt = 2
   Insn 2090: point = 3603, n_alt = 2
   Insn 2089: point = 3603, n_alt = 4
   Insn 2088: point = 3603, n_alt = 4
   Insn 2087: point = 3603, n_alt = -2
   Insn 2086: point = 3604, n_alt = -2
   Insn 2085: point = 3605, n_alt = 0
   Insn 2084: point = 3605, n_alt = 0
   Insn 2083: point = 3605, n_alt = 3
   Insn 2082: point = 3606, n_alt = 3
   Insn 2081: point = 3607, n_alt = 0
   Insn 2080: point = 3607, n_alt = 3
   Insn 2079: point = 3607, n_alt = 4
   Insn 2078: point = 3607, n_alt = -2
   Insn 2077: point = 3608, n_alt = -2
   Insn 2076: point = 3609, n_alt = 4
   Insn 2075: point = 3609, n_alt = 4
   Insn 2074: point = 3609, n_alt = 3
   Insn 2073: point = 3610, n_alt = 3
   Insn 2072: point = 3611, n_alt = 1
   Insn 2071: point = 3612, n_alt = 0
   Insn 2070: point = 3614, n_alt = 0
   Insn 2069: point = 3616, n_alt = 0
   Insn 2068: point = 3618, n_alt = 0
   Insn 2067: point = 3620, n_alt = 0
   Insn 2066: point = 3622, n_alt = 0
   Insn 2065: point = 3623, n_alt = -2
   Insn 2064: point = 3625, n_alt = -2
   Insn 2063: point = 3627, n_alt = 0
   Insn 2062: point = 3629, n_alt = 0
   Insn 2061: point = 3630, n_alt = -2
   Insn 2060: point = 3632, n_alt = 0
   Insn 2059: point = 3634, n_alt = -2
   Insn 2058: point = 3635, n_alt = 1
   Insn 2057: point = 3637, n_alt = 0
  BB 140
   Insn 2055: point = 3638, n_alt = -1
   Insn 2054: point = 3638, n_alt = 0
   Insn 2053: point = 3639, n_alt = 0
   Insn 2052: point = 3641, n_alt = 0
   Insn 2051: point = 3643, n_alt = 0
   Insn 2050: point = 3645, n_alt = 0
   Insn 2049: point = 3647, n_alt = 0
   Insn 2048: point = 3649, n_alt = 0
   Insn 2047: point = 3650, n_alt = -2
   Insn 2046: point = 3652, n_alt = -2
   Insn 2045: point = 3654, n_alt = 0
   Insn 2044: point = 3656, n_alt = 0
   Insn 2043: point = 3657, n_alt = -2
   Insn 2042: point = 3659, n_alt = 0
   Insn 2041: point = 3661, n_alt = -2
   Insn 2040: point = 3662, n_alt = 1
   Insn 2039: point = 3664, n_alt = 0
  BB 139
   Insn 2037: point = 3665, n_alt = -1
   Insn 2036: point = 3665, n_alt = 0
   Insn 2035: point = 3666, n_alt = 0
  BB 138
   Insn 2032: point = 3667, n_alt = 0
   Insn 2031: point = 3667, n_alt = 3
   Insn 2030: point = 3667, n_alt = 2
   Insn 2029: point = 3667, n_alt = 2
   Insn 2028: point = 3667, n_alt = -2
   Insn 2027: point = 3668, n_alt = -2
   Insn 2026: point = 3669, n_alt = -2
   Insn 2025: point = 3670, n_alt = -2
   Insn 2024: point = 3671, n_alt = 3
   Insn 2023: point = 3672, n_alt = 3
   Insn 2022: point = 3673, n_alt = 3
   Insn 2021: point = 3674, n_alt = 3
  BB 137
   Insn 2018: point = 3675, n_alt = 1
  BB 136
   Insn 2016: point = 3675, n_alt = -1
   Insn 2015: point = 3675, n_alt = 0
   Insn 2014: point = 3676, n_alt = 0
   Insn 2013: point = 3677, n_alt = 1
   Insn 2012: point = 3678, n_alt = 0
   Insn 2011: point = 3679, n_alt = 0
   Insn 2010: point = 3680, n_alt = 1
   Insn 5862: point = 3681, n_alt = -2
	Hard reg 1 is preferable by r3004 with profit 1000
   Insn 2009: point = 3683, n_alt = 0
   Insn 5861: point = 3684, n_alt = -2
	Hard reg 1 is preferable by r3004 with profit 2000
   Insn 2008: point = 3686, n_alt = 2
   Insn 2007: point = 3687, n_alt = 2
   Insn 2006: point = 3688, n_alt = 2
   Insn 2005: point = 3689, n_alt = 0
   Insn 2004: point = 3689, n_alt = 0
   Insn 2003: point = 3689, n_alt = 3
   Insn 2002: point = 3689, n_alt = 2
   Insn 2001: point = 3689, n_alt = 2
   Insn 2000: point = 3689, n_alt = 4
   Insn 1999: point = 3689, n_alt = 4
   Insn 1998: point = 3689, n_alt = -2
   Insn 1997: point = 3690, n_alt = -2
   Insn 1996: point = 3691, n_alt = 0
   Insn 1995: point = 3691, n_alt = 0
   Insn 1994: point = 3691, n_alt = 3
   Insn 1993: point = 3692, n_alt = 3
   Insn 1992: point = 3693, n_alt = 0
   Insn 1991: point = 3693, n_alt = 3
   Insn 1990: point = 3693, n_alt = 4
   Insn 1989: point = 3693, n_alt = 4
   Insn 1988: point = 3693, n_alt = 4
   Insn 1987: point = 3693, n_alt = 4
   Insn 1986: point = 3693, n_alt = 0
   Insn 1985: point = 3693, n_alt = 3
   Insn 1984: point = 3693, n_alt = 4
   Insn 1983: point = 3693, n_alt = -2
   Insn 1982: point = 3694, n_alt = -2
   Insn 1981: point = 3695, n_alt = 4
   Insn 1980: point = 3695, n_alt = 4
   Insn 1979: point = 3695, n_alt = 3
   Insn 1978: point = 3696, n_alt = 3
   Insn 1977: point = 3697, n_alt = 0
   Insn 1976: point = 3697, n_alt = 3
   Insn 1975: point = 3697, n_alt = 4
   Insn 1974: point = 3697, n_alt = -2
   Insn 1973: point = 3698, n_alt = -2
   Insn 1972: point = 3699, n_alt = 4
   Insn 1971: point = 3699, n_alt = 4
   Insn 1970: point = 3699, n_alt = 3
   Insn 1969: point = 3700, n_alt = 3
   Insn 1968: point = 3701, n_alt = 0
   Insn 1967: point = 3701, n_alt = 3
   Insn 1966: point = 3701, n_alt = 4
   Insn 1965: point = 3701, n_alt = -2
   Insn 1964: point = 3702, n_alt = -2
   Insn 1963: point = 3703, n_alt = 4
   Insn 1962: point = 3703, n_alt = 4
   Insn 1961: point = 3703, n_alt = 3
   Insn 1960: point = 3704, n_alt = 3
   Insn 1959: point = 3705, n_alt = 1
   Insn 1958: point = 3706, n_alt = 0
   Insn 1957: point = 3708, n_alt = 0
   Insn 1956: point = 3710, n_alt = 0
   Insn 1955: point = 3712, n_alt = 0
   Insn 1954: point = 3714, n_alt = 0
   Insn 1953: point = 3716, n_alt = 0
   Insn 1952: point = 3717, n_alt = -2
   Insn 1951: point = 3719, n_alt = -2
   Insn 1950: point = 3721, n_alt = 0
   Insn 1949: point = 3723, n_alt = 0
   Insn 1948: point = 3724, n_alt = -2
   Insn 1947: point = 3726, n_alt = 0
   Insn 1946: point = 3728, n_alt = -2
   Insn 1945: point = 3729, n_alt = 1
   Insn 1944: point = 3731, n_alt = 0
  BB 135
   Insn 1942: point = 3732, n_alt = -1
   Insn 1941: point = 3732, n_alt = 0
   Insn 1940: point = 3733, n_alt = 0
   Insn 1939: point = 3735, n_alt = 0
   Insn 1938: point = 3737, n_alt = 0
   Insn 1937: point = 3739, n_alt = 0
   Insn 1936: point = 3741, n_alt = 0
   Insn 1935: point = 3743, n_alt = 0
   Insn 1934: point = 3744, n_alt = -2
   Insn 1933: point = 3746, n_alt = -2
   Insn 1932: point = 3748, n_alt = 0
   Insn 1931: point = 3750, n_alt = 0
   Insn 1930: point = 3751, n_alt = -2
   Insn 1929: point = 3753, n_alt = 0
   Insn 1928: point = 3755, n_alt = -2
   Insn 1927: point = 3756, n_alt = 1
   Insn 1926: point = 3758, n_alt = 0
  BB 134
   Insn 1924: point = 3759, n_alt = -1
   Insn 1923: point = 3759, n_alt = 0
   Insn 1922: point = 3760, n_alt = 0
  BB 133
   Insn 1919: point = 3761, n_alt = 0
   Insn 1918: point = 3761, n_alt = 3
   Insn 1917: point = 3761, n_alt = 2
   Insn 1916: point = 3761, n_alt = 2
   Insn 1915: point = 3761, n_alt = -2
   Insn 1914: point = 3762, n_alt = -2
   Insn 1913: point = 3763, n_alt = -2
   Insn 1912: point = 3764, n_alt = -2
   Insn 1911: point = 3765, n_alt = 3
   Insn 1910: point = 3766, n_alt = 3
   Insn 1909: point = 3767, n_alt = 3
   Insn 1908: point = 3768, n_alt = 3
  BB 132
   Insn 1905: point = 3769, n_alt = 1
  BB 131
   Insn 1903: point = 3769, n_alt = -1
   Insn 1902: point = 3769, n_alt = 0
   Insn 1901: point = 3770, n_alt = 0
   Insn 1900: point = 3771, n_alt = 1
   Insn 1899: point = 3772, n_alt = 0
   Insn 1898: point = 3773, n_alt = 0
   Insn 1897: point = 3774, n_alt = 1
   Insn 5860: point = 3775, n_alt = -2
	Hard reg 1 is preferable by r3003 with profit 1000
   Insn 1896: point = 3777, n_alt = 0
   Insn 5859: point = 3778, n_alt = -2
	Hard reg 1 is preferable by r3003 with profit 2000
   Insn 1895: point = 3780, n_alt = 2
   Insn 1894: point = 3781, n_alt = 2
   Insn 1893: point = 3782, n_alt = 2
   Insn 1892: point = 3783, n_alt = 0
   Insn 1891: point = 3783, n_alt = 3
   Insn 1890: point = 3783, n_alt = -2
   Insn 1889: point = 3784, n_alt = 2
   Insn 1888: point = 3784, n_alt = 2
   Insn 1887: point = 3784, n_alt = -2
   Insn 1886: point = 3785, n_alt = -2
   Insn 1885: point = 3786, n_alt = 3
   Insn 1884: point = 3787, n_alt = 3
   Insn 1883: point = 3788, n_alt = 3
   Insn 1882: point = 3789, n_alt = 0
   Insn 1881: point = 3789, n_alt = 3
   Insn 1880: point = 3789, n_alt = -2
   Insn 1879: point = 3790, n_alt = 2
   Insn 1878: point = 3790, n_alt = -2
   Insn 1877: point = 3791, n_alt = -2
   Insn 1876: point = 3792, n_alt = 3
   Insn 1875: point = 3793, n_alt = 3
   Insn 1874: point = 3794, n_alt = 3
   Insn 1873: point = 3795, n_alt = 0
   Insn 1872: point = 3795, n_alt = 0
   Insn 1871: point = 3795, n_alt = 3
   Insn 1870: point = 3795, n_alt = 2
   Insn 1869: point = 3795, n_alt = 2
   Insn 1868: point = 3795, n_alt = 4
   Insn 1867: point = 3795, n_alt = 4
   Insn 1866: point = 3795, n_alt = -2
   Insn 1865: point = 3796, n_alt = -2
   Insn 1864: point = 3797, n_alt = 0
   Insn 1863: point = 3797, n_alt = 0
   Insn 1862: point = 3797, n_alt = 3
   Insn 1861: point = 3798, n_alt = 3
   Insn 1860: point = 3799, n_alt = 0
   Insn 1859: point = 3799, n_alt = 0
   Insn 1858: point = 3799, n_alt = 3
   Insn 1857: point = 3799, n_alt = 4
   Insn 1856: point = 3799, n_alt = 4
   Insn 1855: point = 3799, n_alt = 4
   Insn 1854: point = 3799, n_alt = 4
   Insn 1853: point = 3799, n_alt = 4
   Insn 1852: point = 3799, n_alt = 2
   Insn 1851: point = 3799, n_alt = 0
   Insn 1850: point = 3799, n_alt = 0
   Insn 1849: point = 3799, n_alt = 0
   Insn 1848: point = 3799, n_alt = 3
   Insn 1847: point = 3799, n_alt = 4
   Insn 1846: point = 3799, n_alt = -2
   Insn 1845: point = 3800, n_alt = -2
   Insn 1844: point = 3801, n_alt = 4
   Insn 1843: point = 3801, n_alt = 4
   Insn 1842: point = 3801, n_alt = 3
   Insn 1841: point = 3802, n_alt = 3
   Insn 1840: point = 3803, n_alt = 0
   Insn 1839: point = 3803, n_alt = 3
   Insn 1838: point = 3803, n_alt = 4
   Insn 1837: point = 3803, n_alt = -2
   Insn 1836: point = 3804, n_alt = -2
   Insn 1835: point = 3805, n_alt = 4
   Insn 1834: point = 3805, n_alt = 4
   Insn 1833: point = 3805, n_alt = 3
   Insn 1832: point = 3806, n_alt = 3
   Insn 1831: point = 3807, n_alt = 0
   Insn 1830: point = 3807, n_alt = 3
   Insn 1829: point = 3807, n_alt = 4
   Insn 1828: point = 3807, n_alt = -2
   Insn 1827: point = 3808, n_alt = -2
   Insn 1826: point = 3809, n_alt = 4
   Insn 1825: point = 3809, n_alt = 4
   Insn 1824: point = 3809, n_alt = 3
   Insn 1823: point = 3810, n_alt = 3
   Insn 1822: point = 3811, n_alt = 0
   Insn 1821: point = 3811, n_alt = 3
   Insn 1820: point = 3811, n_alt = 4
   Insn 1819: point = 3811, n_alt = -2
   Insn 1818: point = 3812, n_alt = -2
   Insn 1817: point = 3813, n_alt = 4
   Insn 1816: point = 3813, n_alt = 4
   Insn 1815: point = 3813, n_alt = 3
   Insn 1814: point = 3814, n_alt = 3
   Insn 1813: point = 3815, n_alt = 1
   Insn 1812: point = 3816, n_alt = 0
   Insn 1811: point = 3818, n_alt = 0
   Insn 1810: point = 3820, n_alt = 0
   Insn 1809: point = 3822, n_alt = 0
   Insn 1808: point = 3824, n_alt = 0
   Insn 1807: point = 3826, n_alt = 0
   Insn 1806: point = 3827, n_alt = -2
   Insn 1805: point = 3829, n_alt = -2
   Insn 1804: point = 3831, n_alt = 0
   Insn 1803: point = 3833, n_alt = 0
   Insn 1802: point = 3834, n_alt = -2
   Insn 1801: point = 3836, n_alt = 0
   Insn 1800: point = 3838, n_alt = -2
   Insn 1799: point = 3839, n_alt = 1
   Insn 1798: point = 3841, n_alt = 0
  BB 130
   Insn 1796: point = 3842, n_alt = -1
   Insn 1795: point = 3842, n_alt = 0
   Insn 1794: point = 3843, n_alt = 0
   Insn 1793: point = 3845, n_alt = 0
   Insn 1792: point = 3847, n_alt = 0
   Insn 1791: point = 3849, n_alt = 0
   Insn 1790: point = 3851, n_alt = 0
   Insn 1789: point = 3853, n_alt = 0
   Insn 1788: point = 3854, n_alt = -2
   Insn 1787: point = 3856, n_alt = -2
   Insn 1786: point = 3858, n_alt = 0
   Insn 1785: point = 3860, n_alt = 0
   Insn 1784: point = 3861, n_alt = -2
   Insn 1783: point = 3863, n_alt = 0
   Insn 1782: point = 3865, n_alt = -2
   Insn 1781: point = 3866, n_alt = 1
   Insn 1780: point = 3868, n_alt = 0
  BB 129
   Insn 1778: point = 3869, n_alt = -1
   Insn 1777: point = 3869, n_alt = 0
   Insn 1776: point = 3870, n_alt = 0
  BB 128
   Insn 1773: point = 3871, n_alt = 0
   Insn 1772: point = 3871, n_alt = 3
   Insn 1771: point = 3871, n_alt = 2
   Insn 1770: point = 3871, n_alt = 2
   Insn 1769: point = 3871, n_alt = -2
   Insn 1768: point = 3872, n_alt = -2
   Insn 1767: point = 3873, n_alt = -2
   Insn 1766: point = 3874, n_alt = -2
   Insn 1765: point = 3875, n_alt = 3
   Insn 1764: point = 3876, n_alt = 3
   Insn 1763: point = 3877, n_alt = 3
   Insn 1762: point = 3878, n_alt = 3
  BB 127
   Insn 1759: point = 3879, n_alt = 1
  BB 126
   Insn 1757: point = 3879, n_alt = -1
   Insn 1756: point = 3879, n_alt = 0
   Insn 1755: point = 3880, n_alt = 0
   Insn 1754: point = 3881, n_alt = 1
   Insn 1753: point = 3882, n_alt = 0
   Insn 1752: point = 3883, n_alt = 0
   Insn 1751: point = 3884, n_alt = 1
   Insn 5858: point = 3885, n_alt = -2
	Hard reg 1 is preferable by r3002 with profit 1000
   Insn 1750: point = 3887, n_alt = 0
   Insn 5857: point = 3888, n_alt = -2
	Hard reg 1 is preferable by r3002 with profit 2000
   Insn 1749: point = 3890, n_alt = 2
   Insn 1748: point = 3891, n_alt = 2
   Insn 1747: point = 3892, n_alt = 2
   Insn 1746: point = 3893, n_alt = 0
   Insn 1745: point = 3893, n_alt = 0
   Insn 1744: point = 3893, n_alt = 3
   Insn 1743: point = 3893, n_alt = 2
   Insn 1742: point = 3893, n_alt = 2
   Insn 1741: point = 3893, n_alt = 4
   Insn 1740: point = 3893, n_alt = 4
   Insn 1739: point = 3893, n_alt = -2
   Insn 1738: point = 3894, n_alt = -2
   Insn 1737: point = 3895, n_alt = 0
   Insn 1736: point = 3895, n_alt = 0
   Insn 1735: point = 3895, n_alt = 3
   Insn 1734: point = 3896, n_alt = 3
   Insn 1733: point = 3897, n_alt = 0
   Insn 1732: point = 3897, n_alt = 3
   Insn 1731: point = 3897, n_alt = 4
   Insn 1730: point = 3897, n_alt = 4
   Insn 1729: point = 3897, n_alt = 4
   Insn 1728: point = 3897, n_alt = 2
   Insn 1727: point = 3897, n_alt = 2
   Insn 1726: point = 3897, n_alt = 0
   Insn 1725: point = 3897, n_alt = 3
   Insn 1724: point = 3897, n_alt = 4
   Insn 1723: point = 3897, n_alt = -2
   Insn 1722: point = 3898, n_alt = -2
   Insn 1721: point = 3899, n_alt = 4
   Insn 1720: point = 3899, n_alt = 4
   Insn 1719: point = 3899, n_alt = 3
   Insn 1718: point = 3900, n_alt = 3
   Insn 1717: point = 3901, n_alt = 0
   Insn 1716: point = 3901, n_alt = 3
   Insn 1715: point = 3901, n_alt = 4
   Insn 1714: point = 3901, n_alt = -2
   Insn 1713: point = 3902, n_alt = -2
   Insn 1712: point = 3903, n_alt = 4
   Insn 1711: point = 3903, n_alt = 4
   Insn 1710: point = 3903, n_alt = 3
   Insn 1709: point = 3904, n_alt = 3
   Insn 1708: point = 3905, n_alt = 1
   Insn 1707: point = 3906, n_alt = 0
   Insn 1706: point = 3908, n_alt = 0
   Insn 1705: point = 3910, n_alt = 0
   Insn 1704: point = 3912, n_alt = 0
   Insn 1703: point = 3914, n_alt = 0
   Insn 1702: point = 3916, n_alt = 0
   Insn 1701: point = 3917, n_alt = -2
   Insn 1700: point = 3919, n_alt = -2
   Insn 1699: point = 3921, n_alt = 0
   Insn 1698: point = 3923, n_alt = 0
   Insn 1697: point = 3924, n_alt = -2
   Insn 1696: point = 3926, n_alt = 0
   Insn 1695: point = 3928, n_alt = -2
   Insn 1694: point = 3929, n_alt = 1
   Insn 1693: point = 3931, n_alt = 0
  BB 125
   Insn 1691: point = 3932, n_alt = -1
   Insn 1690: point = 3932, n_alt = 0
   Insn 1689: point = 3933, n_alt = 0
   Insn 1688: point = 3935, n_alt = 0
   Insn 1687: point = 3937, n_alt = 0
   Insn 1686: point = 3939, n_alt = 0
   Insn 1685: point = 3941, n_alt = 0
   Insn 1684: point = 3943, n_alt = 0
   Insn 1683: point = 3944, n_alt = -2
   Insn 1682: point = 3946, n_alt = -2
   Insn 1681: point = 3948, n_alt = 0
   Insn 1680: point = 3950, n_alt = 0
   Insn 1679: point = 3951, n_alt = -2
   Insn 1678: point = 3953, n_alt = 0
   Insn 1677: point = 3955, n_alt = -2
   Insn 1676: point = 3956, n_alt = 1
   Insn 1675: point = 3958, n_alt = 0
  BB 124
   Insn 1673: point = 3959, n_alt = -1
   Insn 1672: point = 3959, n_alt = 0
   Insn 1671: point = 3960, n_alt = 0
  BB 123
   Insn 1668: point = 3961, n_alt = 0
   Insn 1667: point = 3961, n_alt = 3
   Insn 1666: point = 3961, n_alt = 2
   Insn 1665: point = 3961, n_alt = 2
   Insn 1664: point = 3961, n_alt = -2
   Insn 1663: point = 3962, n_alt = -2
   Insn 1662: point = 3963, n_alt = -2
   Insn 1661: point = 3964, n_alt = -2
   Insn 1660: point = 3965, n_alt = 3
   Insn 1659: point = 3966, n_alt = 3
   Insn 1658: point = 3967, n_alt = 3
   Insn 1657: point = 3968, n_alt = 3
  BB 122
   Insn 1654: point = 3969, n_alt = 1
  BB 121
   Insn 1652: point = 3969, n_alt = -1
   Insn 1651: point = 3969, n_alt = 0
   Insn 1650: point = 3970, n_alt = 0
   Insn 1649: point = 3971, n_alt = 1
   Insn 1648: point = 3972, n_alt = 0
   Insn 1647: point = 3973, n_alt = 0
   Insn 1646: point = 3974, n_alt = 1
   Insn 5856: point = 3975, n_alt = -2
	Hard reg 1 is preferable by r3001 with profit 1000
   Insn 1645: point = 3977, n_alt = 0
   Insn 5855: point = 3978, n_alt = -2
	Hard reg 1 is preferable by r3001 with profit 2000
   Insn 1644: point = 3980, n_alt = 2
   Insn 1643: point = 3981, n_alt = 2
   Insn 1642: point = 3982, n_alt = 2
   Insn 1641: point = 3983, n_alt = 0
   Insn 1640: point = 3983, n_alt = 0
   Insn 1639: point = 3983, n_alt = 3
   Insn 1638: point = 3983, n_alt = 2
   Insn 1637: point = 3983, n_alt = 2
   Insn 1636: point = 3983, n_alt = 4
   Insn 1635: point = 3983, n_alt = 4
   Insn 1634: point = 3983, n_alt = -2
   Insn 1633: point = 3984, n_alt = -2
   Insn 1632: point = 3985, n_alt = 0
   Insn 1631: point = 3985, n_alt = 0
   Insn 1630: point = 3985, n_alt = 3
   Insn 1629: point = 3986, n_alt = 3
   Insn 1628: point = 3987, n_alt = 0
   Insn 1627: point = 3987, n_alt = 3
   Insn 1626: point = 3987, n_alt = 4
   Insn 1625: point = 3987, n_alt = -2
   Insn 1624: point = 3988, n_alt = -2
   Insn 1623: point = 3989, n_alt = 4
   Insn 1622: point = 3989, n_alt = 4
   Insn 1621: point = 3989, n_alt = 3
   Insn 1620: point = 3990, n_alt = 3
   Insn 1619: point = 3991, n_alt = 1
   Insn 1618: point = 3992, n_alt = 0
   Insn 1617: point = 3994, n_alt = 0
   Insn 1616: point = 3996, n_alt = 0
   Insn 1615: point = 3998, n_alt = 0
   Insn 1614: point = 4000, n_alt = 0
   Insn 1613: point = 4002, n_alt = 0
   Insn 1612: point = 4003, n_alt = -2
   Insn 1611: point = 4005, n_alt = -2
   Insn 1610: point = 4007, n_alt = 0
   Insn 1609: point = 4009, n_alt = 0
   Insn 1608: point = 4010, n_alt = -2
   Insn 1607: point = 4012, n_alt = 0
   Insn 1606: point = 4014, n_alt = -2
   Insn 1605: point = 4015, n_alt = 1
   Insn 1604: point = 4017, n_alt = 0
  BB 120
   Insn 1602: point = 4018, n_alt = -1
   Insn 1601: point = 4018, n_alt = 0
   Insn 1600: point = 4019, n_alt = 0
   Insn 1599: point = 4021, n_alt = 0
   Insn 1598: point = 4023, n_alt = 0
   Insn 1597: point = 4025, n_alt = 0
   Insn 1596: point = 4027, n_alt = 0
   Insn 1595: point = 4029, n_alt = 0
   Insn 1594: point = 4030, n_alt = -2
   Insn 1593: point = 4032, n_alt = -2
   Insn 1592: point = 4034, n_alt = 0
   Insn 1591: point = 4036, n_alt = 0
   Insn 1590: point = 4037, n_alt = -2
   Insn 1589: point = 4039, n_alt = 0
   Insn 1588: point = 4041, n_alt = -2
   Insn 1587: point = 4042, n_alt = 1
   Insn 1586: point = 4044, n_alt = 0
  BB 119
   Insn 1584: point = 4045, n_alt = -1
   Insn 1583: point = 4045, n_alt = 0
   Insn 1582: point = 4046, n_alt = 0
  BB 118
   Insn 1579: point = 4047, n_alt = 0
   Insn 1578: point = 4047, n_alt = 3
   Insn 1577: point = 4047, n_alt = 2
   Insn 1576: point = 4047, n_alt = 2
   Insn 1575: point = 4047, n_alt = -2
   Insn 1574: point = 4048, n_alt = -2
   Insn 1573: point = 4049, n_alt = -2
   Insn 1572: point = 4050, n_alt = -2
   Insn 1571: point = 4051, n_alt = 3
   Insn 1570: point = 4052, n_alt = 3
   Insn 1569: point = 4053, n_alt = 3
   Insn 1568: point = 4054, n_alt = 3
   Insn 1567: point = 4055, n_alt = 0
   Insn 1566: point = 4055, n_alt = -2
   Insn 1565: point = 4056, n_alt = 3
   Insn 1564: point = 4057, n_alt = 0
   Insn 1563: point = 4057, n_alt = -2
   Insn 1562: point = 4058, n_alt = 2
   Insn 1561: point = 4058, n_alt = 2
   Insn 1560: point = 4058, n_alt = 3
   Insn 1559: point = 4059, n_alt = 0
   Insn 1558: point = 4059, n_alt = -2
   Insn 1557: point = 4060, n_alt = 3
   Insn 1556: point = 4061, n_alt = 1
   Insn 1555: point = 4061, n_alt = 1
   Insn 1554: point = 4061, n_alt = 1
   Insn 1553: point = 4061, n_alt = 5
  BB 117
   Insn 1550: point = 4061, n_alt = 1
  BB 116
   Insn 1548: point = 4061, n_alt = -1
   Insn 1547: point = 4061, n_alt = 0
   Insn 1546: point = 4062, n_alt = 0
   Insn 1545: point = 4063, n_alt = 1
   Insn 1544: point = 4064, n_alt = 0
   Insn 1543: point = 4065, n_alt = 0
   Insn 1542: point = 4066, n_alt = 1
   Insn 5854: point = 4067, n_alt = -2
	Hard reg 1 is preferable by r3000 with profit 1000
   Insn 1541: point = 4069, n_alt = 0
   Insn 5853: point = 4070, n_alt = -2
	Hard reg 1 is preferable by r3000 with profit 2000
   Insn 1540: point = 4072, n_alt = 2
   Insn 1539: point = 4073, n_alt = 2
   Insn 1538: point = 4074, n_alt = 2
   Insn 1537: point = 4075, n_alt = 0
   Insn 1536: point = 4075, n_alt = 0
   Insn 1535: point = 4075, n_alt = 3
   Insn 1534: point = 4075, n_alt = 2
   Insn 1533: point = 4075, n_alt = 2
   Insn 1532: point = 4075, n_alt = 4
   Insn 1531: point = 4075, n_alt = 4
   Insn 1530: point = 4075, n_alt = -2
   Insn 1529: point = 4076, n_alt = -2
   Insn 1528: point = 4077, n_alt = 0
   Insn 1527: point = 4077, n_alt = 0
   Insn 1526: point = 4077, n_alt = 3
   Insn 1525: point = 4078, n_alt = 3
   Insn 1524: point = 4079, n_alt = 0
   Insn 1523: point = 4079, n_alt = 3
   Insn 1522: point = 4079, n_alt = 4
   Insn 1521: point = 4079, n_alt = -2
   Insn 1520: point = 4080, n_alt = -2
   Insn 1519: point = 4081, n_alt = 4
   Insn 1518: point = 4081, n_alt = 4
   Insn 1517: point = 4081, n_alt = 3
   Insn 1516: point = 4082, n_alt = 3
   Insn 1515: point = 4083, n_alt = 1
   Insn 1514: point = 4084, n_alt = 0
   Insn 1513: point = 4086, n_alt = 0
   Insn 1512: point = 4088, n_alt = 0
   Insn 1511: point = 4090, n_alt = 0
   Insn 1510: point = 4092, n_alt = 0
   Insn 1509: point = 4094, n_alt = 0
   Insn 1508: point = 4095, n_alt = -2
   Insn 1507: point = 4097, n_alt = -2
   Insn 1506: point = 4099, n_alt = 0
   Insn 1505: point = 4101, n_alt = 0
   Insn 1504: point = 4102, n_alt = -2
   Insn 1503: point = 4104, n_alt = 0
   Insn 1502: point = 4106, n_alt = -2
   Insn 1501: point = 4107, n_alt = 1
   Insn 1500: point = 4109, n_alt = 0
  BB 115
   Insn 1498: point = 4110, n_alt = -1
   Insn 1497: point = 4110, n_alt = 0
   Insn 1496: point = 4111, n_alt = 0
   Insn 1495: point = 4113, n_alt = 0
   Insn 1494: point = 4115, n_alt = 0
   Insn 1493: point = 4117, n_alt = 0
   Insn 1492: point = 4119, n_alt = 0
   Insn 1491: point = 4121, n_alt = 0
   Insn 1490: point = 4122, n_alt = -2
   Insn 1489: point = 4124, n_alt = -2
   Insn 1488: point = 4126, n_alt = 0
   Insn 1487: point = 4128, n_alt = 0
   Insn 1486: point = 4129, n_alt = -2
   Insn 1485: point = 4131, n_alt = 0
   Insn 1484: point = 4133, n_alt = -2
   Insn 1483: point = 4134, n_alt = 1
   Insn 1482: point = 4136, n_alt = 0
  BB 114
   Insn 1480: point = 4137, n_alt = -1
   Insn 1479: point = 4137, n_alt = 0
   Insn 1478: point = 4138, n_alt = 0
  BB 113
   Insn 1475: point = 4139, n_alt = 0
   Insn 1474: point = 4139, n_alt = 3
   Insn 1473: point = 4139, n_alt = 2
   Insn 1472: point = 4139, n_alt = 2
   Insn 1471: point = 4139, n_alt = -2
   Insn 1470: point = 4140, n_alt = -2
   Insn 1469: point = 4141, n_alt = -2
   Insn 1468: point = 4142, n_alt = -2
   Insn 1467: point = 4143, n_alt = 3
   Insn 1466: point = 4144, n_alt = 3
   Insn 1465: point = 4145, n_alt = 3
   Insn 1464: point = 4146, n_alt = 3
   Insn 1463: point = 4147, n_alt = 0
   Insn 1462: point = 4147, n_alt = -2
   Insn 1461: point = 4148, n_alt = 3
   Insn 1460: point = 4149, n_alt = 0
   Insn 1459: point = 4149, n_alt = -2
   Insn 1458: point = 4150, n_alt = 2
   Insn 1457: point = 4150, n_alt = 2
   Insn 1456: point = 4150, n_alt = 3
   Insn 1455: point = 4151, n_alt = 0
   Insn 1454: point = 4151, n_alt = -2
   Insn 1453: point = 4152, n_alt = 3
   Insn 1452: point = 4153, n_alt = 1
   Insn 1451: point = 4153, n_alt = 1
   Insn 1450: point = 4153, n_alt = 1
   Insn 1449: point = 4153, n_alt = 5
  BB 112
   Insn 1446: point = 4153, n_alt = 1
  BB 111
   Insn 1444: point = 4153, n_alt = -1
   Insn 1443: point = 4153, n_alt = 0
   Insn 1442: point = 4154, n_alt = 0
   Insn 1441: point = 4155, n_alt = 1
   Insn 1440: point = 4156, n_alt = 0
   Insn 1439: point = 4157, n_alt = 0
   Insn 1438: point = 4158, n_alt = 1
   Insn 5852: point = 4159, n_alt = -2
	Hard reg 1 is preferable by r2999 with profit 1000
   Insn 1437: point = 4161, n_alt = 0
   Insn 5851: point = 4162, n_alt = -2
	Hard reg 1 is preferable by r2999 with profit 2000
   Insn 1436: point = 4164, n_alt = 2
   Insn 1435: point = 4165, n_alt = 2
   Insn 1434: point = 4166, n_alt = 2
   Insn 1433: point = 4167, n_alt = 0
   Insn 1432: point = 4167, n_alt = 0
   Insn 1431: point = 4167, n_alt = 3
   Insn 1430: point = 4167, n_alt = 2
   Insn 1429: point = 4167, n_alt = 2
   Insn 1428: point = 4167, n_alt = 4
   Insn 1427: point = 4167, n_alt = 4
   Insn 1426: point = 4167, n_alt = -2
   Insn 1425: point = 4168, n_alt = -2
   Insn 1424: point = 4169, n_alt = 0
   Insn 1423: point = 4169, n_alt = 0
   Insn 1422: point = 4169, n_alt = 3
   Insn 1421: point = 4170, n_alt = 3
   Insn 1420: point = 4171, n_alt = 0
   Insn 1419: point = 4171, n_alt = 3
   Insn 1418: point = 4171, n_alt = 4
   Insn 1417: point = 4171, n_alt = -2
   Insn 1416: point = 4172, n_alt = -2
   Insn 1415: point = 4173, n_alt = 4
   Insn 1414: point = 4173, n_alt = 4
   Insn 1413: point = 4173, n_alt = 3
   Insn 1412: point = 4174, n_alt = 3
   Insn 1411: point = 4175, n_alt = 1
   Insn 1410: point = 4176, n_alt = 0
   Insn 1409: point = 4178, n_alt = 0
   Insn 1408: point = 4180, n_alt = 0
   Insn 1407: point = 4182, n_alt = 0
   Insn 1406: point = 4184, n_alt = 0
   Insn 1405: point = 4186, n_alt = 0
   Insn 1404: point = 4187, n_alt = -2
   Insn 1403: point = 4189, n_alt = -2
   Insn 1402: point = 4191, n_alt = 0
   Insn 1401: point = 4193, n_alt = 0
   Insn 1400: point = 4194, n_alt = -2
   Insn 1399: point = 4196, n_alt = 0
   Insn 1398: point = 4198, n_alt = -2
   Insn 1397: point = 4199, n_alt = 1
   Insn 1396: point = 4201, n_alt = 0
  BB 110
   Insn 1394: point = 4202, n_alt = -1
   Insn 1393: point = 4202, n_alt = 0
   Insn 1392: point = 4203, n_alt = 0
   Insn 1391: point = 4205, n_alt = 0
   Insn 1390: point = 4207, n_alt = 0
   Insn 1389: point = 4209, n_alt = 0
   Insn 1388: point = 4211, n_alt = 0
   Insn 1387: point = 4213, n_alt = 0
   Insn 1386: point = 4214, n_alt = -2
   Insn 1385: point = 4216, n_alt = -2
   Insn 1384: point = 4218, n_alt = 0
   Insn 1383: point = 4220, n_alt = 0
   Insn 1382: point = 4221, n_alt = -2
   Insn 1381: point = 4223, n_alt = 0
   Insn 1380: point = 4225, n_alt = -2
   Insn 1379: point = 4226, n_alt = 1
   Insn 1378: point = 4228, n_alt = 0
  BB 109
   Insn 1376: point = 4229, n_alt = -1
   Insn 1375: point = 4229, n_alt = 0
   Insn 1374: point = 4230, n_alt = 0
  BB 107
   Insn 1365: point = 4231, n_alt = 1
  BB 374
   Insn 5730: point = 4231, n_alt = -1
  BB 82
   Insn 944: point = 4231, n_alt = -1
   Insn 943: point = 4231, n_alt = 0
   Insn 942: point = 4232, n_alt = 0
   Insn 941: point = 4234, n_alt = 0
   Insn 940: point = 4235, n_alt = 0
   Insn 939: point = 4236, n_alt = 0
  BB 106
   Insn 5619: point = 4237, n_alt = -1
   Insn 1359: point = 4237, n_alt = 1
   Insn 1358: point = 4238, n_alt = 0
   Insn 1357: point = 4240, n_alt = 0
  BB 377
   Insn 5739: point = 4241, n_alt = -1
  BB 84
   Insn 954: point = 4241, n_alt = -1
   Insn 953: point = 4241, n_alt = 0
   Insn 952: point = 4242, n_alt = 0
   Insn 951: point = 4244, n_alt = 0
   Insn 950: point = 4245, n_alt = 0
  BB 105
   Insn 5617: point = 4246, n_alt = -1
   Insn 1351: point = 4246, n_alt = 1
  BB 378
   Insn 5742: point = 4247, n_alt = -1
  BB 86
   Insn 962: point = 4248, n_alt = -1
   Insn 961: point = 4248, n_alt = 0
   Insn 960: point = 4249, n_alt = 0
   Insn 959: point = 4251, n_alt = 0
   Insn 958: point = 4252, n_alt = 0
  BB 104
   Insn 5615: point = 4253, n_alt = -1
   Insn 1345: point = 4253, n_alt = 1
  BB 103
   Insn 1342: point = 4254, n_alt = 8
   Insn 1341: point = 4255, n_alt = 7
   Insn 1340: point = 4256, n_alt = 4
   Insn 1339: point = 4257, n_alt = 3
   Insn 1338: point = 4259, n_alt = 0
   Insn 1337: point = 4261, n_alt = 0
   Insn 1336: point = 4263, n_alt = 0
   Insn 1335: point = 4264, n_alt = 0
   Insn 1334: point = 4266, n_alt = 0
   Insn 1333: point = 4268, n_alt = 0
   Insn 1332: point = 4270, n_alt = 0
   Insn 1331: point = 4271, n_alt = 1
   Insn 1330: point = 4273, n_alt = 0
   Insn 1329: point = 4275, n_alt = 0
  BB 102
   Insn 1324: point = 4277, n_alt = -1
   Insn 1323: point = 4277, n_alt = 1
   Insn 1322: point = 4278, n_alt = 7
  BB 101
   Insn 1317: point = 4280, n_alt = -1
   Insn 1316: point = 4280, n_alt = 1
   Insn 1315: point = 4281, n_alt = 7
  BB 100
   Insn 1314: point = 4283, n_alt = -1
   Insn 1313: point = 4283, n_alt = 1
   Insn 1312: point = 4284, n_alt = 7
   Insn 1311: point = 4285, n_alt = 7
   Insn 1310: point = 4287, n_alt = 4
   Insn 1309: point = 4288, n_alt = 3
   Insn 1308: point = 4290, n_alt = 0
   Insn 1307: point = 4292, n_alt = 0
   Insn 1306: point = 4294, n_alt = 0
   Insn 1305: point = 4295, n_alt = 0
   Insn 1304: point = 4297, n_alt = 0
   Insn 1303: point = 4299, n_alt = 0
   Insn 1302: point = 4301, n_alt = 0
   Insn 1301: point = 4302, n_alt = 1
   Insn 1300: point = 4304, n_alt = 0
   Insn 1299: point = 4306, n_alt = 0
   Insn 1298: point = 4308, n_alt = 0
   Insn 1297: point = 4309, n_alt = 8
   Insn 1296: point = 4310, n_alt = 7
   Insn 1295: point = 4311, n_alt = 4
   Insn 1294: point = 4312, n_alt = 3
   Insn 1293: point = 4314, n_alt = 0
   Insn 1292: point = 4316, n_alt = 0
   Insn 1291: point = 4318, n_alt = 0
   Insn 1290: point = 4319, n_alt = 0
   Insn 1289: point = 4321, n_alt = 0
   Insn 1288: point = 4323, n_alt = 0
   Insn 1287: point = 4325, n_alt = 0
   Insn 1286: point = 4326, n_alt = 1
   Insn 1285: point = 4328, n_alt = 0
   Insn 1284: point = 4330, n_alt = 0
  BB 99
   Insn 1279: point = 4332, n_alt = -1
   Insn 1278: point = 4332, n_alt = 1
   Insn 1277: point = 4333, n_alt = 7
  BB 98
   Insn 1272: point = 4335, n_alt = -1
   Insn 1271: point = 4335, n_alt = 1
   Insn 1270: point = 4336, n_alt = 7
  BB 97
   Insn 1267: point = 4338, n_alt = 8
   Insn 1266: point = 4339, n_alt = 7
   Insn 1265: point = 4340, n_alt = 4
   Insn 1264: point = 4341, n_alt = 3
   Insn 1263: point = 4343, n_alt = 0
   Insn 1262: point = 4345, n_alt = 0
   Insn 1261: point = 4347, n_alt = 0
   Insn 1260: point = 4348, n_alt = 0
   Insn 1259: point = 4350, n_alt = 0
   Insn 1258: point = 4352, n_alt = 0
   Insn 1257: point = 4354, n_alt = 0
   Insn 1256: point = 4355, n_alt = 1
   Insn 1255: point = 4357, n_alt = 0
   Insn 1254: point = 4359, n_alt = 0
  BB 96
   Insn 1249: point = 4361, n_alt = -1
   Insn 1248: point = 4361, n_alt = 1
   Insn 1247: point = 4362, n_alt = 7
   Insn 1246: point = 4363, n_alt = 7
  BB 94
   Insn 5613: point = 4365, n_alt = -1
   Insn 1223: point = 4365, n_alt = 8
   Insn 1222: point = 4366, n_alt = 7
   Insn 1221: point = 4367, n_alt = 4
   Insn 1220: point = 4368, n_alt = 3
   Insn 1219: point = 4370, n_alt = 0
   Insn 1218: point = 4372, n_alt = 0
   Insn 1217: point = 4374, n_alt = 0
   Insn 1216: point = 4375, n_alt = 0
   Insn 1215: point = 4377, n_alt = 0
   Insn 1214: point = 4379, n_alt = 0
   Insn 1213: point = 4381, n_alt = 0
   Insn 1212: point = 4382, n_alt = 1
   Insn 1211: point = 4384, n_alt = 0
   Insn 1210: point = 4386, n_alt = 0
  BB 95
   Insn 1241: point = 4388, n_alt = 8
   Insn 1240: point = 4389, n_alt = 7
   Insn 1239: point = 4390, n_alt = 4
   Insn 1238: point = 4391, n_alt = 3
   Insn 1237: point = 4393, n_alt = 0
   Insn 1236: point = 4395, n_alt = 0
   Insn 1235: point = 4397, n_alt = 0
   Insn 1234: point = 4398, n_alt = 0
   Insn 1233: point = 4400, n_alt = 0
   Insn 1232: point = 4402, n_alt = 0
   Insn 1231: point = 4404, n_alt = 0
   Insn 1230: point = 4405, n_alt = 1
   Insn 1229: point = 4407, n_alt = 0
   Insn 1228: point = 4409, n_alt = 0
  BB 93
   Insn 1204: point = 4411, n_alt = -1
   Insn 1203: point = 4411, n_alt = 1
   Insn 1202: point = 4412, n_alt = 7
  BB 92
   Insn 1200: point = 4414, n_alt = -1
   Insn 1199: point = 4414, n_alt = 1
   Insn 1198: point = 4415, n_alt = 7
   Insn 1197: point = 4416, n_alt = 7
   Insn 1196: point = 4417, n_alt = 8
   Insn 1195: point = 4418, n_alt = 2
   Insn 1194: point = 4420, n_alt = 7
   Insn 5850: point = 4421, n_alt = -2
	Hard reg 22 is preferable by r2998 with profit 1000
   Insn 1193: point = 4423, n_alt = 1
   Insn 5849: point = 4423, n_alt = -2
	Hard reg 22 is preferable by r2998 with profit 1000
	Hard reg 21 is preferable by r2998 with profit 1000
   Insn 1192: point = 4425, n_alt = 7
   Insn 1191: point = 4427, n_alt = 4
   Insn 1190: point = 4428, n_alt = 3
   Insn 1189: point = 4430, n_alt = 0
   Insn 1188: point = 4432, n_alt = 0
   Insn 1187: point = 4434, n_alt = 0
   Insn 1186: point = 4435, n_alt = 0
   Insn 1185: point = 4437, n_alt = 0
   Insn 1184: point = 4439, n_alt = 0
  BB 91
   Insn 1179: point = 4441, n_alt = -1
   Insn 1178: point = 4441, n_alt = 1
   Insn 1177: point = 4442, n_alt = 7
   Insn 1176: point = 4443, n_alt = 8
   Insn 1175: point = 4444, n_alt = 1
   Insn 1174: point = 4446, n_alt = 1
   Insn 1173: point = 4448, n_alt = 1
   Insn 1172: point = 4450, n_alt = -2
   Insn 1171: point = 4452, n_alt = 2
   Insn 1170: point = 4454, n_alt = 7
   Insn 1169: point = 4455, n_alt = 7
   Insn 1168: point = 4457, n_alt = 0
   Insn 1167: point = 4459, n_alt = 4
   Insn 1166: point = 4460, n_alt = 3
   Insn 1165: point = 4462, n_alt = 0
   Insn 1164: point = 4464, n_alt = 0
   Insn 1163: point = 4466, n_alt = 0
   Insn 1162: point = 4467, n_alt = 0
   Insn 1161: point = 4469, n_alt = 0
   Insn 1160: point = 4471, n_alt = 0
   Insn 1159: point = 4472, n_alt = 7
   Insn 1158: point = 4474, n_alt = 0
   Insn 1157: point = 4476, n_alt = 4
   Insn 1156: point = 4477, n_alt = 3
   Insn 1155: point = 4479, n_alt = 0
   Insn 1154: point = 4481, n_alt = 0
   Insn 1153: point = 4483, n_alt = 0
   Insn 1152: point = 4484, n_alt = 0
   Insn 1151: point = 4485, n_alt = 7
   Insn 1150: point = 4487, n_alt = 0
   Insn 1149: point = 4489, n_alt = 4
   Insn 1148: point = 4490, n_alt = 3
   Insn 1147: point = 4492, n_alt = 0
   Insn 1146: point = 4494, n_alt = 0
   Insn 1145: point = 4496, n_alt = 0
   Insn 1144: point = 4497, n_alt = 0
   Insn 1143: point = 4499, n_alt = 0
   Insn 1142: point = 4501, n_alt = 0
   Insn 1141: point = 4502, n_alt = 8
   Insn 1140: point = 4503, n_alt = 4
   Insn 1139: point = 4504, n_alt = 1
   Insn 1138: point = 4506, n_alt = 3
   Insn 1137: point = 4508, n_alt = 0
   Insn 1136: point = 4510, n_alt = 0
   Insn 1135: point = 4512, n_alt = 0
   Insn 1134: point = 4513, n_alt = 0
   Insn 1133: point = 4515, n_alt = 0
   Insn 1132: point = 4517, n_alt = 0
   Insn 1131: point = 4518, n_alt = -2
   Insn 1130: point = 4520, n_alt = 1
   Insn 1129: point = 4522, n_alt = 7
   Insn 1128: point = 4523, n_alt = 1
   Insn 1127: point = 4525, n_alt = 7
  BB 90
   Insn 1124: point = 4527, n_alt = 7
  BB 89
   Insn 1122: point = 4529, n_alt = -1
   Insn 1121: point = 4529, n_alt = 0
   Insn 1120: point = 4530, n_alt = 0
   Insn 1119: point = 4532, n_alt = 0
   Insn 1118: point = 4534, n_alt = 0
   Insn 1117: point = 4535, n_alt = 1
   Insn 1116: point = 4535, n_alt = 0
   Insn 1115: point = 4537, n_alt = 0
   Insn 1114: point = 4538, n_alt = 1
   Insn 1113: point = 4539, n_alt = 7
   Insn 1112: point = 4540, n_alt = 7
   Insn 1111: point = 4541, n_alt = 8
   Insn 1110: point = 4542, n_alt = 1
   Insn 5924: point = 4544, n_alt = 7
	   Creating copy r3044<-r3045@1000
   Insn 1109: point = 4546, n_alt = -2
   Insn 1108: point = 4547, n_alt = 0
   Insn 1107: point = 4547, n_alt = -2
   Insn 1106: point = 4548, n_alt = 2
   Insn 1105: point = 4550, n_alt = -2
   Insn 1104: point = 4552, n_alt = 2
   Insn 1103: point = 4554, n_alt = 7
   Insn 1102: point = 4555, n_alt = 7
   Insn 1101: point = 4556, n_alt = 1
   Insn 1100: point = 4558, n_alt = -2
   Insn 1099: point = 4560, n_alt = 2
   Insn 1098: point = 4562, n_alt = 7
   Insn 1097: point = 4563, n_alt = 7
   Insn 1096: point = 4564, n_alt = 1
   Insn 1095: point = 4566, n_alt = 7
   Insn 1094: point = 4567, n_alt = 7
   Insn 5847: point = 4568, n_alt = 8
	   Creating copy r2996->r3045@1000
   Insn 1093: point = 4570, n_alt = 2
   Insn 5846: point = 4570, n_alt = -2
	Hard reg 21 is preferable by r2996 with profit 1000
   Insn 1092: point = 4572, n_alt = 1
   Insn 1091: point = 4574, n_alt = 7
   Insn 1090: point = 4575, n_alt = 7
   Insn 1089: point = 4576, n_alt = 8
   Insn 1088: point = 4577, n_alt = 1
   Insn 1087: point = 4579, n_alt = 7
   Insn 1086: point = 4581, n_alt = 4
   Insn 1085: point = 4582, n_alt = 1
   Insn 1084: point = 4584, n_alt = 7
   Insn 1083: point = 4586, n_alt = 0
   Insn 1082: point = 4588, n_alt = 4
   Insn 1081: point = 4589, n_alt = 3
   Insn 1080: point = 4591, n_alt = 0
   Insn 1079: point = 4593, n_alt = 0
   Insn 1078: point = 4594, n_alt = 7
   Insn 1077: point = 4596, n_alt = 0
   Insn 1076: point = 4598, n_alt = 4
   Insn 1075: point = 4599, n_alt = 3
   Insn 1074: point = 4601, n_alt = 0
   Insn 1073: point = 4603, n_alt = 0
   Insn 1072: point = 4605, n_alt = 0
   Insn 1071: point = 4606, n_alt = 0
   Insn 1070: point = 4608, n_alt = 0
   Insn 1069: point = 4610, n_alt = 0
   Insn 1068: point = 4611, n_alt = 8
   Insn 1067: point = 4612, n_alt = 1
  BB 88
   Insn 1064: point = 4615, n_alt = 7
  BB 87
   Insn 1062: point = 4617, n_alt = -1
   Insn 1061: point = 4617, n_alt = 0
   Insn 1060: point = 4618, n_alt = 0
   Insn 1059: point = 4620, n_alt = 0
   Insn 1058: point = 4622, n_alt = 0
   Insn 1057: point = 4623, n_alt = 1
   Insn 1056: point = 4623, n_alt = 0
   Insn 1055: point = 4625, n_alt = 0
   Insn 1054: point = 4626, n_alt = 1
   Insn 1053: point = 4626, n_alt = 7
   Insn 1052: point = 4627, n_alt = 8
   Insn 1051: point = 4628, n_alt = 1
   Insn 1050: point = 4630, n_alt = 7
   Insn 1049: point = 4631, n_alt = -2
   Insn 1048: point = 4633, n_alt = 2
   Insn 1047: point = 4635, n_alt = 7
   Insn 1046: point = 4636, n_alt = 7
   Insn 1045: point = 4637, n_alt = 8
   Insn 1044: point = 4638, n_alt = 7
   Insn 1043: point = 4640, n_alt = 4
   Insn 1042: point = 4641, n_alt = 3
   Insn 1041: point = 4643, n_alt = 0
   Insn 1040: point = 4645, n_alt = 0
   Insn 1039: point = 4647, n_alt = 0
   Insn 1038: point = 4648, n_alt = 0
   Insn 1037: point = 4650, n_alt = 0
   Insn 1036: point = 4652, n_alt = 0
   Insn 1035: point = 4654, n_alt = 0
   Insn 1034: point = 4655, n_alt = 1
   Insn 1033: point = 4657, n_alt = 0
   Insn 1032: point = 4659, n_alt = 0
   Insn 1031: point = 4660, n_alt = 8
   Insn 1030: point = 4661, n_alt = 7
   Insn 1029: point = 4663, n_alt = 0
   Insn 1028: point = 4665, n_alt = 4
   Insn 1027: point = 4666, n_alt = 3
   Insn 1026: point = 4668, n_alt = 0
   Insn 1025: point = 4670, n_alt = 0
   Insn 1024: point = 4672, n_alt = 0
   Insn 1023: point = 4673, n_alt = 0
   Insn 1022: point = 4675, n_alt = 0
   Insn 1021: point = 4677, n_alt = 0
   Insn 1020: point = 4679, n_alt = 0
   Insn 1019: point = 4680, n_alt = 1
   Insn 1018: point = 4682, n_alt = 0
   Insn 1017: point = 4684, n_alt = 0
   Insn 1016: point = 4685, n_alt = 8
   Insn 1015: point = 4686, n_alt = 7
   Insn 1014: point = 4688, n_alt = 0
   Insn 1013: point = 4690, n_alt = 4
   Insn 1012: point = 4691, n_alt = 3
   Insn 1011: point = 4693, n_alt = 0
   Insn 1010: point = 4695, n_alt = 0
   Insn 1009: point = 4697, n_alt = 0
   Insn 1008: point = 4698, n_alt = 0
   Insn 1007: point = 4700, n_alt = 0
   Insn 1006: point = 4702, n_alt = 0
   Insn 1005: point = 4704, n_alt = 0
   Insn 1004: point = 4705, n_alt = 1
   Insn 1003: point = 4707, n_alt = 0
   Insn 1002: point = 4709, n_alt = 0
   Insn 1001: point = 4710, n_alt = 8
   Insn 1000: point = 4711, n_alt = 1
   Insn 999: point = 4713, n_alt = 7
   Insn 998: point = 4715, n_alt = 4
   Insn 997: point = 4716, n_alt = 3
   Insn 996: point = 4718, n_alt = 0
   Insn 995: point = 4720, n_alt = 0
   Insn 994: point = 4722, n_alt = 0
   Insn 993: point = 4723, n_alt = 0
   Insn 992: point = 4725, n_alt = 0
   Insn 991: point = 4727, n_alt = 0
   Insn 990: point = 4728, n_alt = 7
   Insn 989: point = 4730, n_alt = 0
   Insn 988: point = 4732, n_alt = 4
   Insn 987: point = 4733, n_alt = 3
   Insn 986: point = 4735, n_alt = 0
   Insn 985: point = 4737, n_alt = 0
   Insn 984: point = 4739, n_alt = 0
   Insn 983: point = 4740, n_alt = 0
   Insn 982: point = 4742, n_alt = 0
   Insn 981: point = 4744, n_alt = 0
   Insn 980: point = 4746, n_alt = 0
   Insn 979: point = 4747, n_alt = 1
   Insn 978: point = 4749, n_alt = 0
   Insn 977: point = 4751, n_alt = 0
   Insn 976: point = 4752, n_alt = 1
   Insn 5845: point = 4753, n_alt = -2
	Hard reg 0 is preferable by r2995 with profit 1000
   Insn 975: point = 4755, n_alt = 0
   Insn 5844: point = 4756, n_alt = -2
	Hard reg 0 is preferable by r2995 with profit 1000
	Hard reg 1 is preferable by r2995 with profit 1000
   Insn 974: point = 4758, n_alt = 0
   Insn 973: point = 4759, n_alt = 0
   Insn 972: point = 4761, n_alt = 0
   Insn 971: point = 4763, n_alt = 4
   Insn 970: point = 4764, n_alt = 3
   Insn 969: point = 4766, n_alt = 0
   Insn 968: point = 4768, n_alt = 0
   Insn 967: point = 4770, n_alt = 0
   Insn 966: point = 4771, n_alt = 0
   Insn 965: point = 4773, n_alt = 0
   Insn 964: point = 4775, n_alt = 0
  BB 85
   Insn 956: point = 4777, n_alt = 1
  BB 83
   Insn 948: point = 4778, n_alt = 1
   Insn 947: point = 4779, n_alt = 0
   Insn 946: point = 4780, n_alt = 0
  BB 81
   Insn 937: point = 4781, n_alt = 1
  BB 375
   Insn 5733: point = 4781, n_alt = -1
  BB 76
   Insn 905: point = 4781, n_alt = -1
   Insn 904: point = 4781, n_alt = 0
   Insn 903: point = 4782, n_alt = 0
   Insn 902: point = 4784, n_alt = 0
   Insn 901: point = 4785, n_alt = 0
  BB 80
   Insn 5610: point = 4786, n_alt = -1
   Insn 931: point = 4786, n_alt = 1
  BB 376
   Insn 5736: point = 4787, n_alt = -1
  BB 78
   Insn 913: point = 4788, n_alt = -1
   Insn 912: point = 4788, n_alt = 0
   Insn 911: point = 4789, n_alt = 0
   Insn 910: point = 4791, n_alt = 0
   Insn 909: point = 4792, n_alt = 0
  BB 79
   Insn 5608: point = 4793, n_alt = -1
   Insn 925: point = 4793, n_alt = 1
   Insn 924: point = 4793, n_alt = 8
   Insn 923: point = 4794, n_alt = 7
   Insn 922: point = 4795, n_alt = 4
   Insn 921: point = 4796, n_alt = 3
   Insn 920: point = 4798, n_alt = 0
   Insn 919: point = 4800, n_alt = 1
   Insn 918: point = 4802, n_alt = 0
   Insn 917: point = 4803, n_alt = 0
   Insn 916: point = 4805, n_alt = 1
   Insn 915: point = 4807, n_alt = 0
  BB 77
   Insn 907: point = 4809, n_alt = 1
  BB 75
   Insn 899: point = 4810, n_alt = 1
   Insn 898: point = 4811, n_alt = 0
   Insn 897: point = 4812, n_alt = 0
   Insn 896: point = 4813, n_alt = 8
   Insn 895: point = 4814, n_alt = 7
  BB 74
   Insn 892: point = 4815, n_alt = -1
   Insn 891: point = 4815, n_alt = 0
   Insn 890: point = 4816, n_alt = 0
  BB 73
   Insn 888: point = 4817, n_alt = -1
   Insn 887: point = 4817, n_alt = 0
   Insn 886: point = 4818, n_alt = 0
  BB 72
   Insn 884: point = 4819, n_alt = -1
   Insn 883: point = 4819, n_alt = 0
   Insn 882: point = 4820, n_alt = 0
  BB 71
   Insn 880: point = 4821, n_alt = -1
   Insn 879: point = 4821, n_alt = 0
   Insn 878: point = 4822, n_alt = 0
  BB 70
   Insn 876: point = 4823, n_alt = -1
   Insn 875: point = 4823, n_alt = 0
   Insn 874: point = 4824, n_alt = 0
  BB 69
   Insn 871: point = 4825, n_alt = -1
   Insn 870: point = 4825, n_alt = 0
   Insn 869: point = 4826, n_alt = 0
  BB 68
   Insn 867: point = 4827, n_alt = -1
   Insn 866: point = 4827, n_alt = 0
   Insn 865: point = 4828, n_alt = 0
  BB 67
   Insn 863: point = 4829, n_alt = -1
   Insn 862: point = 4829, n_alt = 0
   Insn 861: point = 4830, n_alt = 0
  BB 66
   Insn 859: point = 4831, n_alt = -1
   Insn 858: point = 4831, n_alt = 0
   Insn 857: point = 4832, n_alt = 0
  BB 65
   Insn 855: point = 4833, n_alt = -1
   Insn 854: point = 4833, n_alt = 0
   Insn 853: point = 4834, n_alt = 0
  BB 64
   Insn 851: point = 4835, n_alt = -1
   Insn 850: point = 4835, n_alt = 0
   Insn 849: point = 4836, n_alt = 0
  BB 63
   Insn 847: point = 4837, n_alt = -1
   Insn 846: point = 4837, n_alt = 0
   Insn 845: point = 4838, n_alt = 0
  BB 62
   Insn 843: point = 4839, n_alt = -1
   Insn 842: point = 4839, n_alt = 0
   Insn 841: point = 4840, n_alt = 0
  BB 61
   Insn 839: point = 4841, n_alt = -1
   Insn 838: point = 4841, n_alt = 0
   Insn 837: point = 4842, n_alt = 0
  BB 60
   Insn 835: point = 4843, n_alt = -1
   Insn 834: point = 4843, n_alt = 0
   Insn 833: point = 4844, n_alt = 0
  BB 59
   Insn 831: point = 4845, n_alt = -1
   Insn 830: point = 4845, n_alt = 0
   Insn 829: point = 4846, n_alt = 0
  BB 58
   Insn 827: point = 4847, n_alt = -1
   Insn 826: point = 4847, n_alt = 0
   Insn 825: point = 4848, n_alt = 0
  BB 57
   Insn 823: point = 4849, n_alt = -1
   Insn 822: point = 4849, n_alt = 0
   Insn 821: point = 4850, n_alt = 0
  BB 56
   Insn 819: point = 4851, n_alt = -1
   Insn 818: point = 4851, n_alt = 0
   Insn 817: point = 4852, n_alt = 0
  BB 55
   Insn 815: point = 4853, n_alt = -1
   Insn 814: point = 4853, n_alt = 0
   Insn 813: point = 4854, n_alt = 0
  BB 54
   Insn 811: point = 4855, n_alt = -1
   Insn 810: point = 4855, n_alt = 0
   Insn 809: point = 4856, n_alt = 0
  BB 53
   Insn 807: point = 4857, n_alt = -1
   Insn 806: point = 4857, n_alt = 0
   Insn 805: point = 4858, n_alt = 0
  BB 52
   Insn 803: point = 4859, n_alt = -1
   Insn 802: point = 4859, n_alt = 0
   Insn 801: point = 4860, n_alt = 0
  BB 51
   Insn 799: point = 4861, n_alt = -1
   Insn 798: point = 4861, n_alt = 0
   Insn 797: point = 4862, n_alt = 0
  BB 50
   Insn 795: point = 4863, n_alt = -1
   Insn 794: point = 4863, n_alt = 0
   Insn 793: point = 4864, n_alt = 0
  BB 49
   Insn 791: point = 4865, n_alt = -1
   Insn 790: point = 4865, n_alt = 0
   Insn 789: point = 4866, n_alt = 0
  BB 48
   Insn 787: point = 4867, n_alt = -1
   Insn 786: point = 4867, n_alt = 0
   Insn 785: point = 4868, n_alt = 0
  BB 47
   Insn 783: point = 4869, n_alt = -1
   Insn 782: point = 4869, n_alt = 0
   Insn 781: point = 4870, n_alt = 0
   Insn 780: point = 4871, n_alt = 1
  BB 370
   Insn 5718: point = 4871, n_alt = -1
  BB 39
   Insn 650: point = 4871, n_alt = -1
   Insn 649: point = 4871, n_alt = 0
   Insn 648: point = 4872, n_alt = 0
   Insn 647: point = 4874, n_alt = 0
   Insn 646: point = 4875, n_alt = 0
   Insn 645: point = 4876, n_alt = 0
  BB 46
   Insn 5606: point = 4877, n_alt = -1
   Insn 774: point = 4877, n_alt = 1
   Insn 773: point = 4878, n_alt = 0
   Insn 772: point = 4880, n_alt = 0
  BB 371
   Insn 5721: point = 4881, n_alt = -1
  BB 41
   Insn 660: point = 4881, n_alt = -1
   Insn 659: point = 4881, n_alt = 0
   Insn 658: point = 4882, n_alt = 0
   Insn 657: point = 4884, n_alt = 0
   Insn 656: point = 4885, n_alt = 0
  BB 45
   Insn 5604: point = 4886, n_alt = -1
   Insn 766: point = 4886, n_alt = 1
  BB 372
   Insn 5724: point = 4887, n_alt = -1
  BB 43
   Insn 668: point = 4888, n_alt = -1
   Insn 667: point = 4888, n_alt = 0
   Insn 666: point = 4889, n_alt = 0
   Insn 665: point = 4891, n_alt = 0
   Insn 664: point = 4892, n_alt = 0
  BB 44
   Insn 5602: point = 4893, n_alt = -1
   Insn 760: point = 4893, n_alt = 1
   Insn 759: point = 4893, n_alt = 8
   Insn 758: point = 4894, n_alt = 4
   Insn 757: point = 4895, n_alt = 1
   Insn 756: point = 4897, n_alt = 7
   Insn 755: point = 4898, n_alt = 3
   Insn 754: point = 4900, n_alt = 0
   Insn 753: point = 4902, n_alt = 1
   Insn 752: point = 4904, n_alt = 0
   Insn 751: point = 4905, n_alt = 0
   Insn 750: point = 4907, n_alt = 0
   Insn 749: point = 4909, n_alt = 1
   Insn 748: point = 4911, n_alt = 0
   Insn 747: point = 4912, n_alt = 1
   Insn 746: point = 4914, n_alt = 1
   Insn 745: point = 4916, n_alt = 0
   Insn 744: point = 4917, n_alt = -2
   Insn 743: point = 4919, n_alt = 1
   Insn 742: point = 4921, n_alt = 7
   Insn 741: point = 4923, n_alt = 0
   Insn 740: point = 4925, n_alt = 4
   Insn 739: point = 4926, n_alt = 3
   Insn 738: point = 4928, n_alt = 0
   Insn 737: point = 4930, n_alt = 1
   Insn 736: point = 4932, n_alt = 0
   Insn 735: point = 4933, n_alt = 0
   Insn 734: point = 4935, n_alt = 0
   Insn 733: point = 4937, n_alt = 1
   Insn 732: point = 4939, n_alt = 0
   Insn 731: point = 4940, n_alt = 1
   Insn 730: point = 4942, n_alt = 1
   Insn 729: point = 4944, n_alt = 0
   Insn 728: point = 4945, n_alt = 7
   Insn 727: point = 4947, n_alt = 0
   Insn 726: point = 4949, n_alt = 4
   Insn 725: point = 4950, n_alt = 3
   Insn 724: point = 4952, n_alt = 0
   Insn 723: point = 4954, n_alt = 1
   Insn 722: point = 4956, n_alt = 0
   Insn 721: point = 4957, n_alt = 0
   Insn 720: point = 4959, n_alt = 0
   Insn 719: point = 4961, n_alt = 1
   Insn 718: point = 4963, n_alt = 0
   Insn 717: point = 4964, n_alt = 1
   Insn 716: point = 4966, n_alt = 1
   Insn 715: point = 4968, n_alt = 0
   Insn 714: point = 4970, n_alt = 0
   Insn 713: point = 4971, n_alt = 8
   Insn 712: point = 4972, n_alt = 4
   Insn 711: point = 4973, n_alt = 1
   Insn 710: point = 4975, n_alt = 7
   Insn 709: point = 4976, n_alt = 3
   Insn 708: point = 4978, n_alt = 0
   Insn 707: point = 4980, n_alt = 1
   Insn 706: point = 4982, n_alt = 0
   Insn 705: point = 4983, n_alt = 0
   Insn 704: point = 4985, n_alt = 0
   Insn 703: point = 4987, n_alt = 1
   Insn 702: point = 4989, n_alt = 0
   Insn 701: point = 4990, n_alt = 1
   Insn 700: point = 4992, n_alt = 1
   Insn 699: point = 4994, n_alt = 0
   Insn 698: point = 4995, n_alt = -2
   Insn 697: point = 4997, n_alt = 1
   Insn 696: point = 4999, n_alt = 7
   Insn 695: point = 5001, n_alt = 4
   Insn 694: point = 5002, n_alt = 3
   Insn 693: point = 5004, n_alt = 0
   Insn 692: point = 5006, n_alt = 1
   Insn 691: point = 5008, n_alt = 0
   Insn 690: point = 5009, n_alt = 0
   Insn 689: point = 5011, n_alt = 0
   Insn 688: point = 5013, n_alt = 1
   Insn 687: point = 5015, n_alt = 0
   Insn 686: point = 5016, n_alt = 1
   Insn 685: point = 5018, n_alt = 1
   Insn 684: point = 5020, n_alt = 0
   Insn 683: point = 5021, n_alt = 7
   Insn 682: point = 5023, n_alt = 4
   Insn 681: point = 5024, n_alt = 3
   Insn 680: point = 5026, n_alt = 0
   Insn 679: point = 5028, n_alt = 1
   Insn 678: point = 5030, n_alt = 0
   Insn 677: point = 5031, n_alt = 0
   Insn 676: point = 5033, n_alt = 0
   Insn 675: point = 5035, n_alt = 1
   Insn 674: point = 5037, n_alt = 0
   Insn 673: point = 5038, n_alt = 1
   Insn 672: point = 5040, n_alt = 1
   Insn 671: point = 5042, n_alt = 0
   Insn 670: point = 5044, n_alt = 0
  BB 42
   Insn 662: point = 5046, n_alt = 1
  BB 40
   Insn 654: point = 5047, n_alt = 1
   Insn 653: point = 5048, n_alt = 0
   Insn 652: point = 5049, n_alt = 0
  BB 38
   Insn 643: point = 5050, n_alt = 1
  BB 368
   Insn 5712: point = 5050, n_alt = -1
  BB 27
   Insn 511: point = 5050, n_alt = -1
   Insn 510: point = 5050, n_alt = 0
   Insn 509: point = 5051, n_alt = 0
   Insn 508: point = 5053, n_alt = 0
   Insn 507: point = 5054, n_alt = 0
  BB 37
   Insn 5600: point = 5055, n_alt = -1
   Insn 637: point = 5055, n_alt = 1
  BB 369
   Insn 5715: point = 5056, n_alt = -1
  BB 35
   Insn 603: point = 5057, n_alt = -1
   Insn 602: point = 5057, n_alt = 0
   Insn 601: point = 5058, n_alt = 0
   Insn 600: point = 5060, n_alt = 0
   Insn 599: point = 5061, n_alt = 0
   Insn 598: point = 5062, n_alt = 0
  BB 36
   Insn 5598: point = 5064, n_alt = -1
   Insn 631: point = 5064, n_alt = 1
   Insn 630: point = 5065, n_alt = 0
   Insn 629: point = 5067, n_alt = 0
   Insn 628: point = 5068, n_alt = 8
   Insn 627: point = 5069, n_alt = 0
   Insn 626: point = 5071, n_alt = 4
   Insn 625: point = 5072, n_alt = 1
   Insn 624: point = 5074, n_alt = 7
   Insn 623: point = 5075, n_alt = 3
   Insn 622: point = 5077, n_alt = 0
   Insn 621: point = 5079, n_alt = 0
   Insn 620: point = 5081, n_alt = 0
   Insn 619: point = 5082, n_alt = 0
   Insn 618: point = 5084, n_alt = 0
   Insn 617: point = 5086, n_alt = 0
   Insn 616: point = 5088, n_alt = 0
   Insn 615: point = 5089, n_alt = 1
   Insn 614: point = 5091, n_alt = 0
   Insn 613: point = 5093, n_alt = 0
   Insn 612: point = 5095, n_alt = 0
   Insn 611: point = 5096, n_alt = 7
   Insn 610: point = 5098, n_alt = 0
   Insn 609: point = 5100, n_alt = 4
   Insn 608: point = 5101, n_alt = 3
   Insn 607: point = 5103, n_alt = 0
   Insn 606: point = 5105, n_alt = 0
   Insn 605: point = 5107, n_alt = 0
  BB 34
   Insn 596: point = 5109, n_alt = 1
   Insn 595: point = 5110, n_alt = 0
   Insn 594: point = 5111, n_alt = 1
   Insn 593: point = 5112, n_alt = 0
   Insn 592: point = 5114, n_alt = 0
   Insn 591: point = 5116, n_alt = 0
   Insn 590: point = 5118, n_alt = 4
   Insn 589: point = 5119, n_alt = 3
   Insn 588: point = 5121, n_alt = 0
   Insn 587: point = 5123, n_alt = 0
   Insn 586: point = 5125, n_alt = 0
   Insn 585: point = 5126, n_alt = 0
   Insn 584: point = 5128, n_alt = 0
   Insn 583: point = 5130, n_alt = 0
   Insn 582: point = 5131, n_alt = 1
   Insn 581: point = 5132, n_alt = 0
   Insn 580: point = 5134, n_alt = 0
   Insn 576: point = 5135, n_alt = 1
   Insn 575: point = 5137, n_alt = 0
  BB 31
   Insn 5596: point = 5139, n_alt = -1
   Insn 563: point = 5139, n_alt = 1
   Insn 562: point = 5139, n_alt = 1
   Insn 561: point = 5140, n_alt = 0
   Insn 560: point = 5142, n_alt = 0
   Insn 556: point = 5143, n_alt = 1
   Insn 555: point = 5145, n_alt = 0
  BB 29
   Insn 5594: point = 5147, n_alt = -1
   Insn 547: point = 5147, n_alt = 1
   Insn 546: point = 5147, n_alt = 1
   Insn 545: point = 5148, n_alt = 0
   Insn 544: point = 5150, n_alt = 0
   Insn 543: point = 5152, n_alt = 0
   Insn 542: point = 5153, n_alt = 1
   Insn 541: point = 5155, n_alt = 0
  BB 33
   Insn 572: point = 5157, n_alt = 1
   Insn 571: point = 5157, n_alt = 1
  BB 32
   Insn 569: point = 5158, n_alt = -1
   Insn 568: point = 5158, n_alt = 1
  BB 30
   Insn 553: point = 5159, n_alt = -1
   Insn 552: point = 5159, n_alt = 1
  BB 28
   Insn 539: point = 5160, n_alt = -1
   Insn 538: point = 5160, n_alt = 0
   Insn 537: point = 5160, n_alt = 1
   Insn 5843: point = 5161, n_alt = -2
	Hard reg 0 is preferable by r2994 with profit 1000
   Insn 536: point = 5163, n_alt = 0
   Insn 5842: point = 5164, n_alt = -2
	Hard reg 0 is preferable by r2994 with profit 1000
	Hard reg 2 is preferable by r2994 with profit 1000
   Insn 535: point = 5166, n_alt = 1
   Insn 5841: point = 5168, n_alt = -2
	Hard reg 0 is preferable by r2993 with profit 1000
   Insn 534: point = 5170, n_alt = 0
   Insn 5840: point = 5171, n_alt = -2
	Hard reg 0 is preferable by r2993 with profit 1000
	Hard reg 1 is preferable by r2993 with profit 1000
   Insn 5839: point = 5173, n_alt = -2
	Hard reg 0 is preferable by r2992 with profit 1000
   Insn 533: point = 5175, n_alt = 1
   Insn 5838: point = 5175, n_alt = -2
   Insn 5837: point = 5176, n_alt = -2
	Hard reg 1 is preferable by r2991 with profit 1000
   Insn 532: point = 5178, n_alt = 0
   Insn 5836: point = 5178, n_alt = -2
	Hard reg 1 is preferable by r2991 with profit 1000
	Hard reg 0 is preferable by r2991 with profit 1000
   Insn 531: point = 5180, n_alt = 3
   Insn 530: point = 5182, n_alt = 0
   Insn 5835: point = 5184, n_alt = -2
   Insn 529: point = 5185, n_alt = 0
   Insn 528: point = 5186, n_alt = 0
   Insn 527: point = 5187, n_alt = 1
   Insn 5834: point = 5188, n_alt = -2
	Hard reg 0 is preferable by r2989 with profit 1000
   Insn 526: point = 5190, n_alt = 0
   Insn 5833: point = 5191, n_alt = -2
	Hard reg 0 is preferable by r2989 with profit 1000
	Hard reg 1 is preferable by r2989 with profit 1000
   Insn 5832: point = 5193, n_alt = -2
	Hard reg 0 is preferable by r2988 with profit 1000
   Insn 525: point = 5195, n_alt = 1
   Insn 5831: point = 5195, n_alt = -2
	Hard reg 0 is preferable by r2988 with profit 1000
	Hard reg 2 is preferable by r2988 with profit 1000
   Insn 5830: point = 5197, n_alt = -2
	Hard reg 1 is preferable by r2987 with profit 1000
   Insn 524: point = 5199, n_alt = 0
   Insn 5829: point = 5199, n_alt = -2
	Hard reg 1 is preferable by r2987 with profit 1000
	Hard reg 0 is preferable by r2987 with profit 1000
   Insn 523: point = 5201, n_alt = 3
   Insn 522: point = 5203, n_alt = 0
   Insn 5828: point = 5205, n_alt = -2
   Insn 521: point = 5206, n_alt = 0
   Insn 520: point = 5207, n_alt = 0
   Insn 519: point = 5208, n_alt = 1
   Insn 518: point = 5209, n_alt = 0
   Insn 517: point = 5211, n_alt = 0
   Insn 516: point = 5213, n_alt = 4
   Insn 515: point = 5214, n_alt = 3
   Insn 514: point = 5216, n_alt = 0
   Insn 513: point = 5218, n_alt = 0
  BB 26
   Insn 505: point = 5220, n_alt = 1
   Insn 504: point = 5220, n_alt = 0
   Insn 503: point = 5221, n_alt = 1
   Insn 502: point = 5222, n_alt = 0
   Insn 501: point = 5224, n_alt = 4
  BB 365
   Insn 5703: point = 5225, n_alt = -1
  BB 18
   Insn 315: point = 5225, n_alt = -1
   Insn 314: point = 5225, n_alt = 0
   Insn 313: point = 5226, n_alt = 0
   Insn 312: point = 5228, n_alt = 0
   Insn 311: point = 5229, n_alt = 0
   Insn 310: point = 5230, n_alt = 0
  BB 25
   Insn 5592: point = 5231, n_alt = -1
   Insn 495: point = 5231, n_alt = 1
   Insn 494: point = 5232, n_alt = 0
   Insn 493: point = 5234, n_alt = 0
  BB 366
   Insn 5706: point = 5235, n_alt = -1
  BB 20
   Insn 325: point = 5235, n_alt = -1
   Insn 324: point = 5235, n_alt = 0
   Insn 323: point = 5236, n_alt = 0
   Insn 322: point = 5238, n_alt = 0
   Insn 321: point = 5239, n_alt = 0
  BB 24
   Insn 5590: point = 5240, n_alt = -1
   Insn 487: point = 5240, n_alt = 1
  BB 367
   Insn 5709: point = 5241, n_alt = -1
  BB 22
   Insn 333: point = 5242, n_alt = -1
   Insn 332: point = 5242, n_alt = 0
   Insn 331: point = 5243, n_alt = 0
   Insn 330: point = 5245, n_alt = 0
   Insn 329: point = 5246, n_alt = 0
  BB 23
   Insn 5588: point = 5247, n_alt = -1
   Insn 481: point = 5247, n_alt = 1
   Insn 480: point = 5247, n_alt = 8
   Insn 479: point = 5248, n_alt = 4
   Insn 478: point = 5249, n_alt = 7
   Insn 477: point = 5251, n_alt = 4
   Insn 476: point = 5252, n_alt = 3
   Insn 475: point = 5254, n_alt = 0
   Insn 474: point = 5256, n_alt = 1
   Insn 473: point = 5258, n_alt = 0
   Insn 472: point = 5259, n_alt = 0
   Insn 471: point = 5261, n_alt = 1
   Insn 470: point = 5263, n_alt = 0
   Insn 469: point = 5264, n_alt = 3
   Insn 468: point = 5266, n_alt = 0
   Insn 467: point = 5268, n_alt = 1
   Insn 466: point = 5270, n_alt = 0
   Insn 465: point = 5271, n_alt = 0
   Insn 464: point = 5273, n_alt = 1
   Insn 463: point = 5275, n_alt = 0
   Insn 462: point = 5276, n_alt = 8
   Insn 461: point = 5277, n_alt = 0
   Insn 460: point = 5279, n_alt = 4
   Insn 459: point = 5280, n_alt = 1
   Insn 458: point = 5282, n_alt = 7
   Insn 457: point = 5283, n_alt = 3
   Insn 456: point = 5285, n_alt = 0
   Insn 455: point = 5287, n_alt = 1
   Insn 454: point = 5289, n_alt = 0
   Insn 453: point = 5290, n_alt = 0
   Insn 452: point = 5292, n_alt = 0
   Insn 451: point = 5294, n_alt = 1
   Insn 450: point = 5296, n_alt = 0
   Insn 449: point = 5297, n_alt = 1
   Insn 448: point = 5299, n_alt = 1
   Insn 447: point = 5301, n_alt = 0
   Insn 446: point = 5302, n_alt = 7
   Insn 445: point = 5304, n_alt = 4
   Insn 444: point = 5305, n_alt = 3
   Insn 443: point = 5307, n_alt = 0
   Insn 442: point = 5309, n_alt = 1
   Insn 441: point = 5311, n_alt = 0
   Insn 440: point = 5312, n_alt = 0
   Insn 439: point = 5314, n_alt = 1
   Insn 438: point = 5316, n_alt = 0
   Insn 437: point = 5317, n_alt = 8
   Insn 436: point = 5318, n_alt = 4
   Insn 435: point = 5319, n_alt = 1
   Insn 434: point = 5321, n_alt = 3
   Insn 433: point = 5323, n_alt = 0
   Insn 432: point = 5325, n_alt = 1
   Insn 431: point = 5327, n_alt = 0
   Insn 430: point = 5328, n_alt = 0
   Insn 429: point = 5330, n_alt = 1
   Insn 428: point = 5332, n_alt = 0
   Insn 427: point = 5333, n_alt = 7
   Insn 426: point = 5335, n_alt = 4
   Insn 425: point = 5336, n_alt = 3
   Insn 424: point = 5338, n_alt = 0
   Insn 423: point = 5340, n_alt = 1
   Insn 422: point = 5342, n_alt = 0
   Insn 421: point = 5343, n_alt = 0
   Insn 420: point = 5345, n_alt = 1
   Insn 419: point = 5347, n_alt = 0
   Insn 418: point = 5348, n_alt = 1
   Insn 417: point = 5350, n_alt = -2
   Insn 416: point = 5352, n_alt = 2
   Insn 415: point = 5354, n_alt = 7
   Insn 414: point = 5356, n_alt = 0
   Insn 413: point = 5358, n_alt = 4
   Insn 412: point = 5359, n_alt = 3
   Insn 411: point = 5361, n_alt = 0
   Insn 410: point = 5363, n_alt = 1
   Insn 409: point = 5365, n_alt = 0
   Insn 408: point = 5366, n_alt = 0
   Insn 407: point = 5368, n_alt = 0
   Insn 406: point = 5370, n_alt = 1
   Insn 405: point = 5372, n_alt = 0
   Insn 404: point = 5373, n_alt = 1
   Insn 403: point = 5375, n_alt = 1
   Insn 402: point = 5377, n_alt = 0
   Insn 401: point = 5378, n_alt = 7
   Insn 400: point = 5380, n_alt = 0
   Insn 399: point = 5382, n_alt = 4
   Insn 398: point = 5383, n_alt = 3
   Insn 397: point = 5385, n_alt = 0
   Insn 396: point = 5387, n_alt = 1
   Insn 395: point = 5389, n_alt = 0
   Insn 394: point = 5390, n_alt = 0
   Insn 393: point = 5392, n_alt = 0
   Insn 392: point = 5394, n_alt = 1
   Insn 391: point = 5396, n_alt = 0
   Insn 390: point = 5397, n_alt = 1
   Insn 389: point = 5399, n_alt = 1
   Insn 388: point = 5401, n_alt = 0
   Insn 387: point = 5403, n_alt = 0
   Insn 386: point = 5404, n_alt = 1
   Insn 385: point = 5406, n_alt = 7
   Insn 384: point = 5408, n_alt = 4
   Insn 383: point = 5409, n_alt = 1
   Insn 382: point = 5411, n_alt = -2
   Insn 381: point = 5413, n_alt = 1
   Insn 380: point = 5415, n_alt = 7
   Insn 379: point = 5416, n_alt = 1
   Insn 378: point = 5418, n_alt = 7
   Insn 377: point = 5419, n_alt = 7
   Insn 376: point = 5421, n_alt = 0
   Insn 375: point = 5423, n_alt = 4
   Insn 374: point = 5424, n_alt = 3
   Insn 373: point = 5426, n_alt = 0
   Insn 372: point = 5428, n_alt = 1
   Insn 371: point = 5430, n_alt = 0
   Insn 370: point = 5431, n_alt = 0
   Insn 369: point = 5433, n_alt = 0
   Insn 368: point = 5435, n_alt = 1
   Insn 367: point = 5437, n_alt = 0
   Insn 366: point = 5438, n_alt = 1
   Insn 365: point = 5440, n_alt = 1
   Insn 364: point = 5442, n_alt = 0
   Insn 363: point = 5443, n_alt = 1
   Insn 362: point = 5445, n_alt = 7
   Insn 361: point = 5447, n_alt = 0
   Insn 360: point = 5449, n_alt = 4
   Insn 359: point = 5450, n_alt = 3
   Insn 358: point = 5452, n_alt = 0
   Insn 357: point = 5454, n_alt = 1
   Insn 356: point = 5456, n_alt = 0
   Insn 355: point = 5457, n_alt = 0
   Insn 354: point = 5459, n_alt = 0
   Insn 353: point = 5461, n_alt = 1
   Insn 352: point = 5463, n_alt = 0
   Insn 351: point = 5464, n_alt = 1
   Insn 350: point = 5466, n_alt = 1
   Insn 349: point = 5468, n_alt = 0
   Insn 348: point = 5469, n_alt = 7
   Insn 347: point = 5471, n_alt = 0
   Insn 346: point = 5473, n_alt = 4
   Insn 345: point = 5474, n_alt = 3
   Insn 344: point = 5476, n_alt = 0
   Insn 343: point = 5478, n_alt = 1
   Insn 342: point = 5480, n_alt = 0
   Insn 341: point = 5481, n_alt = 0
   Insn 340: point = 5483, n_alt = 0
   Insn 339: point = 5485, n_alt = 1
   Insn 338: point = 5487, n_alt = 0
   Insn 337: point = 5488, n_alt = 1
   Insn 336: point = 5490, n_alt = 1
   Insn 335: point = 5492, n_alt = 0
  BB 21
   Insn 327: point = 5494, n_alt = 1
  BB 19
   Insn 319: point = 5495, n_alt = 1
   Insn 318: point = 5496, n_alt = 0
   Insn 317: point = 5497, n_alt = 0
  BB 17
   Insn 308: point = 5498, n_alt = 1
  BB 363
   Insn 5697: point = 5498, n_alt = -1
  BB 12
   Insn 245: point = 5498, n_alt = -1
   Insn 244: point = 5498, n_alt = 0
   Insn 243: point = 5499, n_alt = 0
   Insn 242: point = 5501, n_alt = 0
   Insn 241: point = 5502, n_alt = 0
  BB 16
   Insn 5586: point = 5503, n_alt = -1
   Insn 302: point = 5503, n_alt = 1
  BB 364
   Insn 5700: point = 5504, n_alt = -1
  BB 14
   Insn 253: point = 5505, n_alt = -1
   Insn 252: point = 5505, n_alt = 0
   Insn 251: point = 5506, n_alt = 0
   Insn 250: point = 5508, n_alt = 0
   Insn 249: point = 5509, n_alt = 0
  BB 15
   Insn 5584: point = 5510, n_alt = -1
   Insn 296: point = 5510, n_alt = 1
   Insn 295: point = 5510, n_alt = 8
   Insn 294: point = 5511, n_alt = 4
   Insn 293: point = 5512, n_alt = 7
   Insn 292: point = 5514, n_alt = 0
   Insn 291: point = 5516, n_alt = 4
   Insn 290: point = 5517, n_alt = 3
   Insn 289: point = 5519, n_alt = 0
   Insn 288: point = 5521, n_alt = 1
   Insn 287: point = 5523, n_alt = 0
   Insn 286: point = 5524, n_alt = 0
   Insn 285: point = 5526, n_alt = 1
   Insn 284: point = 5528, n_alt = 0
   Insn 283: point = 5529, n_alt = 3
   Insn 282: point = 5531, n_alt = 0
   Insn 281: point = 5533, n_alt = 1
   Insn 280: point = 5535, n_alt = 0
   Insn 279: point = 5536, n_alt = 0
   Insn 278: point = 5538, n_alt = 1
   Insn 277: point = 5540, n_alt = 0
   Insn 276: point = 5541, n_alt = 8
   Insn 275: point = 5542, n_alt = 0
   Insn 274: point = 5544, n_alt = 4
   Insn 273: point = 5545, n_alt = 1
   Insn 272: point = 5547, n_alt = 7
   Insn 271: point = 5548, n_alt = 3
   Insn 270: point = 5550, n_alt = 0
   Insn 269: point = 5552, n_alt = 1
   Insn 268: point = 5554, n_alt = 0
   Insn 267: point = 5555, n_alt = 0
   Insn 266: point = 5557, n_alt = 1
   Insn 265: point = 5559, n_alt = 0
   Insn 264: point = 5560, n_alt = 7
   Insn 263: point = 5562, n_alt = 0
   Insn 262: point = 5564, n_alt = 4
   Insn 261: point = 5565, n_alt = 3
   Insn 260: point = 5567, n_alt = 0
   Insn 259: point = 5569, n_alt = 1
   Insn 258: point = 5571, n_alt = 0
   Insn 257: point = 5572, n_alt = 0
   Insn 256: point = 5574, n_alt = 1
   Insn 255: point = 5576, n_alt = 0
  BB 13
   Insn 247: point = 5578, n_alt = 1
  BB 11
   Insn 239: point = 5579, n_alt = 1
   Insn 238: point = 5580, n_alt = 0
   Insn 237: point = 5581, n_alt = 0
   Insn 236: point = 5582, n_alt = 0
   Insn 235: point = 5582, n_alt = 3
  BB 10
   Insn 232: point = 5582, n_alt = 0
   Insn 231: point = 5582, n_alt = 3
   Insn 230: point = 5582, n_alt = 2
   Insn 229: point = 5582, n_alt = 2
   Insn 228: point = 5582, n_alt = -2
   Insn 227: point = 5583, n_alt = -2
   Insn 226: point = 5584, n_alt = -2
   Insn 225: point = 5585, n_alt = -2
   Insn 224: point = 5586, n_alt = 3
   Insn 223: point = 5587, n_alt = 3
   Insn 222: point = 5588, n_alt = 3
   Insn 221: point = 5589, n_alt = 3
   Insn 220: point = 5591, n_alt = 0
   Insn 219: point = 5593, n_alt = 0
   Insn 218: point = 5595, n_alt = -2
   Insn 217: point = 5597, n_alt = -2
   Insn 216: point = 5599, n_alt = 0
   Insn 215: point = 5601, n_alt = 0
   Insn 214: point = 5602, n_alt = -2
   Insn 213: point = 5604, n_alt = 0
   Insn 212: point = 5606, n_alt = -2
   Insn 211: point = 5607, n_alt = 3
   Insn 210: point = 5609, n_alt = 0
   Insn 209: point = 5611, n_alt = 0
   Insn 208: point = 5612, n_alt = 0
   Insn 207: point = 5612, n_alt = -2
   Insn 206: point = 5613, n_alt = 3
   Insn 205: point = 5614, n_alt = 0
   Insn 204: point = 5614, n_alt = -2
   Insn 203: point = 5615, n_alt = 2
   Insn 202: point = 5615, n_alt = 2
   Insn 201: point = 5615, n_alt = 3
   Insn 200: point = 5616, n_alt = 0
   Insn 199: point = 5616, n_alt = -2
   Insn 198: point = 5617, n_alt = 3
   Insn 197: point = 5618, n_alt = 1
   Insn 196: point = 5618, n_alt = 1
   Insn 195: point = 5618, n_alt = 1
   Insn 194: point = 5618, n_alt = 5
   Insn 193: point = 5618, n_alt = 0
   Insn 192: point = 5619, n_alt = 1
   Insn 5827: point = 5620, n_alt = -2
	Hard reg 1 is preferable by r2985 with profit 1000
   Insn 191: point = 5622, n_alt = 0
   Insn 5826: point = 5623, n_alt = -2
	Hard reg 1 is preferable by r2985 with profit 2000
   Insn 190: point = 5625, n_alt = 2
   Insn 189: point = 5626, n_alt = 2
   Insn 188: point = 5627, n_alt = 2
   Insn 187: point = 5628, n_alt = 0
   Insn 186: point = 5628, n_alt = 0
   Insn 185: point = 5628, n_alt = 3
   Insn 184: point = 5628, n_alt = 2
   Insn 183: point = 5628, n_alt = 2
   Insn 182: point = 5628, n_alt = 4
   Insn 181: point = 5628, n_alt = 4
   Insn 180: point = 5628, n_alt = -2
   Insn 179: point = 5629, n_alt = -2
   Insn 178: point = 5630, n_alt = 0
   Insn 177: point = 5630, n_alt = 0
   Insn 176: point = 5630, n_alt = 3
   Insn 175: point = 5631, n_alt = 3
   Insn 174: point = 5632, n_alt = 0
   Insn 173: point = 5632, n_alt = 3
  BB 9
   Insn 171: point = 5632, n_alt = -1
   Insn 170: point = 5632, n_alt = 0
   Insn 169: point = 5633, n_alt = 0
  BB 8
   Insn 166: point = 5634, n_alt = 0
   Insn 165: point = 5634, n_alt = 3
   Insn 164: point = 5634, n_alt = 2
   Insn 163: point = 5634, n_alt = 2
   Insn 162: point = 5634, n_alt = -2
   Insn 161: point = 5635, n_alt = -2
   Insn 160: point = 5636, n_alt = -2
   Insn 159: point = 5637, n_alt = -2
   Insn 158: point = 5638, n_alt = 3
   Insn 157: point = 5639, n_alt = 3
   Insn 156: point = 5640, n_alt = 3
   Insn 155: point = 5641, n_alt = 3
   Insn 154: point = 5643, n_alt = 0
   Insn 153: point = 5645, n_alt = 0
   Insn 152: point = 5647, n_alt = -2
   Insn 151: point = 5649, n_alt = -2
   Insn 150: point = 5651, n_alt = 0
   Insn 149: point = 5653, n_alt = 0
   Insn 148: point = 5654, n_alt = -2
   Insn 147: point = 5656, n_alt = 0
   Insn 146: point = 5658, n_alt = -2
   Insn 145: point = 5659, n_alt = 3
   Insn 144: point = 5661, n_alt = 0
   Insn 143: point = 5663, n_alt = 0
   Insn 142: point = 5664, n_alt = 0
   Insn 141: point = 5665, n_alt = 1
   Insn 5825: point = 5666, n_alt = -2
	Hard reg 1 is preferable by r2984 with profit 1000
   Insn 140: point = 5668, n_alt = 0
   Insn 5824: point = 5669, n_alt = -2
	Hard reg 1 is preferable by r2984 with profit 2000
   Insn 139: point = 5671, n_alt = 2
   Insn 138: point = 5672, n_alt = 2
   Insn 137: point = 5673, n_alt = 2
   Insn 136: point = 5674, n_alt = 0
   Insn 135: point = 5674, n_alt = 0
   Insn 134: point = 5674, n_alt = 3
   Insn 133: point = 5674, n_alt = 2
   Insn 132: point = 5674, n_alt = 2
   Insn 131: point = 5674, n_alt = 4
   Insn 130: point = 5674, n_alt = 4
   Insn 129: point = 5674, n_alt = -2
   Insn 128: point = 5675, n_alt = -2
   Insn 127: point = 5676, n_alt = 0
   Insn 126: point = 5676, n_alt = 0
   Insn 125: point = 5676, n_alt = 3
   Insn 124: point = 5677, n_alt = 3
  BB 7
   Insn 122: point = 5678, n_alt = -1
   Insn 121: point = 5678, n_alt = 0
   Insn 120: point = 5679, n_alt = 0
  BB 5
   Insn 5582: point = 5680, n_alt = -1
   Insn 111: point = 5680, n_alt = 8
   Insn 5823: point = 5681, n_alt = -2
	Hard reg 21 is preferable by r2983 with profit 1000
   Insn 110: point = 5683, n_alt = 2
   Insn 5822: point = 5684, n_alt = -2
	Hard reg 21 is preferable by r2983 with profit 1000
	Hard reg 22 is preferable by r2983 with profit 1000
   Insn 109: point = 5686, n_alt = -2
   Insn 108: point = 5688, n_alt = 2
   Insn 107: point = 5690, n_alt = 7
   Insn 106: point = 5691, n_alt = -2
   Insn 105: point = 5693, n_alt = 2
   Insn 104: point = 5695, n_alt = 7
  BB 3
   Insn 5579: point = 5696, n_alt = -1
   Insn 92: point = 5696, n_alt = 8
   Insn 91: point = 5697, n_alt = 7
  BB 6
   Insn 117: point = 5698, n_alt = 8
   Insn 116: point = 5699, n_alt = 7
  BB 4
   Insn 99: point = 5700, n_alt = -1
   Insn 98: point = 5700, n_alt = 1
   Insn 97: point = 5701, n_alt = 7
  BB 2
   Insn 86: point = 5702, n_alt = -1
   Insn 85: point = 5702, n_alt = 1
   Insn 84: point = 5703, n_alt = 7
   Insn 83: point = 5704, n_alt = 8
   Insn 82: point = 5705, n_alt = 1
   Insn 81: point = 5707, n_alt = 7
   Insn 80: point = 5708, n_alt = 1
   Insn 79: point = 5710, n_alt = 0
   Insn 78: point = 5711, n_alt = 8
   Insn 77: point = 5712, n_alt = 7
   Insn 76: point = 5713, n_alt = 8
   Insn 75: point = 5714, n_alt = 7
   Insn 73: point = 5715, n_alt = 5
   Insn 72: point = 5716, n_alt = -2
   Insn 71: point = 5718, n_alt = -2
   Insn 70: point = 5719, n_alt = 0
   Insn 69: point = 5719, n_alt = -2
   Insn 68: point = 5720, n_alt = 1
   Insn 66: point = 5722, n_alt = 0
   Insn 67: point = 5722, n_alt = 2
   Insn 65: point = 5723, n_alt = -2
   Insn 64: point = 5725, n_alt = 0
   Insn 60: point = 5727, n_alt = 2
   Insn 59: point = 5728, n_alt = 3
   Insn 58: point = 5729, n_alt = -2
   Insn 56: point = 5730, n_alt = 1
   Insn 54: point = 5732, n_alt = 0
   Insn 55: point = 5732, n_alt = 2
   Insn 53: point = 5733, n_alt = 2
   Insn 52: point = 5735, n_alt = 5
   Insn 51: point = 5736, n_alt = 1
   Insn 50: point = 5738, n_alt = 0
   Insn 49: point = 5740, n_alt = 3
   Insn 48: point = 5741, n_alt = 1
   Insn 46: point = 5743, n_alt = 0
   Insn 47: point = 5743, n_alt = 2
   Insn 45: point = 5744, n_alt = 3
   Insn 44: point = 5745, n_alt = 5
   Insn 43: point = 5746, n_alt = 0
   Insn 42: point = 5748, n_alt = 0
   Insn 41: point = 5750, n_alt = 3
   Insn 39: point = 5751, n_alt = 5
   Insn 38: point = 5752, n_alt = -2
   Insn 37: point = 5754, n_alt = -2
   Insn 36: point = 5755, n_alt = 0
   Insn 35: point = 5755, n_alt = -2
   Insn 34: point = 5756, n_alt = 1
   Insn 32: point = 5758, n_alt = 0
   Insn 33: point = 5758, n_alt = 2
   Insn 31: point = 5759, n_alt = -2
   Insn 30: point = 5761, n_alt = 0
   Insn 26: point = 5763, n_alt = 2
   Insn 25: point = 5764, n_alt = 3
   Insn 24: point = 5765, n_alt = -2
   Insn 22: point = 5766, n_alt = 1
   Insn 20: point = 5768, n_alt = 0
   Insn 21: point = 5768, n_alt = 2
   Insn 19: point = 5769, n_alt = 2
   Insn 18: point = 5771, n_alt = 5
   Insn 17: point = 5772, n_alt = 1
   Insn 16: point = 5774, n_alt = 0
   Insn 15: point = 5776, n_alt = 3
   Insn 14: point = 5777, n_alt = 1
   Insn 12: point = 5779, n_alt = 0
   Insn 13: point = 5779, n_alt = 2
   Insn 11: point = 5780, n_alt = 3
   Insn 10: point = 5781, n_alt = 5
   Insn 9: point = 5782, n_alt = 0
   Insn 8: point = 5784, n_alt = 0
   Insn 7: point = 5786, n_alt = 3
   Insn 3: point = 5787, n_alt = 5
   Insn 2: point = 5787, n_alt = 5
 r87: [5783..5784]
 r88: [5773..5774]
 r89: [5764..5765]
 r90: [5763..5787]
 r92: [5760..5761]
 r93: [5757..5759]
 r94: [5755..5756]
 r95: [5747..5748]
 r96: [5737..5738]
 r97: [5728..5729]
 r98: [5727..5787]
 r100: [5724..5725]
 r101: [5721..5723]
 r102: [5719..5720]
 r103: [5709..5710]
 r104: [5706..5708]
 r105: [5706..5707]
 r106: [5692..5693]
 r107: [5685..5691]
 r108: [5687..5688]
 r109: [5683..5686]
 r110: [5678..5679]
 r111: [5662..5663]
 r112: [5660..5661]
 r113: [5653..5659]
 r114: [5646..5647]
 r115: [5634..5641]
 r116: [5632..5633]
 r117: [5610..5611]
 r118: [5608..5609]
 r119: [5601..5607]
 r120: [5594..5595]
 r121: [5582..5589]
 r122: [5573..5574]
 r123: [5568..5572]
 r124: [5568..5569]
 r125: [5566..5567]
 r126: [5563..5565]
 r127: [5546..5560]
 r128: [5556..5557]
 r129: [5551..5555]
 r130: [5551..5552]
 r131: [5549..5550]
 r132: [5543..5548]
 r133: [5541..5545]
 r134: [5537..5538]
 r135: [5532..5536]
 r136: [5532..5533]
 r137: [5530..5531]
 r138: [5515..5529]
 r139: [5525..5526]
 r140: [5520..5524]
 r141: [5520..5521]
 r142: [5518..5519]
 r143: [5510..5517]
 r144: [5510..5512]
 r145: [5229..5230]
 r146: [5491..5492]
 r147: [5489..5490]
 r148: [5482..5488]
 r149: [5484..5485]
 r150: [5482..5483]
 r151: [5477..5481]
 r152: [5477..5478]
 r153: [5475..5476]
 r154: [5472..5474]
 r155: [5444..5469]
 r156: [5467..5468]
 r157: [5465..5466]
 r158: [5458..5464]
 r159: [5460..5461]
 r160: [5458..5459]
 r161: [5453..5457]
 r162: [5453..5454]
 r163: [5451..5452]
 r164: [5448..5450]
 r165: [5444..5445]
 r166: [5410..5443]
 r167: [5441..5442]
 r168: [5439..5440]
 r169: [5432..5438]
 r170: [5434..5435]
 r171: [5432..5433]
 r172: [5427..5431]
 r173: [5427..5428]
 r174: [5425..5426]
 r175: [5422..5424]
 r176: [5417..5419]
 r177: [5414..5416]
 r178: [5412..5413]
 r179: [5410..5411]
 r180: [5405..5409]
 r181: [5405..5406]
 r182: [5349..5404]
 r183: [5402..5403]
 r184: [5400..5401]
 r185: [5398..5399]
 r186: [5391..5397]
 r187: [5393..5394]
 r188: [5391..5392]
 r189: [5386..5390]
 r190: [5386..5387]
 r191: [5384..5385]
 r192: [5381..5383]
 r193: [5353..5378]
 r194: [5376..5377]
 r195: [5374..5375]
 r196: [5367..5373]
 r197: [5369..5370]
 r198: [5367..5368]
 r199: [5362..5366]
 r200: [5362..5363]
 r201: [5360..5361]
 r202: [5357..5359]
 r203: [5353..5354]
 r204: [5351..5352]
 r205: [5349..5350]
 r206: [5320..5348]
 r207: [5344..5345]
 r208: [5339..5343]
 r209: [5339..5340]
 r210: [5337..5338]
 r211: [5334..5336]
 r212: [5320..5333]
 r213: [5329..5330]
 r214: [5324..5328]
 r215: [5324..5325]
 r216: [5322..5323]
 r217: [5317..5321]
 r218: [5317..5319]
 r219: [5313..5314]
 r220: [5308..5312]
 r221: [5308..5309]
 r222: [5306..5307]
 r223: [5303..5305]
 r224: [5281..5302]
 r225: [5300..5301]
 r226: [5298..5299]
 r227: [5291..5297]
 r228: [5293..5294]
 r229: [5291..5292]
 r230: [5286..5290]
 r231: [5286..5287]
 r232: [5284..5285]
 r233: [5278..5283]
 r234: [5276..5280]
 r235: [5272..5273]
 r236: [5267..5271]
 r237: [5267..5268]
 r238: [5265..5266]
 r239: [5250..5264]
 r240: [5260..5261]
 r241: [5255..5259]
 r242: [5255..5256]
 r243: [5253..5254]
 r244: [5247..5252]
 r245: [5247..5249]
 r246: [5233..5234]
 r247: [5231..5232]
 r248: [5215..5216]
 r249: [5212..5214]
 r250: [5151..5153]
 r251: [5149..5150]
 r252: [5141..5143]
 r253: [5133..5135]
 r254: [5127..5128]
 r255: [5122..5126]
 r256: [5122..5123]
 r257: [5120..5121]
 r258: [5117..5119]
 r259: [5113..5114]
 r260: [5061..5062]
 r261: [5106..5107]
 r262: [5104..5105]
 r263: [5102..5103]
 r264: [5099..5101]
 r265: [5073..5096]
 r266: [5094..5095]
 r267: [5092..5093]
 r268: [5090..5091]
 r269: [5083..5089]
 r270: [5085..5086]
 r271: [5083..5084]
 r272: [5078..5082]
 r273: [5078..5079]
 r274: [5076..5077]
 r275: [5070..5075]
 r276: [5068..5072]
 r277: [5066..5067]
 r278: [5064..5065]
 r279: [4875..4876]
 r280: [5043..5044]
 r281: [5041..5042]
 r282: [5039..5040]
 r283: [5032..5038]
 r284: [5034..5035]
 r285: [5032..5033]
 r286: [5027..5031]
 r287: [5027..5028]
 r288: [5025..5026]
 r289: [5022..5024]
 r290: [4998..5021]
 r291: [5019..5020]
 r292: [5017..5018]
 r293: [5010..5016]
 r294: [5012..5013]
 r295: [5010..5011]
 r296: [5005..5009]
 r297: [5005..5006]
 r298: [5003..5004]
 r299: [5000..5002]
 r300: [4998..4999]
 r301: [4996..4997]
 r302: [4974..4995]
 r303: [4993..4994]
 r304: [4991..4992]
 r305: [4984..4990]
 r306: [4986..4987]
 r307: [4984..4985]
 r308: [4979..4983]
 r309: [4979..4980]
 r310: [4977..4978]
 r311: [4971..4976]
 r312: [4971..4973]
 r313: [4969..4970]
 r314: [4967..4968]
 r315: [4965..4966]
 r316: [4958..4964]
 r317: [4960..4961]
 r318: [4958..4959]
 r319: [4953..4957]
 r320: [4953..4954]
 r321: [4951..4952]
 r322: [4948..4950]
 r323: [4920..4945]
 r324: [4943..4944]
 r325: [4941..4942]
 r326: [4934..4940]
 r327: [4936..4937]
 r328: [4934..4935]
 r329: [4929..4933]
 r330: [4929..4930]
 r331: [4927..4928]
 r332: [4924..4926]
 r333: [4920..4921]
 r334: [4918..4919]
 r335: [4896..4917]
 r336: [4915..4916]
 r337: [4913..4914]
 r338: [4906..4912]
 r339: [4908..4909]
 r340: [4906..4907]
 r341: [4901..4905]
 r342: [4901..4902]
 r343: [4899..4900]
 r344: [4893..4898]
 r345: [4893..4895]
 r346: [4879..4880]
 r347: [4877..4878]
 r348: [4869..4870]
 r349: [4867..4868]
 r350: [4865..4866]
 r351: [4863..4864]
 r352: [4861..4862]
 r353: [4859..4860]
 r354: [4857..4858]
 r355: [4855..4856]
 r356: [4853..4854]
 r357: [4851..4852]
 r358: [4849..4850]
 r359: [4847..4848]
 r360: [4845..4846]
 r361: [4843..4844]
 r362: [4841..4842]
 r363: [4839..4840]
 r364: [4837..4838]
 r365: [4835..4836]
 r366: [4833..4834]
 r367: [4831..4832]
 r368: [4829..4830]
 r369: [4827..4828]
 r370: [4825..4826]
 r371: [4823..4824]
 r372: [4821..4822]
 r373: [4819..4820]
 r374: [4817..4818]
 r375: [4815..4816]
 r376: [4804..4805]
 r377: [4799..4803]
 r378: [4799..4800]
 r379: [4797..4798]
 r380: [4793..4796]
 r381: [4235..4236]
 r382: [4772..4773]
 r383: [4767..4771]
 r384: [4767..4768]
 r385: [4765..4766]
 r386: [4762..4764]
 r387: [4755..4759]
 r388: [4750..4751]
 r389: [4748..4749]
 r390: [4741..4747]
 r391: [4743..4744]
 r392: [4741..4742]
 r393: [4736..4740]
 r394: [4736..4737]
 r395: [4734..4735]
 r396: [4731..4733]
 r397: [4712..4728]
 r398: [4724..4725]
 r399: [4719..4723]
 r400: [4719..4720]
 r401: [4717..4718]
 r402: [4714..4716]
 r403: [4712..4713]
 r404: [4708..4709]
 r405: [4706..4707]
 r406: [4699..4705]
 r407: [4701..4702]
 r408: [4699..4700]
 r409: [4694..4698]
 r410: [4694..4695]
 r411: [4692..4693]
 r412: [4689..4691]
 r413: [4683..4684]
 r414: [4681..4682]
 r415: [4674..4680]
 r416: [4676..4677]
 r417: [4674..4675]
 r418: [4669..4673]
 r419: [4669..4670]
 r420: [4667..4668]
 r421: [4664..4666]
 r422: [4658..4659]
 r423: [4656..4657]
 r424: [4649..4655]
 r425: [4651..4652]
 r426: [4649..4650]
 r427: [4644..4648]
 r428: [4644..4645]
 r429: [4642..4643]
 r430: [4639..4641]
 r431: [4632..4633]
 r432: [4629..4631]
 r433: [4619..4623]
 r434: [4619..4620]
 r435: [4617..4618]
 r436: [4607..4608]
 r437: [4602..4606]
 r438: [4602..4603]
 r439: [4600..4601]
 r440: [4597..4599]
 r441: [4583..4594]
 r442: [4592..4593]
 r443: [4590..4591]
 r444: [4587..4589]
 r445: [4583..4584]
 r446: [4578..4582]
 r447: [4578..4579]
 r448: [4571..4572]
 r450: [4557..4564]
 r451: [4559..4560]
 r452: [4557..4558]
 r453: [4549..4556]
 r454: [4551..4552]
 r455: [4549..4550]
 r456: [4547..4548]
 r457: [4543..4546]
 r458: [4531..4535]
 r459: [4531..4532]
 r460: [4529..4530]
 r461: [4521..4523]
 r462: [4519..4520]
 r463: [4505..4518]
 r464: [4514..4515]
 r465: [4509..4513]
 r466: [4509..4510]
 r467: [4507..4508]
 r468: [4502..4506]
 r469: [4502..4504]
 r470: [4498..4499]
 r471: [4493..4497]
 r472: [4493..4494]
 r473: [4491..4492]
 r474: [4488..4490]
 r475: [4445..4485]
 r476: [4482..4484]
 r477: [4480..4481]
 r478: [4478..4479]
 r479: [4475..4477]
 r480: [4449..4472]
 r481: [4468..4469]
 r482: [4463..4467]
 r483: [4463..4464]
 r484: [4461..4462]
 r485: [4458..4460]
 r486: [4453..4455]
 r487: [4451..4452]
 r488: [4449..4450]
 r489: [4447..4448]
 r490: [4445..4446]
 r491: [4436..4437]
 r492: [4431..4435]
 r493: [4431..4432]
 r494: [4429..4430]
 r495: [4426..4428]
 r496: [4424..4425]
 r497: [4419..4421]
 r498: [4385..4386]
 r499: [4383..4384]
 r500: [4376..4382]
 r501: [4378..4379]
 r502: [4376..4377]
 r503: [4371..4375]
 r504: [4371..4372]
 r505: [4369..4370]
 r506: [4365..4368]
 r507: [4408..4409]
 r508: [4406..4407]
 r509: [4399..4405]
 r510: [4401..4402]
 r511: [4399..4400]
 r512: [4394..4398]
 r513: [4394..4395]
 r514: [4392..4393]
 r515: [4388..4391]
 r516: [4358..4359]
 r517: [4356..4357]
 r518: [4349..4355]
 r519: [4351..4352]
 r520: [4349..4350]
 r521: [4344..4348]
 r522: [4344..4345]
 r523: [4342..4343]
 r524: [4338..4341]
 r525: [4329..4330]
 r526: [4327..4328]
 r527: [4320..4326]
 r528: [4322..4323]
 r529: [4320..4321]
 r530: [4315..4319]
 r531: [4315..4316]
 r532: [4313..4314]
 r533: [4309..4312]
 r534: [4307..4308]
 r535: [4305..4306]
 r536: [4303..4304]
 r537: [4296..4302]
 r538: [4298..4299]
 r539: [4296..4297]
 r540: [4291..4295]
 r541: [4291..4292]
 r542: [4289..4290]
 r543: [4286..4288]
 r544: [4280..4285]
 r545: [4274..4275]
 r546: [4272..4273]
 r547: [4265..4271]
 r548: [4267..4268]
 r549: [4265..4266]
 r550: [4260..4264]
 r551: [4260..4261]
 r552: [4258..4259]
 r553: [4254..4257]
 r554: [4239..4240]
 r555: [4237..4238]
 r556: [1163..1164]
 r557: [4229..4230]
 r558: [4227..4228]
 r559: [4220..4226]
 r560: [4210..4214]
 r561: [4212..4213]
 r562: [4210..4211]
 r563: [4208..4209]
 r564: [4206..4207]
 r565: [4202..4203]
 r566: [4200..4201]
 r567: [4193..4199]
 r568: [4183..4187]
 r569: [4185..4186]
 r570: [4183..4184]
 r571: [4181..4182]
 r572: [4179..4180]
 r573: [4175..4176]
 r574: [4155..4156]
 r575: [4153..4154]
 r576: [4137..4138]
 r577: [4135..4136]
 r578: [4128..4134]
 r579: [4118..4122]
 r580: [4120..4121]
 r581: [4118..4119]
 r582: [4116..4117]
 r583: [4114..4115]
 r584: [4110..4111]
 r585: [4108..4109]
 r586: [4101..4107]
 r587: [4091..4095]
 r588: [4093..4094]
 r589: [4091..4092]
 r590: [4089..4090]
 r591: [4087..4088]
 r592: [4083..4084]
 r593: [4063..4064]
 r594: [4061..4062]
 r595: [4045..4046]
 r596: [4043..4044]
 r597: [4036..4042]
 r598: [4026..4030]
 r599: [4028..4029]
 r600: [4026..4027]
 r601: [4024..4025]
 r602: [4022..4023]
 r603: [4018..4019]
 r604: [4016..4017]
 r605: [4009..4015]
 r606: [3999..4003]
 r607: [4001..4002]
 r608: [3999..4000]
 r609: [3997..3998]
 r610: [3995..3996]
 r611: [3991..3992]
 r612: [3971..3972]
 r613: [3969..3970]
 r614: [3959..3960]
 r615: [3957..3958]
 r616: [3950..3956]
 r617: [3940..3944]
 r618: [3942..3943]
 r619: [3940..3941]
 r620: [3938..3939]
 r621: [3936..3937]
 r622: [3932..3933]
 r623: [3930..3931]
 r624: [3923..3929]
 r625: [3913..3917]
 r626: [3915..3916]
 r627: [3913..3914]
 r628: [3911..3912]
 r629: [3909..3910]
 r630: [3905..3906]
 r631: [3881..3882]
 r632: [3879..3880]
 r633: [3869..3870]
 r634: [3867..3868]
 r635: [3860..3866]
 r636: [3850..3854]
 r637: [3852..3853]
 r638: [3850..3851]
 r639: [3848..3849]
 r640: [3846..3847]
 r641: [3842..3843]
 r642: [3840..3841]
 r643: [3833..3839]
 r644: [3823..3827]
 r645: [3825..3826]
 r646: [3823..3824]
 r647: [3821..3822]
 r648: [3819..3820]
 r649: [3815..3816]
 r650: [3771..3772]
 r651: [3769..3770]
 r652: [3759..3760]
 r653: [3757..3758]
 r654: [3750..3756]
 r655: [3740..3744]
 r656: [3742..3743]
 r657: [3740..3741]
 r658: [3738..3739]
 r659: [3736..3737]
 r660: [3732..3733]
 r661: [3730..3731]
 r662: [3723..3729]
 r663: [3713..3717]
 r664: [3715..3716]
 r665: [3713..3714]
 r666: [3711..3712]
 r667: [3709..3710]
 r668: [3705..3706]
 r669: [3677..3678]
 r670: [3675..3676]
 r671: [3665..3666]
 r672: [3663..3664]
 r673: [3656..3662]
 r674: [3646..3650]
 r675: [3648..3649]
 r676: [3646..3647]
 r677: [3644..3645]
 r678: [3642..3643]
 r679: [3638..3639]
 r680: [3636..3637]
 r681: [3629..3635]
 r682: [3619..3623]
 r683: [3621..3622]
 r684: [3619..3620]
 r685: [3617..3618]
 r686: [3615..3616]
 r687: [3611..3612]
 r688: [3585..3586]
 r689: [3583..3584]
 r690: [3573..3574]
 r691: [3571..3572]
 r692: [3564..3570]
 r693: [3554..3558]
 r694: [3556..3557]
 r695: [3554..3555]
 r696: [3552..3553]
 r697: [3550..3551]
 r698: [3546..3547]
 r699: [3544..3545]
 r700: [3537..3543]
 r701: [3527..3531]
 r702: [3529..3530]
 r703: [3527..3528]
 r704: [3525..3526]
 r705: [3523..3524]
 r706: [3519..3520]
 r707: [3491..3492]
 r708: [3489..3490]
 r709: [3479..3480]
 r710: [3477..3478]
 r711: [3475..3476]
 r712: [3468..3474]
 r713: [3458..3462]
 r714: [3460..3461]
 r715: [3458..3459]
 r716: [3456..3457]
 r717: [3454..3455]
 r718: [3450..3451]
 r719: [3448..3449]
 r720: [3441..3447]
 r721: [3431..3435]
 r722: [3433..3434]
 r723: [3431..3432]
 r724: [3429..3430]
 r725: [3427..3428]
 r726: [3423..3424]
 r727: [3421..3422]
 r728: [3414..3420]
 r729: [3404..3408]
 r730: [3406..3407]
 r731: [3404..3405]
 r732: [3402..3403]
 r733: [3400..3401]
 r734: [3396..3397]
 r735: [3390..3391]
 r736: [3383..3389]
 r737: [3373..3377]
 r738: [3375..3376]
 r739: [3373..3374]
 r740: [3371..3372]
 r741: [3369..3370]
 r742: [3365..3366]
 r743: [3345..3346]
 r744: [3343..3344]
 r745: [3341..3342]
 r746: [3321..3322]
 r747: [3319..3320]
 r748: [3317..3318]
 r749: [3307..3308]
 r750: [3305..3306]
 r751: [3298..3304]
 r752: [3288..3292]
 r753: [3290..3291]
 r754: [3288..3289]
 r755: [3286..3287]
 r756: [3284..3285]
 r757: [3280..3281]
 r758: [3278..3279]
 r759: [3271..3277]
 r760: [3261..3265]
 r761: [3263..3264]
 r762: [3261..3262]
 r763: [3259..3260]
 r764: [3257..3258]
 r765: [3253..3254]
 r766: [3233..3234]
 r767: [3231..3232]
 r768: [3221..3222]
 r769: [3219..3220]
 r770: [3212..3218]
 r771: [3202..3206]
 r772: [3204..3205]
 r773: [3202..3203]
 r774: [3200..3201]
 r775: [3198..3199]
 r776: [3194..3195]
 r777: [3192..3193]
 r778: [3185..3191]
 r779: [3175..3179]
 r780: [3177..3178]
 r781: [3175..3176]
 r782: [3173..3174]
 r783: [3171..3172]
 r784: [3167..3168]
 r785: [3143..3144]
 r786: [3141..3142]
 r787: [3131..3132]
 r788: [3129..3130]
 r789: [3122..3128]
 r790: [3112..3116]
 r791: [3114..3115]
 r792: [3112..3113]
 r793: [3110..3111]
 r794: [3108..3109]
 r795: [3104..3105]
 r796: [3102..3103]
 r797: [3095..3101]
 r798: [3085..3089]
 r799: [3087..3088]
 r800: [3085..3086]
 r801: [3083..3084]
 r802: [3081..3082]
 r803: [3077..3078]
 r804: [3057..3058]
 r805: [3055..3056]
 r806: [3045..3046]
 r807: [3043..3044]
 r808: [3036..3042]
 r809: [3026..3030]
 r810: [3028..3029]
 r811: [3026..3027]
 r812: [3024..3025]
 r813: [3022..3023]
 r814: [3018..3019]
 r815: [3016..3017]
 r816: [3009..3015]
 r817: [2999..3003]
 r818: [3001..3002]
 r819: [2999..3000]
 r820: [2997..2998]
 r821: [2995..2996]
 r822: [2991..2992]
 r823: [2971..2972]
 r824: [2969..2970]
 r825: [2959..2960]
 r826: [2957..2958]
 r827: [2950..2956]
 r828: [2940..2944]
 r829: [2942..2943]
 r830: [2940..2941]
 r831: [2938..2939]
 r832: [2936..2937]
 r833: [2932..2933]
 r834: [2925..2926]
 r835: [2923..2924]
 r836: [2916..2922]
 r837: [2918..2919]
 r838: [2916..2917]
 r839: [2911..2915]
 r840: [2911..2912]
 r841: [2909..2910]
 r842: [2906..2908]
 r843: [2903..2905]
 r844: [2900..2901]
 r845: [2898..2899]
 r846: [2891..2897]
 r847: [2893..2894]
 r848: [2891..2892]
 r849: [2886..2890]
 r850: [2886..2887]
 r851: [2884..2885]
 r852: [2881..2883]
 r853: [2879..2880]
 r854: [2876..2877]
 r855: [2874..2875]
 r856: [2867..2873]
 r857: [2869..2870]
 r858: [2867..2868]
 r859: [2862..2866]
 r860: [2862..2863]
 r861: [2860..2861]
 r862: [2856..2859]
 r863: [2841..2842]
 r864: [2834..2840]
 r865: [2824..2828]
 r866: [2826..2827]
 r867: [2824..2825]
 r868: [2822..2823]
 r869: [2820..2821]
 r870: [2816..2817]
 r871: [2799..2800]
 r872: [2794..2798]
 r873: [2794..2795]
 r874: [2792..2793]
 r875: [2789..2791]
 r876: [2755..2788]
 r877: [2784..2785]
 r878: [2779..2783]
 r879: [2779..2780]
 r880: [2777..2778]
 r881: [2774..2776]
 r882: [2771..2773]
 r883: [2769..2770]
 r884: [2755..2768]
 r885: [2764..2765]
 r886: [2759..2763]
 r887: [2759..2760]
 r888: [2757..2758]
 r889: [2752..2756]
 r890: [2752..2754]
 r891: [2724..2725]
 r892: [2722..2723]
 r893: [2712..2713]
 r894: [2710..2711]
 r895: [2703..2709]
 r896: [2693..2697]
 r897: [2695..2696]
 r898: [2693..2694]
 r899: [2691..2692]
 r900: [2689..2690]
 r901: [2685..2686]
 r902: [2683..2684]
 r903: [2676..2682]
 r904: [2666..2670]
 r905: [2668..2669]
 r906: [2666..2667]
 r907: [2664..2665]
 r908: [2662..2663]
 r909: [2658..2659]
 r910: [2641..2642]
 r911: [2636..2640]
 r912: [2636..2637]
 r913: [2634..2635]
 r914: [2631..2633]
 r915: [2602..2630]
 r916: [2626..2627]
 r917: [2621..2625]
 r918: [2621..2622]
 r919: [2619..2620]
 r920: [2616..2618]
 r921: [2602..2615]
 r922: [2611..2612]
 r923: [2606..2610]
 r924: [2606..2607]
 r925: [2604..2605]
 r926: [2599..2603]
 r927: [2599..2601]
 r928: [2571..2572]
 r929: [2569..2570]
 r930: [2559..2560]
 r931: [2557..2558]
 r932: [2550..2556]
 r933: [2540..2544]
 r934: [2542..2543]
 r935: [2540..2541]
 r936: [2538..2539]
 r937: [2536..2537]
 r938: [2532..2533]
 r939: [2530..2531]
 r940: [2523..2529]
 r941: [2513..2517]
 r942: [2515..2516]
 r943: [2513..2514]
 r944: [2511..2512]
 r945: [2509..2510]
 r946: [2505..2506]
 r947: [2497..2498]
 r948: [1909..1910]
 r949: [1904..1908]
 r950: [1904..1905]
 r951: [1902..1903]
 r952: [1898..1901]
 r953: [2488..2489]
 r954: [2483..2487]
 r955: [2483..2484]
 r956: [2481..2482]
 r957: [2478..2480]
 r958: [2471..2475]
 r959: [2466..2467]
 r960: [2464..2465]
 r961: [2457..2463]
 r962: [2459..2460]
 r963: [2457..2458]
 r964: [2452..2456]
 r965: [2452..2453]
 r966: [2450..2451]
 r967: [2447..2449]
 r968: [2428..2444]
 r969: [2440..2441]
 r970: [2435..2439]
 r971: [2435..2436]
 r972: [2433..2434]
 r973: [2430..2432]
 r974: [2428..2429]
 r975: [2424..2425]
 r976: [2422..2423]
 r977: [2415..2421]
 r978: [2417..2418]
 r979: [2415..2416]
 r980: [2410..2414]
 r981: [2410..2411]
 r982: [2408..2409]
 r983: [2405..2407]
 r984: [2399..2400]
 r985: [2397..2398]
 r986: [2390..2396]
 r987: [2392..2393]
 r988: [2390..2391]
 r989: [2385..2389]
 r990: [2385..2386]
 r991: [2383..2384]
 r992: [2380..2382]
 r993: [2374..2375]
 r994: [2372..2373]
 r995: [2365..2371]
 r996: [2367..2368]
 r997: [2365..2366]
 r998: [2360..2364]
 r999: [2360..2361]
 r1000: [2358..2359]
 r1001: [2355..2357]
 r1002: [2348..2349]
 r1003: [2345..2347]
 r1004: [2335..2339]
 r1005: [2335..2336]
 r1006: [2333..2334]
 r1007: [2323..2324]
 r1008: [2318..2322]
 r1009: [2318..2319]
 r1010: [2316..2317]
 r1011: [2313..2315]
 r1012: [2299..2310]
 r1013: [2308..2309]
 r1014: [2306..2307]
 r1015: [2303..2305]
 r1016: [2299..2300]
 r1017: [2294..2298]
 r1018: [2294..2295]
 r1019: [2287..2288]
 r1021: [2273..2280]
 r1022: [2275..2276]
 r1023: [2273..2274]
 r1024: [2265..2272]
 r1025: [2267..2268]
 r1026: [2265..2266]
 r1027: [2263..2264]
 r1028: [2259..2262]
 r1029: [2247..2251]
 r1030: [2247..2248]
 r1031: [2245..2246]
 r1032: [2237..2239]
 r1033: [2235..2236]
 r1034: [2221..2234]
 r1035: [2230..2231]
 r1036: [2225..2229]
 r1037: [2225..2226]
 r1038: [2223..2224]
 r1039: [2218..2222]
 r1040: [2218..2220]
 r1041: [2207..2214]
 r1042: [2209..2210]
 r1043: [2207..2208]
 r1044: [2204..2206]
 r1045: [2202..2203]
 r1046: [2188..2201]
 r1047: [2197..2198]
 r1048: [2192..2196]
 r1049: [2192..2193]
 r1050: [2190..2191]
 r1051: [2185..2189]
 r1052: [2185..2187]
 r1053: [2178..2179]
 r1054: [2173..2177]
 r1055: [2173..2174]
 r1056: [2171..2172]
 r1057: [2156..2170]
 r1058: [2166..2167]
 r1059: [2161..2165]
 r1060: [2161..2162]
 r1061: [2159..2160]
 r1062: [2153..2158]
 r1063: [2153..2155]
 r1064: [2148..2149]
 r1065: [2143..2147]
 r1066: [2143..2144]
 r1067: [2141..2142]
 r1068: [2138..2140]
 r1069: [2095..2135]
 r1070: [2132..2134]
 r1071: [2130..2131]
 r1072: [2128..2129]
 r1073: [2125..2127]
 r1074: [2099..2122]
 r1075: [2118..2119]
 r1076: [2113..2117]
 r1077: [2113..2114]
 r1078: [2111..2112]
 r1079: [2108..2110]
 r1080: [2103..2105]
 r1081: [2101..2102]
 r1082: [2099..2100]
 r1083: [2097..2098]
 r1084: [2095..2096]
 r1085: [2091..2092]
 r1086: [2089..2090]
 r1087: [2082..2088]
 r1088: [2084..2085]
 r1089: [2082..2083]
 r1090: [2077..2081]
 r1091: [2077..2078]
 r1092: [2075..2076]
 r1093: [2072..2074]
 r1094: [2066..2067]
 r1095: [2049..2065]
 r1096: [2061..2062]
 r1097: [2056..2060]
 r1098: [2056..2057]
 r1099: [2054..2055]
 r1100: [2051..2053]
 r1101: [2049..2050]
 r1102: [2030..2048]
 r1103: [2044..2045]
 r1104: [2039..2043]
 r1105: [2039..2040]
 r1106: [2037..2038]
 r1107: [2034..2036]
 r1108: [2032..2033]
 r1109: [2030..2031]
 r1110: [1950..1954]
 r1111: [1950..1951]
 r1112: [1948..1949]
 r1113: [1941..1942]
 r1114: [1936..1940]
 r1115: [1936..1937]
 r1116: [1934..1935]
 r1117: [1931..1933]
 r1118: [2004..2010]
 r1119: [2006..2007]
 r1120: [2004..2005]
 r1121: [2001..2003]
 r1122: [1989..1993]
 r1123: [1989..1990]
 r1124: [1987..1988]
 r1125: [1978..1980]
 r1126: [1976..1977]
 r1127: [1962..1975]
 r1128: [1971..1972]
 r1129: [1966..1970]
 r1130: [1966..1967]
 r1131: [1964..1965]
 r1132: [1959..1963]
 r1133: [1959..1961]
 r1134: [1870..1871]
 r1135: [1868..1869]
 r1136: [1852..1853]
 r1137: [1850..1851]
 r1138: [1843..1849]
 r1139: [1833..1837]
 r1140: [1835..1836]
 r1141: [1833..1834]
 r1142: [1831..1832]
 r1143: [1829..1830]
 r1144: [1825..1826]
 r1145: [1823..1824]
 r1146: [1820..1822]
 r1147: [1818..1819]
 r1148: [1816..1817]
 r1149: [1810..1811]
 r1150: [1808..1809]
 r1151: [1806..1807]
 r1152: [1799..1805]
 r1153: [1789..1793]
 r1154: [1791..1792]
 r1155: [1789..1790]
 r1156: [1787..1788]
 r1157: [1785..1786]
 r1158: [1781..1782]
 r1159: [1765..1766]
 r1160: [1763..1764]
 r1161: [1753..1754]
 r1162: [1751..1752]
 r1163: [1744..1750]
 r1164: [1734..1738]
 r1165: [1736..1737]
 r1166: [1734..1735]
 r1167: [1732..1733]
 r1168: [1730..1731]
 r1169: [1726..1727]
 r1170: [1724..1725]
 r1171: [1717..1723]
 r1172: [1707..1711]
 r1173: [1709..1710]
 r1174: [1707..1708]
 r1175: [1705..1706]
 r1176: [1703..1704]
 r1177: [1699..1700]
 r1178: [1690..1691]
 r1179: [1685..1689]
 r1180: [1685..1686]
 r1181: [1683..1684]
 r1182: [1679..1682]
 r1183: [1651..1652]
 r1184: [1649..1650]
 r1185: [1639..1640]
 r1186: [1637..1638]
 r1187: [1630..1636]
 r1188: [1620..1624]
 r1189: [1622..1623]
 r1190: [1620..1621]
 r1191: [1618..1619]
 r1192: [1616..1617]
 r1193: [1612..1613]
 r1194: [1610..1611]
 r1195: [1603..1609]
 r1196: [1593..1597]
 r1197: [1595..1596]
 r1198: [1593..1594]
 r1199: [1591..1592]
 r1200: [1589..1590]
 r1201: [1585..1586]
 r1202: [1576..1577]
 r1203: [1571..1575]
 r1204: [1571..1572]
 r1205: [1569..1570]
 r1206: [1565..1568]
 r1207: [1537..1538]
 r1208: [1535..1536]
 r1209: [1525..1526]
 r1210: [1523..1524]
 r1211: [1516..1522]
 r1212: [1506..1510]
 r1213: [1508..1509]
 r1214: [1506..1507]
 r1215: [1504..1505]
 r1216: [1502..1503]
 r1217: [1498..1499]
 r1218: [1496..1497]
 r1219: [1493..1495]
 r1220: [1491..1492]
 r1221: [1489..1490]
 r1222: [1483..1484]
 r1223: [1481..1482]
 r1224: [1479..1480]
 r1225: [1472..1478]
 r1226: [1462..1466]
 r1227: [1464..1465]
 r1228: [1462..1463]
 r1229: [1460..1461]
 r1230: [1458..1459]
 r1231: [1454..1455]
 r1232: [1451..1453]
 r1233: [1446..1448]
 r1234: [1435..1436]
 r1235: [1430..1434]
 r1236: [1430..1431]
 r1237: [1428..1429]
 r1238: [1425..1427]
 r1239: [1411..1424]
 r1240: [1420..1421]
 r1241: [1415..1419]
 r1242: [1415..1416]
 r1243: [1413..1414]
 r1244: [1408..1412]
 r1245: [1408..1410]
 r1246: [1378..1379]
 r1247: [1362..1363]
 r1248: [1366..1367]
 r1249: [1360..1361]
 r1250: [1358..1359]
 r1251: [1356..1357]
 r1252: [1346..1347]
 r1253: [1344..1345]
 r1254: [1337..1343]
 r1255: [1327..1331]
 r1256: [1329..1330]
 r1257: [1327..1328]
 r1258: [1325..1326]
 r1259: [1323..1324]
 r1260: [1319..1320]
 r1261: [1317..1318]
 r1262: [1314..1316]
 r1263: [1312..1313]
 r1264: [1310..1311]
 r1265: [1304..1305]
 r1266: [1302..1303]
 r1267: [1300..1301]
 r1268: [1293..1299]
 r1269: [1283..1287]
 r1270: [1285..1286]
 r1271: [1283..1284]
 r1272: [1281..1282]
 r1273: [1279..1280]
 r1274: [1275..1276]
 r1275: [1272..1274]
 r1276: [1267..1269]
 r1277: [1256..1257]
 r1278: [1251..1255]
 r1279: [1251..1252]
 r1280: [1249..1250]
 r1281: [1246..1248]
 r1282: [1232..1245]
 r1283: [1241..1242]
 r1284: [1236..1240]
 r1285: [1236..1237]
 r1286: [1234..1235]
 r1287: [1229..1233]
 r1288: [1229..1231]
 r1289: [1199..1200]
 r1290: [1183..1184]
 r1291: [1187..1188]
 r1292: [1181..1182]
 r1293: [1179..1180]
 r1294: [1177..1178]
 r1295: [1167..1168]
 r1296: [1165..1166]
 r1297: [1157..1158]
 r1298: [1155..1156]
 r1299: [1152..1154]
 r1300: [1152..1153]
 r1301: [1150..1151]
 r1302: [1147..1149]
 r1303: [1136..1137]
 r1304: [1131..1135]
 r1305: [1131..1132]
 r1306: [1129..1130]
 r1307: [1126..1128]
 r1308: [1118..1123]
 r1309: [709..710]
 r1310: [704..708]
 r1311: [704..705]
 r1312: [702..703]
 r1313: [698..701]
 r1314: [694..695]
 r1315: [689..693]
 r1316: [689..690]
 r1317: [687..688]
 r1318: [683..686]
 r1319: [1113..1114]
 r1320: [1108..1112]
 r1321: [1108..1109]
 r1322: [1106..1107]
 r1323: [1103..1105]
 r1324: [1095..1096]
 r1325: [1090..1094]
 r1326: [1090..1091]
 r1327: [1088..1089]
 r1328: [1085..1087]
 r1329: [1064..1082]
 r1330: [1078..1079]
 r1331: [1073..1077]
 r1332: [1073..1074]
 r1333: [1071..1072]
 r1334: [1068..1070]
 r1335: [1064..1065]
 r1336: [1061..1063]
 r1337: [1055..1056]
 r1338: [1050..1054]
 r1339: [1050..1051]
 r1340: [1048..1049]
 r1341: [1045..1047]
 r1342: [1040..1042]
 r1343: [1038..1039]
 r1344: [1019..1037]
 r1345: [1033..1034]
 r1346: [1028..1032]
 r1347: [1028..1029]
 r1348: [1026..1027]
 r1349: [1023..1025]
 r1350: [1019..1020]
 r1351: [1016..1018]
 r1352: [1010..1011]
 r1353: [1005..1009]
 r1354: [1005..1006]
 r1355: [1003..1004]
 r1356: [1000..1002]
 r1357: [979..997]
 r1358: [993..994]
 r1359: [988..992]
 r1360: [988..989]
 r1361: [986..987]
 r1362: [983..985]
 r1363: [979..980]
 r1364: [977..978]
 r1365: [969..970]
 r1366: [962..968]
 r1367: [964..965]
 r1368: [962..963]
 r1369: [957..961]
 r1370: [957..958]
 r1371: [955..956]
 r1372: [952..954]
 r1373: [896..949]
 r1374: [945..946]
 r1375: [940..944]
 r1376: [940..941]
 r1377: [938..939]
 r1378: [935..937]
 r1379: [905..932]
 r1380: [928..929]
 r1381: [923..927]
 r1382: [923..924]
 r1383: [921..922]
 r1384: [918..920]
 r1385: [914..915]
 r1386: [912..913]
 r1387: [909..911]
 r1388: [905..906]
 r1389: [900..904]
 r1390: [900..901]
 r1391: [898..899]
 r1392: [896..897]
 r1393: [894..895]
 r1394: [881..882]
 r1395: [867..880]
 r1396: [876..877]
 r1397: [871..875]
 r1398: [871..872]
 r1399: [869..870]
 r1400: [864..868]
 r1401: [864..866]
 r1402: [860..861]
 r1403: [855..859]
 r1404: [855..856]
 r1405: [853..854]
 r1406: [850..852]
 r1407: [829..847]
 r1408: [843..844]
 r1409: [838..842]
 r1410: [838..839]
 r1411: [836..837]
 r1412: [833..835]
 r1413: [829..830]
 r1414: [827..828]
 r1415: [819..820]
 r1416: [812..818]
 r1417: [814..815]
 r1418: [812..813]
 r1419: [807..811]
 r1420: [807..808]
 r1421: [805..806]
 r1422: [802..804]
 r1423: [746..799]
 r1424: [795..796]
 r1425: [790..794]
 r1426: [790..791]
 r1427: [788..789]
 r1428: [785..787]
 r1429: [755..782]
 r1430: [778..779]
 r1431: [773..777]
 r1432: [773..774]
 r1433: [771..772]
 r1434: [768..770]
 r1435: [764..765]
 r1436: [762..763]
 r1437: [759..761]
 r1438: [755..756]
 r1439: [750..754]
 r1440: [750..751]
 r1441: [748..749]
 r1442: [746..747]
 r1443: [744..745]
 r1444: [731..732]
 r1445: [717..730]
 r1446: [726..727]
 r1447: [721..725]
 r1448: [721..722]
 r1449: [719..720]
 r1450: [714..718]
 r1451: [714..716]
 r1452: [678..679]
 r1453: [673..677]
 r1454: [673..674]
 r1455: [671..672]
 r1456: [668..670]
 r1457: [660..661]
 r1458: [653..659]
 r1459: [655..656]
 r1460: [653..654]
 r1461: [648..652]
 r1462: [648..649]
 r1463: [646..647]
 r1464: [631..645]
 r1465: [641..642]
 r1466: [636..640]
 r1467: [636..637]
 r1468: [634..635]
 r1469: [626..633]
 r1470: [626..628]
 r1471: [622..623]
 r1472: [615..621]
 r1473: [617..618]
 r1474: [615..616]
 r1475: [610..614]
 r1476: [610..611]
 r1477: [608..609]
 r1478: [593..607]
 r1479: [603..604]
 r1480: [598..602]
 r1481: [598..599]
 r1482: [596..597]
 r1483: [588..595]
 r1484: [588..590]
 r1485: [584..585]
 r1486: [577..583]
 r1487: [579..580]
 r1488: [577..578]
 r1489: [572..576]
 r1490: [572..573]
 r1491: [570..571]
 r1492: [567..569]
 r1493: [564..566]
 r1494: [562..563]
 r1495: [526..561]
 r1496: [557..558]
 r1497: [550..556]
 r1498: [552..553]
 r1499: [550..551]
 r1500: [545..549]
 r1501: [545..546]
 r1502: [543..544]
 r1503: [540..542]
 r1504: [526..539]
 r1505: [535..536]
 r1506: [530..534]
 r1507: [530..531]
 r1508: [528..529]
 r1509: [523..527]
 r1510: [523..525]
 r1511: [519..520]
 r1512: [512..518]
 r1513: [514..515]
 r1514: [512..513]
 r1515: [507..511]
 r1516: [507..508]
 r1517: [505..506]
 r1518: [502..504]
 r1519: [466..501]
 r1520: [497..498]
 r1521: [490..496]
 r1522: [492..493]
 r1523: [490..491]
 r1524: [485..489]
 r1525: [485..486]
 r1526: [483..484]
 r1527: [480..482]
 r1528: [466..479]
 r1529: [475..476]
 r1530: [470..474]
 r1531: [470..471]
 r1532: [468..469]
 r1533: [463..467]
 r1534: [463..465]
 r1535: [459..460]
 r1536: [454..458]
 r1537: [454..455]
 r1538: [452..453]
 r1539: [449..451]
 r1540: [419..446]
 r1541: [442..443]
 r1542: [437..441]
 r1543: [437..438]
 r1544: [435..436]
 r1545: [432..434]
 r1546: [428..429]
 r1547: [426..427]
 r1548: [423..425]
 r1549: [419..420]
 r1550: [402..418]
 r1551: [402..415]
 r1552: [411..412]
 r1553: [406..410]
 r1554: [406..407]
 r1555: [404..405]
 r1556: [399..403]
 r1557: [399..401]
 r1558: [367..368]
 r1559: [365..366]
 r1560: [358..364]
 r1561: [351..352]
 r1562: [339..346]
 r1563: [337..338]
 r1564: [335..336]
 r1565: [333..334]
 r1566: [317..318]
 r1567: [295..296]
 r1568: [293..294]
 r1569: [284..285]
 r1570: [279..283]
 r1571: [279..280]
 r1572: [277..278]
 r1573: [262..276]
 r1574: [272..273]
 r1575: [267..271]
 r1576: [267..268]
 r1577: [265..266]
 r1578: [257..264]
 r1579: [257..259]
 r1580: [200..201]
 r1581: [238..239]
 r1582: [236..237]
 r1583: [229..235]
 r1584: [231..232]
 r1585: [229..230]
 r1586: [224..228]
 r1587: [224..225]
 r1588: [222..223]
 r1589: [218..221]
 r1590: [204..205]
 r1591: [202..203]
 r1592: [186..187]
 r1593: [8..9]
 r1594: [184..185]
 r1595: [182..183]
 r1596: [175..181]
 r1597: [165..169]
 r1598: [167..168]
 r1599: [165..166]
 r1600: [163..164]
 r1601: [161..162]
 r1602: [157..158]
 r1603: [155..156]
 r1604: [148..154]
 r1605: [138..142]
 r1606: [140..141]
 r1607: [138..139]
 r1608: [136..137]
 r1609: [134..135]
 r1610: [130..131]
 r1611: [110..111]
 r1612: [108..109]
 r1613: [98..99]
 r1614: [96..97]
 r1615: [89..95]
 r1616: [79..83]
 r1617: [81..82]
 r1618: [79..80]
 r1619: [77..78]
 r1620: [75..76]
 r1621: [71..72]
 r1622: [69..70]
 r1623: [62..68]
 r1624: [52..56]
 r1625: [54..55]
 r1626: [52..53]
 r1627: [50..51]
 r1628: [48..49]
 r1629: [44..45]
 r1630: [24..25]
 r1631: [22..23]
 r1632: [12..13]
 r1633: [10..11]
 r1634: [4617..4626] [4613..4615]
 r1635: [4529..4540] [4524..4527]
 r1636: [2333..2342] [2329..2331]
 r1637: [2245..2256] [2240..2243]
 r1638: [1948..1957] [1931..1946]
 r1639: [1987..1998] [1983..1985]
 r1640: [5778..5780]
 r1641: [5770..5777]
 r1642: [5767..5769]
 r1643: [5762..5766]
 r1647: [5751..5752]
 r1649: [5742..5744]
 r1650: [5734..5741]
 r1651: [5731..5733]
 r1652: [5726..5730]
 r1656: [5715..5716]
 r1658: [5579..5581]
 r1659: [5498..5580]
 r1660: [5498..5499]
 r1661: [5505..5506]
 r1662: [5225..5226]
 r1663: [5495..5497]
 r1664: [5235..5496]
 r1665: [5235..5236]
 r1666: [5242..5243]
 r1667: [5050..5220]
 r1668: [5050..5051]
 r1669: [5109..5110]
 r1670: [5057..5058]
 r1671: [4871..4872]
 r1672: [5047..5049]
 r1673: [4881..5048]
 r1674: [4881..4882]
 r1675: [4888..4889]
 r1676: [4810..4812]
 r1677: [4781..4811]
 r1678: [4781..4782]
 r1679: [4788..4789]
 r1680: [4231..4232]
 r1681: [4778..4780]
 r1682: [4241..4779]
 r1683: [4241..4242]
 r1684: [4248..4249]
 r1685: [1159..1160]
 r1686: [2929..2931]
 r1687: [2843..2930]
 r1688: [2843..2844]
 r1689: [2850..2851]
 r1690: [2805..2807]
 r1691: [2740..2806]
 r1692: [2740..2741]
 r1693: [2747..2748]
 r1694: [2647..2649]
 r1695: [2587..2648]
 r1696: [2587..2588]
 r1697: [2594..2595]
 r1698: [1915..1917]
 r1699: [1886..1916]
 r1700: [1886..1887]
 r1701: [1893..1894]
 r1702: [2494..2496]
 r1703: [1918..2495]
 r1704: [1918..1919]
 r1705: [1925..1926]
 r1706: [1696..1698]
 r1707: [1667..1697]
 r1708: [1667..1668]
 r1709: [1674..1675]
 r1710: [1582..1584]
 r1711: [1553..1583]
 r1712: [1553..1554]
 r1713: [1560..1561]
 r1714: [1441..1443]
 r1715: [1396..1442]
 r1716: [1396..1397]
 r1717: [1403..1404]
 r1718: [1262..1264]
 r1719: [1217..1263]
 r1720: [1217..1218]
 r1721: [1224..1225]
 r1722: [1142..1144]
 r1723: [387..1143]
 r1724: [387..388]
 r1725: [394..395]
 r1726: [975..976]
 r1727: [892..893]
 r1728: [888..889]
 r1729: [825..826]
 r1730: [742..743]
 r1731: [738..739]
 r1732: [290..292]
 r1733: [245..291]
 r1734: [245..246]
 r1735: [252..253]
 r1736: [196..197]
 r1737: [242..244]
 r1738: [206..243]
 r1739: [206..207]
 r1740: [213..214]
 r1741: [4..5]
 r1742: [5785..5786]
 r1743: [5781..5782]
 r1744: [5778..5779]
 r1745: [5775..5776]
 r1746: [5771..5772]
 r1747: [5767..5768]
 r1748: [5757..5758]
 r1749: [5753..5754]
 r1750: [5749..5750]
 r1751: [5745..5746]
 r1752: [5742..5743]
 r1753: [5739..5740]
 r1754: [5735..5736]
 r1755: [5731..5732]
 r1756: [5721..5722]
 r1757: [5717..5718]
 r1758: [5713..5714]
 r1759: [5711..5712]
 r1760: [5704..5705]
 r1761: [5702..5703]
 r1762: [5696..5697]
 r1763: [5700..5701]
 r1764: [5694..5695]
 r1765: [5689..5690]
 r1766: [5680..5681]
 r1767: [5698..5699]
 r1768: [5675..5677]
 r1769: [5674..5676]
 r1770: [5670..5673] [5664..5666]
 r1771: [5665..5672]
 r1772: [5668..5671]
 r1773: [5657..5658] [5652..5654] [5648..5649]
 r1774: [5655..5656]
 r1775: [5650..5651]
 r1776: [5644..5645]
 r1777: [5642..5643]
 r1778: [5637..5640]
 r1779: [5636..5639]
 r1780: [5635..5638]
 r1781: [5629..5631]
 r1782: [5628..5630]
 r1783: [5624..5627] [5618..5620]
 r1784: [5619..5626]
 r1785: [5622..5625]
 r1786: [5616..5617]
 r1787: [5614..5615]
 r1788: [5612..5613]
 r1789: [5605..5606] [5600..5602] [5596..5597]
 r1790: [5603..5604]
 r1791: [5598..5599]
 r1792: [5592..5593]
 r1793: [5590..5591]
 r1794: [5585..5588]
 r1795: [5584..5587]
 r1796: [5583..5586]
 r1797: [5500..5501]
 r1798: [5507..5508]
 r1799: [5575..5576]
 r1800: [5570..5571]
 r1801: [5561..5564]
 r1802: [5561..5562]
 r1803: [5558..5559]
 r1804: [5553..5554]
 r1805: [5546..5547]
 r1806: [5541..5544]
 r1807: [5541..5542]
 r1808: [5539..5540]
 r1809: [5534..5535]
 r1810: [5527..5528]
 r1811: [5522..5523]
 r1812: [5513..5516]
 r1813: [5513..5514]
 r1814: [5510..5511]
 r1815: [5227..5228]
 r1816: [5237..5238]
 r1817: [5244..5245]
 r1818: [5486..5487]
 r1819: [5479..5480]
 r1820: [5470..5473]
 r1821: [5470..5471]
 r1822: [5462..5463]
 r1823: [5455..5456]
 r1824: [5446..5449]
 r1825: [5446..5447]
 r1826: [5436..5437]
 r1827: [5429..5430]
 r1828: [5420..5423]
 r1829: [5420..5421]
 r1830: [5417..5418]
 r1831: [5414..5415]
 r1832: [5407..5408]
 r1833: [5395..5396]
 r1834: [5388..5389]
 r1835: [5379..5382]
 r1836: [5379..5380]
 r1837: [5371..5372]
 r1838: [5364..5365]
 r1839: [5355..5358]
 r1840: [5355..5356]
 r1841: [5346..5347]
 r1842: [5341..5342]
 r1843: [5334..5335]
 r1844: [5331..5332]
 r1845: [5326..5327]
 r1846: [5317..5318]
 r1847: [5315..5316]
 r1848: [5310..5311]
 r1849: [5303..5304]
 r1850: [5295..5296]
 r1851: [5288..5289]
 r1852: [5281..5282]
 r1853: [5276..5279]
 r1854: [5276..5277]
 r1855: [5274..5275]
 r1856: [5269..5270]
 r1857: [5262..5263]
 r1858: [5257..5258]
 r1859: [5250..5251]
 r1860: [5247..5248]
 r1861: [5223..5224]
 r1862: [5221..5222]
 r1863: [5052..5053]
 r1864: [5217..5218]
 r1865: [5210..5213]
 r1866: [5210..5211]
 r1867: [5208..5209]
 r1868: [5187..5188]
 r1869: [5196..5207]
 r1870: [5202..5203]
 r1871: [5204..5206]
 r1872: [5200..5201]
 r1873: [5192..5197]
 r1874: [5190..5193]
 r1875: [5167..5168]
 r1876: [5165..5186]
 r1877: [5181..5182]
 r1878: [5183..5185]
 r1879: [5179..5180]
 r1880: [5172..5176]
 r1881: [5170..5173]
 r1882: [5163..5166]
 r1883: [5160..5161]
 r1884: [5154..5155]
 r1885: [5151..5152]
 r1886: [5147..5148]
 r1887: [5144..5145]
 r1890: [5139..5140]
 r1891: [5141..5142]
 r1892: [5136..5137]
 r1895: [5131..5132]
 r1896: [5133..5134]
 r1897: [5129..5130]
 r1898: [5124..5125]
 r1899: [5115..5118]
 r1900: [5115..5116]
 r1901: [5111..5112]
 r1902: [5059..5060]
 r1903: [5097..5100]
 r1904: [5097..5098]
 r1905: [5087..5088]
 r1906: [5080..5081]
 r1907: [5073..5074]
 r1908: [5068..5071]
 r1909: [5068..5069]
 r1910: [4873..4874]
 r1911: [4883..4884]
 r1912: [4890..4891]
 r1913: [5036..5037]
 r1914: [5029..5030]
 r1915: [5022..5023]
 r1916: [5014..5015]
 r1917: [5007..5008]
 r1918: [5000..5001]
 r1919: [4988..4989]
 r1920: [4981..4982]
 r1921: [4974..4975]
 r1922: [4971..4972]
 r1923: [4962..4963]
 r1924: [4955..4956]
 r1925: [4946..4949]
 r1926: [4946..4947]
 r1927: [4938..4939]
 r1928: [4931..4932]
 r1929: [4922..4925]
 r1930: [4922..4923]
 r1931: [4910..4911]
 r1932: [4903..4904]
 r1933: [4896..4897]
 r1934: [4893..4894]
 r1935: [4813..4814]
 r1936: [4783..4784]
 r1937: [4790..4791]
 r1938: [4806..4807]
 r1939: [4801..4802]
 r1940: [4793..4795]
 r1941: [4793..4794]
 r1942: [4233..4234]
 r1943: [4243..4244]
 r1944: [4250..4251]
 r1945: [4774..4775]
 r1946: [4769..4770]
 r1947: [4760..4763]
 r1948: [4760..4761]
 r1949: [4757..4758]
 r1950: [4752..4753]
 r1951: [4745..4746]
 r1952: [4738..4739]
 r1953: [4729..4732]
 r1954: [4729..4730]
 r1955: [4726..4727]
 r1956: [4721..4722]
 r1957: [4714..4715]
 r1958: [4710..4711]
 r1959: [4703..4704]
 r1960: [4696..4697]
 r1961: [4687..4690]
 r1962: [4687..4688]
 r1963: [4685..4686]
 r1964: [4678..4679]
 r1965: [4671..4672]
 r1966: [4662..4665]
 r1967: [4662..4663]
 r1968: [4660..4661]
 r1969: [4653..4654]
 r1970: [4646..4647]
 r1971: [4639..4640]
 r1972: [4637..4638]
 r1973: [4634..4636]
 r1974: [4634..4635]
 r1975: [4627..4628]
 r1976: [4629..4630]
 r1977: [4624..4625]
 r1978: [4621..4622]
 r1979: [4611..4612]
 r1980: [4609..4610]
 r1981: [4604..4605]
 r1982: [4595..4598]
 r1983: [4595..4596]
 r1984: [4585..4588]
 r1985: [4585..4586]
 r1986: [4580..4581]
 r1987: [4576..4577]
 r1988: [4573..4575]
 r1989: [4573..4574]
 r1990: [4565..4567]
 r1991: [4565..4566]
 r1992: [4561..4563]
 r1993: [4561..4562]
 r1994: [4553..4555]
 r1995: [4553..4554]
 r1996: [4541..4542]
 r1997: [4536..4537]
 r1998: [4538..4539]
 r1999: [4533..4534]
 r2000: [4524..4525]
 r2001: [4521..4522]
 r2002: [4516..4517]
 r2003: [4511..4512]
 r2004: [4502..4503]
 r2005: [4500..4501]
 r2006: [4495..4496]
 r2007: [4486..4489]
 r2008: [4486..4487]
 r2009: [4482..4483]
 r2010: [4473..4476]
 r2011: [4473..4474]
 r2012: [4470..4471]
 r2013: [4465..4466]
 r2014: [4456..4459]
 r2015: [4456..4457]
 r2016: [4453..4454]
 r2017: [4443..4444]
 r2018: [4441..4442]
 r2019: [4438..4439]
 r2020: [4433..4434]
 r2021: [4426..4427]
 r2022: [4417..4418]
 r2023: [4419..4420]
 r2024: [4414..4416]
 r2025: [4414..4415]
 r2026: [4411..4412]
 r2027: [4380..4381]
 r2028: [4373..4374]
 r2029: [4365..4367]
 r2030: [4365..4366]
 r2031: [4403..4404]
 r2032: [4396..4397]
 r2033: [4388..4390]
 r2034: [4388..4389]
 r2035: [4361..4363]
 r2036: [4361..4362]
 r2037: [4353..4354]
 r2038: [4346..4347]
 r2039: [4338..4340]
 r2040: [4338..4339]
 r2041: [4335..4336]
 r2042: [4332..4333]
 r2043: [4324..4325]
 r2044: [4317..4318]
 r2045: [4309..4311]
 r2046: [4309..4310]
 r2047: [4300..4301]
 r2048: [4293..4294]
 r2049: [4286..4287]
 r2050: [4283..4284]
 r2051: [4280..4281]
 r2052: [4277..4278]
 r2053: [4269..4270]
 r2054: [4262..4263]
 r2055: [4254..4256]
 r2056: [4254..4255]
 r2057: [1161..1162]
 r2058: [4224..4225] [4219..4221] [4215..4216]
 r2059: [4222..4223]
 r2060: [4217..4218]
 r2061: [4204..4205]
 r2062: [4197..4198] [4192..4194] [4188..4189]
 r2063: [4195..4196]
 r2064: [4190..4191]
 r2065: [4177..4178]
 r2066: [4172..4174]
 r2067: [4171..4173]
 r2068: [4168..4170]
 r2069: [4167..4169]
 r2070: [4163..4166] [4157..4159]
 r2071: [4158..4165]
 r2072: [4161..4164]
 r2073: [4151..4152]
 r2074: [4149..4150]
 r2075: [4147..4148]
 r2076: [4142..4146]
 r2077: [4141..4145]
 r2078: [4140..4144]
 r2079: [4139..4143]
 r2080: [4132..4133] [4127..4129] [4123..4124]
 r2081: [4130..4131]
 r2082: [4125..4126]
 r2083: [4112..4113]
 r2084: [4105..4106] [4100..4102] [4096..4097]
 r2085: [4103..4104]
 r2086: [4098..4099]
 r2087: [4085..4086]
 r2088: [4080..4082]
 r2089: [4079..4081]
 r2090: [4076..4078]
 r2091: [4075..4077]
 r2092: [4071..4074] [4065..4067]
 r2093: [4066..4073]
 r2094: [4069..4072]
 r2095: [4059..4060]
 r2096: [4057..4058]
 r2097: [4055..4056]
 r2098: [4050..4054]
 r2099: [4049..4053]
 r2100: [4048..4052]
 r2101: [4047..4051]
 r2102: [4040..4041] [4035..4037] [4031..4032]
 r2103: [4038..4039]
 r2104: [4033..4034]
 r2105: [4020..4021]
 r2106: [4013..4014] [4008..4010] [4004..4005]
 r2107: [4011..4012]
 r2108: [4006..4007]
 r2109: [3993..3994]
 r2110: [3988..3990]
 r2111: [3987..3989]
 r2112: [3984..3986]
 r2113: [3983..3985]
 r2114: [3979..3982] [3973..3975]
 r2115: [3974..3981]
 r2116: [3977..3980]
 r2117: [3964..3968]
 r2118: [3963..3967]
 r2119: [3962..3966]
 r2120: [3961..3965]
 r2121: [3954..3955] [3949..3951] [3945..3946]
 r2122: [3952..3953]
 r2123: [3947..3948]
 r2124: [3934..3935]
 r2125: [3927..3928] [3922..3924] [3918..3919]
 r2126: [3925..3926]
 r2127: [3920..3921]
 r2128: [3907..3908]
 r2129: [3902..3904]
 r2130: [3901..3903]
 r2131: [3898..3900]
 r2132: [3897..3899]
 r2133: [3894..3896]
 r2134: [3893..3895]
 r2135: [3889..3892] [3883..3885]
 r2136: [3884..3891]
 r2137: [3887..3890]
 r2138: [3874..3878]
 r2139: [3873..3877]
 r2140: [3872..3876]
 r2141: [3871..3875]
 r2142: [3864..3865] [3859..3861] [3855..3856]
 r2143: [3862..3863]
 r2144: [3857..3858]
 r2145: [3844..3845]
 r2146: [3837..3838] [3832..3834] [3828..3829]
 r2147: [3835..3836]
 r2148: [3830..3831]
 r2149: [3817..3818]
 r2150: [3812..3814]
 r2151: [3811..3813]
 r2152: [3808..3810]
 r2153: [3807..3809]
 r2154: [3804..3806]
 r2155: [3803..3805]
 r2156: [3800..3802]
 r2157: [3799..3801]
 r2158: [3796..3798]
 r2159: [3795..3797]
 r2160: [3791..3794]
 r2161: [3790..3793]
 r2162: [3789..3792]
 r2163: [3785..3788]
 r2164: [3784..3787]
 r2165: [3783..3786]
 r2166: [3779..3782] [3773..3775]
 r2167: [3774..3781]
 r2168: [3777..3780]
 r2169: [3764..3768]
 r2170: [3763..3767]
 r2171: [3762..3766]
 r2172: [3761..3765]
 r2173: [3754..3755] [3749..3751] [3745..3746]
 r2174: [3752..3753]
 r2175: [3747..3748]
 r2176: [3734..3735]
 r2177: [3727..3728] [3722..3724] [3718..3719]
 r2178: [3725..3726]
 r2179: [3720..3721]
 r2180: [3707..3708]
 r2181: [3702..3704]
 r2182: [3701..3703]
 r2183: [3698..3700]
 r2184: [3697..3699]
 r2185: [3694..3696]
 r2186: [3693..3695]
 r2187: [3690..3692]
 r2188: [3689..3691]
 r2189: [3685..3688] [3679..3681]
 r2190: [3680..3687]
 r2191: [3683..3686]
 r2192: [3670..3674]
 r2193: [3669..3673]
 r2194: [3668..3672]
 r2195: [3667..3671]
 r2196: [3660..3661] [3655..3657] [3651..3652]
 r2197: [3658..3659]
 r2198: [3653..3654]
 r2199: [3640..3641]
 r2200: [3633..3634] [3628..3630] [3624..3625]
 r2201: [3631..3632]
 r2202: [3626..3627]
 r2203: [3613..3614]
 r2204: [3608..3610]
 r2205: [3607..3609]
 r2206: [3604..3606]
 r2207: [3603..3605]
 r2208: [3599..3602]
 r2209: [3598..3601]
 r2210: [3597..3600]
 r2211: [3593..3596] [3587..3589]
 r2212: [3588..3595]
 r2213: [3591..3594]
 r2214: [3578..3582]
 r2215: [3577..3581]
 r2216: [3576..3580]
 r2217: [3575..3579]
 r2218: [3568..3569] [3563..3565] [3559..3560]
 r2219: [3566..3567]
 r2220: [3561..3562]
 r2221: [3548..3549]
 r2222: [3541..3542] [3536..3538] [3532..3533]
 r2223: [3539..3540]
 r2224: [3534..3535]
 r2225: [3521..3522]
 r2226: [3516..3518]
 r2227: [3515..3517]
 r2228: [3512..3514]
 r2229: [3511..3513]
 r2230: [3508..3510]
 r2231: [3507..3509]
 r2232: [3504..3506]
 r2233: [3503..3505]
 r2234: [3499..3502] [3493..3495]
 r2235: [3494..3501]
 r2236: [3497..3500]
 r2237: [3484..3488]
 r2238: [3483..3487]
 r2239: [3482..3486]
 r2240: [3481..3485]
 r2241: [3472..3473] [3467..3469] [3463..3464]
 r2242: [3470..3471]
 r2243: [3465..3466]
 r2244: [3452..3453]
 r2245: [3445..3446] [3440..3442] [3436..3437]
 r2246: [3443..3444]
 r2247: [3438..3439]
 r2248: [3425..3426]
 r2249: [3418..3419] [3413..3415] [3409..3410]
 r2250: [3416..3417]
 r2251: [3411..3412]
 r2252: [3398..3399]
 r2253: [3393..3395]
 r2254: [3392..3394]
 r2255: [3387..3388] [3382..3384] [3378..3379]
 r2256: [3385..3386]
 r2257: [3380..3381]
 r2258: [3367..3368]
 r2259: [3362..3364]
 r2260: [3361..3363]
 r2261: [3358..3360]
 r2262: [3357..3359]
 r2263: [3353..3356] [3347..3349]
 r2264: [3348..3355]
 r2265: [3351..3354]
 r2266: [3336..3340]
 r2267: [3335..3339]
 r2268: [3334..3338]
 r2269: [3333..3337]
 r2270: [3329..3332] [3323..3325]
 r2271: [3324..3331]
 r2272: [3327..3330]
 r2273: [3312..3316]
 r2274: [3311..3315]
 r2275: [3310..3314]
 r2276: [3309..3313]
 r2277: [3302..3303] [3297..3299] [3293..3294]
 r2278: [3300..3301]
 r2279: [3295..3296]
 r2280: [3282..3283]
 r2281: [3275..3276] [3270..3272] [3266..3267]
 r2282: [3273..3274]
 r2283: [3268..3269]
 r2284: [3255..3256]
 r2285: [3250..3252]
 r2286: [3249..3251]
 r2287: [3246..3248]
 r2288: [3245..3247]
 r2289: [3241..3244] [3235..3237]
 r2290: [3236..3243]
 r2291: [3239..3242]
 r2292: [3226..3230]
 r2293: [3225..3229]
 r2294: [3224..3228]
 r2295: [3223..3227]
 r2296: [3216..3217] [3211..3213] [3207..3208]
 r2297: [3214..3215]
 r2298: [3209..3210]
 r2299: [3196..3197]
 r2300: [3189..3190] [3184..3186] [3180..3181]
 r2301: [3187..3188]
 r2302: [3182..3183]
 r2303: [3169..3170]
 r2304: [3164..3166]
 r2305: [3163..3165]
 r2306: [3160..3162]
 r2307: [3159..3161]
 r2308: [3156..3158]
 r2309: [3155..3157]
 r2310: [3151..3154] [3145..3147]
 r2311: [3146..3153]
 r2312: [3149..3152]
 r2313: [3136..3140]
 r2314: [3135..3139]
 r2315: [3134..3138]
 r2316: [3133..3137]
 r2317: [3126..3127] [3121..3123] [3117..3118]
 r2318: [3124..3125]
 r2319: [3119..3120]
 r2320: [3106..3107]
 r2321: [3099..3100] [3094..3096] [3090..3091]
 r2322: [3097..3098]
 r2323: [3092..3093]
 r2324: [3079..3080]
 r2325: [3074..3076]
 r2326: [3073..3075]
 r2327: [3070..3072]
 r2328: [3069..3071]
 r2329: [3065..3068] [3059..3061]
 r2330: [3060..3067]
 r2331: [3063..3066]
 r2332: [3050..3054]
 r2333: [3049..3053]
 r2334: [3048..3052]
 r2335: [3047..3051]
 r2336: [3040..3041] [3035..3037] [3031..3032]
 r2337: [3038..3039]
 r2338: [3033..3034]
 r2339: [3020..3021]
 r2340: [3013..3014] [3008..3010] [3004..3005]
 r2341: [3011..3012]
 r2342: [3006..3007]
 r2343: [2993..2994]
 r2344: [2988..2990]
 r2345: [2987..2989]
 r2346: [2984..2986]
 r2347: [2983..2985]
 r2348: [2979..2982] [2973..2975]
 r2349: [2974..2981]
 r2350: [2977..2980]
 r2351: [2964..2968]
 r2352: [2963..2967]
 r2353: [2962..2966]
 r2354: [2961..2965]
 r2355: [2954..2955] [2949..2951] [2945..2946]
 r2356: [2952..2953]
 r2357: [2947..2948]
 r2358: [2934..2935]
 r2359: [2845..2846]
 r2360: [2852..2853]
 r2361: [2920..2921]
 r2362: [2913..2914]
 r2363: [2906..2907]
 r2364: [2903..2904]
 r2365: [2895..2896]
 r2366: [2888..2889]
 r2367: [2881..2882]
 r2368: [2871..2872]
 r2369: [2864..2865]
 r2370: [2856..2858]
 r2371: [2856..2857]
 r2372: [2838..2839] [2833..2835] [2829..2830]
 r2373: [2836..2837]
 r2374: [2831..2832]
 r2375: [2818..2819]
 r2376: [2813..2815]
 r2377: [2812..2814]
 r2378: [2809..2811]
 r2379: [2808..2810]
 r2380: [2742..2743]
 r2381: [2749..2750]
 r2382: [2801..2802]
 r2383: [2796..2797]
 r2384: [2789..2790]
 r2385: [2786..2787]
 r2386: [2781..2782]
 r2387: [2774..2775]
 r2388: [2771..2772]
 r2389: [2766..2767]
 r2390: [2761..2762]
 r2391: [2752..2753]
 r2392: [2737..2739]
 r2393: [2736..2738]
 r2394: [2732..2735] [2726..2728]
 r2395: [2727..2734]
 r2396: [2730..2733]
 r2397: [2717..2721]
 r2398: [2716..2720]
 r2399: [2715..2719]
 r2400: [2714..2718]
 r2401: [2707..2708] [2702..2704] [2698..2699]
 r2402: [2705..2706]
 r2403: [2700..2701]
 r2404: [2687..2688]
 r2405: [2680..2681] [2675..2677] [2671..2672]
 r2406: [2678..2679]
 r2407: [2673..2674]
 r2408: [2660..2661]
 r2409: [2655..2657]
 r2410: [2654..2656]
 r2411: [2651..2653]
 r2412: [2650..2652]
 r2413: [2589..2590]
 r2414: [2596..2597]
 r2415: [2643..2644]
 r2416: [2638..2639]
 r2417: [2631..2632]
 r2418: [2628..2629]
 r2419: [2623..2624]
 r2420: [2616..2617]
 r2421: [2613..2614]
 r2422: [2608..2609]
 r2423: [2599..2600]
 r2424: [2584..2586]
 r2425: [2583..2585]
 r2426: [2579..2582] [2573..2575]
 r2427: [2574..2581]
 r2428: [2577..2580]
 r2429: [2564..2568]
 r2430: [2563..2567]
 r2431: [2562..2566]
 r2432: [2561..2565]
 r2433: [2554..2555] [2549..2551] [2545..2546]
 r2434: [2552..2553]
 r2435: [2547..2548]
 r2436: [2534..2535]
 r2437: [2527..2528] [2522..2524] [2518..2519]
 r2438: [2525..2526]
 r2439: [2520..2521]
 r2440: [2507..2508]
 r2441: [2503..2504]
 r2442: [2501..2502]
 r2443: [2499..2500]
 r2444: [1888..1889]
 r2445: [1895..1896]
 r2446: [1911..1912]
 r2447: [1906..1907]
 r2448: [1898..1900]
 r2449: [1898..1899]
 r2450: [1920..1921]
 r2451: [1927..1928]
 r2452: [2490..2491]
 r2453: [2485..2486]
 r2454: [2476..2479]
 r2455: [2476..2477]
 r2456: [2473..2474]
 r2457: [2468..2469]
 r2458: [2461..2462]
 r2459: [2454..2455]
 r2460: [2445..2448]
 r2461: [2445..2446]
 r2462: [2442..2443]
 r2463: [2437..2438]
 r2464: [2430..2431]
 r2465: [2426..2427]
 r2466: [2419..2420]
 r2467: [2412..2413]
 r2468: [2403..2406]
 r2469: [2403..2404]
 r2470: [2401..2402]
 r2471: [2394..2395]
 r2472: [2387..2388]
 r2473: [2378..2381]
 r2474: [2378..2379]
 r2475: [2376..2377]
 r2476: [2369..2370]
 r2477: [2362..2363]
 r2478: [2355..2356]
 r2479: [2353..2354]
 r2480: [2350..2352]
 r2481: [2350..2351]
 r2482: [2343..2344]
 r2483: [2345..2346]
 r2484: [2340..2341]
 r2485: [2337..2338]
 r2486: [2327..2328]
 r2487: [2325..2326]
 r2488: [2320..2321]
 r2489: [2311..2314]
 r2490: [2311..2312]
 r2491: [2301..2304]
 r2492: [2301..2302]
 r2493: [2296..2297]
 r2494: [2292..2293]
 r2495: [2289..2291]
 r2496: [2289..2290]
 r2497: [2281..2283]
 r2498: [2281..2282]
 r2499: [2277..2279]
 r2500: [2277..2278]
 r2501: [2269..2271]
 r2502: [2269..2270]
 r2503: [2257..2258]
 r2504: [2252..2253]
 r2505: [2254..2255]
 r2506: [2249..2250]
 r2507: [2240..2241]
 r2508: [2237..2238]
 r2509: [2232..2233]
 r2510: [2227..2228]
 r2511: [2218..2219]
 r2512: [2215..2217]
 r2513: [2215..2216]
 r2514: [2211..2213]
 r2515: [2211..2212]
 r2516: [2204..2205]
 r2517: [2199..2200]
 r2518: [2194..2195]
 r2519: [2185..2186]
 r2520: [2183..2184]
 r2521: [2180..2181]
 r2522: [2175..2176]
 r2523: [2168..2169]
 r2524: [2163..2164]
 r2525: [2156..2157]
 r2526: [2153..2154]
 r2527: [2150..2151]
 r2528: [2145..2146]
 r2529: [2136..2139]
 r2530: [2136..2137]
 r2531: [2132..2133]
 r2532: [2123..2126]
 r2533: [2123..2124]
 r2534: [2120..2121]
 r2535: [2115..2116]
 r2536: [2106..2109]
 r2537: [2106..2107]
 r2538: [2103..2104]
 r2539: [2093..2094]
 r2540: [2086..2087]
 r2541: [2079..2080]
 r2542: [2072..2073]
 r2543: [2070..2071]
 r2544: [2068..2069]
 r2545: [2063..2064]
 r2546: [2058..2059]
 r2547: [2051..2052]
 r2548: [2046..2047]
 r2549: [2041..2042]
 r2550: [2034..2035]
 r2551: [2028..2029]
 r2552: [2026..2027]
 r2553: [2018..2019]
 r2554: [2021..2022]
 r2555: [2023..2024]
 r2556: [2015..2016]
 r2558: [1955..1956]
 r2559: [1952..1953]
 r2560: [1943..1944]
 r2561: [1938..1939]
 r2562: [1931..1932]
 r2563: [2011..2013]
 r2564: [2011..2012]
 r2565: [2008..2009]
 r2566: [1999..2000]
 r2567: [2001..2002]
 r2569: [1994..1995]
 r2570: [1996..1997]
 r2571: [1991..1992]
 r2572: [1981..1982]
 r2573: [1978..1979]
 r2574: [1973..1974]
 r2575: [1968..1969]
 r2576: [1959..1960]
 r2577: [1883..1885]
 r2578: [1882..1884]
 r2579: [1878..1881] [1872..1874]
 r2580: [1873..1880]
 r2581: [1876..1879]
 r2582: [1864..1867]
 r2583: [1863..1866]
 r2584: [1862..1865]
 r2585: [1857..1861]
 r2586: [1856..1860]
 r2587: [1855..1859]
 r2588: [1854..1858]
 r2589: [1847..1848] [1842..1844] [1838..1839]
 r2590: [1845..1846]
 r2591: [1840..1841]
 r2592: [1827..1828]
 r2593: [1820..1821]
 r2594: [1813..1815]
 r2595: [1812..1814]
 r2596: [1803..1804] [1798..1800] [1794..1795]
 r2597: [1801..1802]
 r2598: [1796..1797]
 r2599: [1783..1784]
 r2600: [1778..1780]
 r2601: [1777..1779]
 r2602: [1773..1776] [1767..1769]
 r2603: [1768..1775]
 r2604: [1771..1774]
 r2605: [1758..1762]
 r2606: [1757..1761]
 r2607: [1756..1760]
 r2608: [1755..1759]
 r2609: [1748..1749] [1743..1745] [1739..1740]
 r2610: [1746..1747]
 r2611: [1741..1742]
 r2612: [1728..1729]
 r2613: [1721..1722] [1716..1718] [1712..1713]
 r2614: [1719..1720]
 r2615: [1714..1715]
 r2616: [1701..1702]
 r2617: [1669..1670]
 r2618: [1676..1677]
 r2619: [1692..1693]
 r2620: [1687..1688]
 r2621: [1679..1681]
 r2622: [1679..1680]
 r2623: [1664..1666]
 r2624: [1663..1665]
 r2625: [1659..1662] [1653..1655]
 r2626: [1654..1661]
 r2627: [1657..1660]
 r2628: [1644..1648]
 r2629: [1643..1647]
 r2630: [1642..1646]
 r2631: [1641..1645]
 r2632: [1634..1635] [1629..1631] [1625..1626]
 r2633: [1632..1633]
 r2634: [1627..1628]
 r2635: [1614..1615]
 r2636: [1607..1608] [1602..1604] [1598..1599]
 r2637: [1605..1606]
 r2638: [1600..1601]
 r2639: [1587..1588]
 r2640: [1555..1556]
 r2641: [1562..1563]
 r2642: [1578..1579]
 r2643: [1573..1574]
 r2644: [1565..1567]
 r2645: [1565..1566]
 r2646: [1550..1552]
 r2647: [1549..1551]
 r2648: [1545..1548] [1539..1541]
 r2649: [1540..1547]
 r2650: [1543..1546]
 r2651: [1530..1534]
 r2652: [1529..1533]
 r2653: [1528..1532]
 r2654: [1527..1531]
 r2655: [1520..1521] [1515..1517] [1511..1512]
 r2656: [1518..1519]
 r2657: [1513..1514]
 r2658: [1500..1501]
 r2659: [1493..1494]
 r2660: [1486..1488]
 r2661: [1485..1487]
 r2662: [1476..1477] [1471..1473] [1467..1468]
 r2663: [1474..1475]
 r2664: [1469..1470]
 r2665: [1456..1457]
 r2666: [1451..1452]
 r2667: [1444..1445]
 r2668: [1446..1447]
 r2669: [1449..1450]
 r2670: [1398..1399]
 r2671: [1405..1406]
 r2672: [1437..1438]
 r2673: [1432..1433]
 r2674: [1425..1426]
 r2675: [1422..1423]
 r2676: [1417..1418]
 r2677: [1408..1409]
 r2678: [1393..1395]
 r2679: [1392..1394]
 r2680: [1388..1391] [1382..1384]
 r2681: [1383..1390]
 r2682: [1386..1389]
 r2683: [1380..1381]
 r2684: [1376..1377]
 r2686: [1374..1375]
 r2687: [1372..1374]
 r2688: [1373..1373]
 r2689: [1370..1371]
 r2690: [1364..1365]
 r2691: [1368..1369]
 r2692: [1351..1355]
 r2693: [1350..1354]
 r2694: [1349..1353]
 r2695: [1348..1352]
 r2696: [1341..1342] [1336..1338] [1332..1333]
 r2697: [1339..1340]
 r2698: [1334..1335]
 r2699: [1321..1322]
 r2700: [1314..1315]
 r2701: [1307..1309]
 r2702: [1306..1308]
 r2703: [1297..1298] [1292..1294] [1288..1289]
 r2704: [1295..1296]
 r2705: [1290..1291]
 r2706: [1277..1278]
 r2707: [1272..1273]
 r2708: [1265..1266]
 r2709: [1267..1268]
 r2710: [1270..1271]
 r2711: [1219..1220]
 r2712: [1226..1227]
 r2713: [1258..1259]
 r2714: [1253..1254]
 r2715: [1246..1247]
 r2716: [1243..1244]
 r2717: [1238..1239]
 r2718: [1229..1230]
 r2719: [1214..1216]
 r2720: [1213..1215]
 r2721: [1209..1212] [1203..1205]
 r2722: [1204..1211]
 r2723: [1207..1210]
 r2724: [1201..1202]
 r2725: [1197..1198]
 r2727: [1195..1196]
 r2728: [1193..1195]
 r2729: [1194..1194]
 r2730: [1191..1192]
 r2731: [1185..1186]
 r2732: [1189..1190]
 r2733: [1172..1176]
 r2734: [1171..1175]
 r2735: [1170..1174]
 r2736: [1169..1173]
 r2737: [1145..1146]
 r2738: [1147..1148]
 r2739: [389..390]
 r2740: [396..397]
 r2741: [1138..1139]
 r2742: [1133..1134]
 r2743: [1124..1127]
 r2744: [1124..1125]
 r2745: [1121..1122]
 r2746: [1118..1119]
 r2747: [711..712]
 r2748: [706..707]
 r2749: [698..700]
 r2750: [698..699]
 r2751: [696..697]
 r2752: [691..692]
 r2753: [683..685]
 r2754: [683..684]
 r2755: [1115..1116]
 r2756: [1110..1111]
 r2757: [1101..1104]
 r2758: [1101..1102]
 r2759: [1099..1100]
 r2760: [1097..1098]
 r2761: [1092..1093]
 r2762: [1083..1086]
 r2763: [1083..1084]
 r2764: [1080..1081]
 r2765: [1075..1076]
 r2766: [1066..1069]
 r2767: [1066..1067]
 r2768: [1059..1060]
 r2769: [1061..1062]
 r2770: [1057..1058]
 r2771: [1052..1053]
 r2772: [1043..1046]
 r2773: [1043..1044]
 r2774: [1040..1041]
 r2775: [1035..1036]
 r2776: [1030..1031]
 r2777: [1021..1024]
 r2778: [1021..1022]
 r2779: [1014..1015]
 r2780: [1016..1017]
 r2781: [1012..1013]
 r2782: [1007..1008]
 r2783: [998..1001]
 r2784: [998..999]
 r2785: [995..996]
 r2786: [990..991]
 r2787: [981..984]
 r2788: [981..982]
 r2789: [973..974]
 r2790: [971..972]
 r2791: [966..967]
 r2792: [959..960]
 r2793: [950..953]
 r2794: [950..951]
 r2795: [947..948]
 r2796: [942..943]
 r2797: [933..936]
 r2798: [933..934]
 r2799: [930..931]
 r2800: [925..926]
 r2801: [916..919]
 r2802: [916..917]
 r2803: [907..910]
 r2804: [907..908]
 r2805: [902..903]
 r2806: [890..891]
 r2807: [886..887]
 r2808: [883..885]
 r2809: [883..884]
 r2810: [878..879]
 r2811: [873..874]
 r2812: [864..865]
 r2813: [862..863]
 r2814: [857..858]
 r2815: [848..851]
 r2816: [848..849]
 r2817: [845..846]
 r2818: [840..841]
 r2819: [831..834]
 r2820: [831..832]
 r2821: [823..824]
 r2822: [821..822]
 r2823: [816..817]
 r2824: [809..810]
 r2825: [800..803]
 r2826: [800..801]
 r2827: [797..798]
 r2828: [792..793]
 r2829: [783..786]
 r2830: [783..784]
 r2831: [780..781]
 r2832: [775..776]
 r2833: [766..769]
 r2834: [766..767]
 r2835: [757..760]
 r2836: [757..758]
 r2837: [752..753]
 r2838: [740..741]
 r2839: [736..737]
 r2840: [733..735]
 r2841: [733..734]
 r2842: [728..729]
 r2843: [723..724]
 r2844: [714..715]
 r2845: [680..681]
 r2846: [675..676]
 r2847: [666..669]
 r2848: [666..667]
 r2849: [664..665]
 r2850: [662..663]
 r2851: [657..658]
 r2852: [650..651]
 r2853: [643..644]
 r2854: [638..639]
 r2855: [629..632]
 r2856: [629..630]
 r2857: [626..627]
 r2858: [624..625]
 r2859: [619..620]
 r2860: [612..613]
 r2861: [605..606]
 r2862: [600..601]
 r2863: [591..594]
 r2864: [591..592]
 r2865: [588..589]
 r2866: [586..587]
 r2867: [581..582]
 r2868: [574..575]
 r2869: [567..568]
 r2870: [564..565]
 r2871: [559..560]
 r2872: [554..555]
 r2873: [547..548]
 r2874: [540..541]
 r2875: [537..538]
 r2876: [532..533]
 r2877: [523..524]
 r2878: [521..522]
 r2879: [516..517]
 r2880: [509..510]
 r2881: [502..503]
 r2882: [499..500]
 r2883: [494..495]
 r2884: [487..488]
 r2885: [480..481]
 r2886: [477..478]
 r2887: [472..473]
 r2888: [463..464]
 r2889: [461..462]
 r2890: [456..457]
 r2891: [447..450]
 r2892: [447..448]
 r2893: [444..445]
 r2894: [439..440]
 r2895: [430..433]
 r2896: [430..431]
 r2897: [421..424]
 r2898: [421..422]
 r2899: [416..417]
 r2900: [413..414]
 r2901: [408..409]
 r2902: [399..400]
 r2903: [380..382]
 r2904: [379..381]
 r2905: [375..378] [369..371]
 r2906: [370..377]
 r2907: [373..376]
 r2908: [362..363] [357..359] [353..354]
 r2909: [360..361]
 r2910: [355..356]
 r2911: [349..350]
 r2912: [347..348]
 r2913: [342..345]
 r2914: [341..344]
 r2915: [340..343]
 r2916: [314..316]
 r2917: [313..315]
 r2918: [309..312] [303..305]
 r2919: [304..311]
 r2920: [307..310]
 r2921: [299..302]
 r2922: [298..301]
 r2923: [297..300]
 r2924: [247..248]
 r2925: [254..255]
 r2926: [286..287]
 r2927: [281..282]
 r2928: [274..275]
 r2929: [269..270]
 r2930: [260..263]
 r2931: [260..261]
 r2932: [257..258]
 r2933: [198..199]
 r2934: [208..209]
 r2935: [215..216]
 r2936: [233..234]
 r2937: [226..227]
 r2938: [218..220]
 r2939: [218..219]
 r2940: [6..7]
 r2941: [179..180] [174..176] [170..171]
 r2942: [177..178]
 r2943: [172..173]
 r2944: [159..160]
 r2945: [152..153] [147..149] [143..144]
 r2946: [150..151]
 r2947: [145..146]
 r2948: [132..133]
 r2949: [127..129]
 r2950: [126..128]
 r2951: [123..125]
 r2952: [122..124]
 r2953: [118..121] [112..114]
 r2954: [113..120]
 r2955: [116..119]
 r2956: [103..107]
 r2957: [102..106]
 r2958: [101..105]
 r2959: [100..104]
 r2960: [93..94] [88..90] [84..85]
 r2961: [91..92]
 r2962: [86..87]
 r2963: [73..74]
 r2964: [66..67] [61..63] [57..58]
 r2965: [64..65]
 r2966: [59..60]
 r2967: [46..47]
 r2968: [41..43]
 r2969: [40..42]
 r2970: [37..39]
 r2971: [36..38]
 r2972: [32..35] [26..28]
 r2973: [27..34]
 r2974: [30..33]
 r2975: [17..21]
 r2976: [16..20]
 r2977: [15..19]
 r2978: [14..18]
 r2979: [2..3]
 r2980: [0..1]
 r2983: [5682..5684]
 r2984: [5667..5669]
 r2985: [5621..5623]
 r2986: [5203..5205]
 r2987: [5198..5199]
 r2988: [5194..5195]
 r2989: [5189..5191]
 r2990: [5182..5184]
 r2991: [5177..5178]
 r2992: [5174..5175]
 r2993: [5169..5171]
 r2994: [5162..5164]
 r2995: [4754..4756]
 r2996: [4569..4570]
 r2998: [4422..4423]
 r2999: [4160..4162]
 r3000: [4068..4070]
 r3001: [3976..3978]
 r3002: [3886..3888]
 r3003: [3776..3778]
 r3004: [3682..3684]
 r3005: [3590..3592]
 r3006: [3496..3498]
 r3007: [3350..3352]
 r3008: [3326..3328]
 r3009: [3238..3240]
 r3010: [3148..3150]
 r3011: [3062..3064]
 r3012: [2976..2978]
 r3013: [2729..2731]
 r3014: [2576..2578]
 r3015: [2470..2472]
 r3016: [2285..2286]
 r3018: [1875..1877]
 r3019: [1770..1772]
 r3020: [1656..1658]
 r3021: [1542..1544]
 r3022: [1385..1387]
 r3023: [1206..1208]
 r3024: [385..386]
 r3025: [383..384]
 r3026: [372..374]
 r3027: [331..332]
 r3028: [329..330]
 r3029: [327..328]
 r3030: [325..326]
 r3031: [323..324]
 r3032: [321..322]
 r3033: [319..320]
 r3034: [306..308]
 r3035: [194..195]
 r3036: [192..193]
 r3037: [190..191]
 r3038: [188..189]
 r3039: [115..117]
 r3040: [29..31]
 r3043: [2259..2260]
 r3044: [4543..4544]
 r3045: [4545..4568]
 r3046: [2261..2284]
Compressing live ranges: from 5788 to 4596 - 79%
Ranges after the compression:
 r87: [4592..4593]
 r88: [4584..4585]
 r89: [4578..4579]
 r90: [4578..4595]
 r92: [4576..4577]
 r93: [4574..4575]
 r94: [4572..4573]
 r95: [4564..4565]
 r96: [4556..4557]
 r97: [4550..4551]
 r98: [4550..4595]
 r100: [4548..4549]
 r101: [4546..4547]
 r102: [4544..4545]
 r103: [4534..4535]
 r104: [4532..4533]
 r105: [4532..4533]
 r106: [4518..4519]
 r107: [4512..4517]
 r108: [4514..4515]
 r109: [4510..4513]
 r110: [4506..4507]
 r111: [4496..4497]
 r112: [4494..4495]
 r113: [4488..4493]
 r114: [4482..4483]
 r115: [4476..4477]
 r116: [4474..4475]
 r117: [4458..4459]
 r118: [4456..4457]
 r119: [4450..4455]
 r120: [4444..4445]
 r121: [4438..4439]
 r122: [4432..4433]
 r123: [4428..4431]
 r124: [4428..4429]
 r125: [4426..4427]
 r126: [4424..4425]
 r127: [4410..4421]
 r128: [4418..4419]
 r129: [4414..4417]
 r130: [4414..4415]
 r131: [4412..4413]
 r132: [4408..4411]
 r133: [4406..4409]
 r134: [4402..4403]
 r135: [4398..4401]
 r136: [4398..4399]
 r137: [4396..4397]
 r138: [4384..4395]
 r139: [4392..4393]
 r140: [4388..4391]
 r141: [4388..4389]
 r142: [4386..4387]
 r143: [4380..4385]
 r144: [4380..4381]
 r145: [4150..4151]
 r146: [4368..4369]
 r147: [4366..4367]
 r148: [4360..4365]
 r149: [4362..4363]
 r150: [4360..4361]
 r151: [4356..4359]
 r152: [4356..4357]
 r153: [4354..4355]
 r154: [4352..4353]
 r155: [4328..4349]
 r156: [4348..4349]
 r157: [4346..4347]
 r158: [4340..4345]
 r159: [4342..4343]
 r160: [4340..4341]
 r161: [4336..4339]
 r162: [4336..4337]
 r163: [4334..4335]
 r164: [4332..4333]
 r165: [4328..4329]
 r166: [4300..4327]
 r167: [4326..4327]
 r168: [4324..4325]
 r169: [4318..4323]
 r170: [4320..4321]
 r171: [4318..4319]
 r172: [4314..4317]
 r173: [4314..4315]
 r174: [4312..4313]
 r175: [4310..4311]
 r176: [4306..4307]
 r177: [4304..4305]
 r178: [4302..4303]
 r179: [4300..4301]
 r180: [4296..4299]
 r181: [4296..4297]
 r182: [4248..4295]
 r183: [4294..4295]
 r184: [4292..4293]
 r185: [4290..4291]
 r186: [4284..4289]
 r187: [4286..4287]
 r188: [4284..4285]
 r189: [4280..4283]
 r190: [4280..4281]
 r191: [4278..4279]
 r192: [4276..4277]
 r193: [4252..4273]
 r194: [4272..4273]
 r195: [4270..4271]
 r196: [4264..4269]
 r197: [4266..4267]
 r198: [4264..4265]
 r199: [4260..4263]
 r200: [4260..4261]
 r201: [4258..4259]
 r202: [4256..4257]
 r203: [4252..4253]
 r204: [4250..4251]
 r205: [4248..4249]
 r206: [4224..4247]
 r207: [4244..4245]
 r208: [4240..4243]
 r209: [4240..4241]
 r210: [4238..4239]
 r211: [4236..4237]
 r212: [4224..4235]
 r213: [4232..4233]
 r214: [4228..4231]
 r215: [4228..4229]
 r216: [4226..4227]
 r217: [4222..4225]
 r218: [4222..4223]
 r219: [4218..4219]
 r220: [4214..4217]
 r221: [4214..4215]
 r222: [4212..4213]
 r223: [4210..4211]
 r224: [4192..4209]
 r225: [4208..4209]
 r226: [4206..4207]
 r227: [4200..4205]
 r228: [4202..4203]
 r229: [4200..4201]
 r230: [4196..4199]
 r231: [4196..4197]
 r232: [4194..4195]
 r233: [4190..4193]
 r234: [4188..4191]
 r235: [4184..4185]
 r236: [4180..4183]
 r237: [4180..4181]
 r238: [4178..4179]
 r239: [4166..4177]
 r240: [4174..4175]
 r241: [4170..4173]
 r242: [4170..4171]
 r243: [4168..4169]
 r244: [4164..4167]
 r245: [4164..4165]
 r246: [4154..4155]
 r247: [4152..4153]
 r248: [4138..4139]
 r249: [4136..4137]
 r250: [4088..4089]
 r251: [4086..4087]
 r252: [4080..4081]
 r253: [4074..4075]
 r254: [4068..4069]
 r255: [4064..4067]
 r256: [4064..4065]
 r257: [4062..4063]
 r258: [4060..4061]
 r259: [4056..4057]
 r260: [4012..4013]
 r261: [4050..4051]
 r262: [4048..4049]
 r263: [4046..4047]
 r264: [4044..4045]
 r265: [4022..4041]
 r266: [4040..4041]
 r267: [4038..4039]
 r268: [4036..4037]
 r269: [4030..4035]
 r270: [4032..4033]
 r271: [4030..4031]
 r272: [4026..4029]
 r273: [4026..4027]
 r274: [4024..4025]
 r275: [4020..4023]
 r276: [4018..4021]
 r277: [4016..4017]
 r278: [4014..4015]
 r279: [3860..3861]
 r280: [4000..4001]
 r281: [3998..3999]
 r282: [3996..3997]
 r283: [3990..3995]
 r284: [3992..3993]
 r285: [3990..3991]
 r286: [3986..3989]
 r287: [3986..3987]
 r288: [3984..3985]
 r289: [3982..3983]
 r290: [3962..3981]
 r291: [3980..3981]
 r292: [3978..3979]
 r293: [3972..3977]
 r294: [3974..3975]
 r295: [3972..3973]
 r296: [3968..3971]
 r297: [3968..3969]
 r298: [3966..3967]
 r299: [3964..3965]
 r300: [3962..3963]
 r301: [3960..3961]
 r302: [3942..3959]
 r303: [3958..3959]
 r304: [3956..3957]
 r305: [3950..3955]
 r306: [3952..3953]
 r307: [3950..3951]
 r308: [3946..3949]
 r309: [3946..3947]
 r310: [3944..3945]
 r311: [3940..3943]
 r312: [3940..3941]
 r313: [3938..3939]
 r314: [3936..3937]
 r315: [3934..3935]
 r316: [3928..3933]
 r317: [3930..3931]
 r318: [3928..3929]
 r319: [3924..3927]
 r320: [3924..3925]
 r321: [3922..3923]
 r322: [3920..3921]
 r323: [3896..3917]
 r324: [3916..3917]
 r325: [3914..3915]
 r326: [3908..3913]
 r327: [3910..3911]
 r328: [3908..3909]
 r329: [3904..3907]
 r330: [3904..3905]
 r331: [3902..3903]
 r332: [3900..3901]
 r333: [3896..3897]
 r334: [3894..3895]
 r335: [3876..3893]
 r336: [3892..3893]
 r337: [3890..3891]
 r338: [3884..3889]
 r339: [3886..3887]
 r340: [3884..3885]
 r341: [3880..3883]
 r342: [3880..3881]
 r343: [3878..3879]
 r344: [3874..3877]
 r345: [3874..3875]
 r346: [3864..3865]
 r347: [3862..3863]
 r348: [3854..3855]
 r349: [3852..3853]
 r350: [3850..3851]
 r351: [3848..3849]
 r352: [3846..3847]
 r353: [3844..3845]
 r354: [3842..3843]
 r355: [3840..3841]
 r356: [3838..3839]
 r357: [3836..3837]
 r358: [3834..3835]
 r359: [3832..3833]
 r360: [3830..3831]
 r361: [3828..3829]
 r362: [3826..3827]
 r363: [3824..3825]
 r364: [3822..3823]
 r365: [3820..3821]
 r366: [3818..3819]
 r367: [3816..3817]
 r368: [3814..3815]
 r369: [3812..3813]
 r370: [3810..3811]
 r371: [3808..3809]
 r372: [3806..3807]
 r373: [3804..3805]
 r374: [3802..3803]
 r375: [3800..3801]
 r376: [3792..3793]
 r377: [3788..3791]
 r378: [3788..3789]
 r379: [3786..3787]
 r380: [3784..3785]
 r381: [3334..3335]
 r382: [3770..3771]
 r383: [3766..3769]
 r384: [3766..3767]
 r385: [3764..3765]
 r386: [3762..3763]
 r387: [3756..3759]
 r388: [3752..3753]
 r389: [3750..3751]
 r390: [3744..3749]
 r391: [3746..3747]
 r392: [3744..3745]
 r393: [3740..3743]
 r394: [3740..3741]
 r395: [3738..3739]
 r396: [3736..3737]
 r397: [3720..3733]
 r398: [3730..3731]
 r399: [3726..3729]
 r400: [3726..3727]
 r401: [3724..3725]
 r402: [3722..3723]
 r403: [3720..3721]
 r404: [3716..3717]
 r405: [3714..3715]
 r406: [3708..3713]
 r407: [3710..3711]
 r408: [3708..3709]
 r409: [3704..3707]
 r410: [3704..3705]
 r411: [3702..3703]
 r412: [3700..3701]
 r413: [3694..3695]
 r414: [3692..3693]
 r415: [3686..3691]
 r416: [3688..3689]
 r417: [3686..3687]
 r418: [3682..3685]
 r419: [3682..3683]
 r420: [3680..3681]
 r421: [3678..3679]
 r422: [3672..3673]
 r423: [3670..3671]
 r424: [3664..3669]
 r425: [3666..3667]
 r426: [3664..3665]
 r427: [3660..3663]
 r428: [3660..3661]
 r429: [3658..3659]
 r430: [3656..3657]
 r431: [3650..3651]
 r432: [3648..3649]
 r433: [3640..3643]
 r434: [3640..3641]
 r435: [3638..3639]
 r436: [3630..3631]
 r437: [3626..3629]
 r438: [3626..3627]
 r439: [3624..3625]
 r440: [3622..3623]
 r441: [3610..3619]
 r442: [3618..3619]
 r443: [3616..3617]
 r444: [3614..3615]
 r445: [3610..3611]
 r446: [3606..3609]
 r447: [3606..3607]
 r448: [3600..3601]
 r450: [3590..3595]
 r451: [3592..3593]
 r452: [3590..3591]
 r453: [3584..3589]
 r454: [3586..3587]
 r455: [3584..3585]
 r456: [3582..3583]
 r457: [3578..3581]
 r458: [3568..3571]
 r459: [3568..3569]
 r460: [3566..3567]
 r461: [3562..3563]
 r462: [3560..3561]
 r463: [3548..3559]
 r464: [3556..3557]
 r465: [3552..3555]
 r466: [3552..3553]
 r467: [3550..3551]
 r468: [3546..3549]
 r469: [3546..3547]
 r470: [3542..3543]
 r471: [3538..3541]
 r472: [3538..3539]
 r473: [3536..3537]
 r474: [3534..3535]
 r475: [3498..3531]
 r476: [3530..3531]
 r477: [3528..3529]
 r478: [3526..3527]
 r479: [3524..3525]
 r480: [3502..3521]
 r481: [3518..3519]
 r482: [3514..3517]
 r483: [3514..3515]
 r484: [3512..3513]
 r485: [3510..3511]
 r486: [3506..3507]
 r487: [3504..3505]
 r488: [3502..3503]
 r489: [3500..3501]
 r490: [3498..3499]
 r491: [3490..3491]
 r492: [3486..3489]
 r493: [3486..3487]
 r494: [3484..3485]
 r495: [3482..3483]
 r496: [3480..3481]
 r497: [3476..3477]
 r498: [3450..3451]
 r499: [3448..3449]
 r500: [3442..3447]
 r501: [3444..3445]
 r502: [3442..3443]
 r503: [3438..3441]
 r504: [3438..3439]
 r505: [3436..3437]
 r506: [3434..3435]
 r507: [3468..3469]
 r508: [3466..3467]
 r509: [3460..3465]
 r510: [3462..3463]
 r511: [3460..3461]
 r512: [3456..3459]
 r513: [3456..3457]
 r514: [3454..3455]
 r515: [3452..3453]
 r516: [3430..3431]
 r517: [3428..3429]
 r518: [3422..3427]
 r519: [3424..3425]
 r520: [3422..3423]
 r521: [3418..3421]
 r522: [3418..3419]
 r523: [3416..3417]
 r524: [3414..3415]
 r525: [3408..3409]
 r526: [3406..3407]
 r527: [3400..3405]
 r528: [3402..3403]
 r529: [3400..3401]
 r530: [3396..3399]
 r531: [3396..3397]
 r532: [3394..3395]
 r533: [3392..3393]
 r534: [3390..3391]
 r535: [3388..3389]
 r536: [3386..3387]
 r537: [3380..3385]
 r538: [3382..3383]
 r539: [3380..3381]
 r540: [3376..3379]
 r541: [3376..3377]
 r542: [3374..3375]
 r543: [3372..3373]
 r544: [3368..3371]
 r545: [3364..3365]
 r546: [3362..3363]
 r547: [3356..3361]
 r548: [3358..3359]
 r549: [3356..3357]
 r550: [3352..3355]
 r551: [3352..3353]
 r552: [3350..3351]
 r553: [3348..3349]
 r554: [3338..3339]
 r555: [3336..3337]
 r556: [954..955]
 r557: [3328..3329]
 r558: [3326..3327]
 r559: [3320..3325]
 r560: [3312..3315]
 r561: [3314..3315]
 r562: [3312..3313]
 r563: [3310..3311]
 r564: [3308..3309]
 r565: [3304..3305]
 r566: [3302..3303]
 r567: [3296..3301]
 r568: [3288..3291]
 r569: [3290..3291]
 r570: [3288..3289]
 r571: [3286..3287]
 r572: [3284..3285]
 r573: [3280..3281]
 r574: [3268..3269]
 r575: [3266..3267]
 r576: [3256..3257]
 r577: [3254..3255]
 r578: [3248..3253]
 r579: [3240..3243]
 r580: [3242..3243]
 r581: [3240..3241]
 r582: [3238..3239]
 r583: [3236..3237]
 r584: [3232..3233]
 r585: [3230..3231]
 r586: [3224..3229]
 r587: [3216..3219]
 r588: [3218..3219]
 r589: [3216..3217]
 r590: [3214..3215]
 r591: [3212..3213]
 r592: [3208..3209]
 r593: [3196..3197]
 r594: [3194..3195]
 r595: [3184..3185]
 r596: [3182..3183]
 r597: [3176..3181]
 r598: [3168..3171]
 r599: [3170..3171]
 r600: [3168..3169]
 r601: [3166..3167]
 r602: [3164..3165]
 r603: [3160..3161]
 r604: [3158..3159]
 r605: [3152..3157]
 r606: [3144..3147]
 r607: [3146..3147]
 r608: [3144..3145]
 r609: [3142..3143]
 r610: [3140..3141]
 r611: [3136..3137]
 r612: [3124..3125]
 r613: [3122..3123]
 r614: [3118..3119]
 r615: [3116..3117]
 r616: [3110..3115]
 r617: [3102..3105]
 r618: [3104..3105]
 r619: [3102..3103]
 r620: [3100..3101]
 r621: [3098..3099]
 r622: [3094..3095]
 r623: [3092..3093]
 r624: [3086..3091]
 r625: [3078..3081]
 r626: [3080..3081]
 r627: [3078..3079]
 r628: [3076..3077]
 r629: [3074..3075]
 r630: [3070..3071]
 r631: [3056..3057]
 r632: [3054..3055]
 r633: [3050..3051]
 r634: [3048..3049]
 r635: [3042..3047]
 r636: [3034..3037]
 r637: [3036..3037]
 r638: [3034..3035]
 r639: [3032..3033]
 r640: [3030..3031]
 r641: [3026..3027]
 r642: [3024..3025]
 r643: [3018..3023]
 r644: [3010..3013]
 r645: [3012..3013]
 r646: [3010..3011]
 r647: [3008..3009]
 r648: [3006..3007]
 r649: [3002..3003]
 r650: [2980..2981]
 r651: [2978..2979]
 r652: [2974..2975]
 r653: [2972..2973]
 r654: [2966..2971]
 r655: [2958..2961]
 r656: [2960..2961]
 r657: [2958..2959]
 r658: [2956..2957]
 r659: [2954..2955]
 r660: [2950..2951]
 r661: [2948..2949]
 r662: [2942..2947]
 r663: [2934..2937]
 r664: [2936..2937]
 r665: [2934..2935]
 r666: [2932..2933]
 r667: [2930..2931]
 r668: [2926..2927]
 r669: [2910..2911]
 r670: [2908..2909]
 r671: [2904..2905]
 r672: [2902..2903]
 r673: [2896..2901]
 r674: [2888..2891]
 r675: [2890..2891]
 r676: [2888..2889]
 r677: [2886..2887]
 r678: [2884..2885]
 r679: [2880..2881]
 r680: [2878..2879]
 r681: [2872..2877]
 r682: [2864..2867]
 r683: [2866..2867]
 r684: [2864..2865]
 r685: [2862..2863]
 r686: [2860..2861]
 r687: [2856..2857]
 r688: [2842..2843]
 r689: [2840..2841]
 r690: [2836..2837]
 r691: [2834..2835]
 r692: [2828..2833]
 r693: [2820..2823]
 r694: [2822..2823]
 r695: [2820..2821]
 r696: [2818..2819]
 r697: [2816..2817]
 r698: [2812..2813]
 r699: [2810..2811]
 r700: [2804..2809]
 r701: [2796..2799]
 r702: [2798..2799]
 r703: [2796..2797]
 r704: [2794..2795]
 r705: [2792..2793]
 r706: [2788..2789]
 r707: [2772..2773]
 r708: [2770..2771]
 r709: [2766..2767]
 r710: [2764..2765]
 r711: [2762..2763]
 r712: [2756..2761]
 r713: [2748..2751]
 r714: [2750..2751]
 r715: [2748..2749]
 r716: [2746..2747]
 r717: [2744..2745]
 r718: [2740..2741]
 r719: [2738..2739]
 r720: [2732..2737]
 r721: [2724..2727]
 r722: [2726..2727]
 r723: [2724..2725]
 r724: [2722..2723]
 r725: [2720..2721]
 r726: [2716..2717]
 r727: [2714..2715]
 r728: [2708..2713]
 r729: [2700..2703]
 r730: [2702..2703]
 r731: [2700..2701]
 r732: [2698..2699]
 r733: [2696..2697]
 r734: [2692..2693]
 r735: [2688..2689]
 r736: [2682..2687]
 r737: [2674..2677]
 r738: [2676..2677]
 r739: [2674..2675]
 r740: [2672..2673]
 r741: [2670..2671]
 r742: [2666..2667]
 r743: [2654..2655]
 r744: [2652..2653]
 r745: [2650..2651]
 r746: [2640..2641]
 r747: [2638..2639]
 r748: [2636..2637]
 r749: [2632..2633]
 r750: [2630..2631]
 r751: [2624..2629]
 r752: [2616..2619]
 r753: [2618..2619]
 r754: [2616..2617]
 r755: [2614..2615]
 r756: [2612..2613]
 r757: [2608..2609]
 r758: [2606..2607]
 r759: [2600..2605]
 r760: [2592..2595]
 r761: [2594..2595]
 r762: [2592..2593]
 r763: [2590..2591]
 r764: [2588..2589]
 r765: [2584..2585]
 r766: [2572..2573]
 r767: [2570..2571]
 r768: [2566..2567]
 r769: [2564..2565]
 r770: [2558..2563]
 r771: [2550..2553]
 r772: [2552..2553]
 r773: [2550..2551]
 r774: [2548..2549]
 r775: [2546..2547]
 r776: [2542..2543]
 r777: [2540..2541]
 r778: [2534..2539]
 r779: [2526..2529]
 r780: [2528..2529]
 r781: [2526..2527]
 r782: [2524..2525]
 r783: [2522..2523]
 r784: [2518..2519]
 r785: [2504..2505]
 r786: [2502..2503]
 r787: [2498..2499]
 r788: [2496..2497]
 r789: [2490..2495]
 r790: [2482..2485]
 r791: [2484..2485]
 r792: [2482..2483]
 r793: [2480..2481]
 r794: [2478..2479]
 r795: [2474..2475]
 r796: [2472..2473]
 r797: [2466..2471]
 r798: [2458..2461]
 r799: [2460..2461]
 r800: [2458..2459]
 r801: [2456..2457]
 r802: [2454..2455]
 r803: [2450..2451]
 r804: [2438..2439]
 r805: [2436..2437]
 r806: [2432..2433]
 r807: [2430..2431]
 r808: [2424..2429]
 r809: [2416..2419]
 r810: [2418..2419]
 r811: [2416..2417]
 r812: [2414..2415]
 r813: [2412..2413]
 r814: [2408..2409]
 r815: [2406..2407]
 r816: [2400..2405]
 r817: [2392..2395]
 r818: [2394..2395]
 r819: [2392..2393]
 r820: [2390..2391]
 r821: [2388..2389]
 r822: [2384..2385]
 r823: [2372..2373]
 r824: [2370..2371]
 r825: [2366..2367]
 r826: [2364..2365]
 r827: [2358..2363]
 r828: [2350..2353]
 r829: [2352..2353]
 r830: [2350..2351]
 r831: [2348..2349]
 r832: [2346..2347]
 r833: [2342..2343]
 r834: [2338..2339]
 r835: [2336..2337]
 r836: [2330..2335]
 r837: [2332..2333]
 r838: [2330..2331]
 r839: [2326..2329]
 r840: [2326..2327]
 r841: [2324..2325]
 r842: [2322..2323]
 r843: [2320..2321]
 r844: [2318..2319]
 r845: [2316..2317]
 r846: [2310..2315]
 r847: [2312..2313]
 r848: [2310..2311]
 r849: [2306..2309]
 r850: [2306..2307]
 r851: [2304..2305]
 r852: [2302..2303]
 r853: [2300..2301]
 r854: [2298..2299]
 r855: [2296..2297]
 r856: [2290..2295]
 r857: [2292..2293]
 r858: [2290..2291]
 r859: [2286..2289]
 r860: [2286..2287]
 r861: [2284..2285]
 r862: [2282..2283]
 r863: [2272..2273]
 r864: [2266..2271]
 r865: [2258..2261]
 r866: [2260..2261]
 r867: [2258..2259]
 r868: [2256..2257]
 r869: [2254..2255]
 r870: [2250..2251]
 r871: [2240..2241]
 r872: [2236..2239]
 r873: [2236..2237]
 r874: [2234..2235]
 r875: [2232..2233]
 r876: [2204..2231]
 r877: [2228..2229]
 r878: [2224..2227]
 r879: [2224..2225]
 r880: [2222..2223]
 r881: [2220..2221]
 r882: [2218..2219]
 r883: [2216..2217]
 r884: [2204..2215]
 r885: [2212..2213]
 r886: [2208..2211]
 r887: [2208..2209]
 r888: [2206..2207]
 r889: [2202..2205]
 r890: [2202..2203]
 r891: [2184..2185]
 r892: [2182..2183]
 r893: [2178..2179]
 r894: [2176..2177]
 r895: [2170..2175]
 r896: [2162..2165]
 r897: [2164..2165]
 r898: [2162..2163]
 r899: [2160..2161]
 r900: [2158..2159]
 r901: [2154..2155]
 r902: [2152..2153]
 r903: [2146..2151]
 r904: [2138..2141]
 r905: [2140..2141]
 r906: [2138..2139]
 r907: [2136..2137]
 r908: [2134..2135]
 r909: [2130..2131]
 r910: [2120..2121]
 r911: [2116..2119]
 r912: [2116..2117]
 r913: [2114..2115]
 r914: [2112..2113]
 r915: [2088..2111]
 r916: [2108..2109]
 r917: [2104..2107]
 r918: [2104..2105]
 r919: [2102..2103]
 r920: [2100..2101]
 r921: [2088..2099]
 r922: [2096..2097]
 r923: [2092..2095]
 r924: [2092..2093]
 r925: [2090..2091]
 r926: [2086..2089]
 r927: [2086..2087]
 r928: [2068..2069]
 r929: [2066..2067]
 r930: [2062..2063]
 r931: [2060..2061]
 r932: [2054..2059]
 r933: [2046..2049]
 r934: [2048..2049]
 r935: [2046..2047]
 r936: [2044..2045]
 r937: [2042..2043]
 r938: [2038..2039]
 r939: [2036..2037]
 r940: [2030..2035]
 r941: [2022..2025]
 r942: [2024..2025]
 r943: [2022..2023]
 r944: [2020..2021]
 r945: [2018..2019]
 r946: [2014..2015]
 r947: [2006..2007]
 r948: [1530..1531]
 r949: [1526..1529]
 r950: [1526..1527]
 r951: [1524..1525]
 r952: [1522..1523]
 r953: [2000..2001]
 r954: [1996..1999]
 r955: [1996..1997]
 r956: [1994..1995]
 r957: [1992..1993]
 r958: [1986..1989]
 r959: [1982..1983]
 r960: [1980..1981]
 r961: [1974..1979]
 r962: [1976..1977]
 r963: [1974..1975]
 r964: [1970..1973]
 r965: [1970..1971]
 r966: [1968..1969]
 r967: [1966..1967]
 r968: [1950..1963]
 r969: [1960..1961]
 r970: [1956..1959]
 r971: [1956..1957]
 r972: [1954..1955]
 r973: [1952..1953]
 r974: [1950..1951]
 r975: [1946..1947]
 r976: [1944..1945]
 r977: [1938..1943]
 r978: [1940..1941]
 r979: [1938..1939]
 r980: [1934..1937]
 r981: [1934..1935]
 r982: [1932..1933]
 r983: [1930..1931]
 r984: [1924..1925]
 r985: [1922..1923]
 r986: [1916..1921]
 r987: [1918..1919]
 r988: [1916..1917]
 r989: [1912..1915]
 r990: [1912..1913]
 r991: [1910..1911]
 r992: [1908..1909]
 r993: [1902..1903]
 r994: [1900..1901]
 r995: [1894..1899]
 r996: [1896..1897]
 r997: [1894..1895]
 r998: [1890..1893]
 r999: [1890..1891]
 r1000: [1888..1889]
 r1001: [1886..1887]
 r1002: [1880..1881]
 r1003: [1878..1879]
 r1004: [1870..1873]
 r1005: [1870..1871]
 r1006: [1868..1869]
 r1007: [1860..1861]
 r1008: [1856..1859]
 r1009: [1856..1857]
 r1010: [1854..1855]
 r1011: [1852..1853]
 r1012: [1840..1849]
 r1013: [1848..1849]
 r1014: [1846..1847]
 r1015: [1844..1845]
 r1016: [1840..1841]
 r1017: [1836..1839]
 r1018: [1836..1837]
 r1019: [1830..1831]
 r1021: [1820..1825]
 r1022: [1822..1823]
 r1023: [1820..1821]
 r1024: [1814..1819]
 r1025: [1816..1817]
 r1026: [1814..1815]
 r1027: [1812..1813]
 r1028: [1808..1811]
 r1029: [1798..1801]
 r1030: [1798..1799]
 r1031: [1796..1797]
 r1032: [1792..1793]
 r1033: [1790..1791]
 r1034: [1778..1789]
 r1035: [1786..1787]
 r1036: [1782..1785]
 r1037: [1782..1783]
 r1038: [1780..1781]
 r1039: [1776..1779]
 r1040: [1776..1777]
 r1041: [1768..1773]
 r1042: [1770..1771]
 r1043: [1768..1769]
 r1044: [1766..1767]
 r1045: [1764..1765]
 r1046: [1752..1763]
 r1047: [1760..1761]
 r1048: [1756..1759]
 r1049: [1756..1757]
 r1050: [1754..1755]
 r1051: [1750..1753]
 r1052: [1750..1751]
 r1053: [1744..1745]
 r1054: [1740..1743]
 r1055: [1740..1741]
 r1056: [1738..1739]
 r1057: [1726..1737]
 r1058: [1734..1735]
 r1059: [1730..1733]
 r1060: [1730..1731]
 r1061: [1728..1729]
 r1062: [1724..1727]
 r1063: [1724..1725]
 r1064: [1720..1721]
 r1065: [1716..1719]
 r1066: [1716..1717]
 r1067: [1714..1715]
 r1068: [1712..1713]
 r1069: [1676..1709]
 r1070: [1708..1709]
 r1071: [1706..1707]
 r1072: [1704..1705]
 r1073: [1702..1703]
 r1074: [1680..1699]
 r1075: [1696..1697]
 r1076: [1692..1695]
 r1077: [1692..1693]
 r1078: [1690..1691]
 r1079: [1688..1689]
 r1080: [1684..1685]
 r1081: [1682..1683]
 r1082: [1680..1681]
 r1083: [1678..1679]
 r1084: [1676..1677]
 r1085: [1672..1673]
 r1086: [1670..1671]
 r1087: [1664..1669]
 r1088: [1666..1667]
 r1089: [1664..1665]
 r1090: [1660..1663]
 r1091: [1660..1661]
 r1092: [1658..1659]
 r1093: [1656..1657]
 r1094: [1650..1651]
 r1095: [1636..1649]
 r1096: [1646..1647]
 r1097: [1642..1645]
 r1098: [1642..1643]
 r1099: [1640..1641]
 r1100: [1638..1639]
 r1101: [1636..1637]
 r1102: [1620..1635]
 r1103: [1632..1633]
 r1104: [1628..1631]
 r1105: [1628..1629]
 r1106: [1626..1627]
 r1107: [1624..1625]
 r1108: [1622..1623]
 r1109: [1620..1621]
 r1110: [1558..1561]
 r1111: [1558..1559]
 r1112: [1556..1557]
 r1113: [1552..1553]
 r1114: [1548..1551]
 r1115: [1548..1549]
 r1116: [1546..1547]
 r1117: [1544..1545]
 r1118: [1600..1605]
 r1119: [1602..1603]
 r1120: [1600..1601]
 r1121: [1598..1599]
 r1122: [1588..1591]
 r1123: [1588..1589]
 r1124: [1586..1587]
 r1125: [1580..1581]
 r1126: [1578..1579]
 r1127: [1566..1577]
 r1128: [1574..1575]
 r1129: [1570..1573]
 r1130: [1570..1571]
 r1131: [1568..1569]
 r1132: [1564..1567]
 r1133: [1564..1565]
 r1134: [1504..1505]
 r1135: [1502..1503]
 r1136: [1496..1497]
 r1137: [1494..1495]
 r1138: [1488..1493]
 r1139: [1480..1483]
 r1140: [1482..1483]
 r1141: [1480..1481]
 r1142: [1478..1479]
 r1143: [1476..1477]
 r1144: [1472..1473]
 r1145: [1470..1471]
 r1146: [1468..1469]
 r1147: [1466..1467]
 r1148: [1464..1465]
 r1149: [1460..1461]
 r1150: [1458..1459]
 r1151: [1456..1457]
 r1152: [1450..1455]
 r1153: [1442..1445]
 r1154: [1444..1445]
 r1155: [1442..1443]
 r1156: [1440..1441]
 r1157: [1438..1439]
 r1158: [1434..1435]
 r1159: [1424..1425]
 r1160: [1422..1423]
 r1161: [1418..1419]
 r1162: [1416..1417]
 r1163: [1410..1415]
 r1164: [1402..1405]
 r1165: [1404..1405]
 r1166: [1402..1403]
 r1167: [1400..1401]
 r1168: [1398..1399]
 r1169: [1394..1395]
 r1170: [1392..1393]
 r1171: [1386..1391]
 r1172: [1378..1381]
 r1173: [1380..1381]
 r1174: [1378..1379]
 r1175: [1376..1377]
 r1176: [1374..1375]
 r1177: [1370..1371]
 r1178: [1364..1365]
 r1179: [1360..1363]
 r1180: [1360..1361]
 r1181: [1358..1359]
 r1182: [1356..1357]
 r1183: [1338..1339]
 r1184: [1336..1337]
 r1185: [1332..1333]
 r1186: [1330..1331]
 r1187: [1324..1329]
 r1188: [1316..1319]
 r1189: [1318..1319]
 r1190: [1316..1317]
 r1191: [1314..1315]
 r1192: [1312..1313]
 r1193: [1308..1309]
 r1194: [1306..1307]
 r1195: [1300..1305]
 r1196: [1292..1295]
 r1197: [1294..1295]
 r1198: [1292..1293]
 r1199: [1290..1291]
 r1200: [1288..1289]
 r1201: [1284..1285]
 r1202: [1278..1279]
 r1203: [1274..1277]
 r1204: [1274..1275]
 r1205: [1272..1273]
 r1206: [1270..1271]
 r1207: [1252..1253]
 r1208: [1250..1251]
 r1209: [1246..1247]
 r1210: [1244..1245]
 r1211: [1238..1243]
 r1212: [1230..1233]
 r1213: [1232..1233]
 r1214: [1230..1231]
 r1215: [1228..1229]
 r1216: [1226..1227]
 r1217: [1222..1223]
 r1218: [1220..1221]
 r1219: [1218..1219]
 r1220: [1216..1217]
 r1221: [1214..1215]
 r1222: [1210..1211]
 r1223: [1208..1209]
 r1224: [1206..1207]
 r1225: [1200..1205]
 r1226: [1192..1195]
 r1227: [1194..1195]
 r1228: [1192..1193]
 r1229: [1190..1191]
 r1230: [1188..1189]
 r1231: [1184..1185]
 r1232: [1182..1183]
 r1233: [1178..1179]
 r1234: [1170..1171]
 r1235: [1166..1169]
 r1236: [1166..1167]
 r1237: [1164..1165]
 r1238: [1162..1163]
 r1239: [1150..1161]
 r1240: [1158..1159]
 r1241: [1154..1157]
 r1242: [1154..1155]
 r1243: [1152..1153]
 r1244: [1148..1151]
 r1245: [1148..1149]
 r1246: [1128..1129]
 r1247: [1112..1113]
 r1248: [1116..1117]
 r1249: [1110..1111]
 r1250: [1108..1109]
 r1251: [1106..1107]
 r1252: [1102..1103]
 r1253: [1100..1101]
 r1254: [1094..1099]
 r1255: [1086..1089]
 r1256: [1088..1089]
 r1257: [1086..1087]
 r1258: [1084..1085]
 r1259: [1082..1083]
 r1260: [1078..1079]
 r1261: [1076..1077]
 r1262: [1074..1075]
 r1263: [1072..1073]
 r1264: [1070..1071]
 r1265: [1066..1067]
 r1266: [1064..1065]
 r1267: [1062..1063]
 r1268: [1056..1061]
 r1269: [1048..1051]
 r1270: [1050..1051]
 r1271: [1048..1049]
 r1272: [1046..1047]
 r1273: [1044..1045]
 r1274: [1040..1041]
 r1275: [1038..1039]
 r1276: [1034..1035]
 r1277: [1026..1027]
 r1278: [1022..1025]
 r1279: [1022..1023]
 r1280: [1020..1021]
 r1281: [1018..1019]
 r1282: [1006..1017]
 r1283: [1014..1015]
 r1284: [1010..1013]
 r1285: [1010..1011]
 r1286: [1008..1009]
 r1287: [1004..1007]
 r1288: [1004..1005]
 r1289: [984..985]
 r1290: [968..969]
 r1291: [972..973]
 r1292: [966..967]
 r1293: [964..965]
 r1294: [962..963]
 r1295: [958..959]
 r1296: [956..957]
 r1297: [948..949]
 r1298: [946..947]
 r1299: [944..945]
 r1300: [944..945]
 r1301: [942..943]
 r1302: [940..941]
 r1303: [932..933]
 r1304: [928..931]
 r1305: [928..929]
 r1306: [926..927]
 r1307: [924..925]
 r1308: [918..921]
 r1309: [566..567]
 r1310: [562..565]
 r1311: [562..563]
 r1312: [560..561]
 r1313: [558..559]
 r1314: [554..555]
 r1315: [550..553]
 r1316: [550..551]
 r1317: [548..549]
 r1318: [546..547]
 r1319: [914..915]
 r1320: [910..913]
 r1321: [910..911]
 r1322: [908..909]
 r1323: [906..907]
 r1324: [898..899]
 r1325: [894..897]
 r1326: [894..895]
 r1327: [892..893]
 r1328: [890..891]
 r1329: [872..887]
 r1330: [884..885]
 r1331: [880..883]
 r1332: [880..881]
 r1333: [878..879]
 r1334: [876..877]
 r1335: [872..873]
 r1336: [870..871]
 r1337: [864..865]
 r1338: [860..863]
 r1339: [860..861]
 r1340: [858..859]
 r1341: [856..857]
 r1342: [852..853]
 r1343: [850..851]
 r1344: [834..849]
 r1345: [846..847]
 r1346: [842..845]
 r1347: [842..843]
 r1348: [840..841]
 r1349: [838..839]
 r1350: [834..835]
 r1351: [832..833]
 r1352: [826..827]
 r1353: [822..825]
 r1354: [822..823]
 r1355: [820..821]
 r1356: [818..819]
 r1357: [800..815]
 r1358: [812..813]
 r1359: [808..811]
 r1360: [808..809]
 r1361: [806..807]
 r1362: [804..805]
 r1363: [800..801]
 r1364: [798..799]
 r1365: [790..791]
 r1366: [784..789]
 r1367: [786..787]
 r1368: [784..785]
 r1369: [780..783]
 r1370: [780..781]
 r1371: [778..779]
 r1372: [776..777]
 r1373: [728..773]
 r1374: [770..771]
 r1375: [766..769]
 r1376: [766..767]
 r1377: [764..765]
 r1378: [762..763]
 r1379: [736..759]
 r1380: [756..757]
 r1381: [752..755]
 r1382: [752..753]
 r1383: [750..751]
 r1384: [748..749]
 r1385: [744..745]
 r1386: [742..743]
 r1387: [740..741]
 r1388: [736..737]
 r1389: [732..735]
 r1390: [732..733]
 r1391: [730..731]
 r1392: [728..729]
 r1393: [726..727]
 r1394: [714..715]
 r1395: [702..713]
 r1396: [710..711]
 r1397: [706..709]
 r1398: [706..707]
 r1399: [704..705]
 r1400: [700..703]
 r1401: [700..701]
 r1402: [696..697]
 r1403: [692..695]
 r1404: [692..693]
 r1405: [690..691]
 r1406: [688..689]
 r1407: [670..685]
 r1408: [682..683]
 r1409: [678..681]
 r1410: [678..679]
 r1411: [676..677]
 r1412: [674..675]
 r1413: [670..671]
 r1414: [668..669]
 r1415: [660..661]
 r1416: [654..659]
 r1417: [656..657]
 r1418: [654..655]
 r1419: [650..653]
 r1420: [650..651]
 r1421: [648..649]
 r1422: [646..647]
 r1423: [598..643]
 r1424: [640..641]
 r1425: [636..639]
 r1426: [636..637]
 r1427: [634..635]
 r1428: [632..633]
 r1429: [606..629]
 r1430: [626..627]
 r1431: [622..625]
 r1432: [622..623]
 r1433: [620..621]
 r1434: [618..619]
 r1435: [614..615]
 r1436: [612..613]
 r1437: [610..611]
 r1438: [606..607]
 r1439: [602..605]
 r1440: [602..603]
 r1441: [600..601]
 r1442: [598..599]
 r1443: [596..597]
 r1444: [584..585]
 r1445: [572..583]
 r1446: [580..581]
 r1447: [576..579]
 r1448: [576..577]
 r1449: [574..575]
 r1450: [570..573]
 r1451: [570..571]
 r1452: [542..543]
 r1453: [538..541]
 r1454: [538..539]
 r1455: [536..537]
 r1456: [534..535]
 r1457: [526..527]
 r1458: [520..525]
 r1459: [522..523]
 r1460: [520..521]
 r1461: [516..519]
 r1462: [516..517]
 r1463: [514..515]
 r1464: [502..513]
 r1465: [510..511]
 r1466: [506..509]
 r1467: [506..507]
 r1468: [504..505]
 r1469: [498..503]
 r1470: [498..499]
 r1471: [494..495]
 r1472: [488..493]
 r1473: [490..491]
 r1474: [488..489]
 r1475: [484..487]
 r1476: [484..485]
 r1477: [482..483]
 r1478: [470..481]
 r1479: [478..479]
 r1480: [474..477]
 r1481: [474..475]
 r1482: [472..473]
 r1483: [466..471]
 r1484: [466..467]
 r1485: [462..463]
 r1486: [456..461]
 r1487: [458..459]
 r1488: [456..457]
 r1489: [452..455]
 r1490: [452..453]
 r1491: [450..451]
 r1492: [448..449]
 r1493: [446..447]
 r1494: [444..445]
 r1495: [414..443]
 r1496: [440..441]
 r1497: [434..439]
 r1498: [436..437]
 r1499: [434..435]
 r1500: [430..433]
 r1501: [430..431]
 r1502: [428..429]
 r1503: [426..427]
 r1504: [414..425]
 r1505: [422..423]
 r1506: [418..421]
 r1507: [418..419]
 r1508: [416..417]
 r1509: [412..415]
 r1510: [412..413]
 r1511: [408..409]
 r1512: [402..407]
 r1513: [404..405]
 r1514: [402..403]
 r1515: [398..401]
 r1516: [398..399]
 r1517: [396..397]
 r1518: [394..395]
 r1519: [364..393]
 r1520: [390..391]
 r1521: [384..389]
 r1522: [386..387]
 r1523: [384..385]
 r1524: [380..383]
 r1525: [380..381]
 r1526: [378..379]
 r1527: [376..377]
 r1528: [364..375]
 r1529: [372..373]
 r1530: [368..371]
 r1531: [368..369]
 r1532: [366..367]
 r1533: [362..365]
 r1534: [362..363]
 r1535: [358..359]
 r1536: [354..357]
 r1537: [354..355]
 r1538: [352..353]
 r1539: [350..351]
 r1540: [324..347]
 r1541: [344..345]
 r1542: [340..343]
 r1543: [340..341]
 r1544: [338..339]
 r1545: [336..337]
 r1546: [332..333]
 r1547: [330..331]
 r1548: [328..329]
 r1549: [324..325]
 r1550: [310..323]
 r1551: [310..321]
 r1552: [318..319]
 r1553: [314..317]
 r1554: [314..315]
 r1555: [312..313]
 r1556: [308..311]
 r1557: [308..309]
 r1558: [286..287]
 r1559: [284..285]
 r1560: [278..283]
 r1561: [272..273]
 r1562: [266..267]
 r1563: [264..265]
 r1564: [262..263]
 r1565: [260..261]
 r1566: [244..245]
 r1567: [232..233]
 r1568: [230..231]
 r1569: [224..225]
 r1570: [220..223]
 r1571: [220..221]
 r1572: [218..219]
 r1573: [206..217]
 r1574: [214..215]
 r1575: [210..213]
 r1576: [210..211]
 r1577: [208..209]
 r1578: [202..207]
 r1579: [202..203]
 r1580: [160..161]
 r1581: [190..191]
 r1582: [188..189]
 r1583: [182..187]
 r1584: [184..185]
 r1585: [182..183]
 r1586: [178..181]
 r1587: [178..179]
 r1588: [176..177]
 r1589: [174..175]
 r1590: [164..165]
 r1591: [162..163]
 r1592: [146..147]
 r1593: [8..9]
 r1594: [144..145]
 r1595: [142..143]
 r1596: [136..141]
 r1597: [128..131]
 r1598: [130..131]
 r1599: [128..129]
 r1600: [126..127]
 r1601: [124..125]
 r1602: [120..121]
 r1603: [118..119]
 r1604: [112..117]
 r1605: [104..107]
 r1606: [106..107]
 r1607: [104..105]
 r1608: [102..103]
 r1609: [100..101]
 r1610: [96..97]
 r1611: [84..85]
 r1612: [82..83]
 r1613: [78..79]
 r1614: [76..77]
 r1615: [70..75]
 r1616: [62..65]
 r1617: [64..65]
 r1618: [62..63]
 r1619: [60..61]
 r1620: [58..59]
 r1621: [54..55]
 r1622: [52..53]
 r1623: [46..51]
 r1624: [38..41]
 r1625: [40..41]
 r1626: [38..39]
 r1627: [36..37]
 r1628: [34..35]
 r1629: [30..31]
 r1630: [18..19]
 r1631: [16..17]
 r1632: [12..13]
 r1633: [10..11]
 r1634: [3636..3645]
 r1635: [3564..3575]
 r1636: [1866..1875]
 r1637: [1794..1805]
 r1638: [1544..1563]
 r1639: [1584..1595]
 r1640: [4588..4589]
 r1641: [4582..4587]
 r1642: [4580..4581]
 r1643: [4578..4579]
 r1647: [4568..4569]
 r1649: [4560..4561]
 r1650: [4554..4559]
 r1651: [4552..4553]
 r1652: [4550..4551]
 r1656: [4540..4541]
 r1658: [4436..4437]
 r1659: [4372..4437]
 r1660: [4372..4373]
 r1661: [4376..4377]
 r1662: [4146..4147]
 r1663: [4370..4371]
 r1664: [4156..4371]
 r1665: [4156..4157]
 r1666: [4160..4161]
 r1667: [4004..4141]
 r1668: [4004..4005]
 r1669: [4052..4053]
 r1670: [4008..4009]
 r1671: [3856..3857]
 r1672: [4002..4003]
 r1673: [3866..4003]
 r1674: [3866..3867]
 r1675: [3870..3871]
 r1676: [3796..3797]
 r1677: [3776..3797]
 r1678: [3776..3777]
 r1679: [3780..3781]
 r1680: [3330..3331]
 r1681: [3774..3775]
 r1682: [3340..3775]
 r1683: [3340..3341]
 r1684: [3344..3345]
 r1685: [950..951]
 r1686: [2340..2341]
 r1687: [2274..2341]
 r1688: [2274..2275]
 r1689: [2278..2279]
 r1690: [2244..2245]
 r1691: [2194..2245]
 r1692: [2194..2195]
 r1693: [2198..2199]
 r1694: [2124..2125]
 r1695: [2078..2125]
 r1696: [2078..2079]
 r1697: [2082..2083]
 r1698: [1534..1535]
 r1699: [1514..1535]
 r1700: [1514..1515]
 r1701: [1518..1519]
 r1702: [2004..2005]
 r1703: [1536..2005]
 r1704: [1536..1537]
 r1705: [1540..1541]
 r1706: [1368..1369]
 r1707: [1348..1369]
 r1708: [1348..1349]
 r1709: [1352..1353]
 r1710: [1282..1283]
 r1711: [1262..1283]
 r1712: [1262..1263]
 r1713: [1266..1267]
 r1714: [1174..1175]
 r1715: [1140..1175]
 r1716: [1140..1141]
 r1717: [1144..1145]
 r1718: [1030..1031]
 r1719: [996..1031]
 r1720: [996..997]
 r1721: [1000..1001]
 r1722: [936..937]
 r1723: [300..937]
 r1724: [300..301]
 r1725: [304..305]
 r1726: [796..797]
 r1727: [724..725]
 r1728: [720..721]
 r1729: [666..667]
 r1730: [594..595]
 r1731: [590..591]
 r1732: [228..229]
 r1733: [194..229]
 r1734: [194..195]
 r1735: [198..199]
 r1736: [156..157]
 r1737: [192..193]
 r1738: [166..193]
 r1739: [166..167]
 r1740: [170..171]
 r1741: [4..5]
 r1742: [4594..4595]
 r1743: [4590..4591]
 r1744: [4588..4589]
 r1745: [4586..4587]
 r1746: [4582..4583]
 r1747: [4580..4581]
 r1748: [4574..4575]
 r1749: [4570..4571]
 r1750: [4566..4567]
 r1751: [4562..4563]
 r1752: [4560..4561]
 r1753: [4558..4559]
 r1754: [4554..4555]
 r1755: [4552..4553]
 r1756: [4546..4547]
 r1757: [4542..4543]
 r1758: [4538..4539]
 r1759: [4536..4537]
 r1760: [4530..4531]
 r1761: [4528..4529]
 r1762: [4522..4523]
 r1763: [4526..4527]
 r1764: [4520..4521]
 r1765: [4516..4517]
 r1766: [4508..4509]
 r1767: [4524..4525]
 r1768: [4504..4505]
 r1769: [4504..4505]
 r1770: [4502..4503] [4498..4499]
 r1771: [4498..4503]
 r1772: [4500..4503]
 r1773: [4492..4493] [4488..4489] [4484..4485]
 r1774: [4490..4491]
 r1775: [4486..4487]
 r1776: [4480..4481]
 r1777: [4478..4479]
 r1778: [4476..4477]
 r1779: [4476..4477]
 r1780: [4476..4477]
 r1781: [4472..4473]
 r1782: [4472..4473]
 r1783: [4470..4471] [4466..4467]
 r1784: [4466..4471]
 r1785: [4468..4471]
 r1786: [4464..4465]
 r1787: [4462..4463]
 r1788: [4460..4461]
 r1789: [4454..4455] [4450..4451] [4446..4447]
 r1790: [4452..4453]
 r1791: [4448..4449]
 r1792: [4442..4443]
 r1793: [4440..4441]
 r1794: [4438..4439]
 r1795: [4438..4439]
 r1796: [4438..4439]
 r1797: [4374..4375]
 r1798: [4378..4379]
 r1799: [4434..4435]
 r1800: [4430..4431]
 r1801: [4422..4425]
 r1802: [4422..4423]
 r1803: [4420..4421]
 r1804: [4416..4417]
 r1805: [4410..4411]
 r1806: [4406..4409]
 r1807: [4406..4407]
 r1808: [4404..4405]
 r1809: [4400..4401]
 r1810: [4394..4395]
 r1811: [4390..4391]
 r1812: [4382..4385]
 r1813: [4382..4383]
 r1814: [4380..4381]
 r1815: [4148..4149]
 r1816: [4158..4159]
 r1817: [4162..4163]
 r1818: [4364..4365]
 r1819: [4358..4359]
 r1820: [4350..4353]
 r1821: [4350..4351]
 r1822: [4344..4345]
 r1823: [4338..4339]
 r1824: [4330..4333]
 r1825: [4330..4331]
 r1826: [4322..4323]
 r1827: [4316..4317]
 r1828: [4308..4311]
 r1829: [4308..4309]
 r1830: [4306..4307]
 r1831: [4304..4305]
 r1832: [4298..4299]
 r1833: [4288..4289]
 r1834: [4282..4283]
 r1835: [4274..4277]
 r1836: [4274..4275]
 r1837: [4268..4269]
 r1838: [4262..4263]
 r1839: [4254..4257]
 r1840: [4254..4255]
 r1841: [4246..4247]
 r1842: [4242..4243]
 r1843: [4236..4237]
 r1844: [4234..4235]
 r1845: [4230..4231]
 r1846: [4222..4223]
 r1847: [4220..4221]
 r1848: [4216..4217]
 r1849: [4210..4211]
 r1850: [4204..4205]
 r1851: [4198..4199]
 r1852: [4192..4193]
 r1853: [4188..4191]
 r1854: [4188..4189]
 r1855: [4186..4187]
 r1856: [4182..4183]
 r1857: [4176..4177]
 r1858: [4172..4173]
 r1859: [4166..4167]
 r1860: [4164..4165]
 r1861: [4144..4145]
 r1862: [4142..4143]
 r1863: [4006..4007]
 r1864: [4140..4141]
 r1865: [4134..4137]
 r1866: [4134..4135]
 r1867: [4132..4133]
 r1868: [4114..4115]
 r1869: [4122..4131]
 r1870: [4128..4129]
 r1871: [4130..4131]
 r1872: [4126..4127]
 r1873: [4118..4123]
 r1874: [4116..4119]
 r1875: [4098..4099]
 r1876: [4096..4113]
 r1877: [4110..4111]
 r1878: [4112..4113]
 r1879: [4108..4109]
 r1880: [4102..4105]
 r1881: [4100..4103]
 r1882: [4094..4097]
 r1883: [4092..4093]
 r1884: [4090..4091]
 r1885: [4088..4089]
 r1886: [4084..4085]
 r1887: [4082..4083]
 r1890: [4078..4079]
 r1891: [4080..4081]
 r1892: [4076..4077]
 r1895: [4072..4073]
 r1896: [4074..4075]
 r1897: [4070..4071]
 r1898: [4066..4067]
 r1899: [4058..4061]
 r1900: [4058..4059]
 r1901: [4054..4055]
 r1902: [4010..4011]
 r1903: [4042..4045]
 r1904: [4042..4043]
 r1905: [4034..4035]
 r1906: [4028..4029]
 r1907: [4022..4023]
 r1908: [4018..4021]
 r1909: [4018..4019]
 r1910: [3858..3859]
 r1911: [3868..3869]
 r1912: [3872..3873]
 r1913: [3994..3995]
 r1914: [3988..3989]
 r1915: [3982..3983]
 r1916: [3976..3977]
 r1917: [3970..3971]
 r1918: [3964..3965]
 r1919: [3954..3955]
 r1920: [3948..3949]
 r1921: [3942..3943]
 r1922: [3940..3941]
 r1923: [3932..3933]
 r1924: [3926..3927]
 r1925: [3918..3921]
 r1926: [3918..3919]
 r1927: [3912..3913]
 r1928: [3906..3907]
 r1929: [3898..3901]
 r1930: [3898..3899]
 r1931: [3888..3889]
 r1932: [3882..3883]
 r1933: [3876..3877]
 r1934: [3874..3875]
 r1935: [3798..3799]
 r1936: [3778..3779]
 r1937: [3782..3783]
 r1938: [3794..3795]
 r1939: [3790..3791]
 r1940: [3784..3785]
 r1941: [3784..3785]
 r1942: [3332..3333]
 r1943: [3342..3343]
 r1944: [3346..3347]
 r1945: [3772..3773]
 r1946: [3768..3769]
 r1947: [3760..3763]
 r1948: [3760..3761]
 r1949: [3758..3759]
 r1950: [3754..3755]
 r1951: [3748..3749]
 r1952: [3742..3743]
 r1953: [3734..3737]
 r1954: [3734..3735]
 r1955: [3732..3733]
 r1956: [3728..3729]
 r1957: [3722..3723]
 r1958: [3718..3719]
 r1959: [3712..3713]
 r1960: [3706..3707]
 r1961: [3698..3701]
 r1962: [3698..3699]
 r1963: [3696..3697]
 r1964: [3690..3691]
 r1965: [3684..3685]
 r1966: [3676..3679]
 r1967: [3676..3677]
 r1968: [3674..3675]
 r1969: [3668..3669]
 r1970: [3662..3663]
 r1971: [3656..3657]
 r1972: [3654..3655]
 r1973: [3652..3653]
 r1974: [3652..3653]
 r1975: [3646..3647]
 r1976: [3648..3649]
 r1977: [3644..3645]
 r1978: [3642..3643]
 r1979: [3634..3635]
 r1980: [3632..3633]
 r1981: [3628..3629]
 r1982: [3620..3623]
 r1983: [3620..3621]
 r1984: [3612..3615]
 r1985: [3612..3613]
 r1986: [3608..3609]
 r1987: [3604..3605]
 r1988: [3602..3603]
 r1989: [3602..3603]
 r1990: [3596..3597]
 r1991: [3596..3597]
 r1992: [3594..3595]
 r1993: [3594..3595]
 r1994: [3588..3589]
 r1995: [3588..3589]
 r1996: [3576..3577]
 r1997: [3572..3573]
 r1998: [3574..3575]
 r1999: [3570..3571]
 r2000: [3564..3565]
 r2001: [3562..3563]
 r2002: [3558..3559]
 r2003: [3554..3555]
 r2004: [3546..3547]
 r2005: [3544..3545]
 r2006: [3540..3541]
 r2007: [3532..3535]
 r2008: [3532..3533]
 r2009: [3530..3531]
 r2010: [3522..3525]
 r2011: [3522..3523]
 r2012: [3520..3521]
 r2013: [3516..3517]
 r2014: [3508..3511]
 r2015: [3508..3509]
 r2016: [3506..3507]
 r2017: [3496..3497]
 r2018: [3494..3495]
 r2019: [3492..3493]
 r2020: [3488..3489]
 r2021: [3482..3483]
 r2022: [3474..3475]
 r2023: [3476..3477]
 r2024: [3472..3473]
 r2025: [3472..3473]
 r2026: [3470..3471]
 r2027: [3446..3447]
 r2028: [3440..3441]
 r2029: [3434..3435]
 r2030: [3434..3435]
 r2031: [3464..3465]
 r2032: [3458..3459]
 r2033: [3452..3453]
 r2034: [3452..3453]
 r2035: [3432..3433]
 r2036: [3432..3433]
 r2037: [3426..3427]
 r2038: [3420..3421]
 r2039: [3414..3415]
 r2040: [3414..3415]
 r2041: [3412..3413]
 r2042: [3410..3411]
 r2043: [3404..3405]
 r2044: [3398..3399]
 r2045: [3392..3393]
 r2046: [3392..3393]
 r2047: [3384..3385]
 r2048: [3378..3379]
 r2049: [3372..3373]
 r2050: [3370..3371]
 r2051: [3368..3369]
 r2052: [3366..3367]
 r2053: [3360..3361]
 r2054: [3354..3355]
 r2055: [3348..3349]
 r2056: [3348..3349]
 r2057: [952..953]
 r2058: [3324..3325] [3320..3321] [3316..3317]
 r2059: [3322..3323]
 r2060: [3318..3319]
 r2061: [3306..3307]
 r2062: [3300..3301] [3296..3297] [3292..3293]
 r2063: [3298..3299]
 r2064: [3294..3295]
 r2065: [3282..3283]
 r2066: [3278..3279]
 r2067: [3278..3279]
 r2068: [3276..3277]
 r2069: [3276..3277]
 r2070: [3274..3275] [3270..3271]
 r2071: [3270..3275]
 r2072: [3272..3275]
 r2073: [3264..3265]
 r2074: [3262..3263]
 r2075: [3260..3261]
 r2076: [3258..3259]
 r2077: [3258..3259]
 r2078: [3258..3259]
 r2079: [3258..3259]
 r2080: [3252..3253] [3248..3249] [3244..3245]
 r2081: [3250..3251]
 r2082: [3246..3247]
 r2083: [3234..3235]
 r2084: [3228..3229] [3224..3225] [3220..3221]
 r2085: [3226..3227]
 r2086: [3222..3223]
 r2087: [3210..3211]
 r2088: [3206..3207]
 r2089: [3206..3207]
 r2090: [3204..3205]
 r2091: [3204..3205]
 r2092: [3202..3203] [3198..3199]
 r2093: [3198..3203]
 r2094: [3200..3203]
 r2095: [3192..3193]
 r2096: [3190..3191]
 r2097: [3188..3189]
 r2098: [3186..3187]
 r2099: [3186..3187]
 r2100: [3186..3187]
 r2101: [3186..3187]
 r2102: [3180..3181] [3176..3177] [3172..3173]
 r2103: [3178..3179]
 r2104: [3174..3175]
 r2105: [3162..3163]
 r2106: [3156..3157] [3152..3153] [3148..3149]
 r2107: [3154..3155]
 r2108: [3150..3151]
 r2109: [3138..3139]
 r2110: [3134..3135]
 r2111: [3134..3135]
 r2112: [3132..3133]
 r2113: [3132..3133]
 r2114: [3130..3131] [3126..3127]
 r2115: [3126..3131]
 r2116: [3128..3131]
 r2117: [3120..3121]
 r2118: [3120..3121]
 r2119: [3120..3121]
 r2120: [3120..3121]
 r2121: [3114..3115] [3110..3111] [3106..3107]
 r2122: [3112..3113]
 r2123: [3108..3109]
 r2124: [3096..3097]
 r2125: [3090..3091] [3086..3087] [3082..3083]
 r2126: [3088..3089]
 r2127: [3084..3085]
 r2128: [3072..3073]
 r2129: [3068..3069]
 r2130: [3068..3069]
 r2131: [3066..3067]
 r2132: [3066..3067]
 r2133: [3064..3065]
 r2134: [3064..3065]
 r2135: [3062..3063] [3058..3059]
 r2136: [3058..3063]
 r2137: [3060..3063]
 r2138: [3052..3053]
 r2139: [3052..3053]
 r2140: [3052..3053]
 r2141: [3052..3053]
 r2142: [3046..3047] [3042..3043] [3038..3039]
 r2143: [3044..3045]
 r2144: [3040..3041]
 r2145: [3028..3029]
 r2146: [3022..3023] [3018..3019] [3014..3015]
 r2147: [3020..3021]
 r2148: [3016..3017]
 r2149: [3004..3005]
 r2150: [3000..3001]
 r2151: [3000..3001]
 r2152: [2998..2999]
 r2153: [2998..2999]
 r2154: [2996..2997]
 r2155: [2996..2997]
 r2156: [2994..2995]
 r2157: [2994..2995]
 r2158: [2992..2993]
 r2159: [2992..2993]
 r2160: [2990..2991]
 r2161: [2990..2991]
 r2162: [2990..2991]
 r2163: [2988..2989]
 r2164: [2988..2989]
 r2165: [2988..2989]
 r2166: [2986..2987] [2982..2983]
 r2167: [2982..2987]
 r2168: [2984..2987]
 r2169: [2976..2977]
 r2170: [2976..2977]
 r2171: [2976..2977]
 r2172: [2976..2977]
 r2173: [2970..2971] [2966..2967] [2962..2963]
 r2174: [2968..2969]
 r2175: [2964..2965]
 r2176: [2952..2953]
 r2177: [2946..2947] [2942..2943] [2938..2939]
 r2178: [2944..2945]
 r2179: [2940..2941]
 r2180: [2928..2929]
 r2181: [2924..2925]
 r2182: [2924..2925]
 r2183: [2922..2923]
 r2184: [2922..2923]
 r2185: [2920..2921]
 r2186: [2920..2921]
 r2187: [2918..2919]
 r2188: [2918..2919]
 r2189: [2916..2917] [2912..2913]
 r2190: [2912..2917]
 r2191: [2914..2917]
 r2192: [2906..2907]
 r2193: [2906..2907]
 r2194: [2906..2907]
 r2195: [2906..2907]
 r2196: [2900..2901] [2896..2897] [2892..2893]
 r2197: [2898..2899]
 r2198: [2894..2895]
 r2199: [2882..2883]
 r2200: [2876..2877] [2872..2873] [2868..2869]
 r2201: [2874..2875]
 r2202: [2870..2871]
 r2203: [2858..2859]
 r2204: [2854..2855]
 r2205: [2854..2855]
 r2206: [2852..2853]
 r2207: [2852..2853]
 r2208: [2850..2851]
 r2209: [2850..2851]
 r2210: [2850..2851]
 r2211: [2848..2849] [2844..2845]
 r2212: [2844..2849]
 r2213: [2846..2849]
 r2214: [2838..2839]
 r2215: [2838..2839]
 r2216: [2838..2839]
 r2217: [2838..2839]
 r2218: [2832..2833] [2828..2829] [2824..2825]
 r2219: [2830..2831]
 r2220: [2826..2827]
 r2221: [2814..2815]
 r2222: [2808..2809] [2804..2805] [2800..2801]
 r2223: [2806..2807]
 r2224: [2802..2803]
 r2225: [2790..2791]
 r2226: [2786..2787]
 r2227: [2786..2787]
 r2228: [2784..2785]
 r2229: [2784..2785]
 r2230: [2782..2783]
 r2231: [2782..2783]
 r2232: [2780..2781]
 r2233: [2780..2781]
 r2234: [2778..2779] [2774..2775]
 r2235: [2774..2779]
 r2236: [2776..2779]
 r2237: [2768..2769]
 r2238: [2768..2769]
 r2239: [2768..2769]
 r2240: [2768..2769]
 r2241: [2760..2761] [2756..2757] [2752..2753]
 r2242: [2758..2759]
 r2243: [2754..2755]
 r2244: [2742..2743]
 r2245: [2736..2737] [2732..2733] [2728..2729]
 r2246: [2734..2735]
 r2247: [2730..2731]
 r2248: [2718..2719]
 r2249: [2712..2713] [2708..2709] [2704..2705]
 r2250: [2710..2711]
 r2251: [2706..2707]
 r2252: [2694..2695]
 r2253: [2690..2691]
 r2254: [2690..2691]
 r2255: [2686..2687] [2682..2683] [2678..2679]
 r2256: [2684..2685]
 r2257: [2680..2681]
 r2258: [2668..2669]
 r2259: [2664..2665]
 r2260: [2664..2665]
 r2261: [2662..2663]
 r2262: [2662..2663]
 r2263: [2660..2661] [2656..2657]
 r2264: [2656..2661]
 r2265: [2658..2661]
 r2266: [2648..2649]
 r2267: [2648..2649]
 r2268: [2648..2649]
 r2269: [2648..2649]
 r2270: [2646..2647] [2642..2643]
 r2271: [2642..2647]
 r2272: [2644..2647]
 r2273: [2634..2635]
 r2274: [2634..2635]
 r2275: [2634..2635]
 r2276: [2634..2635]
 r2277: [2628..2629] [2624..2625] [2620..2621]
 r2278: [2626..2627]
 r2279: [2622..2623]
 r2280: [2610..2611]
 r2281: [2604..2605] [2600..2601] [2596..2597]
 r2282: [2602..2603]
 r2283: [2598..2599]
 r2284: [2586..2587]
 r2285: [2582..2583]
 r2286: [2582..2583]
 r2287: [2580..2581]
 r2288: [2580..2581]
 r2289: [2578..2579] [2574..2575]
 r2290: [2574..2579]
 r2291: [2576..2579]
 r2292: [2568..2569]
 r2293: [2568..2569]
 r2294: [2568..2569]
 r2295: [2568..2569]
 r2296: [2562..2563] [2558..2559] [2554..2555]
 r2297: [2560..2561]
 r2298: [2556..2557]
 r2299: [2544..2545]
 r2300: [2538..2539] [2534..2535] [2530..2531]
 r2301: [2536..2537]
 r2302: [2532..2533]
 r2303: [2520..2521]
 r2304: [2516..2517]
 r2305: [2516..2517]
 r2306: [2514..2515]
 r2307: [2514..2515]
 r2308: [2512..2513]
 r2309: [2512..2513]
 r2310: [2510..2511] [2506..2507]
 r2311: [2506..2511]
 r2312: [2508..2511]
 r2313: [2500..2501]
 r2314: [2500..2501]
 r2315: [2500..2501]
 r2316: [2500..2501]
 r2317: [2494..2495] [2490..2491] [2486..2487]
 r2318: [2492..2493]
 r2319: [2488..2489]
 r2320: [2476..2477]
 r2321: [2470..2471] [2466..2467] [2462..2463]
 r2322: [2468..2469]
 r2323: [2464..2465]
 r2324: [2452..2453]
 r2325: [2448..2449]
 r2326: [2448..2449]
 r2327: [2446..2447]
 r2328: [2446..2447]
 r2329: [2444..2445] [2440..2441]
 r2330: [2440..2445]
 r2331: [2442..2445]
 r2332: [2434..2435]
 r2333: [2434..2435]
 r2334: [2434..2435]
 r2335: [2434..2435]
 r2336: [2428..2429] [2424..2425] [2420..2421]
 r2337: [2426..2427]
 r2338: [2422..2423]
 r2339: [2410..2411]
 r2340: [2404..2405] [2400..2401] [2396..2397]
 r2341: [2402..2403]
 r2342: [2398..2399]
 r2343: [2386..2387]
 r2344: [2382..2383]
 r2345: [2382..2383]
 r2346: [2380..2381]
 r2347: [2380..2381]
 r2348: [2378..2379] [2374..2375]
 r2349: [2374..2379]
 r2350: [2376..2379]
 r2351: [2368..2369]
 r2352: [2368..2369]
 r2353: [2368..2369]
 r2354: [2368..2369]
 r2355: [2362..2363] [2358..2359] [2354..2355]
 r2356: [2360..2361]
 r2357: [2356..2357]
 r2358: [2344..2345]
 r2359: [2276..2277]
 r2360: [2280..2281]
 r2361: [2334..2335]
 r2362: [2328..2329]
 r2363: [2322..2323]
 r2364: [2320..2321]
 r2365: [2314..2315]
 r2366: [2308..2309]
 r2367: [2302..2303]
 r2368: [2294..2295]
 r2369: [2288..2289]
 r2370: [2282..2283]
 r2371: [2282..2283]
 r2372: [2270..2271] [2266..2267] [2262..2263]
 r2373: [2268..2269]
 r2374: [2264..2265]
 r2375: [2252..2253]
 r2376: [2248..2249]
 r2377: [2248..2249]
 r2378: [2246..2247]
 r2379: [2246..2247]
 r2380: [2196..2197]
 r2381: [2200..2201]
 r2382: [2242..2243]
 r2383: [2238..2239]
 r2384: [2232..2233]
 r2385: [2230..2231]
 r2386: [2226..2227]
 r2387: [2220..2221]
 r2388: [2218..2219]
 r2389: [2214..2215]
 r2390: [2210..2211]
 r2391: [2202..2203]
 r2392: [2192..2193]
 r2393: [2192..2193]
 r2394: [2190..2191] [2186..2187]
 r2395: [2186..2191]
 r2396: [2188..2191]
 r2397: [2180..2181]
 r2398: [2180..2181]
 r2399: [2180..2181]
 r2400: [2180..2181]
 r2401: [2174..2175] [2170..2171] [2166..2167]
 r2402: [2172..2173]
 r2403: [2168..2169]
 r2404: [2156..2157]
 r2405: [2150..2151] [2146..2147] [2142..2143]
 r2406: [2148..2149]
 r2407: [2144..2145]
 r2408: [2132..2133]
 r2409: [2128..2129]
 r2410: [2128..2129]
 r2411: [2126..2127]
 r2412: [2126..2127]
 r2413: [2080..2081]
 r2414: [2084..2085]
 r2415: [2122..2123]
 r2416: [2118..2119]
 r2417: [2112..2113]
 r2418: [2110..2111]
 r2419: [2106..2107]
 r2420: [2100..2101]
 r2421: [2098..2099]
 r2422: [2094..2095]
 r2423: [2086..2087]
 r2424: [2076..2077]
 r2425: [2076..2077]
 r2426: [2074..2075] [2070..2071]
 r2427: [2070..2075]
 r2428: [2072..2075]
 r2429: [2064..2065]
 r2430: [2064..2065]
 r2431: [2064..2065]
 r2432: [2064..2065]
 r2433: [2058..2059] [2054..2055] [2050..2051]
 r2434: [2056..2057]
 r2435: [2052..2053]
 r2436: [2040..2041]
 r2437: [2034..2035] [2030..2031] [2026..2027]
 r2438: [2032..2033]
 r2439: [2028..2029]
 r2440: [2016..2017]
 r2441: [2012..2013]
 r2442: [2010..2011]
 r2443: [2008..2009]
 r2444: [1516..1517]
 r2445: [1520..1521]
 r2446: [1532..1533]
 r2447: [1528..1529]
 r2448: [1522..1523]
 r2449: [1522..1523]
 r2450: [1538..1539]
 r2451: [1542..1543]
 r2452: [2002..2003]
 r2453: [1998..1999]
 r2454: [1990..1993]
 r2455: [1990..1991]
 r2456: [1988..1989]
 r2457: [1984..1985]
 r2458: [1978..1979]
 r2459: [1972..1973]
 r2460: [1964..1967]
 r2461: [1964..1965]
 r2462: [1962..1963]
 r2463: [1958..1959]
 r2464: [1952..1953]
 r2465: [1948..1949]
 r2466: [1942..1943]
 r2467: [1936..1937]
 r2468: [1928..1931]
 r2469: [1928..1929]
 r2470: [1926..1927]
 r2471: [1920..1921]
 r2472: [1914..1915]
 r2473: [1906..1909]
 r2474: [1906..1907]
 r2475: [1904..1905]
 r2476: [1898..1899]
 r2477: [1892..1893]
 r2478: [1886..1887]
 r2479: [1884..1885]
 r2480: [1882..1883]
 r2481: [1882..1883]
 r2482: [1876..1877]
 r2483: [1878..1879]
 r2484: [1874..1875]
 r2485: [1872..1873]
 r2486: [1864..1865]
 r2487: [1862..1863]
 r2488: [1858..1859]
 r2489: [1850..1853]
 r2490: [1850..1851]
 r2491: [1842..1845]
 r2492: [1842..1843]
 r2493: [1838..1839]
 r2494: [1834..1835]
 r2495: [1832..1833]
 r2496: [1832..1833]
 r2497: [1826..1827]
 r2498: [1826..1827]
 r2499: [1824..1825]
 r2500: [1824..1825]
 r2501: [1818..1819]
 r2502: [1818..1819]
 r2503: [1806..1807]
 r2504: [1802..1803]
 r2505: [1804..1805]
 r2506: [1800..1801]
 r2507: [1794..1795]
 r2508: [1792..1793]
 r2509: [1788..1789]
 r2510: [1784..1785]
 r2511: [1776..1777]
 r2512: [1774..1775]
 r2513: [1774..1775]
 r2514: [1772..1773]
 r2515: [1772..1773]
 r2516: [1766..1767]
 r2517: [1762..1763]
 r2518: [1758..1759]
 r2519: [1750..1751]
 r2520: [1748..1749]
 r2521: [1746..1747]
 r2522: [1742..1743]
 r2523: [1736..1737]
 r2524: [1732..1733]
 r2525: [1726..1727]
 r2526: [1724..1725]
 r2527: [1722..1723]
 r2528: [1718..1719]
 r2529: [1710..1713]
 r2530: [1710..1711]
 r2531: [1708..1709]
 r2532: [1700..1703]
 r2533: [1700..1701]
 r2534: [1698..1699]
 r2535: [1694..1695]
 r2536: [1686..1689]
 r2537: [1686..1687]
 r2538: [1684..1685]
 r2539: [1674..1675]
 r2540: [1668..1669]
 r2541: [1662..1663]
 r2542: [1656..1657]
 r2543: [1654..1655]
 r2544: [1652..1653]
 r2545: [1648..1649]
 r2546: [1644..1645]
 r2547: [1638..1639]
 r2548: [1634..1635]
 r2549: [1630..1631]
 r2550: [1624..1625]
 r2551: [1618..1619]
 r2552: [1616..1617]
 r2553: [1610..1611]
 r2554: [1612..1613]
 r2555: [1614..1615]
 r2556: [1608..1609]
 r2558: [1562..1563]
 r2559: [1560..1561]
 r2560: [1554..1555]
 r2561: [1550..1551]
 r2562: [1544..1545]
 r2563: [1606..1607]
 r2564: [1606..1607]
 r2565: [1604..1605]
 r2566: [1596..1597]
 r2567: [1598..1599]
 r2569: [1592..1593]
 r2570: [1594..1595]
 r2571: [1590..1591]
 r2572: [1582..1583]
 r2573: [1580..1581]
 r2574: [1576..1577]
 r2575: [1572..1573]
 r2576: [1564..1565]
 r2577: [1512..1513]
 r2578: [1512..1513]
 r2579: [1510..1511] [1506..1507]
 r2580: [1506..1511]
 r2581: [1508..1511]
 r2582: [1500..1501]
 r2583: [1500..1501]
 r2584: [1500..1501]
 r2585: [1498..1499]
 r2586: [1498..1499]
 r2587: [1498..1499]
 r2588: [1498..1499]
 r2589: [1492..1493] [1488..1489] [1484..1485]
 r2590: [1490..1491]
 r2591: [1486..1487]
 r2592: [1474..1475]
 r2593: [1468..1469]
 r2594: [1462..1463]
 r2595: [1462..1463]
 r2596: [1454..1455] [1450..1451] [1446..1447]
 r2597: [1452..1453]
 r2598: [1448..1449]
 r2599: [1436..1437]
 r2600: [1432..1433]
 r2601: [1432..1433]
 r2602: [1430..1431] [1426..1427]
 r2603: [1426..1431]
 r2604: [1428..1431]
 r2605: [1420..1421]
 r2606: [1420..1421]
 r2607: [1420..1421]
 r2608: [1420..1421]
 r2609: [1414..1415] [1410..1411] [1406..1407]
 r2610: [1412..1413]
 r2611: [1408..1409]
 r2612: [1396..1397]
 r2613: [1390..1391] [1386..1387] [1382..1383]
 r2614: [1388..1389]
 r2615: [1384..1385]
 r2616: [1372..1373]
 r2617: [1350..1351]
 r2618: [1354..1355]
 r2619: [1366..1367]
 r2620: [1362..1363]
 r2621: [1356..1357]
 r2622: [1356..1357]
 r2623: [1346..1347]
 r2624: [1346..1347]
 r2625: [1344..1345] [1340..1341]
 r2626: [1340..1345]
 r2627: [1342..1345]
 r2628: [1334..1335]
 r2629: [1334..1335]
 r2630: [1334..1335]
 r2631: [1334..1335]
 r2632: [1328..1329] [1324..1325] [1320..1321]
 r2633: [1326..1327]
 r2634: [1322..1323]
 r2635: [1310..1311]
 r2636: [1304..1305] [1300..1301] [1296..1297]
 r2637: [1302..1303]
 r2638: [1298..1299]
 r2639: [1286..1287]
 r2640: [1264..1265]
 r2641: [1268..1269]
 r2642: [1280..1281]
 r2643: [1276..1277]
 r2644: [1270..1271]
 r2645: [1270..1271]
 r2646: [1260..1261]
 r2647: [1260..1261]
 r2648: [1258..1259] [1254..1255]
 r2649: [1254..1259]
 r2650: [1256..1259]
 r2651: [1248..1249]
 r2652: [1248..1249]
 r2653: [1248..1249]
 r2654: [1248..1249]
 r2655: [1242..1243] [1238..1239] [1234..1235]
 r2656: [1240..1241]
 r2657: [1236..1237]
 r2658: [1224..1225]
 r2659: [1218..1219]
 r2660: [1212..1213]
 r2661: [1212..1213]
 r2662: [1204..1205] [1200..1201] [1196..1197]
 r2663: [1202..1203]
 r2664: [1198..1199]
 r2665: [1186..1187]
 r2666: [1182..1183]
 r2667: [1176..1177]
 r2668: [1178..1179]
 r2669: [1180..1181]
 r2670: [1142..1143]
 r2671: [1146..1147]
 r2672: [1172..1173]
 r2673: [1168..1169]
 r2674: [1162..1163]
 r2675: [1160..1161]
 r2676: [1156..1157]
 r2677: [1148..1149]
 r2678: [1138..1139]
 r2679: [1138..1139]
 r2680: [1136..1137] [1132..1133]
 r2681: [1132..1137]
 r2682: [1134..1137]
 r2683: [1130..1131]
 r2684: [1126..1127]
 r2686: [1124..1125]
 r2687: [1122..1124]
 r2688: [1123..1123]
 r2689: [1120..1121]
 r2690: [1114..1115]
 r2691: [1118..1119]
 r2692: [1104..1105]
 r2693: [1104..1105]
 r2694: [1104..1105]
 r2695: [1104..1105]
 r2696: [1098..1099] [1094..1095] [1090..1091]
 r2697: [1096..1097]
 r2698: [1092..1093]
 r2699: [1080..1081]
 r2700: [1074..1075]
 r2701: [1068..1069]
 r2702: [1068..1069]
 r2703: [1060..1061] [1056..1057] [1052..1053]
 r2704: [1058..1059]
 r2705: [1054..1055]
 r2706: [1042..1043]
 r2707: [1038..1039]
 r2708: [1032..1033]
 r2709: [1034..1035]
 r2710: [1036..1037]
 r2711: [998..999]
 r2712: [1002..1003]
 r2713: [1028..1029]
 r2714: [1024..1025]
 r2715: [1018..1019]
 r2716: [1016..1017]
 r2717: [1012..1013]
 r2718: [1004..1005]
 r2719: [994..995]
 r2720: [994..995]
 r2721: [992..993] [988..989]
 r2722: [988..993]
 r2723: [990..993]
 r2724: [986..987]
 r2725: [982..983]
 r2727: [980..981]
 r2728: [978..980]
 r2729: [979..979]
 r2730: [976..977]
 r2731: [970..971]
 r2732: [974..975]
 r2733: [960..961]
 r2734: [960..961]
 r2735: [960..961]
 r2736: [960..961]
 r2737: [938..939]
 r2738: [940..941]
 r2739: [302..303]
 r2740: [306..307]
 r2741: [934..935]
 r2742: [930..931]
 r2743: [922..925]
 r2744: [922..923]
 r2745: [920..921]
 r2746: [918..919]
 r2747: [568..569]
 r2748: [564..565]
 r2749: [558..559]
 r2750: [558..559]
 r2751: [556..557]
 r2752: [552..553]
 r2753: [546..547]
 r2754: [546..547]
 r2755: [916..917]
 r2756: [912..913]
 r2757: [904..907]
 r2758: [904..905]
 r2759: [902..903]
 r2760: [900..901]
 r2761: [896..897]
 r2762: [888..891]
 r2763: [888..889]
 r2764: [886..887]
 r2765: [882..883]
 r2766: [874..877]
 r2767: [874..875]
 r2768: [868..869]
 r2769: [870..871]
 r2770: [866..867]
 r2771: [862..863]
 r2772: [854..857]
 r2773: [854..855]
 r2774: [852..853]
 r2775: [848..849]
 r2776: [844..845]
 r2777: [836..839]
 r2778: [836..837]
 r2779: [830..831]
 r2780: [832..833]
 r2781: [828..829]
 r2782: [824..825]
 r2783: [816..819]
 r2784: [816..817]
 r2785: [814..815]
 r2786: [810..811]
 r2787: [802..805]
 r2788: [802..803]
 r2789: [794..795]
 r2790: [792..793]
 r2791: [788..789]
 r2792: [782..783]
 r2793: [774..777]
 r2794: [774..775]
 r2795: [772..773]
 r2796: [768..769]
 r2797: [760..763]
 r2798: [760..761]
 r2799: [758..759]
 r2800: [754..755]
 r2801: [746..749]
 r2802: [746..747]
 r2803: [738..741]
 r2804: [738..739]
 r2805: [734..735]
 r2806: [722..723]
 r2807: [718..719]
 r2808: [716..717]
 r2809: [716..717]
 r2810: [712..713]
 r2811: [708..709]
 r2812: [700..701]
 r2813: [698..699]
 r2814: [694..695]
 r2815: [686..689]
 r2816: [686..687]
 r2817: [684..685]
 r2818: [680..681]
 r2819: [672..675]
 r2820: [672..673]
 r2821: [664..665]
 r2822: [662..663]
 r2823: [658..659]
 r2824: [652..653]
 r2825: [644..647]
 r2826: [644..645]
 r2827: [642..643]
 r2828: [638..639]
 r2829: [630..633]
 r2830: [630..631]
 r2831: [628..629]
 r2832: [624..625]
 r2833: [616..619]
 r2834: [616..617]
 r2835: [608..611]
 r2836: [608..609]
 r2837: [604..605]
 r2838: [592..593]
 r2839: [588..589]
 r2840: [586..587]
 r2841: [586..587]
 r2842: [582..583]
 r2843: [578..579]
 r2844: [570..571]
 r2845: [544..545]
 r2846: [540..541]
 r2847: [532..535]
 r2848: [532..533]
 r2849: [530..531]
 r2850: [528..529]
 r2851: [524..525]
 r2852: [518..519]
 r2853: [512..513]
 r2854: [508..509]
 r2855: [500..503]
 r2856: [500..501]
 r2857: [498..499]
 r2858: [496..497]
 r2859: [492..493]
 r2860: [486..487]
 r2861: [480..481]
 r2862: [476..477]
 r2863: [468..471]
 r2864: [468..469]
 r2865: [466..467]
 r2866: [464..465]
 r2867: [460..461]
 r2868: [454..455]
 r2869: [448..449]
 r2870: [446..447]
 r2871: [442..443]
 r2872: [438..439]
 r2873: [432..433]
 r2874: [426..427]
 r2875: [424..425]
 r2876: [420..421]
 r2877: [412..413]
 r2878: [410..411]
 r2879: [406..407]
 r2880: [400..401]
 r2881: [394..395]
 r2882: [392..393]
 r2883: [388..389]
 r2884: [382..383]
 r2885: [376..377]
 r2886: [374..375]
 r2887: [370..371]
 r2888: [362..363]
 r2889: [360..361]
 r2890: [356..357]
 r2891: [348..351]
 r2892: [348..349]
 r2893: [346..347]
 r2894: [342..343]
 r2895: [334..337]
 r2896: [334..335]
 r2897: [326..329]
 r2898: [326..327]
 r2899: [322..323]
 r2900: [320..321]
 r2901: [316..317]
 r2902: [308..309]
 r2903: [294..295]
 r2904: [294..295]
 r2905: [292..293] [288..289]
 r2906: [288..293]
 r2907: [290..293]
 r2908: [282..283] [278..279] [274..275]
 r2909: [280..281]
 r2910: [276..277]
 r2911: [270..271]
 r2912: [268..269]
 r2913: [266..267]
 r2914: [266..267]
 r2915: [266..267]
 r2916: [242..243]
 r2917: [242..243]
 r2918: [240..241] [236..237]
 r2919: [236..241]
 r2920: [238..241]
 r2921: [234..235]
 r2922: [234..235]
 r2923: [234..235]
 r2924: [196..197]
 r2925: [200..201]
 r2926: [226..227]
 r2927: [222..223]
 r2928: [216..217]
 r2929: [212..213]
 r2930: [204..207]
 r2931: [204..205]
 r2932: [202..203]
 r2933: [158..159]
 r2934: [168..169]
 r2935: [172..173]
 r2936: [186..187]
 r2937: [180..181]
 r2938: [174..175]
 r2939: [174..175]
 r2940: [6..7]
 r2941: [140..141] [136..137] [132..133]
 r2942: [138..139]
 r2943: [134..135]
 r2944: [122..123]
 r2945: [116..117] [112..113] [108..109]
 r2946: [114..115]
 r2947: [110..111]
 r2948: [98..99]
 r2949: [94..95]
 r2950: [94..95]
 r2951: [92..93]
 r2952: [92..93]
 r2953: [90..91] [86..87]
 r2954: [86..91]
 r2955: [88..91]
 r2956: [80..81]
 r2957: [80..81]
 r2958: [80..81]
 r2959: [80..81]
 r2960: [74..75] [70..71] [66..67]
 r2961: [72..73]
 r2962: [68..69]
 r2963: [56..57]
 r2964: [50..51] [46..47] [42..43]
 r2965: [48..49]
 r2966: [44..45]
 r2967: [32..33]
 r2968: [28..29]
 r2969: [28..29]
 r2970: [26..27]
 r2971: [26..27]
 r2972: [24..25] [20..21]
 r2973: [20..25]
 r2974: [22..25]
 r2975: [14..15]
 r2976: [14..15]
 r2977: [14..15]
 r2978: [14..15]
 r2979: [2..3]
 r2980: [0..1]
 r2983: [4510..4511]
 r2984: [4500..4501]
 r2985: [4468..4469]
 r2986: [4129..4131]
 r2987: [4124..4125]
 r2988: [4120..4121]
 r2989: [4116..4117]
 r2990: [4111..4113]
 r2991: [4106..4107]
 r2992: [4104..4105]
 r2993: [4100..4101]
 r2994: [4094..4095]
 r2995: [3756..3757]
 r2996: [3598..3599]
 r2998: [3478..3479]
 r2999: [3272..3273]
 r3000: [3200..3201]
 r3001: [3128..3129]
 r3002: [3060..3061]
 r3003: [2984..2985]
 r3004: [2914..2915]
 r3005: [2846..2847]
 r3006: [2776..2777]
 r3007: [2658..2659]
 r3008: [2644..2645]
 r3009: [2576..2577]
 r3010: [2508..2509]
 r3011: [2442..2443]
 r3012: [2376..2377]
 r3013: [2188..2189]
 r3014: [2072..2073]
 r3015: [1986..1987]
 r3016: [1828..1829]
 r3018: [1508..1509]
 r3019: [1428..1429]
 r3020: [1342..1343]
 r3021: [1256..1257]
 r3022: [1134..1135]
 r3023: [990..991]
 r3024: [298..299]
 r3025: [296..297]
 r3026: [290..291]
 r3027: [258..259]
 r3028: [256..257]
 r3029: [254..255]
 r3030: [252..253]
 r3031: [250..251]
 r3032: [248..249]
 r3033: [246..247]
 r3034: [238..239]
 r3035: [154..155]
 r3036: [152..153]
 r3037: [150..151]
 r3038: [148..149]
 r3039: [88..89]
 r3040: [22..23]
 r3043: [1808..1809]
 r3044: [3578..3579]
 r3045: [3580..3597]
 r3046: [1810..1827]

********** Assignment #2: **********

	 Assigning to 3046 (cl=SSE_REGS, orig=1020, freq=2000, tfirst=3043, tfreq=2000)...
	 Assigning to 3043 (cl=SSE_REGS, orig=1020, freq=2000, tfirst=3043, tfreq=2000)...
	   Assign 25 to optional reload r3043 (freq=2000)
	Hard reg 25 is preferable by r3046 with profit 1000
	 Assigning to 3045 (cl=SSE_REGS, orig=449, freq=2000, tfirst=3044, tfreq=2000)...
	 Assigning to 3044 (cl=SSE_REGS, orig=449, freq=2000, tfirst=3044, tfreq=2000)...
	   Assign 26 to optional reload r3044 (freq=2000)
	Hard reg 26 is preferable by r3045 with profit 1000
  Reassigning non-reload pseudos

********** Undoing inheritance #2: **********

Inherit 0 out of 2 (0.00%)
   Insn after restoring regs:
 5924: r3044:SF=r449:SF
      REG_DEAD r449:SF
   Insn after restoring regs:
 5847: r449:SF=r2996:SF
      REG_DEAD r2996:SF
   Insn after restoring regs:
 5923: r3043:SF=r1020:SF
      REG_DEAD r1020:SF
   Insn after restoring regs:
 5886: r1020:SF=r3016:SF
      REG_DEAD r3016:SF
Keep optional reload reg 2997
Keep optional reload reg 3017
Remove optional reload reg 3043
  Restoring original insn:
 3453: r2503:SF=r1028:SF*r1020:SF
      REG_DEAD r1020:SF
      REG_DEAD r1028:SF
  Deleting move 5923
 5923: r3043:SF=r1020:SF
      REG_DEAD r1020:SF
deleting insn with uid = 5923.
Remove optional reload reg 3044
  Restoring original insn:
 1110: r1996:SF=r457:SF*r449:SF
      REG_DEAD r449:SF
      REG_DEAD r457:SF
  Deleting move 5924
 5924: r3044:SF=r449:SF
      REG_DEAD r449:SF
deleting insn with uid = 5924.

********** Local #3: **********

	   Spilling non-eliminable hard regs: 6
            2 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 3453:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            2 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 1110:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
	   Spilling non-eliminable hard regs: 6

********** Pseudo live ranges #3: **********

  BB 362
   Insn 5577: point = 0, n_alt = -1
   Insn 5519: point = 0, n_alt = 0
   Insn 5518: point = 0, n_alt = -2
   Insn 5517: point = 1, n_alt = 3
   Insn 5516: point = 2, n_alt = 0
   Insn 5515: point = 2, n_alt = -2
   Insn 5514: point = 3, n_alt = 3
   Insn 5576: point = 4, n_alt = -1
  BB 399
   Insn 5805: point = 4, n_alt = -1
  BB 350
   Insn 5325: point = 4, n_alt = -1
   Insn 5324: point = 4, n_alt = 0
   Insn 5323: point = 5, n_alt = 0
   Insn 5322: point = 7, n_alt = 0
   Insn 5321: point = 8, n_alt = 0
   Insn 5320: point = 9, n_alt = 0
  BB 361
   Insn 5693: point = 10, n_alt = -1
   Insn 5507: point = 10, n_alt = 1
   Insn 5506: point = 11, n_alt = 0
   Insn 5505: point = 13, n_alt = 0
  BB 360
   Insn 5502: point = 14, n_alt = 0
   Insn 5501: point = 14, n_alt = 3
   Insn 5500: point = 14, n_alt = 2
   Insn 5499: point = 14, n_alt = 2
   Insn 5498: point = 14, n_alt = -2
   Insn 5497: point = 15, n_alt = -2
   Insn 5496: point = 16, n_alt = -2
   Insn 5495: point = 17, n_alt = -2
   Insn 5494: point = 18, n_alt = 3
   Insn 5493: point = 19, n_alt = 3
   Insn 5492: point = 20, n_alt = 3
   Insn 5491: point = 21, n_alt = 3
  BB 359
   Insn 5488: point = 22, n_alt = 1
  BB 358
   Insn 5486: point = 22, n_alt = -1
   Insn 5485: point = 22, n_alt = 0
   Insn 5484: point = 23, n_alt = 0
   Insn 5483: point = 24, n_alt = 1
   Insn 5482: point = 25, n_alt = 0
   Insn 5481: point = 26, n_alt = 0
   Insn 5480: point = 27, n_alt = 1
   Insn 5920: point = 28, n_alt = -2
   Insn 5479: point = 30, n_alt = 0
   Insn 5919: point = 31, n_alt = -2
   Insn 5478: point = 33, n_alt = 2
   Insn 5477: point = 34, n_alt = 2
   Insn 5476: point = 35, n_alt = 2
   Insn 5475: point = 36, n_alt = 0
   Insn 5474: point = 36, n_alt = 0
   Insn 5473: point = 36, n_alt = 3
   Insn 5472: point = 36, n_alt = 2
   Insn 5471: point = 36, n_alt = 2
   Insn 5470: point = 36, n_alt = 4
   Insn 5469: point = 36, n_alt = 4
   Insn 5468: point = 36, n_alt = -2
   Insn 5467: point = 37, n_alt = -2
   Insn 5466: point = 38, n_alt = 0
   Insn 5465: point = 38, n_alt = 0
   Insn 5464: point = 38, n_alt = 3
   Insn 5463: point = 39, n_alt = 3
   Insn 5462: point = 40, n_alt = 0
   Insn 5461: point = 40, n_alt = 3
   Insn 5460: point = 40, n_alt = 4
   Insn 5459: point = 40, n_alt = -2
   Insn 5458: point = 41, n_alt = -2
   Insn 5457: point = 42, n_alt = 4
   Insn 5456: point = 42, n_alt = 4
   Insn 5455: point = 42, n_alt = 3
   Insn 5454: point = 43, n_alt = 3
   Insn 5453: point = 44, n_alt = 1
   Insn 5452: point = 45, n_alt = 0
   Insn 5451: point = 47, n_alt = 0
   Insn 5450: point = 49, n_alt = 0
   Insn 5449: point = 51, n_alt = 0
   Insn 5448: point = 53, n_alt = 0
   Insn 5447: point = 55, n_alt = 0
   Insn 5446: point = 56, n_alt = -2
   Insn 5445: point = 58, n_alt = -2
   Insn 5444: point = 60, n_alt = 0
   Insn 5443: point = 62, n_alt = 0
   Insn 5442: point = 63, n_alt = -2
   Insn 5441: point = 65, n_alt = 0
   Insn 5440: point = 67, n_alt = -2
   Insn 5439: point = 68, n_alt = 1
   Insn 5438: point = 70, n_alt = 0
  BB 357
   Insn 5436: point = 71, n_alt = -1
   Insn 5435: point = 71, n_alt = 0
   Insn 5434: point = 72, n_alt = 0
   Insn 5433: point = 74, n_alt = 0
   Insn 5432: point = 76, n_alt = 0
   Insn 5431: point = 78, n_alt = 0
   Insn 5430: point = 80, n_alt = 0
   Insn 5429: point = 82, n_alt = 0
   Insn 5428: point = 83, n_alt = -2
   Insn 5427: point = 85, n_alt = -2
   Insn 5426: point = 87, n_alt = 0
   Insn 5425: point = 89, n_alt = 0
   Insn 5424: point = 90, n_alt = -2
   Insn 5423: point = 92, n_alt = 0
   Insn 5422: point = 94, n_alt = -2
   Insn 5421: point = 95, n_alt = 1
   Insn 5420: point = 97, n_alt = 0
  BB 356
   Insn 5418: point = 98, n_alt = -1
   Insn 5417: point = 98, n_alt = 0
   Insn 5416: point = 99, n_alt = 0
  BB 355
   Insn 5413: point = 100, n_alt = 0
   Insn 5412: point = 100, n_alt = 3
   Insn 5411: point = 100, n_alt = 2
   Insn 5410: point = 100, n_alt = 2
   Insn 5409: point = 100, n_alt = -2
   Insn 5408: point = 101, n_alt = -2
   Insn 5407: point = 102, n_alt = -2
   Insn 5406: point = 103, n_alt = -2
   Insn 5405: point = 104, n_alt = 3
   Insn 5404: point = 105, n_alt = 3
   Insn 5403: point = 106, n_alt = 3
   Insn 5402: point = 107, n_alt = 3
  BB 354
   Insn 5399: point = 108, n_alt = 1
  BB 353
   Insn 5397: point = 108, n_alt = -1
   Insn 5396: point = 108, n_alt = 0
   Insn 5395: point = 109, n_alt = 0
   Insn 5394: point = 110, n_alt = 1
   Insn 5393: point = 111, n_alt = 0
   Insn 5392: point = 112, n_alt = 0
   Insn 5391: point = 113, n_alt = 1
   Insn 5918: point = 114, n_alt = -2
   Insn 5390: point = 116, n_alt = 0
   Insn 5917: point = 117, n_alt = -2
   Insn 5389: point = 119, n_alt = 2
   Insn 5388: point = 120, n_alt = 2
   Insn 5387: point = 121, n_alt = 2
   Insn 5386: point = 122, n_alt = 0
   Insn 5385: point = 122, n_alt = 0
   Insn 5384: point = 122, n_alt = 3
   Insn 5383: point = 122, n_alt = 2
   Insn 5382: point = 122, n_alt = 2
   Insn 5381: point = 122, n_alt = 4
   Insn 5380: point = 122, n_alt = 4
   Insn 5379: point = 122, n_alt = -2
   Insn 5378: point = 123, n_alt = -2
   Insn 5377: point = 124, n_alt = 0
   Insn 5376: point = 124, n_alt = 0
   Insn 5375: point = 124, n_alt = 3
   Insn 5374: point = 125, n_alt = 3
   Insn 5373: point = 126, n_alt = 0
   Insn 5372: point = 126, n_alt = 3
   Insn 5371: point = 126, n_alt = 4
   Insn 5370: point = 126, n_alt = -2
   Insn 5369: point = 127, n_alt = -2
   Insn 5368: point = 128, n_alt = 4
   Insn 5367: point = 128, n_alt = 4
   Insn 5366: point = 128, n_alt = 3
   Insn 5365: point = 129, n_alt = 3
   Insn 5364: point = 130, n_alt = 1
   Insn 5363: point = 131, n_alt = 0
   Insn 5362: point = 133, n_alt = 0
   Insn 5361: point = 135, n_alt = 0
   Insn 5360: point = 137, n_alt = 0
   Insn 5359: point = 139, n_alt = 0
   Insn 5358: point = 141, n_alt = 0
   Insn 5357: point = 142, n_alt = -2
   Insn 5356: point = 144, n_alt = -2
   Insn 5355: point = 146, n_alt = 0
   Insn 5354: point = 148, n_alt = 0
   Insn 5353: point = 149, n_alt = -2
   Insn 5352: point = 151, n_alt = 0
   Insn 5351: point = 153, n_alt = -2
   Insn 5350: point = 154, n_alt = 1
   Insn 5349: point = 156, n_alt = 0
  BB 352
   Insn 5347: point = 157, n_alt = -1
   Insn 5346: point = 157, n_alt = 0
   Insn 5345: point = 158, n_alt = 0
   Insn 5344: point = 160, n_alt = 0
   Insn 5343: point = 162, n_alt = 0
   Insn 5342: point = 164, n_alt = 0
   Insn 5341: point = 166, n_alt = 0
   Insn 5340: point = 168, n_alt = 0
   Insn 5339: point = 169, n_alt = -2
   Insn 5338: point = 171, n_alt = -2
   Insn 5337: point = 173, n_alt = 0
   Insn 5336: point = 175, n_alt = 0
   Insn 5335: point = 176, n_alt = -2
   Insn 5334: point = 178, n_alt = 0
   Insn 5333: point = 180, n_alt = -2
   Insn 5332: point = 181, n_alt = 1
   Insn 5331: point = 183, n_alt = 0
  BB 351
   Insn 5329: point = 184, n_alt = -1
   Insn 5328: point = 184, n_alt = 0
   Insn 5327: point = 185, n_alt = 0
  BB 349
   Insn 5318: point = 186, n_alt = 1
  BB 348
   Insn 5315: point = 186, n_alt = 0
   Insn 5314: point = 186, n_alt = 3
   Insn 5313: point = 186, n_alt = 4
   Insn 5312: point = 186, n_alt = 4
  BB 347
   Insn 5310: point = 186, n_alt = -1
   Insn 5309: point = 186, n_alt = 0
   Insn 5308: point = 187, n_alt = 0
   Insn 5307: point = 188, n_alt = 0
   Insn 5306: point = 188, n_alt = 0
   Insn 5305: point = 188, n_alt = 3
   Insn 5304: point = 188, n_alt = 4
   Insn 5303: point = 188, n_alt = 4
   Insn 5302: point = 188, n_alt = 4
   Insn 5301: point = 188, n_alt = 4
   Insn 5300: point = 188, n_alt = 4
   Insn 5299: point = 188, n_alt = 4
   Insn 5298: point = 188, n_alt = 0
   Insn 5916: point = 189, n_alt = 4
   Insn 5297: point = 190, n_alt = 0
   Insn 5915: point = 191, n_alt = 4
   Insn 5296: point = 192, n_alt = 0
   Insn 5914: point = 193, n_alt = 4
   Insn 5295: point = 194, n_alt = 0
   Insn 5294: point = 194, n_alt = 0
   Insn 5293: point = 194, n_alt = 0
   Insn 5292: point = 194, n_alt = 0
   Insn 5291: point = 194, n_alt = 0
   Insn 5290: point = 194, n_alt = 0
   Insn 5913: point = 195, n_alt = 4
   Insn 5289: point = 196, n_alt = 0
  BB 402
   Insn 5814: point = 196, n_alt = -1
  BB 339
   Insn 5235: point = 196, n_alt = -1
   Insn 5234: point = 196, n_alt = 0
   Insn 5233: point = 197, n_alt = 0
   Insn 5232: point = 199, n_alt = 0
   Insn 5231: point = 200, n_alt = 0
   Insn 5230: point = 201, n_alt = 0
  BB 346
   Insn 5691: point = 202, n_alt = -1
   Insn 5283: point = 202, n_alt = 1
   Insn 5282: point = 203, n_alt = 0
   Insn 5281: point = 205, n_alt = 0
  BB 403
   Insn 5817: point = 206, n_alt = -1
  BB 341
   Insn 5245: point = 206, n_alt = -1
   Insn 5244: point = 206, n_alt = 0
   Insn 5243: point = 207, n_alt = 0
   Insn 5242: point = 209, n_alt = 0
   Insn 5241: point = 210, n_alt = 0
  BB 345
   Insn 5689: point = 211, n_alt = -1
   Insn 5275: point = 211, n_alt = 1
  BB 404
   Insn 5820: point = 212, n_alt = -1
  BB 343
   Insn 5253: point = 213, n_alt = -1
   Insn 5252: point = 213, n_alt = 0
   Insn 5251: point = 214, n_alt = 0
   Insn 5250: point = 216, n_alt = 0
   Insn 5249: point = 217, n_alt = 0
  BB 344
   Insn 5687: point = 218, n_alt = -1
   Insn 5269: point = 218, n_alt = 1
   Insn 5268: point = 218, n_alt = 8
   Insn 5267: point = 219, n_alt = 7
   Insn 5266: point = 220, n_alt = 4
   Insn 5265: point = 221, n_alt = 3
   Insn 5264: point = 223, n_alt = 0
   Insn 5263: point = 225, n_alt = 1
   Insn 5262: point = 227, n_alt = 0
   Insn 5261: point = 228, n_alt = 0
   Insn 5260: point = 230, n_alt = 0
   Insn 5259: point = 232, n_alt = 1
   Insn 5258: point = 234, n_alt = 0
   Insn 5257: point = 235, n_alt = 1
   Insn 5256: point = 237, n_alt = 1
   Insn 5255: point = 239, n_alt = 0
  BB 342
   Insn 5247: point = 241, n_alt = 1
  BB 340
   Insn 5239: point = 242, n_alt = 1
   Insn 5238: point = 243, n_alt = 0
   Insn 5237: point = 244, n_alt = 0
  BB 338
   Insn 5228: point = 245, n_alt = 1
  BB 400
   Insn 5808: point = 245, n_alt = -1
  BB 333
   Insn 5187: point = 245, n_alt = -1
   Insn 5186: point = 245, n_alt = 0
   Insn 5185: point = 246, n_alt = 0
   Insn 5184: point = 248, n_alt = 0
   Insn 5183: point = 249, n_alt = 0
  BB 337
   Insn 5685: point = 250, n_alt = -1
   Insn 5222: point = 250, n_alt = 1
  BB 401
   Insn 5811: point = 251, n_alt = -1
  BB 335
   Insn 5195: point = 252, n_alt = -1
   Insn 5194: point = 252, n_alt = 0
   Insn 5193: point = 253, n_alt = 0
   Insn 5192: point = 255, n_alt = 0
   Insn 5191: point = 256, n_alt = 0
  BB 336
   Insn 5683: point = 257, n_alt = -1
   Insn 5216: point = 257, n_alt = 1
   Insn 5215: point = 257, n_alt = 8
   Insn 5214: point = 258, n_alt = 4
   Insn 5213: point = 259, n_alt = 7
   Insn 5212: point = 261, n_alt = 0
   Insn 5211: point = 263, n_alt = 4
   Insn 5210: point = 264, n_alt = 3
   Insn 5209: point = 266, n_alt = 0
   Insn 5208: point = 268, n_alt = 1
   Insn 5207: point = 270, n_alt = 0
   Insn 5206: point = 271, n_alt = 0
   Insn 5205: point = 273, n_alt = 1
   Insn 5204: point = 275, n_alt = 0
   Insn 5203: point = 276, n_alt = 3
   Insn 5202: point = 278, n_alt = 0
   Insn 5201: point = 280, n_alt = 1
   Insn 5200: point = 282, n_alt = 0
   Insn 5199: point = 283, n_alt = 0
   Insn 5198: point = 285, n_alt = 1
   Insn 5197: point = 287, n_alt = 0
  BB 334
   Insn 5189: point = 289, n_alt = 1
  BB 332
   Insn 5181: point = 290, n_alt = 1
   Insn 5180: point = 291, n_alt = 0
   Insn 5179: point = 292, n_alt = 0
  BB 331
   Insn 5176: point = 293, n_alt = -1
   Insn 5175: point = 293, n_alt = 0
   Insn 5174: point = 294, n_alt = 0
  BB 330
   Insn 5172: point = 295, n_alt = -1
   Insn 5171: point = 295, n_alt = 0
   Insn 5170: point = 296, n_alt = 0
  BB 329
   Insn 5167: point = 297, n_alt = 0
   Insn 5166: point = 297, n_alt = 3
   Insn 5165: point = 297, n_alt = 2
   Insn 5164: point = 297, n_alt = 2
   Insn 5163: point = 297, n_alt = 2
   Insn 5162: point = 297, n_alt = -2
   Insn 5161: point = 298, n_alt = -2
   Insn 5160: point = 299, n_alt = -2
   Insn 5159: point = 300, n_alt = 3
   Insn 5158: point = 301, n_alt = 3
   Insn 5157: point = 302, n_alt = 3
   Insn 5156: point = 303, n_alt = 0
   Insn 5155: point = 304, n_alt = 1
   Insn 5912: point = 305, n_alt = -2
   Insn 5154: point = 307, n_alt = 0
   Insn 5911: point = 308, n_alt = -2
   Insn 5153: point = 310, n_alt = 2
   Insn 5152: point = 311, n_alt = 2
   Insn 5151: point = 312, n_alt = 2
   Insn 5150: point = 313, n_alt = 0
   Insn 5149: point = 313, n_alt = 0
   Insn 5148: point = 313, n_alt = 3
   Insn 5147: point = 313, n_alt = 2
   Insn 5146: point = 313, n_alt = 2
   Insn 5145: point = 313, n_alt = 4
   Insn 5144: point = 313, n_alt = 4
   Insn 5143: point = 313, n_alt = -2
   Insn 5142: point = 314, n_alt = -2
   Insn 5141: point = 315, n_alt = 0
   Insn 5140: point = 315, n_alt = 0
   Insn 5139: point = 315, n_alt = 3
   Insn 5138: point = 316, n_alt = 3
  BB 328
   Insn 5136: point = 317, n_alt = -1
   Insn 5135: point = 317, n_alt = 0
   Insn 5134: point = 318, n_alt = 0
   Insn 5133: point = 319, n_alt = 0
   Insn 5132: point = 319, n_alt = 0
   Insn 5131: point = 319, n_alt = 3
   Insn 5130: point = 319, n_alt = 4
   Insn 5129: point = 319, n_alt = 4
   Insn 5128: point = 319, n_alt = 4
   Insn 5127: point = 319, n_alt = 4
   Insn 5126: point = 319, n_alt = 4
   Insn 5125: point = 319, n_alt = 4
   Insn 5124: point = 319, n_alt = 0
   Insn 5910: point = 320, n_alt = 4
   Insn 5123: point = 321, n_alt = 0
   Insn 5909: point = 322, n_alt = 4
   Insn 5122: point = 323, n_alt = 0
   Insn 5121: point = 323, n_alt = 0
   Insn 5120: point = 323, n_alt = 0
   Insn 5119: point = 323, n_alt = 0
   Insn 5118: point = 323, n_alt = 0
   Insn 5908: point = 324, n_alt = 4
   Insn 5117: point = 325, n_alt = 0
   Insn 5907: point = 326, n_alt = 4
   Insn 5116: point = 327, n_alt = 0
   Insn 5906: point = 328, n_alt = 4
   Insn 5115: point = 329, n_alt = 0
   Insn 5905: point = 330, n_alt = 4
   Insn 5114: point = 331, n_alt = 0
   Insn 5904: point = 332, n_alt = 4
   Insn 5113: point = 333, n_alt = 0
  BB 327
   Insn 5110: point = 333, n_alt = -1
   Insn 5109: point = 333, n_alt = 0
   Insn 5108: point = 334, n_alt = 0
  BB 326
   Insn 5106: point = 335, n_alt = -1
   Insn 5105: point = 335, n_alt = 0
   Insn 5104: point = 336, n_alt = 0
  BB 325
   Insn 5102: point = 337, n_alt = -1
   Insn 5101: point = 337, n_alt = 0
   Insn 5100: point = 338, n_alt = 0
  BB 324
   Insn 5097: point = 339, n_alt = 0
   Insn 5096: point = 339, n_alt = 3
   Insn 5095: point = 339, n_alt = 2
   Insn 5094: point = 339, n_alt = 2
   Insn 5093: point = 339, n_alt = -2
   Insn 5092: point = 340, n_alt = -2
   Insn 5091: point = 341, n_alt = -2
   Insn 5090: point = 342, n_alt = -2
   Insn 5089: point = 343, n_alt = 3
   Insn 5088: point = 344, n_alt = 3
   Insn 5087: point = 345, n_alt = 3
   Insn 5086: point = 346, n_alt = 3
   Insn 5085: point = 348, n_alt = 0
   Insn 5084: point = 350, n_alt = 0
   Insn 5083: point = 352, n_alt = -2
   Insn 5082: point = 354, n_alt = -2
   Insn 5081: point = 356, n_alt = 0
   Insn 5080: point = 358, n_alt = 0
   Insn 5079: point = 359, n_alt = -2
   Insn 5078: point = 361, n_alt = 0
   Insn 5077: point = 363, n_alt = -2
   Insn 5076: point = 364, n_alt = 3
   Insn 5075: point = 366, n_alt = 0
   Insn 5074: point = 368, n_alt = 0
   Insn 5073: point = 369, n_alt = 0
   Insn 5072: point = 370, n_alt = 1
   Insn 5903: point = 371, n_alt = -2
   Insn 5071: point = 373, n_alt = 0
   Insn 5902: point = 374, n_alt = -2
   Insn 5070: point = 376, n_alt = 2
   Insn 5069: point = 377, n_alt = 2
   Insn 5068: point = 378, n_alt = 2
   Insn 5067: point = 379, n_alt = 0
   Insn 5066: point = 379, n_alt = 0
   Insn 5065: point = 379, n_alt = 3
   Insn 5064: point = 379, n_alt = 2
   Insn 5063: point = 379, n_alt = 2
   Insn 5062: point = 379, n_alt = 4
   Insn 5061: point = 379, n_alt = 4
   Insn 5060: point = 379, n_alt = -2
   Insn 5059: point = 380, n_alt = -2
   Insn 5058: point = 381, n_alt = 0
   Insn 5057: point = 381, n_alt = 0
   Insn 5056: point = 381, n_alt = 3
   Insn 5055: point = 382, n_alt = 3
   Insn 5054: point = 383, n_alt = 0
   Insn 5053: point = 383, n_alt = 0
   Insn 5052: point = 383, n_alt = 3
   Insn 5051: point = 383, n_alt = 4
   Insn 5050: point = 383, n_alt = 4
   Insn 5049: point = 383, n_alt = 4
   Insn 5048: point = 383, n_alt = 4
   Insn 5047: point = 383, n_alt = 4
   Insn 5046: point = 383, n_alt = 4
   Insn 5045: point = 383, n_alt = 0
   Insn 5901: point = 384, n_alt = 4
   Insn 5044: point = 385, n_alt = 0
   Insn 5900: point = 386, n_alt = 4
  BB 397
   Insn 5799: point = 387, n_alt = -1
  BB 315
   Insn 4548: point = 387, n_alt = -1
   Insn 4547: point = 387, n_alt = 0
   Insn 4546: point = 388, n_alt = 0
   Insn 4545: point = 390, n_alt = 0
   Insn 4544: point = 391, n_alt = 0
  BB 323
   Insn 5681: point = 392, n_alt = -1
   Insn 5038: point = 392, n_alt = 1
  BB 398
   Insn 5802: point = 393, n_alt = -1
  BB 317
   Insn 4556: point = 394, n_alt = -1
   Insn 4555: point = 394, n_alt = 0
   Insn 4554: point = 395, n_alt = 0
   Insn 4553: point = 397, n_alt = 0
   Insn 4552: point = 398, n_alt = 0
  BB 322
   Insn 5679: point = 399, n_alt = -1
   Insn 5032: point = 399, n_alt = 1
   Insn 5031: point = 399, n_alt = 8
   Insn 5030: point = 400, n_alt = 4
   Insn 5029: point = 401, n_alt = 1
   Insn 5028: point = 403, n_alt = 3
   Insn 5027: point = 405, n_alt = 0
   Insn 5026: point = 407, n_alt = 0
   Insn 5025: point = 409, n_alt = 0
   Insn 5024: point = 410, n_alt = 0
   Insn 5023: point = 412, n_alt = 0
   Insn 5022: point = 414, n_alt = 0
   Insn 5021: point = 415, n_alt = 7
   Insn 5020: point = 417, n_alt = 4
   Insn 5019: point = 418, n_alt = 1
   Insn 5018: point = 420, n_alt = 7
   Insn 5017: point = 422, n_alt = 0
   Insn 5016: point = 424, n_alt = 4
   Insn 5015: point = 425, n_alt = 3
   Insn 5014: point = 427, n_alt = 0
   Insn 5013: point = 429, n_alt = 0
   Insn 5012: point = 431, n_alt = 0
   Insn 5011: point = 433, n_alt = 4
   Insn 5010: point = 434, n_alt = 3
   Insn 5009: point = 436, n_alt = 0
   Insn 5008: point = 438, n_alt = 0
   Insn 5007: point = 440, n_alt = 0
   Insn 5006: point = 441, n_alt = 0
   Insn 5005: point = 443, n_alt = 0
   Insn 5004: point = 445, n_alt = 0
   Insn 5003: point = 446, n_alt = 7
   Insn 5002: point = 448, n_alt = 0
   Insn 5001: point = 450, n_alt = 4
   Insn 5000: point = 451, n_alt = 3
   Insn 4999: point = 453, n_alt = 0
   Insn 4998: point = 455, n_alt = 0
   Insn 4997: point = 457, n_alt = 0
   Insn 4996: point = 458, n_alt = 0
   Insn 4995: point = 460, n_alt = 0
   Insn 4994: point = 462, n_alt = 0
   Insn 4993: point = 463, n_alt = 8
   Insn 4992: point = 464, n_alt = 4
   Insn 4991: point = 465, n_alt = 1
   Insn 4990: point = 467, n_alt = 3
   Insn 4989: point = 469, n_alt = 0
   Insn 4988: point = 471, n_alt = 0
   Insn 4987: point = 473, n_alt = 0
   Insn 4986: point = 474, n_alt = 0
   Insn 4985: point = 476, n_alt = 0
   Insn 4984: point = 478, n_alt = 0
   Insn 4983: point = 479, n_alt = 7
   Insn 4982: point = 481, n_alt = 4
   Insn 4981: point = 482, n_alt = 3
   Insn 4980: point = 484, n_alt = 0
   Insn 4979: point = 486, n_alt = 0
   Insn 4978: point = 488, n_alt = 0
   Insn 4977: point = 489, n_alt = 0
   Insn 4976: point = 491, n_alt = 0
   Insn 4975: point = 493, n_alt = 0
   Insn 4974: point = 495, n_alt = 0
   Insn 4973: point = 496, n_alt = 1
   Insn 4972: point = 498, n_alt = 0
   Insn 4971: point = 500, n_alt = 0
   Insn 4970: point = 501, n_alt = 7
   Insn 4969: point = 503, n_alt = 4
   Insn 4968: point = 504, n_alt = 3
   Insn 4967: point = 506, n_alt = 0
   Insn 4966: point = 508, n_alt = 0
   Insn 4965: point = 510, n_alt = 0
   Insn 4964: point = 511, n_alt = 0
   Insn 4963: point = 513, n_alt = 0
   Insn 4962: point = 515, n_alt = 0
   Insn 4961: point = 517, n_alt = 0
   Insn 4960: point = 518, n_alt = 1
   Insn 4959: point = 520, n_alt = 0
   Insn 4958: point = 522, n_alt = 0
   Insn 4957: point = 523, n_alt = 8
   Insn 4956: point = 524, n_alt = 4
   Insn 4955: point = 525, n_alt = 1
   Insn 4954: point = 527, n_alt = 3
   Insn 4953: point = 529, n_alt = 0
   Insn 4952: point = 531, n_alt = 0
   Insn 4951: point = 533, n_alt = 0
   Insn 4950: point = 534, n_alt = 0
   Insn 4949: point = 536, n_alt = 0
   Insn 4948: point = 538, n_alt = 0
   Insn 4947: point = 539, n_alt = 7
   Insn 4946: point = 541, n_alt = 4
   Insn 4945: point = 542, n_alt = 3
   Insn 4944: point = 544, n_alt = 0
   Insn 4943: point = 546, n_alt = 0
   Insn 4942: point = 548, n_alt = 0
   Insn 4941: point = 549, n_alt = 0
   Insn 4940: point = 551, n_alt = 0
   Insn 4939: point = 553, n_alt = 0
   Insn 4938: point = 555, n_alt = 0
   Insn 4937: point = 556, n_alt = 1
   Insn 4936: point = 558, n_alt = 0
   Insn 4935: point = 560, n_alt = 0
   Insn 4934: point = 561, n_alt = -2
   Insn 4933: point = 563, n_alt = 2
   Insn 4932: point = 565, n_alt = 7
   Insn 4931: point = 566, n_alt = 7
   Insn 4930: point = 568, n_alt = 4
   Insn 4929: point = 569, n_alt = 3
   Insn 4928: point = 571, n_alt = 0
   Insn 4927: point = 573, n_alt = 0
   Insn 4926: point = 575, n_alt = 0
   Insn 4925: point = 576, n_alt = 0
   Insn 4924: point = 578, n_alt = 0
   Insn 4923: point = 580, n_alt = 0
   Insn 4922: point = 582, n_alt = 0
   Insn 4921: point = 583, n_alt = 1
   Insn 4920: point = 585, n_alt = 0
   Insn 4919: point = 587, n_alt = 0
   Insn 4918: point = 588, n_alt = 8
   Insn 4917: point = 589, n_alt = 4
   Insn 4916: point = 590, n_alt = 7
   Insn 4915: point = 592, n_alt = 0
   Insn 4914: point = 594, n_alt = 4
   Insn 4913: point = 595, n_alt = 3
   Insn 4912: point = 597, n_alt = 0
   Insn 4911: point = 599, n_alt = 0
   Insn 4910: point = 601, n_alt = 0
   Insn 4909: point = 602, n_alt = 0
   Insn 4908: point = 604, n_alt = 0
   Insn 4907: point = 606, n_alt = 0
   Insn 4906: point = 607, n_alt = 3
   Insn 4905: point = 609, n_alt = 0
   Insn 4904: point = 611, n_alt = 0
   Insn 4903: point = 613, n_alt = 0
   Insn 4902: point = 614, n_alt = 0
   Insn 4901: point = 616, n_alt = 0
   Insn 4900: point = 618, n_alt = 0
   Insn 4899: point = 620, n_alt = 0
   Insn 4898: point = 621, n_alt = 1
   Insn 4897: point = 623, n_alt = 0
   Insn 4896: point = 625, n_alt = 0
   Insn 4895: point = 626, n_alt = 8
   Insn 4894: point = 627, n_alt = 4
   Insn 4893: point = 628, n_alt = 7
   Insn 4892: point = 630, n_alt = 0
   Insn 4891: point = 632, n_alt = 4
   Insn 4890: point = 633, n_alt = 3
   Insn 4889: point = 635, n_alt = 0
   Insn 4888: point = 637, n_alt = 0
   Insn 4887: point = 639, n_alt = 0
   Insn 4886: point = 640, n_alt = 0
   Insn 4885: point = 642, n_alt = 0
   Insn 4884: point = 644, n_alt = 0
   Insn 4883: point = 645, n_alt = 3
   Insn 4882: point = 647, n_alt = 0
   Insn 4881: point = 649, n_alt = 0
   Insn 4880: point = 651, n_alt = 0
   Insn 4879: point = 652, n_alt = 0
   Insn 4878: point = 654, n_alt = 0
   Insn 4877: point = 656, n_alt = 0
   Insn 4876: point = 658, n_alt = 0
   Insn 4875: point = 659, n_alt = 1
   Insn 4874: point = 661, n_alt = 0
   Insn 4873: point = 663, n_alt = 0
   Insn 4872: point = 664, n_alt = 1
   Insn 4871: point = 665, n_alt = 0
   Insn 4870: point = 667, n_alt = 0
   Insn 4869: point = 669, n_alt = 4
   Insn 4868: point = 670, n_alt = 3
   Insn 4867: point = 672, n_alt = 0
   Insn 4866: point = 674, n_alt = 0
   Insn 4865: point = 676, n_alt = 0
   Insn 4864: point = 677, n_alt = 0
   Insn 4863: point = 679, n_alt = 0
   Insn 4862: point = 681, n_alt = 0
  BB 320
   Insn 5677: point = 683, n_alt = -1
   Insn 4597: point = 683, n_alt = 8
   Insn 4596: point = 684, n_alt = 7
   Insn 4595: point = 685, n_alt = 4
   Insn 4594: point = 686, n_alt = 3
   Insn 4593: point = 688, n_alt = 0
   Insn 4592: point = 690, n_alt = 0
   Insn 4591: point = 692, n_alt = 0
   Insn 4590: point = 693, n_alt = 0
   Insn 4589: point = 695, n_alt = 0
   Insn 4588: point = 697, n_alt = 0
   Insn 4587: point = 698, n_alt = 8
   Insn 4586: point = 699, n_alt = 7
   Insn 4585: point = 700, n_alt = 4
   Insn 4584: point = 701, n_alt = 3
   Insn 4583: point = 703, n_alt = 0
   Insn 4582: point = 705, n_alt = 0
   Insn 4581: point = 707, n_alt = 0
   Insn 4580: point = 708, n_alt = 0
   Insn 4579: point = 710, n_alt = 0
   Insn 4578: point = 712, n_alt = 0
  BB 321
   Insn 4859: point = 714, n_alt = 8
   Insn 4858: point = 715, n_alt = 4
   Insn 4857: point = 716, n_alt = 1
   Insn 4856: point = 718, n_alt = 3
   Insn 4855: point = 720, n_alt = 0
   Insn 4854: point = 722, n_alt = 0
   Insn 4853: point = 724, n_alt = 0
   Insn 4852: point = 725, n_alt = 0
   Insn 4851: point = 727, n_alt = 0
   Insn 4850: point = 729, n_alt = 0
   Insn 4849: point = 730, n_alt = 1
   Insn 4848: point = 732, n_alt = 1
   Insn 4847: point = 734, n_alt = 7
   Insn 4846: point = 735, n_alt = 7
   Insn 4845: point = 736, n_alt = 4
   Insn 4844: point = 737, n_alt = 9
   Insn 4843: point = 738, n_alt = 0
   Insn 4842: point = 738, n_alt = -2
   Insn 4841: point = 739, n_alt = 7
   Insn 4840: point = 739, n_alt = 7
   Insn 4839: point = 740, n_alt = 4
   Insn 4838: point = 741, n_alt = 9
   Insn 4837: point = 742, n_alt = 0
   Insn 4836: point = 742, n_alt = -2
   Insn 4835: point = 743, n_alt = 7
   Insn 4834: point = 743, n_alt = -2
   Insn 4833: point = 745, n_alt = 2
   Insn 4832: point = 747, n_alt = -2
   Insn 4831: point = 749, n_alt = 1
   Insn 4830: point = 751, n_alt = 7
   Insn 4829: point = 753, n_alt = 4
   Insn 4828: point = 754, n_alt = 1
   Insn 4827: point = 756, n_alt = 7
   Insn 4826: point = 758, n_alt = 0
   Insn 4825: point = 760, n_alt = 4
   Insn 4824: point = 761, n_alt = 3
   Insn 4823: point = 763, n_alt = 0
   Insn 4822: point = 765, n_alt = 0
   Insn 4821: point = 767, n_alt = 0
   Insn 4820: point = 769, n_alt = 4
   Insn 4819: point = 770, n_alt = 3
   Insn 4818: point = 772, n_alt = 0
   Insn 4817: point = 774, n_alt = 0
   Insn 4816: point = 776, n_alt = 0
   Insn 4815: point = 777, n_alt = 0
   Insn 4814: point = 779, n_alt = 0
   Insn 4813: point = 781, n_alt = 0
   Insn 4812: point = 782, n_alt = 7
   Insn 4811: point = 784, n_alt = 0
   Insn 4810: point = 786, n_alt = 4
   Insn 4809: point = 787, n_alt = 3
   Insn 4808: point = 789, n_alt = 0
   Insn 4807: point = 791, n_alt = 0
   Insn 4806: point = 793, n_alt = 0
   Insn 4805: point = 794, n_alt = 0
   Insn 4804: point = 796, n_alt = 0
   Insn 4803: point = 798, n_alt = 0
   Insn 4802: point = 799, n_alt = 7
   Insn 4801: point = 801, n_alt = 0
   Insn 4800: point = 803, n_alt = 4
   Insn 4799: point = 804, n_alt = 3
   Insn 4798: point = 806, n_alt = 0
   Insn 4797: point = 808, n_alt = 0
   Insn 4796: point = 810, n_alt = 0
   Insn 4795: point = 811, n_alt = 0
   Insn 4794: point = 813, n_alt = 0
   Insn 4793: point = 815, n_alt = 0
   Insn 4792: point = 817, n_alt = 0
   Insn 4791: point = 818, n_alt = 1
   Insn 4790: point = 820, n_alt = 0
   Insn 4789: point = 822, n_alt = 0
   Insn 4788: point = 823, n_alt = 4
   Insn 4787: point = 824, n_alt = 9
   Insn 4786: point = 825, n_alt = 0
   Insn 4785: point = 825, n_alt = -2
   Insn 4784: point = 826, n_alt = 7
   Insn 4783: point = 826, n_alt = -2
   Insn 4782: point = 828, n_alt = 2
   Insn 4781: point = 830, n_alt = 7
   Insn 4780: point = 832, n_alt = 0
   Insn 4779: point = 834, n_alt = 4
   Insn 4778: point = 835, n_alt = 3
   Insn 4777: point = 837, n_alt = 0
   Insn 4776: point = 839, n_alt = 0
   Insn 4775: point = 841, n_alt = 0
   Insn 4774: point = 842, n_alt = 0
   Insn 4773: point = 844, n_alt = 0
   Insn 4772: point = 846, n_alt = 0
   Insn 4771: point = 847, n_alt = 7
   Insn 4770: point = 849, n_alt = 0
   Insn 4769: point = 851, n_alt = 4
   Insn 4768: point = 852, n_alt = 3
   Insn 4767: point = 854, n_alt = 0
   Insn 4766: point = 856, n_alt = 0
   Insn 4765: point = 858, n_alt = 0
   Insn 4764: point = 859, n_alt = 0
   Insn 4763: point = 861, n_alt = 0
   Insn 4762: point = 863, n_alt = 0
   Insn 4761: point = 864, n_alt = 8
   Insn 4760: point = 865, n_alt = 4
   Insn 4759: point = 866, n_alt = 1
   Insn 4758: point = 868, n_alt = 3
   Insn 4757: point = 870, n_alt = 0
   Insn 4756: point = 872, n_alt = 0
   Insn 4755: point = 874, n_alt = 0
   Insn 4754: point = 875, n_alt = 0
   Insn 4753: point = 877, n_alt = 0
   Insn 4752: point = 879, n_alt = 0
   Insn 4751: point = 880, n_alt = 1
   Insn 4750: point = 882, n_alt = 1
   Insn 4749: point = 884, n_alt = 7
   Insn 4748: point = 885, n_alt = 7
   Insn 4747: point = 886, n_alt = 4
   Insn 4746: point = 887, n_alt = 9
   Insn 4745: point = 888, n_alt = 0
   Insn 4744: point = 888, n_alt = -2
   Insn 4743: point = 889, n_alt = 7
   Insn 4742: point = 889, n_alt = 7
   Insn 4741: point = 890, n_alt = 4
   Insn 4740: point = 891, n_alt = 9
   Insn 4739: point = 892, n_alt = 0
   Insn 4738: point = 892, n_alt = -2
   Insn 4737: point = 893, n_alt = 7
   Insn 4736: point = 893, n_alt = -2
   Insn 4735: point = 895, n_alt = 2
   Insn 4734: point = 897, n_alt = -2
   Insn 4733: point = 899, n_alt = 1
   Insn 4732: point = 901, n_alt = 7
   Insn 4731: point = 903, n_alt = 4
   Insn 4730: point = 904, n_alt = 1
   Insn 4729: point = 906, n_alt = 7
   Insn 4728: point = 908, n_alt = 0
   Insn 4727: point = 910, n_alt = 4
   Insn 4726: point = 911, n_alt = 3
   Insn 4725: point = 913, n_alt = 0
   Insn 4724: point = 915, n_alt = 0
   Insn 4723: point = 917, n_alt = 0
   Insn 4722: point = 919, n_alt = 4
   Insn 4721: point = 920, n_alt = 3
   Insn 4720: point = 922, n_alt = 0
   Insn 4719: point = 924, n_alt = 0
   Insn 4718: point = 926, n_alt = 0
   Insn 4717: point = 927, n_alt = 0
   Insn 4716: point = 929, n_alt = 0
   Insn 4715: point = 931, n_alt = 0
   Insn 4714: point = 932, n_alt = 7
   Insn 4713: point = 934, n_alt = 0
   Insn 4712: point = 936, n_alt = 4
   Insn 4711: point = 937, n_alt = 3
   Insn 4710: point = 939, n_alt = 0
   Insn 4709: point = 941, n_alt = 0
   Insn 4708: point = 943, n_alt = 0
   Insn 4707: point = 944, n_alt = 0
   Insn 4706: point = 946, n_alt = 0
   Insn 4705: point = 948, n_alt = 0
   Insn 4704: point = 949, n_alt = 7
   Insn 4703: point = 951, n_alt = 0
   Insn 4702: point = 953, n_alt = 4
   Insn 4701: point = 954, n_alt = 3
   Insn 4700: point = 956, n_alt = 0
   Insn 4699: point = 958, n_alt = 0
   Insn 4698: point = 960, n_alt = 0
   Insn 4697: point = 961, n_alt = 0
   Insn 4696: point = 963, n_alt = 0
   Insn 4695: point = 965, n_alt = 0
   Insn 4694: point = 967, n_alt = 0
   Insn 4693: point = 968, n_alt = 1
   Insn 4692: point = 970, n_alt = 0
   Insn 4691: point = 972, n_alt = 0
   Insn 4690: point = 973, n_alt = 4
   Insn 4689: point = 974, n_alt = 9
   Insn 4688: point = 975, n_alt = 0
   Insn 4687: point = 975, n_alt = -2
   Insn 4686: point = 976, n_alt = 7
   Insn 4685: point = 976, n_alt = -2
   Insn 4684: point = 978, n_alt = 2
   Insn 4683: point = 980, n_alt = 7
   Insn 4682: point = 982, n_alt = 0
   Insn 4681: point = 984, n_alt = 4
   Insn 4680: point = 985, n_alt = 3
   Insn 4679: point = 987, n_alt = 0
   Insn 4678: point = 989, n_alt = 0
   Insn 4677: point = 991, n_alt = 0
   Insn 4676: point = 992, n_alt = 0
   Insn 4675: point = 994, n_alt = 0
   Insn 4674: point = 996, n_alt = 0
   Insn 4673: point = 997, n_alt = 7
   Insn 4672: point = 999, n_alt = 0
   Insn 4671: point = 1001, n_alt = 4
   Insn 4670: point = 1002, n_alt = 3
   Insn 4669: point = 1004, n_alt = 0
   Insn 4668: point = 1006, n_alt = 0
   Insn 4667: point = 1008, n_alt = 0
   Insn 4666: point = 1009, n_alt = 0
   Insn 4665: point = 1011, n_alt = 0
   Insn 4664: point = 1013, n_alt = 0
   Insn 4663: point = 1014, n_alt = 8
   Insn 4662: point = 1015, n_alt = 1
   Insn 4661: point = 1017, n_alt = 7
   Insn 4660: point = 1018, n_alt = 1
   Insn 4659: point = 1020, n_alt = 7
   Insn 4658: point = 1022, n_alt = 0
   Insn 4657: point = 1024, n_alt = 4
   Insn 4656: point = 1025, n_alt = 3
   Insn 4655: point = 1027, n_alt = 0
   Insn 4654: point = 1029, n_alt = 0
   Insn 4653: point = 1031, n_alt = 0
   Insn 4652: point = 1032, n_alt = 0
   Insn 4651: point = 1034, n_alt = 0
   Insn 4650: point = 1036, n_alt = 0
   Insn 4649: point = 1037, n_alt = -2
   Insn 4648: point = 1039, n_alt = 2
   Insn 4647: point = 1041, n_alt = 7
   Insn 4646: point = 1042, n_alt = 7
   Insn 4645: point = 1044, n_alt = 0
   Insn 4644: point = 1046, n_alt = 4
   Insn 4643: point = 1047, n_alt = 3
   Insn 4642: point = 1049, n_alt = 0
   Insn 4641: point = 1051, n_alt = 0
   Insn 4640: point = 1053, n_alt = 0
   Insn 4639: point = 1054, n_alt = 0
   Insn 4638: point = 1056, n_alt = 0
   Insn 4637: point = 1058, n_alt = 0
   Insn 4636: point = 1059, n_alt = 8
   Insn 4635: point = 1060, n_alt = 1
   Insn 4634: point = 1062, n_alt = 7
   Insn 4633: point = 1063, n_alt = 1
   Insn 4632: point = 1065, n_alt = 7
   Insn 4631: point = 1067, n_alt = 0
   Insn 4630: point = 1069, n_alt = 4
   Insn 4629: point = 1070, n_alt = 3
   Insn 4628: point = 1072, n_alt = 0
   Insn 4627: point = 1074, n_alt = 0
   Insn 4626: point = 1076, n_alt = 0
   Insn 4625: point = 1077, n_alt = 0
   Insn 4624: point = 1079, n_alt = 0
   Insn 4623: point = 1081, n_alt = 0
   Insn 4622: point = 1082, n_alt = 7
   Insn 4621: point = 1084, n_alt = 0
   Insn 4620: point = 1086, n_alt = 4
   Insn 4619: point = 1087, n_alt = 3
   Insn 4618: point = 1089, n_alt = 0
   Insn 4617: point = 1091, n_alt = 0
   Insn 4616: point = 1093, n_alt = 0
   Insn 4615: point = 1094, n_alt = 0
   Insn 4614: point = 1096, n_alt = 0
   Insn 4613: point = 1098, n_alt = 0
   Insn 4612: point = 1099, n_alt = 1
   Insn 4611: point = 1100, n_alt = 0
   Insn 4610: point = 1102, n_alt = 0
   Insn 4609: point = 1104, n_alt = 4
   Insn 4608: point = 1105, n_alt = 3
   Insn 4607: point = 1107, n_alt = 0
   Insn 4606: point = 1109, n_alt = 0
   Insn 4605: point = 1111, n_alt = 0
   Insn 4604: point = 1112, n_alt = 0
   Insn 4603: point = 1114, n_alt = 0
   Insn 4602: point = 1116, n_alt = 0
  BB 319
   Insn 4573: point = 1118, n_alt = -1
   Insn 4572: point = 1118, n_alt = 1
   Insn 4571: point = 1119, n_alt = 7
  BB 318
   Insn 4570: point = 1121, n_alt = -1
   Insn 4569: point = 1121, n_alt = 1
   Insn 4568: point = 1122, n_alt = 7
   Insn 4567: point = 1123, n_alt = 7
   Insn 4566: point = 1125, n_alt = 0
   Insn 4565: point = 1127, n_alt = 4
   Insn 4564: point = 1128, n_alt = 3
   Insn 4563: point = 1130, n_alt = 0
   Insn 4562: point = 1132, n_alt = 0
   Insn 4561: point = 1134, n_alt = 0
   Insn 4560: point = 1135, n_alt = 0
   Insn 4559: point = 1137, n_alt = 0
   Insn 4558: point = 1139, n_alt = 0
  BB 316
   Insn 4550: point = 1141, n_alt = 1
  BB 314
   Insn 4542: point = 1142, n_alt = 1
   Insn 4541: point = 1143, n_alt = 0
   Insn 4540: point = 1144, n_alt = 0
   Insn 4539: point = 1145, n_alt = 8
   Insn 4538: point = 1146, n_alt = 2
   Insn 4537: point = 1148, n_alt = 7
   Insn 4536: point = 1149, n_alt = -2
   Insn 4535: point = 1151, n_alt = 1
   Insn 4534: point = 1153, n_alt = 7
   Insn 4533: point = 1154, n_alt = 1
   Insn 4532: point = 1156, n_alt = 0
  BB 313
   Insn 4530: point = 1157, n_alt = -1
   Insn 4529: point = 1157, n_alt = 0
   Insn 4528: point = 1158, n_alt = 0
  BB 373
   Insn 5727: point = 1159, n_alt = -1
  BB 108
   Insn 1372: point = 1159, n_alt = -1
   Insn 1371: point = 1159, n_alt = 0
   Insn 1370: point = 1160, n_alt = 0
   Insn 1369: point = 1162, n_alt = 0
   Insn 1368: point = 1163, n_alt = 0
   Insn 1367: point = 1164, n_alt = 0
  BB 312
   Insn 5675: point = 1165, n_alt = -1
   Insn 4522: point = 1165, n_alt = 1
   Insn 4521: point = 1166, n_alt = 0
   Insn 4520: point = 1168, n_alt = 0
  BB 311
   Insn 4517: point = 1169, n_alt = 0
   Insn 4516: point = 1169, n_alt = 3
   Insn 4515: point = 1169, n_alt = 2
   Insn 4514: point = 1169, n_alt = 2
   Insn 4513: point = 1169, n_alt = -2
   Insn 4512: point = 1170, n_alt = -2
   Insn 4511: point = 1171, n_alt = -2
   Insn 4510: point = 1172, n_alt = -2
   Insn 4509: point = 1173, n_alt = 3
   Insn 4508: point = 1174, n_alt = 3
   Insn 4507: point = 1175, n_alt = 3
   Insn 4506: point = 1176, n_alt = 3
  BB 310
   Insn 4503: point = 1177, n_alt = 1
  BB 309
   Insn 4501: point = 1177, n_alt = -1
   Insn 4500: point = 1177, n_alt = 0
   Insn 4499: point = 1178, n_alt = 0
   Insn 4498: point = 1179, n_alt = 1
   Insn 4497: point = 1180, n_alt = 0
  BB 308
   Insn 4494: point = 1181, n_alt = 1
  BB 307
   Insn 4492: point = 1181, n_alt = -1
   Insn 4491: point = 1181, n_alt = 0
   Insn 4490: point = 1182, n_alt = 0
  BB 305
   Insn 5673: point = 1183, n_alt = -1
   Insn 4480: point = 1183, n_alt = 1
   Insn 4479: point = 1184, n_alt = 1
   Insn 4478: point = 1186, n_alt = 0
  BB 306
   Insn 4487: point = 1187, n_alt = 1
   Insn 4486: point = 1188, n_alt = 1
   Insn 4485: point = 1190, n_alt = 0
  BB 304
   Insn 4476: point = 1191, n_alt = -1
   Insn 4475: point = 1191, n_alt = 1
   Insn 4474: point = 1191, n_alt = 1
   Insn 4473: point = 1191, n_alt = 1
   Insn 4472: point = 1192, n_alt = 0
   Insn 4471: point = 1193, n_alt = 1
   Insn 4470: point = 1194, n_alt = 0
   Insn 4469: point = 1196, n_alt = 0
   Insn 4468: point = 1197, n_alt = 1
   Insn 4467: point = 1198, n_alt = 0
   Insn 4466: point = 1200, n_alt = 7
   Insn 4465: point = 1201, n_alt = 1
   Insn 4464: point = 1202, n_alt = 0
   Insn 4463: point = 1203, n_alt = 0
   Insn 4462: point = 1204, n_alt = 1
   Insn 5899: point = 1205, n_alt = -2
   Insn 4461: point = 1207, n_alt = 0
   Insn 5898: point = 1208, n_alt = -2
   Insn 4460: point = 1210, n_alt = 2
   Insn 4459: point = 1211, n_alt = 2
   Insn 4458: point = 1212, n_alt = 2
   Insn 4457: point = 1213, n_alt = 0
   Insn 4456: point = 1213, n_alt = 0
   Insn 4455: point = 1213, n_alt = 3
   Insn 4454: point = 1213, n_alt = 2
   Insn 4453: point = 1213, n_alt = 2
   Insn 4452: point = 1213, n_alt = 4
   Insn 4451: point = 1213, n_alt = 4
   Insn 4450: point = 1213, n_alt = -2
   Insn 4449: point = 1214, n_alt = -2
   Insn 4448: point = 1215, n_alt = 0
   Insn 4447: point = 1215, n_alt = 0
   Insn 4446: point = 1215, n_alt = 3
   Insn 4445: point = 1216, n_alt = 3
  BB 395
   Insn 5793: point = 1217, n_alt = -1
  BB 299
   Insn 4404: point = 1217, n_alt = -1
   Insn 4403: point = 1217, n_alt = 0
   Insn 4402: point = 1218, n_alt = 0
   Insn 4401: point = 1220, n_alt = 0
   Insn 4400: point = 1221, n_alt = 0
  BB 303
   Insn 5671: point = 1222, n_alt = -1
   Insn 4439: point = 1222, n_alt = 1
  BB 396
   Insn 5796: point = 1223, n_alt = -1
  BB 301
   Insn 4412: point = 1224, n_alt = -1
   Insn 4411: point = 1224, n_alt = 0
   Insn 4410: point = 1225, n_alt = 0
   Insn 4409: point = 1227, n_alt = 0
   Insn 4408: point = 1228, n_alt = 0
  BB 302
   Insn 5669: point = 1229, n_alt = -1
   Insn 4433: point = 1229, n_alt = 1
   Insn 4432: point = 1229, n_alt = 8
   Insn 4431: point = 1230, n_alt = 4
   Insn 4430: point = 1231, n_alt = 1
   Insn 4429: point = 1233, n_alt = 3
   Insn 4428: point = 1235, n_alt = 0
   Insn 4427: point = 1237, n_alt = 1
   Insn 4426: point = 1239, n_alt = 0
   Insn 4425: point = 1240, n_alt = 0
   Insn 4424: point = 1242, n_alt = 1
   Insn 4423: point = 1244, n_alt = 0
   Insn 4422: point = 1245, n_alt = 7
   Insn 4421: point = 1247, n_alt = 4
   Insn 4420: point = 1248, n_alt = 3
   Insn 4419: point = 1250, n_alt = 0
   Insn 4418: point = 1252, n_alt = 1
   Insn 4417: point = 1254, n_alt = 0
   Insn 4416: point = 1255, n_alt = 0
   Insn 4415: point = 1257, n_alt = 1
   Insn 4414: point = 1259, n_alt = 0
  BB 300
   Insn 4406: point = 1261, n_alt = 1
  BB 298
   Insn 4398: point = 1262, n_alt = 1
   Insn 4397: point = 1263, n_alt = 0
   Insn 4396: point = 1264, n_alt = 0
  BB 296
   Insn 5667: point = 1265, n_alt = -1
   Insn 4387: point = 1265, n_alt = 8
   Insn 4386: point = 1266, n_alt = 2
   Insn 4385: point = 1268, n_alt = 7
   Insn 4384: point = 1269, n_alt = 7
  BB 297
   Insn 4393: point = 1270, n_alt = 8
   Insn 4392: point = 1271, n_alt = 7
  BB 295
   Insn 4379: point = 1272, n_alt = -1
   Insn 4378: point = 1272, n_alt = 1
   Insn 4377: point = 1273, n_alt = 7
   Insn 4376: point = 1274, n_alt = 7
   Insn 4375: point = 1275, n_alt = 1
   Insn 4374: point = 1276, n_alt = 0
   Insn 4373: point = 1278, n_alt = 0
   Insn 4372: point = 1280, n_alt = 0
   Insn 4371: point = 1282, n_alt = 0
   Insn 4370: point = 1284, n_alt = 0
   Insn 4369: point = 1286, n_alt = 0
   Insn 4368: point = 1287, n_alt = -2
   Insn 4367: point = 1289, n_alt = -2
   Insn 4366: point = 1291, n_alt = 0
   Insn 4365: point = 1293, n_alt = 0
   Insn 4364: point = 1294, n_alt = -2
   Insn 4363: point = 1296, n_alt = 0
   Insn 4362: point = 1298, n_alt = -2
   Insn 4361: point = 1299, n_alt = 1
   Insn 4360: point = 1301, n_alt = 0
   Insn 4359: point = 1302, n_alt = 1
   Insn 4358: point = 1303, n_alt = 0
   Insn 4357: point = 1305, n_alt = 0
   Insn 4356: point = 1306, n_alt = 0
   Insn 4355: point = 1306, n_alt = 0
   Insn 4354: point = 1306, n_alt = 3
   Insn 4353: point = 1306, n_alt = 4
   Insn 4352: point = 1306, n_alt = 2
   Insn 4351: point = 1306, n_alt = 2
   Insn 4350: point = 1306, n_alt = 2
   Insn 4349: point = 1306, n_alt = -2
   Insn 4348: point = 1307, n_alt = -2
   Insn 4347: point = 1308, n_alt = 0
   Insn 4346: point = 1308, n_alt = 0
   Insn 4345: point = 1308, n_alt = 3
   Insn 4344: point = 1309, n_alt = 3
   Insn 4343: point = 1310, n_alt = 1
   Insn 4342: point = 1311, n_alt = 0
   Insn 4341: point = 1313, n_alt = 0
   Insn 4340: point = 1315, n_alt = 0
   Insn 4339: point = 1315, n_alt = -2
   Insn 4338: point = 1316, n_alt = 3
   Insn 4337: point = 1318, n_alt = 0
  BB 294
   Insn 4335: point = 1319, n_alt = -1
   Insn 4334: point = 1319, n_alt = 0
   Insn 4333: point = 1320, n_alt = 0
   Insn 4332: point = 1322, n_alt = 0
   Insn 4331: point = 1324, n_alt = 0
   Insn 4330: point = 1326, n_alt = 0
   Insn 4329: point = 1328, n_alt = 0
   Insn 4328: point = 1330, n_alt = 0
   Insn 4327: point = 1331, n_alt = -2
   Insn 4326: point = 1333, n_alt = -2
   Insn 4325: point = 1335, n_alt = 0
   Insn 4324: point = 1337, n_alt = 0
   Insn 4323: point = 1338, n_alt = -2
   Insn 4322: point = 1340, n_alt = 0
   Insn 4321: point = 1342, n_alt = -2
   Insn 4320: point = 1343, n_alt = 1
   Insn 4319: point = 1345, n_alt = 0
  BB 293
   Insn 4317: point = 1346, n_alt = -1
   Insn 4316: point = 1346, n_alt = 0
   Insn 4315: point = 1347, n_alt = 0
  BB 292
   Insn 4312: point = 1348, n_alt = 0
   Insn 4311: point = 1348, n_alt = 3
   Insn 4310: point = 1348, n_alt = 2
   Insn 4309: point = 1348, n_alt = 2
   Insn 4308: point = 1348, n_alt = -2
   Insn 4307: point = 1349, n_alt = -2
   Insn 4306: point = 1350, n_alt = -2
   Insn 4305: point = 1351, n_alt = -2
   Insn 4304: point = 1352, n_alt = 3
   Insn 4303: point = 1353, n_alt = 3
   Insn 4302: point = 1354, n_alt = 3
   Insn 4301: point = 1355, n_alt = 3
  BB 291
   Insn 4298: point = 1356, n_alt = 1
  BB 290
   Insn 4296: point = 1356, n_alt = -1
   Insn 4295: point = 1356, n_alt = 0
   Insn 4294: point = 1357, n_alt = 0
   Insn 4293: point = 1358, n_alt = 1
   Insn 4292: point = 1359, n_alt = 0
  BB 289
   Insn 4289: point = 1360, n_alt = 1
  BB 288
   Insn 4287: point = 1360, n_alt = -1
   Insn 4286: point = 1360, n_alt = 0
   Insn 4285: point = 1361, n_alt = 0
  BB 286
   Insn 5664: point = 1362, n_alt = -1
   Insn 4275: point = 1362, n_alt = 1
   Insn 4274: point = 1363, n_alt = 1
   Insn 4273: point = 1365, n_alt = 0
  BB 287
   Insn 4282: point = 1366, n_alt = 1
   Insn 4281: point = 1367, n_alt = 1
   Insn 4280: point = 1369, n_alt = 0
  BB 285
   Insn 4271: point = 1370, n_alt = -1
   Insn 4270: point = 1370, n_alt = 1
   Insn 4269: point = 1370, n_alt = 1
   Insn 4268: point = 1370, n_alt = 1
   Insn 4267: point = 1371, n_alt = 0
   Insn 4266: point = 1372, n_alt = 1
   Insn 4265: point = 1373, n_alt = 0
   Insn 4264: point = 1375, n_alt = 0
   Insn 4263: point = 1376, n_alt = 1
   Insn 4262: point = 1377, n_alt = 0
   Insn 4261: point = 1379, n_alt = 7
   Insn 4260: point = 1380, n_alt = 1
   Insn 4259: point = 1381, n_alt = 0
   Insn 4258: point = 1382, n_alt = 0
   Insn 4257: point = 1383, n_alt = 1
   Insn 5897: point = 1384, n_alt = -2
   Insn 4256: point = 1386, n_alt = 0
   Insn 5896: point = 1387, n_alt = -2
   Insn 4255: point = 1389, n_alt = 2
   Insn 4254: point = 1390, n_alt = 2
   Insn 4253: point = 1391, n_alt = 2
   Insn 4252: point = 1392, n_alt = 0
   Insn 4251: point = 1392, n_alt = 0
   Insn 4250: point = 1392, n_alt = 3
   Insn 4249: point = 1392, n_alt = 2
   Insn 4248: point = 1392, n_alt = 2
   Insn 4247: point = 1392, n_alt = 4
   Insn 4246: point = 1392, n_alt = 4
   Insn 4245: point = 1392, n_alt = -2
   Insn 4244: point = 1393, n_alt = -2
   Insn 4243: point = 1394, n_alt = 0
   Insn 4242: point = 1394, n_alt = 0
   Insn 4241: point = 1394, n_alt = 3
   Insn 4240: point = 1395, n_alt = 3
  BB 393
   Insn 5787: point = 1396, n_alt = -1
  BB 280
   Insn 4199: point = 1396, n_alt = -1
   Insn 4198: point = 1396, n_alt = 0
   Insn 4197: point = 1397, n_alt = 0
   Insn 4196: point = 1399, n_alt = 0
   Insn 4195: point = 1400, n_alt = 0
  BB 284
   Insn 5662: point = 1401, n_alt = -1
   Insn 4234: point = 1401, n_alt = 1
  BB 394
   Insn 5790: point = 1402, n_alt = -1
  BB 282
   Insn 4207: point = 1403, n_alt = -1
   Insn 4206: point = 1403, n_alt = 0
   Insn 4205: point = 1404, n_alt = 0
   Insn 4204: point = 1406, n_alt = 0
   Insn 4203: point = 1407, n_alt = 0
  BB 283
   Insn 5660: point = 1408, n_alt = -1
   Insn 4228: point = 1408, n_alt = 1
   Insn 4227: point = 1408, n_alt = 8
   Insn 4226: point = 1409, n_alt = 4
   Insn 4225: point = 1410, n_alt = 1
   Insn 4224: point = 1412, n_alt = 3
   Insn 4223: point = 1414, n_alt = 0
   Insn 4222: point = 1416, n_alt = 1
   Insn 4221: point = 1418, n_alt = 0
   Insn 4220: point = 1419, n_alt = 0
   Insn 4219: point = 1421, n_alt = 1
   Insn 4218: point = 1423, n_alt = 0
   Insn 4217: point = 1424, n_alt = 7
   Insn 4216: point = 1426, n_alt = 4
   Insn 4215: point = 1427, n_alt = 3
   Insn 4214: point = 1429, n_alt = 0
   Insn 4213: point = 1431, n_alt = 1
   Insn 4212: point = 1433, n_alt = 0
   Insn 4211: point = 1434, n_alt = 0
   Insn 4210: point = 1436, n_alt = 1
   Insn 4209: point = 1438, n_alt = 0
  BB 281
   Insn 4201: point = 1440, n_alt = 1
  BB 279
   Insn 4193: point = 1441, n_alt = 1
   Insn 4192: point = 1442, n_alt = 0
   Insn 4191: point = 1443, n_alt = 0
  BB 277
   Insn 5658: point = 1444, n_alt = -1
   Insn 4182: point = 1444, n_alt = 8
   Insn 4181: point = 1445, n_alt = 2
   Insn 4180: point = 1447, n_alt = 7
   Insn 4179: point = 1448, n_alt = 7
  BB 278
   Insn 4188: point = 1449, n_alt = 8
   Insn 4187: point = 1450, n_alt = 7
  BB 276
   Insn 4174: point = 1451, n_alt = -1
   Insn 4173: point = 1451, n_alt = 1
   Insn 4172: point = 1452, n_alt = 7
   Insn 4171: point = 1453, n_alt = 7
   Insn 4170: point = 1454, n_alt = 1
   Insn 4169: point = 1455, n_alt = 0
   Insn 4168: point = 1457, n_alt = 0
   Insn 4167: point = 1459, n_alt = 0
   Insn 4166: point = 1461, n_alt = 0
   Insn 4165: point = 1463, n_alt = 0
   Insn 4164: point = 1465, n_alt = 0
   Insn 4163: point = 1466, n_alt = -2
   Insn 4162: point = 1468, n_alt = -2
   Insn 4161: point = 1470, n_alt = 0
   Insn 4160: point = 1472, n_alt = 0
   Insn 4159: point = 1473, n_alt = -2
   Insn 4158: point = 1475, n_alt = 0
   Insn 4157: point = 1477, n_alt = -2
   Insn 4156: point = 1478, n_alt = 1
   Insn 4155: point = 1480, n_alt = 0
   Insn 4154: point = 1481, n_alt = 1
   Insn 4153: point = 1482, n_alt = 0
   Insn 4152: point = 1484, n_alt = 0
   Insn 4151: point = 1485, n_alt = 0
   Insn 4150: point = 1485, n_alt = 0
   Insn 4149: point = 1485, n_alt = 3
   Insn 4148: point = 1485, n_alt = 4
   Insn 4147: point = 1485, n_alt = 2
   Insn 4146: point = 1485, n_alt = 2
   Insn 4145: point = 1485, n_alt = 2
   Insn 4144: point = 1485, n_alt = -2
   Insn 4143: point = 1486, n_alt = -2
   Insn 4142: point = 1487, n_alt = 0
   Insn 4141: point = 1487, n_alt = 0
   Insn 4140: point = 1487, n_alt = 3
   Insn 4139: point = 1488, n_alt = 3
   Insn 4138: point = 1489, n_alt = 1
   Insn 4137: point = 1490, n_alt = 0
   Insn 4136: point = 1492, n_alt = 0
   Insn 4135: point = 1494, n_alt = 0
   Insn 4134: point = 1494, n_alt = -2
   Insn 4133: point = 1495, n_alt = 3
   Insn 4132: point = 1497, n_alt = 0
  BB 275
   Insn 4130: point = 1498, n_alt = -1
   Insn 4129: point = 1498, n_alt = 0
   Insn 4128: point = 1499, n_alt = 0
   Insn 4127: point = 1501, n_alt = 0
   Insn 4126: point = 1503, n_alt = 0
   Insn 4125: point = 1505, n_alt = 0
   Insn 4124: point = 1507, n_alt = 0
   Insn 4123: point = 1509, n_alt = 0
   Insn 4122: point = 1510, n_alt = -2
   Insn 4121: point = 1512, n_alt = -2
   Insn 4120: point = 1514, n_alt = 0
   Insn 4119: point = 1516, n_alt = 0
   Insn 4118: point = 1517, n_alt = -2
   Insn 4117: point = 1519, n_alt = 0
   Insn 4116: point = 1521, n_alt = -2
   Insn 4115: point = 1522, n_alt = 1
   Insn 4114: point = 1524, n_alt = 0
  BB 274
   Insn 4112: point = 1525, n_alt = -1
   Insn 4111: point = 1525, n_alt = 0
   Insn 4110: point = 1526, n_alt = 0
  BB 273
   Insn 4107: point = 1527, n_alt = 0
   Insn 4106: point = 1527, n_alt = 3
   Insn 4105: point = 1527, n_alt = 2
   Insn 4104: point = 1527, n_alt = 2
   Insn 4103: point = 1527, n_alt = -2
   Insn 4102: point = 1528, n_alt = -2
   Insn 4101: point = 1529, n_alt = -2
   Insn 4100: point = 1530, n_alt = -2
   Insn 4099: point = 1531, n_alt = 3
   Insn 4098: point = 1532, n_alt = 3
   Insn 4097: point = 1533, n_alt = 3
   Insn 4096: point = 1534, n_alt = 3
  BB 272
   Insn 4093: point = 1535, n_alt = 1
  BB 271
   Insn 4091: point = 1535, n_alt = -1
   Insn 4090: point = 1535, n_alt = 0
   Insn 4089: point = 1536, n_alt = 0
   Insn 4088: point = 1537, n_alt = 1
   Insn 4087: point = 1538, n_alt = 0
   Insn 4086: point = 1539, n_alt = 0
   Insn 4085: point = 1540, n_alt = 1
   Insn 5895: point = 1541, n_alt = -2
   Insn 4084: point = 1543, n_alt = 0
   Insn 5894: point = 1544, n_alt = -2
   Insn 4083: point = 1546, n_alt = 2
   Insn 4082: point = 1547, n_alt = 2
   Insn 4081: point = 1548, n_alt = 2
   Insn 4080: point = 1549, n_alt = 0
   Insn 4079: point = 1549, n_alt = 0
   Insn 4078: point = 1549, n_alt = 3
   Insn 4077: point = 1549, n_alt = 2
   Insn 4076: point = 1549, n_alt = 2
   Insn 4075: point = 1549, n_alt = 4
   Insn 4074: point = 1549, n_alt = 4
   Insn 4073: point = 1549, n_alt = -2
   Insn 4072: point = 1550, n_alt = -2
   Insn 4071: point = 1551, n_alt = 0
   Insn 4070: point = 1551, n_alt = 0
   Insn 4069: point = 1551, n_alt = 3
   Insn 4068: point = 1552, n_alt = 3
  BB 391
   Insn 5781: point = 1553, n_alt = -1
  BB 266
   Insn 4036: point = 1553, n_alt = -1
   Insn 4035: point = 1553, n_alt = 0
   Insn 4034: point = 1554, n_alt = 0
   Insn 4033: point = 1556, n_alt = 0
   Insn 4032: point = 1557, n_alt = 0
  BB 270
   Insn 5655: point = 1558, n_alt = -1
   Insn 4062: point = 1558, n_alt = 1
  BB 392
   Insn 5784: point = 1559, n_alt = -1
  BB 268
   Insn 4044: point = 1560, n_alt = -1
   Insn 4043: point = 1560, n_alt = 0
   Insn 4042: point = 1561, n_alt = 0
   Insn 4041: point = 1563, n_alt = 0
   Insn 4040: point = 1564, n_alt = 0
  BB 269
   Insn 5653: point = 1565, n_alt = -1
   Insn 4056: point = 1565, n_alt = 1
   Insn 4055: point = 1565, n_alt = 8
   Insn 4054: point = 1566, n_alt = 7
   Insn 4053: point = 1567, n_alt = 4
   Insn 4052: point = 1568, n_alt = 3
   Insn 4051: point = 1570, n_alt = 0
   Insn 4050: point = 1572, n_alt = 1
   Insn 4049: point = 1574, n_alt = 0
   Insn 4048: point = 1575, n_alt = 0
   Insn 4047: point = 1577, n_alt = 1
   Insn 4046: point = 1579, n_alt = 0
  BB 267
   Insn 4038: point = 1581, n_alt = 1
  BB 265
   Insn 4030: point = 1582, n_alt = 1
   Insn 4029: point = 1583, n_alt = 0
   Insn 4028: point = 1584, n_alt = 0
   Insn 4027: point = 1585, n_alt = 1
   Insn 4026: point = 1586, n_alt = 0
   Insn 4025: point = 1588, n_alt = 0
   Insn 4024: point = 1590, n_alt = 0
   Insn 4023: point = 1592, n_alt = 0
   Insn 4022: point = 1594, n_alt = 0
   Insn 4021: point = 1596, n_alt = 0
   Insn 4020: point = 1597, n_alt = -2
   Insn 4019: point = 1599, n_alt = -2
   Insn 4018: point = 1601, n_alt = 0
   Insn 4017: point = 1603, n_alt = 0
   Insn 4016: point = 1604, n_alt = -2
   Insn 4015: point = 1606, n_alt = 0
   Insn 4014: point = 1608, n_alt = -2
   Insn 4013: point = 1609, n_alt = 1
   Insn 4012: point = 1611, n_alt = 0
  BB 264
   Insn 4010: point = 1612, n_alt = -1
   Insn 4009: point = 1612, n_alt = 0
   Insn 4008: point = 1613, n_alt = 0
   Insn 4007: point = 1615, n_alt = 0
   Insn 4006: point = 1617, n_alt = 0
   Insn 4005: point = 1619, n_alt = 0
   Insn 4004: point = 1621, n_alt = 0
   Insn 4003: point = 1623, n_alt = 0
   Insn 4002: point = 1624, n_alt = -2
   Insn 4001: point = 1626, n_alt = -2
   Insn 4000: point = 1628, n_alt = 0
   Insn 3999: point = 1630, n_alt = 0
   Insn 3998: point = 1631, n_alt = -2
   Insn 3997: point = 1633, n_alt = 0
   Insn 3996: point = 1635, n_alt = -2
   Insn 3995: point = 1636, n_alt = 1
   Insn 3994: point = 1638, n_alt = 0
  BB 263
   Insn 3992: point = 1639, n_alt = -1
   Insn 3991: point = 1639, n_alt = 0
   Insn 3990: point = 1640, n_alt = 0
  BB 262
   Insn 3987: point = 1641, n_alt = 0
   Insn 3986: point = 1641, n_alt = 3
   Insn 3985: point = 1641, n_alt = 2
   Insn 3984: point = 1641, n_alt = 2
   Insn 3983: point = 1641, n_alt = -2
   Insn 3982: point = 1642, n_alt = -2
   Insn 3981: point = 1643, n_alt = -2
   Insn 3980: point = 1644, n_alt = -2
   Insn 3979: point = 1645, n_alt = 3
   Insn 3978: point = 1646, n_alt = 3
   Insn 3977: point = 1647, n_alt = 3
   Insn 3976: point = 1648, n_alt = 3
  BB 261
   Insn 3973: point = 1649, n_alt = 1
  BB 260
   Insn 3971: point = 1649, n_alt = -1
   Insn 3970: point = 1649, n_alt = 0
   Insn 3969: point = 1650, n_alt = 0
   Insn 3968: point = 1651, n_alt = 1
   Insn 3967: point = 1652, n_alt = 0
   Insn 3966: point = 1653, n_alt = 0
   Insn 3965: point = 1654, n_alt = 1
   Insn 5893: point = 1655, n_alt = -2
   Insn 3964: point = 1657, n_alt = 0
   Insn 5892: point = 1658, n_alt = -2
   Insn 3963: point = 1660, n_alt = 2
   Insn 3962: point = 1661, n_alt = 2
   Insn 3961: point = 1662, n_alt = 2
   Insn 3960: point = 1663, n_alt = 0
   Insn 3959: point = 1663, n_alt = 0
   Insn 3958: point = 1663, n_alt = 3
   Insn 3957: point = 1663, n_alt = 2
   Insn 3956: point = 1663, n_alt = 2
   Insn 3955: point = 1663, n_alt = 4
   Insn 3954: point = 1663, n_alt = 4
   Insn 3953: point = 1663, n_alt = -2
   Insn 3952: point = 1664, n_alt = -2
   Insn 3951: point = 1665, n_alt = 0
   Insn 3950: point = 1665, n_alt = 0
   Insn 3949: point = 1665, n_alt = 3
   Insn 3948: point = 1666, n_alt = 3
  BB 389
   Insn 5775: point = 1667, n_alt = -1
  BB 255
   Insn 3916: point = 1667, n_alt = -1
   Insn 3915: point = 1667, n_alt = 0
   Insn 3914: point = 1668, n_alt = 0
   Insn 3913: point = 1670, n_alt = 0
   Insn 3912: point = 1671, n_alt = 0
  BB 259
   Insn 5651: point = 1672, n_alt = -1
   Insn 3942: point = 1672, n_alt = 1
  BB 390
   Insn 5778: point = 1673, n_alt = -1
  BB 257
   Insn 3924: point = 1674, n_alt = -1
   Insn 3923: point = 1674, n_alt = 0
   Insn 3922: point = 1675, n_alt = 0
   Insn 3921: point = 1677, n_alt = 0
   Insn 3920: point = 1678, n_alt = 0
  BB 258
   Insn 5649: point = 1679, n_alt = -1
   Insn 3936: point = 1679, n_alt = 1
   Insn 3935: point = 1679, n_alt = 8
   Insn 3934: point = 1680, n_alt = 7
   Insn 3933: point = 1681, n_alt = 4
   Insn 3932: point = 1682, n_alt = 3
   Insn 3931: point = 1684, n_alt = 0
   Insn 3930: point = 1686, n_alt = 1
   Insn 3929: point = 1688, n_alt = 0
   Insn 3928: point = 1689, n_alt = 0
   Insn 3927: point = 1691, n_alt = 1
   Insn 3926: point = 1693, n_alt = 0
  BB 256
   Insn 3918: point = 1695, n_alt = 1
  BB 254
   Insn 3910: point = 1696, n_alt = 1
   Insn 3909: point = 1697, n_alt = 0
   Insn 3908: point = 1698, n_alt = 0
   Insn 3907: point = 1699, n_alt = 1
   Insn 3906: point = 1700, n_alt = 0
   Insn 3905: point = 1702, n_alt = 0
   Insn 3904: point = 1704, n_alt = 0
   Insn 3903: point = 1706, n_alt = 0
   Insn 3902: point = 1708, n_alt = 0
   Insn 3901: point = 1710, n_alt = 0
   Insn 3900: point = 1711, n_alt = -2
   Insn 3899: point = 1713, n_alt = -2
   Insn 3898: point = 1715, n_alt = 0
   Insn 3897: point = 1717, n_alt = 0
   Insn 3896: point = 1718, n_alt = -2
   Insn 3895: point = 1720, n_alt = 0
   Insn 3894: point = 1722, n_alt = -2
   Insn 3893: point = 1723, n_alt = 1
   Insn 3892: point = 1725, n_alt = 0
  BB 253
   Insn 3890: point = 1726, n_alt = -1
   Insn 3889: point = 1726, n_alt = 0
   Insn 3888: point = 1727, n_alt = 0
   Insn 3887: point = 1729, n_alt = 0
   Insn 3886: point = 1731, n_alt = 0
   Insn 3885: point = 1733, n_alt = 0
   Insn 3884: point = 1735, n_alt = 0
   Insn 3883: point = 1737, n_alt = 0
   Insn 3882: point = 1738, n_alt = -2
   Insn 3881: point = 1740, n_alt = -2
   Insn 3880: point = 1742, n_alt = 0
   Insn 3879: point = 1744, n_alt = 0
   Insn 3878: point = 1745, n_alt = -2
   Insn 3877: point = 1747, n_alt = 0
   Insn 3876: point = 1749, n_alt = -2
   Insn 3875: point = 1750, n_alt = 1
   Insn 3874: point = 1752, n_alt = 0
  BB 252
   Insn 3872: point = 1753, n_alt = -1
   Insn 3871: point = 1753, n_alt = 0
   Insn 3870: point = 1754, n_alt = 0
  BB 251
   Insn 3867: point = 1755, n_alt = 0
   Insn 3866: point = 1755, n_alt = 3
   Insn 3865: point = 1755, n_alt = 2
   Insn 3864: point = 1755, n_alt = 2
   Insn 3863: point = 1755, n_alt = -2
   Insn 3862: point = 1756, n_alt = -2
   Insn 3861: point = 1757, n_alt = -2
   Insn 3860: point = 1758, n_alt = -2
   Insn 3859: point = 1759, n_alt = 3
   Insn 3858: point = 1760, n_alt = 3
   Insn 3857: point = 1761, n_alt = 3
   Insn 3856: point = 1762, n_alt = 3
  BB 250
   Insn 3853: point = 1763, n_alt = 1
  BB 249
   Insn 3851: point = 1763, n_alt = -1
   Insn 3850: point = 1763, n_alt = 0
   Insn 3849: point = 1764, n_alt = 0
   Insn 3848: point = 1765, n_alt = 1
   Insn 3847: point = 1766, n_alt = 0
   Insn 3846: point = 1767, n_alt = 0
   Insn 3845: point = 1768, n_alt = 1
   Insn 5891: point = 1769, n_alt = -2
   Insn 3844: point = 1771, n_alt = 0
   Insn 5890: point = 1772, n_alt = -2
   Insn 3843: point = 1774, n_alt = 2
   Insn 3842: point = 1775, n_alt = 2
   Insn 3841: point = 1776, n_alt = 2
   Insn 3840: point = 1777, n_alt = 0
   Insn 3839: point = 1777, n_alt = 0
   Insn 3838: point = 1777, n_alt = 3
   Insn 3837: point = 1777, n_alt = 2
   Insn 3836: point = 1777, n_alt = 2
   Insn 3835: point = 1777, n_alt = 4
   Insn 3834: point = 1777, n_alt = 4
   Insn 3833: point = 1777, n_alt = -2
   Insn 3832: point = 1778, n_alt = -2
   Insn 3831: point = 1779, n_alt = 0
   Insn 3830: point = 1779, n_alt = 0
   Insn 3829: point = 1779, n_alt = 3
   Insn 3828: point = 1780, n_alt = 3
   Insn 3827: point = 1781, n_alt = 1
   Insn 3826: point = 1782, n_alt = 0
   Insn 3825: point = 1784, n_alt = 0
   Insn 3824: point = 1786, n_alt = 0
   Insn 3823: point = 1788, n_alt = 0
   Insn 3822: point = 1790, n_alt = 0
   Insn 3821: point = 1792, n_alt = 0
   Insn 3820: point = 1793, n_alt = -2
   Insn 3819: point = 1795, n_alt = -2
   Insn 3818: point = 1797, n_alt = 0
   Insn 3817: point = 1799, n_alt = 0
   Insn 3816: point = 1800, n_alt = -2
   Insn 3815: point = 1802, n_alt = 0
   Insn 3814: point = 1804, n_alt = -2
   Insn 3813: point = 1805, n_alt = 1
   Insn 3812: point = 1807, n_alt = 0
   Insn 3811: point = 1808, n_alt = 1
   Insn 3810: point = 1809, n_alt = 0
   Insn 3809: point = 1811, n_alt = 0
   Insn 3808: point = 1812, n_alt = 0
   Insn 3807: point = 1812, n_alt = 0
   Insn 3806: point = 1812, n_alt = 3
   Insn 3805: point = 1812, n_alt = 4
   Insn 3804: point = 1812, n_alt = 2
   Insn 3803: point = 1812, n_alt = 2
   Insn 3802: point = 1812, n_alt = 2
   Insn 3801: point = 1812, n_alt = -2
   Insn 3800: point = 1813, n_alt = -2
   Insn 3799: point = 1814, n_alt = 0
   Insn 3798: point = 1814, n_alt = 0
   Insn 3797: point = 1814, n_alt = 3
   Insn 3796: point = 1815, n_alt = 3
   Insn 3795: point = 1816, n_alt = 1
   Insn 3794: point = 1817, n_alt = 0
   Insn 3793: point = 1819, n_alt = 0
   Insn 3792: point = 1821, n_alt = 0
   Insn 3791: point = 1821, n_alt = -2
   Insn 3790: point = 1822, n_alt = 3
   Insn 3789: point = 1824, n_alt = 0
  BB 248
   Insn 3787: point = 1825, n_alt = -1
   Insn 3786: point = 1825, n_alt = 0
   Insn 3785: point = 1826, n_alt = 0
   Insn 3784: point = 1828, n_alt = 0
   Insn 3783: point = 1830, n_alt = 0
   Insn 3782: point = 1832, n_alt = 0
   Insn 3781: point = 1834, n_alt = 0
   Insn 3780: point = 1836, n_alt = 0
   Insn 3779: point = 1837, n_alt = -2
   Insn 3778: point = 1839, n_alt = -2
   Insn 3777: point = 1841, n_alt = 0
   Insn 3776: point = 1843, n_alt = 0
   Insn 3775: point = 1844, n_alt = -2
   Insn 3774: point = 1846, n_alt = 0
   Insn 3773: point = 1848, n_alt = -2
   Insn 3772: point = 1849, n_alt = 1
   Insn 3771: point = 1851, n_alt = 0
  BB 247
   Insn 3769: point = 1852, n_alt = -1
   Insn 3768: point = 1852, n_alt = 0
   Insn 3767: point = 1853, n_alt = 0
  BB 246
   Insn 3764: point = 1854, n_alt = 0
   Insn 3763: point = 1854, n_alt = 3
   Insn 3762: point = 1854, n_alt = 2
   Insn 3761: point = 1854, n_alt = 2
   Insn 3760: point = 1854, n_alt = -2
   Insn 3759: point = 1855, n_alt = -2
   Insn 3758: point = 1856, n_alt = -2
   Insn 3757: point = 1857, n_alt = -2
   Insn 3756: point = 1858, n_alt = 3
   Insn 3755: point = 1859, n_alt = 3
   Insn 3754: point = 1860, n_alt = 3
   Insn 3753: point = 1861, n_alt = 3
   Insn 3752: point = 1862, n_alt = 0
   Insn 3751: point = 1862, n_alt = 3
   Insn 3750: point = 1862, n_alt = -2
   Insn 3749: point = 1863, n_alt = 2
   Insn 3748: point = 1863, n_alt = -2
   Insn 3747: point = 1864, n_alt = -2
   Insn 3746: point = 1865, n_alt = 3
   Insn 3745: point = 1866, n_alt = 3
   Insn 3744: point = 1867, n_alt = 3
  BB 245
   Insn 3741: point = 1868, n_alt = 1
  BB 244
   Insn 3739: point = 1868, n_alt = -1
   Insn 3738: point = 1868, n_alt = 0
   Insn 3737: point = 1869, n_alt = 0
   Insn 3736: point = 1870, n_alt = 1
   Insn 3735: point = 1871, n_alt = 0
   Insn 3734: point = 1872, n_alt = 0
   Insn 3733: point = 1873, n_alt = 1
   Insn 5889: point = 1874, n_alt = -2
   Insn 3732: point = 1876, n_alt = 0
   Insn 5888: point = 1877, n_alt = -2
   Insn 3731: point = 1879, n_alt = 2
   Insn 3730: point = 1880, n_alt = 2
   Insn 3729: point = 1881, n_alt = 2
   Insn 3728: point = 1882, n_alt = 0
   Insn 3727: point = 1882, n_alt = 0
   Insn 3726: point = 1882, n_alt = 3
   Insn 3725: point = 1882, n_alt = 2
   Insn 3724: point = 1882, n_alt = 2
   Insn 3723: point = 1882, n_alt = 4
   Insn 3722: point = 1882, n_alt = 4
   Insn 3721: point = 1882, n_alt = -2
   Insn 3720: point = 1883, n_alt = -2
   Insn 3719: point = 1884, n_alt = 0
   Insn 3718: point = 1884, n_alt = 0
   Insn 3717: point = 1884, n_alt = 3
   Insn 3716: point = 1885, n_alt = 3
  BB 221
   Insn 5637: point = 1886, n_alt = -1
  BB 385
   Insn 5763: point = 1886, n_alt = -1
  BB 216
   Insn 3253: point = 1886, n_alt = -1
   Insn 3252: point = 1886, n_alt = 0
   Insn 3251: point = 1887, n_alt = 0
   Insn 3250: point = 1889, n_alt = 0
   Insn 3249: point = 1890, n_alt = 0
  BB 220
   Insn 5635: point = 1891, n_alt = -1
   Insn 3279: point = 1891, n_alt = 1
  BB 386
   Insn 5766: point = 1892, n_alt = -1
  BB 218
   Insn 3261: point = 1893, n_alt = -1
   Insn 3260: point = 1893, n_alt = 0
   Insn 3259: point = 1894, n_alt = 0
   Insn 3258: point = 1896, n_alt = 0
   Insn 3257: point = 1897, n_alt = 0
  BB 219
   Insn 5633: point = 1898, n_alt = -1
   Insn 3273: point = 1898, n_alt = 1
   Insn 3272: point = 1898, n_alt = 8
   Insn 3271: point = 1899, n_alt = 7
   Insn 3270: point = 1900, n_alt = 4
   Insn 3269: point = 1901, n_alt = 3
   Insn 3268: point = 1903, n_alt = 0
   Insn 3267: point = 1905, n_alt = 1
   Insn 3266: point = 1907, n_alt = 0
   Insn 3265: point = 1908, n_alt = 0
   Insn 3264: point = 1910, n_alt = 1
   Insn 3263: point = 1912, n_alt = 0
  BB 217
   Insn 3255: point = 1914, n_alt = 1
  BB 215
   Insn 3247: point = 1915, n_alt = 1
   Insn 3246: point = 1916, n_alt = 0
   Insn 3245: point = 1917, n_alt = 0
  BB 387
   Insn 5769: point = 1918, n_alt = -1
  BB 223
   Insn 3297: point = 1918, n_alt = -1
   Insn 3296: point = 1918, n_alt = 0
   Insn 3295: point = 1919, n_alt = 0
   Insn 3294: point = 1921, n_alt = 0
   Insn 3293: point = 1922, n_alt = 0
  BB 243
   Insn 5647: point = 1923, n_alt = -1
   Insn 3710: point = 1923, n_alt = 1
  BB 388
   Insn 5772: point = 1924, n_alt = -1
  BB 225
   Insn 3305: point = 1925, n_alt = -1
   Insn 3304: point = 1925, n_alt = 0
   Insn 3303: point = 1926, n_alt = 0
   Insn 3302: point = 1928, n_alt = 0
   Insn 3301: point = 1929, n_alt = 0
  BB 242
   Insn 5645: point = 1930, n_alt = -1
   Insn 3704: point = 1930, n_alt = 1
  BB 238
   Insn 5643: point = 1931, n_alt = -1
   Insn 3654: point = 1931, n_alt = 8
   Insn 3653: point = 1932, n_alt = 4
   Insn 3652: point = 1933, n_alt = 3
   Insn 3651: point = 1935, n_alt = 0
   Insn 3650: point = 1937, n_alt = 0
   Insn 3649: point = 1939, n_alt = 0
   Insn 3648: point = 1940, n_alt = 0
   Insn 3647: point = 1942, n_alt = 0
   Insn 3646: point = 1944, n_alt = 0
  BB 237
   Insn 3643: point = 1946, n_alt = 7
  BB 236
   Insn 3641: point = 1948, n_alt = -1
   Insn 3640: point = 1948, n_alt = 0
   Insn 3639: point = 1949, n_alt = 0
   Insn 3638: point = 1951, n_alt = 0
   Insn 3637: point = 1953, n_alt = 0
   Insn 3636: point = 1954, n_alt = 1
   Insn 3635: point = 1954, n_alt = 0
   Insn 3634: point = 1956, n_alt = 0
   Insn 3633: point = 1957, n_alt = 1
   Insn 3632: point = 1957, n_alt = 7
  BB 241
   Insn 3701: point = 1959, n_alt = 8
   Insn 3700: point = 1960, n_alt = 4
   Insn 3699: point = 1961, n_alt = 1
   Insn 3698: point = 1963, n_alt = 3
   Insn 3697: point = 1965, n_alt = 0
   Insn 3696: point = 1967, n_alt = 0
   Insn 3695: point = 1969, n_alt = 0
   Insn 3694: point = 1970, n_alt = 0
   Insn 3693: point = 1972, n_alt = 0
   Insn 3692: point = 1974, n_alt = 0
   Insn 3691: point = 1975, n_alt = -2
   Insn 3690: point = 1977, n_alt = 2
   Insn 3689: point = 1979, n_alt = 7
   Insn 3688: point = 1980, n_alt = -2
   Insn 3687: point = 1981, n_alt = 0
   Insn 3686: point = 1981, n_alt = -2
   Insn 3685: point = 1982, n_alt = 7
   Insn 3684: point = 1983, n_alt = 8
  BB 240
   Insn 3681: point = 1985, n_alt = 7
  BB 239
   Insn 3679: point = 1987, n_alt = -1
   Insn 3678: point = 1987, n_alt = 0
   Insn 3677: point = 1988, n_alt = 0
   Insn 3676: point = 1990, n_alt = 0
   Insn 3675: point = 1992, n_alt = 0
   Insn 3674: point = 1993, n_alt = 1
   Insn 3673: point = 1993, n_alt = 0
   Insn 3672: point = 1995, n_alt = 0
   Insn 3671: point = 1996, n_alt = 1
   Insn 3670: point = 1997, n_alt = 7
   Insn 3669: point = 1998, n_alt = 7
   Insn 3668: point = 1999, n_alt = 8
   Insn 3667: point = 2000, n_alt = 0
   Insn 3666: point = 2002, n_alt = 2
   Insn 3665: point = 2003, n_alt = 2
   Insn 3664: point = 2005, n_alt = -2
   Insn 3663: point = 2007, n_alt = 2
   Insn 3662: point = 2009, n_alt = 7
   Insn 3661: point = 2010, n_alt = 1
   Insn 3660: point = 2012, n_alt = 7
   Insn 3659: point = 2013, n_alt = 7
  BB 235
   Insn 3627: point = 2015, n_alt = -1
   Insn 3626: point = 2015, n_alt = 1
   Insn 3625: point = 2016, n_alt = 7
  BB 233
   Insn 5640: point = 2018, n_alt = -1
   Insn 3615: point = 2018, n_alt = 8
   Insn 3614: point = 2019, n_alt = 7
  BB 234
   Insn 3622: point = 2021, n_alt = 8
   Insn 3621: point = 2022, n_alt = 2
   Insn 3620: point = 2024, n_alt = 7
  BB 232
   Insn 3609: point = 2026, n_alt = -1
   Insn 3608: point = 2026, n_alt = 1
   Insn 3607: point = 2027, n_alt = 7
   Insn 3606: point = 2028, n_alt = 8
   Insn 3605: point = 2029, n_alt = 1
   Insn 3604: point = 2031, n_alt = 1
   Insn 3603: point = 2033, n_alt = 7
   Insn 3602: point = 2035, n_alt = 4
   Insn 3601: point = 2036, n_alt = 3
   Insn 3600: point = 2038, n_alt = 0
   Insn 3599: point = 2040, n_alt = 0
   Insn 3598: point = 2042, n_alt = 0
   Insn 3597: point = 2043, n_alt = 0
   Insn 3596: point = 2045, n_alt = 0
   Insn 3595: point = 2047, n_alt = 0
   Insn 3594: point = 2048, n_alt = 1
   Insn 3593: point = 2050, n_alt = 7
   Insn 3592: point = 2052, n_alt = 4
   Insn 3591: point = 2053, n_alt = 3
   Insn 3590: point = 2055, n_alt = 0
   Insn 3589: point = 2057, n_alt = 0
   Insn 3588: point = 2059, n_alt = 0
   Insn 3587: point = 2060, n_alt = 0
   Insn 3586: point = 2062, n_alt = 0
   Insn 3585: point = 2064, n_alt = 0
   Insn 3584: point = 2065, n_alt = -2
   Insn 3583: point = 2067, n_alt = 2
   Insn 3582: point = 2069, n_alt = 7
   Insn 3581: point = 2070, n_alt = 8
   Insn 3580: point = 2071, n_alt = 7
   Insn 3579: point = 2073, n_alt = 4
   Insn 3578: point = 2074, n_alt = 3
   Insn 3577: point = 2076, n_alt = 0
   Insn 3576: point = 2078, n_alt = 0
   Insn 3575: point = 2080, n_alt = 0
   Insn 3574: point = 2081, n_alt = 0
   Insn 3573: point = 2083, n_alt = 0
   Insn 3572: point = 2085, n_alt = 0
   Insn 3571: point = 2087, n_alt = 0
   Insn 3570: point = 2088, n_alt = 1
   Insn 3569: point = 2090, n_alt = 0
   Insn 3568: point = 2092, n_alt = 0
   Insn 3567: point = 2093, n_alt = 8
   Insn 3566: point = 2094, n_alt = 1
   Insn 3565: point = 2096, n_alt = 1
   Insn 3564: point = 2098, n_alt = 1
   Insn 3563: point = 2100, n_alt = -2
   Insn 3562: point = 2102, n_alt = 2
   Insn 3561: point = 2104, n_alt = 7
   Insn 3560: point = 2105, n_alt = 7
   Insn 3559: point = 2107, n_alt = 0
   Insn 3558: point = 2109, n_alt = 4
   Insn 3557: point = 2110, n_alt = 3
   Insn 3556: point = 2112, n_alt = 0
   Insn 3555: point = 2114, n_alt = 0
   Insn 3554: point = 2116, n_alt = 0
   Insn 3553: point = 2117, n_alt = 0
   Insn 3552: point = 2119, n_alt = 0
   Insn 3551: point = 2121, n_alt = 0
   Insn 3550: point = 2122, n_alt = 7
   Insn 3549: point = 2124, n_alt = 0
   Insn 3548: point = 2126, n_alt = 4
   Insn 3547: point = 2127, n_alt = 3
   Insn 3546: point = 2129, n_alt = 0
   Insn 3545: point = 2131, n_alt = 0
   Insn 3544: point = 2133, n_alt = 0
   Insn 3543: point = 2134, n_alt = 0
   Insn 3542: point = 2135, n_alt = 7
   Insn 3541: point = 2137, n_alt = 0
   Insn 3540: point = 2139, n_alt = 4
   Insn 3539: point = 2140, n_alt = 3
   Insn 3538: point = 2142, n_alt = 0
   Insn 3537: point = 2144, n_alt = 0
   Insn 3536: point = 2146, n_alt = 0
   Insn 3535: point = 2147, n_alt = 0
   Insn 3534: point = 2149, n_alt = 0
   Insn 3533: point = 2151, n_alt = 0
  BB 231
   Insn 3530: point = 2153, n_alt = 8
   Insn 3529: point = 2154, n_alt = 4
   Insn 3528: point = 2155, n_alt = 7
   Insn 3527: point = 2157, n_alt = 4
   Insn 3526: point = 2158, n_alt = 3
   Insn 3525: point = 2160, n_alt = 0
   Insn 3524: point = 2162, n_alt = 0
   Insn 3523: point = 2164, n_alt = 0
   Insn 3522: point = 2165, n_alt = 0
   Insn 3521: point = 2167, n_alt = 0
   Insn 3520: point = 2169, n_alt = 0
   Insn 3519: point = 2170, n_alt = 3
   Insn 3518: point = 2172, n_alt = 0
   Insn 3517: point = 2174, n_alt = 0
   Insn 3516: point = 2176, n_alt = 0
   Insn 3515: point = 2177, n_alt = 0
   Insn 3514: point = 2179, n_alt = 0
   Insn 3513: point = 2181, n_alt = 0
  BB 230
   Insn 3508: point = 2183, n_alt = -1
   Insn 3507: point = 2183, n_alt = 1
   Insn 3506: point = 2184, n_alt = 7
   Insn 3505: point = 2185, n_alt = 8
   Insn 3504: point = 2186, n_alt = 4
   Insn 3503: point = 2187, n_alt = 1
   Insn 3502: point = 2189, n_alt = 3
   Insn 3501: point = 2191, n_alt = 0
   Insn 3500: point = 2193, n_alt = 0
   Insn 3499: point = 2195, n_alt = 0
   Insn 3498: point = 2196, n_alt = 0
   Insn 3497: point = 2198, n_alt = 0
   Insn 3496: point = 2200, n_alt = 0
   Insn 3495: point = 2201, n_alt = -2
   Insn 3494: point = 2203, n_alt = 2
   Insn 3493: point = 2205, n_alt = 7
   Insn 3492: point = 2206, n_alt = 1
   Insn 3491: point = 2208, n_alt = -2
   Insn 3490: point = 2210, n_alt = 1
   Insn 3489: point = 2212, n_alt = 7
   Insn 3488: point = 2213, n_alt = 7
   Insn 3487: point = 2214, n_alt = 1
   Insn 3486: point = 2216, n_alt = 7
   Insn 3485: point = 2217, n_alt = 7
   Insn 3484: point = 2218, n_alt = 8
   Insn 3483: point = 2219, n_alt = 4
   Insn 3482: point = 2220, n_alt = 1
   Insn 3481: point = 2222, n_alt = 3
   Insn 3480: point = 2224, n_alt = 0
   Insn 3479: point = 2226, n_alt = 0
   Insn 3478: point = 2228, n_alt = 0
   Insn 3477: point = 2229, n_alt = 0
   Insn 3476: point = 2231, n_alt = 0
   Insn 3475: point = 2233, n_alt = 0
   Insn 3474: point = 2234, n_alt = -2
   Insn 3473: point = 2236, n_alt = 1
   Insn 3472: point = 2238, n_alt = 7
   Insn 3471: point = 2239, n_alt = 1
   Insn 3470: point = 2241, n_alt = 7
  BB 229
   Insn 3467: point = 2243, n_alt = 7
  BB 228
   Insn 3465: point = 2245, n_alt = -1
   Insn 3464: point = 2245, n_alt = 0
   Insn 3463: point = 2246, n_alt = 0
   Insn 3462: point = 2248, n_alt = 0
   Insn 3461: point = 2250, n_alt = 0
   Insn 3460: point = 2251, n_alt = 1
   Insn 3459: point = 2251, n_alt = 0
   Insn 3458: point = 2253, n_alt = 0
   Insn 3457: point = 2254, n_alt = 1
   Insn 3456: point = 2255, n_alt = 7
   Insn 3455: point = 2256, n_alt = 7
   Insn 3454: point = 2257, n_alt = 8
   Insn 3453: point = 2258, n_alt = 1
   Insn 3452: point = 2260, n_alt = -2
   Insn 3451: point = 2261, n_alt = 0
   Insn 3450: point = 2261, n_alt = -2
   Insn 3449: point = 2262, n_alt = 2
   Insn 3448: point = 2264, n_alt = -2
   Insn 3447: point = 2266, n_alt = 2
   Insn 3446: point = 2268, n_alt = 7
   Insn 3445: point = 2269, n_alt = 7
   Insn 3444: point = 2270, n_alt = 1
   Insn 3443: point = 2272, n_alt = -2
   Insn 3442: point = 2274, n_alt = 2
   Insn 3441: point = 2276, n_alt = 7
   Insn 3440: point = 2277, n_alt = 7
   Insn 3439: point = 2278, n_alt = 1
   Insn 3438: point = 2280, n_alt = 7
   Insn 3437: point = 2281, n_alt = 7
   Insn 5886: point = 2282, n_alt = 8
   Insn 3436: point = 2284, n_alt = 2
   Insn 5885: point = 2284, n_alt = -2
   Insn 3435: point = 2286, n_alt = 1
   Insn 3434: point = 2288, n_alt = 7
   Insn 3433: point = 2289, n_alt = 7
   Insn 3432: point = 2290, n_alt = 8
   Insn 3431: point = 2291, n_alt = 1
   Insn 3430: point = 2293, n_alt = 7
   Insn 3429: point = 2295, n_alt = 4
   Insn 3428: point = 2296, n_alt = 1
   Insn 3427: point = 2298, n_alt = 7
   Insn 3426: point = 2300, n_alt = 0
   Insn 3425: point = 2302, n_alt = 4
   Insn 3424: point = 2303, n_alt = 3
   Insn 3423: point = 2305, n_alt = 0
   Insn 3422: point = 2307, n_alt = 0
   Insn 3421: point = 2308, n_alt = 7
   Insn 3420: point = 2310, n_alt = 0
   Insn 3419: point = 2312, n_alt = 4
   Insn 3418: point = 2313, n_alt = 3
   Insn 3417: point = 2315, n_alt = 0
   Insn 3416: point = 2317, n_alt = 0
   Insn 3415: point = 2319, n_alt = 0
   Insn 3414: point = 2320, n_alt = 0
   Insn 3413: point = 2322, n_alt = 0
   Insn 3412: point = 2324, n_alt = 0
   Insn 3411: point = 2325, n_alt = 8
   Insn 3410: point = 2326, n_alt = 1
  BB 227
   Insn 3407: point = 2329, n_alt = 7
  BB 226
   Insn 3405: point = 2331, n_alt = -1
   Insn 3404: point = 2331, n_alt = 0
   Insn 3403: point = 2332, n_alt = 0
   Insn 3402: point = 2334, n_alt = 0
   Insn 3401: point = 2336, n_alt = 0
   Insn 3400: point = 2337, n_alt = 1
   Insn 3399: point = 2337, n_alt = 0
   Insn 3398: point = 2339, n_alt = 0
   Insn 3397: point = 2340, n_alt = 1
   Insn 3396: point = 2340, n_alt = 7
   Insn 3395: point = 2341, n_alt = 8
   Insn 3394: point = 2342, n_alt = 1
   Insn 3393: point = 2344, n_alt = 7
   Insn 3392: point = 2345, n_alt = -2
   Insn 3391: point = 2347, n_alt = 2
   Insn 3390: point = 2349, n_alt = 7
   Insn 3389: point = 2350, n_alt = 7
   Insn 3388: point = 2351, n_alt = 8
   Insn 3387: point = 2352, n_alt = 7
   Insn 3386: point = 2354, n_alt = 4
   Insn 3385: point = 2355, n_alt = 3
   Insn 3384: point = 2357, n_alt = 0
   Insn 3383: point = 2359, n_alt = 0
   Insn 3382: point = 2361, n_alt = 0
   Insn 3381: point = 2362, n_alt = 0
   Insn 3380: point = 2364, n_alt = 0
   Insn 3379: point = 2366, n_alt = 0
   Insn 3378: point = 2368, n_alt = 0
   Insn 3377: point = 2369, n_alt = 1
   Insn 3376: point = 2371, n_alt = 0
   Insn 3375: point = 2373, n_alt = 0
   Insn 3374: point = 2374, n_alt = 8
   Insn 3373: point = 2375, n_alt = 7
   Insn 3372: point = 2377, n_alt = 0
   Insn 3371: point = 2379, n_alt = 4
   Insn 3370: point = 2380, n_alt = 3
   Insn 3369: point = 2382, n_alt = 0
   Insn 3368: point = 2384, n_alt = 0
   Insn 3367: point = 2386, n_alt = 0
   Insn 3366: point = 2387, n_alt = 0
   Insn 3365: point = 2389, n_alt = 0
   Insn 3364: point = 2391, n_alt = 0
   Insn 3363: point = 2393, n_alt = 0
   Insn 3362: point = 2394, n_alt = 1
   Insn 3361: point = 2396, n_alt = 0
   Insn 3360: point = 2398, n_alt = 0
   Insn 3359: point = 2399, n_alt = 8
   Insn 3358: point = 2400, n_alt = 7
   Insn 3357: point = 2402, n_alt = 0
   Insn 3356: point = 2404, n_alt = 4
   Insn 3355: point = 2405, n_alt = 3
   Insn 3354: point = 2407, n_alt = 0
   Insn 3353: point = 2409, n_alt = 0
   Insn 3352: point = 2411, n_alt = 0
   Insn 3351: point = 2412, n_alt = 0
   Insn 3350: point = 2414, n_alt = 0
   Insn 3349: point = 2416, n_alt = 0
   Insn 3348: point = 2418, n_alt = 0
   Insn 3347: point = 2419, n_alt = 1
   Insn 3346: point = 2421, n_alt = 0
   Insn 3345: point = 2423, n_alt = 0
   Insn 3344: point = 2424, n_alt = 8
   Insn 3343: point = 2425, n_alt = 1
   Insn 3342: point = 2427, n_alt = 7
   Insn 3341: point = 2429, n_alt = 4
   Insn 3340: point = 2430, n_alt = 3
   Insn 3339: point = 2432, n_alt = 0
   Insn 3338: point = 2434, n_alt = 0
   Insn 3337: point = 2436, n_alt = 0
   Insn 3336: point = 2437, n_alt = 0
   Insn 3335: point = 2439, n_alt = 0
   Insn 3334: point = 2441, n_alt = 0
   Insn 3333: point = 2442, n_alt = 7
   Insn 3332: point = 2444, n_alt = 0
   Insn 3331: point = 2446, n_alt = 4
   Insn 3330: point = 2447, n_alt = 3
   Insn 3329: point = 2449, n_alt = 0
   Insn 3328: point = 2451, n_alt = 0
   Insn 3327: point = 2453, n_alt = 0
   Insn 3326: point = 2454, n_alt = 0
   Insn 3325: point = 2456, n_alt = 0
   Insn 3324: point = 2458, n_alt = 0
   Insn 3323: point = 2460, n_alt = 0
   Insn 3322: point = 2461, n_alt = 1
   Insn 3321: point = 2463, n_alt = 0
   Insn 3320: point = 2465, n_alt = 0
   Insn 3319: point = 2466, n_alt = 1
   Insn 5884: point = 2467, n_alt = -2
   Insn 3318: point = 2469, n_alt = 0
   Insn 5883: point = 2470, n_alt = -2
   Insn 3317: point = 2472, n_alt = 0
   Insn 3316: point = 2473, n_alt = 0
   Insn 3315: point = 2475, n_alt = 0
   Insn 3314: point = 2477, n_alt = 4
   Insn 3313: point = 2478, n_alt = 3
   Insn 3312: point = 2480, n_alt = 0
   Insn 3311: point = 2482, n_alt = 0
   Insn 3310: point = 2484, n_alt = 0
   Insn 3309: point = 2485, n_alt = 0
   Insn 3308: point = 2487, n_alt = 0
   Insn 3307: point = 2489, n_alt = 0
  BB 224
   Insn 3299: point = 2491, n_alt = 1
  BB 222
   Insn 3291: point = 2492, n_alt = 1
   Insn 3290: point = 2493, n_alt = 0
   Insn 3289: point = 2494, n_alt = 0
  BB 214
   Insn 3243: point = 2495, n_alt = -1
   Insn 3242: point = 2495, n_alt = 0
   Insn 3241: point = 2496, n_alt = 0
   Insn 3240: point = 2497, n_alt = 8
   Insn 3239: point = 2498, n_alt = 7
   Insn 3238: point = 2499, n_alt = 8
   Insn 3237: point = 2500, n_alt = 7
   Insn 3236: point = 2501, n_alt = 8
   Insn 3235: point = 2502, n_alt = 7
   Insn 3234: point = 2503, n_alt = 1
   Insn 3233: point = 2504, n_alt = 0
   Insn 3232: point = 2506, n_alt = 0
   Insn 3231: point = 2508, n_alt = 0
   Insn 3230: point = 2510, n_alt = 0
   Insn 3229: point = 2512, n_alt = 0
   Insn 3228: point = 2514, n_alt = 0
   Insn 3227: point = 2515, n_alt = -2
   Insn 3226: point = 2517, n_alt = -2
   Insn 3225: point = 2519, n_alt = 0
   Insn 3224: point = 2521, n_alt = 0
   Insn 3223: point = 2522, n_alt = -2
   Insn 3222: point = 2524, n_alt = 0
   Insn 3221: point = 2526, n_alt = -2
   Insn 3220: point = 2527, n_alt = 1
   Insn 3219: point = 2529, n_alt = 0
  BB 213
   Insn 3217: point = 2530, n_alt = -1
   Insn 3216: point = 2530, n_alt = 0
   Insn 3215: point = 2531, n_alt = 0
   Insn 3214: point = 2533, n_alt = 0
   Insn 3213: point = 2535, n_alt = 0
   Insn 3212: point = 2537, n_alt = 0
   Insn 3211: point = 2539, n_alt = 0
   Insn 3210: point = 2541, n_alt = 0
   Insn 3209: point = 2542, n_alt = -2
   Insn 3208: point = 2544, n_alt = -2
   Insn 3207: point = 2546, n_alt = 0
   Insn 3206: point = 2548, n_alt = 0
   Insn 3205: point = 2549, n_alt = -2
   Insn 3204: point = 2551, n_alt = 0
   Insn 3203: point = 2553, n_alt = -2
   Insn 3202: point = 2554, n_alt = 1
   Insn 3201: point = 2556, n_alt = 0
  BB 212
   Insn 3199: point = 2557, n_alt = -1
   Insn 3198: point = 2557, n_alt = 0
   Insn 3197: point = 2558, n_alt = 0
  BB 211
   Insn 3194: point = 2559, n_alt = 0
   Insn 3193: point = 2559, n_alt = 3
   Insn 3192: point = 2559, n_alt = 2
   Insn 3191: point = 2559, n_alt = 2
   Insn 3190: point = 2559, n_alt = -2
   Insn 3189: point = 2560, n_alt = -2
   Insn 3188: point = 2561, n_alt = -2
   Insn 3187: point = 2562, n_alt = -2
   Insn 3186: point = 2563, n_alt = 3
   Insn 3185: point = 2564, n_alt = 3
   Insn 3184: point = 2565, n_alt = 3
   Insn 3183: point = 2566, n_alt = 3
  BB 210
   Insn 3180: point = 2567, n_alt = 1
  BB 209
   Insn 3178: point = 2567, n_alt = -1
   Insn 3177: point = 2567, n_alt = 0
   Insn 3176: point = 2568, n_alt = 0
   Insn 3175: point = 2569, n_alt = 1
   Insn 3174: point = 2570, n_alt = 0
   Insn 3173: point = 2571, n_alt = 0
   Insn 3172: point = 2572, n_alt = 1
   Insn 5882: point = 2573, n_alt = -2
   Insn 3171: point = 2575, n_alt = 0
   Insn 5881: point = 2576, n_alt = -2
   Insn 3170: point = 2578, n_alt = 2
   Insn 3169: point = 2579, n_alt = 2
   Insn 3168: point = 2580, n_alt = 2
   Insn 3167: point = 2581, n_alt = 0
   Insn 3166: point = 2581, n_alt = 0
   Insn 3165: point = 2581, n_alt = 3
   Insn 3164: point = 2581, n_alt = 2
   Insn 3163: point = 2581, n_alt = 2
   Insn 3162: point = 2581, n_alt = 4
   Insn 3161: point = 2581, n_alt = 4
   Insn 3160: point = 2581, n_alt = -2
   Insn 3159: point = 2582, n_alt = -2
   Insn 3158: point = 2583, n_alt = 0
   Insn 3157: point = 2583, n_alt = 0
   Insn 3156: point = 2583, n_alt = 3
   Insn 3155: point = 2584, n_alt = 3
  BB 383
   Insn 5757: point = 2585, n_alt = -1
  BB 204
   Insn 3105: point = 2585, n_alt = -1
   Insn 3104: point = 2585, n_alt = 0
   Insn 3103: point = 2586, n_alt = 0
   Insn 3102: point = 2588, n_alt = 0
   Insn 3101: point = 2589, n_alt = 0
  BB 208
   Insn 5631: point = 2590, n_alt = -1
   Insn 3149: point = 2590, n_alt = 1
  BB 384
   Insn 5760: point = 2591, n_alt = -1
  BB 206
   Insn 3113: point = 2592, n_alt = -1
   Insn 3112: point = 2592, n_alt = 0
   Insn 3111: point = 2593, n_alt = 0
   Insn 3110: point = 2595, n_alt = 0
   Insn 3109: point = 2596, n_alt = 0
  BB 207
   Insn 5629: point = 2597, n_alt = -1
   Insn 3143: point = 2597, n_alt = 1
   Insn 3142: point = 2597, n_alt = 8
   Insn 3141: point = 2598, n_alt = 4
   Insn 3140: point = 2599, n_alt = 1
   Insn 3139: point = 2601, n_alt = 3
   Insn 3138: point = 2603, n_alt = 0
   Insn 3137: point = 2605, n_alt = 1
   Insn 3136: point = 2607, n_alt = 0
   Insn 3135: point = 2608, n_alt = 0
   Insn 3134: point = 2610, n_alt = 1
   Insn 3133: point = 2612, n_alt = 0
   Insn 3132: point = 2613, n_alt = 7
   Insn 3131: point = 2615, n_alt = 4
   Insn 3130: point = 2616, n_alt = 3
   Insn 3129: point = 2618, n_alt = 0
   Insn 3128: point = 2620, n_alt = 1
   Insn 3127: point = 2622, n_alt = 0
   Insn 3126: point = 2623, n_alt = 0
   Insn 3125: point = 2625, n_alt = 1
   Insn 3124: point = 2627, n_alt = 0
   Insn 3123: point = 2628, n_alt = 7
   Insn 3122: point = 2630, n_alt = 4
   Insn 3121: point = 2631, n_alt = 3
   Insn 3120: point = 2633, n_alt = 0
   Insn 3119: point = 2635, n_alt = 1
   Insn 3118: point = 2637, n_alt = 0
   Insn 3117: point = 2638, n_alt = 0
   Insn 3116: point = 2640, n_alt = 1
   Insn 3115: point = 2642, n_alt = 0
  BB 205
   Insn 3107: point = 2644, n_alt = 1
  BB 203
   Insn 3099: point = 2645, n_alt = 1
   Insn 3098: point = 2646, n_alt = 0
   Insn 3097: point = 2647, n_alt = 0
   Insn 3096: point = 2648, n_alt = 0
   Insn 3095: point = 2648, n_alt = 3
   Insn 3094: point = 2648, n_alt = 4
   Insn 3093: point = 2648, n_alt = -2
   Insn 3092: point = 2649, n_alt = -2
   Insn 3091: point = 2650, n_alt = 4
   Insn 3090: point = 2650, n_alt = 4
   Insn 3089: point = 2650, n_alt = 3
   Insn 3088: point = 2651, n_alt = 3
   Insn 3087: point = 2652, n_alt = 0
   Insn 3086: point = 2652, n_alt = 3
   Insn 3085: point = 2652, n_alt = 4
   Insn 3084: point = 2652, n_alt = -2
   Insn 3083: point = 2653, n_alt = -2
   Insn 3082: point = 2654, n_alt = 4
   Insn 3081: point = 2654, n_alt = 4
   Insn 3080: point = 2654, n_alt = 3
   Insn 3079: point = 2655, n_alt = 3
   Insn 3078: point = 2656, n_alt = 1
   Insn 3077: point = 2657, n_alt = 0
   Insn 3076: point = 2659, n_alt = 0
   Insn 3075: point = 2661, n_alt = 0
   Insn 3074: point = 2663, n_alt = 0
   Insn 3073: point = 2665, n_alt = 0
   Insn 3072: point = 2667, n_alt = 0
   Insn 3071: point = 2668, n_alt = -2
   Insn 3070: point = 2670, n_alt = -2
   Insn 3069: point = 2672, n_alt = 0
   Insn 3068: point = 2674, n_alt = 0
   Insn 3067: point = 2675, n_alt = -2
   Insn 3066: point = 2677, n_alt = 0
   Insn 3065: point = 2679, n_alt = -2
   Insn 3064: point = 2680, n_alt = 1
   Insn 3063: point = 2682, n_alt = 0
  BB 202
   Insn 3061: point = 2683, n_alt = -1
   Insn 3060: point = 2683, n_alt = 0
   Insn 3059: point = 2684, n_alt = 0
   Insn 3058: point = 2686, n_alt = 0
   Insn 3057: point = 2688, n_alt = 0
   Insn 3056: point = 2690, n_alt = 0
   Insn 3055: point = 2692, n_alt = 0
   Insn 3054: point = 2694, n_alt = 0
   Insn 3053: point = 2695, n_alt = -2
   Insn 3052: point = 2697, n_alt = -2
   Insn 3051: point = 2699, n_alt = 0
   Insn 3050: point = 2701, n_alt = 0
   Insn 3049: point = 2702, n_alt = -2
   Insn 3048: point = 2704, n_alt = 0
   Insn 3047: point = 2706, n_alt = -2
   Insn 3046: point = 2707, n_alt = 1
   Insn 3045: point = 2709, n_alt = 0
  BB 201
   Insn 3043: point = 2710, n_alt = -1
   Insn 3042: point = 2710, n_alt = 0
   Insn 3041: point = 2711, n_alt = 0
  BB 200
   Insn 3038: point = 2712, n_alt = 0
   Insn 3037: point = 2712, n_alt = 3
   Insn 3036: point = 2712, n_alt = 2
   Insn 3035: point = 2712, n_alt = 2
   Insn 3034: point = 2712, n_alt = -2
   Insn 3033: point = 2713, n_alt = -2
   Insn 3032: point = 2714, n_alt = -2
   Insn 3031: point = 2715, n_alt = -2
   Insn 3030: point = 2716, n_alt = 3
   Insn 3029: point = 2717, n_alt = 3
   Insn 3028: point = 2718, n_alt = 3
   Insn 3027: point = 2719, n_alt = 3
  BB 199
   Insn 3024: point = 2720, n_alt = 1
  BB 198
   Insn 3022: point = 2720, n_alt = -1
   Insn 3021: point = 2720, n_alt = 0
   Insn 3020: point = 2721, n_alt = 0
   Insn 3019: point = 2722, n_alt = 1
   Insn 3018: point = 2723, n_alt = 0
   Insn 3017: point = 2724, n_alt = 0
   Insn 3016: point = 2725, n_alt = 1
   Insn 5880: point = 2726, n_alt = -2
   Insn 3015: point = 2728, n_alt = 0
   Insn 5879: point = 2729, n_alt = -2
   Insn 3014: point = 2731, n_alt = 2
   Insn 3013: point = 2732, n_alt = 2
   Insn 3012: point = 2733, n_alt = 2
   Insn 3011: point = 2734, n_alt = 0
   Insn 3010: point = 2734, n_alt = 0
   Insn 3009: point = 2734, n_alt = 3
   Insn 3008: point = 2734, n_alt = 2
   Insn 3007: point = 2734, n_alt = 2
   Insn 3006: point = 2734, n_alt = 4
   Insn 3005: point = 2734, n_alt = 4
   Insn 3004: point = 2734, n_alt = -2
   Insn 3003: point = 2735, n_alt = -2
   Insn 3002: point = 2736, n_alt = 0
   Insn 3001: point = 2736, n_alt = 0
   Insn 3000: point = 2736, n_alt = 3
   Insn 2999: point = 2737, n_alt = 3
  BB 381
   Insn 5751: point = 2738, n_alt = -1
  BB 193
   Insn 2946: point = 2738, n_alt = -1
   Insn 2945: point = 2738, n_alt = 0
   Insn 2944: point = 2739, n_alt = 0
   Insn 2943: point = 2741, n_alt = 0
   Insn 2942: point = 2742, n_alt = 0
  BB 197
   Insn 5627: point = 2743, n_alt = -1
   Insn 2993: point = 2743, n_alt = 1
  BB 382
   Insn 5754: point = 2744, n_alt = -1
  BB 195
   Insn 2954: point = 2745, n_alt = -1
   Insn 2953: point = 2745, n_alt = 0
   Insn 2952: point = 2746, n_alt = 0
   Insn 2951: point = 2748, n_alt = 0
   Insn 2950: point = 2749, n_alt = 0
  BB 196
   Insn 5625: point = 2750, n_alt = -1
   Insn 2987: point = 2750, n_alt = 1
   Insn 2986: point = 2750, n_alt = 8
   Insn 2985: point = 2751, n_alt = 4
   Insn 2984: point = 2752, n_alt = 1
   Insn 2983: point = 2754, n_alt = 3
   Insn 2982: point = 2756, n_alt = 0
   Insn 2981: point = 2758, n_alt = 1
   Insn 2980: point = 2760, n_alt = 0
   Insn 2979: point = 2761, n_alt = 0
   Insn 2978: point = 2763, n_alt = 1
   Insn 2977: point = 2765, n_alt = 0
   Insn 2976: point = 2766, n_alt = -2
   Insn 2975: point = 2768, n_alt = 2
   Insn 2974: point = 2770, n_alt = 7
   Insn 2973: point = 2771, n_alt = 7
   Insn 2972: point = 2773, n_alt = 4
   Insn 2971: point = 2774, n_alt = 3
   Insn 2970: point = 2776, n_alt = 0
   Insn 2969: point = 2778, n_alt = 1
   Insn 2968: point = 2780, n_alt = 0
   Insn 2967: point = 2781, n_alt = 0
   Insn 2966: point = 2783, n_alt = 1
   Insn 2965: point = 2785, n_alt = 0
   Insn 2964: point = 2786, n_alt = 7
   Insn 2963: point = 2788, n_alt = 4
   Insn 2962: point = 2789, n_alt = 3
   Insn 2961: point = 2791, n_alt = 0
   Insn 2960: point = 2793, n_alt = 1
   Insn 2959: point = 2795, n_alt = 0
   Insn 2958: point = 2796, n_alt = 0
   Insn 2957: point = 2798, n_alt = 1
   Insn 2956: point = 2800, n_alt = 0
  BB 194
   Insn 2948: point = 2802, n_alt = 1
  BB 192
   Insn 2940: point = 2803, n_alt = 1
   Insn 2939: point = 2804, n_alt = 0
   Insn 2938: point = 2805, n_alt = 0
   Insn 2937: point = 2806, n_alt = 0
   Insn 2936: point = 2806, n_alt = 3
   Insn 2935: point = 2806, n_alt = 4
   Insn 2934: point = 2806, n_alt = -2
   Insn 2933: point = 2807, n_alt = -2
   Insn 2932: point = 2808, n_alt = 4
   Insn 2931: point = 2808, n_alt = 4
   Insn 2930: point = 2808, n_alt = 3
   Insn 2929: point = 2809, n_alt = 3
   Insn 2928: point = 2810, n_alt = 0
   Insn 2927: point = 2810, n_alt = 3
   Insn 2926: point = 2810, n_alt = 4
   Insn 2925: point = 2810, n_alt = -2
   Insn 2924: point = 2811, n_alt = -2
   Insn 2923: point = 2812, n_alt = 4
   Insn 2922: point = 2812, n_alt = 4
   Insn 2921: point = 2812, n_alt = 3
   Insn 2920: point = 2813, n_alt = 3
   Insn 2919: point = 2814, n_alt = 1
   Insn 2918: point = 2815, n_alt = 0
   Insn 2917: point = 2817, n_alt = 0
   Insn 2916: point = 2819, n_alt = 0
   Insn 2915: point = 2821, n_alt = 0
   Insn 2914: point = 2823, n_alt = 0
   Insn 2913: point = 2825, n_alt = 0
   Insn 2912: point = 2826, n_alt = -2
   Insn 2911: point = 2828, n_alt = -2
   Insn 2910: point = 2830, n_alt = 0
   Insn 2909: point = 2832, n_alt = 0
   Insn 2908: point = 2833, n_alt = -2
   Insn 2907: point = 2835, n_alt = 0
   Insn 2906: point = 2837, n_alt = -2
   Insn 2905: point = 2838, n_alt = 1
   Insn 2904: point = 2840, n_alt = 0
  BB 379
   Insn 5745: point = 2841, n_alt = -1
  BB 184
   Insn 2827: point = 2841, n_alt = -1
   Insn 2826: point = 2841, n_alt = 0
   Insn 2825: point = 2842, n_alt = 0
   Insn 2824: point = 2844, n_alt = 0
   Insn 2823: point = 2845, n_alt = 0
  BB 191
   Insn 5623: point = 2846, n_alt = -1
   Insn 2898: point = 2846, n_alt = 1
  BB 380
   Insn 5748: point = 2847, n_alt = -1
  BB 186
   Insn 2835: point = 2848, n_alt = -1
   Insn 2834: point = 2848, n_alt = 0
   Insn 2833: point = 2849, n_alt = 0
   Insn 2832: point = 2851, n_alt = 0
   Insn 2831: point = 2852, n_alt = 0
  BB 190
   Insn 5621: point = 2853, n_alt = -1
   Insn 2892: point = 2853, n_alt = 1
  BB 189
   Insn 2889: point = 2854, n_alt = 8
   Insn 2888: point = 2855, n_alt = 7
   Insn 2887: point = 2856, n_alt = 4
   Insn 2886: point = 2857, n_alt = 3
   Insn 2885: point = 2859, n_alt = 0
   Insn 2884: point = 2861, n_alt = 1
   Insn 2883: point = 2863, n_alt = 0
   Insn 2882: point = 2864, n_alt = 0
   Insn 2881: point = 2866, n_alt = 0
   Insn 2880: point = 2868, n_alt = 1
   Insn 2879: point = 2870, n_alt = 0
   Insn 2878: point = 2871, n_alt = 1
   Insn 2877: point = 2873, n_alt = 1
   Insn 2876: point = 2875, n_alt = 0
  BB 188
   Insn 2871: point = 2877, n_alt = -1
   Insn 2870: point = 2877, n_alt = 1
   Insn 2869: point = 2878, n_alt = 7
   Insn 2868: point = 2880, n_alt = 4
   Insn 2867: point = 2881, n_alt = 3
   Insn 2866: point = 2883, n_alt = 0
   Insn 2865: point = 2885, n_alt = 1
   Insn 2864: point = 2887, n_alt = 0
   Insn 2863: point = 2888, n_alt = 0
   Insn 2862: point = 2890, n_alt = 0
   Insn 2861: point = 2892, n_alt = 1
   Insn 2860: point = 2894, n_alt = 0
   Insn 2859: point = 2895, n_alt = 1
   Insn 2858: point = 2897, n_alt = 1
   Insn 2857: point = 2899, n_alt = 0
  BB 187
   Insn 2852: point = 2901, n_alt = -1
   Insn 2851: point = 2901, n_alt = 1
   Insn 2850: point = 2902, n_alt = 7
   Insn 2849: point = 2903, n_alt = 7
   Insn 2848: point = 2905, n_alt = 4
   Insn 2847: point = 2906, n_alt = 3
   Insn 2846: point = 2908, n_alt = 0
   Insn 2845: point = 2910, n_alt = 1
   Insn 2844: point = 2912, n_alt = 0
   Insn 2843: point = 2913, n_alt = 0
   Insn 2842: point = 2915, n_alt = 0
   Insn 2841: point = 2917, n_alt = 1
   Insn 2840: point = 2919, n_alt = 0
   Insn 2839: point = 2920, n_alt = 1
   Insn 2838: point = 2922, n_alt = 1
   Insn 2837: point = 2924, n_alt = 0
  BB 185
   Insn 2829: point = 2926, n_alt = 1
  BB 183
   Insn 2821: point = 2927, n_alt = 1
   Insn 2820: point = 2928, n_alt = 0
   Insn 2819: point = 2929, n_alt = 0
  BB 182
   Insn 2817: point = 2930, n_alt = -1
   Insn 2816: point = 2930, n_alt = 0
   Insn 2815: point = 2931, n_alt = 0
   Insn 2814: point = 2933, n_alt = 0
   Insn 2813: point = 2935, n_alt = 0
   Insn 2812: point = 2937, n_alt = 0
   Insn 2811: point = 2939, n_alt = 0
   Insn 2810: point = 2941, n_alt = 0
   Insn 2809: point = 2942, n_alt = -2
   Insn 2808: point = 2944, n_alt = -2
   Insn 2807: point = 2946, n_alt = 0
   Insn 2806: point = 2948, n_alt = 0
   Insn 2805: point = 2949, n_alt = -2
   Insn 2804: point = 2951, n_alt = 0
   Insn 2803: point = 2953, n_alt = -2
   Insn 2802: point = 2954, n_alt = 1
   Insn 2801: point = 2956, n_alt = 0
  BB 181
   Insn 2799: point = 2957, n_alt = -1
   Insn 2798: point = 2957, n_alt = 0
   Insn 2797: point = 2958, n_alt = 0
  BB 180
   Insn 2794: point = 2959, n_alt = 0
   Insn 2793: point = 2959, n_alt = 3
   Insn 2792: point = 2959, n_alt = 2
   Insn 2791: point = 2959, n_alt = 2
   Insn 2790: point = 2959, n_alt = -2
   Insn 2789: point = 2960, n_alt = -2
   Insn 2788: point = 2961, n_alt = -2
   Insn 2787: point = 2962, n_alt = -2
   Insn 2786: point = 2963, n_alt = 3
   Insn 2785: point = 2964, n_alt = 3
   Insn 2784: point = 2965, n_alt = 3
   Insn 2783: point = 2966, n_alt = 3
  BB 179
   Insn 2780: point = 2967, n_alt = 1
  BB 178
   Insn 2778: point = 2967, n_alt = -1
   Insn 2777: point = 2967, n_alt = 0
   Insn 2776: point = 2968, n_alt = 0
   Insn 2775: point = 2969, n_alt = 1
   Insn 2774: point = 2970, n_alt = 0
   Insn 2773: point = 2971, n_alt = 0
   Insn 2772: point = 2972, n_alt = 1
   Insn 5878: point = 2973, n_alt = -2
   Insn 2771: point = 2975, n_alt = 0
   Insn 5877: point = 2976, n_alt = -2
   Insn 2770: point = 2978, n_alt = 2
   Insn 2769: point = 2979, n_alt = 2
   Insn 2768: point = 2980, n_alt = 2
   Insn 2767: point = 2981, n_alt = 0
   Insn 2766: point = 2981, n_alt = 0
   Insn 2765: point = 2981, n_alt = 3
   Insn 2764: point = 2981, n_alt = 2
   Insn 2763: point = 2981, n_alt = 2
   Insn 2762: point = 2981, n_alt = 4
   Insn 2761: point = 2981, n_alt = 4
   Insn 2760: point = 2981, n_alt = -2
   Insn 2759: point = 2982, n_alt = -2
   Insn 2758: point = 2983, n_alt = 0
   Insn 2757: point = 2983, n_alt = 0
   Insn 2756: point = 2983, n_alt = 3
   Insn 2755: point = 2984, n_alt = 3
   Insn 2754: point = 2985, n_alt = 0
   Insn 2753: point = 2985, n_alt = 3
   Insn 2752: point = 2985, n_alt = 4
   Insn 2751: point = 2985, n_alt = -2
   Insn 2750: point = 2986, n_alt = -2
   Insn 2749: point = 2987, n_alt = 4
   Insn 2748: point = 2987, n_alt = 4
   Insn 2747: point = 2987, n_alt = 3
   Insn 2746: point = 2988, n_alt = 3
   Insn 2745: point = 2989, n_alt = 1
   Insn 2744: point = 2990, n_alt = 0
   Insn 2743: point = 2992, n_alt = 0
   Insn 2742: point = 2994, n_alt = 0
   Insn 2741: point = 2996, n_alt = 0
   Insn 2740: point = 2998, n_alt = 0
   Insn 2739: point = 3000, n_alt = 0
   Insn 2738: point = 3001, n_alt = -2
   Insn 2737: point = 3003, n_alt = -2
   Insn 2736: point = 3005, n_alt = 0
   Insn 2735: point = 3007, n_alt = 0
   Insn 2734: point = 3008, n_alt = -2
   Insn 2733: point = 3010, n_alt = 0
   Insn 2732: point = 3012, n_alt = -2
   Insn 2731: point = 3013, n_alt = 1
   Insn 2730: point = 3015, n_alt = 0
  BB 177
   Insn 2728: point = 3016, n_alt = -1
   Insn 2727: point = 3016, n_alt = 0
   Insn 2726: point = 3017, n_alt = 0
   Insn 2725: point = 3019, n_alt = 0
   Insn 2724: point = 3021, n_alt = 0
   Insn 2723: point = 3023, n_alt = 0
   Insn 2722: point = 3025, n_alt = 0
   Insn 2721: point = 3027, n_alt = 0
   Insn 2720: point = 3028, n_alt = -2
   Insn 2719: point = 3030, n_alt = -2
   Insn 2718: point = 3032, n_alt = 0
   Insn 2717: point = 3034, n_alt = 0
   Insn 2716: point = 3035, n_alt = -2
   Insn 2715: point = 3037, n_alt = 0
   Insn 2714: point = 3039, n_alt = -2
   Insn 2713: point = 3040, n_alt = 1
   Insn 2712: point = 3042, n_alt = 0
  BB 176
   Insn 2710: point = 3043, n_alt = -1
   Insn 2709: point = 3043, n_alt = 0
   Insn 2708: point = 3044, n_alt = 0
  BB 175
   Insn 2705: point = 3045, n_alt = 0
   Insn 2704: point = 3045, n_alt = 3
   Insn 2703: point = 3045, n_alt = 2
   Insn 2702: point = 3045, n_alt = 2
   Insn 2701: point = 3045, n_alt = -2
   Insn 2700: point = 3046, n_alt = -2
   Insn 2699: point = 3047, n_alt = -2
   Insn 2698: point = 3048, n_alt = -2
   Insn 2697: point = 3049, n_alt = 3
   Insn 2696: point = 3050, n_alt = 3
   Insn 2695: point = 3051, n_alt = 3
   Insn 2694: point = 3052, n_alt = 3
  BB 174
   Insn 2691: point = 3053, n_alt = 1
  BB 173
   Insn 2689: point = 3053, n_alt = -1
   Insn 2688: point = 3053, n_alt = 0
   Insn 2687: point = 3054, n_alt = 0
   Insn 2686: point = 3055, n_alt = 1
   Insn 2685: point = 3056, n_alt = 0
   Insn 2684: point = 3057, n_alt = 0
   Insn 2683: point = 3058, n_alt = 1
   Insn 5876: point = 3059, n_alt = -2
   Insn 2682: point = 3061, n_alt = 0
   Insn 5875: point = 3062, n_alt = -2
   Insn 2681: point = 3064, n_alt = 2
   Insn 2680: point = 3065, n_alt = 2
   Insn 2679: point = 3066, n_alt = 2
   Insn 2678: point = 3067, n_alt = 0
   Insn 2677: point = 3067, n_alt = 0
   Insn 2676: point = 3067, n_alt = 3
   Insn 2675: point = 3067, n_alt = 2
   Insn 2674: point = 3067, n_alt = 2
   Insn 2673: point = 3067, n_alt = 4
   Insn 2672: point = 3067, n_alt = 4
   Insn 2671: point = 3067, n_alt = -2
   Insn 2670: point = 3068, n_alt = -2
   Insn 2669: point = 3069, n_alt = 0
   Insn 2668: point = 3069, n_alt = 0
   Insn 2667: point = 3069, n_alt = 3
   Insn 2666: point = 3070, n_alt = 3
   Insn 2665: point = 3071, n_alt = 0
   Insn 2664: point = 3071, n_alt = 3
   Insn 2663: point = 3071, n_alt = 4
   Insn 2662: point = 3071, n_alt = 4
   Insn 2661: point = 3071, n_alt = 0
   Insn 2660: point = 3071, n_alt = 3
   Insn 2659: point = 3071, n_alt = 4
   Insn 2658: point = 3071, n_alt = -2
   Insn 2657: point = 3072, n_alt = -2
   Insn 2656: point = 3073, n_alt = 4
   Insn 2655: point = 3073, n_alt = 4
   Insn 2654: point = 3073, n_alt = 3
   Insn 2653: point = 3074, n_alt = 3
   Insn 2652: point = 3075, n_alt = 1
   Insn 2651: point = 3076, n_alt = 0
   Insn 2650: point = 3078, n_alt = 0
   Insn 2649: point = 3080, n_alt = 0
   Insn 2648: point = 3082, n_alt = 0
   Insn 2647: point = 3084, n_alt = 0
   Insn 2646: point = 3086, n_alt = 0
   Insn 2645: point = 3087, n_alt = -2
   Insn 2644: point = 3089, n_alt = -2
   Insn 2643: point = 3091, n_alt = 0
   Insn 2642: point = 3093, n_alt = 0
   Insn 2641: point = 3094, n_alt = -2
   Insn 2640: point = 3096, n_alt = 0
   Insn 2639: point = 3098, n_alt = -2
   Insn 2638: point = 3099, n_alt = 1
   Insn 2637: point = 3101, n_alt = 0
  BB 172
   Insn 2635: point = 3102, n_alt = -1
   Insn 2634: point = 3102, n_alt = 0
   Insn 2633: point = 3103, n_alt = 0
   Insn 2632: point = 3105, n_alt = 0
   Insn 2631: point = 3107, n_alt = 0
   Insn 2630: point = 3109, n_alt = 0
   Insn 2629: point = 3111, n_alt = 0
   Insn 2628: point = 3113, n_alt = 0
   Insn 2627: point = 3114, n_alt = -2
   Insn 2626: point = 3116, n_alt = -2
   Insn 2625: point = 3118, n_alt = 0
   Insn 2624: point = 3120, n_alt = 0
   Insn 2623: point = 3121, n_alt = -2
   Insn 2622: point = 3123, n_alt = 0
   Insn 2621: point = 3125, n_alt = -2
   Insn 2620: point = 3126, n_alt = 1
   Insn 2619: point = 3128, n_alt = 0
  BB 171
   Insn 2617: point = 3129, n_alt = -1
   Insn 2616: point = 3129, n_alt = 0
   Insn 2615: point = 3130, n_alt = 0
  BB 170
   Insn 2612: point = 3131, n_alt = 0
   Insn 2611: point = 3131, n_alt = 3
   Insn 2610: point = 3131, n_alt = 2
   Insn 2609: point = 3131, n_alt = 2
   Insn 2608: point = 3131, n_alt = -2
   Insn 2607: point = 3132, n_alt = -2
   Insn 2606: point = 3133, n_alt = -2
   Insn 2605: point = 3134, n_alt = -2
   Insn 2604: point = 3135, n_alt = 3
   Insn 2603: point = 3136, n_alt = 3
   Insn 2602: point = 3137, n_alt = 3
   Insn 2601: point = 3138, n_alt = 3
  BB 169
   Insn 2598: point = 3139, n_alt = 1
  BB 168
   Insn 2596: point = 3139, n_alt = -1
   Insn 2595: point = 3139, n_alt = 0
   Insn 2594: point = 3140, n_alt = 0
   Insn 2593: point = 3141, n_alt = 1
   Insn 2592: point = 3142, n_alt = 0
   Insn 2591: point = 3143, n_alt = 0
   Insn 2590: point = 3144, n_alt = 1
   Insn 5874: point = 3145, n_alt = -2
   Insn 2589: point = 3147, n_alt = 0
   Insn 5873: point = 3148, n_alt = -2
   Insn 2588: point = 3150, n_alt = 2
   Insn 2587: point = 3151, n_alt = 2
   Insn 2586: point = 3152, n_alt = 2
   Insn 2585: point = 3153, n_alt = 0
   Insn 2584: point = 3153, n_alt = 0
   Insn 2583: point = 3153, n_alt = 3
   Insn 2582: point = 3153, n_alt = 2
   Insn 2581: point = 3153, n_alt = 2
   Insn 2580: point = 3153, n_alt = 4
   Insn 2579: point = 3153, n_alt = 4
   Insn 2578: point = 3153, n_alt = -2
   Insn 2577: point = 3154, n_alt = -2
   Insn 2576: point = 3155, n_alt = 0
   Insn 2575: point = 3155, n_alt = 0
   Insn 2574: point = 3155, n_alt = 3
   Insn 2573: point = 3156, n_alt = 3
   Insn 2572: point = 3157, n_alt = 0
   Insn 2571: point = 3157, n_alt = 3
   Insn 2570: point = 3157, n_alt = 4
   Insn 2569: point = 3157, n_alt = 4
   Insn 2568: point = 3157, n_alt = 4
   Insn 2567: point = 3157, n_alt = 0
   Insn 2566: point = 3157, n_alt = 3
   Insn 2565: point = 3157, n_alt = 4
   Insn 2564: point = 3157, n_alt = -2
   Insn 2563: point = 3158, n_alt = -2
   Insn 2562: point = 3159, n_alt = 4
   Insn 2561: point = 3159, n_alt = 4
   Insn 2560: point = 3159, n_alt = 3
   Insn 2559: point = 3160, n_alt = 3
   Insn 2558: point = 3161, n_alt = 0
   Insn 2557: point = 3161, n_alt = 3
   Insn 2556: point = 3161, n_alt = 4
   Insn 2555: point = 3161, n_alt = -2
   Insn 2554: point = 3162, n_alt = -2
   Insn 2553: point = 3163, n_alt = 4
   Insn 2552: point = 3163, n_alt = 4
   Insn 2551: point = 3163, n_alt = 3
   Insn 2550: point = 3164, n_alt = 3
   Insn 2549: point = 3165, n_alt = 1
   Insn 2548: point = 3166, n_alt = 0
   Insn 2547: point = 3168, n_alt = 0
   Insn 2546: point = 3170, n_alt = 0
   Insn 2545: point = 3172, n_alt = 0
   Insn 2544: point = 3174, n_alt = 0
   Insn 2543: point = 3176, n_alt = 0
   Insn 2542: point = 3177, n_alt = -2
   Insn 2541: point = 3179, n_alt = -2
   Insn 2540: point = 3181, n_alt = 0
   Insn 2539: point = 3183, n_alt = 0
   Insn 2538: point = 3184, n_alt = -2
   Insn 2537: point = 3186, n_alt = 0
   Insn 2536: point = 3188, n_alt = -2
   Insn 2535: point = 3189, n_alt = 1
   Insn 2534: point = 3191, n_alt = 0
  BB 167
   Insn 2532: point = 3192, n_alt = -1
   Insn 2531: point = 3192, n_alt = 0
   Insn 2530: point = 3193, n_alt = 0
   Insn 2529: point = 3195, n_alt = 0
   Insn 2528: point = 3197, n_alt = 0
   Insn 2527: point = 3199, n_alt = 0
   Insn 2526: point = 3201, n_alt = 0
   Insn 2525: point = 3203, n_alt = 0
   Insn 2524: point = 3204, n_alt = -2
   Insn 2523: point = 3206, n_alt = -2
   Insn 2522: point = 3208, n_alt = 0
   Insn 2521: point = 3210, n_alt = 0
   Insn 2520: point = 3211, n_alt = -2
   Insn 2519: point = 3213, n_alt = 0
   Insn 2518: point = 3215, n_alt = -2
   Insn 2517: point = 3216, n_alt = 1
   Insn 2516: point = 3218, n_alt = 0
  BB 166
   Insn 2514: point = 3219, n_alt = -1
   Insn 2513: point = 3219, n_alt = 0
   Insn 2512: point = 3220, n_alt = 0
  BB 165
   Insn 2509: point = 3221, n_alt = 0
   Insn 2508: point = 3221, n_alt = 3
   Insn 2507: point = 3221, n_alt = 2
   Insn 2506: point = 3221, n_alt = 2
   Insn 2505: point = 3221, n_alt = -2
   Insn 2504: point = 3222, n_alt = -2
   Insn 2503: point = 3223, n_alt = -2
   Insn 2502: point = 3224, n_alt = -2
   Insn 2501: point = 3225, n_alt = 3
   Insn 2500: point = 3226, n_alt = 3
   Insn 2499: point = 3227, n_alt = 3
   Insn 2498: point = 3228, n_alt = 3
  BB 164
   Insn 2495: point = 3229, n_alt = 1
  BB 163
   Insn 2493: point = 3229, n_alt = -1
   Insn 2492: point = 3229, n_alt = 0
   Insn 2491: point = 3230, n_alt = 0
   Insn 2490: point = 3231, n_alt = 1
   Insn 2489: point = 3232, n_alt = 0
   Insn 2488: point = 3233, n_alt = 0
   Insn 2487: point = 3234, n_alt = 1
   Insn 5872: point = 3235, n_alt = -2
   Insn 2486: point = 3237, n_alt = 0
   Insn 5871: point = 3238, n_alt = -2
   Insn 2485: point = 3240, n_alt = 2
   Insn 2484: point = 3241, n_alt = 2
   Insn 2483: point = 3242, n_alt = 2
   Insn 2482: point = 3243, n_alt = 0
   Insn 2481: point = 3243, n_alt = 0
   Insn 2480: point = 3243, n_alt = 3
   Insn 2479: point = 3243, n_alt = 2
   Insn 2478: point = 3243, n_alt = 2
   Insn 2477: point = 3243, n_alt = 4
   Insn 2476: point = 3243, n_alt = 4
   Insn 2475: point = 3243, n_alt = -2
   Insn 2474: point = 3244, n_alt = -2
   Insn 2473: point = 3245, n_alt = 0
   Insn 2472: point = 3245, n_alt = 0
   Insn 2471: point = 3245, n_alt = 3
   Insn 2470: point = 3246, n_alt = 3
   Insn 2469: point = 3247, n_alt = 0
   Insn 2468: point = 3247, n_alt = 3
   Insn 2467: point = 3247, n_alt = 4
   Insn 2466: point = 3247, n_alt = -2
   Insn 2465: point = 3248, n_alt = -2
   Insn 2464: point = 3249, n_alt = 4
   Insn 2463: point = 3249, n_alt = 4
   Insn 2462: point = 3249, n_alt = 3
   Insn 2461: point = 3250, n_alt = 3
   Insn 2460: point = 3251, n_alt = 1
   Insn 2459: point = 3252, n_alt = 0
   Insn 2458: point = 3254, n_alt = 0
   Insn 2457: point = 3256, n_alt = 0
   Insn 2456: point = 3258, n_alt = 0
   Insn 2455: point = 3260, n_alt = 0
   Insn 2454: point = 3262, n_alt = 0
   Insn 2453: point = 3263, n_alt = -2
   Insn 2452: point = 3265, n_alt = -2
   Insn 2451: point = 3267, n_alt = 0
   Insn 2450: point = 3269, n_alt = 0
   Insn 2449: point = 3270, n_alt = -2
   Insn 2448: point = 3272, n_alt = 0
   Insn 2447: point = 3274, n_alt = -2
   Insn 2446: point = 3275, n_alt = 1
   Insn 2445: point = 3277, n_alt = 0
  BB 162
   Insn 2443: point = 3278, n_alt = -1
   Insn 2442: point = 3278, n_alt = 0
   Insn 2441: point = 3279, n_alt = 0
   Insn 2440: point = 3281, n_alt = 0
   Insn 2439: point = 3283, n_alt = 0
   Insn 2438: point = 3285, n_alt = 0
   Insn 2437: point = 3287, n_alt = 0
   Insn 2436: point = 3289, n_alt = 0
   Insn 2435: point = 3290, n_alt = -2
   Insn 2434: point = 3292, n_alt = -2
   Insn 2433: point = 3294, n_alt = 0
   Insn 2432: point = 3296, n_alt = 0
   Insn 2431: point = 3297, n_alt = -2
   Insn 2430: point = 3299, n_alt = 0
   Insn 2429: point = 3301, n_alt = -2
   Insn 2428: point = 3302, n_alt = 1
   Insn 2427: point = 3304, n_alt = 0
  BB 161
   Insn 2425: point = 3305, n_alt = -1
   Insn 2424: point = 3305, n_alt = 0
   Insn 2423: point = 3306, n_alt = 0
  BB 160
   Insn 2420: point = 3307, n_alt = 0
   Insn 2419: point = 3307, n_alt = 3
   Insn 2418: point = 3307, n_alt = 2
   Insn 2417: point = 3307, n_alt = 2
   Insn 2416: point = 3307, n_alt = -2
   Insn 2415: point = 3308, n_alt = -2
   Insn 2414: point = 3309, n_alt = -2
   Insn 2413: point = 3310, n_alt = -2
   Insn 2412: point = 3311, n_alt = 3
   Insn 2411: point = 3312, n_alt = 3
   Insn 2410: point = 3313, n_alt = 3
   Insn 2409: point = 3314, n_alt = 3
  BB 159
   Insn 2407: point = 3315, n_alt = -1
   Insn 2406: point = 3315, n_alt = 0
   Insn 2405: point = 3316, n_alt = 0
  BB 158
   Insn 2402: point = 3317, n_alt = 1
  BB 157
   Insn 2400: point = 3317, n_alt = -1
   Insn 2399: point = 3317, n_alt = 0
   Insn 2398: point = 3318, n_alt = 0
   Insn 2397: point = 3319, n_alt = 1
   Insn 2396: point = 3320, n_alt = 0
   Insn 2395: point = 3321, n_alt = 0
   Insn 2394: point = 3322, n_alt = 1
   Insn 5870: point = 3323, n_alt = -2
   Insn 2393: point = 3325, n_alt = 0
   Insn 5869: point = 3326, n_alt = -2
   Insn 2392: point = 3328, n_alt = 2
   Insn 2391: point = 3329, n_alt = 2
   Insn 2390: point = 3330, n_alt = 2
  BB 156
   Insn 2387: point = 3331, n_alt = 0
   Insn 2386: point = 3331, n_alt = 3
   Insn 2385: point = 3331, n_alt = 2
   Insn 2384: point = 3331, n_alt = 2
   Insn 2383: point = 3331, n_alt = -2
   Insn 2382: point = 3332, n_alt = -2
   Insn 2381: point = 3333, n_alt = -2
   Insn 2380: point = 3334, n_alt = -2
   Insn 2379: point = 3335, n_alt = 3
   Insn 2378: point = 3336, n_alt = 3
   Insn 2377: point = 3337, n_alt = 3
   Insn 2376: point = 3338, n_alt = 3
  BB 155
   Insn 2374: point = 3339, n_alt = -1
   Insn 2373: point = 3339, n_alt = 0
   Insn 2372: point = 3340, n_alt = 0
  BB 154
   Insn 2369: point = 3341, n_alt = 1
  BB 153
   Insn 2367: point = 3341, n_alt = -1
   Insn 2366: point = 3341, n_alt = 0
   Insn 2365: point = 3342, n_alt = 0
   Insn 2364: point = 3343, n_alt = 1
   Insn 2363: point = 3344, n_alt = 0
   Insn 2362: point = 3345, n_alt = 0
   Insn 2361: point = 3346, n_alt = 1
   Insn 5868: point = 3347, n_alt = -2
   Insn 2360: point = 3349, n_alt = 0
   Insn 5867: point = 3350, n_alt = -2
   Insn 2359: point = 3352, n_alt = 2
   Insn 2358: point = 3353, n_alt = 2
   Insn 2357: point = 3354, n_alt = 2
   Insn 2356: point = 3355, n_alt = 0
   Insn 2355: point = 3355, n_alt = 0
   Insn 2354: point = 3355, n_alt = 3
   Insn 2353: point = 3355, n_alt = 2
   Insn 2352: point = 3355, n_alt = 2
   Insn 2351: point = 3355, n_alt = 4
   Insn 2350: point = 3355, n_alt = 4
   Insn 2349: point = 3355, n_alt = -2
   Insn 2348: point = 3356, n_alt = -2
   Insn 2347: point = 3357, n_alt = 0
   Insn 2346: point = 3357, n_alt = 0
   Insn 2345: point = 3357, n_alt = 3
   Insn 2344: point = 3358, n_alt = 3
   Insn 2343: point = 3359, n_alt = 0
   Insn 2342: point = 3359, n_alt = 3
   Insn 2341: point = 3359, n_alt = 4
   Insn 2340: point = 3359, n_alt = -2
   Insn 2339: point = 3360, n_alt = -2
   Insn 2338: point = 3361, n_alt = 4
   Insn 2337: point = 3361, n_alt = 4
   Insn 2336: point = 3361, n_alt = 3
   Insn 2335: point = 3362, n_alt = 3
   Insn 2334: point = 3363, n_alt = 1
   Insn 2333: point = 3364, n_alt = 0
   Insn 2332: point = 3366, n_alt = 0
   Insn 2331: point = 3368, n_alt = 0
   Insn 2330: point = 3370, n_alt = 0
   Insn 2329: point = 3372, n_alt = 0
   Insn 2328: point = 3374, n_alt = 0
   Insn 2327: point = 3375, n_alt = -2
   Insn 2326: point = 3377, n_alt = -2
   Insn 2325: point = 3379, n_alt = 0
   Insn 2324: point = 3381, n_alt = 0
   Insn 2323: point = 3382, n_alt = -2
   Insn 2322: point = 3384, n_alt = 0
   Insn 2321: point = 3386, n_alt = -2
   Insn 2320: point = 3387, n_alt = 1
   Insn 2319: point = 3389, n_alt = 0
   Insn 2318: point = 3390, n_alt = 0
   Insn 2317: point = 3390, n_alt = 3
   Insn 2316: point = 3390, n_alt = 4
   Insn 2315: point = 3390, n_alt = -2
   Insn 2314: point = 3391, n_alt = -2
   Insn 2313: point = 3392, n_alt = 4
   Insn 2312: point = 3392, n_alt = 4
   Insn 2311: point = 3392, n_alt = 3
   Insn 2310: point = 3393, n_alt = 3
   Insn 2309: point = 3394, n_alt = 1
   Insn 2308: point = 3395, n_alt = 0
   Insn 2307: point = 3397, n_alt = 0
   Insn 2306: point = 3399, n_alt = 0
   Insn 2305: point = 3401, n_alt = 0
   Insn 2304: point = 3403, n_alt = 0
   Insn 2303: point = 3405, n_alt = 0
   Insn 2302: point = 3406, n_alt = -2
   Insn 2301: point = 3408, n_alt = -2
   Insn 2300: point = 3410, n_alt = 0
   Insn 2299: point = 3412, n_alt = 0
   Insn 2298: point = 3413, n_alt = -2
   Insn 2297: point = 3415, n_alt = 0
   Insn 2296: point = 3417, n_alt = -2
   Insn 2295: point = 3418, n_alt = 1
   Insn 2294: point = 3420, n_alt = 0
  BB 152
   Insn 2291: point = 3421, n_alt = -1
   Insn 2290: point = 3421, n_alt = 0
   Insn 2289: point = 3422, n_alt = 0
   Insn 2288: point = 3424, n_alt = 0
   Insn 2287: point = 3426, n_alt = 0
   Insn 2286: point = 3428, n_alt = 0
   Insn 2285: point = 3430, n_alt = 0
   Insn 2284: point = 3432, n_alt = 0
   Insn 2283: point = 3433, n_alt = -2
   Insn 2282: point = 3435, n_alt = -2
   Insn 2281: point = 3437, n_alt = 0
   Insn 2280: point = 3439, n_alt = 0
   Insn 2279: point = 3440, n_alt = -2
   Insn 2278: point = 3442, n_alt = 0
   Insn 2277: point = 3444, n_alt = -2
   Insn 2276: point = 3445, n_alt = 1
   Insn 2275: point = 3447, n_alt = 0
  BB 151
   Insn 2273: point = 3448, n_alt = -1
   Insn 2272: point = 3448, n_alt = 0
   Insn 2271: point = 3449, n_alt = 0
   Insn 2270: point = 3451, n_alt = 0
   Insn 2269: point = 3453, n_alt = 0
   Insn 2268: point = 3455, n_alt = 0
   Insn 2267: point = 3457, n_alt = 0
   Insn 2266: point = 3459, n_alt = 0
   Insn 2265: point = 3460, n_alt = -2
   Insn 2264: point = 3462, n_alt = -2
   Insn 2263: point = 3464, n_alt = 0
   Insn 2262: point = 3466, n_alt = 0
   Insn 2261: point = 3467, n_alt = -2
   Insn 2260: point = 3469, n_alt = 0
   Insn 2259: point = 3471, n_alt = -2
   Insn 2258: point = 3472, n_alt = 1
   Insn 2257: point = 3474, n_alt = 0
  BB 150
   Insn 2254: point = 3475, n_alt = -1
   Insn 2253: point = 3475, n_alt = 0
   Insn 2252: point = 3476, n_alt = 0
  BB 149
   Insn 2250: point = 3477, n_alt = -1
   Insn 2249: point = 3477, n_alt = 0
   Insn 2248: point = 3478, n_alt = 0
  BB 148
   Insn 2245: point = 3479, n_alt = 0
   Insn 2244: point = 3479, n_alt = 3
   Insn 2243: point = 3479, n_alt = 2
   Insn 2242: point = 3479, n_alt = 2
   Insn 2241: point = 3479, n_alt = -2
   Insn 2240: point = 3480, n_alt = -2
   Insn 2239: point = 3481, n_alt = -2
   Insn 2238: point = 3482, n_alt = -2
   Insn 2237: point = 3483, n_alt = 3
   Insn 2236: point = 3484, n_alt = 3
   Insn 2235: point = 3485, n_alt = 3
   Insn 2234: point = 3486, n_alt = 3
  BB 147
   Insn 2231: point = 3487, n_alt = 1
  BB 146
   Insn 2229: point = 3487, n_alt = -1
   Insn 2228: point = 3487, n_alt = 0
   Insn 2227: point = 3488, n_alt = 0
   Insn 2226: point = 3489, n_alt = 1
   Insn 2225: point = 3490, n_alt = 0
   Insn 2224: point = 3491, n_alt = 0
   Insn 2223: point = 3492, n_alt = 1
   Insn 5866: point = 3493, n_alt = -2
   Insn 2222: point = 3495, n_alt = 0
   Insn 5865: point = 3496, n_alt = -2
   Insn 2221: point = 3498, n_alt = 2
   Insn 2220: point = 3499, n_alt = 2
   Insn 2219: point = 3500, n_alt = 2
   Insn 2218: point = 3501, n_alt = 0
   Insn 2217: point = 3501, n_alt = 0
   Insn 2216: point = 3501, n_alt = 3
   Insn 2215: point = 3501, n_alt = 2
   Insn 2214: point = 3501, n_alt = 2
   Insn 2213: point = 3501, n_alt = 4
   Insn 2212: point = 3501, n_alt = 4
   Insn 2211: point = 3501, n_alt = -2
   Insn 2210: point = 3502, n_alt = -2
   Insn 2209: point = 3503, n_alt = 0
   Insn 2208: point = 3503, n_alt = 0
   Insn 2207: point = 3503, n_alt = 3
   Insn 2206: point = 3504, n_alt = 3
   Insn 2205: point = 3505, n_alt = 0
   Insn 2204: point = 3505, n_alt = 3
   Insn 2203: point = 3505, n_alt = 4
   Insn 2202: point = 3505, n_alt = 4
   Insn 2201: point = 3505, n_alt = 4
   Insn 2200: point = 3505, n_alt = 2
   Insn 2199: point = 3505, n_alt = 4
   Insn 2198: point = 3505, n_alt = 0
   Insn 2197: point = 3505, n_alt = 3
   Insn 2196: point = 3505, n_alt = 4
   Insn 2195: point = 3505, n_alt = -2
   Insn 2194: point = 3506, n_alt = -2
   Insn 2193: point = 3507, n_alt = 4
   Insn 2192: point = 3507, n_alt = 4
   Insn 2191: point = 3507, n_alt = 3
   Insn 2190: point = 3508, n_alt = 3
   Insn 2189: point = 3509, n_alt = 0
   Insn 2188: point = 3509, n_alt = 3
   Insn 2187: point = 3509, n_alt = 4
   Insn 2186: point = 3509, n_alt = -2
   Insn 2185: point = 3510, n_alt = -2
   Insn 2184: point = 3511, n_alt = 4
   Insn 2183: point = 3511, n_alt = 4
   Insn 2182: point = 3511, n_alt = 3
   Insn 2181: point = 3512, n_alt = 3
   Insn 2180: point = 3513, n_alt = 0
   Insn 2179: point = 3513, n_alt = 3
   Insn 2178: point = 3513, n_alt = 4
   Insn 2177: point = 3513, n_alt = -2
   Insn 2176: point = 3514, n_alt = -2
   Insn 2175: point = 3515, n_alt = 4
   Insn 2174: point = 3515, n_alt = 4
   Insn 2173: point = 3515, n_alt = 3
   Insn 2172: point = 3516, n_alt = 3
   Insn 2171: point = 3517, n_alt = 1
   Insn 2170: point = 3518, n_alt = 0
   Insn 2169: point = 3520, n_alt = 0
   Insn 2168: point = 3522, n_alt = 0
   Insn 2167: point = 3524, n_alt = 0
   Insn 2166: point = 3526, n_alt = 0
   Insn 2165: point = 3528, n_alt = 0
   Insn 2164: point = 3529, n_alt = -2
   Insn 2163: point = 3531, n_alt = -2
   Insn 2162: point = 3533, n_alt = 0
   Insn 2161: point = 3535, n_alt = 0
   Insn 2160: point = 3536, n_alt = -2
   Insn 2159: point = 3538, n_alt = 0
   Insn 2158: point = 3540, n_alt = -2
   Insn 2157: point = 3541, n_alt = 1
   Insn 2156: point = 3543, n_alt = 0
  BB 145
   Insn 2154: point = 3544, n_alt = -1
   Insn 2153: point = 3544, n_alt = 0
   Insn 2152: point = 3545, n_alt = 0
   Insn 2151: point = 3547, n_alt = 0
   Insn 2150: point = 3549, n_alt = 0
   Insn 2149: point = 3551, n_alt = 0
   Insn 2148: point = 3553, n_alt = 0
   Insn 2147: point = 3555, n_alt = 0
   Insn 2146: point = 3556, n_alt = -2
   Insn 2145: point = 3558, n_alt = -2
   Insn 2144: point = 3560, n_alt = 0
   Insn 2143: point = 3562, n_alt = 0
   Insn 2142: point = 3563, n_alt = -2
   Insn 2141: point = 3565, n_alt = 0
   Insn 2140: point = 3567, n_alt = -2
   Insn 2139: point = 3568, n_alt = 1
   Insn 2138: point = 3570, n_alt = 0
  BB 144
   Insn 2136: point = 3571, n_alt = -1
   Insn 2135: point = 3571, n_alt = 0
   Insn 2134: point = 3572, n_alt = 0
  BB 143
   Insn 2131: point = 3573, n_alt = 0
   Insn 2130: point = 3573, n_alt = 3
   Insn 2129: point = 3573, n_alt = 2
   Insn 2128: point = 3573, n_alt = 2
   Insn 2127: point = 3573, n_alt = -2
   Insn 2126: point = 3574, n_alt = -2
   Insn 2125: point = 3575, n_alt = -2
   Insn 2124: point = 3576, n_alt = -2
   Insn 2123: point = 3577, n_alt = 3
   Insn 2122: point = 3578, n_alt = 3
   Insn 2121: point = 3579, n_alt = 3
   Insn 2120: point = 3580, n_alt = 3
  BB 142
   Insn 2117: point = 3581, n_alt = 1
  BB 141
   Insn 2115: point = 3581, n_alt = -1
   Insn 2114: point = 3581, n_alt = 0
   Insn 2113: point = 3582, n_alt = 0
   Insn 2112: point = 3583, n_alt = 1
   Insn 2111: point = 3584, n_alt = 0
   Insn 2110: point = 3585, n_alt = 0
   Insn 2109: point = 3586, n_alt = 1
   Insn 5864: point = 3587, n_alt = -2
   Insn 2108: point = 3589, n_alt = 0
   Insn 5863: point = 3590, n_alt = -2
   Insn 2107: point = 3592, n_alt = 2
   Insn 2106: point = 3593, n_alt = 2
   Insn 2105: point = 3594, n_alt = 2
   Insn 2104: point = 3595, n_alt = 0
   Insn 2103: point = 3595, n_alt = 3
   Insn 2102: point = 3595, n_alt = -2
   Insn 2101: point = 3596, n_alt = 2
   Insn 2100: point = 3596, n_alt = 2
   Insn 2099: point = 3596, n_alt = -2
   Insn 2098: point = 3597, n_alt = -2
   Insn 2097: point = 3598, n_alt = 3
   Insn 2096: point = 3599, n_alt = 3
   Insn 2095: point = 3600, n_alt = 3
   Insn 2094: point = 3601, n_alt = 0
   Insn 2093: point = 3601, n_alt = 0
   Insn 2092: point = 3601, n_alt = 3
   Insn 2091: point = 3601, n_alt = 2
   Insn 2090: point = 3601, n_alt = 2
   Insn 2089: point = 3601, n_alt = 4
   Insn 2088: point = 3601, n_alt = 4
   Insn 2087: point = 3601, n_alt = -2
   Insn 2086: point = 3602, n_alt = -2
   Insn 2085: point = 3603, n_alt = 0
   Insn 2084: point = 3603, n_alt = 0
   Insn 2083: point = 3603, n_alt = 3
   Insn 2082: point = 3604, n_alt = 3
   Insn 2081: point = 3605, n_alt = 0
   Insn 2080: point = 3605, n_alt = 3
   Insn 2079: point = 3605, n_alt = 4
   Insn 2078: point = 3605, n_alt = -2
   Insn 2077: point = 3606, n_alt = -2
   Insn 2076: point = 3607, n_alt = 4
   Insn 2075: point = 3607, n_alt = 4
   Insn 2074: point = 3607, n_alt = 3
   Insn 2073: point = 3608, n_alt = 3
   Insn 2072: point = 3609, n_alt = 1
   Insn 2071: point = 3610, n_alt = 0
   Insn 2070: point = 3612, n_alt = 0
   Insn 2069: point = 3614, n_alt = 0
   Insn 2068: point = 3616, n_alt = 0
   Insn 2067: point = 3618, n_alt = 0
   Insn 2066: point = 3620, n_alt = 0
   Insn 2065: point = 3621, n_alt = -2
   Insn 2064: point = 3623, n_alt = -2
   Insn 2063: point = 3625, n_alt = 0
   Insn 2062: point = 3627, n_alt = 0
   Insn 2061: point = 3628, n_alt = -2
   Insn 2060: point = 3630, n_alt = 0
   Insn 2059: point = 3632, n_alt = -2
   Insn 2058: point = 3633, n_alt = 1
   Insn 2057: point = 3635, n_alt = 0
  BB 140
   Insn 2055: point = 3636, n_alt = -1
   Insn 2054: point = 3636, n_alt = 0
   Insn 2053: point = 3637, n_alt = 0
   Insn 2052: point = 3639, n_alt = 0
   Insn 2051: point = 3641, n_alt = 0
   Insn 2050: point = 3643, n_alt = 0
   Insn 2049: point = 3645, n_alt = 0
   Insn 2048: point = 3647, n_alt = 0
   Insn 2047: point = 3648, n_alt = -2
   Insn 2046: point = 3650, n_alt = -2
   Insn 2045: point = 3652, n_alt = 0
   Insn 2044: point = 3654, n_alt = 0
   Insn 2043: point = 3655, n_alt = -2
   Insn 2042: point = 3657, n_alt = 0
   Insn 2041: point = 3659, n_alt = -2
   Insn 2040: point = 3660, n_alt = 1
   Insn 2039: point = 3662, n_alt = 0
  BB 139
   Insn 2037: point = 3663, n_alt = -1
   Insn 2036: point = 3663, n_alt = 0
   Insn 2035: point = 3664, n_alt = 0
  BB 138
   Insn 2032: point = 3665, n_alt = 0
   Insn 2031: point = 3665, n_alt = 3
   Insn 2030: point = 3665, n_alt = 2
   Insn 2029: point = 3665, n_alt = 2
   Insn 2028: point = 3665, n_alt = -2
   Insn 2027: point = 3666, n_alt = -2
   Insn 2026: point = 3667, n_alt = -2
   Insn 2025: point = 3668, n_alt = -2
   Insn 2024: point = 3669, n_alt = 3
   Insn 2023: point = 3670, n_alt = 3
   Insn 2022: point = 3671, n_alt = 3
   Insn 2021: point = 3672, n_alt = 3
  BB 137
   Insn 2018: point = 3673, n_alt = 1
  BB 136
   Insn 2016: point = 3673, n_alt = -1
   Insn 2015: point = 3673, n_alt = 0
   Insn 2014: point = 3674, n_alt = 0
   Insn 2013: point = 3675, n_alt = 1
   Insn 2012: point = 3676, n_alt = 0
   Insn 2011: point = 3677, n_alt = 0
   Insn 2010: point = 3678, n_alt = 1
   Insn 5862: point = 3679, n_alt = -2
   Insn 2009: point = 3681, n_alt = 0
   Insn 5861: point = 3682, n_alt = -2
   Insn 2008: point = 3684, n_alt = 2
   Insn 2007: point = 3685, n_alt = 2
   Insn 2006: point = 3686, n_alt = 2
   Insn 2005: point = 3687, n_alt = 0
   Insn 2004: point = 3687, n_alt = 0
   Insn 2003: point = 3687, n_alt = 3
   Insn 2002: point = 3687, n_alt = 2
   Insn 2001: point = 3687, n_alt = 2
   Insn 2000: point = 3687, n_alt = 4
   Insn 1999: point = 3687, n_alt = 4
   Insn 1998: point = 3687, n_alt = -2
   Insn 1997: point = 3688, n_alt = -2
   Insn 1996: point = 3689, n_alt = 0
   Insn 1995: point = 3689, n_alt = 0
   Insn 1994: point = 3689, n_alt = 3
   Insn 1993: point = 3690, n_alt = 3
   Insn 1992: point = 3691, n_alt = 0
   Insn 1991: point = 3691, n_alt = 3
   Insn 1990: point = 3691, n_alt = 4
   Insn 1989: point = 3691, n_alt = 4
   Insn 1988: point = 3691, n_alt = 4
   Insn 1987: point = 3691, n_alt = 4
   Insn 1986: point = 3691, n_alt = 0
   Insn 1985: point = 3691, n_alt = 3
   Insn 1984: point = 3691, n_alt = 4
   Insn 1983: point = 3691, n_alt = -2
   Insn 1982: point = 3692, n_alt = -2
   Insn 1981: point = 3693, n_alt = 4
   Insn 1980: point = 3693, n_alt = 4
   Insn 1979: point = 3693, n_alt = 3
   Insn 1978: point = 3694, n_alt = 3
   Insn 1977: point = 3695, n_alt = 0
   Insn 1976: point = 3695, n_alt = 3
   Insn 1975: point = 3695, n_alt = 4
   Insn 1974: point = 3695, n_alt = -2
   Insn 1973: point = 3696, n_alt = -2
   Insn 1972: point = 3697, n_alt = 4
   Insn 1971: point = 3697, n_alt = 4
   Insn 1970: point = 3697, n_alt = 3
   Insn 1969: point = 3698, n_alt = 3
   Insn 1968: point = 3699, n_alt = 0
   Insn 1967: point = 3699, n_alt = 3
   Insn 1966: point = 3699, n_alt = 4
   Insn 1965: point = 3699, n_alt = -2
   Insn 1964: point = 3700, n_alt = -2
   Insn 1963: point = 3701, n_alt = 4
   Insn 1962: point = 3701, n_alt = 4
   Insn 1961: point = 3701, n_alt = 3
   Insn 1960: point = 3702, n_alt = 3
   Insn 1959: point = 3703, n_alt = 1
   Insn 1958: point = 3704, n_alt = 0
   Insn 1957: point = 3706, n_alt = 0
   Insn 1956: point = 3708, n_alt = 0
   Insn 1955: point = 3710, n_alt = 0
   Insn 1954: point = 3712, n_alt = 0
   Insn 1953: point = 3714, n_alt = 0
   Insn 1952: point = 3715, n_alt = -2
   Insn 1951: point = 3717, n_alt = -2
   Insn 1950: point = 3719, n_alt = 0
   Insn 1949: point = 3721, n_alt = 0
   Insn 1948: point = 3722, n_alt = -2
   Insn 1947: point = 3724, n_alt = 0
   Insn 1946: point = 3726, n_alt = -2
   Insn 1945: point = 3727, n_alt = 1
   Insn 1944: point = 3729, n_alt = 0
  BB 135
   Insn 1942: point = 3730, n_alt = -1
   Insn 1941: point = 3730, n_alt = 0
   Insn 1940: point = 3731, n_alt = 0
   Insn 1939: point = 3733, n_alt = 0
   Insn 1938: point = 3735, n_alt = 0
   Insn 1937: point = 3737, n_alt = 0
   Insn 1936: point = 3739, n_alt = 0
   Insn 1935: point = 3741, n_alt = 0
   Insn 1934: point = 3742, n_alt = -2
   Insn 1933: point = 3744, n_alt = -2
   Insn 1932: point = 3746, n_alt = 0
   Insn 1931: point = 3748, n_alt = 0
   Insn 1930: point = 3749, n_alt = -2
   Insn 1929: point = 3751, n_alt = 0
   Insn 1928: point = 3753, n_alt = -2
   Insn 1927: point = 3754, n_alt = 1
   Insn 1926: point = 3756, n_alt = 0
  BB 134
   Insn 1924: point = 3757, n_alt = -1
   Insn 1923: point = 3757, n_alt = 0
   Insn 1922: point = 3758, n_alt = 0
  BB 133
   Insn 1919: point = 3759, n_alt = 0
   Insn 1918: point = 3759, n_alt = 3
   Insn 1917: point = 3759, n_alt = 2
   Insn 1916: point = 3759, n_alt = 2
   Insn 1915: point = 3759, n_alt = -2
   Insn 1914: point = 3760, n_alt = -2
   Insn 1913: point = 3761, n_alt = -2
   Insn 1912: point = 3762, n_alt = -2
   Insn 1911: point = 3763, n_alt = 3
   Insn 1910: point = 3764, n_alt = 3
   Insn 1909: point = 3765, n_alt = 3
   Insn 1908: point = 3766, n_alt = 3
  BB 132
   Insn 1905: point = 3767, n_alt = 1
  BB 131
   Insn 1903: point = 3767, n_alt = -1
   Insn 1902: point = 3767, n_alt = 0
   Insn 1901: point = 3768, n_alt = 0
   Insn 1900: point = 3769, n_alt = 1
   Insn 1899: point = 3770, n_alt = 0
   Insn 1898: point = 3771, n_alt = 0
   Insn 1897: point = 3772, n_alt = 1
   Insn 5860: point = 3773, n_alt = -2
   Insn 1896: point = 3775, n_alt = 0
   Insn 5859: point = 3776, n_alt = -2
   Insn 1895: point = 3778, n_alt = 2
   Insn 1894: point = 3779, n_alt = 2
   Insn 1893: point = 3780, n_alt = 2
   Insn 1892: point = 3781, n_alt = 0
   Insn 1891: point = 3781, n_alt = 3
   Insn 1890: point = 3781, n_alt = -2
   Insn 1889: point = 3782, n_alt = 2
   Insn 1888: point = 3782, n_alt = 2
   Insn 1887: point = 3782, n_alt = -2
   Insn 1886: point = 3783, n_alt = -2
   Insn 1885: point = 3784, n_alt = 3
   Insn 1884: point = 3785, n_alt = 3
   Insn 1883: point = 3786, n_alt = 3
   Insn 1882: point = 3787, n_alt = 0
   Insn 1881: point = 3787, n_alt = 3
   Insn 1880: point = 3787, n_alt = -2
   Insn 1879: point = 3788, n_alt = 2
   Insn 1878: point = 3788, n_alt = -2
   Insn 1877: point = 3789, n_alt = -2
   Insn 1876: point = 3790, n_alt = 3
   Insn 1875: point = 3791, n_alt = 3
   Insn 1874: point = 3792, n_alt = 3
   Insn 1873: point = 3793, n_alt = 0
   Insn 1872: point = 3793, n_alt = 0
   Insn 1871: point = 3793, n_alt = 3
   Insn 1870: point = 3793, n_alt = 2
   Insn 1869: point = 3793, n_alt = 2
   Insn 1868: point = 3793, n_alt = 4
   Insn 1867: point = 3793, n_alt = 4
   Insn 1866: point = 3793, n_alt = -2
   Insn 1865: point = 3794, n_alt = -2
   Insn 1864: point = 3795, n_alt = 0
   Insn 1863: point = 3795, n_alt = 0
   Insn 1862: point = 3795, n_alt = 3
   Insn 1861: point = 3796, n_alt = 3
   Insn 1860: point = 3797, n_alt = 0
   Insn 1859: point = 3797, n_alt = 0
   Insn 1858: point = 3797, n_alt = 3
   Insn 1857: point = 3797, n_alt = 4
   Insn 1856: point = 3797, n_alt = 4
   Insn 1855: point = 3797, n_alt = 4
   Insn 1854: point = 3797, n_alt = 4
   Insn 1853: point = 3797, n_alt = 4
   Insn 1852: point = 3797, n_alt = 2
   Insn 1851: point = 3797, n_alt = 0
   Insn 1850: point = 3797, n_alt = 0
   Insn 1849: point = 3797, n_alt = 0
   Insn 1848: point = 3797, n_alt = 3
   Insn 1847: point = 3797, n_alt = 4
   Insn 1846: point = 3797, n_alt = -2
   Insn 1845: point = 3798, n_alt = -2
   Insn 1844: point = 3799, n_alt = 4
   Insn 1843: point = 3799, n_alt = 4
   Insn 1842: point = 3799, n_alt = 3
   Insn 1841: point = 3800, n_alt = 3
   Insn 1840: point = 3801, n_alt = 0
   Insn 1839: point = 3801, n_alt = 3
   Insn 1838: point = 3801, n_alt = 4
   Insn 1837: point = 3801, n_alt = -2
   Insn 1836: point = 3802, n_alt = -2
   Insn 1835: point = 3803, n_alt = 4
   Insn 1834: point = 3803, n_alt = 4
   Insn 1833: point = 3803, n_alt = 3
   Insn 1832: point = 3804, n_alt = 3
   Insn 1831: point = 3805, n_alt = 0
   Insn 1830: point = 3805, n_alt = 3
   Insn 1829: point = 3805, n_alt = 4
   Insn 1828: point = 3805, n_alt = -2
   Insn 1827: point = 3806, n_alt = -2
   Insn 1826: point = 3807, n_alt = 4
   Insn 1825: point = 3807, n_alt = 4
   Insn 1824: point = 3807, n_alt = 3
   Insn 1823: point = 3808, n_alt = 3
   Insn 1822: point = 3809, n_alt = 0
   Insn 1821: point = 3809, n_alt = 3
   Insn 1820: point = 3809, n_alt = 4
   Insn 1819: point = 3809, n_alt = -2
   Insn 1818: point = 3810, n_alt = -2
   Insn 1817: point = 3811, n_alt = 4
   Insn 1816: point = 3811, n_alt = 4
   Insn 1815: point = 3811, n_alt = 3
   Insn 1814: point = 3812, n_alt = 3
   Insn 1813: point = 3813, n_alt = 1
   Insn 1812: point = 3814, n_alt = 0
   Insn 1811: point = 3816, n_alt = 0
   Insn 1810: point = 3818, n_alt = 0
   Insn 1809: point = 3820, n_alt = 0
   Insn 1808: point = 3822, n_alt = 0
   Insn 1807: point = 3824, n_alt = 0
   Insn 1806: point = 3825, n_alt = -2
   Insn 1805: point = 3827, n_alt = -2
   Insn 1804: point = 3829, n_alt = 0
   Insn 1803: point = 3831, n_alt = 0
   Insn 1802: point = 3832, n_alt = -2
   Insn 1801: point = 3834, n_alt = 0
   Insn 1800: point = 3836, n_alt = -2
   Insn 1799: point = 3837, n_alt = 1
   Insn 1798: point = 3839, n_alt = 0
  BB 130
   Insn 1796: point = 3840, n_alt = -1
   Insn 1795: point = 3840, n_alt = 0
   Insn 1794: point = 3841, n_alt = 0
   Insn 1793: point = 3843, n_alt = 0
   Insn 1792: point = 3845, n_alt = 0
   Insn 1791: point = 3847, n_alt = 0
   Insn 1790: point = 3849, n_alt = 0
   Insn 1789: point = 3851, n_alt = 0
   Insn 1788: point = 3852, n_alt = -2
   Insn 1787: point = 3854, n_alt = -2
   Insn 1786: point = 3856, n_alt = 0
   Insn 1785: point = 3858, n_alt = 0
   Insn 1784: point = 3859, n_alt = -2
   Insn 1783: point = 3861, n_alt = 0
   Insn 1782: point = 3863, n_alt = -2
   Insn 1781: point = 3864, n_alt = 1
   Insn 1780: point = 3866, n_alt = 0
  BB 129
   Insn 1778: point = 3867, n_alt = -1
   Insn 1777: point = 3867, n_alt = 0
   Insn 1776: point = 3868, n_alt = 0
  BB 128
   Insn 1773: point = 3869, n_alt = 0
   Insn 1772: point = 3869, n_alt = 3
   Insn 1771: point = 3869, n_alt = 2
   Insn 1770: point = 3869, n_alt = 2
   Insn 1769: point = 3869, n_alt = -2
   Insn 1768: point = 3870, n_alt = -2
   Insn 1767: point = 3871, n_alt = -2
   Insn 1766: point = 3872, n_alt = -2
   Insn 1765: point = 3873, n_alt = 3
   Insn 1764: point = 3874, n_alt = 3
   Insn 1763: point = 3875, n_alt = 3
   Insn 1762: point = 3876, n_alt = 3
  BB 127
   Insn 1759: point = 3877, n_alt = 1
  BB 126
   Insn 1757: point = 3877, n_alt = -1
   Insn 1756: point = 3877, n_alt = 0
   Insn 1755: point = 3878, n_alt = 0
   Insn 1754: point = 3879, n_alt = 1
   Insn 1753: point = 3880, n_alt = 0
   Insn 1752: point = 3881, n_alt = 0
   Insn 1751: point = 3882, n_alt = 1
   Insn 5858: point = 3883, n_alt = -2
   Insn 1750: point = 3885, n_alt = 0
   Insn 5857: point = 3886, n_alt = -2
   Insn 1749: point = 3888, n_alt = 2
   Insn 1748: point = 3889, n_alt = 2
   Insn 1747: point = 3890, n_alt = 2
   Insn 1746: point = 3891, n_alt = 0
   Insn 1745: point = 3891, n_alt = 0
   Insn 1744: point = 3891, n_alt = 3
   Insn 1743: point = 3891, n_alt = 2
   Insn 1742: point = 3891, n_alt = 2
   Insn 1741: point = 3891, n_alt = 4
   Insn 1740: point = 3891, n_alt = 4
   Insn 1739: point = 3891, n_alt = -2
   Insn 1738: point = 3892, n_alt = -2
   Insn 1737: point = 3893, n_alt = 0
   Insn 1736: point = 3893, n_alt = 0
   Insn 1735: point = 3893, n_alt = 3
   Insn 1734: point = 3894, n_alt = 3
   Insn 1733: point = 3895, n_alt = 0
   Insn 1732: point = 3895, n_alt = 3
   Insn 1731: point = 3895, n_alt = 4
   Insn 1730: point = 3895, n_alt = 4
   Insn 1729: point = 3895, n_alt = 4
   Insn 1728: point = 3895, n_alt = 2
   Insn 1727: point = 3895, n_alt = 2
   Insn 1726: point = 3895, n_alt = 0
   Insn 1725: point = 3895, n_alt = 3
   Insn 1724: point = 3895, n_alt = 4
   Insn 1723: point = 3895, n_alt = -2
   Insn 1722: point = 3896, n_alt = -2
   Insn 1721: point = 3897, n_alt = 4
   Insn 1720: point = 3897, n_alt = 4
   Insn 1719: point = 3897, n_alt = 3
   Insn 1718: point = 3898, n_alt = 3
   Insn 1717: point = 3899, n_alt = 0
   Insn 1716: point = 3899, n_alt = 3
   Insn 1715: point = 3899, n_alt = 4
   Insn 1714: point = 3899, n_alt = -2
   Insn 1713: point = 3900, n_alt = -2
   Insn 1712: point = 3901, n_alt = 4
   Insn 1711: point = 3901, n_alt = 4
   Insn 1710: point = 3901, n_alt = 3
   Insn 1709: point = 3902, n_alt = 3
   Insn 1708: point = 3903, n_alt = 1
   Insn 1707: point = 3904, n_alt = 0
   Insn 1706: point = 3906, n_alt = 0
   Insn 1705: point = 3908, n_alt = 0
   Insn 1704: point = 3910, n_alt = 0
   Insn 1703: point = 3912, n_alt = 0
   Insn 1702: point = 3914, n_alt = 0
   Insn 1701: point = 3915, n_alt = -2
   Insn 1700: point = 3917, n_alt = -2
   Insn 1699: point = 3919, n_alt = 0
   Insn 1698: point = 3921, n_alt = 0
   Insn 1697: point = 3922, n_alt = -2
   Insn 1696: point = 3924, n_alt = 0
   Insn 1695: point = 3926, n_alt = -2
   Insn 1694: point = 3927, n_alt = 1
   Insn 1693: point = 3929, n_alt = 0
  BB 125
   Insn 1691: point = 3930, n_alt = -1
   Insn 1690: point = 3930, n_alt = 0
   Insn 1689: point = 3931, n_alt = 0
   Insn 1688: point = 3933, n_alt = 0
   Insn 1687: point = 3935, n_alt = 0
   Insn 1686: point = 3937, n_alt = 0
   Insn 1685: point = 3939, n_alt = 0
   Insn 1684: point = 3941, n_alt = 0
   Insn 1683: point = 3942, n_alt = -2
   Insn 1682: point = 3944, n_alt = -2
   Insn 1681: point = 3946, n_alt = 0
   Insn 1680: point = 3948, n_alt = 0
   Insn 1679: point = 3949, n_alt = -2
   Insn 1678: point = 3951, n_alt = 0
   Insn 1677: point = 3953, n_alt = -2
   Insn 1676: point = 3954, n_alt = 1
   Insn 1675: point = 3956, n_alt = 0
  BB 124
   Insn 1673: point = 3957, n_alt = -1
   Insn 1672: point = 3957, n_alt = 0
   Insn 1671: point = 3958, n_alt = 0
  BB 123
   Insn 1668: point = 3959, n_alt = 0
   Insn 1667: point = 3959, n_alt = 3
   Insn 1666: point = 3959, n_alt = 2
   Insn 1665: point = 3959, n_alt = 2
   Insn 1664: point = 3959, n_alt = -2
   Insn 1663: point = 3960, n_alt = -2
   Insn 1662: point = 3961, n_alt = -2
   Insn 1661: point = 3962, n_alt = -2
   Insn 1660: point = 3963, n_alt = 3
   Insn 1659: point = 3964, n_alt = 3
   Insn 1658: point = 3965, n_alt = 3
   Insn 1657: point = 3966, n_alt = 3
  BB 122
   Insn 1654: point = 3967, n_alt = 1
  BB 121
   Insn 1652: point = 3967, n_alt = -1
   Insn 1651: point = 3967, n_alt = 0
   Insn 1650: point = 3968, n_alt = 0
   Insn 1649: point = 3969, n_alt = 1
   Insn 1648: point = 3970, n_alt = 0
   Insn 1647: point = 3971, n_alt = 0
   Insn 1646: point = 3972, n_alt = 1
   Insn 5856: point = 3973, n_alt = -2
   Insn 1645: point = 3975, n_alt = 0
   Insn 5855: point = 3976, n_alt = -2
   Insn 1644: point = 3978, n_alt = 2
   Insn 1643: point = 3979, n_alt = 2
   Insn 1642: point = 3980, n_alt = 2
   Insn 1641: point = 3981, n_alt = 0
   Insn 1640: point = 3981, n_alt = 0
   Insn 1639: point = 3981, n_alt = 3
   Insn 1638: point = 3981, n_alt = 2
   Insn 1637: point = 3981, n_alt = 2
   Insn 1636: point = 3981, n_alt = 4
   Insn 1635: point = 3981, n_alt = 4
   Insn 1634: point = 3981, n_alt = -2
   Insn 1633: point = 3982, n_alt = -2
   Insn 1632: point = 3983, n_alt = 0
   Insn 1631: point = 3983, n_alt = 0
   Insn 1630: point = 3983, n_alt = 3
   Insn 1629: point = 3984, n_alt = 3
   Insn 1628: point = 3985, n_alt = 0
   Insn 1627: point = 3985, n_alt = 3
   Insn 1626: point = 3985, n_alt = 4
   Insn 1625: point = 3985, n_alt = -2
   Insn 1624: point = 3986, n_alt = -2
   Insn 1623: point = 3987, n_alt = 4
   Insn 1622: point = 3987, n_alt = 4
   Insn 1621: point = 3987, n_alt = 3
   Insn 1620: point = 3988, n_alt = 3
   Insn 1619: point = 3989, n_alt = 1
   Insn 1618: point = 3990, n_alt = 0
   Insn 1617: point = 3992, n_alt = 0
   Insn 1616: point = 3994, n_alt = 0
   Insn 1615: point = 3996, n_alt = 0
   Insn 1614: point = 3998, n_alt = 0
   Insn 1613: point = 4000, n_alt = 0
   Insn 1612: point = 4001, n_alt = -2
   Insn 1611: point = 4003, n_alt = -2
   Insn 1610: point = 4005, n_alt = 0
   Insn 1609: point = 4007, n_alt = 0
   Insn 1608: point = 4008, n_alt = -2
   Insn 1607: point = 4010, n_alt = 0
   Insn 1606: point = 4012, n_alt = -2
   Insn 1605: point = 4013, n_alt = 1
   Insn 1604: point = 4015, n_alt = 0
  BB 120
   Insn 1602: point = 4016, n_alt = -1
   Insn 1601: point = 4016, n_alt = 0
   Insn 1600: point = 4017, n_alt = 0
   Insn 1599: point = 4019, n_alt = 0
   Insn 1598: point = 4021, n_alt = 0
   Insn 1597: point = 4023, n_alt = 0
   Insn 1596: point = 4025, n_alt = 0
   Insn 1595: point = 4027, n_alt = 0
   Insn 1594: point = 4028, n_alt = -2
   Insn 1593: point = 4030, n_alt = -2
   Insn 1592: point = 4032, n_alt = 0
   Insn 1591: point = 4034, n_alt = 0
   Insn 1590: point = 4035, n_alt = -2
   Insn 1589: point = 4037, n_alt = 0
   Insn 1588: point = 4039, n_alt = -2
   Insn 1587: point = 4040, n_alt = 1
   Insn 1586: point = 4042, n_alt = 0
  BB 119
   Insn 1584: point = 4043, n_alt = -1
   Insn 1583: point = 4043, n_alt = 0
   Insn 1582: point = 4044, n_alt = 0
  BB 118
   Insn 1579: point = 4045, n_alt = 0
   Insn 1578: point = 4045, n_alt = 3
   Insn 1577: point = 4045, n_alt = 2
   Insn 1576: point = 4045, n_alt = 2
   Insn 1575: point = 4045, n_alt = -2
   Insn 1574: point = 4046, n_alt = -2
   Insn 1573: point = 4047, n_alt = -2
   Insn 1572: point = 4048, n_alt = -2
   Insn 1571: point = 4049, n_alt = 3
   Insn 1570: point = 4050, n_alt = 3
   Insn 1569: point = 4051, n_alt = 3
   Insn 1568: point = 4052, n_alt = 3
   Insn 1567: point = 4053, n_alt = 0
   Insn 1566: point = 4053, n_alt = -2
   Insn 1565: point = 4054, n_alt = 3
   Insn 1564: point = 4055, n_alt = 0
   Insn 1563: point = 4055, n_alt = -2
   Insn 1562: point = 4056, n_alt = 2
   Insn 1561: point = 4056, n_alt = 2
   Insn 1560: point = 4056, n_alt = 3
   Insn 1559: point = 4057, n_alt = 0
   Insn 1558: point = 4057, n_alt = -2
   Insn 1557: point = 4058, n_alt = 3
   Insn 1556: point = 4059, n_alt = 1
   Insn 1555: point = 4059, n_alt = 1
   Insn 1554: point = 4059, n_alt = 1
   Insn 1553: point = 4059, n_alt = 5
  BB 117
   Insn 1550: point = 4059, n_alt = 1
  BB 116
   Insn 1548: point = 4059, n_alt = -1
   Insn 1547: point = 4059, n_alt = 0
   Insn 1546: point = 4060, n_alt = 0
   Insn 1545: point = 4061, n_alt = 1
   Insn 1544: point = 4062, n_alt = 0
   Insn 1543: point = 4063, n_alt = 0
   Insn 1542: point = 4064, n_alt = 1
   Insn 5854: point = 4065, n_alt = -2
   Insn 1541: point = 4067, n_alt = 0
   Insn 5853: point = 4068, n_alt = -2
   Insn 1540: point = 4070, n_alt = 2
   Insn 1539: point = 4071, n_alt = 2
   Insn 1538: point = 4072, n_alt = 2
   Insn 1537: point = 4073, n_alt = 0
   Insn 1536: point = 4073, n_alt = 0
   Insn 1535: point = 4073, n_alt = 3
   Insn 1534: point = 4073, n_alt = 2
   Insn 1533: point = 4073, n_alt = 2
   Insn 1532: point = 4073, n_alt = 4
   Insn 1531: point = 4073, n_alt = 4
   Insn 1530: point = 4073, n_alt = -2
   Insn 1529: point = 4074, n_alt = -2
   Insn 1528: point = 4075, n_alt = 0
   Insn 1527: point = 4075, n_alt = 0
   Insn 1526: point = 4075, n_alt = 3
   Insn 1525: point = 4076, n_alt = 3
   Insn 1524: point = 4077, n_alt = 0
   Insn 1523: point = 4077, n_alt = 3
   Insn 1522: point = 4077, n_alt = 4
   Insn 1521: point = 4077, n_alt = -2
   Insn 1520: point = 4078, n_alt = -2
   Insn 1519: point = 4079, n_alt = 4
   Insn 1518: point = 4079, n_alt = 4
   Insn 1517: point = 4079, n_alt = 3
   Insn 1516: point = 4080, n_alt = 3
   Insn 1515: point = 4081, n_alt = 1
   Insn 1514: point = 4082, n_alt = 0
   Insn 1513: point = 4084, n_alt = 0
   Insn 1512: point = 4086, n_alt = 0
   Insn 1511: point = 4088, n_alt = 0
   Insn 1510: point = 4090, n_alt = 0
   Insn 1509: point = 4092, n_alt = 0
   Insn 1508: point = 4093, n_alt = -2
   Insn 1507: point = 4095, n_alt = -2
   Insn 1506: point = 4097, n_alt = 0
   Insn 1505: point = 4099, n_alt = 0
   Insn 1504: point = 4100, n_alt = -2
   Insn 1503: point = 4102, n_alt = 0
   Insn 1502: point = 4104, n_alt = -2
   Insn 1501: point = 4105, n_alt = 1
   Insn 1500: point = 4107, n_alt = 0
  BB 115
   Insn 1498: point = 4108, n_alt = -1
   Insn 1497: point = 4108, n_alt = 0
   Insn 1496: point = 4109, n_alt = 0
   Insn 1495: point = 4111, n_alt = 0
   Insn 1494: point = 4113, n_alt = 0
   Insn 1493: point = 4115, n_alt = 0
   Insn 1492: point = 4117, n_alt = 0
   Insn 1491: point = 4119, n_alt = 0
   Insn 1490: point = 4120, n_alt = -2
   Insn 1489: point = 4122, n_alt = -2
   Insn 1488: point = 4124, n_alt = 0
   Insn 1487: point = 4126, n_alt = 0
   Insn 1486: point = 4127, n_alt = -2
   Insn 1485: point = 4129, n_alt = 0
   Insn 1484: point = 4131, n_alt = -2
   Insn 1483: point = 4132, n_alt = 1
   Insn 1482: point = 4134, n_alt = 0
  BB 114
   Insn 1480: point = 4135, n_alt = -1
   Insn 1479: point = 4135, n_alt = 0
   Insn 1478: point = 4136, n_alt = 0
  BB 113
   Insn 1475: point = 4137, n_alt = 0
   Insn 1474: point = 4137, n_alt = 3
   Insn 1473: point = 4137, n_alt = 2
   Insn 1472: point = 4137, n_alt = 2
   Insn 1471: point = 4137, n_alt = -2
   Insn 1470: point = 4138, n_alt = -2
   Insn 1469: point = 4139, n_alt = -2
   Insn 1468: point = 4140, n_alt = -2
   Insn 1467: point = 4141, n_alt = 3
   Insn 1466: point = 4142, n_alt = 3
   Insn 1465: point = 4143, n_alt = 3
   Insn 1464: point = 4144, n_alt = 3
   Insn 1463: point = 4145, n_alt = 0
   Insn 1462: point = 4145, n_alt = -2
   Insn 1461: point = 4146, n_alt = 3
   Insn 1460: point = 4147, n_alt = 0
   Insn 1459: point = 4147, n_alt = -2
   Insn 1458: point = 4148, n_alt = 2
   Insn 1457: point = 4148, n_alt = 2
   Insn 1456: point = 4148, n_alt = 3
   Insn 1455: point = 4149, n_alt = 0
   Insn 1454: point = 4149, n_alt = -2
   Insn 1453: point = 4150, n_alt = 3
   Insn 1452: point = 4151, n_alt = 1
   Insn 1451: point = 4151, n_alt = 1
   Insn 1450: point = 4151, n_alt = 1
   Insn 1449: point = 4151, n_alt = 5
  BB 112
   Insn 1446: point = 4151, n_alt = 1
  BB 111
   Insn 1444: point = 4151, n_alt = -1
   Insn 1443: point = 4151, n_alt = 0
   Insn 1442: point = 4152, n_alt = 0
   Insn 1441: point = 4153, n_alt = 1
   Insn 1440: point = 4154, n_alt = 0
   Insn 1439: point = 4155, n_alt = 0
   Insn 1438: point = 4156, n_alt = 1
   Insn 5852: point = 4157, n_alt = -2
   Insn 1437: point = 4159, n_alt = 0
   Insn 5851: point = 4160, n_alt = -2
   Insn 1436: point = 4162, n_alt = 2
   Insn 1435: point = 4163, n_alt = 2
   Insn 1434: point = 4164, n_alt = 2
   Insn 1433: point = 4165, n_alt = 0
   Insn 1432: point = 4165, n_alt = 0
   Insn 1431: point = 4165, n_alt = 3
   Insn 1430: point = 4165, n_alt = 2
   Insn 1429: point = 4165, n_alt = 2
   Insn 1428: point = 4165, n_alt = 4
   Insn 1427: point = 4165, n_alt = 4
   Insn 1426: point = 4165, n_alt = -2
   Insn 1425: point = 4166, n_alt = -2
   Insn 1424: point = 4167, n_alt = 0
   Insn 1423: point = 4167, n_alt = 0
   Insn 1422: point = 4167, n_alt = 3
   Insn 1421: point = 4168, n_alt = 3
   Insn 1420: point = 4169, n_alt = 0
   Insn 1419: point = 4169, n_alt = 3
   Insn 1418: point = 4169, n_alt = 4
   Insn 1417: point = 4169, n_alt = -2
   Insn 1416: point = 4170, n_alt = -2
   Insn 1415: point = 4171, n_alt = 4
   Insn 1414: point = 4171, n_alt = 4
   Insn 1413: point = 4171, n_alt = 3
   Insn 1412: point = 4172, n_alt = 3
   Insn 1411: point = 4173, n_alt = 1
   Insn 1410: point = 4174, n_alt = 0
   Insn 1409: point = 4176, n_alt = 0
   Insn 1408: point = 4178, n_alt = 0
   Insn 1407: point = 4180, n_alt = 0
   Insn 1406: point = 4182, n_alt = 0
   Insn 1405: point = 4184, n_alt = 0
   Insn 1404: point = 4185, n_alt = -2
   Insn 1403: point = 4187, n_alt = -2
   Insn 1402: point = 4189, n_alt = 0
   Insn 1401: point = 4191, n_alt = 0
   Insn 1400: point = 4192, n_alt = -2
   Insn 1399: point = 4194, n_alt = 0
   Insn 1398: point = 4196, n_alt = -2
   Insn 1397: point = 4197, n_alt = 1
   Insn 1396: point = 4199, n_alt = 0
  BB 110
   Insn 1394: point = 4200, n_alt = -1
   Insn 1393: point = 4200, n_alt = 0
   Insn 1392: point = 4201, n_alt = 0
   Insn 1391: point = 4203, n_alt = 0
   Insn 1390: point = 4205, n_alt = 0
   Insn 1389: point = 4207, n_alt = 0
   Insn 1388: point = 4209, n_alt = 0
   Insn 1387: point = 4211, n_alt = 0
   Insn 1386: point = 4212, n_alt = -2
   Insn 1385: point = 4214, n_alt = -2
   Insn 1384: point = 4216, n_alt = 0
   Insn 1383: point = 4218, n_alt = 0
   Insn 1382: point = 4219, n_alt = -2
   Insn 1381: point = 4221, n_alt = 0
   Insn 1380: point = 4223, n_alt = -2
   Insn 1379: point = 4224, n_alt = 1
   Insn 1378: point = 4226, n_alt = 0
  BB 109
   Insn 1376: point = 4227, n_alt = -1
   Insn 1375: point = 4227, n_alt = 0
   Insn 1374: point = 4228, n_alt = 0
  BB 107
   Insn 1365: point = 4229, n_alt = 1
  BB 374
   Insn 5730: point = 4229, n_alt = -1
  BB 82
   Insn 944: point = 4229, n_alt = -1
   Insn 943: point = 4229, n_alt = 0
   Insn 942: point = 4230, n_alt = 0
   Insn 941: point = 4232, n_alt = 0
   Insn 940: point = 4233, n_alt = 0
   Insn 939: point = 4234, n_alt = 0
  BB 106
   Insn 5619: point = 4235, n_alt = -1
   Insn 1359: point = 4235, n_alt = 1
   Insn 1358: point = 4236, n_alt = 0
   Insn 1357: point = 4238, n_alt = 0
  BB 377
   Insn 5739: point = 4239, n_alt = -1
  BB 84
   Insn 954: point = 4239, n_alt = -1
   Insn 953: point = 4239, n_alt = 0
   Insn 952: point = 4240, n_alt = 0
   Insn 951: point = 4242, n_alt = 0
   Insn 950: point = 4243, n_alt = 0
  BB 105
   Insn 5617: point = 4244, n_alt = -1
   Insn 1351: point = 4244, n_alt = 1
  BB 378
   Insn 5742: point = 4245, n_alt = -1
  BB 86
   Insn 962: point = 4246, n_alt = -1
   Insn 961: point = 4246, n_alt = 0
   Insn 960: point = 4247, n_alt = 0
   Insn 959: point = 4249, n_alt = 0
   Insn 958: point = 4250, n_alt = 0
  BB 104
   Insn 5615: point = 4251, n_alt = -1
   Insn 1345: point = 4251, n_alt = 1
  BB 103
   Insn 1342: point = 4252, n_alt = 8
   Insn 1341: point = 4253, n_alt = 7
   Insn 1340: point = 4254, n_alt = 4
   Insn 1339: point = 4255, n_alt = 3
   Insn 1338: point = 4257, n_alt = 0
   Insn 1337: point = 4259, n_alt = 0
   Insn 1336: point = 4261, n_alt = 0
   Insn 1335: point = 4262, n_alt = 0
   Insn 1334: point = 4264, n_alt = 0
   Insn 1333: point = 4266, n_alt = 0
   Insn 1332: point = 4268, n_alt = 0
   Insn 1331: point = 4269, n_alt = 1
   Insn 1330: point = 4271, n_alt = 0
   Insn 1329: point = 4273, n_alt = 0
  BB 102
   Insn 1324: point = 4275, n_alt = -1
   Insn 1323: point = 4275, n_alt = 1
   Insn 1322: point = 4276, n_alt = 7
  BB 101
   Insn 1317: point = 4278, n_alt = -1
   Insn 1316: point = 4278, n_alt = 1
   Insn 1315: point = 4279, n_alt = 7
  BB 100
   Insn 1314: point = 4281, n_alt = -1
   Insn 1313: point = 4281, n_alt = 1
   Insn 1312: point = 4282, n_alt = 7
   Insn 1311: point = 4283, n_alt = 7
   Insn 1310: point = 4285, n_alt = 4
   Insn 1309: point = 4286, n_alt = 3
   Insn 1308: point = 4288, n_alt = 0
   Insn 1307: point = 4290, n_alt = 0
   Insn 1306: point = 4292, n_alt = 0
   Insn 1305: point = 4293, n_alt = 0
   Insn 1304: point = 4295, n_alt = 0
   Insn 1303: point = 4297, n_alt = 0
   Insn 1302: point = 4299, n_alt = 0
   Insn 1301: point = 4300, n_alt = 1
   Insn 1300: point = 4302, n_alt = 0
   Insn 1299: point = 4304, n_alt = 0
   Insn 1298: point = 4306, n_alt = 0
   Insn 1297: point = 4307, n_alt = 8
   Insn 1296: point = 4308, n_alt = 7
   Insn 1295: point = 4309, n_alt = 4
   Insn 1294: point = 4310, n_alt = 3
   Insn 1293: point = 4312, n_alt = 0
   Insn 1292: point = 4314, n_alt = 0
   Insn 1291: point = 4316, n_alt = 0
   Insn 1290: point = 4317, n_alt = 0
   Insn 1289: point = 4319, n_alt = 0
   Insn 1288: point = 4321, n_alt = 0
   Insn 1287: point = 4323, n_alt = 0
   Insn 1286: point = 4324, n_alt = 1
   Insn 1285: point = 4326, n_alt = 0
   Insn 1284: point = 4328, n_alt = 0
  BB 99
   Insn 1279: point = 4330, n_alt = -1
   Insn 1278: point = 4330, n_alt = 1
   Insn 1277: point = 4331, n_alt = 7
  BB 98
   Insn 1272: point = 4333, n_alt = -1
   Insn 1271: point = 4333, n_alt = 1
   Insn 1270: point = 4334, n_alt = 7
  BB 97
   Insn 1267: point = 4336, n_alt = 8
   Insn 1266: point = 4337, n_alt = 7
   Insn 1265: point = 4338, n_alt = 4
   Insn 1264: point = 4339, n_alt = 3
   Insn 1263: point = 4341, n_alt = 0
   Insn 1262: point = 4343, n_alt = 0
   Insn 1261: point = 4345, n_alt = 0
   Insn 1260: point = 4346, n_alt = 0
   Insn 1259: point = 4348, n_alt = 0
   Insn 1258: point = 4350, n_alt = 0
   Insn 1257: point = 4352, n_alt = 0
   Insn 1256: point = 4353, n_alt = 1
   Insn 1255: point = 4355, n_alt = 0
   Insn 1254: point = 4357, n_alt = 0
  BB 96
   Insn 1249: point = 4359, n_alt = -1
   Insn 1248: point = 4359, n_alt = 1
   Insn 1247: point = 4360, n_alt = 7
   Insn 1246: point = 4361, n_alt = 7
  BB 94
   Insn 5613: point = 4363, n_alt = -1
   Insn 1223: point = 4363, n_alt = 8
   Insn 1222: point = 4364, n_alt = 7
   Insn 1221: point = 4365, n_alt = 4
   Insn 1220: point = 4366, n_alt = 3
   Insn 1219: point = 4368, n_alt = 0
   Insn 1218: point = 4370, n_alt = 0
   Insn 1217: point = 4372, n_alt = 0
   Insn 1216: point = 4373, n_alt = 0
   Insn 1215: point = 4375, n_alt = 0
   Insn 1214: point = 4377, n_alt = 0
   Insn 1213: point = 4379, n_alt = 0
   Insn 1212: point = 4380, n_alt = 1
   Insn 1211: point = 4382, n_alt = 0
   Insn 1210: point = 4384, n_alt = 0
  BB 95
   Insn 1241: point = 4386, n_alt = 8
   Insn 1240: point = 4387, n_alt = 7
   Insn 1239: point = 4388, n_alt = 4
   Insn 1238: point = 4389, n_alt = 3
   Insn 1237: point = 4391, n_alt = 0
   Insn 1236: point = 4393, n_alt = 0
   Insn 1235: point = 4395, n_alt = 0
   Insn 1234: point = 4396, n_alt = 0
   Insn 1233: point = 4398, n_alt = 0
   Insn 1232: point = 4400, n_alt = 0
   Insn 1231: point = 4402, n_alt = 0
   Insn 1230: point = 4403, n_alt = 1
   Insn 1229: point = 4405, n_alt = 0
   Insn 1228: point = 4407, n_alt = 0
  BB 93
   Insn 1204: point = 4409, n_alt = -1
   Insn 1203: point = 4409, n_alt = 1
   Insn 1202: point = 4410, n_alt = 7
  BB 92
   Insn 1200: point = 4412, n_alt = -1
   Insn 1199: point = 4412, n_alt = 1
   Insn 1198: point = 4413, n_alt = 7
   Insn 1197: point = 4414, n_alt = 7
   Insn 1196: point = 4415, n_alt = 8
   Insn 1195: point = 4416, n_alt = 2
   Insn 1194: point = 4418, n_alt = 7
   Insn 5850: point = 4419, n_alt = -2
   Insn 1193: point = 4421, n_alt = 1
   Insn 5849: point = 4421, n_alt = -2
   Insn 1192: point = 4423, n_alt = 7
   Insn 1191: point = 4425, n_alt = 4
   Insn 1190: point = 4426, n_alt = 3
   Insn 1189: point = 4428, n_alt = 0
   Insn 1188: point = 4430, n_alt = 0
   Insn 1187: point = 4432, n_alt = 0
   Insn 1186: point = 4433, n_alt = 0
   Insn 1185: point = 4435, n_alt = 0
   Insn 1184: point = 4437, n_alt = 0
  BB 91
   Insn 1179: point = 4439, n_alt = -1
   Insn 1178: point = 4439, n_alt = 1
   Insn 1177: point = 4440, n_alt = 7
   Insn 1176: point = 4441, n_alt = 8
   Insn 1175: point = 4442, n_alt = 1
   Insn 1174: point = 4444, n_alt = 1
   Insn 1173: point = 4446, n_alt = 1
   Insn 1172: point = 4448, n_alt = -2
   Insn 1171: point = 4450, n_alt = 2
   Insn 1170: point = 4452, n_alt = 7
   Insn 1169: point = 4453, n_alt = 7
   Insn 1168: point = 4455, n_alt = 0
   Insn 1167: point = 4457, n_alt = 4
   Insn 1166: point = 4458, n_alt = 3
   Insn 1165: point = 4460, n_alt = 0
   Insn 1164: point = 4462, n_alt = 0
   Insn 1163: point = 4464, n_alt = 0
   Insn 1162: point = 4465, n_alt = 0
   Insn 1161: point = 4467, n_alt = 0
   Insn 1160: point = 4469, n_alt = 0
   Insn 1159: point = 4470, n_alt = 7
   Insn 1158: point = 4472, n_alt = 0
   Insn 1157: point = 4474, n_alt = 4
   Insn 1156: point = 4475, n_alt = 3
   Insn 1155: point = 4477, n_alt = 0
   Insn 1154: point = 4479, n_alt = 0
   Insn 1153: point = 4481, n_alt = 0
   Insn 1152: point = 4482, n_alt = 0
   Insn 1151: point = 4483, n_alt = 7
   Insn 1150: point = 4485, n_alt = 0
   Insn 1149: point = 4487, n_alt = 4
   Insn 1148: point = 4488, n_alt = 3
   Insn 1147: point = 4490, n_alt = 0
   Insn 1146: point = 4492, n_alt = 0
   Insn 1145: point = 4494, n_alt = 0
   Insn 1144: point = 4495, n_alt = 0
   Insn 1143: point = 4497, n_alt = 0
   Insn 1142: point = 4499, n_alt = 0
   Insn 1141: point = 4500, n_alt = 8
   Insn 1140: point = 4501, n_alt = 4
   Insn 1139: point = 4502, n_alt = 1
   Insn 1138: point = 4504, n_alt = 3
   Insn 1137: point = 4506, n_alt = 0
   Insn 1136: point = 4508, n_alt = 0
   Insn 1135: point = 4510, n_alt = 0
   Insn 1134: point = 4511, n_alt = 0
   Insn 1133: point = 4513, n_alt = 0
   Insn 1132: point = 4515, n_alt = 0
   Insn 1131: point = 4516, n_alt = -2
   Insn 1130: point = 4518, n_alt = 1
   Insn 1129: point = 4520, n_alt = 7
   Insn 1128: point = 4521, n_alt = 1
   Insn 1127: point = 4523, n_alt = 7
  BB 90
   Insn 1124: point = 4525, n_alt = 7
  BB 89
   Insn 1122: point = 4527, n_alt = -1
   Insn 1121: point = 4527, n_alt = 0
   Insn 1120: point = 4528, n_alt = 0
   Insn 1119: point = 4530, n_alt = 0
   Insn 1118: point = 4532, n_alt = 0
   Insn 1117: point = 4533, n_alt = 1
   Insn 1116: point = 4533, n_alt = 0
   Insn 1115: point = 4535, n_alt = 0
   Insn 1114: point = 4536, n_alt = 1
   Insn 1113: point = 4537, n_alt = 7
   Insn 1112: point = 4538, n_alt = 7
   Insn 1111: point = 4539, n_alt = 8
   Insn 1110: point = 4540, n_alt = 1
   Insn 1109: point = 4542, n_alt = -2
   Insn 1108: point = 4543, n_alt = 0
   Insn 1107: point = 4543, n_alt = -2
   Insn 1106: point = 4544, n_alt = 2
   Insn 1105: point = 4546, n_alt = -2
   Insn 1104: point = 4548, n_alt = 2
   Insn 1103: point = 4550, n_alt = 7
   Insn 1102: point = 4551, n_alt = 7
   Insn 1101: point = 4552, n_alt = 1
   Insn 1100: point = 4554, n_alt = -2
   Insn 1099: point = 4556, n_alt = 2
   Insn 1098: point = 4558, n_alt = 7
   Insn 1097: point = 4559, n_alt = 7
   Insn 1096: point = 4560, n_alt = 1
   Insn 1095: point = 4562, n_alt = 7
   Insn 1094: point = 4563, n_alt = 7
   Insn 5847: point = 4564, n_alt = 8
   Insn 1093: point = 4566, n_alt = 2
   Insn 5846: point = 4566, n_alt = -2
   Insn 1092: point = 4568, n_alt = 1
   Insn 1091: point = 4570, n_alt = 7
   Insn 1090: point = 4571, n_alt = 7
   Insn 1089: point = 4572, n_alt = 8
   Insn 1088: point = 4573, n_alt = 1
   Insn 1087: point = 4575, n_alt = 7
   Insn 1086: point = 4577, n_alt = 4
   Insn 1085: point = 4578, n_alt = 1
   Insn 1084: point = 4580, n_alt = 7
   Insn 1083: point = 4582, n_alt = 0
   Insn 1082: point = 4584, n_alt = 4
   Insn 1081: point = 4585, n_alt = 3
   Insn 1080: point = 4587, n_alt = 0
   Insn 1079: point = 4589, n_alt = 0
   Insn 1078: point = 4590, n_alt = 7
   Insn 1077: point = 4592, n_alt = 0
   Insn 1076: point = 4594, n_alt = 4
   Insn 1075: point = 4595, n_alt = 3
   Insn 1074: point = 4597, n_alt = 0
   Insn 1073: point = 4599, n_alt = 0
   Insn 1072: point = 4601, n_alt = 0
   Insn 1071: point = 4602, n_alt = 0
   Insn 1070: point = 4604, n_alt = 0
   Insn 1069: point = 4606, n_alt = 0
   Insn 1068: point = 4607, n_alt = 8
   Insn 1067: point = 4608, n_alt = 1
  BB 88
   Insn 1064: point = 4611, n_alt = 7
  BB 87
   Insn 1062: point = 4613, n_alt = -1
   Insn 1061: point = 4613, n_alt = 0
   Insn 1060: point = 4614, n_alt = 0
   Insn 1059: point = 4616, n_alt = 0
   Insn 1058: point = 4618, n_alt = 0
   Insn 1057: point = 4619, n_alt = 1
   Insn 1056: point = 4619, n_alt = 0
   Insn 1055: point = 4621, n_alt = 0
   Insn 1054: point = 4622, n_alt = 1
   Insn 1053: point = 4622, n_alt = 7
   Insn 1052: point = 4623, n_alt = 8
   Insn 1051: point = 4624, n_alt = 1
   Insn 1050: point = 4626, n_alt = 7
   Insn 1049: point = 4627, n_alt = -2
   Insn 1048: point = 4629, n_alt = 2
   Insn 1047: point = 4631, n_alt = 7
   Insn 1046: point = 4632, n_alt = 7
   Insn 1045: point = 4633, n_alt = 8
   Insn 1044: point = 4634, n_alt = 7
   Insn 1043: point = 4636, n_alt = 4
   Insn 1042: point = 4637, n_alt = 3
   Insn 1041: point = 4639, n_alt = 0
   Insn 1040: point = 4641, n_alt = 0
   Insn 1039: point = 4643, n_alt = 0
   Insn 1038: point = 4644, n_alt = 0
   Insn 1037: point = 4646, n_alt = 0
   Insn 1036: point = 4648, n_alt = 0
   Insn 1035: point = 4650, n_alt = 0
   Insn 1034: point = 4651, n_alt = 1
   Insn 1033: point = 4653, n_alt = 0
   Insn 1032: point = 4655, n_alt = 0
   Insn 1031: point = 4656, n_alt = 8
   Insn 1030: point = 4657, n_alt = 7
   Insn 1029: point = 4659, n_alt = 0
   Insn 1028: point = 4661, n_alt = 4
   Insn 1027: point = 4662, n_alt = 3
   Insn 1026: point = 4664, n_alt = 0
   Insn 1025: point = 4666, n_alt = 0
   Insn 1024: point = 4668, n_alt = 0
   Insn 1023: point = 4669, n_alt = 0
   Insn 1022: point = 4671, n_alt = 0
   Insn 1021: point = 4673, n_alt = 0
   Insn 1020: point = 4675, n_alt = 0
   Insn 1019: point = 4676, n_alt = 1
   Insn 1018: point = 4678, n_alt = 0
   Insn 1017: point = 4680, n_alt = 0
   Insn 1016: point = 4681, n_alt = 8
   Insn 1015: point = 4682, n_alt = 7
   Insn 1014: point = 4684, n_alt = 0
   Insn 1013: point = 4686, n_alt = 4
   Insn 1012: point = 4687, n_alt = 3
   Insn 1011: point = 4689, n_alt = 0
   Insn 1010: point = 4691, n_alt = 0
   Insn 1009: point = 4693, n_alt = 0
   Insn 1008: point = 4694, n_alt = 0
   Insn 1007: point = 4696, n_alt = 0
   Insn 1006: point = 4698, n_alt = 0
   Insn 1005: point = 4700, n_alt = 0
   Insn 1004: point = 4701, n_alt = 1
   Insn 1003: point = 4703, n_alt = 0
   Insn 1002: point = 4705, n_alt = 0
   Insn 1001: point = 4706, n_alt = 8
   Insn 1000: point = 4707, n_alt = 1
   Insn 999: point = 4709, n_alt = 7
   Insn 998: point = 4711, n_alt = 4
   Insn 997: point = 4712, n_alt = 3
   Insn 996: point = 4714, n_alt = 0
   Insn 995: point = 4716, n_alt = 0
   Insn 994: point = 4718, n_alt = 0
   Insn 993: point = 4719, n_alt = 0
   Insn 992: point = 4721, n_alt = 0
   Insn 991: point = 4723, n_alt = 0
   Insn 990: point = 4724, n_alt = 7
   Insn 989: point = 4726, n_alt = 0
   Insn 988: point = 4728, n_alt = 4
   Insn 987: point = 4729, n_alt = 3
   Insn 986: point = 4731, n_alt = 0
   Insn 985: point = 4733, n_alt = 0
   Insn 984: point = 4735, n_alt = 0
   Insn 983: point = 4736, n_alt = 0
   Insn 982: point = 4738, n_alt = 0
   Insn 981: point = 4740, n_alt = 0
   Insn 980: point = 4742, n_alt = 0
   Insn 979: point = 4743, n_alt = 1
   Insn 978: point = 4745, n_alt = 0
   Insn 977: point = 4747, n_alt = 0
   Insn 976: point = 4748, n_alt = 1
   Insn 5845: point = 4749, n_alt = -2
   Insn 975: point = 4751, n_alt = 0
   Insn 5844: point = 4752, n_alt = -2
   Insn 974: point = 4754, n_alt = 0
   Insn 973: point = 4755, n_alt = 0
   Insn 972: point = 4757, n_alt = 0
   Insn 971: point = 4759, n_alt = 4
   Insn 970: point = 4760, n_alt = 3
   Insn 969: point = 4762, n_alt = 0
   Insn 968: point = 4764, n_alt = 0
   Insn 967: point = 4766, n_alt = 0
   Insn 966: point = 4767, n_alt = 0
   Insn 965: point = 4769, n_alt = 0
   Insn 964: point = 4771, n_alt = 0
  BB 85
   Insn 956: point = 4773, n_alt = 1
  BB 83
   Insn 948: point = 4774, n_alt = 1
   Insn 947: point = 4775, n_alt = 0
   Insn 946: point = 4776, n_alt = 0
  BB 81
   Insn 937: point = 4777, n_alt = 1
  BB 375
   Insn 5733: point = 4777, n_alt = -1
  BB 76
   Insn 905: point = 4777, n_alt = -1
   Insn 904: point = 4777, n_alt = 0
   Insn 903: point = 4778, n_alt = 0
   Insn 902: point = 4780, n_alt = 0
   Insn 901: point = 4781, n_alt = 0
  BB 80
   Insn 5610: point = 4782, n_alt = -1
   Insn 931: point = 4782, n_alt = 1
  BB 376
   Insn 5736: point = 4783, n_alt = -1
  BB 78
   Insn 913: point = 4784, n_alt = -1
   Insn 912: point = 4784, n_alt = 0
   Insn 911: point = 4785, n_alt = 0
   Insn 910: point = 4787, n_alt = 0
   Insn 909: point = 4788, n_alt = 0
  BB 79
   Insn 5608: point = 4789, n_alt = -1
   Insn 925: point = 4789, n_alt = 1
   Insn 924: point = 4789, n_alt = 8
   Insn 923: point = 4790, n_alt = 7
   Insn 922: point = 4791, n_alt = 4
   Insn 921: point = 4792, n_alt = 3
   Insn 920: point = 4794, n_alt = 0
   Insn 919: point = 4796, n_alt = 1
   Insn 918: point = 4798, n_alt = 0
   Insn 917: point = 4799, n_alt = 0
   Insn 916: point = 4801, n_alt = 1
   Insn 915: point = 4803, n_alt = 0
  BB 77
   Insn 907: point = 4805, n_alt = 1
  BB 75
   Insn 899: point = 4806, n_alt = 1
   Insn 898: point = 4807, n_alt = 0
   Insn 897: point = 4808, n_alt = 0
   Insn 896: point = 4809, n_alt = 8
   Insn 895: point = 4810, n_alt = 7
  BB 74
   Insn 892: point = 4811, n_alt = -1
   Insn 891: point = 4811, n_alt = 0
   Insn 890: point = 4812, n_alt = 0
  BB 73
   Insn 888: point = 4813, n_alt = -1
   Insn 887: point = 4813, n_alt = 0
   Insn 886: point = 4814, n_alt = 0
  BB 72
   Insn 884: point = 4815, n_alt = -1
   Insn 883: point = 4815, n_alt = 0
   Insn 882: point = 4816, n_alt = 0
  BB 71
   Insn 880: point = 4817, n_alt = -1
   Insn 879: point = 4817, n_alt = 0
   Insn 878: point = 4818, n_alt = 0
  BB 70
   Insn 876: point = 4819, n_alt = -1
   Insn 875: point = 4819, n_alt = 0
   Insn 874: point = 4820, n_alt = 0
  BB 69
   Insn 871: point = 4821, n_alt = -1
   Insn 870: point = 4821, n_alt = 0
   Insn 869: point = 4822, n_alt = 0
  BB 68
   Insn 867: point = 4823, n_alt = -1
   Insn 866: point = 4823, n_alt = 0
   Insn 865: point = 4824, n_alt = 0
  BB 67
   Insn 863: point = 4825, n_alt = -1
   Insn 862: point = 4825, n_alt = 0
   Insn 861: point = 4826, n_alt = 0
  BB 66
   Insn 859: point = 4827, n_alt = -1
   Insn 858: point = 4827, n_alt = 0
   Insn 857: point = 4828, n_alt = 0
  BB 65
   Insn 855: point = 4829, n_alt = -1
   Insn 854: point = 4829, n_alt = 0
   Insn 853: point = 4830, n_alt = 0
  BB 64
   Insn 851: point = 4831, n_alt = -1
   Insn 850: point = 4831, n_alt = 0
   Insn 849: point = 4832, n_alt = 0
  BB 63
   Insn 847: point = 4833, n_alt = -1
   Insn 846: point = 4833, n_alt = 0
   Insn 845: point = 4834, n_alt = 0
  BB 62
   Insn 843: point = 4835, n_alt = -1
   Insn 842: point = 4835, n_alt = 0
   Insn 841: point = 4836, n_alt = 0
  BB 61
   Insn 839: point = 4837, n_alt = -1
   Insn 838: point = 4837, n_alt = 0
   Insn 837: point = 4838, n_alt = 0
  BB 60
   Insn 835: point = 4839, n_alt = -1
   Insn 834: point = 4839, n_alt = 0
   Insn 833: point = 4840, n_alt = 0
  BB 59
   Insn 831: point = 4841, n_alt = -1
   Insn 830: point = 4841, n_alt = 0
   Insn 829: point = 4842, n_alt = 0
  BB 58
   Insn 827: point = 4843, n_alt = -1
   Insn 826: point = 4843, n_alt = 0
   Insn 825: point = 4844, n_alt = 0
  BB 57
   Insn 823: point = 4845, n_alt = -1
   Insn 822: point = 4845, n_alt = 0
   Insn 821: point = 4846, n_alt = 0
  BB 56
   Insn 819: point = 4847, n_alt = -1
   Insn 818: point = 4847, n_alt = 0
   Insn 817: point = 4848, n_alt = 0
  BB 55
   Insn 815: point = 4849, n_alt = -1
   Insn 814: point = 4849, n_alt = 0
   Insn 813: point = 4850, n_alt = 0
  BB 54
   Insn 811: point = 4851, n_alt = -1
   Insn 810: point = 4851, n_alt = 0
   Insn 809: point = 4852, n_alt = 0
  BB 53
   Insn 807: point = 4853, n_alt = -1
   Insn 806: point = 4853, n_alt = 0
   Insn 805: point = 4854, n_alt = 0
  BB 52
   Insn 803: point = 4855, n_alt = -1
   Insn 802: point = 4855, n_alt = 0
   Insn 801: point = 4856, n_alt = 0
  BB 51
   Insn 799: point = 4857, n_alt = -1
   Insn 798: point = 4857, n_alt = 0
   Insn 797: point = 4858, n_alt = 0
  BB 50
   Insn 795: point = 4859, n_alt = -1
   Insn 794: point = 4859, n_alt = 0
   Insn 793: point = 4860, n_alt = 0
  BB 49
   Insn 791: point = 4861, n_alt = -1
   Insn 790: point = 4861, n_alt = 0
   Insn 789: point = 4862, n_alt = 0
  BB 48
   Insn 787: point = 4863, n_alt = -1
   Insn 786: point = 4863, n_alt = 0
   Insn 785: point = 4864, n_alt = 0
  BB 47
   Insn 783: point = 4865, n_alt = -1
   Insn 782: point = 4865, n_alt = 0
   Insn 781: point = 4866, n_alt = 0
   Insn 780: point = 4867, n_alt = 1
  BB 370
   Insn 5718: point = 4867, n_alt = -1
  BB 39
   Insn 650: point = 4867, n_alt = -1
   Insn 649: point = 4867, n_alt = 0
   Insn 648: point = 4868, n_alt = 0
   Insn 647: point = 4870, n_alt = 0
   Insn 646: point = 4871, n_alt = 0
   Insn 645: point = 4872, n_alt = 0
  BB 46
   Insn 5606: point = 4873, n_alt = -1
   Insn 774: point = 4873, n_alt = 1
   Insn 773: point = 4874, n_alt = 0
   Insn 772: point = 4876, n_alt = 0
  BB 371
   Insn 5721: point = 4877, n_alt = -1
  BB 41
   Insn 660: point = 4877, n_alt = -1
   Insn 659: point = 4877, n_alt = 0
   Insn 658: point = 4878, n_alt = 0
   Insn 657: point = 4880, n_alt = 0
   Insn 656: point = 4881, n_alt = 0
  BB 45
   Insn 5604: point = 4882, n_alt = -1
   Insn 766: point = 4882, n_alt = 1
  BB 372
   Insn 5724: point = 4883, n_alt = -1
  BB 43
   Insn 668: point = 4884, n_alt = -1
   Insn 667: point = 4884, n_alt = 0
   Insn 666: point = 4885, n_alt = 0
   Insn 665: point = 4887, n_alt = 0
   Insn 664: point = 4888, n_alt = 0
  BB 44
   Insn 5602: point = 4889, n_alt = -1
   Insn 760: point = 4889, n_alt = 1
   Insn 759: point = 4889, n_alt = 8
   Insn 758: point = 4890, n_alt = 4
   Insn 757: point = 4891, n_alt = 1
   Insn 756: point = 4893, n_alt = 7
   Insn 755: point = 4894, n_alt = 3
   Insn 754: point = 4896, n_alt = 0
   Insn 753: point = 4898, n_alt = 1
   Insn 752: point = 4900, n_alt = 0
   Insn 751: point = 4901, n_alt = 0
   Insn 750: point = 4903, n_alt = 0
   Insn 749: point = 4905, n_alt = 1
   Insn 748: point = 4907, n_alt = 0
   Insn 747: point = 4908, n_alt = 1
   Insn 746: point = 4910, n_alt = 1
   Insn 745: point = 4912, n_alt = 0
   Insn 744: point = 4913, n_alt = -2
   Insn 743: point = 4915, n_alt = 1
   Insn 742: point = 4917, n_alt = 7
   Insn 741: point = 4919, n_alt = 0
   Insn 740: point = 4921, n_alt = 4
   Insn 739: point = 4922, n_alt = 3
   Insn 738: point = 4924, n_alt = 0
   Insn 737: point = 4926, n_alt = 1
   Insn 736: point = 4928, n_alt = 0
   Insn 735: point = 4929, n_alt = 0
   Insn 734: point = 4931, n_alt = 0
   Insn 733: point = 4933, n_alt = 1
   Insn 732: point = 4935, n_alt = 0
   Insn 731: point = 4936, n_alt = 1
   Insn 730: point = 4938, n_alt = 1
   Insn 729: point = 4940, n_alt = 0
   Insn 728: point = 4941, n_alt = 7
   Insn 727: point = 4943, n_alt = 0
   Insn 726: point = 4945, n_alt = 4
   Insn 725: point = 4946, n_alt = 3
   Insn 724: point = 4948, n_alt = 0
   Insn 723: point = 4950, n_alt = 1
   Insn 722: point = 4952, n_alt = 0
   Insn 721: point = 4953, n_alt = 0
   Insn 720: point = 4955, n_alt = 0
   Insn 719: point = 4957, n_alt = 1
   Insn 718: point = 4959, n_alt = 0
   Insn 717: point = 4960, n_alt = 1
   Insn 716: point = 4962, n_alt = 1
   Insn 715: point = 4964, n_alt = 0
   Insn 714: point = 4966, n_alt = 0
   Insn 713: point = 4967, n_alt = 8
   Insn 712: point = 4968, n_alt = 4
   Insn 711: point = 4969, n_alt = 1
   Insn 710: point = 4971, n_alt = 7
   Insn 709: point = 4972, n_alt = 3
   Insn 708: point = 4974, n_alt = 0
   Insn 707: point = 4976, n_alt = 1
   Insn 706: point = 4978, n_alt = 0
   Insn 705: point = 4979, n_alt = 0
   Insn 704: point = 4981, n_alt = 0
   Insn 703: point = 4983, n_alt = 1
   Insn 702: point = 4985, n_alt = 0
   Insn 701: point = 4986, n_alt = 1
   Insn 700: point = 4988, n_alt = 1
   Insn 699: point = 4990, n_alt = 0
   Insn 698: point = 4991, n_alt = -2
   Insn 697: point = 4993, n_alt = 1
   Insn 696: point = 4995, n_alt = 7
   Insn 695: point = 4997, n_alt = 4
   Insn 694: point = 4998, n_alt = 3
   Insn 693: point = 5000, n_alt = 0
   Insn 692: point = 5002, n_alt = 1
   Insn 691: point = 5004, n_alt = 0
   Insn 690: point = 5005, n_alt = 0
   Insn 689: point = 5007, n_alt = 0
   Insn 688: point = 5009, n_alt = 1
   Insn 687: point = 5011, n_alt = 0
   Insn 686: point = 5012, n_alt = 1
   Insn 685: point = 5014, n_alt = 1
   Insn 684: point = 5016, n_alt = 0
   Insn 683: point = 5017, n_alt = 7
   Insn 682: point = 5019, n_alt = 4
   Insn 681: point = 5020, n_alt = 3
   Insn 680: point = 5022, n_alt = 0
   Insn 679: point = 5024, n_alt = 1
   Insn 678: point = 5026, n_alt = 0
   Insn 677: point = 5027, n_alt = 0
   Insn 676: point = 5029, n_alt = 0
   Insn 675: point = 5031, n_alt = 1
   Insn 674: point = 5033, n_alt = 0
   Insn 673: point = 5034, n_alt = 1
   Insn 672: point = 5036, n_alt = 1
   Insn 671: point = 5038, n_alt = 0
   Insn 670: point = 5040, n_alt = 0
  BB 42
   Insn 662: point = 5042, n_alt = 1
  BB 40
   Insn 654: point = 5043, n_alt = 1
   Insn 653: point = 5044, n_alt = 0
   Insn 652: point = 5045, n_alt = 0
  BB 38
   Insn 643: point = 5046, n_alt = 1
  BB 368
   Insn 5712: point = 5046, n_alt = -1
  BB 27
   Insn 511: point = 5046, n_alt = -1
   Insn 510: point = 5046, n_alt = 0
   Insn 509: point = 5047, n_alt = 0
   Insn 508: point = 5049, n_alt = 0
   Insn 507: point = 5050, n_alt = 0
  BB 37
   Insn 5600: point = 5051, n_alt = -1
   Insn 637: point = 5051, n_alt = 1
  BB 369
   Insn 5715: point = 5052, n_alt = -1
  BB 35
   Insn 603: point = 5053, n_alt = -1
   Insn 602: point = 5053, n_alt = 0
   Insn 601: point = 5054, n_alt = 0
   Insn 600: point = 5056, n_alt = 0
   Insn 599: point = 5057, n_alt = 0
   Insn 598: point = 5058, n_alt = 0
  BB 36
   Insn 5598: point = 5060, n_alt = -1
   Insn 631: point = 5060, n_alt = 1
   Insn 630: point = 5061, n_alt = 0
   Insn 629: point = 5063, n_alt = 0
   Insn 628: point = 5064, n_alt = 8
   Insn 627: point = 5065, n_alt = 0
   Insn 626: point = 5067, n_alt = 4
   Insn 625: point = 5068, n_alt = 1
   Insn 624: point = 5070, n_alt = 7
   Insn 623: point = 5071, n_alt = 3
   Insn 622: point = 5073, n_alt = 0
   Insn 621: point = 5075, n_alt = 0
   Insn 620: point = 5077, n_alt = 0
   Insn 619: point = 5078, n_alt = 0
   Insn 618: point = 5080, n_alt = 0
   Insn 617: point = 5082, n_alt = 0
   Insn 616: point = 5084, n_alt = 0
   Insn 615: point = 5085, n_alt = 1
   Insn 614: point = 5087, n_alt = 0
   Insn 613: point = 5089, n_alt = 0
   Insn 612: point = 5091, n_alt = 0
   Insn 611: point = 5092, n_alt = 7
   Insn 610: point = 5094, n_alt = 0
   Insn 609: point = 5096, n_alt = 4
   Insn 608: point = 5097, n_alt = 3
   Insn 607: point = 5099, n_alt = 0
   Insn 606: point = 5101, n_alt = 0
   Insn 605: point = 5103, n_alt = 0
  BB 34
   Insn 596: point = 5105, n_alt = 1
   Insn 595: point = 5106, n_alt = 0
   Insn 594: point = 5107, n_alt = 1
   Insn 593: point = 5108, n_alt = 0
   Insn 592: point = 5110, n_alt = 0
   Insn 591: point = 5112, n_alt = 0
   Insn 590: point = 5114, n_alt = 4
   Insn 589: point = 5115, n_alt = 3
   Insn 588: point = 5117, n_alt = 0
   Insn 587: point = 5119, n_alt = 0
   Insn 586: point = 5121, n_alt = 0
   Insn 585: point = 5122, n_alt = 0
   Insn 584: point = 5124, n_alt = 0
   Insn 583: point = 5126, n_alt = 0
   Insn 582: point = 5127, n_alt = 1
   Insn 581: point = 5128, n_alt = 0
   Insn 580: point = 5130, n_alt = 0
   Insn 576: point = 5131, n_alt = 1
   Insn 575: point = 5133, n_alt = 0
  BB 31
   Insn 5596: point = 5135, n_alt = -1
   Insn 563: point = 5135, n_alt = 1
   Insn 562: point = 5135, n_alt = 1
   Insn 561: point = 5136, n_alt = 0
   Insn 560: point = 5138, n_alt = 0
   Insn 556: point = 5139, n_alt = 1
   Insn 555: point = 5141, n_alt = 0
  BB 29
   Insn 5594: point = 5143, n_alt = -1
   Insn 547: point = 5143, n_alt = 1
   Insn 546: point = 5143, n_alt = 1
   Insn 545: point = 5144, n_alt = 0
   Insn 544: point = 5146, n_alt = 0
   Insn 543: point = 5148, n_alt = 0
   Insn 542: point = 5149, n_alt = 1
   Insn 541: point = 5151, n_alt = 0
  BB 33
   Insn 572: point = 5153, n_alt = 1
   Insn 571: point = 5153, n_alt = 1
  BB 32
   Insn 569: point = 5154, n_alt = -1
   Insn 568: point = 5154, n_alt = 1
  BB 30
   Insn 553: point = 5155, n_alt = -1
   Insn 552: point = 5155, n_alt = 1
  BB 28
   Insn 539: point = 5156, n_alt = -1
   Insn 538: point = 5156, n_alt = 0
   Insn 537: point = 5156, n_alt = 1
   Insn 5843: point = 5157, n_alt = -2
   Insn 536: point = 5159, n_alt = 0
   Insn 5842: point = 5160, n_alt = -2
   Insn 535: point = 5162, n_alt = 1
   Insn 5841: point = 5164, n_alt = -2
   Insn 534: point = 5166, n_alt = 0
   Insn 5840: point = 5167, n_alt = -2
   Insn 5839: point = 5169, n_alt = -2
   Insn 533: point = 5171, n_alt = 1
   Insn 5838: point = 5171, n_alt = -2
   Insn 5837: point = 5172, n_alt = -2
   Insn 532: point = 5174, n_alt = 0
   Insn 5836: point = 5174, n_alt = -2
   Insn 531: point = 5176, n_alt = 3
   Insn 530: point = 5178, n_alt = 0
   Insn 5835: point = 5180, n_alt = -2
   Insn 529: point = 5181, n_alt = 0
   Insn 528: point = 5182, n_alt = 0
   Insn 527: point = 5183, n_alt = 1
   Insn 5834: point = 5184, n_alt = -2
   Insn 526: point = 5186, n_alt = 0
   Insn 5833: point = 5187, n_alt = -2
   Insn 5832: point = 5189, n_alt = -2
   Insn 525: point = 5191, n_alt = 1
   Insn 5831: point = 5191, n_alt = -2
   Insn 5830: point = 5193, n_alt = -2
   Insn 524: point = 5195, n_alt = 0
   Insn 5829: point = 5195, n_alt = -2
   Insn 523: point = 5197, n_alt = 3
   Insn 522: point = 5199, n_alt = 0
   Insn 5828: point = 5201, n_alt = -2
   Insn 521: point = 5202, n_alt = 0
   Insn 520: point = 5203, n_alt = 0
   Insn 519: point = 5204, n_alt = 1
   Insn 518: point = 5205, n_alt = 0
   Insn 517: point = 5207, n_alt = 0
   Insn 516: point = 5209, n_alt = 4
   Insn 515: point = 5210, n_alt = 3
   Insn 514: point = 5212, n_alt = 0
   Insn 513: point = 5214, n_alt = 0
  BB 26
   Insn 505: point = 5216, n_alt = 1
   Insn 504: point = 5216, n_alt = 0
   Insn 503: point = 5217, n_alt = 1
   Insn 502: point = 5218, n_alt = 0
   Insn 501: point = 5220, n_alt = 4
  BB 365
   Insn 5703: point = 5221, n_alt = -1
  BB 18
   Insn 315: point = 5221, n_alt = -1
   Insn 314: point = 5221, n_alt = 0
   Insn 313: point = 5222, n_alt = 0
   Insn 312: point = 5224, n_alt = 0
   Insn 311: point = 5225, n_alt = 0
   Insn 310: point = 5226, n_alt = 0
  BB 25
   Insn 5592: point = 5227, n_alt = -1
   Insn 495: point = 5227, n_alt = 1
   Insn 494: point = 5228, n_alt = 0
   Insn 493: point = 5230, n_alt = 0
  BB 366
   Insn 5706: point = 5231, n_alt = -1
  BB 20
   Insn 325: point = 5231, n_alt = -1
   Insn 324: point = 5231, n_alt = 0
   Insn 323: point = 5232, n_alt = 0
   Insn 322: point = 5234, n_alt = 0
   Insn 321: point = 5235, n_alt = 0
  BB 24
   Insn 5590: point = 5236, n_alt = -1
   Insn 487: point = 5236, n_alt = 1
  BB 367
   Insn 5709: point = 5237, n_alt = -1
  BB 22
   Insn 333: point = 5238, n_alt = -1
   Insn 332: point = 5238, n_alt = 0
   Insn 331: point = 5239, n_alt = 0
   Insn 330: point = 5241, n_alt = 0
   Insn 329: point = 5242, n_alt = 0
  BB 23
   Insn 5588: point = 5243, n_alt = -1
   Insn 481: point = 5243, n_alt = 1
   Insn 480: point = 5243, n_alt = 8
   Insn 479: point = 5244, n_alt = 4
   Insn 478: point = 5245, n_alt = 7
   Insn 477: point = 5247, n_alt = 4
   Insn 476: point = 5248, n_alt = 3
   Insn 475: point = 5250, n_alt = 0
   Insn 474: point = 5252, n_alt = 1
   Insn 473: point = 5254, n_alt = 0
   Insn 472: point = 5255, n_alt = 0
   Insn 471: point = 5257, n_alt = 1
   Insn 470: point = 5259, n_alt = 0
   Insn 469: point = 5260, n_alt = 3
   Insn 468: point = 5262, n_alt = 0
   Insn 467: point = 5264, n_alt = 1
   Insn 466: point = 5266, n_alt = 0
   Insn 465: point = 5267, n_alt = 0
   Insn 464: point = 5269, n_alt = 1
   Insn 463: point = 5271, n_alt = 0
   Insn 462: point = 5272, n_alt = 8
   Insn 461: point = 5273, n_alt = 0
   Insn 460: point = 5275, n_alt = 4
   Insn 459: point = 5276, n_alt = 1
   Insn 458: point = 5278, n_alt = 7
   Insn 457: point = 5279, n_alt = 3
   Insn 456: point = 5281, n_alt = 0
   Insn 455: point = 5283, n_alt = 1
   Insn 454: point = 5285, n_alt = 0
   Insn 453: point = 5286, n_alt = 0
   Insn 452: point = 5288, n_alt = 0
   Insn 451: point = 5290, n_alt = 1
   Insn 450: point = 5292, n_alt = 0
   Insn 449: point = 5293, n_alt = 1
   Insn 448: point = 5295, n_alt = 1
   Insn 447: point = 5297, n_alt = 0
   Insn 446: point = 5298, n_alt = 7
   Insn 445: point = 5300, n_alt = 4
   Insn 444: point = 5301, n_alt = 3
   Insn 443: point = 5303, n_alt = 0
   Insn 442: point = 5305, n_alt = 1
   Insn 441: point = 5307, n_alt = 0
   Insn 440: point = 5308, n_alt = 0
   Insn 439: point = 5310, n_alt = 1
   Insn 438: point = 5312, n_alt = 0
   Insn 437: point = 5313, n_alt = 8
   Insn 436: point = 5314, n_alt = 4
   Insn 435: point = 5315, n_alt = 1
   Insn 434: point = 5317, n_alt = 3
   Insn 433: point = 5319, n_alt = 0
   Insn 432: point = 5321, n_alt = 1
   Insn 431: point = 5323, n_alt = 0
   Insn 430: point = 5324, n_alt = 0
   Insn 429: point = 5326, n_alt = 1
   Insn 428: point = 5328, n_alt = 0
   Insn 427: point = 5329, n_alt = 7
   Insn 426: point = 5331, n_alt = 4
   Insn 425: point = 5332, n_alt = 3
   Insn 424: point = 5334, n_alt = 0
   Insn 423: point = 5336, n_alt = 1
   Insn 422: point = 5338, n_alt = 0
   Insn 421: point = 5339, n_alt = 0
   Insn 420: point = 5341, n_alt = 1
   Insn 419: point = 5343, n_alt = 0
   Insn 418: point = 5344, n_alt = 1
   Insn 417: point = 5346, n_alt = -2
   Insn 416: point = 5348, n_alt = 2
   Insn 415: point = 5350, n_alt = 7
   Insn 414: point = 5352, n_alt = 0
   Insn 413: point = 5354, n_alt = 4
   Insn 412: point = 5355, n_alt = 3
   Insn 411: point = 5357, n_alt = 0
   Insn 410: point = 5359, n_alt = 1
   Insn 409: point = 5361, n_alt = 0
   Insn 408: point = 5362, n_alt = 0
   Insn 407: point = 5364, n_alt = 0
   Insn 406: point = 5366, n_alt = 1
   Insn 405: point = 5368, n_alt = 0
   Insn 404: point = 5369, n_alt = 1
   Insn 403: point = 5371, n_alt = 1
   Insn 402: point = 5373, n_alt = 0
   Insn 401: point = 5374, n_alt = 7
   Insn 400: point = 5376, n_alt = 0
   Insn 399: point = 5378, n_alt = 4
   Insn 398: point = 5379, n_alt = 3
   Insn 397: point = 5381, n_alt = 0
   Insn 396: point = 5383, n_alt = 1
   Insn 395: point = 5385, n_alt = 0
   Insn 394: point = 5386, n_alt = 0
   Insn 393: point = 5388, n_alt = 0
   Insn 392: point = 5390, n_alt = 1
   Insn 391: point = 5392, n_alt = 0
   Insn 390: point = 5393, n_alt = 1
   Insn 389: point = 5395, n_alt = 1
   Insn 388: point = 5397, n_alt = 0
   Insn 387: point = 5399, n_alt = 0
   Insn 386: point = 5400, n_alt = 1
   Insn 385: point = 5402, n_alt = 7
   Insn 384: point = 5404, n_alt = 4
   Insn 383: point = 5405, n_alt = 1
   Insn 382: point = 5407, n_alt = -2
   Insn 381: point = 5409, n_alt = 1
   Insn 380: point = 5411, n_alt = 7
   Insn 379: point = 5412, n_alt = 1
   Insn 378: point = 5414, n_alt = 7
   Insn 377: point = 5415, n_alt = 7
   Insn 376: point = 5417, n_alt = 0
   Insn 375: point = 5419, n_alt = 4
   Insn 374: point = 5420, n_alt = 3
   Insn 373: point = 5422, n_alt = 0
   Insn 372: point = 5424, n_alt = 1
   Insn 371: point = 5426, n_alt = 0
   Insn 370: point = 5427, n_alt = 0
   Insn 369: point = 5429, n_alt = 0
   Insn 368: point = 5431, n_alt = 1
   Insn 367: point = 5433, n_alt = 0
   Insn 366: point = 5434, n_alt = 1
   Insn 365: point = 5436, n_alt = 1
   Insn 364: point = 5438, n_alt = 0
   Insn 363: point = 5439, n_alt = 1
   Insn 362: point = 5441, n_alt = 7
   Insn 361: point = 5443, n_alt = 0
   Insn 360: point = 5445, n_alt = 4
   Insn 359: point = 5446, n_alt = 3
   Insn 358: point = 5448, n_alt = 0
   Insn 357: point = 5450, n_alt = 1
   Insn 356: point = 5452, n_alt = 0
   Insn 355: point = 5453, n_alt = 0
   Insn 354: point = 5455, n_alt = 0
   Insn 353: point = 5457, n_alt = 1
   Insn 352: point = 5459, n_alt = 0
   Insn 351: point = 5460, n_alt = 1
   Insn 350: point = 5462, n_alt = 1
   Insn 349: point = 5464, n_alt = 0
   Insn 348: point = 5465, n_alt = 7
   Insn 347: point = 5467, n_alt = 0
   Insn 346: point = 5469, n_alt = 4
   Insn 345: point = 5470, n_alt = 3
   Insn 344: point = 5472, n_alt = 0
   Insn 343: point = 5474, n_alt = 1
   Insn 342: point = 5476, n_alt = 0
   Insn 341: point = 5477, n_alt = 0
   Insn 340: point = 5479, n_alt = 0
   Insn 339: point = 5481, n_alt = 1
   Insn 338: point = 5483, n_alt = 0
   Insn 337: point = 5484, n_alt = 1
   Insn 336: point = 5486, n_alt = 1
   Insn 335: point = 5488, n_alt = 0
  BB 21
   Insn 327: point = 5490, n_alt = 1
  BB 19
   Insn 319: point = 5491, n_alt = 1
   Insn 318: point = 5492, n_alt = 0
   Insn 317: point = 5493, n_alt = 0
  BB 17
   Insn 308: point = 5494, n_alt = 1
  BB 363
   Insn 5697: point = 5494, n_alt = -1
  BB 12
   Insn 245: point = 5494, n_alt = -1
   Insn 244: point = 5494, n_alt = 0
   Insn 243: point = 5495, n_alt = 0
   Insn 242: point = 5497, n_alt = 0
   Insn 241: point = 5498, n_alt = 0
  BB 16
   Insn 5586: point = 5499, n_alt = -1
   Insn 302: point = 5499, n_alt = 1
  BB 364
   Insn 5700: point = 5500, n_alt = -1
  BB 14
   Insn 253: point = 5501, n_alt = -1
   Insn 252: point = 5501, n_alt = 0
   Insn 251: point = 5502, n_alt = 0
   Insn 250: point = 5504, n_alt = 0
   Insn 249: point = 5505, n_alt = 0
  BB 15
   Insn 5584: point = 5506, n_alt = -1
   Insn 296: point = 5506, n_alt = 1
   Insn 295: point = 5506, n_alt = 8
   Insn 294: point = 5507, n_alt = 4
   Insn 293: point = 5508, n_alt = 7
   Insn 292: point = 5510, n_alt = 0
   Insn 291: point = 5512, n_alt = 4
   Insn 290: point = 5513, n_alt = 3
   Insn 289: point = 5515, n_alt = 0
   Insn 288: point = 5517, n_alt = 1
   Insn 287: point = 5519, n_alt = 0
   Insn 286: point = 5520, n_alt = 0
   Insn 285: point = 5522, n_alt = 1
   Insn 284: point = 5524, n_alt = 0
   Insn 283: point = 5525, n_alt = 3
   Insn 282: point = 5527, n_alt = 0
   Insn 281: point = 5529, n_alt = 1
   Insn 280: point = 5531, n_alt = 0
   Insn 279: point = 5532, n_alt = 0
   Insn 278: point = 5534, n_alt = 1
   Insn 277: point = 5536, n_alt = 0
   Insn 276: point = 5537, n_alt = 8
   Insn 275: point = 5538, n_alt = 0
   Insn 274: point = 5540, n_alt = 4
   Insn 273: point = 5541, n_alt = 1
   Insn 272: point = 5543, n_alt = 7
   Insn 271: point = 5544, n_alt = 3
   Insn 270: point = 5546, n_alt = 0
   Insn 269: point = 5548, n_alt = 1
   Insn 268: point = 5550, n_alt = 0
   Insn 267: point = 5551, n_alt = 0
   Insn 266: point = 5553, n_alt = 1
   Insn 265: point = 5555, n_alt = 0
   Insn 264: point = 5556, n_alt = 7
   Insn 263: point = 5558, n_alt = 0
   Insn 262: point = 5560, n_alt = 4
   Insn 261: point = 5561, n_alt = 3
   Insn 260: point = 5563, n_alt = 0
   Insn 259: point = 5565, n_alt = 1
   Insn 258: point = 5567, n_alt = 0
   Insn 257: point = 5568, n_alt = 0
   Insn 256: point = 5570, n_alt = 1
   Insn 255: point = 5572, n_alt = 0
  BB 13
   Insn 247: point = 5574, n_alt = 1
  BB 11
   Insn 239: point = 5575, n_alt = 1
   Insn 238: point = 5576, n_alt = 0
   Insn 237: point = 5577, n_alt = 0
   Insn 236: point = 5578, n_alt = 0
   Insn 235: point = 5578, n_alt = 3
  BB 10
   Insn 232: point = 5578, n_alt = 0
   Insn 231: point = 5578, n_alt = 3
   Insn 230: point = 5578, n_alt = 2
   Insn 229: point = 5578, n_alt = 2
   Insn 228: point = 5578, n_alt = -2
   Insn 227: point = 5579, n_alt = -2
   Insn 226: point = 5580, n_alt = -2
   Insn 225: point = 5581, n_alt = -2
   Insn 224: point = 5582, n_alt = 3
   Insn 223: point = 5583, n_alt = 3
   Insn 222: point = 5584, n_alt = 3
   Insn 221: point = 5585, n_alt = 3
   Insn 220: point = 5587, n_alt = 0
   Insn 219: point = 5589, n_alt = 0
   Insn 218: point = 5591, n_alt = -2
   Insn 217: point = 5593, n_alt = -2
   Insn 216: point = 5595, n_alt = 0
   Insn 215: point = 5597, n_alt = 0
   Insn 214: point = 5598, n_alt = -2
   Insn 213: point = 5600, n_alt = 0
   Insn 212: point = 5602, n_alt = -2
   Insn 211: point = 5603, n_alt = 3
   Insn 210: point = 5605, n_alt = 0
   Insn 209: point = 5607, n_alt = 0
   Insn 208: point = 5608, n_alt = 0
   Insn 207: point = 5608, n_alt = -2
   Insn 206: point = 5609, n_alt = 3
   Insn 205: point = 5610, n_alt = 0
   Insn 204: point = 5610, n_alt = -2
   Insn 203: point = 5611, n_alt = 2
   Insn 202: point = 5611, n_alt = 2
   Insn 201: point = 5611, n_alt = 3
   Insn 200: point = 5612, n_alt = 0
   Insn 199: point = 5612, n_alt = -2
   Insn 198: point = 5613, n_alt = 3
   Insn 197: point = 5614, n_alt = 1
   Insn 196: point = 5614, n_alt = 1
   Insn 195: point = 5614, n_alt = 1
   Insn 194: point = 5614, n_alt = 5
   Insn 193: point = 5614, n_alt = 0
   Insn 192: point = 5615, n_alt = 1
   Insn 5827: point = 5616, n_alt = -2
   Insn 191: point = 5618, n_alt = 0
   Insn 5826: point = 5619, n_alt = -2
   Insn 190: point = 5621, n_alt = 2
   Insn 189: point = 5622, n_alt = 2
   Insn 188: point = 5623, n_alt = 2
   Insn 187: point = 5624, n_alt = 0
   Insn 186: point = 5624, n_alt = 0
   Insn 185: point = 5624, n_alt = 3
   Insn 184: point = 5624, n_alt = 2
   Insn 183: point = 5624, n_alt = 2
   Insn 182: point = 5624, n_alt = 4
   Insn 181: point = 5624, n_alt = 4
   Insn 180: point = 5624, n_alt = -2
   Insn 179: point = 5625, n_alt = -2
   Insn 178: point = 5626, n_alt = 0
   Insn 177: point = 5626, n_alt = 0
   Insn 176: point = 5626, n_alt = 3
   Insn 175: point = 5627, n_alt = 3
   Insn 174: point = 5628, n_alt = 0
   Insn 173: point = 5628, n_alt = 3
  BB 9
   Insn 171: point = 5628, n_alt = -1
   Insn 170: point = 5628, n_alt = 0
   Insn 169: point = 5629, n_alt = 0
  BB 8
   Insn 166: point = 5630, n_alt = 0
   Insn 165: point = 5630, n_alt = 3
   Insn 164: point = 5630, n_alt = 2
   Insn 163: point = 5630, n_alt = 2
   Insn 162: point = 5630, n_alt = -2
   Insn 161: point = 5631, n_alt = -2
   Insn 160: point = 5632, n_alt = -2
   Insn 159: point = 5633, n_alt = -2
   Insn 158: point = 5634, n_alt = 3
   Insn 157: point = 5635, n_alt = 3
   Insn 156: point = 5636, n_alt = 3
   Insn 155: point = 5637, n_alt = 3
   Insn 154: point = 5639, n_alt = 0
   Insn 153: point = 5641, n_alt = 0
   Insn 152: point = 5643, n_alt = -2
   Insn 151: point = 5645, n_alt = -2
   Insn 150: point = 5647, n_alt = 0
   Insn 149: point = 5649, n_alt = 0
   Insn 148: point = 5650, n_alt = -2
   Insn 147: point = 5652, n_alt = 0
   Insn 146: point = 5654, n_alt = -2
   Insn 145: point = 5655, n_alt = 3
   Insn 144: point = 5657, n_alt = 0
   Insn 143: point = 5659, n_alt = 0
   Insn 142: point = 5660, n_alt = 0
   Insn 141: point = 5661, n_alt = 1
   Insn 5825: point = 5662, n_alt = -2
   Insn 140: point = 5664, n_alt = 0
   Insn 5824: point = 5665, n_alt = -2
   Insn 139: point = 5667, n_alt = 2
   Insn 138: point = 5668, n_alt = 2
   Insn 137: point = 5669, n_alt = 2
   Insn 136: point = 5670, n_alt = 0
   Insn 135: point = 5670, n_alt = 0
   Insn 134: point = 5670, n_alt = 3
   Insn 133: point = 5670, n_alt = 2
   Insn 132: point = 5670, n_alt = 2
   Insn 131: point = 5670, n_alt = 4
   Insn 130: point = 5670, n_alt = 4
   Insn 129: point = 5670, n_alt = -2
   Insn 128: point = 5671, n_alt = -2
   Insn 127: point = 5672, n_alt = 0
   Insn 126: point = 5672, n_alt = 0
   Insn 125: point = 5672, n_alt = 3
   Insn 124: point = 5673, n_alt = 3
  BB 7
   Insn 122: point = 5674, n_alt = -1
   Insn 121: point = 5674, n_alt = 0
   Insn 120: point = 5675, n_alt = 0
  BB 5
   Insn 5582: point = 5676, n_alt = -1
   Insn 111: point = 5676, n_alt = 8
   Insn 5823: point = 5677, n_alt = -2
   Insn 110: point = 5679, n_alt = 2
   Insn 5822: point = 5680, n_alt = -2
   Insn 109: point = 5682, n_alt = -2
   Insn 108: point = 5684, n_alt = 2
   Insn 107: point = 5686, n_alt = 7
   Insn 106: point = 5687, n_alt = -2
   Insn 105: point = 5689, n_alt = 2
   Insn 104: point = 5691, n_alt = 7
  BB 3
   Insn 5579: point = 5692, n_alt = -1
   Insn 92: point = 5692, n_alt = 8
   Insn 91: point = 5693, n_alt = 7
  BB 6
   Insn 117: point = 5694, n_alt = 8
   Insn 116: point = 5695, n_alt = 7
  BB 4
   Insn 99: point = 5696, n_alt = -1
   Insn 98: point = 5696, n_alt = 1
   Insn 97: point = 5697, n_alt = 7
  BB 2
   Insn 86: point = 5698, n_alt = -1
   Insn 85: point = 5698, n_alt = 1
   Insn 84: point = 5699, n_alt = 7
   Insn 83: point = 5700, n_alt = 8
   Insn 82: point = 5701, n_alt = 1
   Insn 81: point = 5703, n_alt = 7
   Insn 80: point = 5704, n_alt = 1
   Insn 79: point = 5706, n_alt = 0
   Insn 78: point = 5707, n_alt = 8
   Insn 77: point = 5708, n_alt = 7
   Insn 76: point = 5709, n_alt = 8
   Insn 75: point = 5710, n_alt = 7
   Insn 73: point = 5711, n_alt = 5
   Insn 72: point = 5712, n_alt = -2
   Insn 71: point = 5714, n_alt = -2
   Insn 70: point = 5715, n_alt = 0
   Insn 69: point = 5715, n_alt = -2
   Insn 68: point = 5716, n_alt = 1
   Insn 66: point = 5718, n_alt = 0
   Insn 67: point = 5718, n_alt = 2
   Insn 65: point = 5719, n_alt = -2
   Insn 64: point = 5721, n_alt = 0
   Insn 60: point = 5723, n_alt = 2
   Insn 59: point = 5724, n_alt = 3
   Insn 58: point = 5725, n_alt = -2
   Insn 56: point = 5726, n_alt = 1
   Insn 54: point = 5728, n_alt = 0
   Insn 55: point = 5728, n_alt = 2
   Insn 53: point = 5729, n_alt = 2
   Insn 52: point = 5731, n_alt = 5
   Insn 51: point = 5732, n_alt = 1
   Insn 50: point = 5734, n_alt = 0
   Insn 49: point = 5736, n_alt = 3
   Insn 48: point = 5737, n_alt = 1
   Insn 46: point = 5739, n_alt = 0
   Insn 47: point = 5739, n_alt = 2
   Insn 45: point = 5740, n_alt = 3
   Insn 44: point = 5741, n_alt = 5
   Insn 43: point = 5742, n_alt = 0
   Insn 42: point = 5744, n_alt = 0
   Insn 41: point = 5746, n_alt = 3
   Insn 39: point = 5747, n_alt = 5
   Insn 38: point = 5748, n_alt = -2
   Insn 37: point = 5750, n_alt = -2
   Insn 36: point = 5751, n_alt = 0
   Insn 35: point = 5751, n_alt = -2
   Insn 34: point = 5752, n_alt = 1
   Insn 32: point = 5754, n_alt = 0
   Insn 33: point = 5754, n_alt = 2
   Insn 31: point = 5755, n_alt = -2
   Insn 30: point = 5757, n_alt = 0
   Insn 26: point = 5759, n_alt = 2
   Insn 25: point = 5760, n_alt = 3
   Insn 24: point = 5761, n_alt = -2
   Insn 22: point = 5762, n_alt = 1
   Insn 20: point = 5764, n_alt = 0
   Insn 21: point = 5764, n_alt = 2
   Insn 19: point = 5765, n_alt = 2
   Insn 18: point = 5767, n_alt = 5
   Insn 17: point = 5768, n_alt = 1
   Insn 16: point = 5770, n_alt = 0
   Insn 15: point = 5772, n_alt = 3
   Insn 14: point = 5773, n_alt = 1
   Insn 12: point = 5775, n_alt = 0
   Insn 13: point = 5775, n_alt = 2
   Insn 11: point = 5776, n_alt = 3
   Insn 10: point = 5777, n_alt = 5
   Insn 9: point = 5778, n_alt = 0
   Insn 8: point = 5780, n_alt = 0
   Insn 7: point = 5782, n_alt = 3
   Insn 3: point = 5783, n_alt = 5
   Insn 2: point = 5783, n_alt = 5
 r449: [4541..4564]
 r1020: [2259..2282]
Compressing live ranges: from 5784 to 4 - 0%
Ranges after the compression:
 r449: [2..3]
 r1020: [0..1]
  Slot 0 regnos (width = 0):	 449	 1020
Changing spilled pseudos to memory in insn #5847
Changing spilled pseudos to memory in insn #1110
Changing spilled pseudos to memory in insn #5886
Changing spilled pseudos to memory in insn #3453
	   Spilling non-eliminable hard regs: 6

********** Local #4: **********

	   Spilling non-eliminable hard regs: 6
Reusing alternative 1 for insn #3453
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 3453:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
Reusing alternative 8 for insn #5886
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 5886:  (0) m  (1) v {*movsf_internal}
Reusing alternative 1 for insn #1110
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1110:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
Reusing alternative 8 for insn #5847
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 5847:  (0) m  (1) v {*movsf_internal}
	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=864, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 20 to 7 (offset=816, prev_offset=0)
Can eliminate 20 to 6 (offset=-32, prev_offset=-32)
changing reg in insn 8
changing reg in insn 9
changing reg in insn 16
changing reg in insn 17
changing reg in insn 24
changing reg in insn 25
changing reg in insn 26
changing reg in insn 25
changing reg in insn 30
changing reg in insn 31
changing reg in insn 31
changing reg in insn 34
changing reg in insn 32
changing reg in insn 34
changing reg in insn 35
changing reg in insn 42
changing reg in insn 43
changing reg in insn 50
changing reg in insn 51
changing reg in insn 58
changing reg in insn 59
changing reg in insn 60
changing reg in insn 59
changing reg in insn 64
changing reg in insn 65
changing reg in insn 65
changing reg in insn 68
changing reg in insn 66
changing reg in insn 68
changing reg in insn 69
changing reg in insn 79
changing reg in insn 80
changing reg in insn 80
changing reg in insn 81
changing reg in insn 105
changing reg in insn 106
changing reg in insn 106
changing reg in insn 108
changing reg in insn 109
changing reg in insn 109
changing reg in insn 110
changing reg in insn 120
changing reg in insn 121
changing reg in insn 143
changing reg in insn 144
changing reg in insn 144
changing reg in insn 145
changing reg in insn 145
changing reg in insn 149
changing reg in insn 146
changing reg in insn 149
changing reg in insn 148
changing reg in insn 152
changing reg in insn 153
changing reg in insn 155
changing reg in insn 162
changing reg in insn 169
changing reg in insn 170
changing reg in insn 209
changing reg in insn 210
changing reg in insn 210
changing reg in insn 211
changing reg in insn 211
changing reg in insn 215
changing reg in insn 212
changing reg in insn 215
changing reg in insn 214
changing reg in insn 218
changing reg in insn 219
changing reg in insn 221
changing reg in insn 228
changing reg in insn 256
changing reg in insn 257
changing reg in insn 257
changing reg in insn 259
changing reg in insn 260
changing reg in insn 261
changing reg in insn 261
changing reg in insn 263
changing reg in insn 264
changing reg in insn 266
changing reg in insn 267
changing reg in insn 267
changing reg in insn 269
changing reg in insn 270
changing reg in insn 271
changing reg in insn 271
changing reg in insn 275
changing reg in insn 273
changing reg in insn 276
changing reg in insn 278
changing reg in insn 279
changing reg in insn 279
changing reg in insn 281
changing reg in insn 282
changing reg in insn 283
changing reg in insn 283
changing reg in insn 292
changing reg in insn 285
changing reg in insn 286
changing reg in insn 286
changing reg in insn 288
changing reg in insn 289
changing reg in insn 290
changing reg in insn 290
changing reg in insn 295
changing reg in insn 293
changing reg in insn 295
changing reg in insn 310
changing reg in insn 311
changing reg in insn 335
changing reg in insn 336
changing reg in insn 336
changing reg in insn 337
changing reg in insn 337
changing reg in insn 341
changing reg in insn 339
changing reg in insn 340
changing reg in insn 340
changing reg in insn 341
changing reg in insn 341
changing reg in insn 343
changing reg in insn 344
changing reg in insn 345
changing reg in insn 345
changing reg in insn 347
changing reg in insn 348
changing reg in insn 349
changing reg in insn 350
changing reg in insn 350
changing reg in insn 351
changing reg in insn 351
changing reg in insn 355
changing reg in insn 353
changing reg in insn 354
changing reg in insn 354
changing reg in insn 355
changing reg in insn 355
changing reg in insn 357
changing reg in insn 358
changing reg in insn 359
changing reg in insn 359
changing reg in insn 361
changing reg in insn 362
changing reg in insn 363
changing reg in insn 364
changing reg in insn 365
changing reg in insn 365
changing reg in insn 366
changing reg in insn 366
changing reg in insn 370
changing reg in insn 368
changing reg in insn 369
changing reg in insn 369
changing reg in insn 370
changing reg in insn 370
changing reg in insn 372
changing reg in insn 373
changing reg in insn 374
changing reg in insn 374
changing reg in insn 376
changing reg in insn 377
changing reg in insn 379
changing reg in insn 379
changing reg in insn 381
changing reg in insn 382
changing reg in insn 382
changing reg in insn 383
changing reg in insn 386
changing reg in insn 385
changing reg in insn 386
changing reg in insn 386
changing reg in insn 418
changing reg in insn 387
changing reg in insn 388
changing reg in insn 388
changing reg in insn 389
changing reg in insn 389
changing reg in insn 390
changing reg in insn 390
changing reg in insn 394
changing reg in insn 392
changing reg in insn 393
changing reg in insn 393
changing reg in insn 394
changing reg in insn 394
changing reg in insn 396
changing reg in insn 397
changing reg in insn 398
changing reg in insn 398
changing reg in insn 400
changing reg in insn 401
changing reg in insn 416
changing reg in insn 402
changing reg in insn 403
changing reg in insn 403
changing reg in insn 404
changing reg in insn 404
changing reg in insn 408
changing reg in insn 406
changing reg in insn 407
changing reg in insn 407
changing reg in insn 408
changing reg in insn 408
changing reg in insn 410
changing reg in insn 411
changing reg in insn 412
changing reg in insn 412
changing reg in insn 414
changing reg in insn 415
changing reg in insn 416
changing reg in insn 416
changing reg in insn 417
changing reg in insn 417
changing reg in insn 418
changing reg in insn 418
changing reg in insn 420
changing reg in insn 421
changing reg in insn 421
changing reg in insn 423
changing reg in insn 424
changing reg in insn 425
changing reg in insn 425
changing reg in insn 427
changing reg in insn 427
changing reg in insn 429
changing reg in insn 430
changing reg in insn 430
changing reg in insn 432
changing reg in insn 433
changing reg in insn 434
changing reg in insn 434
changing reg in insn 437
changing reg in insn 435
changing reg in insn 437
changing reg in insn 439
changing reg in insn 440
changing reg in insn 440
changing reg in insn 442
changing reg in insn 443
changing reg in insn 444
changing reg in insn 444
changing reg in insn 446
changing reg in insn 446
changing reg in insn 447
changing reg in insn 448
changing reg in insn 448
changing reg in insn 449
changing reg in insn 449
changing reg in insn 453
changing reg in insn 451
changing reg in insn 452
changing reg in insn 452
changing reg in insn 453
changing reg in insn 453
changing reg in insn 455
changing reg in insn 456
changing reg in insn 457
changing reg in insn 457
changing reg in insn 461
changing reg in insn 459
changing reg in insn 462
changing reg in insn 464
changing reg in insn 465
changing reg in insn 465
changing reg in insn 467
changing reg in insn 468
changing reg in insn 469
changing reg in insn 469
changing reg in insn 478
changing reg in insn 471
changing reg in insn 472
changing reg in insn 472
changing reg in insn 474
changing reg in insn 475
changing reg in insn 476
changing reg in insn 476
changing reg in insn 480
changing reg in insn 478
changing reg in insn 480
changing reg in insn 493
changing reg in insn 494
changing reg in insn 494
changing reg in insn 495
changing reg in insn 514
changing reg in insn 515
changing reg in insn 515
changing reg in insn 517
changing reg in insn 542
changing reg in insn 544
changing reg in insn 544
changing reg in insn 545
changing reg in insn 556
changing reg in insn 561
changing reg in insn 576
changing reg in insn 581
changing reg in insn 584
changing reg in insn 585
changing reg in insn 585
changing reg in insn 587
changing reg in insn 588
changing reg in insn 589
changing reg in insn 589
changing reg in insn 591
changing reg in insn 592
changing reg in insn 593
changing reg in insn 598
changing reg in insn 599
changing reg in insn 605
changing reg in insn 606
changing reg in insn 606
changing reg in insn 607
changing reg in insn 607
changing reg in insn 608
changing reg in insn 608
changing reg in insn 610
changing reg in insn 611
changing reg in insn 612
changing reg in insn 613
changing reg in insn 613
changing reg in insn 614
changing reg in insn 614
changing reg in insn 615
changing reg in insn 615
changing reg in insn 619
changing reg in insn 617
changing reg in insn 618
changing reg in insn 618
changing reg in insn 619
changing reg in insn 619
changing reg in insn 621
changing reg in insn 622
changing reg in insn 623
changing reg in insn 623
changing reg in insn 627
changing reg in insn 625
changing reg in insn 628
changing reg in insn 629
changing reg in insn 630
changing reg in insn 630
changing reg in insn 631
changing reg in insn 645
changing reg in insn 646
changing reg in insn 670
changing reg in insn 671
changing reg in insn 671
changing reg in insn 672
changing reg in insn 672
changing reg in insn 673
changing reg in insn 673
changing reg in insn 677
changing reg in insn 675
changing reg in insn 676
changing reg in insn 676
changing reg in insn 677
changing reg in insn 677
changing reg in insn 679
changing reg in insn 680
changing reg in insn 681
changing reg in insn 681
changing reg in insn 683
changing reg in insn 683
changing reg in insn 684
changing reg in insn 685
changing reg in insn 685
changing reg in insn 686
changing reg in insn 686
changing reg in insn 690
changing reg in insn 688
changing reg in insn 689
changing reg in insn 689
changing reg in insn 690
changing reg in insn 690
changing reg in insn 692
changing reg in insn 693
changing reg in insn 694
changing reg in insn 694
changing reg in insn 696
changing reg in insn 696
changing reg in insn 697
changing reg in insn 698
changing reg in insn 698
changing reg in insn 699
changing reg in insn 700
changing reg in insn 700
changing reg in insn 701
changing reg in insn 701
changing reg in insn 705
changing reg in insn 703
changing reg in insn 704
changing reg in insn 704
changing reg in insn 705
changing reg in insn 705
changing reg in insn 707
changing reg in insn 708
changing reg in insn 709
changing reg in insn 709
changing reg in insn 713
changing reg in insn 711
changing reg in insn 713
changing reg in insn 714
changing reg in insn 715
changing reg in insn 715
changing reg in insn 716
changing reg in insn 716
changing reg in insn 717
changing reg in insn 717
changing reg in insn 721
changing reg in insn 719
changing reg in insn 720
changing reg in insn 720
changing reg in insn 721
changing reg in insn 721
changing reg in insn 723
changing reg in insn 724
changing reg in insn 725
changing reg in insn 725
changing reg in insn 727
changing reg in insn 728
changing reg in insn 729
changing reg in insn 730
changing reg in insn 730
changing reg in insn 731
changing reg in insn 731
changing reg in insn 735
changing reg in insn 733
changing reg in insn 734
changing reg in insn 734
changing reg in insn 735
changing reg in insn 735
changing reg in insn 737
changing reg in insn 738
changing reg in insn 739
changing reg in insn 739
changing reg in insn 741
changing reg in insn 742
changing reg in insn 743
changing reg in insn 744
changing reg in insn 744
changing reg in insn 745
changing reg in insn 746
changing reg in insn 746
changing reg in insn 747
changing reg in insn 747
changing reg in insn 751
changing reg in insn 749
changing reg in insn 750
changing reg in insn 750
changing reg in insn 751
changing reg in insn 751
changing reg in insn 753
changing reg in insn 754
changing reg in insn 755
changing reg in insn 755
changing reg in insn 759
changing reg in insn 757
changing reg in insn 759
changing reg in insn 772
changing reg in insn 773
changing reg in insn 773
changing reg in insn 774
changing reg in insn 781
changing reg in insn 782
changing reg in insn 785
changing reg in insn 786
changing reg in insn 789
changing reg in insn 790
changing reg in insn 793
changing reg in insn 794
changing reg in insn 797
changing reg in insn 798
changing reg in insn 801
changing reg in insn 802
changing reg in insn 805
changing reg in insn 806
changing reg in insn 809
changing reg in insn 810
changing reg in insn 813
changing reg in insn 814
changing reg in insn 817
changing reg in insn 818
changing reg in insn 821
changing reg in insn 822
changing reg in insn 825
changing reg in insn 826
changing reg in insn 829
changing reg in insn 830
changing reg in insn 833
changing reg in insn 834
changing reg in insn 837
changing reg in insn 838
changing reg in insn 841
changing reg in insn 842
changing reg in insn 845
changing reg in insn 846
changing reg in insn 849
changing reg in insn 850
changing reg in insn 853
changing reg in insn 854
changing reg in insn 857
changing reg in insn 858
changing reg in insn 861
changing reg in insn 862
changing reg in insn 865
changing reg in insn 866
changing reg in insn 869
changing reg in insn 870
changing reg in insn 874
changing reg in insn 875
changing reg in insn 878
changing reg in insn 879
changing reg in insn 882
changing reg in insn 883
changing reg in insn 886
changing reg in insn 887
changing reg in insn 890
changing reg in insn 891
changing reg in insn 916
changing reg in insn 917
changing reg in insn 917
changing reg in insn 919
changing reg in insn 920
changing reg in insn 921
changing reg in insn 921
changing reg in insn 924
changing reg in insn 939
changing reg in insn 940
changing reg in insn 965
changing reg in insn 966
changing reg in insn 966
changing reg in insn 968
changing reg in insn 969
changing reg in insn 970
changing reg in insn 970
changing reg in insn 972
changing reg in insn 973
changing reg in insn 975
changing reg in insn 977
changing reg in insn 978
changing reg in insn 978
changing reg in insn 979
changing reg in insn 979
changing reg in insn 983
changing reg in insn 981
changing reg in insn 982
changing reg in insn 982
changing reg in insn 983
changing reg in insn 983
changing reg in insn 985
changing reg in insn 986
changing reg in insn 987
changing reg in insn 987
changing reg in insn 989
changing reg in insn 990
changing reg in insn 992
changing reg in insn 993
changing reg in insn 993
changing reg in insn 995
changing reg in insn 996
changing reg in insn 997
changing reg in insn 997
changing reg in insn 999
changing reg in insn 999
changing reg in insn 1002
changing reg in insn 1003
changing reg in insn 1003
changing reg in insn 1004
changing reg in insn 1004
changing reg in insn 1008
changing reg in insn 1006
changing reg in insn 1007
changing reg in insn 1007
changing reg in insn 1008
changing reg in insn 1008
changing reg in insn 1010
changing reg in insn 1011
changing reg in insn 1012
changing reg in insn 1012
changing reg in insn 1014
changing reg in insn 1017
changing reg in insn 1018
changing reg in insn 1018
changing reg in insn 1019
changing reg in insn 1019
changing reg in insn 1023
changing reg in insn 1021
changing reg in insn 1022
changing reg in insn 1022
changing reg in insn 1023
changing reg in insn 1023
changing reg in insn 1025
changing reg in insn 1026
changing reg in insn 1027
changing reg in insn 1027
changing reg in insn 1029
changing reg in insn 1032
changing reg in insn 1033
changing reg in insn 1033
changing reg in insn 1034
changing reg in insn 1034
changing reg in insn 1038
changing reg in insn 1036
changing reg in insn 1037
changing reg in insn 1037
changing reg in insn 1038
changing reg in insn 1038
changing reg in insn 1040
changing reg in insn 1041
changing reg in insn 1042
changing reg in insn 1042
changing reg in insn 1044
changing reg in insn 1048
changing reg in insn 1049
changing reg in insn 1049
changing reg in insn 1051
changing reg in insn 1056
changing reg in insn 1059
changing reg in insn 1060
changing reg in insn 1061
changing reg in insn 1070
changing reg in insn 1071
changing reg in insn 1071
changing reg in insn 1073
changing reg in insn 1074
changing reg in insn 1075
changing reg in insn 1075
changing reg in insn 1077
changing reg in insn 1078
changing reg in insn 1085
changing reg in insn 1079
changing reg in insn 1080
changing reg in insn 1080
changing reg in insn 1081
changing reg in insn 1081
changing reg in insn 1083
changing reg in insn 1084
changing reg in insn 1085
changing reg in insn 1085
changing reg in insn 1087
changing reg in insn 1092
changing reg in insn 1096
changing reg in insn 1099
changing reg in insn 1100
changing reg in insn 1100
changing reg in insn 1101
changing reg in insn 1106
changing reg in insn 1104
changing reg in insn 1105
changing reg in insn 1105
changing reg in insn 1106
changing reg in insn 1106
changing reg in insn 1107
changing reg in insn 1109
changing reg in insn 1116
changing reg in insn 1119
changing reg in insn 1120
changing reg in insn 1121
changing reg in insn 1128
changing reg in insn 1130
changing reg in insn 1131
changing reg in insn 1131
changing reg in insn 1139
changing reg in insn 1133
changing reg in insn 1134
changing reg in insn 1134
changing reg in insn 1136
changing reg in insn 1137
changing reg in insn 1138
changing reg in insn 1138
changing reg in insn 1141
changing reg in insn 1139
changing reg in insn 1141
changing reg in insn 1143
changing reg in insn 1144
changing reg in insn 1144
changing reg in insn 1146
changing reg in insn 1147
changing reg in insn 1148
changing reg in insn 1148
changing reg in insn 1150
changing reg in insn 1151
changing reg in insn 1152
changing reg in insn 1154
changing reg in insn 1154
changing reg in insn 1155
changing reg in insn 1155
changing reg in insn 1156
changing reg in insn 1156
changing reg in insn 1158
changing reg in insn 1159
changing reg in insn 1161
changing reg in insn 1162
changing reg in insn 1162
changing reg in insn 1164
changing reg in insn 1165
changing reg in insn 1166
changing reg in insn 1166
changing reg in insn 1168
changing reg in insn 1169
changing reg in insn 1171
changing reg in insn 1171
changing reg in insn 1172
changing reg in insn 1172
changing reg in insn 1173
changing reg in insn 1174
changing reg in insn 1174
changing reg in insn 1185
changing reg in insn 1186
changing reg in insn 1186
changing reg in insn 1188
changing reg in insn 1189
changing reg in insn 1190
changing reg in insn 1190
changing reg in insn 1192
changing reg in insn 1192
changing reg in insn 1195
changing reg in insn 1210
changing reg in insn 1211
changing reg in insn 1211
changing reg in insn 1212
changing reg in insn 1212
changing reg in insn 1216
changing reg in insn 1214
changing reg in insn 1215
changing reg in insn 1215
changing reg in insn 1216
changing reg in insn 1216
changing reg in insn 1218
changing reg in insn 1219
changing reg in insn 1220
changing reg in insn 1220
changing reg in insn 1223
changing reg in insn 1228
changing reg in insn 1229
changing reg in insn 1229
changing reg in insn 1230
changing reg in insn 1230
changing reg in insn 1234
changing reg in insn 1232
changing reg in insn 1233
changing reg in insn 1233
changing reg in insn 1234
changing reg in insn 1234
changing reg in insn 1236
changing reg in insn 1237
changing reg in insn 1238
changing reg in insn 1238
changing reg in insn 1241
changing reg in insn 1254
changing reg in insn 1255
changing reg in insn 1255
changing reg in insn 1256
changing reg in insn 1256
changing reg in insn 1260
changing reg in insn 1258
changing reg in insn 1259
changing reg in insn 1259
changing reg in insn 1260
changing reg in insn 1260
changing reg in insn 1262
changing reg in insn 1263
changing reg in insn 1264
changing reg in insn 1264
changing reg in insn 1267
changing reg in insn 1284
changing reg in insn 1285
changing reg in insn 1285
changing reg in insn 1286
changing reg in insn 1286
changing reg in insn 1290
changing reg in insn 1288
changing reg in insn 1289
changing reg in insn 1289
changing reg in insn 1290
changing reg in insn 1290
changing reg in insn 1292
changing reg in insn 1293
changing reg in insn 1294
changing reg in insn 1294
changing reg in insn 1297
changing reg in insn 1298
changing reg in insn 1299
changing reg in insn 1299
changing reg in insn 1300
changing reg in insn 1300
changing reg in insn 1301
changing reg in insn 1301
changing reg in insn 1305
changing reg in insn 1303
changing reg in insn 1304
changing reg in insn 1304
changing reg in insn 1305
changing reg in insn 1305
changing reg in insn 1307
changing reg in insn 1308
changing reg in insn 1309
changing reg in insn 1309
changing reg in insn 1311
changing reg in insn 1311
changing reg in insn 1316
changing reg in insn 1313
changing reg in insn 1329
changing reg in insn 1330
changing reg in insn 1330
changing reg in insn 1331
changing reg in insn 1331
changing reg in insn 1335
changing reg in insn 1333
changing reg in insn 1334
changing reg in insn 1334
changing reg in insn 1335
changing reg in insn 1335
changing reg in insn 1337
changing reg in insn 1338
changing reg in insn 1339
changing reg in insn 1339
changing reg in insn 1342
changing reg in insn 1357
changing reg in insn 1358
changing reg in insn 1358
changing reg in insn 1359
changing reg in insn 1367
changing reg in insn 1368
changing reg in insn 1374
changing reg in insn 1375
changing reg in insn 1378
changing reg in insn 1379
changing reg in insn 1379
changing reg in insn 1383
changing reg in insn 1380
changing reg in insn 1383
changing reg in insn 1382
changing reg in insn 1386
changing reg in insn 1387
changing reg in insn 1388
changing reg in insn 1388
changing reg in insn 1389
changing reg in insn 1390
changing reg in insn 1390
changing reg in insn 1391
changing reg in insn 1392
changing reg in insn 1393
changing reg in insn 1396
changing reg in insn 1397
changing reg in insn 1397
changing reg in insn 1401
changing reg in insn 1398
changing reg in insn 1401
changing reg in insn 1400
changing reg in insn 1404
changing reg in insn 1405
changing reg in insn 1406
changing reg in insn 1406
changing reg in insn 1407
changing reg in insn 1408
changing reg in insn 1408
changing reg in insn 1409
changing reg in insn 1410
changing reg in insn 1411
changing reg in insn 1440
changing reg in insn 1441
changing reg in insn 1442
changing reg in insn 1443
changing reg in insn 1478
changing reg in insn 1479
changing reg in insn 1482
changing reg in insn 1483
changing reg in insn 1483
changing reg in insn 1487
changing reg in insn 1484
changing reg in insn 1487
changing reg in insn 1486
changing reg in insn 1490
changing reg in insn 1491
changing reg in insn 1492
changing reg in insn 1492
changing reg in insn 1493
changing reg in insn 1494
changing reg in insn 1494
changing reg in insn 1495
changing reg in insn 1496
changing reg in insn 1497
changing reg in insn 1500
changing reg in insn 1501
changing reg in insn 1501
changing reg in insn 1505
changing reg in insn 1502
changing reg in insn 1505
changing reg in insn 1504
changing reg in insn 1508
changing reg in insn 1509
changing reg in insn 1510
changing reg in insn 1510
changing reg in insn 1511
changing reg in insn 1512
changing reg in insn 1512
changing reg in insn 1513
changing reg in insn 1514
changing reg in insn 1515
changing reg in insn 1544
changing reg in insn 1545
changing reg in insn 1546
changing reg in insn 1547
changing reg in insn 1582
changing reg in insn 1583
changing reg in insn 1586
changing reg in insn 1587
changing reg in insn 1587
changing reg in insn 1591
changing reg in insn 1588
changing reg in insn 1591
changing reg in insn 1590
changing reg in insn 1594
changing reg in insn 1595
changing reg in insn 1596
changing reg in insn 1596
changing reg in insn 1597
changing reg in insn 1598
changing reg in insn 1598
changing reg in insn 1599
changing reg in insn 1600
changing reg in insn 1601
changing reg in insn 1604
changing reg in insn 1605
changing reg in insn 1605
changing reg in insn 1609
changing reg in insn 1606
changing reg in insn 1609
changing reg in insn 1608
changing reg in insn 1612
changing reg in insn 1613
changing reg in insn 1614
changing reg in insn 1614
changing reg in insn 1615
changing reg in insn 1616
changing reg in insn 1616
changing reg in insn 1617
changing reg in insn 1618
changing reg in insn 1619
changing reg in insn 1648
changing reg in insn 1649
changing reg in insn 1650
changing reg in insn 1651
changing reg in insn 1671
changing reg in insn 1672
changing reg in insn 1675
changing reg in insn 1676
changing reg in insn 1676
changing reg in insn 1680
changing reg in insn 1677
changing reg in insn 1680
changing reg in insn 1679
changing reg in insn 1683
changing reg in insn 1684
changing reg in insn 1685
changing reg in insn 1685
changing reg in insn 1686
changing reg in insn 1687
changing reg in insn 1687
changing reg in insn 1688
changing reg in insn 1689
changing reg in insn 1690
changing reg in insn 1693
changing reg in insn 1694
changing reg in insn 1694
changing reg in insn 1698
changing reg in insn 1695
changing reg in insn 1698
changing reg in insn 1697
changing reg in insn 1701
changing reg in insn 1702
changing reg in insn 1703
changing reg in insn 1703
changing reg in insn 1704
changing reg in insn 1705
changing reg in insn 1705
changing reg in insn 1706
changing reg in insn 1707
changing reg in insn 1708
changing reg in insn 1753
changing reg in insn 1754
changing reg in insn 1755
changing reg in insn 1756
changing reg in insn 1776
changing reg in insn 1777
changing reg in insn 1780
changing reg in insn 1781
changing reg in insn 1781
changing reg in insn 1785
changing reg in insn 1782
changing reg in insn 1785
changing reg in insn 1784
changing reg in insn 1788
changing reg in insn 1789
changing reg in insn 1790
changing reg in insn 1790
changing reg in insn 1791
changing reg in insn 1792
changing reg in insn 1792
changing reg in insn 1793
changing reg in insn 1794
changing reg in insn 1795
changing reg in insn 1798
changing reg in insn 1799
changing reg in insn 1799
changing reg in insn 1803
changing reg in insn 1800
changing reg in insn 1803
changing reg in insn 1802
changing reg in insn 1806
changing reg in insn 1807
changing reg in insn 1808
changing reg in insn 1808
changing reg in insn 1809
changing reg in insn 1810
changing reg in insn 1810
changing reg in insn 1811
changing reg in insn 1812
changing reg in insn 1813
changing reg in insn 1899
changing reg in insn 1900
changing reg in insn 1901
changing reg in insn 1902
changing reg in insn 1922
changing reg in insn 1923
changing reg in insn 1926
changing reg in insn 1927
changing reg in insn 1927
changing reg in insn 1931
changing reg in insn 1928
changing reg in insn 1931
changing reg in insn 1930
changing reg in insn 1934
changing reg in insn 1935
changing reg in insn 1936
changing reg in insn 1936
changing reg in insn 1937
changing reg in insn 1938
changing reg in insn 1938
changing reg in insn 1939
changing reg in insn 1940
changing reg in insn 1941
changing reg in insn 1944
changing reg in insn 1945
changing reg in insn 1945
changing reg in insn 1949
changing reg in insn 1946
changing reg in insn 1949
changing reg in insn 1948
changing reg in insn 1952
changing reg in insn 1953
changing reg in insn 1954
changing reg in insn 1954
changing reg in insn 1955
changing reg in insn 1956
changing reg in insn 1956
changing reg in insn 1957
changing reg in insn 1958
changing reg in insn 1959
changing reg in insn 2012
changing reg in insn 2013
changing reg in insn 2014
changing reg in insn 2015
changing reg in insn 2035
changing reg in insn 2036
changing reg in insn 2039
changing reg in insn 2040
changing reg in insn 2040
changing reg in insn 2044
changing reg in insn 2041
changing reg in insn 2044
changing reg in insn 2043
changing reg in insn 2047
changing reg in insn 2048
changing reg in insn 2049
changing reg in insn 2049
changing reg in insn 2050
changing reg in insn 2051
changing reg in insn 2051
changing reg in insn 2052
changing reg in insn 2053
changing reg in insn 2054
changing reg in insn 2057
changing reg in insn 2058
changing reg in insn 2058
changing reg in insn 2062
changing reg in insn 2059
changing reg in insn 2062
changing reg in insn 2061
changing reg in insn 2065
changing reg in insn 2066
changing reg in insn 2067
changing reg in insn 2067
changing reg in insn 2068
changing reg in insn 2069
changing reg in insn 2069
changing reg in insn 2070
changing reg in insn 2071
changing reg in insn 2072
changing reg in insn 2111
changing reg in insn 2112
changing reg in insn 2113
changing reg in insn 2114
changing reg in insn 2134
changing reg in insn 2135
changing reg in insn 2138
changing reg in insn 2139
changing reg in insn 2139
changing reg in insn 2143
changing reg in insn 2140
changing reg in insn 2143
changing reg in insn 2142
changing reg in insn 2146
changing reg in insn 2147
changing reg in insn 2148
changing reg in insn 2148
changing reg in insn 2149
changing reg in insn 2150
changing reg in insn 2150
changing reg in insn 2151
changing reg in insn 2152
changing reg in insn 2153
changing reg in insn 2156
changing reg in insn 2157
changing reg in insn 2157
changing reg in insn 2161
changing reg in insn 2158
changing reg in insn 2161
changing reg in insn 2160
changing reg in insn 2164
changing reg in insn 2165
changing reg in insn 2166
changing reg in insn 2166
changing reg in insn 2167
changing reg in insn 2168
changing reg in insn 2168
changing reg in insn 2169
changing reg in insn 2170
changing reg in insn 2171
changing reg in insn 2225
changing reg in insn 2226
changing reg in insn 2227
changing reg in insn 2228
changing reg in insn 2248
changing reg in insn 2249
changing reg in insn 2252
changing reg in insn 2253
changing reg in insn 2257
changing reg in insn 2258
changing reg in insn 2258
changing reg in insn 2262
changing reg in insn 2259
changing reg in insn 2262
changing reg in insn 2261
changing reg in insn 2265
changing reg in insn 2266
changing reg in insn 2267
changing reg in insn 2267
changing reg in insn 2268
changing reg in insn 2269
changing reg in insn 2269
changing reg in insn 2270
changing reg in insn 2271
changing reg in insn 2272
changing reg in insn 2275
changing reg in insn 2276
changing reg in insn 2276
changing reg in insn 2280
changing reg in insn 2277
changing reg in insn 2280
changing reg in insn 2279
changing reg in insn 2283
changing reg in insn 2284
changing reg in insn 2285
changing reg in insn 2285
changing reg in insn 2286
changing reg in insn 2287
changing reg in insn 2287
changing reg in insn 2288
changing reg in insn 2289
changing reg in insn 2290
changing reg in insn 2294
changing reg in insn 2295
changing reg in insn 2295
changing reg in insn 2299
changing reg in insn 2296
changing reg in insn 2299
changing reg in insn 2298
changing reg in insn 2302
changing reg in insn 2303
changing reg in insn 2304
changing reg in insn 2304
changing reg in insn 2305
changing reg in insn 2306
changing reg in insn 2306
changing reg in insn 2307
changing reg in insn 2308
changing reg in insn 2309
changing reg in insn 2319
changing reg in insn 2320
changing reg in insn 2320
changing reg in insn 2324
changing reg in insn 2321
changing reg in insn 2324
changing reg in insn 2323
changing reg in insn 2327
changing reg in insn 2328
changing reg in insn 2329
changing reg in insn 2329
changing reg in insn 2330
changing reg in insn 2331
changing reg in insn 2331
changing reg in insn 2332
changing reg in insn 2333
changing reg in insn 2334
changing reg in insn 2363
changing reg in insn 2364
changing reg in insn 2365
changing reg in insn 2366
changing reg in insn 2372
changing reg in insn 2373
changing reg in insn 2396
changing reg in insn 2397
changing reg in insn 2398
changing reg in insn 2399
changing reg in insn 2405
changing reg in insn 2406
changing reg in insn 2423
changing reg in insn 2424
changing reg in insn 2427
changing reg in insn 2428
changing reg in insn 2428
changing reg in insn 2432
changing reg in insn 2429
changing reg in insn 2432
changing reg in insn 2431
changing reg in insn 2435
changing reg in insn 2436
changing reg in insn 2437
changing reg in insn 2437
changing reg in insn 2438
changing reg in insn 2439
changing reg in insn 2439
changing reg in insn 2440
changing reg in insn 2441
changing reg in insn 2442
changing reg in insn 2445
changing reg in insn 2446
changing reg in insn 2446
changing reg in insn 2450
changing reg in insn 2447
changing reg in insn 2450
changing reg in insn 2449
changing reg in insn 2453
changing reg in insn 2454
changing reg in insn 2455
changing reg in insn 2455
changing reg in insn 2456
changing reg in insn 2457
changing reg in insn 2457
changing reg in insn 2458
changing reg in insn 2459
changing reg in insn 2460
changing reg in insn 2489
changing reg in insn 2490
changing reg in insn 2491
changing reg in insn 2492
changing reg in insn 2512
changing reg in insn 2513
changing reg in insn 2516
changing reg in insn 2517
changing reg in insn 2517
changing reg in insn 2521
changing reg in insn 2518
changing reg in insn 2521
changing reg in insn 2520
changing reg in insn 2524
changing reg in insn 2525
changing reg in insn 2526
changing reg in insn 2526
changing reg in insn 2527
changing reg in insn 2528
changing reg in insn 2528
changing reg in insn 2529
changing reg in insn 2530
changing reg in insn 2531
changing reg in insn 2534
changing reg in insn 2535
changing reg in insn 2535
changing reg in insn 2539
changing reg in insn 2536
changing reg in insn 2539
changing reg in insn 2538
changing reg in insn 2542
changing reg in insn 2543
changing reg in insn 2544
changing reg in insn 2544
changing reg in insn 2545
changing reg in insn 2546
changing reg in insn 2546
changing reg in insn 2547
changing reg in insn 2548
changing reg in insn 2549
changing reg in insn 2592
changing reg in insn 2593
changing reg in insn 2594
changing reg in insn 2595
changing reg in insn 2615
changing reg in insn 2616
changing reg in insn 2619
changing reg in insn 2620
changing reg in insn 2620
changing reg in insn 2624
changing reg in insn 2621
changing reg in insn 2624
changing reg in insn 2623
changing reg in insn 2627
changing reg in insn 2628
changing reg in insn 2629
changing reg in insn 2629
changing reg in insn 2630
changing reg in insn 2631
changing reg in insn 2631
changing reg in insn 2632
changing reg in insn 2633
changing reg in insn 2634
changing reg in insn 2637
changing reg in insn 2638
changing reg in insn 2638
changing reg in insn 2642
changing reg in insn 2639
changing reg in insn 2642
changing reg in insn 2641
changing reg in insn 2645
changing reg in insn 2646
changing reg in insn 2647
changing reg in insn 2647
changing reg in insn 2648
changing reg in insn 2649
changing reg in insn 2649
changing reg in insn 2650
changing reg in insn 2651
changing reg in insn 2652
changing reg in insn 2685
changing reg in insn 2686
changing reg in insn 2687
changing reg in insn 2688
changing reg in insn 2708
changing reg in insn 2709
changing reg in insn 2712
changing reg in insn 2713
changing reg in insn 2713
changing reg in insn 2717
changing reg in insn 2714
changing reg in insn 2717
changing reg in insn 2716
changing reg in insn 2720
changing reg in insn 2721
changing reg in insn 2722
changing reg in insn 2722
changing reg in insn 2723
changing reg in insn 2724
changing reg in insn 2724
changing reg in insn 2725
changing reg in insn 2726
changing reg in insn 2727
changing reg in insn 2730
changing reg in insn 2731
changing reg in insn 2731
changing reg in insn 2735
changing reg in insn 2732
changing reg in insn 2735
changing reg in insn 2734
changing reg in insn 2738
changing reg in insn 2739
changing reg in insn 2740
changing reg in insn 2740
changing reg in insn 2741
changing reg in insn 2742
changing reg in insn 2742
changing reg in insn 2743
changing reg in insn 2744
changing reg in insn 2745
changing reg in insn 2774
changing reg in insn 2775
changing reg in insn 2776
changing reg in insn 2777
changing reg in insn 2797
changing reg in insn 2798
changing reg in insn 2801
changing reg in insn 2802
changing reg in insn 2802
changing reg in insn 2806
changing reg in insn 2803
changing reg in insn 2806
changing reg in insn 2805
changing reg in insn 2809
changing reg in insn 2810
changing reg in insn 2811
changing reg in insn 2811
changing reg in insn 2812
changing reg in insn 2813
changing reg in insn 2813
changing reg in insn 2814
changing reg in insn 2815
changing reg in insn 2816
changing reg in insn 2837
changing reg in insn 2838
changing reg in insn 2838
changing reg in insn 2839
changing reg in insn 2839
changing reg in insn 2843
changing reg in insn 2841
changing reg in insn 2842
changing reg in insn 2842
changing reg in insn 2843
changing reg in insn 2843
changing reg in insn 2845
changing reg in insn 2846
changing reg in insn 2847
changing reg in insn 2847
changing reg in insn 2849
changing reg in insn 2849
changing reg in insn 2851
changing reg in insn 2857
changing reg in insn 2858
changing reg in insn 2858
changing reg in insn 2859
changing reg in insn 2859
changing reg in insn 2863
changing reg in insn 2861
changing reg in insn 2862
changing reg in insn 2862
changing reg in insn 2863
changing reg in insn 2863
changing reg in insn 2865
changing reg in insn 2866
changing reg in insn 2867
changing reg in insn 2867
changing reg in insn 2869
changing reg in insn 2869
changing reg in insn 2870
changing reg in insn 2876
changing reg in insn 2877
changing reg in insn 2877
changing reg in insn 2878
changing reg in insn 2878
changing reg in insn 2882
changing reg in insn 2880
changing reg in insn 2881
changing reg in insn 2881
changing reg in insn 2882
changing reg in insn 2882
changing reg in insn 2884
changing reg in insn 2885
changing reg in insn 2886
changing reg in insn 2886
changing reg in insn 2889
changing reg in insn 2904
changing reg in insn 2905
changing reg in insn 2905
changing reg in insn 2909
changing reg in insn 2906
changing reg in insn 2909
changing reg in insn 2908
changing reg in insn 2912
changing reg in insn 2913
changing reg in insn 2914
changing reg in insn 2914
changing reg in insn 2915
changing reg in insn 2916
changing reg in insn 2916
changing reg in insn 2917
changing reg in insn 2918
changing reg in insn 2919
changing reg in insn 2957
changing reg in insn 2958
changing reg in insn 2958
changing reg in insn 2960
changing reg in insn 2961
changing reg in insn 2962
changing reg in insn 2962
changing reg in insn 2964
changing reg in insn 2964
changing reg in insn 2966
changing reg in insn 2967
changing reg in insn 2967
changing reg in insn 2969
changing reg in insn 2970
changing reg in insn 2971
changing reg in insn 2971
changing reg in insn 2973
changing reg in insn 2973
changing reg in insn 2975
changing reg in insn 2975
changing reg in insn 2976
changing reg in insn 2976
changing reg in insn 2978
changing reg in insn 2979
changing reg in insn 2979
changing reg in insn 2981
changing reg in insn 2982
changing reg in insn 2983
changing reg in insn 2983
changing reg in insn 2986
changing reg in insn 2984
changing reg in insn 2986
changing reg in insn 3018
changing reg in insn 3019
changing reg in insn 3020
changing reg in insn 3021
changing reg in insn 3041
changing reg in insn 3042
changing reg in insn 3045
changing reg in insn 3046
changing reg in insn 3046
changing reg in insn 3050
changing reg in insn 3047
changing reg in insn 3050
changing reg in insn 3049
changing reg in insn 3053
changing reg in insn 3054
changing reg in insn 3055
changing reg in insn 3055
changing reg in insn 3056
changing reg in insn 3057
changing reg in insn 3057
changing reg in insn 3058
changing reg in insn 3059
changing reg in insn 3060
changing reg in insn 3063
changing reg in insn 3064
changing reg in insn 3064
changing reg in insn 3068
changing reg in insn 3065
changing reg in insn 3068
changing reg in insn 3067
changing reg in insn 3071
changing reg in insn 3072
changing reg in insn 3073
changing reg in insn 3073
changing reg in insn 3074
changing reg in insn 3075
changing reg in insn 3075
changing reg in insn 3076
changing reg in insn 3077
changing reg in insn 3078
changing reg in insn 3116
changing reg in insn 3117
changing reg in insn 3117
changing reg in insn 3119
changing reg in insn 3120
changing reg in insn 3121
changing reg in insn 3121
changing reg in insn 3123
changing reg in insn 3123
changing reg in insn 3125
changing reg in insn 3126
changing reg in insn 3126
changing reg in insn 3128
changing reg in insn 3129
changing reg in insn 3130
changing reg in insn 3130
changing reg in insn 3132
changing reg in insn 3132
changing reg in insn 3134
changing reg in insn 3135
changing reg in insn 3135
changing reg in insn 3137
changing reg in insn 3138
changing reg in insn 3139
changing reg in insn 3139
changing reg in insn 3142
changing reg in insn 3140
changing reg in insn 3142
changing reg in insn 3174
changing reg in insn 3175
changing reg in insn 3176
changing reg in insn 3177
changing reg in insn 3197
changing reg in insn 3198
changing reg in insn 3201
changing reg in insn 3202
changing reg in insn 3202
changing reg in insn 3206
changing reg in insn 3203
changing reg in insn 3206
changing reg in insn 3205
changing reg in insn 3209
changing reg in insn 3210
changing reg in insn 3211
changing reg in insn 3211
changing reg in insn 3212
changing reg in insn 3213
changing reg in insn 3213
changing reg in insn 3214
changing reg in insn 3215
changing reg in insn 3216
changing reg in insn 3219
changing reg in insn 3220
changing reg in insn 3220
changing reg in insn 3224
changing reg in insn 3221
changing reg in insn 3224
changing reg in insn 3223
changing reg in insn 3227
changing reg in insn 3228
changing reg in insn 3229
changing reg in insn 3229
changing reg in insn 3230
changing reg in insn 3231
changing reg in insn 3231
changing reg in insn 3232
changing reg in insn 3233
changing reg in insn 3234
changing reg in insn 3241
changing reg in insn 3242
changing reg in insn 3264
changing reg in insn 3265
changing reg in insn 3265
changing reg in insn 3267
changing reg in insn 3268
changing reg in insn 3269
changing reg in insn 3269
changing reg in insn 3272
changing reg in insn 3308
changing reg in insn 3309
changing reg in insn 3309
changing reg in insn 3311
changing reg in insn 3312
changing reg in insn 3313
changing reg in insn 3313
changing reg in insn 3315
changing reg in insn 3316
changing reg in insn 3318
changing reg in insn 3320
changing reg in insn 3321
changing reg in insn 3321
changing reg in insn 3322
changing reg in insn 3322
changing reg in insn 3326
changing reg in insn 3324
changing reg in insn 3325
changing reg in insn 3325
changing reg in insn 3326
changing reg in insn 3326
changing reg in insn 3328
changing reg in insn 3329
changing reg in insn 3330
changing reg in insn 3330
changing reg in insn 3332
changing reg in insn 3333
changing reg in insn 3335
changing reg in insn 3336
changing reg in insn 3336
changing reg in insn 3338
changing reg in insn 3339
changing reg in insn 3340
changing reg in insn 3340
changing reg in insn 3342
changing reg in insn 3342
changing reg in insn 3345
changing reg in insn 3346
changing reg in insn 3346
changing reg in insn 3347
changing reg in insn 3347
changing reg in insn 3351
changing reg in insn 3349
changing reg in insn 3350
changing reg in insn 3350
changing reg in insn 3351
changing reg in insn 3351
changing reg in insn 3353
changing reg in insn 3354
changing reg in insn 3355
changing reg in insn 3355
changing reg in insn 3357
changing reg in insn 3360
changing reg in insn 3361
changing reg in insn 3361
changing reg in insn 3362
changing reg in insn 3362
changing reg in insn 3366
changing reg in insn 3364
changing reg in insn 3365
changing reg in insn 3365
changing reg in insn 3366
changing reg in insn 3366
changing reg in insn 3368
changing reg in insn 3369
changing reg in insn 3370
changing reg in insn 3370
changing reg in insn 3372
changing reg in insn 3375
changing reg in insn 3376
changing reg in insn 3376
changing reg in insn 3377
changing reg in insn 3377
changing reg in insn 3381
changing reg in insn 3379
changing reg in insn 3380
changing reg in insn 3380
changing reg in insn 3381
changing reg in insn 3381
changing reg in insn 3383
changing reg in insn 3384
changing reg in insn 3385
changing reg in insn 3385
changing reg in insn 3387
changing reg in insn 3391
changing reg in insn 3392
changing reg in insn 3392
changing reg in insn 3394
changing reg in insn 3399
changing reg in insn 3402
changing reg in insn 3403
changing reg in insn 3404
changing reg in insn 3413
changing reg in insn 3414
changing reg in insn 3414
changing reg in insn 3416
changing reg in insn 3417
changing reg in insn 3418
changing reg in insn 3418
changing reg in insn 3420
changing reg in insn 3421
changing reg in insn 3428
changing reg in insn 3422
changing reg in insn 3423
changing reg in insn 3423
changing reg in insn 3424
changing reg in insn 3424
changing reg in insn 3426
changing reg in insn 3427
changing reg in insn 3428
changing reg in insn 3428
changing reg in insn 3430
changing reg in insn 3435
changing reg in insn 3439
changing reg in insn 3442
changing reg in insn 3443
changing reg in insn 3443
changing reg in insn 3444
changing reg in insn 3449
changing reg in insn 3447
changing reg in insn 3448
changing reg in insn 3448
changing reg in insn 3449
changing reg in insn 3449
changing reg in insn 3450
changing reg in insn 3452
changing reg in insn 3459
changing reg in insn 3462
changing reg in insn 3463
changing reg in insn 3464
changing reg in insn 3471
changing reg in insn 3473
changing reg in insn 3474
changing reg in insn 3474
changing reg in insn 3482
changing reg in insn 3476
changing reg in insn 3477
changing reg in insn 3477
changing reg in insn 3479
changing reg in insn 3480
changing reg in insn 3481
changing reg in insn 3481
changing reg in insn 3484
changing reg in insn 3482
changing reg in insn 3484
changing reg in insn 3487
changing reg in insn 3490
changing reg in insn 3491
changing reg in insn 3491
changing reg in insn 3492
changing reg in insn 3494
changing reg in insn 3494
changing reg in insn 3495
changing reg in insn 3495
changing reg in insn 3503
changing reg in insn 3497
changing reg in insn 3498
changing reg in insn 3498
changing reg in insn 3500
changing reg in insn 3501
changing reg in insn 3502
changing reg in insn 3502
changing reg in insn 3505
changing reg in insn 3503
changing reg in insn 3505
changing reg in insn 3514
changing reg in insn 3515
changing reg in insn 3515
changing reg in insn 3517
changing reg in insn 3518
changing reg in insn 3519
changing reg in insn 3519
changing reg in insn 3528
changing reg in insn 3521
changing reg in insn 3522
changing reg in insn 3522
changing reg in insn 3524
changing reg in insn 3525
changing reg in insn 3526
changing reg in insn 3526
changing reg in insn 3530
changing reg in insn 3528
changing reg in insn 3530
changing reg in insn 3534
changing reg in insn 3535
changing reg in insn 3535
changing reg in insn 3537
changing reg in insn 3538
changing reg in insn 3539
changing reg in insn 3539
changing reg in insn 3541
changing reg in insn 3542
changing reg in insn 3543
changing reg in insn 3545
changing reg in insn 3545
changing reg in insn 3546
changing reg in insn 3546
changing reg in insn 3547
changing reg in insn 3547
changing reg in insn 3549
changing reg in insn 3550
changing reg in insn 3552
changing reg in insn 3553
changing reg in insn 3553
changing reg in insn 3555
changing reg in insn 3556
changing reg in insn 3557
changing reg in insn 3557
changing reg in insn 3559
changing reg in insn 3560
changing reg in insn 3562
changing reg in insn 3562
changing reg in insn 3563
changing reg in insn 3563
changing reg in insn 3564
changing reg in insn 3565
changing reg in insn 3565
changing reg in insn 3568
changing reg in insn 3569
changing reg in insn 3569
changing reg in insn 3570
changing reg in insn 3570
changing reg in insn 3574
changing reg in insn 3572
changing reg in insn 3573
changing reg in insn 3573
changing reg in insn 3574
changing reg in insn 3574
changing reg in insn 3576
changing reg in insn 3577
changing reg in insn 3578
changing reg in insn 3578
changing reg in insn 3580
changing reg in insn 3583
changing reg in insn 3584
changing reg in insn 3584
changing reg in insn 3594
changing reg in insn 3586
changing reg in insn 3587
changing reg in insn 3587
changing reg in insn 3589
changing reg in insn 3590
changing reg in insn 3591
changing reg in insn 3591
changing reg in insn 3593
changing reg in insn 3593
changing reg in insn 3594
changing reg in insn 3594
changing reg in insn 3596
changing reg in insn 3597
changing reg in insn 3597
changing reg in insn 3599
changing reg in insn 3600
changing reg in insn 3601
changing reg in insn 3601
changing reg in insn 3603
changing reg in insn 3603
changing reg in insn 3604
changing reg in insn 3604
changing reg in insn 3635
changing reg in insn 3638
changing reg in insn 3639
changing reg in insn 3640
changing reg in insn 3647
changing reg in insn 3648
changing reg in insn 3648
changing reg in insn 3650
changing reg in insn 3651
changing reg in insn 3652
changing reg in insn 3652
changing reg in insn 3654
changing reg in insn 3661
changing reg in insn 3665
changing reg in insn 3663
changing reg in insn 3664
changing reg in insn 3664
changing reg in insn 3665
changing reg in insn 3665
changing reg in insn 3667
changing reg in insn 3667
changing reg in insn 3673
changing reg in insn 3676
changing reg in insn 3677
changing reg in insn 3678
changing reg in insn 3688
changing reg in insn 3690
changing reg in insn 3690
changing reg in insn 3691
changing reg in insn 3691
changing reg in insn 3699
changing reg in insn 3693
changing reg in insn 3694
changing reg in insn 3694
changing reg in insn 3696
changing reg in insn 3697
changing reg in insn 3698
changing reg in insn 3698
changing reg in insn 3701
changing reg in insn 3699
changing reg in insn 3701
changing reg in insn 3735
changing reg in insn 3736
changing reg in insn 3737
changing reg in insn 3738
changing reg in insn 3767
changing reg in insn 3768
changing reg in insn 3771
changing reg in insn 3772
changing reg in insn 3772
changing reg in insn 3776
changing reg in insn 3773
changing reg in insn 3776
changing reg in insn 3775
changing reg in insn 3779
changing reg in insn 3780
changing reg in insn 3781
changing reg in insn 3781
changing reg in insn 3782
changing reg in insn 3783
changing reg in insn 3783
changing reg in insn 3784
changing reg in insn 3785
changing reg in insn 3786
changing reg in insn 3789
changing reg in insn 3790
changing reg in insn 3790
changing reg in insn 3793
changing reg in insn 3791
changing reg in insn 3793
changing reg in insn 3793
changing reg in insn 3794
changing reg in insn 3794
changing reg in insn 3795
changing reg in insn 3809
changing reg in insn 3810
changing reg in insn 3810
changing reg in insn 3811
changing reg in insn 3812
changing reg in insn 3813
changing reg in insn 3813
changing reg in insn 3817
changing reg in insn 3814
changing reg in insn 3817
changing reg in insn 3816
changing reg in insn 3820
changing reg in insn 3821
changing reg in insn 3822
changing reg in insn 3822
changing reg in insn 3823
changing reg in insn 3824
changing reg in insn 3824
changing reg in insn 3825
changing reg in insn 3826
changing reg in insn 3827
changing reg in insn 3847
changing reg in insn 3848
changing reg in insn 3849
changing reg in insn 3850
changing reg in insn 3870
changing reg in insn 3871
changing reg in insn 3874
changing reg in insn 3875
changing reg in insn 3875
changing reg in insn 3879
changing reg in insn 3876
changing reg in insn 3879
changing reg in insn 3878
changing reg in insn 3882
changing reg in insn 3883
changing reg in insn 3884
changing reg in insn 3884
changing reg in insn 3885
changing reg in insn 3886
changing reg in insn 3886
changing reg in insn 3887
changing reg in insn 3888
changing reg in insn 3889
changing reg in insn 3892
changing reg in insn 3893
changing reg in insn 3893
changing reg in insn 3897
changing reg in insn 3894
changing reg in insn 3897
changing reg in insn 3896
changing reg in insn 3900
changing reg in insn 3901
changing reg in insn 3902
changing reg in insn 3902
changing reg in insn 3903
changing reg in insn 3904
changing reg in insn 3904
changing reg in insn 3905
changing reg in insn 3906
changing reg in insn 3907
changing reg in insn 3927
changing reg in insn 3928
changing reg in insn 3928
changing reg in insn 3930
changing reg in insn 3931
changing reg in insn 3932
changing reg in insn 3932
changing reg in insn 3935
changing reg in insn 3967
changing reg in insn 3968
changing reg in insn 3969
changing reg in insn 3970
changing reg in insn 3990
changing reg in insn 3991
changing reg in insn 3994
changing reg in insn 3995
changing reg in insn 3995
changing reg in insn 3999
changing reg in insn 3996
changing reg in insn 3999
changing reg in insn 3998
changing reg in insn 4002
changing reg in insn 4003
changing reg in insn 4004
changing reg in insn 4004
changing reg in insn 4005
changing reg in insn 4006
changing reg in insn 4006
changing reg in insn 4007
changing reg in insn 4008
changing reg in insn 4009
changing reg in insn 4012
changing reg in insn 4013
changing reg in insn 4013
changing reg in insn 4017
changing reg in insn 4014
changing reg in insn 4017
changing reg in insn 4016
changing reg in insn 4020
changing reg in insn 4021
changing reg in insn 4022
changing reg in insn 4022
changing reg in insn 4023
changing reg in insn 4024
changing reg in insn 4024
changing reg in insn 4025
changing reg in insn 4026
changing reg in insn 4027
changing reg in insn 4047
changing reg in insn 4048
changing reg in insn 4048
changing reg in insn 4050
changing reg in insn 4051
changing reg in insn 4052
changing reg in insn 4052
changing reg in insn 4055
changing reg in insn 4087
changing reg in insn 4088
changing reg in insn 4089
changing reg in insn 4090
changing reg in insn 4110
changing reg in insn 4111
changing reg in insn 4114
changing reg in insn 4115
changing reg in insn 4115
changing reg in insn 4119
changing reg in insn 4116
changing reg in insn 4119
changing reg in insn 4118
changing reg in insn 4122
changing reg in insn 4123
changing reg in insn 4124
changing reg in insn 4124
changing reg in insn 4125
changing reg in insn 4126
changing reg in insn 4126
changing reg in insn 4127
changing reg in insn 4128
changing reg in insn 4129
changing reg in insn 4132
changing reg in insn 4133
changing reg in insn 4133
changing reg in insn 4136
changing reg in insn 4134
changing reg in insn 4136
changing reg in insn 4136
changing reg in insn 4137
changing reg in insn 4137
changing reg in insn 4138
changing reg in insn 4152
changing reg in insn 4153
changing reg in insn 4153
changing reg in insn 4154
changing reg in insn 4155
changing reg in insn 4156
changing reg in insn 4156
changing reg in insn 4160
changing reg in insn 4157
changing reg in insn 4160
changing reg in insn 4159
changing reg in insn 4163
changing reg in insn 4164
changing reg in insn 4165
changing reg in insn 4165
changing reg in insn 4166
changing reg in insn 4167
changing reg in insn 4167
changing reg in insn 4168
changing reg in insn 4169
changing reg in insn 4170
changing reg in insn 4171
changing reg in insn 4173
changing reg in insn 4179
changing reg in insn 4181
changing reg in insn 4210
changing reg in insn 4211
changing reg in insn 4211
changing reg in insn 4213
changing reg in insn 4214
changing reg in insn 4215
changing reg in insn 4215
changing reg in insn 4217
changing reg in insn 4217
changing reg in insn 4225
changing reg in insn 4219
changing reg in insn 4220
changing reg in insn 4220
changing reg in insn 4222
changing reg in insn 4223
changing reg in insn 4224
changing reg in insn 4224
changing reg in insn 4227
changing reg in insn 4225
changing reg in insn 4227
changing reg in insn 4261
changing reg in insn 4262
changing reg in insn 4274
changing reg in insn 4275
changing reg in insn 4281
changing reg in insn 4282
changing reg in insn 4285
changing reg in insn 4286
changing reg in insn 4292
changing reg in insn 4293
changing reg in insn 4294
changing reg in insn 4295
changing reg in insn 4315
changing reg in insn 4316
changing reg in insn 4319
changing reg in insn 4320
changing reg in insn 4320
changing reg in insn 4324
changing reg in insn 4321
changing reg in insn 4324
changing reg in insn 4323
changing reg in insn 4327
changing reg in insn 4328
changing reg in insn 4329
changing reg in insn 4329
changing reg in insn 4330
changing reg in insn 4331
changing reg in insn 4331
changing reg in insn 4332
changing reg in insn 4333
changing reg in insn 4334
changing reg in insn 4337
changing reg in insn 4338
changing reg in insn 4338
changing reg in insn 4341
changing reg in insn 4339
changing reg in insn 4341
changing reg in insn 4341
changing reg in insn 4342
changing reg in insn 4342
changing reg in insn 4343
changing reg in insn 4357
changing reg in insn 4358
changing reg in insn 4358
changing reg in insn 4359
changing reg in insn 4360
changing reg in insn 4361
changing reg in insn 4361
changing reg in insn 4365
changing reg in insn 4362
changing reg in insn 4365
changing reg in insn 4364
changing reg in insn 4368
changing reg in insn 4369
changing reg in insn 4370
changing reg in insn 4370
changing reg in insn 4371
changing reg in insn 4372
changing reg in insn 4372
changing reg in insn 4373
changing reg in insn 4374
changing reg in insn 4375
changing reg in insn 4376
changing reg in insn 4378
changing reg in insn 4384
changing reg in insn 4386
changing reg in insn 4415
changing reg in insn 4416
changing reg in insn 4416
changing reg in insn 4418
changing reg in insn 4419
changing reg in insn 4420
changing reg in insn 4420
changing reg in insn 4422
changing reg in insn 4422
changing reg in insn 4430
changing reg in insn 4424
changing reg in insn 4425
changing reg in insn 4425
changing reg in insn 4427
changing reg in insn 4428
changing reg in insn 4429
changing reg in insn 4429
changing reg in insn 4432
changing reg in insn 4430
changing reg in insn 4432
changing reg in insn 4466
changing reg in insn 4467
changing reg in insn 4479
changing reg in insn 4480
changing reg in insn 4486
changing reg in insn 4487
changing reg in insn 4490
changing reg in insn 4491
changing reg in insn 4497
changing reg in insn 4498
changing reg in insn 4499
changing reg in insn 4500
changing reg in insn 4520
changing reg in insn 4521
changing reg in insn 4521
changing reg in insn 4522
changing reg in insn 4528
changing reg in insn 4529
changing reg in insn 4532
changing reg in insn 4533
changing reg in insn 4533
changing reg in insn 4534
changing reg in insn 4535
changing reg in insn 4536
changing reg in insn 4536
changing reg in insn 4538
changing reg in insn 4559
changing reg in insn 4560
changing reg in insn 4560
changing reg in insn 4562
changing reg in insn 4563
changing reg in insn 4564
changing reg in insn 4564
changing reg in insn 4566
changing reg in insn 4567
changing reg in insn 4572
changing reg in insn 4569
changing reg in insn 4579
changing reg in insn 4580
changing reg in insn 4580
changing reg in insn 4582
changing reg in insn 4583
changing reg in insn 4584
changing reg in insn 4584
changing reg in insn 4587
changing reg in insn 4589
changing reg in insn 4590
changing reg in insn 4590
changing reg in insn 4592
changing reg in insn 4593
changing reg in insn 4594
changing reg in insn 4594
changing reg in insn 4597
changing reg in insn 4603
changing reg in insn 4604
changing reg in insn 4604
changing reg in insn 4606
changing reg in insn 4607
changing reg in insn 4608
changing reg in insn 4608
changing reg in insn 4610
changing reg in insn 4614
changing reg in insn 4615
changing reg in insn 4615
changing reg in insn 4617
changing reg in insn 4618
changing reg in insn 4619
changing reg in insn 4619
changing reg in insn 4621
changing reg in insn 4622
changing reg in insn 4624
changing reg in insn 4625
changing reg in insn 4625
changing reg in insn 4627
changing reg in insn 4628
changing reg in insn 4629
changing reg in insn 4629
changing reg in insn 4631
changing reg in insn 4632
changing reg in insn 4633
changing reg in insn 4638
changing reg in insn 4639
changing reg in insn 4639
changing reg in insn 4641
changing reg in insn 4642
changing reg in insn 4643
changing reg in insn 4643
changing reg in insn 4645
changing reg in insn 4646
changing reg in insn 4648
changing reg in insn 4648
changing reg in insn 4649
changing reg in insn 4649
changing reg in insn 4651
changing reg in insn 4652
changing reg in insn 4652
changing reg in insn 4654
changing reg in insn 4655
changing reg in insn 4656
changing reg in insn 4656
changing reg in insn 4658
changing reg in insn 4659
changing reg in insn 4660
changing reg in insn 4665
changing reg in insn 4666
changing reg in insn 4666
changing reg in insn 4668
changing reg in insn 4669
changing reg in insn 4670
changing reg in insn 4670
changing reg in insn 4672
changing reg in insn 4673
changing reg in insn 4684
changing reg in insn 4675
changing reg in insn 4676
changing reg in insn 4676
changing reg in insn 4678
changing reg in insn 4679
changing reg in insn 4680
changing reg in insn 4680
changing reg in insn 4682
changing reg in insn 4683
changing reg in insn 4684
changing reg in insn 4684
changing reg in insn 4685
changing reg in insn 4692
changing reg in insn 4693
changing reg in insn 4693
changing reg in insn 4697
changing reg in insn 4695
changing reg in insn 4696
changing reg in insn 4696
changing reg in insn 4697
changing reg in insn 4697
changing reg in insn 4699
changing reg in insn 4700
changing reg in insn 4701
changing reg in insn 4701
changing reg in insn 4703
changing reg in insn 4704
changing reg in insn 4735
changing reg in insn 4706
changing reg in insn 4707
changing reg in insn 4707
changing reg in insn 4709
changing reg in insn 4710
changing reg in insn 4711
changing reg in insn 4711
changing reg in insn 4713
changing reg in insn 4714
changing reg in insn 4730
changing reg in insn 4716
changing reg in insn 4717
changing reg in insn 4717
changing reg in insn 4719
changing reg in insn 4720
changing reg in insn 4721
changing reg in insn 4721
changing reg in insn 4723
changing reg in insn 4724
changing reg in insn 4725
changing reg in insn 4725
changing reg in insn 4726
changing reg in insn 4726
changing reg in insn 4728
changing reg in insn 4729
changing reg in insn 4730
changing reg in insn 4730
changing reg in insn 4732
changing reg in insn 4733
changing reg in insn 4734
changing reg in insn 4734
changing reg in insn 4735
changing reg in insn 4735
changing reg in insn 4736
changing reg in insn 4750
changing reg in insn 4751
changing reg in insn 4751
changing reg in insn 4759
changing reg in insn 4753
changing reg in insn 4754
changing reg in insn 4754
changing reg in insn 4756
changing reg in insn 4757
changing reg in insn 4758
changing reg in insn 4758
changing reg in insn 4761
changing reg in insn 4759
changing reg in insn 4761
changing reg in insn 4763
changing reg in insn 4764
changing reg in insn 4764
changing reg in insn 4766
changing reg in insn 4767
changing reg in insn 4768
changing reg in insn 4768
changing reg in insn 4770
changing reg in insn 4771
changing reg in insn 4782
changing reg in insn 4773
changing reg in insn 4774
changing reg in insn 4774
changing reg in insn 4776
changing reg in insn 4777
changing reg in insn 4778
changing reg in insn 4778
changing reg in insn 4780
changing reg in insn 4781
changing reg in insn 4782
changing reg in insn 4782
changing reg in insn 4783
changing reg in insn 4790
changing reg in insn 4791
changing reg in insn 4791
changing reg in insn 4795
changing reg in insn 4793
changing reg in insn 4794
changing reg in insn 4794
changing reg in insn 4795
changing reg in insn 4795
changing reg in insn 4797
changing reg in insn 4798
changing reg in insn 4799
changing reg in insn 4799
changing reg in insn 4801
changing reg in insn 4802
changing reg in insn 4833
changing reg in insn 4804
changing reg in insn 4805
changing reg in insn 4805
changing reg in insn 4807
changing reg in insn 4808
changing reg in insn 4809
changing reg in insn 4809
changing reg in insn 4811
changing reg in insn 4812
changing reg in insn 4828
changing reg in insn 4814
changing reg in insn 4815
changing reg in insn 4815
changing reg in insn 4817
changing reg in insn 4818
changing reg in insn 4819
changing reg in insn 4819
changing reg in insn 4821
changing reg in insn 4822
changing reg in insn 4823
changing reg in insn 4823
changing reg in insn 4824
changing reg in insn 4824
changing reg in insn 4826
changing reg in insn 4827
changing reg in insn 4828
changing reg in insn 4828
changing reg in insn 4830
changing reg in insn 4831
changing reg in insn 4832
changing reg in insn 4832
changing reg in insn 4833
changing reg in insn 4833
changing reg in insn 4834
changing reg in insn 4848
changing reg in insn 4849
changing reg in insn 4849
changing reg in insn 4857
changing reg in insn 4851
changing reg in insn 4852
changing reg in insn 4852
changing reg in insn 4854
changing reg in insn 4855
changing reg in insn 4856
changing reg in insn 4856
changing reg in insn 4859
changing reg in insn 4857
changing reg in insn 4859
changing reg in insn 4863
changing reg in insn 4864
changing reg in insn 4864
changing reg in insn 4866
changing reg in insn 4867
changing reg in insn 4868
changing reg in insn 4868
changing reg in insn 4870
changing reg in insn 4874
changing reg in insn 4875
changing reg in insn 4875
changing reg in insn 4879
changing reg in insn 4877
changing reg in insn 4878
changing reg in insn 4878
changing reg in insn 4879
changing reg in insn 4879
changing reg in insn 4881
changing reg in insn 4882
changing reg in insn 4883
changing reg in insn 4883
changing reg in insn 4892
changing reg in insn 4885
changing reg in insn 4886
changing reg in insn 4886
changing reg in insn 4888
changing reg in insn 4889
changing reg in insn 4890
changing reg in insn 4890
changing reg in insn 4895
changing reg in insn 4893
changing reg in insn 4895
changing reg in insn 4897
changing reg in insn 4898
changing reg in insn 4898
changing reg in insn 4902
changing reg in insn 4900
changing reg in insn 4901
changing reg in insn 4901
changing reg in insn 4902
changing reg in insn 4902
changing reg in insn 4904
changing reg in insn 4905
changing reg in insn 4906
changing reg in insn 4906
changing reg in insn 4915
changing reg in insn 4908
changing reg in insn 4909
changing reg in insn 4909
changing reg in insn 4911
changing reg in insn 4912
changing reg in insn 4913
changing reg in insn 4913
changing reg in insn 4918
changing reg in insn 4916
changing reg in insn 4918
changing reg in insn 4920
changing reg in insn 4921
changing reg in insn 4921
changing reg in insn 4925
changing reg in insn 4923
changing reg in insn 4924
changing reg in insn 4924
changing reg in insn 4925
changing reg in insn 4925
changing reg in insn 4927
changing reg in insn 4928
changing reg in insn 4929
changing reg in insn 4929
changing reg in insn 4931
changing reg in insn 4931
changing reg in insn 4933
changing reg in insn 4933
changing reg in insn 4934
changing reg in insn 4934
changing reg in insn 4936
changing reg in insn 4937
changing reg in insn 4937
changing reg in insn 4941
changing reg in insn 4939
changing reg in insn 4940
changing reg in insn 4940
changing reg in insn 4941
changing reg in insn 4941
changing reg in insn 4943
changing reg in insn 4944
changing reg in insn 4945
changing reg in insn 4945
changing reg in insn 4947
changing reg in insn 4947
changing reg in insn 4949
changing reg in insn 4950
changing reg in insn 4950
changing reg in insn 4952
changing reg in insn 4953
changing reg in insn 4954
changing reg in insn 4954
changing reg in insn 4957
changing reg in insn 4955
changing reg in insn 4957
changing reg in insn 4959
changing reg in insn 4960
changing reg in insn 4960
changing reg in insn 4964
changing reg in insn 4962
changing reg in insn 4963
changing reg in insn 4963
changing reg in insn 4964
changing reg in insn 4964
changing reg in insn 4966
changing reg in insn 4967
changing reg in insn 4968
changing reg in insn 4968
changing reg in insn 4970
changing reg in insn 4970
changing reg in insn 4972
changing reg in insn 4973
changing reg in insn 4973
changing reg in insn 4977
changing reg in insn 4975
changing reg in insn 4976
changing reg in insn 4976
changing reg in insn 4977
changing reg in insn 4977
changing reg in insn 4979
changing reg in insn 4980
changing reg in insn 4981
changing reg in insn 4981
changing reg in insn 4983
changing reg in insn 4983
changing reg in insn 4985
changing reg in insn 4986
changing reg in insn 4986
changing reg in insn 4988
changing reg in insn 4989
changing reg in insn 4990
changing reg in insn 4990
changing reg in insn 4993
changing reg in insn 4991
changing reg in insn 4993
changing reg in insn 4995
changing reg in insn 4996
changing reg in insn 4996
changing reg in insn 4998
changing reg in insn 4999
changing reg in insn 5000
changing reg in insn 5000
changing reg in insn 5002
changing reg in insn 5003
changing reg in insn 5019
changing reg in insn 5005
changing reg in insn 5006
changing reg in insn 5006
changing reg in insn 5008
changing reg in insn 5009
changing reg in insn 5010
changing reg in insn 5010
changing reg in insn 5012
changing reg in insn 5013
changing reg in insn 5014
changing reg in insn 5014
changing reg in insn 5015
changing reg in insn 5015
changing reg in insn 5017
changing reg in insn 5018
changing reg in insn 5019
changing reg in insn 5019
changing reg in insn 5021
changing reg in insn 5023
changing reg in insn 5024
changing reg in insn 5024
changing reg in insn 5026
changing reg in insn 5027
changing reg in insn 5028
changing reg in insn 5028
changing reg in insn 5031
changing reg in insn 5029
changing reg in insn 5031
changing reg in insn 5074
changing reg in insn 5075
changing reg in insn 5075
changing reg in insn 5076
changing reg in insn 5076
changing reg in insn 5080
changing reg in insn 5077
changing reg in insn 5080
changing reg in insn 5079
changing reg in insn 5083
changing reg in insn 5084
changing reg in insn 5086
changing reg in insn 5093
changing reg in insn 5100
changing reg in insn 5101
changing reg in insn 5104
changing reg in insn 5105
changing reg in insn 5108
changing reg in insn 5109
changing reg in insn 5134
changing reg in insn 5135
changing reg in insn 5170
changing reg in insn 5171
changing reg in insn 5174
changing reg in insn 5175
changing reg in insn 5198
changing reg in insn 5199
changing reg in insn 5199
changing reg in insn 5201
changing reg in insn 5202
changing reg in insn 5203
changing reg in insn 5203
changing reg in insn 5212
changing reg in insn 5205
changing reg in insn 5206
changing reg in insn 5206
changing reg in insn 5208
changing reg in insn 5209
changing reg in insn 5210
changing reg in insn 5210
changing reg in insn 5215
changing reg in insn 5213
changing reg in insn 5215
changing reg in insn 5230
changing reg in insn 5231
changing reg in insn 5255
changing reg in insn 5256
changing reg in insn 5256
changing reg in insn 5257
changing reg in insn 5257
changing reg in insn 5261
changing reg in insn 5259
changing reg in insn 5260
changing reg in insn 5260
changing reg in insn 5261
changing reg in insn 5261
changing reg in insn 5263
changing reg in insn 5264
changing reg in insn 5265
changing reg in insn 5265
changing reg in insn 5268
changing reg in insn 5281
changing reg in insn 5282
changing reg in insn 5282
changing reg in insn 5283
changing reg in insn 5308
changing reg in insn 5309
changing reg in insn 5320
changing reg in insn 5321
changing reg in insn 5327
changing reg in insn 5328
changing reg in insn 5331
changing reg in insn 5332
changing reg in insn 5332
changing reg in insn 5336
changing reg in insn 5333
changing reg in insn 5336
changing reg in insn 5335
changing reg in insn 5339
changing reg in insn 5340
changing reg in insn 5341
changing reg in insn 5341
changing reg in insn 5342
changing reg in insn 5343
changing reg in insn 5343
changing reg in insn 5344
changing reg in insn 5345
changing reg in insn 5346
changing reg in insn 5349
changing reg in insn 5350
changing reg in insn 5350
changing reg in insn 5354
changing reg in insn 5351
changing reg in insn 5354
changing reg in insn 5353
changing reg in insn 5357
changing reg in insn 5358
changing reg in insn 5359
changing reg in insn 5359
changing reg in insn 5360
changing reg in insn 5361
changing reg in insn 5361
changing reg in insn 5362
changing reg in insn 5363
changing reg in insn 5364
changing reg in insn 5393
changing reg in insn 5394
changing reg in insn 5395
changing reg in insn 5396
changing reg in insn 5416
changing reg in insn 5417
changing reg in insn 5420
changing reg in insn 5421
changing reg in insn 5421
changing reg in insn 5425
changing reg in insn 5422
changing reg in insn 5425
changing reg in insn 5424
changing reg in insn 5428
changing reg in insn 5429
changing reg in insn 5430
changing reg in insn 5430
changing reg in insn 5431
changing reg in insn 5432
changing reg in insn 5432
changing reg in insn 5433
changing reg in insn 5434
changing reg in insn 5435
changing reg in insn 5438
changing reg in insn 5439
changing reg in insn 5439
changing reg in insn 5443
changing reg in insn 5440
changing reg in insn 5443
changing reg in insn 5442
changing reg in insn 5446
changing reg in insn 5447
changing reg in insn 5448
changing reg in insn 5448
changing reg in insn 5449
changing reg in insn 5450
changing reg in insn 5450
changing reg in insn 5451
changing reg in insn 5452
changing reg in insn 5453
changing reg in insn 5482
changing reg in insn 5483
changing reg in insn 5484
changing reg in insn 5485
changing reg in insn 5505
changing reg in insn 5506
changing reg in insn 5506
changing reg in insn 5507
changing reg in insn 1064
changing reg in insn 1053
changing reg in insn 1067
changing reg in insn 1057
changing reg in insn 1057
changing reg in insn 1054
changing reg in insn 1124
changing reg in insn 1112
changing reg in insn 1117
changing reg in insn 1117
changing reg in insn 1114
changing reg in insn 3407
changing reg in insn 3396
changing reg in insn 3410
changing reg in insn 3400
changing reg in insn 3400
changing reg in insn 3397
changing reg in insn 3467
changing reg in insn 3455
changing reg in insn 3460
changing reg in insn 3460
changing reg in insn 3457
changing reg in insn 3643
changing reg in insn 3632
changing reg in insn 3654
changing reg in insn 3636
changing reg in insn 3636
changing reg in insn 3633
changing reg in insn 3681
changing reg in insn 3669
changing reg in insn 3684
changing reg in insn 3674
changing reg in insn 3674
changing reg in insn 3671
changing reg in insn 11
changing reg in insn 14
changing reg in insn 12
changing reg in insn 14
changing reg in insn 19
changing reg in insn 19
changing reg in insn 22
changing reg in insn 20
changing reg in insn 22
changing reg in insn 30
changing reg in insn 24
changing reg in insn 38
changing reg in insn 39
changing reg in insn 45
changing reg in insn 48
changing reg in insn 46
changing reg in insn 48
changing reg in insn 53
changing reg in insn 53
changing reg in insn 56
changing reg in insn 54
changing reg in insn 56
changing reg in insn 64
changing reg in insn 58
changing reg in insn 72
changing reg in insn 73
changing reg in insn 237
changing reg in insn 239
changing reg in insn 238
changing reg in insn 241
changing reg in insn 243
changing reg in insn 244
changing reg in insn 251
changing reg in insn 252
changing reg in insn 313
changing reg in insn 314
changing reg in insn 317
changing reg in insn 319
changing reg in insn 318
changing reg in insn 321
changing reg in insn 323
changing reg in insn 324
changing reg in insn 331
changing reg in insn 332
changing reg in insn 504
changing reg in insn 507
changing reg in insn 509
changing reg in insn 510
changing reg in insn 595
changing reg in insn 596
changing reg in insn 601
changing reg in insn 602
changing reg in insn 648
changing reg in insn 649
changing reg in insn 652
changing reg in insn 654
changing reg in insn 653
changing reg in insn 656
changing reg in insn 658
changing reg in insn 659
changing reg in insn 666
changing reg in insn 667
changing reg in insn 897
changing reg in insn 899
changing reg in insn 898
changing reg in insn 901
changing reg in insn 903
changing reg in insn 904
changing reg in insn 911
changing reg in insn 912
changing reg in insn 942
changing reg in insn 943
changing reg in insn 946
changing reg in insn 948
changing reg in insn 947
changing reg in insn 950
changing reg in insn 952
changing reg in insn 953
changing reg in insn 960
changing reg in insn 961
changing reg in insn 1370
changing reg in insn 1371
changing reg in insn 2819
changing reg in insn 2821
changing reg in insn 2820
changing reg in insn 2823
changing reg in insn 2825
changing reg in insn 2826
changing reg in insn 2833
changing reg in insn 2834
changing reg in insn 2938
changing reg in insn 2940
changing reg in insn 2939
changing reg in insn 2942
changing reg in insn 2944
changing reg in insn 2945
changing reg in insn 2952
changing reg in insn 2953
changing reg in insn 3097
changing reg in insn 3099
changing reg in insn 3098
changing reg in insn 3101
changing reg in insn 3103
changing reg in insn 3104
changing reg in insn 3111
changing reg in insn 3112
changing reg in insn 3245
changing reg in insn 3247
changing reg in insn 3246
changing reg in insn 3249
changing reg in insn 3251
changing reg in insn 3252
changing reg in insn 3259
changing reg in insn 3260
changing reg in insn 3289
changing reg in insn 3291
changing reg in insn 3290
changing reg in insn 3293
changing reg in insn 3295
changing reg in insn 3296
changing reg in insn 3303
changing reg in insn 3304
changing reg in insn 3908
changing reg in insn 3910
changing reg in insn 3909
changing reg in insn 3912
changing reg in insn 3914
changing reg in insn 3915
changing reg in insn 3922
changing reg in insn 3923
changing reg in insn 4028
changing reg in insn 4030
changing reg in insn 4029
changing reg in insn 4032
changing reg in insn 4034
changing reg in insn 4035
changing reg in insn 4042
changing reg in insn 4043
changing reg in insn 4191
changing reg in insn 4193
changing reg in insn 4192
changing reg in insn 4195
changing reg in insn 4197
changing reg in insn 4198
changing reg in insn 4205
changing reg in insn 4206
changing reg in insn 4396
changing reg in insn 4398
changing reg in insn 4397
changing reg in insn 4400
changing reg in insn 4402
changing reg in insn 4403
changing reg in insn 4410
changing reg in insn 4411
changing reg in insn 4540
changing reg in insn 4542
changing reg in insn 4541
changing reg in insn 4544
changing reg in insn 4546
changing reg in insn 4547
changing reg in insn 4554
changing reg in insn 4555
changing reg in insn 4685
changing reg in insn 4687
changing reg in insn 4736
changing reg in insn 4738
changing reg in insn 4742
changing reg in insn 4744
changing reg in insn 4783
changing reg in insn 4785
changing reg in insn 4834
changing reg in insn 4836
changing reg in insn 4840
changing reg in insn 4842
changing reg in insn 5179
changing reg in insn 5181
changing reg in insn 5180
changing reg in insn 5183
changing reg in insn 5185
changing reg in insn 5186
changing reg in insn 5193
changing reg in insn 5194
changing reg in insn 5233
changing reg in insn 5234
changing reg in insn 5237
changing reg in insn 5239
changing reg in insn 5238
changing reg in insn 5241
changing reg in insn 5243
changing reg in insn 5244
changing reg in insn 5251
changing reg in insn 5252
changing reg in insn 5323
changing reg in insn 5324
changing reg in insn 7
changing reg in insn 8
changing reg in insn 9
changing reg in insn 10
changing reg in insn 13
changing reg in insn 14
changing reg in insn 15
changing reg in insn 16
changing reg in insn 17
changing reg in insn 18
changing reg in insn 21
changing reg in insn 22
changing reg in insn 33
changing reg in insn 34
changing reg in insn 37
changing reg in insn 38
changing reg in insn 41
changing reg in insn 42
changing reg in insn 43
changing reg in insn 44
changing reg in insn 47
changing reg in insn 48
changing reg in insn 49
changing reg in insn 50
changing reg in insn 51
changing reg in insn 52
changing reg in insn 55
changing reg in insn 56
changing reg in insn 67
changing reg in insn 68
changing reg in insn 71
changing reg in insn 72
changing reg in insn 75
changing reg in insn 76
changing reg in insn 77
changing reg in insn 78
changing reg in insn 82
changing reg in insn 83
changing reg in insn 84
changing reg in insn 85
changing reg in insn 91
changing reg in insn 92
changing reg in insn 97
changing reg in insn 98
changing reg in insn 104
changing reg in insn 105
changing reg in insn 107
changing reg in insn 108
changing reg in insn 111
changing reg in insn 116
changing reg in insn 117
changing reg in insn 124
changing reg in insn 128
changing reg in insn 125
changing reg in insn 129
changing reg in insn 142
changing reg in insn 137
changing reg in insn 142
changing reg in insn 141
changing reg in insn 138
changing reg in insn 140
changing reg in insn 140
changing reg in insn 139
changing reg in insn 140
changing reg in insn 140
changing reg in insn 151
changing reg in insn 149
changing reg in insn 148
changing reg in insn 146
changing reg in insn 152
changing reg in insn 150
changing reg in insn 149
changing reg in insn 147
changing reg in insn 147
changing reg in insn 148
changing reg in insn 150
changing reg in insn 151
changing reg in insn 153
changing reg in insn 154
changing reg in insn 154
changing reg in insn 155
changing reg in insn 156
changing reg in insn 159
changing reg in insn 157
changing reg in insn 160
changing reg in insn 158
changing reg in insn 161
changing reg in insn 175
changing reg in insn 179
changing reg in insn 176
changing reg in insn 180
changing reg in insn 193
changing reg in insn 188
changing reg in insn 193
changing reg in insn 192
changing reg in insn 189
changing reg in insn 191
changing reg in insn 191
changing reg in insn 190
changing reg in insn 191
changing reg in insn 191
changing reg in insn 198
changing reg in insn 199
changing reg in insn 201
changing reg in insn 204
changing reg in insn 206
changing reg in insn 207
changing reg in insn 217
changing reg in insn 215
changing reg in insn 214
changing reg in insn 212
changing reg in insn 218
changing reg in insn 216
changing reg in insn 215
changing reg in insn 213
changing reg in insn 213
changing reg in insn 214
changing reg in insn 216
changing reg in insn 217
changing reg in insn 219
changing reg in insn 220
changing reg in insn 220
changing reg in insn 221
changing reg in insn 222
changing reg in insn 225
changing reg in insn 223
changing reg in insn 226
changing reg in insn 224
changing reg in insn 227
changing reg in insn 242
changing reg in insn 243
changing reg in insn 250
changing reg in insn 251
changing reg in insn 255
changing reg in insn 256
changing reg in insn 258
changing reg in insn 259
changing reg in insn 262
changing reg in insn 264
changing reg in insn 263
changing reg in insn 264
changing reg in insn 265
changing reg in insn 266
changing reg in insn 268
changing reg in insn 269
changing reg in insn 272
changing reg in insn 274
changing reg in insn 276
changing reg in insn 275
changing reg in insn 276
changing reg in insn 277
changing reg in insn 278
changing reg in insn 280
changing reg in insn 281
changing reg in insn 284
changing reg in insn 285
changing reg in insn 287
changing reg in insn 288
changing reg in insn 291
changing reg in insn 293
changing reg in insn 292
changing reg in insn 293
changing reg in insn 294
changing reg in insn 295
changing reg in insn 312
changing reg in insn 313
changing reg in insn 322
changing reg in insn 323
changing reg in insn 330
changing reg in insn 331
changing reg in insn 338
changing reg in insn 339
changing reg in insn 342
changing reg in insn 343
changing reg in insn 346
changing reg in insn 348
changing reg in insn 347
changing reg in insn 348
changing reg in insn 352
changing reg in insn 353
changing reg in insn 356
changing reg in insn 357
changing reg in insn 360
changing reg in insn 362
changing reg in insn 361
changing reg in insn 362
changing reg in insn 367
changing reg in insn 368
changing reg in insn 371
changing reg in insn 372
changing reg in insn 375
changing reg in insn 377
changing reg in insn 376
changing reg in insn 377
changing reg in insn 378
changing reg in insn 379
changing reg in insn 380
changing reg in insn 384
changing reg in insn 385
changing reg in insn 391
changing reg in insn 392
changing reg in insn 395
changing reg in insn 396
changing reg in insn 399
changing reg in insn 401
changing reg in insn 400
changing reg in insn 401
changing reg in insn 405
changing reg in insn 406
changing reg in insn 409
changing reg in insn 410
changing reg in insn 413
changing reg in insn 415
changing reg in insn 414
changing reg in insn 415
changing reg in insn 419
changing reg in insn 420
changing reg in insn 422
changing reg in insn 423
changing reg in insn 426
changing reg in insn 427
changing reg in insn 428
changing reg in insn 429
changing reg in insn 431
changing reg in insn 432
changing reg in insn 436
changing reg in insn 437
changing reg in insn 438
changing reg in insn 439
changing reg in insn 441
changing reg in insn 442
changing reg in insn 445
changing reg in insn 446
changing reg in insn 450
changing reg in insn 451
changing reg in insn 454
changing reg in insn 455
changing reg in insn 458
changing reg in insn 460
changing reg in insn 462
changing reg in insn 461
changing reg in insn 462
changing reg in insn 463
changing reg in insn 464
changing reg in insn 466
changing reg in insn 467
changing reg in insn 470
changing reg in insn 471
changing reg in insn 473
changing reg in insn 474
changing reg in insn 477
changing reg in insn 478
changing reg in insn 479
changing reg in insn 480
changing reg in insn 501
changing reg in insn 502
changing reg in insn 502
changing reg in insn 503
changing reg in insn 508
changing reg in insn 509
changing reg in insn 513
changing reg in insn 514
changing reg in insn 516
changing reg in insn 518
changing reg in insn 517
changing reg in insn 518
changing reg in insn 518
changing reg in insn 519
changing reg in insn 527
changing reg in insn 520
changing reg in insn 523
changing reg in insn 522
changing reg in insn 523
changing reg in insn 521
changing reg in insn 522
changing reg in insn 523
changing reg in insn 526
changing reg in insn 535
changing reg in insn 528
changing reg in insn 531
changing reg in insn 534
changing reg in insn 530
changing reg in insn 531
changing reg in insn 529
changing reg in insn 530
changing reg in insn 531
changing reg in insn 534
changing reg in insn 535
changing reg in insn 536
changing reg in insn 537
changing reg in insn 541
changing reg in insn 542
changing reg in insn 543
changing reg in insn 545
changing reg in insn 546
changing reg in insn 555
changing reg in insn 556
changing reg in insn 561
changing reg in insn 562
changing reg in insn 560
changing reg in insn 575
changing reg in insn 576
changing reg in insn 581
changing reg in insn 582
changing reg in insn 580
changing reg in insn 583
changing reg in insn 584
changing reg in insn 586
changing reg in insn 587
changing reg in insn 590
changing reg in insn 592
changing reg in insn 591
changing reg in insn 592
changing reg in insn 593
changing reg in insn 594
changing reg in insn 600
changing reg in insn 601
changing reg in insn 609
changing reg in insn 611
changing reg in insn 610
changing reg in insn 611
changing reg in insn 616
changing reg in insn 617
changing reg in insn 620
changing reg in insn 621
changing reg in insn 624
changing reg in insn 626
changing reg in insn 628
changing reg in insn 627
changing reg in insn 628
changing reg in insn 647
changing reg in insn 648
changing reg in insn 657
changing reg in insn 658
changing reg in insn 665
changing reg in insn 666
changing reg in insn 674
changing reg in insn 675
changing reg in insn 678
changing reg in insn 679
changing reg in insn 682
changing reg in insn 683
changing reg in insn 687
changing reg in insn 688
changing reg in insn 691
changing reg in insn 692
changing reg in insn 695
changing reg in insn 696
changing reg in insn 702
changing reg in insn 703
changing reg in insn 706
changing reg in insn 707
changing reg in insn 710
changing reg in insn 712
changing reg in insn 713
changing reg in insn 718
changing reg in insn 719
changing reg in insn 722
changing reg in insn 723
changing reg in insn 726
changing reg in insn 728
changing reg in insn 727
changing reg in insn 728
changing reg in insn 732
changing reg in insn 733
changing reg in insn 736
changing reg in insn 737
changing reg in insn 740
changing reg in insn 742
changing reg in insn 741
changing reg in insn 742
changing reg in insn 748
changing reg in insn 749
changing reg in insn 752
changing reg in insn 753
changing reg in insn 756
changing reg in insn 758
changing reg in insn 759
changing reg in insn 895
changing reg in insn 896
changing reg in insn 902
changing reg in insn 903
changing reg in insn 910
changing reg in insn 911
changing reg in insn 915
changing reg in insn 916
changing reg in insn 918
changing reg in insn 919
changing reg in insn 922
changing reg in insn 924
changing reg in insn 923
changing reg in insn 924
changing reg in insn 941
changing reg in insn 942
changing reg in insn 951
changing reg in insn 952
changing reg in insn 959
changing reg in insn 960
changing reg in insn 964
changing reg in insn 965
changing reg in insn 967
changing reg in insn 968
changing reg in insn 971
changing reg in insn 973
changing reg in insn 972
changing reg in insn 973
changing reg in insn 974
changing reg in insn 976
changing reg in insn 980
changing reg in insn 981
changing reg in insn 984
changing reg in insn 985
changing reg in insn 988
changing reg in insn 990
changing reg in insn 989
changing reg in insn 990
changing reg in insn 991
changing reg in insn 992
changing reg in insn 994
changing reg in insn 995
changing reg in insn 998
changing reg in insn 999
changing reg in insn 1000
changing reg in insn 1001
changing reg in insn 1005
changing reg in insn 1006
changing reg in insn 1009
changing reg in insn 1010
changing reg in insn 1013
changing reg in insn 1015
changing reg in insn 1014
changing reg in insn 1015
changing reg in insn 1015
changing reg in insn 1016
changing reg in insn 1020
changing reg in insn 1021
changing reg in insn 1024
changing reg in insn 1025
changing reg in insn 1028
changing reg in insn 1030
changing reg in insn 1029
changing reg in insn 1030
changing reg in insn 1030
changing reg in insn 1031
changing reg in insn 1035
changing reg in insn 1036
changing reg in insn 1039
changing reg in insn 1040
changing reg in insn 1043
changing reg in insn 1044
changing reg in insn 1044
changing reg in insn 1045
changing reg in insn 1046
changing reg in insn 1048
changing reg in insn 1047
changing reg in insn 1048
changing reg in insn 1051
changing reg in insn 1052
changing reg in insn 1050
changing reg in insn 1051
changing reg in insn 1055
changing reg in insn 1056
changing reg in insn 1058
changing reg in insn 1059
changing reg in insn 1067
changing reg in insn 1068
changing reg in insn 1069
changing reg in insn 1070
changing reg in insn 1072
changing reg in insn 1073
changing reg in insn 1076
changing reg in insn 1078
changing reg in insn 1077
changing reg in insn 1078
changing reg in insn 1082
changing reg in insn 1084
changing reg in insn 1083
changing reg in insn 1084
changing reg in insn 1086
changing reg in insn 1087
changing reg in insn 1088
changing reg in insn 1089
changing reg in insn 1090
changing reg in insn 1091
changing reg in insn 1094
changing reg in insn 1096
changing reg in insn 1095
changing reg in insn 1096
changing reg in insn 1097
changing reg in insn 1099
changing reg in insn 1098
changing reg in insn 1099
changing reg in insn 1102
changing reg in insn 1104
changing reg in insn 1103
changing reg in insn 1104
changing reg in insn 1110
changing reg in insn 1111
changing reg in insn 1115
changing reg in insn 1116
changing reg in insn 1113
changing reg in insn 1114
changing reg in insn 1118
changing reg in insn 1119
changing reg in insn 1127
changing reg in insn 1129
changing reg in insn 1132
changing reg in insn 1133
changing reg in insn 1135
changing reg in insn 1136
changing reg in insn 1140
changing reg in insn 1141
changing reg in insn 1142
changing reg in insn 1143
changing reg in insn 1145
changing reg in insn 1146
changing reg in insn 1149
changing reg in insn 1151
changing reg in insn 1150
changing reg in insn 1151
changing reg in insn 1153
changing reg in insn 1157
changing reg in insn 1159
changing reg in insn 1158
changing reg in insn 1159
changing reg in insn 1160
changing reg in insn 1161
changing reg in insn 1163
changing reg in insn 1164
changing reg in insn 1167
changing reg in insn 1169
changing reg in insn 1168
changing reg in insn 1169
changing reg in insn 1170
changing reg in insn 1171
changing reg in insn 1175
changing reg in insn 1176
changing reg in insn 1177
changing reg in insn 1178
changing reg in insn 1184
changing reg in insn 1185
changing reg in insn 1187
changing reg in insn 1188
changing reg in insn 1191
changing reg in insn 1192
changing reg in insn 1195
changing reg in insn 1196
changing reg in insn 1194
changing reg in insn 1195
changing reg in insn 1197
changing reg in insn 1199
changing reg in insn 1198
changing reg in insn 1199
changing reg in insn 1202
changing reg in insn 1203
changing reg in insn 1213
changing reg in insn 1214
changing reg in insn 1217
changing reg in insn 1218
changing reg in insn 1221
changing reg in insn 1223
changing reg in insn 1222
changing reg in insn 1223
changing reg in insn 1231
changing reg in insn 1232
changing reg in insn 1235
changing reg in insn 1236
changing reg in insn 1239
changing reg in insn 1241
changing reg in insn 1240
changing reg in insn 1241
changing reg in insn 1246
changing reg in insn 1248
changing reg in insn 1247
changing reg in insn 1248
changing reg in insn 1257
changing reg in insn 1258
changing reg in insn 1261
changing reg in insn 1262
changing reg in insn 1265
changing reg in insn 1267
changing reg in insn 1266
changing reg in insn 1267
changing reg in insn 1270
changing reg in insn 1271
changing reg in insn 1277
changing reg in insn 1278
changing reg in insn 1287
changing reg in insn 1288
changing reg in insn 1291
changing reg in insn 1292
changing reg in insn 1295
changing reg in insn 1297
changing reg in insn 1296
changing reg in insn 1297
changing reg in insn 1302
changing reg in insn 1303
changing reg in insn 1306
changing reg in insn 1307
changing reg in insn 1310
changing reg in insn 1311
changing reg in insn 1312
changing reg in insn 1313
changing reg in insn 1315
changing reg in insn 1316
changing reg in insn 1322
changing reg in insn 1323
changing reg in insn 1332
changing reg in insn 1333
changing reg in insn 1336
changing reg in insn 1337
changing reg in insn 1340
changing reg in insn 1342
changing reg in insn 1341
changing reg in insn 1342
changing reg in insn 1369
changing reg in insn 1370
changing reg in insn 1385
changing reg in insn 1383
changing reg in insn 1382
changing reg in insn 1380
changing reg in insn 1386
changing reg in insn 1384
changing reg in insn 1383
changing reg in insn 1381
changing reg in insn 1381
changing reg in insn 1382
changing reg in insn 1384
changing reg in insn 1385
changing reg in insn 1391
changing reg in insn 1392
changing reg in insn 1403
changing reg in insn 1401
changing reg in insn 1400
changing reg in insn 1398
changing reg in insn 1404
changing reg in insn 1402
changing reg in insn 1401
changing reg in insn 1399
changing reg in insn 1399
changing reg in insn 1400
changing reg in insn 1402
changing reg in insn 1403
changing reg in insn 1409
changing reg in insn 1410
changing reg in insn 1412
changing reg in insn 1416
changing reg in insn 1413
changing reg in insn 1417
changing reg in insn 1421
changing reg in insn 1425
changing reg in insn 1422
changing reg in insn 1426
changing reg in insn 1439
changing reg in insn 1434
changing reg in insn 1439
changing reg in insn 1438
changing reg in insn 1435
changing reg in insn 1437
changing reg in insn 1437
changing reg in insn 1436
changing reg in insn 1437
changing reg in insn 1437
changing reg in insn 1453
changing reg in insn 1454
changing reg in insn 1456
changing reg in insn 1459
changing reg in insn 1461
changing reg in insn 1462
changing reg in insn 1464
changing reg in insn 1468
changing reg in insn 1465
changing reg in insn 1469
changing reg in insn 1466
changing reg in insn 1470
changing reg in insn 1467
changing reg in insn 1471
changing reg in insn 1489
changing reg in insn 1487
changing reg in insn 1486
changing reg in insn 1484
changing reg in insn 1490
changing reg in insn 1488
changing reg in insn 1487
changing reg in insn 1485
changing reg in insn 1485
changing reg in insn 1486
changing reg in insn 1488
changing reg in insn 1489
changing reg in insn 1495
changing reg in insn 1496
changing reg in insn 1507
changing reg in insn 1505
changing reg in insn 1504
changing reg in insn 1502
changing reg in insn 1508
changing reg in insn 1506
changing reg in insn 1505
changing reg in insn 1503
changing reg in insn 1503
changing reg in insn 1504
changing reg in insn 1506
changing reg in insn 1507
changing reg in insn 1513
changing reg in insn 1514
changing reg in insn 1516
changing reg in insn 1520
changing reg in insn 1517
changing reg in insn 1521
changing reg in insn 1525
changing reg in insn 1529
changing reg in insn 1526
changing reg in insn 1530
changing reg in insn 1543
changing reg in insn 1538
changing reg in insn 1543
changing reg in insn 1542
changing reg in insn 1539
changing reg in insn 1541
changing reg in insn 1541
changing reg in insn 1540
changing reg in insn 1541
changing reg in insn 1541
changing reg in insn 1557
changing reg in insn 1558
changing reg in insn 1560
changing reg in insn 1563
changing reg in insn 1565
changing reg in insn 1566
changing reg in insn 1568
changing reg in insn 1572
changing reg in insn 1569
changing reg in insn 1573
changing reg in insn 1570
changing reg in insn 1574
changing reg in insn 1571
changing reg in insn 1575
changing reg in insn 1593
changing reg in insn 1591
changing reg in insn 1590
changing reg in insn 1588
changing reg in insn 1594
changing reg in insn 1592
changing reg in insn 1591
changing reg in insn 1589
changing reg in insn 1589
changing reg in insn 1590
changing reg in insn 1592
changing reg in insn 1593
changing reg in insn 1599
changing reg in insn 1600
changing reg in insn 1611
changing reg in insn 1609
changing reg in insn 1608
changing reg in insn 1606
changing reg in insn 1612
changing reg in insn 1610
changing reg in insn 1609
changing reg in insn 1607
changing reg in insn 1607
changing reg in insn 1608
changing reg in insn 1610
changing reg in insn 1611
changing reg in insn 1617
changing reg in insn 1618
changing reg in insn 1620
changing reg in insn 1624
changing reg in insn 1621
changing reg in insn 1625
changing reg in insn 1629
changing reg in insn 1633
changing reg in insn 1630
changing reg in insn 1634
changing reg in insn 1647
changing reg in insn 1642
changing reg in insn 1647
changing reg in insn 1646
changing reg in insn 1643
changing reg in insn 1645
changing reg in insn 1645
changing reg in insn 1644
changing reg in insn 1645
changing reg in insn 1645
changing reg in insn 1657
changing reg in insn 1661
changing reg in insn 1658
changing reg in insn 1662
changing reg in insn 1659
changing reg in insn 1663
changing reg in insn 1660
changing reg in insn 1664
changing reg in insn 1682
changing reg in insn 1680
changing reg in insn 1679
changing reg in insn 1677
changing reg in insn 1683
changing reg in insn 1681
changing reg in insn 1680
changing reg in insn 1678
changing reg in insn 1678
changing reg in insn 1679
changing reg in insn 1681
changing reg in insn 1682
changing reg in insn 1688
changing reg in insn 1689
changing reg in insn 1700
changing reg in insn 1698
changing reg in insn 1697
changing reg in insn 1695
changing reg in insn 1701
changing reg in insn 1699
changing reg in insn 1698
changing reg in insn 1696
changing reg in insn 1696
changing reg in insn 1697
changing reg in insn 1699
changing reg in insn 1700
changing reg in insn 1706
changing reg in insn 1707
changing reg in insn 1709
changing reg in insn 1713
changing reg in insn 1710
changing reg in insn 1714
changing reg in insn 1718
changing reg in insn 1722
changing reg in insn 1719
changing reg in insn 1723
changing reg in insn 1734
changing reg in insn 1738
changing reg in insn 1735
changing reg in insn 1739
changing reg in insn 1752
changing reg in insn 1747
changing reg in insn 1752
changing reg in insn 1751
changing reg in insn 1748
changing reg in insn 1750
changing reg in insn 1750
changing reg in insn 1749
changing reg in insn 1750
changing reg in insn 1750
changing reg in insn 1762
changing reg in insn 1766
changing reg in insn 1763
changing reg in insn 1767
changing reg in insn 1764
changing reg in insn 1768
changing reg in insn 1765
changing reg in insn 1769
changing reg in insn 1787
changing reg in insn 1785
changing reg in insn 1784
changing reg in insn 1782
changing reg in insn 1788
changing reg in insn 1786
changing reg in insn 1785
changing reg in insn 1783
changing reg in insn 1783
changing reg in insn 1784
changing reg in insn 1786
changing reg in insn 1787
changing reg in insn 1793
changing reg in insn 1794
changing reg in insn 1805
changing reg in insn 1803
changing reg in insn 1802
changing reg in insn 1800
changing reg in insn 1806
changing reg in insn 1804
changing reg in insn 1803
changing reg in insn 1801
changing reg in insn 1801
changing reg in insn 1802
changing reg in insn 1804
changing reg in insn 1805
changing reg in insn 1811
changing reg in insn 1812
changing reg in insn 1814
changing reg in insn 1818
changing reg in insn 1815
changing reg in insn 1819
changing reg in insn 1823
changing reg in insn 1827
changing reg in insn 1824
changing reg in insn 1828
changing reg in insn 1832
changing reg in insn 1836
changing reg in insn 1833
changing reg in insn 1837
changing reg in insn 1841
changing reg in insn 1845
changing reg in insn 1842
changing reg in insn 1846
changing reg in insn 1861
changing reg in insn 1865
changing reg in insn 1862
changing reg in insn 1866
changing reg in insn 1874
changing reg in insn 1877
changing reg in insn 1875
changing reg in insn 1878
changing reg in insn 1876
changing reg in insn 1880
changing reg in insn 1883
changing reg in insn 1886
changing reg in insn 1884
changing reg in insn 1887
changing reg in insn 1885
changing reg in insn 1890
changing reg in insn 1898
changing reg in insn 1893
changing reg in insn 1898
changing reg in insn 1897
changing reg in insn 1894
changing reg in insn 1896
changing reg in insn 1896
changing reg in insn 1895
changing reg in insn 1896
changing reg in insn 1896
changing reg in insn 1908
changing reg in insn 1912
changing reg in insn 1909
changing reg in insn 1913
changing reg in insn 1910
changing reg in insn 1914
changing reg in insn 1911
changing reg in insn 1915
changing reg in insn 1933
changing reg in insn 1931
changing reg in insn 1930
changing reg in insn 1928
changing reg in insn 1934
changing reg in insn 1932
changing reg in insn 1931
changing reg in insn 1929
changing reg in insn 1929
changing reg in insn 1930
changing reg in insn 1932
changing reg in insn 1933
changing reg in insn 1939
changing reg in insn 1940
changing reg in insn 1951
changing reg in insn 1949
changing reg in insn 1948
changing reg in insn 1946
changing reg in insn 1952
changing reg in insn 1950
changing reg in insn 1949
changing reg in insn 1947
changing reg in insn 1947
changing reg in insn 1948
changing reg in insn 1950
changing reg in insn 1951
changing reg in insn 1957
changing reg in insn 1958
changing reg in insn 1960
changing reg in insn 1964
changing reg in insn 1961
changing reg in insn 1965
changing reg in insn 1969
changing reg in insn 1973
changing reg in insn 1970
changing reg in insn 1974
changing reg in insn 1978
changing reg in insn 1982
changing reg in insn 1979
changing reg in insn 1983
changing reg in insn 1993
changing reg in insn 1997
changing reg in insn 1994
changing reg in insn 1998
changing reg in insn 2011
changing reg in insn 2006
changing reg in insn 2011
changing reg in insn 2010
changing reg in insn 2007
changing reg in insn 2009
changing reg in insn 2009
changing reg in insn 2008
changing reg in insn 2009
changing reg in insn 2009
changing reg in insn 2021
changing reg in insn 2025
changing reg in insn 2022
changing reg in insn 2026
changing reg in insn 2023
changing reg in insn 2027
changing reg in insn 2024
changing reg in insn 2028
changing reg in insn 2046
changing reg in insn 2044
changing reg in insn 2043
changing reg in insn 2041
changing reg in insn 2047
changing reg in insn 2045
changing reg in insn 2044
changing reg in insn 2042
changing reg in insn 2042
changing reg in insn 2043
changing reg in insn 2045
changing reg in insn 2046
changing reg in insn 2052
changing reg in insn 2053
changing reg in insn 2064
changing reg in insn 2062
changing reg in insn 2061
changing reg in insn 2059
changing reg in insn 2065
changing reg in insn 2063
changing reg in insn 2062
changing reg in insn 2060
changing reg in insn 2060
changing reg in insn 2061
changing reg in insn 2063
changing reg in insn 2064
changing reg in insn 2070
changing reg in insn 2071
changing reg in insn 2073
changing reg in insn 2077
changing reg in insn 2074
changing reg in insn 2078
changing reg in insn 2082
changing reg in insn 2086
changing reg in insn 2083
changing reg in insn 2087
changing reg in insn 2095
changing reg in insn 2098
changing reg in insn 2096
changing reg in insn 2099
changing reg in insn 2097
changing reg in insn 2102
changing reg in insn 2110
changing reg in insn 2105
changing reg in insn 2110
changing reg in insn 2109
changing reg in insn 2106
changing reg in insn 2108
changing reg in insn 2108
changing reg in insn 2107
changing reg in insn 2108
changing reg in insn 2108
changing reg in insn 2120
changing reg in insn 2124
changing reg in insn 2121
changing reg in insn 2125
changing reg in insn 2122
changing reg in insn 2126
changing reg in insn 2123
changing reg in insn 2127
changing reg in insn 2145
changing reg in insn 2143
changing reg in insn 2142
changing reg in insn 2140
changing reg in insn 2146
changing reg in insn 2144
changing reg in insn 2143
changing reg in insn 2141
changing reg in insn 2141
changing reg in insn 2142
changing reg in insn 2144
changing reg in insn 2145
changing reg in insn 2151
changing reg in insn 2152
changing reg in insn 2163
changing reg in insn 2161
changing reg in insn 2160
changing reg in insn 2158
changing reg in insn 2164
changing reg in insn 2162
changing reg in insn 2161
changing reg in insn 2159
changing reg in insn 2159
changing reg in insn 2160
changing reg in insn 2162
changing reg in insn 2163
changing reg in insn 2169
changing reg in insn 2170
changing reg in insn 2172
changing reg in insn 2176
changing reg in insn 2173
changing reg in insn 2177
changing reg in insn 2181
changing reg in insn 2185
changing reg in insn 2182
changing reg in insn 2186
changing reg in insn 2190
changing reg in insn 2194
changing reg in insn 2191
changing reg in insn 2195
changing reg in insn 2206
changing reg in insn 2210
changing reg in insn 2207
changing reg in insn 2211
changing reg in insn 2224
changing reg in insn 2219
changing reg in insn 2224
changing reg in insn 2223
changing reg in insn 2220
changing reg in insn 2222
changing reg in insn 2222
changing reg in insn 2221
changing reg in insn 2222
changing reg in insn 2222
changing reg in insn 2234
changing reg in insn 2238
changing reg in insn 2235
changing reg in insn 2239
changing reg in insn 2236
changing reg in insn 2240
changing reg in insn 2237
changing reg in insn 2241
changing reg in insn 2264
changing reg in insn 2262
changing reg in insn 2261
changing reg in insn 2259
changing reg in insn 2265
changing reg in insn 2263
changing reg in insn 2262
changing reg in insn 2260
changing reg in insn 2260
changing reg in insn 2261
changing reg in insn 2263
changing reg in insn 2264
changing reg in insn 2270
changing reg in insn 2271
changing reg in insn 2282
changing reg in insn 2280
changing reg in insn 2279
changing reg in insn 2277
changing reg in insn 2283
changing reg in insn 2281
changing reg in insn 2280
changing reg in insn 2278
changing reg in insn 2278
changing reg in insn 2279
changing reg in insn 2281
changing reg in insn 2282
changing reg in insn 2288
changing reg in insn 2289
changing reg in insn 2301
changing reg in insn 2299
changing reg in insn 2298
changing reg in insn 2296
changing reg in insn 2302
changing reg in insn 2300
changing reg in insn 2299
changing reg in insn 2297
changing reg in insn 2297
changing reg in insn 2298
changing reg in insn 2300
changing reg in insn 2301
changing reg in insn 2307
changing reg in insn 2308
changing reg in insn 2310
changing reg in insn 2314
changing reg in insn 2311
changing reg in insn 2315
changing reg in insn 2326
changing reg in insn 2324
changing reg in insn 2323
changing reg in insn 2321
changing reg in insn 2327
changing reg in insn 2325
changing reg in insn 2324
changing reg in insn 2322
changing reg in insn 2322
changing reg in insn 2323
changing reg in insn 2325
changing reg in insn 2326
changing reg in insn 2332
changing reg in insn 2333
changing reg in insn 2335
changing reg in insn 2339
changing reg in insn 2336
changing reg in insn 2340
changing reg in insn 2344
changing reg in insn 2348
changing reg in insn 2345
changing reg in insn 2349
changing reg in insn 2362
changing reg in insn 2357
changing reg in insn 2362
changing reg in insn 2361
changing reg in insn 2358
changing reg in insn 2360
changing reg in insn 2360
changing reg in insn 2359
changing reg in insn 2360
changing reg in insn 2360
changing reg in insn 2376
changing reg in insn 2380
changing reg in insn 2377
changing reg in insn 2381
changing reg in insn 2378
changing reg in insn 2382
changing reg in insn 2379
changing reg in insn 2383
changing reg in insn 2395
changing reg in insn 2390
changing reg in insn 2395
changing reg in insn 2394
changing reg in insn 2391
changing reg in insn 2393
changing reg in insn 2393
changing reg in insn 2392
changing reg in insn 2393
changing reg in insn 2393
changing reg in insn 2409
changing reg in insn 2413
changing reg in insn 2410
changing reg in insn 2414
changing reg in insn 2411
changing reg in insn 2415
changing reg in insn 2412
changing reg in insn 2416
changing reg in insn 2434
changing reg in insn 2432
changing reg in insn 2431
changing reg in insn 2429
changing reg in insn 2435
changing reg in insn 2433
changing reg in insn 2432
changing reg in insn 2430
changing reg in insn 2430
changing reg in insn 2431
changing reg in insn 2433
changing reg in insn 2434
changing reg in insn 2440
changing reg in insn 2441
changing reg in insn 2452
changing reg in insn 2450
changing reg in insn 2449
changing reg in insn 2447
changing reg in insn 2453
changing reg in insn 2451
changing reg in insn 2450
changing reg in insn 2448
changing reg in insn 2448
changing reg in insn 2449
changing reg in insn 2451
changing reg in insn 2452
changing reg in insn 2458
changing reg in insn 2459
changing reg in insn 2461
changing reg in insn 2465
changing reg in insn 2462
changing reg in insn 2466
changing reg in insn 2470
changing reg in insn 2474
changing reg in insn 2471
changing reg in insn 2475
changing reg in insn 2488
changing reg in insn 2483
changing reg in insn 2488
changing reg in insn 2487
changing reg in insn 2484
changing reg in insn 2486
changing reg in insn 2486
changing reg in insn 2485
changing reg in insn 2486
changing reg in insn 2486
changing reg in insn 2498
changing reg in insn 2502
changing reg in insn 2499
changing reg in insn 2503
changing reg in insn 2500
changing reg in insn 2504
changing reg in insn 2501
changing reg in insn 2505
changing reg in insn 2523
changing reg in insn 2521
changing reg in insn 2520
changing reg in insn 2518
changing reg in insn 2524
changing reg in insn 2522
changing reg in insn 2521
changing reg in insn 2519
changing reg in insn 2519
changing reg in insn 2520
changing reg in insn 2522
changing reg in insn 2523
changing reg in insn 2529
changing reg in insn 2530
changing reg in insn 2541
changing reg in insn 2539
changing reg in insn 2538
changing reg in insn 2536
changing reg in insn 2542
changing reg in insn 2540
changing reg in insn 2539
changing reg in insn 2537
changing reg in insn 2537
changing reg in insn 2538
changing reg in insn 2540
changing reg in insn 2541
changing reg in insn 2547
changing reg in insn 2548
changing reg in insn 2550
changing reg in insn 2554
changing reg in insn 2551
changing reg in insn 2555
changing reg in insn 2559
changing reg in insn 2563
changing reg in insn 2560
changing reg in insn 2564
changing reg in insn 2573
changing reg in insn 2577
changing reg in insn 2574
changing reg in insn 2578
changing reg in insn 2591
changing reg in insn 2586
changing reg in insn 2591
changing reg in insn 2590
changing reg in insn 2587
changing reg in insn 2589
changing reg in insn 2589
changing reg in insn 2588
changing reg in insn 2589
changing reg in insn 2589
changing reg in insn 2601
changing reg in insn 2605
changing reg in insn 2602
changing reg in insn 2606
changing reg in insn 2603
changing reg in insn 2607
changing reg in insn 2604
changing reg in insn 2608
changing reg in insn 2626
changing reg in insn 2624
changing reg in insn 2623
changing reg in insn 2621
changing reg in insn 2627
changing reg in insn 2625
changing reg in insn 2624
changing reg in insn 2622
changing reg in insn 2622
changing reg in insn 2623
changing reg in insn 2625
changing reg in insn 2626
changing reg in insn 2632
changing reg in insn 2633
changing reg in insn 2644
changing reg in insn 2642
changing reg in insn 2641
changing reg in insn 2639
changing reg in insn 2645
changing reg in insn 2643
changing reg in insn 2642
changing reg in insn 2640
changing reg in insn 2640
changing reg in insn 2641
changing reg in insn 2643
changing reg in insn 2644
changing reg in insn 2650
changing reg in insn 2651
changing reg in insn 2653
changing reg in insn 2657
changing reg in insn 2654
changing reg in insn 2658
changing reg in insn 2666
changing reg in insn 2670
changing reg in insn 2667
changing reg in insn 2671
changing reg in insn 2684
changing reg in insn 2679
changing reg in insn 2684
changing reg in insn 2683
changing reg in insn 2680
changing reg in insn 2682
changing reg in insn 2682
changing reg in insn 2681
changing reg in insn 2682
changing reg in insn 2682
changing reg in insn 2694
changing reg in insn 2698
changing reg in insn 2695
changing reg in insn 2699
changing reg in insn 2696
changing reg in insn 2700
changing reg in insn 2697
changing reg in insn 2701
changing reg in insn 2719
changing reg in insn 2717
changing reg in insn 2716
changing reg in insn 2714
changing reg in insn 2720
changing reg in insn 2718
changing reg in insn 2717
changing reg in insn 2715
changing reg in insn 2715
changing reg in insn 2716
changing reg in insn 2718
changing reg in insn 2719
changing reg in insn 2725
changing reg in insn 2726
changing reg in insn 2737
changing reg in insn 2735
changing reg in insn 2734
changing reg in insn 2732
changing reg in insn 2738
changing reg in insn 2736
changing reg in insn 2735
changing reg in insn 2733
changing reg in insn 2733
changing reg in insn 2734
changing reg in insn 2736
changing reg in insn 2737
changing reg in insn 2743
changing reg in insn 2744
changing reg in insn 2746
changing reg in insn 2750
changing reg in insn 2747
changing reg in insn 2751
changing reg in insn 2755
changing reg in insn 2759
changing reg in insn 2756
changing reg in insn 2760
changing reg in insn 2773
changing reg in insn 2768
changing reg in insn 2773
changing reg in insn 2772
changing reg in insn 2769
changing reg in insn 2771
changing reg in insn 2771
changing reg in insn 2770
changing reg in insn 2771
changing reg in insn 2771
changing reg in insn 2783
changing reg in insn 2787
changing reg in insn 2784
changing reg in insn 2788
changing reg in insn 2785
changing reg in insn 2789
changing reg in insn 2786
changing reg in insn 2790
changing reg in insn 2808
changing reg in insn 2806
changing reg in insn 2805
changing reg in insn 2803
changing reg in insn 2809
changing reg in insn 2807
changing reg in insn 2806
changing reg in insn 2804
changing reg in insn 2804
changing reg in insn 2805
changing reg in insn 2807
changing reg in insn 2808
changing reg in insn 2814
changing reg in insn 2815
changing reg in insn 2824
changing reg in insn 2825
changing reg in insn 2832
changing reg in insn 2833
changing reg in insn 2840
changing reg in insn 2841
changing reg in insn 2844
changing reg in insn 2845
changing reg in insn 2848
changing reg in insn 2849
changing reg in insn 2850
changing reg in insn 2851
changing reg in insn 2860
changing reg in insn 2861
changing reg in insn 2864
changing reg in insn 2865
changing reg in insn 2868
changing reg in insn 2869
changing reg in insn 2879
changing reg in insn 2880
changing reg in insn 2883
changing reg in insn 2884
changing reg in insn 2887
changing reg in insn 2889
changing reg in insn 2888
changing reg in insn 2889
changing reg in insn 2911
changing reg in insn 2909
changing reg in insn 2908
changing reg in insn 2906
changing reg in insn 2912
changing reg in insn 2910
changing reg in insn 2909
changing reg in insn 2907
changing reg in insn 2907
changing reg in insn 2908
changing reg in insn 2910
changing reg in insn 2911
changing reg in insn 2917
changing reg in insn 2918
changing reg in insn 2920
changing reg in insn 2924
changing reg in insn 2921
changing reg in insn 2925
changing reg in insn 2929
changing reg in insn 2933
changing reg in insn 2930
changing reg in insn 2934
changing reg in insn 2943
changing reg in insn 2944
changing reg in insn 2951
changing reg in insn 2952
changing reg in insn 2956
changing reg in insn 2957
changing reg in insn 2959
changing reg in insn 2960
changing reg in insn 2963
changing reg in insn 2964
changing reg in insn 2965
changing reg in insn 2966
changing reg in insn 2968
changing reg in insn 2969
changing reg in insn 2972
changing reg in insn 2973
changing reg in insn 2974
changing reg in insn 2975
changing reg in insn 2977
changing reg in insn 2978
changing reg in insn 2980
changing reg in insn 2981
changing reg in insn 2985
changing reg in insn 2986
changing reg in insn 2999
changing reg in insn 3003
changing reg in insn 3000
changing reg in insn 3004
changing reg in insn 3017
changing reg in insn 3012
changing reg in insn 3017
changing reg in insn 3016
changing reg in insn 3013
changing reg in insn 3015
changing reg in insn 3015
changing reg in insn 3014
changing reg in insn 3015
changing reg in insn 3015
changing reg in insn 3027
changing reg in insn 3031
changing reg in insn 3028
changing reg in insn 3032
changing reg in insn 3029
changing reg in insn 3033
changing reg in insn 3030
changing reg in insn 3034
changing reg in insn 3052
changing reg in insn 3050
changing reg in insn 3049
changing reg in insn 3047
changing reg in insn 3053
changing reg in insn 3051
changing reg in insn 3050
changing reg in insn 3048
changing reg in insn 3048
changing reg in insn 3049
changing reg in insn 3051
changing reg in insn 3052
changing reg in insn 3058
changing reg in insn 3059
changing reg in insn 3070
changing reg in insn 3068
changing reg in insn 3067
changing reg in insn 3065
changing reg in insn 3071
changing reg in insn 3069
changing reg in insn 3068
changing reg in insn 3066
changing reg in insn 3066
changing reg in insn 3067
changing reg in insn 3069
changing reg in insn 3070
changing reg in insn 3076
changing reg in insn 3077
changing reg in insn 3079
changing reg in insn 3083
changing reg in insn 3080
changing reg in insn 3084
changing reg in insn 3088
changing reg in insn 3092
changing reg in insn 3089
changing reg in insn 3093
changing reg in insn 3102
changing reg in insn 3103
changing reg in insn 3110
changing reg in insn 3111
changing reg in insn 3115
changing reg in insn 3116
changing reg in insn 3118
changing reg in insn 3119
changing reg in insn 3122
changing reg in insn 3123
changing reg in insn 3124
changing reg in insn 3125
changing reg in insn 3127
changing reg in insn 3128
changing reg in insn 3131
changing reg in insn 3132
changing reg in insn 3133
changing reg in insn 3134
changing reg in insn 3136
changing reg in insn 3137
changing reg in insn 3141
changing reg in insn 3142
changing reg in insn 3155
changing reg in insn 3159
changing reg in insn 3156
changing reg in insn 3160
changing reg in insn 3173
changing reg in insn 3168
changing reg in insn 3173
changing reg in insn 3172
changing reg in insn 3169
changing reg in insn 3171
changing reg in insn 3171
changing reg in insn 3170
changing reg in insn 3171
changing reg in insn 3171
changing reg in insn 3183
changing reg in insn 3187
changing reg in insn 3184
changing reg in insn 3188
changing reg in insn 3185
changing reg in insn 3189
changing reg in insn 3186
changing reg in insn 3190
changing reg in insn 3208
changing reg in insn 3206
changing reg in insn 3205
changing reg in insn 3203
changing reg in insn 3209
changing reg in insn 3207
changing reg in insn 3206
changing reg in insn 3204
changing reg in insn 3204
changing reg in insn 3205
changing reg in insn 3207
changing reg in insn 3208
changing reg in insn 3214
changing reg in insn 3215
changing reg in insn 3226
changing reg in insn 3224
changing reg in insn 3223
changing reg in insn 3221
changing reg in insn 3227
changing reg in insn 3225
changing reg in insn 3224
changing reg in insn 3222
changing reg in insn 3222
changing reg in insn 3223
changing reg in insn 3225
changing reg in insn 3226
changing reg in insn 3232
changing reg in insn 3233
changing reg in insn 3235
changing reg in insn 3236
changing reg in insn 3237
changing reg in insn 3238
changing reg in insn 3239
changing reg in insn 3240
changing reg in insn 3250
changing reg in insn 3251
changing reg in insn 3258
changing reg in insn 3259
changing reg in insn 3263
changing reg in insn 3264
changing reg in insn 3266
changing reg in insn 3267
changing reg in insn 3270
changing reg in insn 3272
changing reg in insn 3271
changing reg in insn 3272
changing reg in insn 3294
changing reg in insn 3295
changing reg in insn 3302
changing reg in insn 3303
changing reg in insn 3307
changing reg in insn 3308
changing reg in insn 3310
changing reg in insn 3311
changing reg in insn 3314
changing reg in insn 3316
changing reg in insn 3315
changing reg in insn 3316
changing reg in insn 3317
changing reg in insn 3319
changing reg in insn 3323
changing reg in insn 3324
changing reg in insn 3327
changing reg in insn 3328
changing reg in insn 3331
changing reg in insn 3333
changing reg in insn 3332
changing reg in insn 3333
changing reg in insn 3334
changing reg in insn 3335
changing reg in insn 3337
changing reg in insn 3338
changing reg in insn 3341
changing reg in insn 3342
changing reg in insn 3343
changing reg in insn 3344
changing reg in insn 3348
changing reg in insn 3349
changing reg in insn 3352
changing reg in insn 3353
changing reg in insn 3356
changing reg in insn 3358
changing reg in insn 3357
changing reg in insn 3358
changing reg in insn 3358
changing reg in insn 3359
changing reg in insn 3363
changing reg in insn 3364
changing reg in insn 3367
changing reg in insn 3368
changing reg in insn 3371
changing reg in insn 3373
changing reg in insn 3372
changing reg in insn 3373
changing reg in insn 3373
changing reg in insn 3374
changing reg in insn 3378
changing reg in insn 3379
changing reg in insn 3382
changing reg in insn 3383
changing reg in insn 3386
changing reg in insn 3387
changing reg in insn 3387
changing reg in insn 3388
changing reg in insn 3389
changing reg in insn 3391
changing reg in insn 3390
changing reg in insn 3391
changing reg in insn 3394
changing reg in insn 3395
changing reg in insn 3393
changing reg in insn 3394
changing reg in insn 3398
changing reg in insn 3399
changing reg in insn 3401
changing reg in insn 3402
changing reg in insn 3410
changing reg in insn 3411
changing reg in insn 3412
changing reg in insn 3413
changing reg in insn 3415
changing reg in insn 3416
changing reg in insn 3419
changing reg in insn 3421
changing reg in insn 3420
changing reg in insn 3421
changing reg in insn 3425
changing reg in insn 3427
changing reg in insn 3426
changing reg in insn 3427
changing reg in insn 3429
changing reg in insn 3430
changing reg in insn 3431
changing reg in insn 3432
changing reg in insn 3433
changing reg in insn 3434
changing reg in insn 3437
changing reg in insn 3439
changing reg in insn 3438
changing reg in insn 3439
changing reg in insn 3440
changing reg in insn 3442
changing reg in insn 3441
changing reg in insn 3442
changing reg in insn 3445
changing reg in insn 3447
changing reg in insn 3446
changing reg in insn 3447
changing reg in insn 3453
changing reg in insn 3454
changing reg in insn 3458
changing reg in insn 3459
changing reg in insn 3456
changing reg in insn 3457
changing reg in insn 3461
changing reg in insn 3462
changing reg in insn 3470
changing reg in insn 3472
changing reg in insn 3475
changing reg in insn 3476
changing reg in insn 3478
changing reg in insn 3479
changing reg in insn 3483
changing reg in insn 3484
changing reg in insn 3485
changing reg in insn 3486
changing reg in insn 3488
changing reg in insn 3489
changing reg in insn 3493
changing reg in insn 3494
changing reg in insn 3496
changing reg in insn 3497
changing reg in insn 3499
changing reg in insn 3500
changing reg in insn 3504
changing reg in insn 3505
changing reg in insn 3506
changing reg in insn 3507
changing reg in insn 3513
changing reg in insn 3514
changing reg in insn 3516
changing reg in insn 3517
changing reg in insn 3520
changing reg in insn 3521
changing reg in insn 3523
changing reg in insn 3524
changing reg in insn 3527
changing reg in insn 3528
changing reg in insn 3529
changing reg in insn 3530
changing reg in insn 3533
changing reg in insn 3534
changing reg in insn 3536
changing reg in insn 3537
changing reg in insn 3540
changing reg in insn 3542
changing reg in insn 3541
changing reg in insn 3542
changing reg in insn 3544
changing reg in insn 3548
changing reg in insn 3550
changing reg in insn 3549
changing reg in insn 3550
changing reg in insn 3551
changing reg in insn 3552
changing reg in insn 3554
changing reg in insn 3555
changing reg in insn 3558
changing reg in insn 3560
changing reg in insn 3559
changing reg in insn 3560
changing reg in insn 3561
changing reg in insn 3562
changing reg in insn 3566
changing reg in insn 3567
changing reg in insn 3571
changing reg in insn 3572
changing reg in insn 3575
changing reg in insn 3576
changing reg in insn 3579
changing reg in insn 3580
changing reg in insn 3580
changing reg in insn 3581
changing reg in insn 3582
changing reg in insn 3583
changing reg in insn 3585
changing reg in insn 3586
changing reg in insn 3588
changing reg in insn 3589
changing reg in insn 3592
changing reg in insn 3593
changing reg in insn 3595
changing reg in insn 3596
changing reg in insn 3598
changing reg in insn 3599
changing reg in insn 3602
changing reg in insn 3603
changing reg in insn 3605
changing reg in insn 3606
changing reg in insn 3607
changing reg in insn 3608
changing reg in insn 3614
changing reg in insn 3615
changing reg in insn 3621
changing reg in insn 3622
changing reg in insn 3620
changing reg in insn 3621
changing reg in insn 3625
changing reg in insn 3626
changing reg in insn 3634
changing reg in insn 3635
changing reg in insn 3637
changing reg in insn 3638
changing reg in insn 3646
changing reg in insn 3647
changing reg in insn 3649
changing reg in insn 3650
changing reg in insn 3653
changing reg in insn 3654
changing reg in insn 3659
changing reg in insn 3660
changing reg in insn 3662
changing reg in insn 3663
changing reg in insn 3667
changing reg in insn 3668
changing reg in insn 3666
changing reg in insn 3667
changing reg in insn 3672
changing reg in insn 3673
changing reg in insn 3670
changing reg in insn 3671
changing reg in insn 3675
changing reg in insn 3676
changing reg in insn 3685
changing reg in insn 3686
changing reg in insn 3689
changing reg in insn 3690
changing reg in insn 3692
changing reg in insn 3693
changing reg in insn 3695
changing reg in insn 3696
changing reg in insn 3700
changing reg in insn 3701
changing reg in insn 3716
changing reg in insn 3720
changing reg in insn 3717
changing reg in insn 3721
changing reg in insn 3734
changing reg in insn 3729
changing reg in insn 3734
changing reg in insn 3733
changing reg in insn 3730
changing reg in insn 3732
changing reg in insn 3732
changing reg in insn 3731
changing reg in insn 3732
changing reg in insn 3732
changing reg in insn 3744
changing reg in insn 3747
changing reg in insn 3745
changing reg in insn 3748
changing reg in insn 3746
changing reg in insn 3750
changing reg in insn 3753
changing reg in insn 3757
changing reg in insn 3754
changing reg in insn 3758
changing reg in insn 3755
changing reg in insn 3759
changing reg in insn 3756
changing reg in insn 3760
changing reg in insn 3778
changing reg in insn 3776
changing reg in insn 3775
changing reg in insn 3773
changing reg in insn 3779
changing reg in insn 3777
changing reg in insn 3776
changing reg in insn 3774
changing reg in insn 3774
changing reg in insn 3775
changing reg in insn 3777
changing reg in insn 3778
changing reg in insn 3784
changing reg in insn 3785
changing reg in insn 3792
changing reg in insn 3791
changing reg in insn 3793
changing reg in insn 3792
changing reg in insn 3796
changing reg in insn 3800
changing reg in insn 3797
changing reg in insn 3801
changing reg in insn 3819
changing reg in insn 3817
changing reg in insn 3816
changing reg in insn 3814
changing reg in insn 3820
changing reg in insn 3818
changing reg in insn 3817
changing reg in insn 3815
changing reg in insn 3815
changing reg in insn 3816
changing reg in insn 3818
changing reg in insn 3819
changing reg in insn 3825
changing reg in insn 3826
changing reg in insn 3828
changing reg in insn 3832
changing reg in insn 3829
changing reg in insn 3833
changing reg in insn 3846
changing reg in insn 3841
changing reg in insn 3846
changing reg in insn 3845
changing reg in insn 3842
changing reg in insn 3844
changing reg in insn 3844
changing reg in insn 3843
changing reg in insn 3844
changing reg in insn 3844
changing reg in insn 3856
changing reg in insn 3860
changing reg in insn 3857
changing reg in insn 3861
changing reg in insn 3858
changing reg in insn 3862
changing reg in insn 3859
changing reg in insn 3863
changing reg in insn 3881
changing reg in insn 3879
changing reg in insn 3878
changing reg in insn 3876
changing reg in insn 3882
changing reg in insn 3880
changing reg in insn 3879
changing reg in insn 3877
changing reg in insn 3877
changing reg in insn 3878
changing reg in insn 3880
changing reg in insn 3881
changing reg in insn 3887
changing reg in insn 3888
changing reg in insn 3899
changing reg in insn 3897
changing reg in insn 3896
changing reg in insn 3894
changing reg in insn 3900
changing reg in insn 3898
changing reg in insn 3897
changing reg in insn 3895
changing reg in insn 3895
changing reg in insn 3896
changing reg in insn 3898
changing reg in insn 3899
changing reg in insn 3905
changing reg in insn 3906
changing reg in insn 3913
changing reg in insn 3914
changing reg in insn 3921
changing reg in insn 3922
changing reg in insn 3926
changing reg in insn 3927
changing reg in insn 3929
changing reg in insn 3930
changing reg in insn 3933
changing reg in insn 3935
changing reg in insn 3934
changing reg in insn 3935
changing reg in insn 3948
changing reg in insn 3952
changing reg in insn 3949
changing reg in insn 3953
changing reg in insn 3966
changing reg in insn 3961
changing reg in insn 3966
changing reg in insn 3965
changing reg in insn 3962
changing reg in insn 3964
changing reg in insn 3964
changing reg in insn 3963
changing reg in insn 3964
changing reg in insn 3964
changing reg in insn 3976
changing reg in insn 3980
changing reg in insn 3977
changing reg in insn 3981
changing reg in insn 3978
changing reg in insn 3982
changing reg in insn 3979
changing reg in insn 3983
changing reg in insn 4001
changing reg in insn 3999
changing reg in insn 3998
changing reg in insn 3996
changing reg in insn 4002
changing reg in insn 4000
changing reg in insn 3999
changing reg in insn 3997
changing reg in insn 3997
changing reg in insn 3998
changing reg in insn 4000
changing reg in insn 4001
changing reg in insn 4007
changing reg in insn 4008
changing reg in insn 4019
changing reg in insn 4017
changing reg in insn 4016
changing reg in insn 4014
changing reg in insn 4020
changing reg in insn 4018
changing reg in insn 4017
changing reg in insn 4015
changing reg in insn 4015
changing reg in insn 4016
changing reg in insn 4018
changing reg in insn 4019
changing reg in insn 4025
changing reg in insn 4026
changing reg in insn 4033
changing reg in insn 4034
changing reg in insn 4041
changing reg in insn 4042
changing reg in insn 4046
changing reg in insn 4047
changing reg in insn 4049
changing reg in insn 4050
changing reg in insn 4053
changing reg in insn 4055
changing reg in insn 4054
changing reg in insn 4055
changing reg in insn 4068
changing reg in insn 4072
changing reg in insn 4069
changing reg in insn 4073
changing reg in insn 4086
changing reg in insn 4081
changing reg in insn 4086
changing reg in insn 4085
changing reg in insn 4082
changing reg in insn 4084
changing reg in insn 4084
changing reg in insn 4083
changing reg in insn 4084
changing reg in insn 4084
changing reg in insn 4096
changing reg in insn 4100
changing reg in insn 4097
changing reg in insn 4101
changing reg in insn 4098
changing reg in insn 4102
changing reg in insn 4099
changing reg in insn 4103
changing reg in insn 4121
changing reg in insn 4119
changing reg in insn 4118
changing reg in insn 4116
changing reg in insn 4122
changing reg in insn 4120
changing reg in insn 4119
changing reg in insn 4117
changing reg in insn 4117
changing reg in insn 4118
changing reg in insn 4120
changing reg in insn 4121
changing reg in insn 4127
changing reg in insn 4128
changing reg in insn 4135
changing reg in insn 4134
changing reg in insn 4136
changing reg in insn 4135
changing reg in insn 4139
changing reg in insn 4143
changing reg in insn 4140
changing reg in insn 4144
changing reg in insn 4162
changing reg in insn 4160
changing reg in insn 4159
changing reg in insn 4157
changing reg in insn 4163
changing reg in insn 4161
changing reg in insn 4160
changing reg in insn 4158
changing reg in insn 4158
changing reg in insn 4159
changing reg in insn 4161
changing reg in insn 4162
changing reg in insn 4168
changing reg in insn 4169
changing reg in insn 4172
changing reg in insn 4173
changing reg in insn 4181
changing reg in insn 4182
changing reg in insn 4180
changing reg in insn 4181
changing reg in insn 4187
changing reg in insn 4188
changing reg in insn 4196
changing reg in insn 4197
changing reg in insn 4204
changing reg in insn 4205
changing reg in insn 4209
changing reg in insn 4210
changing reg in insn 4212
changing reg in insn 4213
changing reg in insn 4216
changing reg in insn 4217
changing reg in insn 4218
changing reg in insn 4219
changing reg in insn 4221
changing reg in insn 4222
changing reg in insn 4226
changing reg in insn 4227
changing reg in insn 4240
changing reg in insn 4244
changing reg in insn 4241
changing reg in insn 4245
changing reg in insn 4258
changing reg in insn 4253
changing reg in insn 4258
changing reg in insn 4257
changing reg in insn 4254
changing reg in insn 4256
changing reg in insn 4256
changing reg in insn 4255
changing reg in insn 4256
changing reg in insn 4256
changing reg in insn 4259
changing reg in insn 4260
changing reg in insn 4262
changing reg in insn 4263
changing reg in insn 4264
changing reg in insn 4265
changing reg in insn 4265
changing reg in insn 4265
changing reg in insn 4266
changing reg in insn 4265
changing reg in insn 4267
changing reg in insn 4268
changing reg in insn 4273
changing reg in insn 4274
changing reg in insn 4280
changing reg in insn 4281
changing reg in insn 4301
changing reg in insn 4305
changing reg in insn 4302
changing reg in insn 4306
changing reg in insn 4303
changing reg in insn 4307
changing reg in insn 4304
changing reg in insn 4308
changing reg in insn 4326
changing reg in insn 4324
changing reg in insn 4323
changing reg in insn 4321
changing reg in insn 4327
changing reg in insn 4325
changing reg in insn 4324
changing reg in insn 4322
changing reg in insn 4322
changing reg in insn 4323
changing reg in insn 4325
changing reg in insn 4326
changing reg in insn 4332
changing reg in insn 4333
changing reg in insn 4340
changing reg in insn 4339
changing reg in insn 4341
changing reg in insn 4340
changing reg in insn 4344
changing reg in insn 4348
changing reg in insn 4345
changing reg in insn 4349
changing reg in insn 4367
changing reg in insn 4365
changing reg in insn 4364
changing reg in insn 4362
changing reg in insn 4368
changing reg in insn 4366
changing reg in insn 4365
changing reg in insn 4363
changing reg in insn 4363
changing reg in insn 4364
changing reg in insn 4366
changing reg in insn 4367
changing reg in insn 4373
changing reg in insn 4374
changing reg in insn 4377
changing reg in insn 4378
changing reg in insn 4386
changing reg in insn 4387
changing reg in insn 4385
changing reg in insn 4386
changing reg in insn 4392
changing reg in insn 4393
changing reg in insn 4401
changing reg in insn 4402
changing reg in insn 4409
changing reg in insn 4410
changing reg in insn 4414
changing reg in insn 4415
changing reg in insn 4417
changing reg in insn 4418
changing reg in insn 4421
changing reg in insn 4422
changing reg in insn 4423
changing reg in insn 4424
changing reg in insn 4426
changing reg in insn 4427
changing reg in insn 4431
changing reg in insn 4432
changing reg in insn 4445
changing reg in insn 4449
changing reg in insn 4446
changing reg in insn 4450
changing reg in insn 4463
changing reg in insn 4458
changing reg in insn 4463
changing reg in insn 4462
changing reg in insn 4459
changing reg in insn 4461
changing reg in insn 4461
changing reg in insn 4460
changing reg in insn 4461
changing reg in insn 4461
changing reg in insn 4464
changing reg in insn 4465
changing reg in insn 4467
changing reg in insn 4468
changing reg in insn 4469
changing reg in insn 4470
changing reg in insn 4470
changing reg in insn 4470
changing reg in insn 4471
changing reg in insn 4470
changing reg in insn 4472
changing reg in insn 4473
changing reg in insn 4478
changing reg in insn 4479
changing reg in insn 4485
changing reg in insn 4486
changing reg in insn 4506
changing reg in insn 4510
changing reg in insn 4507
changing reg in insn 4511
changing reg in insn 4508
changing reg in insn 4512
changing reg in insn 4509
changing reg in insn 4513
changing reg in insn 4538
changing reg in insn 4539
changing reg in insn 4537
changing reg in insn 4538
changing reg in insn 4545
changing reg in insn 4546
changing reg in insn 4553
changing reg in insn 4554
changing reg in insn 4558
changing reg in insn 4559
changing reg in insn 4561
changing reg in insn 4562
changing reg in insn 4565
changing reg in insn 4567
changing reg in insn 4566
changing reg in insn 4567
changing reg in insn 4568
changing reg in insn 4569
changing reg in insn 4571
changing reg in insn 4572
changing reg in insn 4578
changing reg in insn 4579
changing reg in insn 4581
changing reg in insn 4582
changing reg in insn 4585
changing reg in insn 4587
changing reg in insn 4586
changing reg in insn 4587
changing reg in insn 4588
changing reg in insn 4589
changing reg in insn 4591
changing reg in insn 4592
changing reg in insn 4595
changing reg in insn 4597
changing reg in insn 4596
changing reg in insn 4597
changing reg in insn 4602
changing reg in insn 4603
changing reg in insn 4605
changing reg in insn 4606
changing reg in insn 4609
changing reg in insn 4611
changing reg in insn 4610
changing reg in insn 4611
changing reg in insn 4611
changing reg in insn 4612
changing reg in insn 4613
changing reg in insn 4614
changing reg in insn 4616
changing reg in insn 4617
changing reg in insn 4620
changing reg in insn 4622
changing reg in insn 4621
changing reg in insn 4622
changing reg in insn 4623
changing reg in insn 4624
changing reg in insn 4626
changing reg in insn 4627
changing reg in insn 4630
changing reg in insn 4632
changing reg in insn 4631
changing reg in insn 4632
changing reg in insn 4635
changing reg in insn 4636
changing reg in insn 4634
changing reg in insn 4637
changing reg in insn 4638
changing reg in insn 4640
changing reg in insn 4641
changing reg in insn 4644
changing reg in insn 4646
changing reg in insn 4645
changing reg in insn 4646
changing reg in insn 4647
changing reg in insn 4648
changing reg in insn 4650
changing reg in insn 4651
changing reg in insn 4653
changing reg in insn 4654
changing reg in insn 4657
changing reg in insn 4659
changing reg in insn 4658
changing reg in insn 4659
changing reg in insn 4662
changing reg in insn 4663
changing reg in insn 4661
changing reg in insn 4664
changing reg in insn 4665
changing reg in insn 4667
changing reg in insn 4668
changing reg in insn 4671
changing reg in insn 4673
changing reg in insn 4672
changing reg in insn 4673
changing reg in insn 4674
changing reg in insn 4675
changing reg in insn 4677
changing reg in insn 4678
changing reg in insn 4681
changing reg in insn 4683
changing reg in insn 4682
changing reg in insn 4683
changing reg in insn 4689
changing reg in insn 4690
changing reg in insn 4691
changing reg in insn 4692
changing reg in insn 4694
changing reg in insn 4695
changing reg in insn 4698
changing reg in insn 4699
changing reg in insn 4702
changing reg in insn 4704
changing reg in insn 4703
changing reg in insn 4704
changing reg in insn 4705
changing reg in insn 4706
changing reg in insn 4708
changing reg in insn 4709
changing reg in insn 4712
changing reg in insn 4714
changing reg in insn 4713
changing reg in insn 4714
changing reg in insn 4715
changing reg in insn 4716
changing reg in insn 4718
changing reg in insn 4719
changing reg in insn 4722
changing reg in insn 4724
changing reg in insn 4723
changing reg in insn 4724
changing reg in insn 4727
changing reg in insn 4729
changing reg in insn 4728
changing reg in insn 4729
changing reg in insn 4731
changing reg in insn 4732
changing reg in insn 4740
changing reg in insn 4741
changing reg in insn 4746
changing reg in insn 4747
changing reg in insn 4748
changing reg in insn 4749
changing reg in insn 4752
changing reg in insn 4753
changing reg in insn 4755
changing reg in insn 4756
changing reg in insn 4760
changing reg in insn 4761
changing reg in insn 4762
changing reg in insn 4763
changing reg in insn 4765
changing reg in insn 4766
changing reg in insn 4769
changing reg in insn 4771
changing reg in insn 4770
changing reg in insn 4771
changing reg in insn 4772
changing reg in insn 4773
changing reg in insn 4775
changing reg in insn 4776
changing reg in insn 4779
changing reg in insn 4781
changing reg in insn 4780
changing reg in insn 4781
changing reg in insn 4787
changing reg in insn 4788
changing reg in insn 4789
changing reg in insn 4790
changing reg in insn 4792
changing reg in insn 4793
changing reg in insn 4796
changing reg in insn 4797
changing reg in insn 4800
changing reg in insn 4802
changing reg in insn 4801
changing reg in insn 4802
changing reg in insn 4803
changing reg in insn 4804
changing reg in insn 4806
changing reg in insn 4807
changing reg in insn 4810
changing reg in insn 4812
changing reg in insn 4811
changing reg in insn 4812
changing reg in insn 4813
changing reg in insn 4814
changing reg in insn 4816
changing reg in insn 4817
changing reg in insn 4820
changing reg in insn 4822
changing reg in insn 4821
changing reg in insn 4822
changing reg in insn 4825
changing reg in insn 4827
changing reg in insn 4826
changing reg in insn 4827
changing reg in insn 4829
changing reg in insn 4830
changing reg in insn 4838
changing reg in insn 4839
changing reg in insn 4844
changing reg in insn 4845
changing reg in insn 4846
changing reg in insn 4847
changing reg in insn 4850
changing reg in insn 4851
changing reg in insn 4853
changing reg in insn 4854
changing reg in insn 4858
changing reg in insn 4859
changing reg in insn 4862
changing reg in insn 4863
changing reg in insn 4865
changing reg in insn 4866
changing reg in insn 4869
changing reg in insn 4871
changing reg in insn 4870
changing reg in insn 4871
changing reg in insn 4871
changing reg in insn 4872
changing reg in insn 4873
changing reg in insn 4874
changing reg in insn 4876
changing reg in insn 4877
changing reg in insn 4880
changing reg in insn 4881
changing reg in insn 4884
changing reg in insn 4885
changing reg in insn 4887
changing reg in insn 4888
changing reg in insn 4891
changing reg in insn 4893
changing reg in insn 4892
changing reg in insn 4893
changing reg in insn 4894
changing reg in insn 4895
changing reg in insn 4896
changing reg in insn 4897
changing reg in insn 4899
changing reg in insn 4900
changing reg in insn 4903
changing reg in insn 4904
changing reg in insn 4907
changing reg in insn 4908
changing reg in insn 4910
changing reg in insn 4911
changing reg in insn 4914
changing reg in insn 4916
changing reg in insn 4915
changing reg in insn 4916
changing reg in insn 4917
changing reg in insn 4918
changing reg in insn 4919
changing reg in insn 4920
changing reg in insn 4922
changing reg in insn 4923
changing reg in insn 4926
changing reg in insn 4927
changing reg in insn 4930
changing reg in insn 4931
changing reg in insn 4932
changing reg in insn 4933
changing reg in insn 4935
changing reg in insn 4936
changing reg in insn 4938
changing reg in insn 4939
changing reg in insn 4942
changing reg in insn 4943
changing reg in insn 4946
changing reg in insn 4947
changing reg in insn 4948
changing reg in insn 4949
changing reg in insn 4951
changing reg in insn 4952
changing reg in insn 4956
changing reg in insn 4957
changing reg in insn 4958
changing reg in insn 4959
changing reg in insn 4961
changing reg in insn 4962
changing reg in insn 4965
changing reg in insn 4966
changing reg in insn 4969
changing reg in insn 4970
changing reg in insn 4971
changing reg in insn 4972
changing reg in insn 4974
changing reg in insn 4975
changing reg in insn 4978
changing reg in insn 4979
changing reg in insn 4982
changing reg in insn 4983
changing reg in insn 4984
changing reg in insn 4985
changing reg in insn 4987
changing reg in insn 4988
changing reg in insn 4992
changing reg in insn 4993
changing reg in insn 4994
changing reg in insn 4995
changing reg in insn 4997
changing reg in insn 4998
changing reg in insn 5001
changing reg in insn 5003
changing reg in insn 5002
changing reg in insn 5003
changing reg in insn 5004
changing reg in insn 5005
changing reg in insn 5007
changing reg in insn 5008
changing reg in insn 5011
changing reg in insn 5013
changing reg in insn 5012
changing reg in insn 5013
changing reg in insn 5016
changing reg in insn 5018
changing reg in insn 5017
changing reg in insn 5018
changing reg in insn 5020
changing reg in insn 5021
changing reg in insn 5022
changing reg in insn 5023
changing reg in insn 5025
changing reg in insn 5026
changing reg in insn 5030
changing reg in insn 5031
changing reg in insn 5055
changing reg in insn 5059
changing reg in insn 5056
changing reg in insn 5060
changing reg in insn 5073
changing reg in insn 5068
changing reg in insn 5073
changing reg in insn 5072
changing reg in insn 5069
changing reg in insn 5071
changing reg in insn 5071
changing reg in insn 5070
changing reg in insn 5071
changing reg in insn 5071
changing reg in insn 5082
changing reg in insn 5080
changing reg in insn 5079
changing reg in insn 5077
changing reg in insn 5083
changing reg in insn 5081
changing reg in insn 5080
changing reg in insn 5078
changing reg in insn 5078
changing reg in insn 5079
changing reg in insn 5081
changing reg in insn 5082
changing reg in insn 5084
changing reg in insn 5085
changing reg in insn 5085
changing reg in insn 5086
changing reg in insn 5087
changing reg in insn 5090
changing reg in insn 5088
changing reg in insn 5091
changing reg in insn 5089
changing reg in insn 5092
changing reg in insn 5138
changing reg in insn 5142
changing reg in insn 5139
changing reg in insn 5143
changing reg in insn 5156
changing reg in insn 5151
changing reg in insn 5156
changing reg in insn 5155
changing reg in insn 5152
changing reg in insn 5154
changing reg in insn 5154
changing reg in insn 5153
changing reg in insn 5154
changing reg in insn 5154
changing reg in insn 5157
changing reg in insn 5160
changing reg in insn 5158
changing reg in insn 5161
changing reg in insn 5159
changing reg in insn 5162
changing reg in insn 5184
changing reg in insn 5185
changing reg in insn 5192
changing reg in insn 5193
changing reg in insn 5197
changing reg in insn 5198
changing reg in insn 5200
changing reg in insn 5201
changing reg in insn 5204
changing reg in insn 5205
changing reg in insn 5207
changing reg in insn 5208
changing reg in insn 5211
changing reg in insn 5213
changing reg in insn 5212
changing reg in insn 5213
changing reg in insn 5214
changing reg in insn 5215
changing reg in insn 5232
changing reg in insn 5233
changing reg in insn 5242
changing reg in insn 5243
changing reg in insn 5250
changing reg in insn 5251
changing reg in insn 5258
changing reg in insn 5259
changing reg in insn 5262
changing reg in insn 5263
changing reg in insn 5266
changing reg in insn 5268
changing reg in insn 5267
changing reg in insn 5268
changing reg in insn 5322
changing reg in insn 5323
changing reg in insn 5338
changing reg in insn 5336
changing reg in insn 5335
changing reg in insn 5333
changing reg in insn 5339
changing reg in insn 5337
changing reg in insn 5336
changing reg in insn 5334
changing reg in insn 5334
changing reg in insn 5335
changing reg in insn 5337
changing reg in insn 5338
changing reg in insn 5344
changing reg in insn 5345
changing reg in insn 5356
changing reg in insn 5354
changing reg in insn 5353
changing reg in insn 5351
changing reg in insn 5357
changing reg in insn 5355
changing reg in insn 5354
changing reg in insn 5352
changing reg in insn 5352
changing reg in insn 5353
changing reg in insn 5355
changing reg in insn 5356
changing reg in insn 5362
changing reg in insn 5363
changing reg in insn 5365
changing reg in insn 5369
changing reg in insn 5366
changing reg in insn 5370
changing reg in insn 5374
changing reg in insn 5378
changing reg in insn 5375
changing reg in insn 5379
changing reg in insn 5392
changing reg in insn 5387
changing reg in insn 5392
changing reg in insn 5391
changing reg in insn 5388
changing reg in insn 5390
changing reg in insn 5390
changing reg in insn 5389
changing reg in insn 5390
changing reg in insn 5390
changing reg in insn 5402
changing reg in insn 5406
changing reg in insn 5403
changing reg in insn 5407
changing reg in insn 5404
changing reg in insn 5408
changing reg in insn 5405
changing reg in insn 5409
changing reg in insn 5427
changing reg in insn 5425
changing reg in insn 5424
changing reg in insn 5422
changing reg in insn 5428
changing reg in insn 5426
changing reg in insn 5425
changing reg in insn 5423
changing reg in insn 5423
changing reg in insn 5424
changing reg in insn 5426
changing reg in insn 5427
changing reg in insn 5433
changing reg in insn 5434
changing reg in insn 5445
changing reg in insn 5443
changing reg in insn 5442
changing reg in insn 5440
changing reg in insn 5446
changing reg in insn 5444
changing reg in insn 5443
changing reg in insn 5441
changing reg in insn 5441
changing reg in insn 5442
changing reg in insn 5444
changing reg in insn 5445
changing reg in insn 5451
changing reg in insn 5452
changing reg in insn 5454
changing reg in insn 5458
changing reg in insn 5455
changing reg in insn 5459
changing reg in insn 5463
changing reg in insn 5467
changing reg in insn 5464
changing reg in insn 5468
changing reg in insn 5481
changing reg in insn 5476
changing reg in insn 5481
changing reg in insn 5480
changing reg in insn 5477
changing reg in insn 5479
changing reg in insn 5479
changing reg in insn 5478
changing reg in insn 5479
changing reg in insn 5479
changing reg in insn 5491
changing reg in insn 5495
changing reg in insn 5492
changing reg in insn 5496
changing reg in insn 5493
changing reg in insn 5497
changing reg in insn 5494
changing reg in insn 5498
changing reg in insn 5514
changing reg in insn 5515
changing reg in insn 5517
changing reg in insn 5518
deleting insn with uid = 31.
deleting insn with uid = 37.
deleting insn with uid = 38.
deleting insn with uid = 65.
deleting insn with uid = 71.
deleting insn with uid = 72.
deleting insn with uid = 109.
deleting insn with uid = 5822.
deleting insn with uid = 148.
deleting insn with uid = 151.
deleting insn with uid = 152.
deleting insn with uid = 162.
deleting insn with uid = 214.
deleting insn with uid = 217.
deleting insn with uid = 218.
deleting insn with uid = 228.
deleting insn with uid = 382.
deleting insn with uid = 417.
deleting insn with uid = 5829.
deleting insn with uid = 5832.
deleting insn with uid = 5833.
deleting insn with uid = 5836.
deleting insn with uid = 5839.
deleting insn with uid = 5840.
deleting insn with uid = 5842.
deleting insn with uid = 5844.
deleting insn with uid = 5846.
deleting insn with uid = 1100.
deleting insn with uid = 1105.
deleting insn with uid = 1107.
deleting insn with uid = 1109.
deleting insn with uid = 1131.
deleting insn with uid = 1172.
deleting insn with uid = 5850.
deleting insn with uid = 1382.
deleting insn with uid = 1385.
deleting insn with uid = 1400.
deleting insn with uid = 1403.
deleting insn with uid = 1416.
deleting insn with uid = 1486.
deleting insn with uid = 1489.
deleting insn with uid = 1504.
deleting insn with uid = 1507.
deleting insn with uid = 1520.
deleting insn with uid = 1590.
deleting insn with uid = 1593.
deleting insn with uid = 1608.
deleting insn with uid = 1611.
deleting insn with uid = 1624.
deleting insn with uid = 1679.
deleting insn with uid = 1682.
deleting insn with uid = 1697.
deleting insn with uid = 1700.
deleting insn with uid = 1713.
deleting insn with uid = 1722.
deleting insn with uid = 1784.
deleting insn with uid = 1787.
deleting insn with uid = 1802.
deleting insn with uid = 1805.
deleting insn with uid = 1818.
deleting insn with uid = 1827.
deleting insn with uid = 1836.
deleting insn with uid = 1845.
deleting insn with uid = 1877.
deleting insn with uid = 1878.
deleting insn with uid = 1930.
deleting insn with uid = 1933.
deleting insn with uid = 1948.
deleting insn with uid = 1951.
deleting insn with uid = 1964.
deleting insn with uid = 1973.
deleting insn with uid = 1982.
deleting insn with uid = 2043.
deleting insn with uid = 2046.
deleting insn with uid = 2061.
deleting insn with uid = 2064.
deleting insn with uid = 2077.
deleting insn with uid = 2142.
deleting insn with uid = 2145.
deleting insn with uid = 2160.
deleting insn with uid = 2163.
deleting insn with uid = 2176.
deleting insn with uid = 2185.
deleting insn with uid = 2194.
deleting insn with uid = 2261.
deleting insn with uid = 2264.
deleting insn with uid = 2279.
deleting insn with uid = 2282.
deleting insn with uid = 2298.
deleting insn with uid = 2301.
deleting insn with uid = 2314.
deleting insn with uid = 2323.
deleting insn with uid = 2326.
deleting insn with uid = 2339.
deleting insn with uid = 2431.
deleting insn with uid = 2434.
deleting insn with uid = 2449.
deleting insn with uid = 2452.
deleting insn with uid = 2465.
deleting insn with uid = 2520.
deleting insn with uid = 2523.
deleting insn with uid = 2538.
deleting insn with uid = 2541.
deleting insn with uid = 2554.
deleting insn with uid = 2563.
deleting insn with uid = 2623.
deleting insn with uid = 2626.
deleting insn with uid = 2641.
deleting insn with uid = 2644.
deleting insn with uid = 2657.
deleting insn with uid = 2716.
deleting insn with uid = 2719.
deleting insn with uid = 2734.
deleting insn with uid = 2737.
deleting insn with uid = 2750.
deleting insn with uid = 2805.
deleting insn with uid = 2808.
deleting insn with uid = 2908.
deleting insn with uid = 2911.
deleting insn with uid = 2924.
deleting insn with uid = 2933.
deleting insn with uid = 2976.
deleting insn with uid = 3049.
deleting insn with uid = 3052.
deleting insn with uid = 3067.
deleting insn with uid = 3070.
deleting insn with uid = 3083.
deleting insn with uid = 3092.
deleting insn with uid = 3205.
deleting insn with uid = 3208.
deleting insn with uid = 3223.
deleting insn with uid = 3226.
deleting insn with uid = 5883.
deleting insn with uid = 5885.
deleting insn with uid = 3443.
deleting insn with uid = 3448.
deleting insn with uid = 3450.
deleting insn with uid = 3452.
deleting insn with uid = 3474.
deleting insn with uid = 3491.
deleting insn with uid = 3495.
deleting insn with uid = 3563.
deleting insn with uid = 3664.
deleting insn with uid = 3686.
deleting insn with uid = 3691.
deleting insn with uid = 3747.
deleting insn with uid = 3748.
deleting insn with uid = 3775.
deleting insn with uid = 3778.
deleting insn with uid = 3816.
deleting insn with uid = 3819.
deleting insn with uid = 3878.
deleting insn with uid = 3881.
deleting insn with uid = 3896.
deleting insn with uid = 3899.
deleting insn with uid = 3998.
deleting insn with uid = 4001.
deleting insn with uid = 4016.
deleting insn with uid = 4019.
deleting insn with uid = 4118.
deleting insn with uid = 4121.
deleting insn with uid = 4159.
deleting insn with uid = 4162.
deleting insn with uid = 4323.
deleting insn with uid = 4326.
deleting insn with uid = 4364.
deleting insn with uid = 4367.
deleting insn with uid = 4685.
deleting insn with uid = 4687.
deleting insn with uid = 4734.
deleting insn with uid = 4736.
deleting insn with uid = 4738.
deleting insn with uid = 4744.
deleting insn with uid = 4783.
deleting insn with uid = 4785.
deleting insn with uid = 4832.
deleting insn with uid = 4834.
deleting insn with uid = 4836.
deleting insn with uid = 4842.
deleting insn with uid = 5079.
deleting insn with uid = 5082.
deleting insn with uid = 5083.
deleting insn with uid = 5093.
deleting insn with uid = 5335.
deleting insn with uid = 5338.
deleting insn with uid = 5353.
deleting insn with uid = 5356.
deleting insn with uid = 5369.
deleting insn with uid = 5424.
deleting insn with uid = 5427.
deleting insn with uid = 5442.
deleting insn with uid = 5445.
deleting insn with uid = 5458.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 36.
verify found no changes in insn with uid = 70.
verify found no changes in insn with uid = 135.
verify found no changes in insn with uid = 166.
verify found no changes in insn with uid = 174.
verify found no changes in insn with uid = 186.
verify found no changes in insn with uid = 200.
verify found no changes in insn with uid = 205.
verify found no changes in insn with uid = 208.
verify found no changes in insn with uid = 232.
verify found no changes in insn with uid = 236.
verify found no changes in insn with uid = 1108.
verify found no changes in insn with uid = 1420.
verify found no changes in insn with uid = 1432.
verify found no changes in insn with uid = 1455.
verify found no changes in insn with uid = 1460.
verify found no changes in insn with uid = 1463.
verify found no changes in insn with uid = 1475.
verify found no changes in insn with uid = 1524.
verify found no changes in insn with uid = 1536.
verify found no changes in insn with uid = 1559.
verify found no changes in insn with uid = 1564.
verify found no changes in insn with uid = 1567.
verify found no changes in insn with uid = 1579.
verify found no changes in insn with uid = 1628.
verify found no changes in insn with uid = 1640.
verify found no changes in insn with uid = 1668.
verify found no changes in insn with uid = 1717.
verify found no changes in insn with uid = 1726.
verify found no changes in insn with uid = 1733.
verify found no changes in insn with uid = 1745.
verify found no changes in insn with uid = 1773.
verify found no changes in insn with uid = 1822.
verify found no changes in insn with uid = 1831.
verify found no changes in insn with uid = 1840.
verify found no changes in insn with uid = 1849.
verify found no changes in insn with uid = 1859.
verify found no changes in insn with uid = 1872.
verify found no changes in insn with uid = 1882.
verify found no changes in insn with uid = 1892.
verify found no changes in insn with uid = 1919.
verify found no changes in insn with uid = 1968.
verify found no changes in insn with uid = 1977.
verify found no changes in insn with uid = 1986.
verify found no changes in insn with uid = 1992.
verify found no changes in insn with uid = 2004.
verify found no changes in insn with uid = 2032.
verify found no changes in insn with uid = 2081.
verify found no changes in insn with uid = 2093.
verify found no changes in insn with uid = 2104.
verify found no changes in insn with uid = 2131.
verify found no changes in insn with uid = 2180.
verify found no changes in insn with uid = 2189.
verify found no changes in insn with uid = 2198.
verify found no changes in insn with uid = 2205.
verify found no changes in insn with uid = 2217.
verify found no changes in insn with uid = 2245.
verify found no changes in insn with uid = 2318.
verify found no changes in insn with uid = 2343.
verify found no changes in insn with uid = 2355.
verify found no changes in insn with uid = 2387.
verify found no changes in insn with uid = 2420.
verify found no changes in insn with uid = 2469.
verify found no changes in insn with uid = 2481.
verify found no changes in insn with uid = 2509.
verify found no changes in insn with uid = 2558.
verify found no changes in insn with uid = 2567.
verify found no changes in insn with uid = 2572.
verify found no changes in insn with uid = 2584.
verify found no changes in insn with uid = 2612.
verify found no changes in insn with uid = 2661.
verify found no changes in insn with uid = 2665.
verify found no changes in insn with uid = 2677.
verify found no changes in insn with uid = 2705.
verify found no changes in insn with uid = 2754.
verify found no changes in insn with uid = 2766.
verify found no changes in insn with uid = 2794.
verify found no changes in insn with uid = 2928.
verify found no changes in insn with uid = 2937.
verify found no changes in insn with uid = 3010.
verify found no changes in insn with uid = 3038.
verify found no changes in insn with uid = 3087.
verify found no changes in insn with uid = 3096.
verify found no changes in insn with uid = 3166.
verify found no changes in insn with uid = 3194.
verify found no changes in insn with uid = 3451.
verify found no changes in insn with uid = 3687.
verify found no changes in insn with uid = 3727.
verify found no changes in insn with uid = 3752.
verify found no changes in insn with uid = 3764.
verify found no changes in insn with uid = 3807.
verify found no changes in insn with uid = 3839.
verify found no changes in insn with uid = 3867.
verify found no changes in insn with uid = 3959.
verify found no changes in insn with uid = 3987.
verify found no changes in insn with uid = 4079.
verify found no changes in insn with uid = 4107.
verify found no changes in insn with uid = 4150.
verify found no changes in insn with uid = 4251.
verify found no changes in insn with uid = 4312.
verify found no changes in insn with uid = 4355.
verify found no changes in insn with uid = 4456.
verify found no changes in insn with uid = 4517.
verify found no changes in insn with uid = 4688.
verify found no changes in insn with uid = 4739.
verify found no changes in insn with uid = 4745.
verify found no changes in insn with uid = 4786.
verify found no changes in insn with uid = 4837.
verify found no changes in insn with uid = 4843.
verify found no changes in insn with uid = 5053.
verify found no changes in insn with uid = 5066.
verify found no changes in insn with uid = 5097.
verify found no changes in insn with uid = 5132.
verify found no changes in insn with uid = 5149.
verify found no changes in insn with uid = 5167.
verify found no changes in insn with uid = 5306.
verify found no changes in insn with uid = 5315.
verify found no changes in insn with uid = 5373.
verify found no changes in insn with uid = 5385.
verify found no changes in insn with uid = 5413.
verify found no changes in insn with uid = 5462.
verify found no changes in insn with uid = 5474.
verify found no changes in insn with uid = 5502.
verify found no changes in insn with uid = 5516.
verify found no changes in insn with uid = 5519.


etafld2

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 37 [r8] 38 [r9] 41 [r12] 42 [r13]
;;  ref usage 	r0={1767d,1677u} r1={1094d,1022u,59e} r2={424d,302u,1e} r3={4d,3u} r4={263d,138u} r5={296d,199u} r6={1d,1510u} r7={121d,686u} r8={125d} r9={125d} r10={125d} r11={125d} r12={125d} r13={125d} r14={125d} r15={125d} r17={1431d,248u} r18={125d} r19={125d} r20={1d,1u,14e} r21={353d,250u,1e} r22={226d,100u} r23={141d,15u} r24={128d,2u} r25={126d} r26={126d} r27={126d} r28={126d} r29={125d} r30={125d} r31={125d} r32={125d} r33={125d} r34={125d} r35={125d} r36={125d} r37={221d,95u} r38={188d,62u} r39={125d} r40={125d} r41={1d} r42={1d} r45={125d} r46={125d} r47={125d} r48={125d} r49={125d} r50={125d} r51={125d} r52={125d} r53={125d} r54={125d} r55={125d} r56={125d} r57={125d} r58={125d} r59={125d} r60={125d} r61={125d} r62={125d} r63={125d} r64={125d} r65={125d} r66={125d} r67={125d} r68={125d} r69={125d} r70={125d} r71={125d} r72={125d} r73={125d} r74={125d} r75={125d} r76={125d} r77={125d} r78={125d} r79={125d} r80={125d} 
;;    total ref usage 20550{14165d,6310u,75e} in 4801{4676 regular + 125 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90 98
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 90 98
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 87 88 89 92 93 94 95 96 97 100 101 102 103 104 105 1640 1641 1642 1643 1647 1649 1650 1651 1652 1656 1742 1743 1744 1745 1746 1747 1748 1749 1750 1751 1752 1753 1754 1755 1756 1757 1758 1759 1760 1761
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -824 [0xfffffffffffffcc8])) [11 imout+0 S8 A64])
        (reg:DI 5 di [ imout ])) "ETAFLD2.f":1 85 {*movdi_internal}
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -832 [0xfffffffffffffcc0])) [11 jmout+0 S8 A64])
        (reg:DI 4 si [ jmout ])) "ETAFLD2.f":1 85 {*movdi_internal}
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg/f:DI 0 ax [1742])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -824 [0xfffffffffffffcc8])) [11 imout+0 S8 A64])) "ETAFLD2.f":106 85 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:SI 0 ax [orig:87 _1 ] [87])
        (mem:SI (reg/f:DI 0 ax [1742]) [1 *imout_1712(D)+0 S4 A32])) "ETAFLD2.f":106 86 {*movsi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:DI 0 ax [1743])
        (sign_extend:DI (reg:SI 0 ax [orig:87 _1 ] [87]))) "ETAFLD2.f":106 149 {*extendsidi2_rex64}
     (nil))
(insn 10 9 11 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [3 ubound.0+0 S8 A64])
        (reg:DI 0 ax [1743])) "ETAFLD2.f":106 85 {*movdi_internal}
     (nil))
(insn 11 10 13 2 (set (reg:DI 0 ax [orig:1640 stride.2_1714 ] [1640])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [3 ubound.0+0 S8 A64])) "ETAFLD2.f":106 85 {*movdi_internal}
     (nil))
(insn 13 11 12 2 (set (reg:DI 1 dx [1744])
        (const_int 0 [0])) "ETAFLD2.f":106 85 {*movdi_internal}
     (nil))
(insn 12 13 14 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 0 ax [orig:1640 stride.2_1714 ] [1640])
            (const_int 0 [0]))) "ETAFLD2.f":106 8 {*cmpdi_ccno_1}
     (nil))
(insn 14 12 15 2 (set (reg:DI 0 ax [orig:1641 stride.2_1715 ] [1641])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 0 ax [orig:1640 stride.2_1714 ] [1640])
            (reg:DI 1 dx [1744]))) "ETAFLD2.f":106 1003 {*movdicc_noc}
     (nil))
(insn 15 14 16 2 (set (reg/f:DI 1 dx [1745])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -832 [0xfffffffffffffcc0])) [11 jmout+0 S8 A64])) "ETAFLD2.f":106 85 {*movdi_internal}
     (nil))
(insn 16 15 17 2 (set (reg:SI 1 dx [orig:88 _2 ] [88])
        (mem:SI (reg/f:DI 1 dx [1745]) [1 *jmout_1716(D)+0 S4 A32])) "ETAFLD2.f":106 86 {*movsi_internal}
     (nil))
(insn 17 16 18 2 (set (reg:DI 1 dx [1746])
        (sign_extend:DI (reg:SI 1 dx [orig:88 _2 ] [88]))) "ETAFLD2.f":106 149 {*extendsidi2_rex64}
     (nil))
(insn 18 17 19 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -80 [0xffffffffffffffb0])) [3 ubound.1+0 S8 A64])
        (reg:DI 1 dx [1746])) "ETAFLD2.f":106 85 {*movdi_internal}
     (nil))
(insn 19 18 21 2 (parallel [
            (set (reg:DI 0 ax [orig:1642 size.4_1718 ] [1642])
                (mult:DI (reg:DI 0 ax [orig:1641 stride.2_1715 ] [1641])
                    (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                            (const_int -80 [0xffffffffffffffb0])) [3 ubound.1+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":106 349 {*muldi3_1}
     (nil))
(insn 21 19 20 2 (set (reg:DI 1 dx [1747])
        (const_int 0 [0])) "ETAFLD2.f":106 85 {*movdi_internal}
     (nil))
(insn 20 21 22 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 0 ax [orig:1642 size.4_1718 ] [1642])
            (const_int 0 [0]))) "ETAFLD2.f":106 8 {*cmpdi_ccno_1}
     (nil))
(insn 22 20 24 2 (set (reg:DI 0 ax [orig:1643 size.4_1719 ] [1643])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 0 ax [orig:1642 size.4_1718 ] [1642])
            (reg:DI 1 dx [1747]))) "ETAFLD2.f":106 1003 {*movdicc_noc}
     (nil))
(insn 24 22 25 2 (set (reg:DI 1 dx [orig:89 size.19_3 ] [89])
        (reg:DI 0 ax [orig:1643 size.4_1719 ] [1643])) "ETAFLD2.f":106 85 {*movdi_internal}
     (nil))
(insn 25 24 26 2 (set (reg:DI 2 cx [orig:90 _4 ] [90])
        (reg:DI 1 dx [orig:89 size.19_3 ] [89])) "ETAFLD2.f":106 85 {*movdi_internal}
     (nil))
(insn 26 25 30 2 (set (reg:DI 3 bx [ _4+8 ])
        (const_int 0 [0])) "ETAFLD2.f":106 85 {*movdi_internal}
     (nil))
(insn 30 26 33 2 (parallel [
            (set (reg:DI 0 ax [orig:92 _6 ] [92])
                (ashift:DI (reg:DI 0 ax [orig:1643 size.4_1719 ] [1643])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":106 551 {*ashldi3_1}
     (nil))
(insn 33 30 32 2 (set (reg:DI 1 dx [1748])
        (const_int 1 [0x1])) "ETAFLD2.f":106 85 {*movdi_internal}
     (nil))
(insn 32 33 34 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 0 ax [orig:93 _7 ] [93])
            (const_int 0 [0]))) "ETAFLD2.f":106 8 {*cmpdi_ccno_1}
     (nil))
(insn 34 32 35 2 (set (reg:DI 0 ax [orig:94 _8 ] [94])
        (if_then_else:DI (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (reg:DI 0 ax [orig:93 _7 ] [93])
            (reg:DI 1 dx [1748]))) "ETAFLD2.f":106 1003 {*movdicc_noc}
     (nil))
(insn 35 34 36 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [orig:94 _8 ] [94])) "ETAFLD2.f":106 85 {*movdi_internal}
     (nil))
(call_insn 36 35 39 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7f98280aef00 __builtin_malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) "ETAFLD2.f":106 700 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 39 36 41 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])
        (reg/f:DI 0 ax [orig:1647 _1724 ] [1647])) "ETAFLD2.f":106 85 {*movdi_internal}
     (nil))
(insn 41 39 42 2 (set (reg/f:DI 0 ax [1750])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -824 [0xfffffffffffffcc8])) [11 imout+0 S8 A64])) "ETAFLD2.f":106 85 {*movdi_internal}
     (nil))
(insn 42 41 43 2 (set (reg:SI 0 ax [orig:95 _9 ] [95])
        (mem:SI (reg/f:DI 0 ax [1750]) [1 *imout_1712(D)+0 S4 A32])) "ETAFLD2.f":106 86 {*movsi_internal}
     (nil))
(insn 43 42 44 2 (set (reg:DI 0 ax [1751])
        (sign_extend:DI (reg:SI 0 ax [orig:95 _9 ] [95]))) "ETAFLD2.f":106 149 {*extendsidi2_rex64}
     (nil))
(insn 44 43 45 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [3 ubound.5+0 S8 A64])
        (reg:DI 0 ax [1751])) "ETAFLD2.f":106 85 {*movdi_internal}
     (nil))
(insn 45 44 47 2 (set (reg:DI 0 ax [orig:1649 stride.7_1728 ] [1649])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [3 ubound.5+0 S8 A64])) "ETAFLD2.f":106 85 {*movdi_internal}
     (nil))
(insn 47 45 46 2 (set (reg:DI 1 dx [1752])
        (const_int 0 [0])) "ETAFLD2.f":106 85 {*movdi_internal}
     (nil))
(insn 46 47 48 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 0 ax [orig:1649 stride.7_1728 ] [1649])
            (const_int 0 [0]))) "ETAFLD2.f":106 8 {*cmpdi_ccno_1}
     (nil))
(insn 48 46 49 2 (set (reg:DI 0 ax [orig:1650 stride.7_1729 ] [1650])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 0 ax [orig:1649 stride.7_1728 ] [1649])
            (reg:DI 1 dx [1752]))) "ETAFLD2.f":106 1003 {*movdicc_noc}
     (nil))
(insn 49 48 50 2 (set (reg/f:DI 1 dx [1753])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -832 [0xfffffffffffffcc0])) [11 jmout+0 S8 A64])) "ETAFLD2.f":106 85 {*movdi_internal}
     (nil))
(insn 50 49 51 2 (set (reg:SI 1 dx [orig:96 _10 ] [96])
        (mem:SI (reg/f:DI 1 dx [1753]) [1 *jmout_1716(D)+0 S4 A32])) "ETAFLD2.f":106 86 {*movsi_internal}
     (nil))
(insn 51 50 52 2 (set (reg:DI 1 dx [1754])
        (sign_extend:DI (reg:SI 1 dx [orig:96 _10 ] [96]))) "ETAFLD2.f":106 149 {*extendsidi2_rex64}
     (nil))
(insn 52 51 53 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [3 ubound.6+0 S8 A64])
        (reg:DI 1 dx [1754])) "ETAFLD2.f":106 85 {*movdi_internal}
     (nil))
(insn 53 52 55 2 (parallel [
            (set (reg:DI 0 ax [orig:1651 size.9_1731 ] [1651])
                (mult:DI (reg:DI 0 ax [orig:1650 stride.7_1729 ] [1650])
                    (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                            (const_int -104 [0xffffffffffffff98])) [3 ubound.6+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":106 349 {*muldi3_1}
     (nil))
(insn 55 53 54 2 (set (reg:DI 1 dx [1755])
        (const_int 0 [0])) "ETAFLD2.f":106 85 {*movdi_internal}
     (nil))
(insn 54 55 56 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 0 ax [orig:1651 size.9_1731 ] [1651])
            (const_int 0 [0]))) "ETAFLD2.f":106 8 {*cmpdi_ccno_1}
     (nil))
(insn 56 54 58 2 (set (reg:DI 0 ax [orig:1652 size.9_1732 ] [1652])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 0 ax [orig:1651 size.9_1731 ] [1651])
            (reg:DI 1 dx [1755]))) "ETAFLD2.f":106 1003 {*movdicc_noc}
     (nil))
(insn 58 56 59 2 (set (reg:DI 1 dx [orig:97 size.21_11 ] [97])
        (reg:DI 0 ax [orig:1652 size.9_1732 ] [1652])) "ETAFLD2.f":106 85 {*movdi_internal}
     (nil))
(insn 59 58 60 2 (set (reg:DI 41 r12 [orig:98 _12 ] [98])
        (reg:DI 1 dx [orig:97 size.21_11 ] [97])) "ETAFLD2.f":106 85 {*movdi_internal}
     (nil))
(insn 60 59 64 2 (set (reg:DI 42 r13 [ _12+8 ])
        (const_int 0 [0])) "ETAFLD2.f":106 85 {*movdi_internal}
     (nil))
(insn 64 60 67 2 (parallel [
            (set (reg:DI 0 ax [orig:100 _14 ] [100])
                (ashift:DI (reg:DI 0 ax [orig:1652 size.9_1732 ] [1652])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":106 551 {*ashldi3_1}
     (nil))
(insn 67 64 66 2 (set (reg:DI 1 dx [1756])
        (const_int 1 [0x1])) "ETAFLD2.f":106 85 {*movdi_internal}
     (nil))
(insn 66 67 68 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 0 ax [orig:101 _15 ] [101])
            (const_int 0 [0]))) "ETAFLD2.f":106 8 {*cmpdi_ccno_1}
     (nil))
(insn 68 66 69 2 (set (reg:DI 0 ax [orig:102 _16 ] [102])
        (if_then_else:DI (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (reg:DI 0 ax [orig:101 _15 ] [101])
            (reg:DI 1 dx [1756]))) "ETAFLD2.f":106 1003 {*movdicc_noc}
     (nil))
(insn 69 68 70 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [orig:102 _16 ] [102])) "ETAFLD2.f":106 85 {*movdi_internal}
     (nil))
(call_insn 70 69 73 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7f98280aef00 __builtin_malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) "ETAFLD2.f":106 700 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 73 70 75 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [4 grid2+0 S8 A64])
        (reg/f:DI 0 ax [orig:1656 _1737 ] [1656])) "ETAFLD2.f":106 85 {*movdi_internal}
     (nil))
(insn 75 73 76 2 (set (reg:SF 21 xmm0 [1758])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) "ETAFLD2.f":145 131 {*movsf_internal}
     (nil))
(insn 76 75 77 2 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -116 [0xffffffffffffff8c])) [2 ctim1+0 S4 A32])
        (reg:SF 21 xmm0 [1758])) "ETAFLD2.f":145 131 {*movsf_internal}
     (nil))
(insn 77 76 78 2 (set (reg:SF 21 xmm0 [1759])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S4 A32])) "ETAFLD2.f":146 131 {*movsf_internal}
     (nil))
(insn 78 77 79 2 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 ctim2+0 S4 A32])
        (reg:SF 21 xmm0 [1759])) "ETAFLD2.f":146 131 {*movsf_internal}
     (nil))
(insn 79 78 80 2 (set (reg:SI 0 ax [orig:103 _17 ] [103])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("ctlblk_") [flags 0x2]  <var_decl 0x7f9828232d80 ctlblk>)
                    (const_int 52 [0x34]))) [1 ctlblk.ntsd+0 S4 A32])) "ETAFLD2.f":1 86 {*movsi_internal}
     (nil))
(insn 80 79 81 2 (set (reg:SF 22 xmm1 [orig:104 _18 ] [104])
        (float:SF (reg:SI 0 ax [orig:103 _17 ] [103]))) "ETAFLD2.f":147 203 {*floatsisf2_mixed}
     (nil))
(insn 81 80 82 2 (set (reg:SF 21 xmm0 [orig:105 _19 ] [105])
        (mem/c:SF (const:DI (plus:DI (symbol_ref:DI ("ctlblk_") [flags 0x2]  <var_decl 0x7f9828232d80 ctlblk>)
                    (const_int 48 [0x30]))) [2 ctlblk.dt+0 S4 A128])) "ETAFLD2.f":1 131 {*movsf_internal}
     (nil))
(insn 82 81 83 2 (set (reg:SF 21 xmm0 [1760])
        (mult:SF (reg:SF 21 xmm0 [orig:105 _19 ] [105])
            (reg:SF 22 xmm1 [orig:104 _18 ] [104]))) "ETAFLD2.f":147 838 {*fop_sf_comm}
     (nil))
(insn 83 82 84 2 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -124 [0xffffffffffffff84])) [2 ctim+0 S4 A32])
        (reg:SF 21 xmm0 [1760])) "ETAFLD2.f":147 131 {*movsf_internal}
     (nil))
(insn 84 83 85 2 (set (reg:SF 21 xmm0 [1761])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -116 [0xffffffffffffff8c])) [2 ctim1+0 S4 A32])) "ETAFLD2.f":148 131 {*movsf_internal}
     (nil))
(insn 85 84 86 2 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [1761])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -124 [0xffffffffffffff84])) [2 ctim+0 S4 A32]))) "ETAFLD2.f":148 53 {*cmpisf}
     (nil))
(jump_insn 86 85 90 2 (set (pc)
        (if_then_else (unle (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 5578)
            (pc))) "ETAFLD2.f":148 682 {*jcc}
     (nil)
 -> 5578)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 1762
(note 90 86 91 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 91 90 92 3 (set (reg:SF 21 xmm0 [1762])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) "ETAFLD2.f":149 131 {*movsf_internal}
     (nil))
(insn 92 91 5579 3 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [2 utim+0 S4 A32])
        (reg:SF 21 xmm0 [1762])) "ETAFLD2.f":149 131 {*movsf_internal}
     (nil))
(jump_insn 5579 92 5580 3 (set (pc)
        (label_ref 118)) 683 {jump}
     (nil)
 -> 118)
;;  succ:       7 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 5580 5579 5578)
;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1763
(code_label 5578 5580 96 4 216 (nil) [1 uses])
(note 96 5578 97 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 97 96 98 4 (set (reg:SF 21 xmm0 [1763])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 ctim2+0 S4 A32])) "ETAFLD2.f":151 131 {*movsf_internal}
     (nil))
(insn 98 97 99 4 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [1763])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -124 [0xffffffffffffff84])) [2 ctim+0 S4 A32]))) "ETAFLD2.f":151 53 {*cmpisf}
     (nil))
(jump_insn 99 98 103 4 (set (pc)
        (if_then_else (unlt (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 5581)
            (pc))) "ETAFLD2.f":151 682 {*jcc}
     (nil)
 -> 5581)
;;  succ:       5 (FALLTHRU)
;;              6
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 106 107 108 109 1764 1765 1766
(note 103 99 104 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 104 103 105 5 (set (reg:SF 21 xmm0 [1764])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -124 [0xffffffffffffff84])) [2 ctim+0 S4 A32])) "ETAFLD2.f":152 131 {*movsf_internal}
     (nil))
(insn 105 104 106 5 (set (reg:SF 21 xmm0 [orig:106 _20 ] [106])
        (minus:SF (reg:SF 21 xmm0 [1764])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -116 [0xffffffffffffff8c])) [2 ctim1+0 S4 A32]))) "ETAFLD2.f":152 841 {*fop_sf_1}
     (nil))
(insn 106 105 107 5 (set (reg:SF 22 xmm1 [orig:107 _21 ] [107])
        (reg:SF 21 xmm0 [orig:106 _20 ] [106])) "ETAFLD2.f":152 131 {*movsf_internal}
     (nil))
(insn 107 106 108 5 (set (reg:SF 21 xmm0 [1765])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 ctim2+0 S4 A32])) "ETAFLD2.f":152 131 {*movsf_internal}
     (nil))
(insn 108 107 110 5 (set (reg:SF 21 xmm0 [orig:108 _22 ] [108])
        (minus:SF (reg:SF 21 xmm0 [1765])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -116 [0xffffffffffffff8c])) [2 ctim1+0 S4 A32]))) "ETAFLD2.f":152 841 {*fop_sf_1}
     (nil))
(insn 110 108 5823 5 (set (reg:SF 22 xmm1 [orig:107 _21 ] [107])
        (div:SF (reg:SF 22 xmm1 [orig:107 _21 ] [107])
            (reg:SF 21 xmm0 [orig:109 _23 ] [109]))) "ETAFLD2.f":152 841 {*fop_sf_1}
     (nil))
(insn 5823 110 111 5 (set (reg:SF 21 xmm0 [1766])
        (reg:SF 22 xmm1 [orig:107 _21 ] [107])) "ETAFLD2.f":152 131 {*movsf_internal}
     (nil))
(insn 111 5823 5582 5 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [2 utim+0 S4 A32])
        (reg:SF 21 xmm0 [1766])) "ETAFLD2.f":152 131 {*movsf_internal}
     (nil))
(jump_insn 5582 111 5583 5 (set (pc)
        (label_ref 118)) 683 {jump}
     (nil)
 -> 118)
;;  succ:       7 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 5583 5582 5581)
;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 7, flags: (RTL, MODIFIED)
;;  pred:       4
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 1767
(code_label 5581 5583 115 6 217 (nil) [1 uses])
(note 115 5581 116 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 116 115 117 6 (set (reg:SF 21 xmm0 [1767])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0  S4 A32])) "ETAFLD2.f":154 131 {*movsf_internal}
     (nil))
(insn 117 116 118 6 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [2 utim+0 S4 A32])
        (reg:SF 21 xmm0 [1767])) "ETAFLD2.f":154 131 {*movsf_internal}
     (nil))
;;  succ:       7 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, maybe hot
;;  prev block 6, next block 8, flags: (RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;;              3 [always] 
;;              5 [always] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 110
(code_label 118 117 119 7 4 (nil) [2 uses])
(note 119 118 120 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 120 119 121 7 (set (reg:SI 0 ax [orig:110 _24 ] [110])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 104 [0x68]))) [1 rqstfld.iget+88 S4 A64])) "ETAFLD2.f":170 86 {*movsi_internal}
     (nil))
(insn 121 120 122 7 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:110 _24 ] [110])
            (const_int 0 [0]))) "ETAFLD2.f":170 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 122 121 123 7 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 167)
            (pc))) "ETAFLD2.f":170 682 {*jcc}
     (nil)
 -> 167)
;;  succ:       8 (FALLTHRU)
;;              9
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 8, loop depth 0, maybe hot
;;  prev block 7, next block 9, flags: (RTL, MODIFIED)
;;  pred:       7 (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 111 112 113 114 115 1768 1769 1770 1771 1772 1773 1774 1775 1776 1777 1778 1779 1780
(note 123 122 124 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 124 123 125 8 (set (reg:DI 1 dx [1768])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [4 grid2+0 S8 A64])) "ETAFLD2.f":171 85 {*movdi_internal}
     (nil))
(insn 125 124 126 8 (set (reg:DI 0 ax [1769])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "ETAFLD2.f":171 85 {*movdi_internal}
     (nil))
(insn 126 125 127 8 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [11  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -832 [0xfffffffffffffcc0])) [11 jmout+0 S8 A64])) "ETAFLD2.f":171 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 127 126 128 8 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [11  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -824 [0xfffffffffffffcc8])) [11 imout+0 S8 A64])) "ETAFLD2.f":171 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 128 127 129 8 (set (reg:DI 38 r9)
        (reg:DI 1 dx [1768])) "ETAFLD2.f":171 85 {*movdi_internal}
     (nil))
(insn 129 128 130 8 (set (reg:DI 37 r8)
        (reg:DI 0 ax [1769])) "ETAFLD2.f":171 85 {*movdi_internal}
     (nil))
(insn 130 129 131 8 (set (reg:DI 2 cx)
        (symbol_ref:DI ("equiv.2.4368") [flags 0x202]  <var_decl 0x7f9828263510 equiv.2>)) "ETAFLD2.f":171 85 {*movdi_internal}
     (nil))
(insn 131 130 132 8 (set (reg:DI 1 dx)
        (const:DI (plus:DI (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f9828240b40 extra>)
                (const_int 18826620 [0x11f457c])))) "ETAFLD2.f":171 85 {*movdi_internal}
     (nil))
(insn 132 131 133 8 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f9827f94240 *.LC3>)) "ETAFLD2.f":171 85 {*movdi_internal}
     (nil))
(insn 133 132 134 8 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7f9827f942d0 *.LC4>)) "ETAFLD2.f":171 85 {*movdi_internal}
     (nil))
(insn 134 133 135 8 (set (reg:QI 0 ax)
        (const_int 0 [0])) "ETAFLD2.f":171 88 {*movqi_internal}
     (nil))
(call_insn 135 134 136 8 (call (mem:QI (symbol_ref:DI ("e2out_") [flags 0x41]  <function_decl 0x7f9828228600 e2out>) [0 e2out S1 A8])
        (const_int 16 [0x10])) "ETAFLD2.f":171 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
(insn 136 135 137 8 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":171 222 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 137 136 138 8 (set (reg/f:DI 1 dx [1770])
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                (const_int 55216 [0xd7b0])))) "ETAFLD2.f":172 85 {*movdi_internal}
     (nil))
(insn 138 137 139 8 (set (reg:DI 0 ax [1771])
        (const_int 0 [0])) "ETAFLD2.f":172 85 {*movdi_internal}
     (nil))
(insn 139 138 5824 8 (set (reg:DI 2 cx [1772])
        (const_int 12 [0xc])) "ETAFLD2.f":172 85 {*movdi_internal}
     (nil))
(insn 5824 139 140 8 (set (reg/f:DI 5 di [1770])
        (reg/f:DI 1 dx [1770])) "ETAFLD2.f":172 85 {*movdi_internal}
     (nil))
(insn 140 5824 5825 8 (parallel [
            (set (reg:DI 2 cx [1772])
                (const_int 0 [0]))
            (set (reg/f:DI 5 di [1770])
                (plus:DI (ashift:DI (reg:DI 2 cx [1772])
                        (const_int 3 [0x3]))
                    (reg/f:DI 5 di [1770])))
            (set (mem/c:BLK (reg/f:DI 5 di [1770]) [1 rqstfld.id+0 S96 A128])
                (const_int 0 [0]))
            (use (reg:DI 0 ax [1771]))
            (use (reg:DI 2 cx [1772]))
        ]) "ETAFLD2.f":172 984 {*rep_stosdi_rex64}
     (nil))
(insn 5825 140 141 8 (set (reg/f:DI 1 dx [1770])
        (reg/f:DI 5 di [1770])) "ETAFLD2.f":172 85 {*movdi_internal}
     (nil))
(insn 141 5825 142 8 (set (mem/c:SI (reg/f:DI 1 dx [1770]) [1 rqstfld.id+96 S4 A128])
        (reg:SI 0 ax [1771])) "ETAFLD2.f":172 86 {*movsi_internal}
     (nil))
(insn 142 141 143 8 (parallel [
            (set (reg/f:DI 1 dx [1770])
                (plus:DI (reg/f:DI 1 dx [1770])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":172 222 {*adddi_1}
     (nil))
(insn 143 142 144 8 (set (reg:SI 0 ax [orig:111 _25 ] [111])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 104 [0x68]))) [1 rqstfld.iget+88 S4 A64])) "ETAFLD2.f":182 86 {*movsi_internal}
     (nil))
(insn 144 143 145 8 (set (reg:DI 0 ax [orig:112 _26 ] [112])
        (sign_extend:DI (reg:SI 0 ax [orig:111 _25 ] [111]))) "ETAFLD2.f":182 149 {*extendsidi2_rex64}
     (nil))
(insn 145 144 146 8 (parallel [
            (set (reg:DI 1 dx [orig:113 _27 ] [113])
                (plus:DI (reg:DI 0 ax [orig:112 _26 ] [112])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":182 222 {*adddi_1}
     (nil))
(insn 146 145 147 8 (set (reg:DI 0 ax [1773])
        (reg:DI 1 dx [orig:113 _27 ] [113])) "ETAFLD2.f":182 85 {*movdi_internal}
     (nil))
(insn 147 146 149 8 (parallel [
            (set (reg:DI 0 ax [1774])
                (ashift:DI (reg:DI 0 ax [1773])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":182 551 {*ashldi3_1}
     (nil))
(insn 149 147 150 8 (parallel [
            (set (reg:DI 0 ax [1773])
                (minus:DI (reg:DI 0 ax [1773])
                    (reg:DI 1 dx [orig:113 _27 ] [113])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":182 278 {*subdi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:113 _27 ] [113])
            (const_int 15 [0xf]))
        (nil)))
(insn 150 149 153 8 (parallel [
            (set (reg:DI 0 ax [1775])
                (ashift:DI (reg:DI 0 ax [1773])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":182 551 {*ashldi3_1}
     (nil))
(insn 153 150 154 8 (parallel [
            (set (reg:DI 0 ax [1776])
                (plus:DI (reg:DI 0 ax [orig:114 _28 ] [114])
                    (const_int 1404 [0x57c])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":182 222 {*adddi_1}
     (nil))
(insn 154 153 155 8 (parallel [
            (set (reg:DI 0 ax [1777])
                (ashift:DI (reg:DI 0 ax [1776])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":182 551 {*ashldi3_1}
     (nil))
(insn 155 154 156 8 (parallel [
            (set (reg/f:DI 1 dx [orig:115 _29 ] [115])
                (plus:DI (reg:DI 0 ax [1777])
                    (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":182 222 {*adddi_1}
     (nil))
(insn 156 155 157 8 (set (reg:DI 4 si [1778])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -832 [0xfffffffffffffcc0])) [11 jmout+0 S8 A64])) "ETAFLD2.f":182 85 {*movdi_internal}
     (nil))
(insn 157 156 158 8 (set (reg:DI 2 cx [1779])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -824 [0xfffffffffffffcc8])) [11 imout+0 S8 A64])) "ETAFLD2.f":182 85 {*movdi_internal}
     (nil))
(insn 158 157 159 8 (set (reg:DI 0 ax [1780])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "ETAFLD2.f":182 85 {*movdi_internal}
     (nil))
(insn 159 158 160 8 (set (reg:DI 38 r9)
        (reg:DI 4 si [1778])) "ETAFLD2.f":182 85 {*movdi_internal}
     (nil))
(insn 160 159 161 8 (set (reg:DI 37 r8)
        (reg:DI 2 cx [1779])) "ETAFLD2.f":182 85 {*movdi_internal}
     (nil))
(insn 161 160 163 8 (set (reg:DI 2 cx)
        (reg:DI 0 ax [1780])) "ETAFLD2.f":182 85 {*movdi_internal}
     (nil))
(insn 163 161 164 8 (set (reg:DI 4 si)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                (const_int 104 [0x68])))) "ETAFLD2.f":182 85 {*movdi_internal}
     (nil))
(insn 164 163 165 8 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                (const_int 4 [0x4])))) "ETAFLD2.f":182 85 {*movdi_internal}
     (nil))
(insn 165 164 166 8 (set (reg:QI 0 ax)
        (const_int 0 [0])) "ETAFLD2.f":182 88 {*movqi_internal}
     (nil))
(call_insn 166 165 167 8 (call (mem:QI (symbol_ref:DI ("output_") [flags 0x41]  <function_decl 0x7f9828228700 output>) [0 output S1 A8])
        (const_int 0 [0])) "ETAFLD2.f":182 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
;;  succ:       9 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 9, loop depth 0, maybe hot
;;  prev block 8, next block 10, flags: (RTL, MODIFIED)
;;  pred:       7
;;              8 (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 116
(code_label 167 166 168 9 7 (nil) [1 uses])
(note 168 167 169 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 169 168 170 9 (set (reg:SI 0 ax [orig:116 _30 ] [116])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 432 [0x1b0]))) [1 rqstfld.iget+416 S4 A128])) "ETAFLD2.f":186 86 {*movsi_internal}
     (nil))
(insn 170 169 171 9 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:116 _30 ] [116])
            (const_int 0 [0]))) "ETAFLD2.f":186 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 171 170 172 9 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 233)
            (pc))) "ETAFLD2.f":186 682 {*jcc}
     (nil)
 -> 233)
;;  succ:       10 (FALLTHRU)
;;              11
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 10, loop depth 0, maybe hot
;;  prev block 9, next block 11, flags: (RTL, MODIFIED)
;;  pred:       9 (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 117 118 119 120 121 1781 1782 1783 1784 1785 1786 1787 1788 1789 1790 1791 1792 1793 1794 1795 1796
(note 172 171 173 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 173 172 174 10 (set (reg:QI 0 ax)
        (const_int 0 [0])) "ETAFLD2.f":187 88 {*movqi_internal}
     (nil))
(call_insn 174 173 175 10 (call (mem:QI (symbol_ref:DI ("ngmslp2_") [flags 0x41]  <function_decl 0x7f9828228800 ngmslp2>) [0 ngmslp2 S1 A8])
        (const_int 0 [0])) "ETAFLD2.f":187 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (nil)))
(insn 175 174 176 10 (set (reg:DI 1 dx [1781])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [4 grid2+0 S8 A64])) "ETAFLD2.f":188 85 {*movdi_internal}
     (nil))
(insn 176 175 177 10 (set (reg:DI 0 ax [1782])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "ETAFLD2.f":188 85 {*movdi_internal}
     (nil))
(insn 177 176 178 10 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [11  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -832 [0xfffffffffffffcc0])) [11 jmout+0 S8 A64])) "ETAFLD2.f":188 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 178 177 179 10 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [11  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -824 [0xfffffffffffffcc8])) [11 imout+0 S8 A64])) "ETAFLD2.f":188 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 179 178 180 10 (set (reg:DI 38 r9)
        (reg:DI 1 dx [1781])) "ETAFLD2.f":188 85 {*movdi_internal}
     (nil))
(insn 180 179 181 10 (set (reg:DI 37 r8)
        (reg:DI 0 ax [1782])) "ETAFLD2.f":188 85 {*movdi_internal}
     (nil))
(insn 181 180 182 10 (set (reg:DI 2 cx)
        (symbol_ref:DI ("equiv.2.4368") [flags 0x202]  <var_decl 0x7f9828263510 equiv.2>)) "ETAFLD2.f":188 85 {*movdi_internal}
     (nil))
(insn 182 181 183 10 (set (reg:DI 1 dx)
        (const:DI (plus:DI (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f9828240b40 extra>)
                (const_int 18352524 [0x118098c])))) "ETAFLD2.f":188 85 {*movdi_internal}
     (nil))
(insn 183 182 184 10 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f9827f94240 *.LC3>)) "ETAFLD2.f":188 85 {*movdi_internal}
     (nil))
(insn 184 183 185 10 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f9827f94360 *.LC5>)) "ETAFLD2.f":188 85 {*movdi_internal}
     (nil))
(insn 185 184 186 10 (set (reg:QI 0 ax)
        (const_int 0 [0])) "ETAFLD2.f":188 88 {*movqi_internal}
     (nil))
(call_insn 186 185 187 10 (call (mem:QI (symbol_ref:DI ("e2out_") [flags 0x41]  <function_decl 0x7f9828228600 e2out>) [0 e2out S1 A8])
        (const_int 16 [0x10])) "ETAFLD2.f":188 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
(insn 187 186 188 10 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":188 222 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 188 187 189 10 (set (reg/f:DI 1 dx [1783])
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                (const_int 55216 [0xd7b0])))) "ETAFLD2.f":189 85 {*movdi_internal}
     (nil))
(insn 189 188 190 10 (set (reg:DI 0 ax [1784])
        (const_int 0 [0])) "ETAFLD2.f":189 85 {*movdi_internal}
     (nil))
(insn 190 189 5826 10 (set (reg:DI 2 cx [1785])
        (const_int 12 [0xc])) "ETAFLD2.f":189 85 {*movdi_internal}
     (nil))
(insn 5826 190 191 10 (set (reg/f:DI 5 di [1783])
        (reg/f:DI 1 dx [1783])) "ETAFLD2.f":189 85 {*movdi_internal}
     (nil))
(insn 191 5826 5827 10 (parallel [
            (set (reg:DI 2 cx [1785])
                (const_int 0 [0]))
            (set (reg/f:DI 5 di [1783])
                (plus:DI (ashift:DI (reg:DI 2 cx [1785])
                        (const_int 3 [0x3]))
                    (reg/f:DI 5 di [1783])))
            (set (mem/c:BLK (reg/f:DI 5 di [1783]) [1 rqstfld.id+0 S96 A128])
                (const_int 0 [0]))
            (use (reg:DI 0 ax [1784]))
            (use (reg:DI 2 cx [1785]))
        ]) "ETAFLD2.f":189 984 {*rep_stosdi_rex64}
     (nil))
(insn 5827 191 192 10 (set (reg/f:DI 1 dx [1783])
        (reg/f:DI 5 di [1783])) "ETAFLD2.f":189 85 {*movdi_internal}
     (nil))
(insn 192 5827 193 10 (set (mem/c:SI (reg/f:DI 1 dx [1783]) [1 rqstfld.id+96 S4 A128])
        (reg:SI 0 ax [1784])) "ETAFLD2.f":189 86 {*movsi_internal}
     (nil))
(insn 193 192 194 10 (parallel [
            (set (reg/f:DI 1 dx [1783])
                (plus:DI (reg/f:DI 1 dx [1783])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":189 222 {*adddi_1}
     (nil))
(insn 194 193 195 10 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -808 [0xfffffffffffffcd8])) [7 dt_parm.10.common.filename+0 S8 A64])
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7f9827f943f0 *.LC6>)) "ETAFLD2.f":198 85 {*movdi_internal}
     (nil))
(insn 195 194 196 10 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -800 [0xfffffffffffffce0])) [1 dt_parm.10.common.line+0 S4 A128])
        (const_int 198 [0xc6])) "ETAFLD2.f":198 86 {*movsi_internal}
     (nil))
(insn 196 195 197 10 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -816 [0xfffffffffffffcd0])) [1 dt_parm.10.common.flags+0 S4 A128])
        (const_int 128 [0x80])) "ETAFLD2.f":198 86 {*movsi_internal}
     (nil))
(insn 197 196 198 10 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -812 [0xfffffffffffffcd4])) [1 dt_parm.10.common.unit+0 S4 A32])
        (const_int 6 [0x6])) "ETAFLD2.f":198 86 {*movsi_internal}
     (nil))
(insn 198 197 199 10 (parallel [
            (set (reg:DI 0 ax [1786])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -816 [0xfffffffffffffcd0])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":198 222 {*adddi_1}
     (nil))
(insn 199 198 200 10 (set (reg:DI 5 di)
        (reg:DI 0 ax [1786])) "ETAFLD2.f":198 85 {*movdi_internal}
     (nil))
(call_insn 200 199 201 10 (call (mem:QI (symbol_ref:DI ("_gfortran_st_write") [flags 0x41]  <function_decl 0x7f9828225400 _gfortran_st_write>) [0 _gfortran_st_write S1 A8])
        (const_int 0 [0])) "ETAFLD2.f":198 689 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 201 200 202 10 (parallel [
            (set (reg:DI 0 ax [1787])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -816 [0xfffffffffffffcd0])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":198 222 {*adddi_1}
     (nil))
(insn 202 201 203 10 (set (reg:DI 1 dx)
        (const_int 29 [0x1d])) "ETAFLD2.f":198 85 {*movdi_internal}
     (nil))
(insn 203 202 204 10 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7f9827f94480 *.LC7>)) "ETAFLD2.f":198 85 {*movdi_internal}
     (nil))
(insn 204 203 205 10 (set (reg:DI 5 di)
        (reg:DI 0 ax [1787])) "ETAFLD2.f":198 85 {*movdi_internal}
     (nil))
(call_insn 205 204 206 10 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_character_write") [flags 0x41]  <function_decl 0x7f9828222500 _gfortran_transfer_character_write>) [0 _gfortran_transfer_character_write S1 A8])
        (const_int 0 [0])) "ETAFLD2.f":198 689 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 206 205 207 10 (parallel [
            (set (reg:DI 0 ax [1788])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -816 [0xfffffffffffffcd0])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":198 222 {*adddi_1}
     (nil))
(insn 207 206 208 10 (set (reg:DI 5 di)
        (reg:DI 0 ax [1788])) "ETAFLD2.f":198 85 {*movdi_internal}
     (nil))
(call_insn 208 207 209 10 (call (mem:QI (symbol_ref:DI ("_gfortran_st_write_done") [flags 0x41]  <function_decl 0x7f9828225f00 _gfortran_st_write_done>) [0 _gfortran_st_write_done S1 A8])
        (const_int 0 [0])) "ETAFLD2.f":198 689 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 209 208 210 10 (set (reg:SI 0 ax [orig:117 _31 ] [117])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 432 [0x1b0]))) [1 rqstfld.iget+416 S4 A128])) "ETAFLD2.f":200 86 {*movsi_internal}
     (nil))
(insn 210 209 211 10 (set (reg:DI 0 ax [orig:118 _32 ] [118])
        (sign_extend:DI (reg:SI 0 ax [orig:117 _31 ] [117]))) "ETAFLD2.f":200 149 {*extendsidi2_rex64}
     (nil))
(insn 211 210 212 10 (parallel [
            (set (reg:DI 1 dx [orig:119 _33 ] [119])
                (plus:DI (reg:DI 0 ax [orig:118 _32 ] [118])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":200 222 {*adddi_1}
     (nil))
(insn 212 211 213 10 (set (reg:DI 0 ax [1789])
        (reg:DI 1 dx [orig:119 _33 ] [119])) "ETAFLD2.f":200 85 {*movdi_internal}
     (nil))
(insn 213 212 215 10 (parallel [
            (set (reg:DI 0 ax [1790])
                (ashift:DI (reg:DI 0 ax [1789])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":200 551 {*ashldi3_1}
     (nil))
(insn 215 213 216 10 (parallel [
            (set (reg:DI 0 ax [1789])
                (minus:DI (reg:DI 0 ax [1789])
                    (reg:DI 1 dx [orig:119 _33 ] [119])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":200 278 {*subdi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:119 _33 ] [119])
            (const_int 15 [0xf]))
        (nil)))
(insn 216 215 219 10 (parallel [
            (set (reg:DI 0 ax [1791])
                (ashift:DI (reg:DI 0 ax [1789])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":200 551 {*ashldi3_1}
     (nil))
(insn 219 216 220 10 (parallel [
            (set (reg:DI 0 ax [1792])
                (plus:DI (reg:DI 0 ax [orig:120 _34 ] [120])
                    (const_int 1404 [0x57c])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":200 222 {*adddi_1}
     (nil))
(insn 220 219 221 10 (parallel [
            (set (reg:DI 0 ax [1793])
                (ashift:DI (reg:DI 0 ax [1792])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":200 551 {*ashldi3_1}
     (nil))
(insn 221 220 222 10 (parallel [
            (set (reg/f:DI 1 dx [orig:121 _35 ] [121])
                (plus:DI (reg:DI 0 ax [1793])
                    (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":200 222 {*adddi_1}
     (nil))
(insn 222 221 223 10 (set (reg:DI 4 si [1794])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -832 [0xfffffffffffffcc0])) [11 jmout+0 S8 A64])) "ETAFLD2.f":200 85 {*movdi_internal}
     (nil))
(insn 223 222 224 10 (set (reg:DI 2 cx [1795])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -824 [0xfffffffffffffcc8])) [11 imout+0 S8 A64])) "ETAFLD2.f":200 85 {*movdi_internal}
     (nil))
(insn 224 223 225 10 (set (reg:DI 0 ax [1796])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "ETAFLD2.f":200 85 {*movdi_internal}
     (nil))
(insn 225 224 226 10 (set (reg:DI 38 r9)
        (reg:DI 4 si [1794])) "ETAFLD2.f":200 85 {*movdi_internal}
     (nil))
(insn 226 225 227 10 (set (reg:DI 37 r8)
        (reg:DI 2 cx [1795])) "ETAFLD2.f":200 85 {*movdi_internal}
     (nil))
(insn 227 226 229 10 (set (reg:DI 2 cx)
        (reg:DI 0 ax [1796])) "ETAFLD2.f":200 85 {*movdi_internal}
     (nil))
(insn 229 227 230 10 (set (reg:DI 4 si)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                (const_int 432 [0x1b0])))) "ETAFLD2.f":200 85 {*movdi_internal}
     (nil))
(insn 230 229 231 10 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                (const_int 4 [0x4])))) "ETAFLD2.f":200 85 {*movdi_internal}
     (nil))
(insn 231 230 232 10 (set (reg:QI 0 ax)
        (const_int 0 [0])) "ETAFLD2.f":200 88 {*movqi_internal}
     (nil))
(call_insn 232 231 233 10 (call (mem:QI (symbol_ref:DI ("output_") [flags 0x41]  <function_decl 0x7f9828228700 output>) [0 output S1 A8])
        (const_int 0 [0])) "ETAFLD2.f":200 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
;;  succ:       11 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 11, loop depth 0, maybe hot
;;  prev block 10, next block 12, flags: (RTL, MODIFIED)
;;  pred:       9
;;              10 (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 1658 1659
(code_label 233 232 234 11 8 (nil) [1 uses])
(note 234 233 235 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 235 234 236 11 (set (reg:QI 0 ax)
        (const_int 0 [0])) "ETAFLD2.f":205 88 {*movqi_internal}
     (nil))
(call_insn 236 235 237 11 (call (mem:QI (symbol_ref:DI ("blosfc2_") [flags 0x41]  <function_decl 0x7f9828228900 blosfc2>) [0 blosfc2 S1 A8])
        (const_int 0 [0])) "ETAFLD2.f":205 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (nil)))
(insn 237 236 238 11 (set (reg:SI 1 dx [orig:1658 _1762 ] [1658])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f982824fc60 parallel>)
                    (const_int 8 [0x8]))) [1 parallel.jsta+0 S4 A64])) "ETAFLD2.f":210 86 {*movsi_internal}
     (nil))
(insn 238 237 239 11 (set (reg:SI 0 ax [orig:1659 _1763 ] [1659])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f982824fc60 parallel>)
                    (const_int 12 [0xc]))) [1 parallel.jend+0 S4 A32])) "ETAFLD2.f":210 86 {*movsi_internal}
     (nil))
(insn 239 238 303 11 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])
        (reg:SI 1 dx [orig:1658 _1762 ] [1658])) "ETAFLD2.f":210 86 {*movsi_internal}
     (nil))
;;  succ:       12 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1659

;; basic block 12, loop depth 0, maybe hot
;;  prev block 11, next block 13, flags: (RTL, MODIFIED)
;;  pred:       11 (FALLTHRU)
;;              16 [always] 
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1659
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1659
;; lr  def 	 17 [flags] 1660 1797
(code_label 303 239 240 12 12 (nil) [1 uses])
(note 240 303 241 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 241 240 242 12 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])
            (reg:SI 0 ax [orig:1659 _1763 ] [1659]))) "ETAFLD2.f":210 11 {*cmpsi_1}
     (nil))
(insn 242 241 243 12 (set (reg:QI 1 dx [1797])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "ETAFLD2.f":210 678 {*setcc_qi}
     (nil))
(insn 243 242 244 12 (set (reg:SI 1 dx [orig:1660 _1766 ] [1660])
        (zero_extend:SI (reg:QI 1 dx [1797]))) "ETAFLD2.f":210 140 {*zero_extendqisi2}
     (nil))
(insn 244 243 245 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1660 _1766 ] [1660])
            (const_int 0 [0]))) "ETAFLD2.f":210 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 245 244 246 12 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 5696)
            (pc))) "ETAFLD2.f":210 682 {*jcc}
     (nil)
 -> 5696)
;;  succ:       363
;;              13 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1659

;; basic block 13, loop depth 0, maybe hot
;;  prev block 12, next block 14, flags: (RTL, MODIFIED)
;;  pred:       12 (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1659
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 246 245 247 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 247 246 297 13 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
        (const_int 1 [0x1])) "ETAFLD2.f":211 86 {*movsi_internal}
     (nil))
;;  succ:       14 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1659

;; basic block 14, loop depth 0, maybe hot
;;  prev block 13, next block 15, flags: (RTL, MODIFIED)
;;  pred:       13 (FALLTHRU)
;;              15 [always] 
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1659
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1661 1798
(code_label 297 247 248 14 11 (nil) [1 uses])
(note 248 297 249 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 249 248 250 14 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
            (const_int 119 [0x77]))) "ETAFLD2.f":211 11 {*cmpsi_1}
     (nil))
(insn 250 249 251 14 (set (reg:QI 1 dx [1798])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "ETAFLD2.f":211 678 {*setcc_qi}
     (nil))
(insn 251 250 252 14 (set (reg:SI 1 dx [orig:1661 _1768 ] [1661])
        (zero_extend:SI (reg:QI 1 dx [1798]))) "ETAFLD2.f":211 140 {*zero_extendqisi2}
     (nil))
(insn 252 251 253 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1661 _1768 ] [1661])
            (const_int 0 [0]))) "ETAFLD2.f":211 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 253 252 254 14 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 5699)
            (pc))) "ETAFLD2.f":211 682 {*jcc}
     (nil)
 -> 5699)
;;  succ:       364
;;              15 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1659

;; basic block 15, loop depth 0, maybe hot
;;  prev block 14, next block 364, flags: (RTL, MODIFIED)
;;  pred:       14 (FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1659
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 1799 1800 1801 1802 1803 1804 1805 1806 1807 1808 1809 1810 1811 1812 1813 1814
(note 254 253 255 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 255 254 256 15 (set (reg:SI 1 dx [1799])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])) "ETAFLD2.f":212 86 {*movsi_internal}
     (nil))
(insn 256 255 257 15 (set (reg:DI 1 dx [orig:122 _36 ] [122])
        (sign_extend:DI (reg:SI 1 dx [1799]))) "ETAFLD2.f":212 149 {*extendsidi2_rex64}
     (nil))
(insn 257 256 258 15 (parallel [
            (set (reg:DI 2 cx [orig:123 _37 ] [123])
                (mult:DI (reg:DI 1 dx [orig:122 _36 ] [122])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":212 349 {*muldi3_1}
     (nil))
(insn 258 257 259 15 (set (reg:SI 1 dx [1800])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "ETAFLD2.f":212 86 {*movsi_internal}
     (nil))
(insn 259 258 260 15 (set (reg:DI 1 dx [orig:124 _38 ] [124])
        (sign_extend:DI (reg:SI 1 dx [1800]))) "ETAFLD2.f":212 149 {*extendsidi2_rex64}
     (nil))
(insn 260 259 261 15 (parallel [
            (set (reg:DI 1 dx [orig:125 _39 ] [125])
                (plus:DI (reg:DI 1 dx [orig:124 _38 ] [124])
                    (reg:DI 2 cx [orig:123 _37 ] [123])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":212 222 {*adddi_1}
     (nil))
(insn 261 260 262 15 (parallel [
            (set (reg:DI 2 cx [orig:126 _40 ] [126])
                (plus:DI (reg:DI 1 dx [orig:125 _39 ] [125])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":212 222 {*adddi_1}
     (nil))
(insn 262 261 263 15 (set (reg/f:DI 1 dx [1801])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7f982825bcf0 vrbls>)) "ETAFLD2.f":212 85 {*movdi_internal}
     (nil))
(insn 263 262 264 15 (parallel [
            (set (reg:DI 2 cx [1802])
                (plus:DI (reg:DI 2 cx [orig:126 _40 ] [126])
                    (const_int 59262 [0xe77e])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":212 222 {*adddi_1}
     (nil))
(insn 264 263 265 15 (set (reg:SF 22 xmm1 [orig:127 _41 ] [127])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [1802])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1801])) [2 vrbls.fis S4 A32])) "ETAFLD2.f":212 131 {*movsf_internal}
     (nil))
(insn 265 264 266 15 (set (reg:SI 1 dx [1803])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])) "ETAFLD2.f":212 86 {*movsi_internal}
     (nil))
(insn 266 265 267 15 (set (reg:DI 1 dx [orig:128 _42 ] [128])
        (sign_extend:DI (reg:SI 1 dx [1803]))) "ETAFLD2.f":212 149 {*extendsidi2_rex64}
     (nil))
(insn 267 266 268 15 (parallel [
            (set (reg:DI 2 cx [orig:129 _43 ] [129])
                (mult:DI (reg:DI 1 dx [orig:128 _42 ] [128])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":212 349 {*muldi3_1}
     (nil))
(insn 268 267 269 15 (set (reg:SI 1 dx [1804])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "ETAFLD2.f":212 86 {*movsi_internal}
     (nil))
(insn 269 268 270 15 (set (reg:DI 1 dx [orig:130 _44 ] [130])
        (sign_extend:DI (reg:SI 1 dx [1804]))) "ETAFLD2.f":212 149 {*extendsidi2_rex64}
     (nil))
(insn 270 269 271 15 (parallel [
            (set (reg:DI 1 dx [orig:131 _45 ] [131])
                (plus:DI (reg:DI 1 dx [orig:130 _44 ] [130])
                    (reg:DI 2 cx [orig:129 _43 ] [129])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":212 222 {*adddi_1}
     (nil))
(insn 271 270 272 15 (parallel [
            (set (reg:DI 2 cx [orig:132 _46 ] [132])
                (plus:DI (reg:DI 1 dx [orig:131 _45 ] [131])
                    (const_int 1125858 [0x112de2])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":212 222 {*adddi_1}
     (nil))
(insn 272 271 273 15 (set (reg:SF 21 xmm0 [1805])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC8") [flags 0x2]) [0  S4 A32])) "ETAFLD2.f":212 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0204081237316131591796875e-1 [0x0.d0fac6p-3])
        (nil)))
(insn 273 272 274 15 (set (reg:SF 21 xmm0 [orig:133 _47 ] [133])
        (mult:SF (reg:SF 21 xmm0 [1805])
            (reg:SF 22 xmm1 [orig:127 _41 ] [127]))) "ETAFLD2.f":212 838 {*fop_sf_comm}
     (nil))
(insn 274 273 275 15 (set (reg/f:DI 1 dx [1806])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f9828240b40 extra>)) "ETAFLD2.f":212 85 {*movdi_internal}
     (nil))
(insn 275 274 276 15 (parallel [
            (set (reg:DI 2 cx [1807])
                (plus:DI (reg:DI 2 cx [orig:132 _46 ] [132])
                    (const_int 2311218 [0x234432])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":212 222 {*adddi_1}
     (nil))
(insn 276 275 277 15 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [1807])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1806])) [2 extra.zint S4 A32])
        (reg:SF 21 xmm0 [orig:133 _47 ] [133])) "ETAFLD2.f":212 131 {*movsf_internal}
     (nil))
(insn 277 276 278 15 (set (reg:SI 1 dx [1808])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])) "ETAFLD2.f":213 86 {*movsi_internal}
     (nil))
(insn 278 277 279 15 (set (reg:DI 1 dx [orig:134 _48 ] [134])
        (sign_extend:DI (reg:SI 1 dx [1808]))) "ETAFLD2.f":213 149 {*extendsidi2_rex64}
     (nil))
(insn 279 278 280 15 (parallel [
            (set (reg:DI 2 cx [orig:135 _49 ] [135])
                (mult:DI (reg:DI 1 dx [orig:134 _48 ] [134])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":213 349 {*muldi3_1}
     (nil))
(insn 280 279 281 15 (set (reg:SI 1 dx [1809])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "ETAFLD2.f":213 86 {*movsi_internal}
     (nil))
(insn 281 280 282 15 (set (reg:DI 1 dx [orig:136 _50 ] [136])
        (sign_extend:DI (reg:SI 1 dx [1809]))) "ETAFLD2.f":213 149 {*extendsidi2_rex64}
     (nil))
(insn 282 281 283 15 (parallel [
            (set (reg:DI 1 dx [orig:137 _51 ] [137])
                (plus:DI (reg:DI 1 dx [orig:136 _50 ] [136])
                    (reg:DI 2 cx [orig:135 _49 ] [135])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":213 222 {*adddi_1}
     (nil))
(insn 283 282 284 15 (parallel [
            (set (reg:DI 4 si [orig:138 _52 ] [138])
                (plus:DI (reg:DI 1 dx [orig:137 _51 ] [137])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":213 222 {*adddi_1}
     (nil))
(insn 284 283 285 15 (set (reg:SI 1 dx [1810])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])) "ETAFLD2.f":213 86 {*movsi_internal}
     (nil))
(insn 285 284 286 15 (set (reg:DI 1 dx [orig:139 _53 ] [139])
        (sign_extend:DI (reg:SI 1 dx [1810]))) "ETAFLD2.f":213 149 {*extendsidi2_rex64}
     (nil))
(insn 286 285 287 15 (parallel [
            (set (reg:DI 2 cx [orig:140 _54 ] [140])
                (mult:DI (reg:DI 1 dx [orig:139 _53 ] [139])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":213 349 {*muldi3_1}
     (nil))
(insn 287 286 288 15 (set (reg:SI 1 dx [1811])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "ETAFLD2.f":213 86 {*movsi_internal}
     (nil))
(insn 288 287 289 15 (set (reg:DI 1 dx [orig:141 _55 ] [141])
        (sign_extend:DI (reg:SI 1 dx [1811]))) "ETAFLD2.f":213 149 {*extendsidi2_rex64}
     (nil))
(insn 289 288 290 15 (parallel [
            (set (reg:DI 1 dx [orig:142 _56 ] [142])
                (plus:DI (reg:DI 1 dx [orig:141 _55 ] [141])
                    (reg:DI 2 cx [orig:140 _54 ] [140])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":213 222 {*adddi_1}
     (nil))
(insn 290 289 291 15 (parallel [
            (set (reg:DI 2 cx [orig:143 _57 ] [143])
                (plus:DI (reg:DI 1 dx [orig:142 _56 ] [142])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":213 222 {*adddi_1}
     (nil))
(insn 291 290 292 15 (set (reg/f:DI 1 dx [1812])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7f982825bcf0 vrbls>)) "ETAFLD2.f":213 85 {*movdi_internal}
     (nil))
(insn 292 291 293 15 (parallel [
            (set (reg:DI 4 si [1813])
                (plus:DI (reg:DI 4 si [orig:138 _52 ] [138])
                    (const_int 59262 [0xe77e])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":213 222 {*adddi_1}
     (nil))
(insn 293 292 294 15 (set (reg:SF 21 xmm0 [orig:144 _58 ] [144])
        (mem:SF (plus:DI (mult:DI (reg:DI 4 si [1813])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1812])) [2 vrbls.fis S4 A32])) "ETAFLD2.f":213 131 {*movsf_internal}
     (nil))
(insn 294 293 295 15 (set (reg/f:DI 1 dx [1814])
        (symbol_ref:DI ("fi.4396") [flags 0x202]  <var_decl 0x7f9828263f30 fi>)) "ETAFLD2.f":213 85 {*movdi_internal}
     (nil))
(insn 295 294 296 15 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:143 _57 ] [143])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1814])) [2 fi S4 A32])
        (reg:SF 21 xmm0 [orig:144 _58 ] [144])) "ETAFLD2.f":213 131 {*movsf_internal}
     (nil))
(insn 296 295 5584 15 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":211 221 {*addsi_1}
     (nil))
(jump_insn 5584 296 5585 15 (set (pc)
        (label_ref 297)) "ETAFLD2.f":211 683 {jump}
     (nil)
 -> 297)
;;  succ:       14 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1659

(barrier 5585 5584 5699)
;; basic block 364, loop depth 0, maybe hot
;;  prev block 15, next block 16, flags: (RTL, MODIFIED)
;;  pred:       14
;; bb 364 artificial_defs: { }
;; bb 364 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1659
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 5699 5585 5698 364 224 (nil) [1 uses])
(note 5698 5699 5700 364 [bb 364] NOTE_INSN_BASIC_BLOCK)
(insn 5700 5698 300 364 (const_int 0 [0]) "ETAFLD2.f":213 718 {nop}
     (nil))
;;  succ:       16 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1659

;; basic block 16, loop depth 0, maybe hot
;;  prev block 364, next block 363, flags: (RTL, MODIFIED)
;;  pred:       364 [always]  (FALLTHRU)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1659
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 300 5700 301 16 10 (nil) [0 uses])
(note 301 300 302 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 302 301 5586 16 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":210 221 {*addsi_1}
     (nil))
(jump_insn 5586 302 5587 16 (set (pc)
        (label_ref 303)) "ETAFLD2.f":210 683 {jump}
     (nil)
 -> 303)
;;  succ:       12 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1659

(barrier 5587 5586 5696)
;; basic block 363, loop depth 0, maybe hot
;;  prev block 16, next block 17, flags: (RTL, MODIFIED)
;;  pred:       12
;; bb 363 artificial_defs: { }
;; bb 363 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 5696 5587 5695 363 223 (nil) [1 uses])
(note 5695 5696 5697 363 [bb 363] NOTE_INSN_BASIC_BLOCK)
(insn 5697 5695 306 363 (const_int 0 [0]) "ETAFLD2.f":211 718 {nop}
     (nil))
;;  succ:       17 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 17, loop depth 0, maybe hot
;;  prev block 363, next block 18, flags: (RTL, MODIFIED)
;;  pred:       363 [always]  (FALLTHRU)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 306 5697 307 17 9 (nil) [0 uses])
(note 307 306 308 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 308 307 496 17 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])
        (const_int 38 [0x26])) "ETAFLD2.f":219 86 {*movsi_internal}
     (nil))
;;  succ:       18 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 18, loop depth 0, maybe hot
;;  prev block 17, next block 19, flags: (RTL, MODIFIED)
;;  pred:       17 (FALLTHRU)
;;              25 [always] 
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 145 1662 1815
(code_label 496 308 309 18 18 (nil) [1 uses])
(note 309 496 310 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 310 309 311 18 (set (reg:SI 0 ax [orig:145 l.23_59 ] [145])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":219 86 {*movsi_internal}
     (nil))
(insn 311 310 312 18 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:145 l.23_59 ] [145])
            (const_int 0 [0]))) "ETAFLD2.f":219 7 {*cmpsi_ccno_1}
     (nil))
(insn 312 311 313 18 (set (reg:QI 0 ax [1815])
        (le:QI (reg:CCNO 17 flags)
            (const_int 0 [0]))) "ETAFLD2.f":219 678 {*setcc_qi}
     (nil))
(insn 313 312 314 18 (set (reg:SI 0 ax [orig:1662 _1774 ] [1662])
        (zero_extend:SI (reg:QI 0 ax [1815]))) "ETAFLD2.f":219 140 {*zero_extendqisi2}
     (nil))
(insn 314 313 315 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:1662 _1774 ] [1662])
            (const_int 0 [0]))) "ETAFLD2.f":219 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 315 314 316 18 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 5702)
            (pc))) "ETAFLD2.f":219 682 {*jcc}
     (nil)
 -> 5702)
;;  succ:       365
;;              19 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 19, loop depth 0, maybe hot
;;  prev block 18, next block 20, flags: (RTL, MODIFIED)
;;  pred:       18 (FALLTHRU)
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 1663 1664
(note 316 315 317 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 317 316 318 19 (set (reg:SI 1 dx [orig:1663 _1775 ] [1663])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f982824fc60 parallel>)
                    (const_int 8 [0x8]))) [1 parallel.jsta+0 S4 A64])) "ETAFLD2.f":221 86 {*movsi_internal}
     (nil))
(insn 318 317 319 19 (set (reg:SI 0 ax [orig:1664 _1776 ] [1664])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f982824fc60 parallel>)
                    (const_int 12 [0xc]))) [1 parallel.jend+0 S4 A32])) "ETAFLD2.f":221 86 {*movsi_internal}
     (nil))
(insn 319 318 488 19 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])
        (reg:SI 1 dx [orig:1663 _1775 ] [1663])) "ETAFLD2.f":221 86 {*movsi_internal}
     (nil))
;;  succ:       20 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1664

;; basic block 20, loop depth 0, maybe hot
;;  prev block 19, next block 21, flags: (RTL, MODIFIED)
;;  pred:       19 (FALLTHRU)
;;              24 [always] 
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1664
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1664
;; lr  def 	 17 [flags] 1665 1816
(code_label 488 319 320 20 17 (nil) [1 uses])
(note 320 488 321 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 321 320 322 20 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])
            (reg:SI 0 ax [orig:1664 _1776 ] [1664]))) "ETAFLD2.f":221 11 {*cmpsi_1}
     (nil))
(insn 322 321 323 20 (set (reg:QI 1 dx [1816])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "ETAFLD2.f":221 678 {*setcc_qi}
     (nil))
(insn 323 322 324 20 (set (reg:SI 1 dx [orig:1665 _1778 ] [1665])
        (zero_extend:SI (reg:QI 1 dx [1816]))) "ETAFLD2.f":221 140 {*zero_extendqisi2}
     (nil))
(insn 324 323 325 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1665 _1778 ] [1665])
            (const_int 0 [0]))) "ETAFLD2.f":221 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 325 324 326 20 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 5705)
            (pc))) "ETAFLD2.f":221 682 {*jcc}
     (nil)
 -> 5705)
;;  succ:       366
;;              21 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1664

;; basic block 21, loop depth 0, maybe hot
;;  prev block 20, next block 22, flags: (RTL, MODIFIED)
;;  pred:       20 (FALLTHRU)
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1664
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 326 325 327 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 327 326 482 21 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
        (const_int 1 [0x1])) "ETAFLD2.f":222 86 {*movsi_internal}
     (nil))
;;  succ:       22 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1664

;; basic block 22, loop depth 0, maybe hot
;;  prev block 21, next block 23, flags: (RTL, MODIFIED)
;;  pred:       21 (FALLTHRU)
;;              23 [always] 
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1664
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1666 1817
(code_label 482 327 328 22 16 (nil) [1 uses])
(note 328 482 329 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 329 328 330 22 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
            (const_int 119 [0x77]))) "ETAFLD2.f":222 11 {*cmpsi_1}
     (nil))
(insn 330 329 331 22 (set (reg:QI 1 dx [1817])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "ETAFLD2.f":222 678 {*setcc_qi}
     (nil))
(insn 331 330 332 22 (set (reg:SI 1 dx [orig:1666 _1780 ] [1666])
        (zero_extend:SI (reg:QI 1 dx [1817]))) "ETAFLD2.f":222 140 {*zero_extendqisi2}
     (nil))
(insn 332 331 333 22 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1666 _1780 ] [1666])
            (const_int 0 [0]))) "ETAFLD2.f":222 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 333 332 334 22 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 5708)
            (pc))) "ETAFLD2.f":222 682 {*jcc}
     (nil)
 -> 5708)
;;  succ:       367
;;              23 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1664

;; basic block 23, loop depth 0, maybe hot
;;  prev block 22, next block 367, flags: (RTL, MODIFIED)
;;  pred:       22 (FALLTHRU)
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1664
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 1818 1819 1820 1821 1822 1823 1824 1825 1826 1827 1828 1829 1830 1831 1832 1833 1834 1835 1836 1837 1838 1839 1840 1841 1842 1843 1844 1845 1846 1847 1848 1849 1850 1851 1852 1853 1854 1855 1856 1857 1858 1859 1860
(note 334 333 335 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 335 334 336 23 (set (reg:SI 1 dx [orig:146 l.24_60 ] [146])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":224 86 {*movsi_internal}
     (nil))
(insn 336 335 337 23 (set (reg:DI 1 dx [orig:147 _61 ] [147])
        (sign_extend:DI (reg:SI 1 dx [orig:146 l.24_60 ] [146]))) "ETAFLD2.f":224 149 {*extendsidi2_rex64}
     (nil))
(insn 337 336 338 23 (parallel [
            (set (reg:DI 2 cx [orig:148 _62 ] [148])
                (mult:DI (reg:DI 1 dx [orig:147 _61 ] [147])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":224 349 {*muldi3_1}
     (nil))
(insn 338 337 339 23 (set (reg:SI 1 dx [1818])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])) "ETAFLD2.f":224 86 {*movsi_internal}
     (nil))
(insn 339 338 340 23 (set (reg:DI 1 dx [orig:149 _63 ] [149])
        (sign_extend:DI (reg:SI 1 dx [1818]))) "ETAFLD2.f":224 149 {*extendsidi2_rex64}
     (nil))
(insn 340 339 341 23 (parallel [
            (set (reg:DI 1 dx [orig:150 _64 ] [150])
                (mult:DI (reg:DI 1 dx [orig:149 _63 ] [149])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":224 349 {*muldi3_1}
     (nil))
(insn 341 340 342 23 (parallel [
            (set (reg:DI 2 cx [orig:151 _65 ] [151])
                (plus:DI (reg:DI 2 cx [orig:148 _62 ] [148])
                    (reg:DI 1 dx [orig:150 _64 ] [150])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":224 222 {*adddi_1}
     (nil))
(insn 342 341 343 23 (set (reg:SI 1 dx [1819])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "ETAFLD2.f":224 86 {*movsi_internal}
     (nil))
(insn 343 342 344 23 (set (reg:DI 1 dx [orig:152 _66 ] [152])
        (sign_extend:DI (reg:SI 1 dx [1819]))) "ETAFLD2.f":224 149 {*extendsidi2_rex64}
     (nil))
(insn 344 343 345 23 (parallel [
            (set (reg:DI 1 dx [orig:153 _67 ] [153])
                (plus:DI (reg:DI 1 dx [orig:152 _66 ] [152])
                    (reg:DI 2 cx [orig:151 _65 ] [151])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":224 222 {*adddi_1}
     (nil))
(insn 345 344 346 23 (parallel [
            (set (reg:DI 2 cx [orig:154 _68 ] [154])
                (plus:DI (reg:DI 1 dx [orig:153 _67 ] [153])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":224 222 {*adddi_1}
     (nil))
(insn 346 345 347 23 (set (reg/f:DI 1 dx [1820])
        (symbol_ref:DI ("masks_") [flags 0x202]  <var_decl 0x7f982824f480 masks>)) "ETAFLD2.f":224 85 {*movdi_internal}
     (nil))
(insn 347 346 348 23 (parallel [
            (set (reg:DI 2 cx [1821])
                (plus:DI (reg:DI 2 cx [orig:154 _68 ] [154])
                    (const_int 148155 [0x242bb])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":224 222 {*adddi_1}
     (nil))
(insn 348 347 349 23 (set (reg:SF 22 xmm1 [orig:155 _69 ] [155])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [1821])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1820])) [2 masks.htm S4 A32])) "ETAFLD2.f":224 131 {*movsf_internal}
     (nil))
(insn 349 348 350 23 (set (reg:SI 1 dx [orig:156 l.25_70 ] [156])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":224 86 {*movsi_internal}
     (nil))
(insn 350 349 351 23 (set (reg:DI 1 dx [orig:157 _71 ] [157])
        (sign_extend:DI (reg:SI 1 dx [orig:156 l.25_70 ] [156]))) "ETAFLD2.f":224 149 {*extendsidi2_rex64}
     (nil))
(insn 351 350 352 23 (parallel [
            (set (reg:DI 2 cx [orig:158 _72 ] [158])
                (mult:DI (reg:DI 1 dx [orig:157 _71 ] [157])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":224 349 {*muldi3_1}
     (nil))
(insn 352 351 353 23 (set (reg:SI 1 dx [1822])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])) "ETAFLD2.f":224 86 {*movsi_internal}
     (nil))
(insn 353 352 354 23 (set (reg:DI 1 dx [orig:159 _73 ] [159])
        (sign_extend:DI (reg:SI 1 dx [1822]))) "ETAFLD2.f":224 149 {*extendsidi2_rex64}
     (nil))
(insn 354 353 355 23 (parallel [
            (set (reg:DI 1 dx [orig:160 _74 ] [160])
                (mult:DI (reg:DI 1 dx [orig:159 _73 ] [159])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":224 349 {*muldi3_1}
     (nil))
(insn 355 354 356 23 (parallel [
            (set (reg:DI 2 cx [orig:161 _75 ] [161])
                (plus:DI (reg:DI 2 cx [orig:158 _72 ] [158])
                    (reg:DI 1 dx [orig:160 _74 ] [160])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":224 222 {*adddi_1}
     (nil))
(insn 356 355 357 23 (set (reg:SI 1 dx [1823])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "ETAFLD2.f":224 86 {*movsi_internal}
     (nil))
(insn 357 356 358 23 (set (reg:DI 1 dx [orig:162 _76 ] [162])
        (sign_extend:DI (reg:SI 1 dx [1823]))) "ETAFLD2.f":224 149 {*extendsidi2_rex64}
     (nil))
(insn 358 357 359 23 (parallel [
            (set (reg:DI 1 dx [orig:163 _77 ] [163])
                (plus:DI (reg:DI 1 dx [orig:162 _76 ] [162])
                    (reg:DI 2 cx [orig:161 _75 ] [161])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":224 222 {*adddi_1}
     (nil))
(insn 359 358 360 23 (parallel [
            (set (reg:DI 2 cx [orig:164 _78 ] [164])
                (plus:DI (reg:DI 1 dx [orig:163 _77 ] [163])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":224 222 {*adddi_1}
     (nil))
(insn 360 359 361 23 (set (reg/f:DI 1 dx [1824])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7f982825bcf0 vrbls>)) "ETAFLD2.f":224 85 {*movdi_internal}
     (nil))
(insn 361 360 362 23 (parallel [
            (set (reg:DI 2 cx [1825])
                (plus:DI (reg:DI 2 cx [orig:164 _78 ] [164])
                    (const_int 2340849 [0x23b7f1])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":224 222 {*adddi_1}
     (nil))
(insn 362 361 363 23 (set (reg:SF 21 xmm0 [orig:165 _79 ] [165])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [1825])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1824])) [2 vrbls.t S4 A32])) "ETAFLD2.f":224 131 {*movsf_internal}
     (nil))
(insn 363 362 364 23 (set (reg:SF 21 xmm0 [orig:166 _80 ] [166])
        (mult:SF (reg:SF 21 xmm0 [orig:165 _79 ] [165])
            (reg:SF 22 xmm1 [orig:155 _69 ] [155]))) "ETAFLD2.f":224 838 {*fop_sf_comm}
     (nil))
(insn 364 363 365 23 (set (reg:SI 1 dx [orig:167 l.26_81 ] [167])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":224 86 {*movsi_internal}
     (nil))
(insn 365 364 366 23 (set (reg:DI 1 dx [orig:168 _82 ] [168])
        (sign_extend:DI (reg:SI 1 dx [orig:167 l.26_81 ] [167]))) "ETAFLD2.f":224 149 {*extendsidi2_rex64}
     (nil))
(insn 366 365 367 23 (parallel [
            (set (reg:DI 2 cx [orig:169 _83 ] [169])
                (mult:DI (reg:DI 1 dx [orig:168 _82 ] [168])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":224 349 {*muldi3_1}
     (nil))
(insn 367 366 368 23 (set (reg:SI 1 dx [1826])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])) "ETAFLD2.f":224 86 {*movsi_internal}
     (nil))
(insn 368 367 369 23 (set (reg:DI 1 dx [orig:170 _84 ] [170])
        (sign_extend:DI (reg:SI 1 dx [1826]))) "ETAFLD2.f":224 149 {*extendsidi2_rex64}
     (nil))
(insn 369 368 370 23 (parallel [
            (set (reg:DI 1 dx [orig:171 _85 ] [171])
                (mult:DI (reg:DI 1 dx [orig:170 _84 ] [170])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":224 349 {*muldi3_1}
     (nil))
(insn 370 369 371 23 (parallel [
            (set (reg:DI 2 cx [orig:172 _86 ] [172])
                (plus:DI (reg:DI 2 cx [orig:169 _83 ] [169])
                    (reg:DI 1 dx [orig:171 _85 ] [171])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":224 222 {*adddi_1}
     (nil))
(insn 371 370 372 23 (set (reg:SI 1 dx [1827])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "ETAFLD2.f":224 86 {*movsi_internal}
     (nil))
(insn 372 371 373 23 (set (reg:DI 1 dx [orig:173 _87 ] [173])
        (sign_extend:DI (reg:SI 1 dx [1827]))) "ETAFLD2.f":224 149 {*extendsidi2_rex64}
     (nil))
(insn 373 372 374 23 (parallel [
            (set (reg:DI 1 dx [orig:174 _88 ] [174])
                (plus:DI (reg:DI 1 dx [orig:173 _87 ] [173])
                    (reg:DI 2 cx [orig:172 _86 ] [172])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":224 222 {*adddi_1}
     (nil))
(insn 374 373 375 23 (parallel [
            (set (reg:DI 2 cx [orig:175 _89 ] [175])
                (plus:DI (reg:DI 1 dx [orig:174 _88 ] [174])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":224 222 {*adddi_1}
     (nil))
(insn 375 374 376 23 (set (reg/f:DI 1 dx [1828])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7f982825bcf0 vrbls>)) "ETAFLD2.f":224 85 {*movdi_internal}
     (nil))
(insn 376 375 377 23 (parallel [
            (set (reg:DI 2 cx [1829])
                (plus:DI (reg:DI 2 cx [orig:175 _89 ] [175])
                    (const_int 3466827 [0x34e64b])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":224 222 {*adddi_1}
     (nil))
(insn 377 376 378 23 (set (reg:SF 23 xmm2 [orig:176 _90 ] [176])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [1829])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1828])) [2 vrbls.q S4 A32])) "ETAFLD2.f":224 131 {*movsf_internal}
     (nil))
(insn 378 377 379 23 (set (reg:SF 22 xmm1 [1830])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC9") [flags 0x2]) [0  S4 A32])) "ETAFLD2.f":224 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 6.07999980449676513671875e-1 [0x0.9ba5e3p+0])
        (nil)))
(insn 379 378 380 23 (set (reg:SF 23 xmm2 [orig:177 _91 ] [177])
        (mult:SF (reg:SF 23 xmm2 [orig:176 _90 ] [176])
            (reg:SF 22 xmm1 [1830]))) "ETAFLD2.f":224 838 {*fop_sf_comm}
     (nil))
(insn 380 379 381 23 (set (reg:SF 22 xmm1 [1831])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0  S4 A32])) "ETAFLD2.f":224 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 381 380 383 23 (set (reg:SF 22 xmm1 [orig:178 _92 ] [178])
        (plus:SF (reg:SF 22 xmm1 [1831])
            (reg:SF 23 xmm2 [orig:177 _91 ] [177]))) "ETAFLD2.f":224 838 {*fop_sf_comm}
     (nil))
(insn 383 381 384 23 (set (reg:SF 22 xmm1 [orig:180 _94 ] [180])
        (mult:SF (reg:SF 22 xmm1 [orig:179 _93 ] [179])
            (reg:SF 21 xmm0 [orig:166 _80 ] [166]))) "ETAFLD2.f":224 838 {*fop_sf_comm}
     (nil))
(insn 384 383 385 23 (set (reg/f:DI 1 dx [1832])
        (symbol_ref:DI ("mapot_") [flags 0x202]  <var_decl 0x7f982824b120 mapot>)) "ETAFLD2.f":1 85 {*movdi_internal}
     (nil))
(insn 385 384 386 23 (set (reg:SF 21 xmm0 [orig:181 _95 ] [181])
        (mem/c:SF (plus:DI (reg/f:DI 1 dx [1832])
                (const_int 4000008 [0x3d0908])) [2 mapot.r+0 S4 A64])) "ETAFLD2.f":1 131 {*movsf_internal}
     (nil))
(insn 386 385 387 23 (set (reg:SF 22 xmm1 [orig:182 _96 ] [182])
        (mult:SF (reg:SF 22 xmm1 [orig:180 _94 ] [180])
            (reg:SF 21 xmm0 [orig:181 _95 ] [181]))) "ETAFLD2.f":224 838 {*fop_sf_comm}
     (nil))
(insn 387 386 388 23 (set (reg:SI 1 dx [orig:183 l.27_97 ] [183])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":224 86 {*movsi_internal}
     (nil))
(insn 388 387 389 23 (parallel [
            (set (reg:SI 1 dx [orig:184 _98 ] [184])
                (plus:SI (reg:SI 1 dx [orig:183 l.27_97 ] [183])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":224 221 {*addsi_1}
     (nil))
(insn 389 388 390 23 (set (reg:DI 1 dx [orig:185 _99 ] [185])
        (sign_extend:DI (reg:SI 1 dx [orig:184 _98 ] [184]))) "ETAFLD2.f":224 149 {*extendsidi2_rex64}
     (nil))
(insn 390 389 391 23 (parallel [
            (set (reg:DI 2 cx [orig:186 _100 ] [186])
                (mult:DI (reg:DI 1 dx [orig:185 _99 ] [185])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":224 349 {*muldi3_1}
     (nil))
(insn 391 390 392 23 (set (reg:SI 1 dx [1833])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])) "ETAFLD2.f":224 86 {*movsi_internal}
     (nil))
(insn 392 391 393 23 (set (reg:DI 1 dx [orig:187 _101 ] [187])
        (sign_extend:DI (reg:SI 1 dx [1833]))) "ETAFLD2.f":224 149 {*extendsidi2_rex64}
     (nil))
(insn 393 392 394 23 (parallel [
            (set (reg:DI 1 dx [orig:188 _102 ] [188])
                (mult:DI (reg:DI 1 dx [orig:187 _101 ] [187])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":224 349 {*muldi3_1}
     (nil))
(insn 394 393 395 23 (parallel [
            (set (reg:DI 2 cx [orig:189 _103 ] [189])
                (plus:DI (reg:DI 2 cx [orig:186 _100 ] [186])
                    (reg:DI 1 dx [orig:188 _102 ] [188])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":224 222 {*adddi_1}
     (nil))
(insn 395 394 396 23 (set (reg:SI 1 dx [1834])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "ETAFLD2.f":224 86 {*movsi_internal}
     (nil))
(insn 396 395 397 23 (set (reg:DI 1 dx [orig:190 _104 ] [190])
        (sign_extend:DI (reg:SI 1 dx [1834]))) "ETAFLD2.f":224 149 {*extendsidi2_rex64}
     (nil))
(insn 397 396 398 23 (parallel [
            (set (reg:DI 1 dx [orig:191 _105 ] [191])
                (plus:DI (reg:DI 1 dx [orig:190 _104 ] [190])
                    (reg:DI 2 cx [orig:189 _103 ] [189])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":224 222 {*adddi_1}
     (nil))
(insn 398 397 399 23 (parallel [
            (set (reg:DI 2 cx [orig:192 _106 ] [192])
                (plus:DI (reg:DI 1 dx [orig:191 _105 ] [191])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":224 222 {*adddi_1}
     (nil))
(insn 399 398 400 23 (set (reg/f:DI 1 dx [1835])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f9828240b40 extra>)) "ETAFLD2.f":224 85 {*movdi_internal}
     (nil))
(insn 400 399 401 23 (parallel [
            (set (reg:DI 2 cx [1836])
                (plus:DI (reg:DI 2 cx [orig:192 _106 ] [192])
                    (const_int 1155609 [0x11a219])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":224 222 {*adddi_1}
     (nil))
(insn 401 400 402 23 (set (reg:SF 21 xmm0 [orig:193 _107 ] [193])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [1836])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1835])) [2 extra.alpint S4 A32])) "ETAFLD2.f":224 131 {*movsf_internal}
     (nil))
(insn 402 401 403 23 (set (reg:SI 1 dx [orig:194 l.28_108 ] [194])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":224 86 {*movsi_internal}
     (nil))
(insn 403 402 404 23 (set (reg:DI 1 dx [orig:195 _109 ] [195])
        (sign_extend:DI (reg:SI 1 dx [orig:194 l.28_108 ] [194]))) "ETAFLD2.f":224 149 {*extendsidi2_rex64}
     (nil))
(insn 404 403 405 23 (parallel [
            (set (reg:DI 2 cx [orig:196 _110 ] [196])
                (mult:DI (reg:DI 1 dx [orig:195 _109 ] [195])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":224 349 {*muldi3_1}
     (nil))
(insn 405 404 406 23 (set (reg:SI 1 dx [1837])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])) "ETAFLD2.f":224 86 {*movsi_internal}
     (nil))
(insn 406 405 407 23 (set (reg:DI 1 dx [orig:197 _111 ] [197])
        (sign_extend:DI (reg:SI 1 dx [1837]))) "ETAFLD2.f":224 149 {*extendsidi2_rex64}
     (nil))
(insn 407 406 408 23 (parallel [
            (set (reg:DI 1 dx [orig:198 _112 ] [198])
                (mult:DI (reg:DI 1 dx [orig:197 _111 ] [197])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":224 349 {*muldi3_1}
     (nil))
(insn 408 407 409 23 (parallel [
            (set (reg:DI 2 cx [orig:199 _113 ] [199])
                (plus:DI (reg:DI 2 cx [orig:196 _110 ] [196])
                    (reg:DI 1 dx [orig:198 _112 ] [198])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":224 222 {*adddi_1}
     (nil))
(insn 409 408 410 23 (set (reg:SI 1 dx [1838])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "ETAFLD2.f":224 86 {*movsi_internal}
     (nil))
(insn 410 409 411 23 (set (reg:DI 1 dx [orig:200 _114 ] [200])
        (sign_extend:DI (reg:SI 1 dx [1838]))) "ETAFLD2.f":224 149 {*extendsidi2_rex64}
     (nil))
(insn 411 410 412 23 (parallel [
            (set (reg:DI 1 dx [orig:201 _115 ] [201])
                (plus:DI (reg:DI 1 dx [orig:200 _114 ] [200])
                    (reg:DI 2 cx [orig:199 _113 ] [199])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":224 222 {*adddi_1}
     (nil))
(insn 412 411 413 23 (parallel [
            (set (reg:DI 2 cx [orig:202 _116 ] [202])
                (plus:DI (reg:DI 1 dx [orig:201 _115 ] [201])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":224 222 {*adddi_1}
     (nil))
(insn 413 412 414 23 (set (reg/f:DI 1 dx [1839])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f9828240b40 extra>)) "ETAFLD2.f":224 85 {*movdi_internal}
     (nil))
(insn 414 413 415 23 (parallel [
            (set (reg:DI 2 cx [1840])
                (plus:DI (reg:DI 2 cx [orig:202 _116 ] [202])
                    (const_int 1155609 [0x11a219])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":224 222 {*adddi_1}
     (nil))
(insn 415 414 416 23 (set (reg:SF 23 xmm2 [orig:203 _117 ] [203])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [1840])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1839])) [2 extra.alpint S4 A32])) "ETAFLD2.f":224 131 {*movsf_internal}
     (nil))
(insn 416 415 418 23 (set (reg:SF 21 xmm0 [orig:204 _118 ] [204])
        (minus:SF (reg:SF 21 xmm0 [orig:193 _107 ] [193])
            (reg:SF 23 xmm2 [orig:203 _117 ] [203]))) "ETAFLD2.f":224 841 {*fop_sf_1}
     (nil))
(insn 418 416 419 23 (set (reg:SF 22 xmm1 [orig:206 _120 ] [206])
        (mult:SF (reg:SF 22 xmm1 [orig:182 _96 ] [182])
            (reg:SF 21 xmm0 [orig:205 _119 ] [205]))) "ETAFLD2.f":224 838 {*fop_sf_comm}
     (nil))
(insn 419 418 420 23 (set (reg:SI 1 dx [1841])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])) "ETAFLD2.f":224 86 {*movsi_internal}
     (nil))
(insn 420 419 421 23 (set (reg:DI 1 dx [orig:207 _121 ] [207])
        (sign_extend:DI (reg:SI 1 dx [1841]))) "ETAFLD2.f":224 149 {*extendsidi2_rex64}
     (nil))
(insn 421 420 422 23 (parallel [
            (set (reg:DI 2 cx [orig:208 _122 ] [208])
                (mult:DI (reg:DI 1 dx [orig:207 _121 ] [207])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":224 349 {*muldi3_1}
     (nil))
(insn 422 421 423 23 (set (reg:SI 1 dx [1842])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "ETAFLD2.f":224 86 {*movsi_internal}
     (nil))
(insn 423 422 424 23 (set (reg:DI 1 dx [orig:209 _123 ] [209])
        (sign_extend:DI (reg:SI 1 dx [1842]))) "ETAFLD2.f":224 149 {*extendsidi2_rex64}
     (nil))
(insn 424 423 425 23 (parallel [
            (set (reg:DI 1 dx [orig:210 _124 ] [210])
                (plus:DI (reg:DI 1 dx [orig:209 _123 ] [209])
                    (reg:DI 2 cx [orig:208 _122 ] [208])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":224 222 {*adddi_1}
     (nil))
(insn 425 424 426 23 (parallel [
            (set (reg:DI 2 cx [orig:211 _125 ] [211])
                (plus:DI (reg:DI 1 dx [orig:210 _124 ] [210])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":224 222 {*adddi_1}
     (nil))
(insn 426 425 427 23 (set (reg/f:DI 1 dx [1843])
        (symbol_ref:DI ("fi.4396") [flags 0x202]  <var_decl 0x7f9828263f30 fi>)) "ETAFLD2.f":224 85 {*movdi_internal}
     (nil))
(insn 427 426 428 23 (set (reg:SF 21 xmm0 [orig:212 _126 ] [212])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:211 _125 ] [211])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1843])) [2 fi S4 A32])) "ETAFLD2.f":224 131 {*movsf_internal}
     (nil))
(insn 428 427 429 23 (set (reg:SI 1 dx [1844])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])) "ETAFLD2.f":224 86 {*movsi_internal}
     (nil))
(insn 429 428 430 23 (set (reg:DI 1 dx [orig:213 _127 ] [213])
        (sign_extend:DI (reg:SI 1 dx [1844]))) "ETAFLD2.f":224 149 {*extendsidi2_rex64}
     (nil))
(insn 430 429 431 23 (parallel [
            (set (reg:DI 2 cx [orig:214 _128 ] [214])
                (mult:DI (reg:DI 1 dx [orig:213 _127 ] [213])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":224 349 {*muldi3_1}
     (nil))
(insn 431 430 432 23 (set (reg:SI 1 dx [1845])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "ETAFLD2.f":224 86 {*movsi_internal}
     (nil))
(insn 432 431 433 23 (set (reg:DI 1 dx [orig:215 _129 ] [215])
        (sign_extend:DI (reg:SI 1 dx [1845]))) "ETAFLD2.f":224 149 {*extendsidi2_rex64}
     (nil))
(insn 433 432 434 23 (parallel [
            (set (reg:DI 1 dx [orig:216 _130 ] [216])
                (plus:DI (reg:DI 1 dx [orig:215 _129 ] [215])
                    (reg:DI 2 cx [orig:214 _128 ] [214])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":224 222 {*adddi_1}
     (nil))
(insn 434 433 435 23 (parallel [
            (set (reg:DI 2 cx [orig:217 _131 ] [217])
                (plus:DI (reg:DI 1 dx [orig:216 _130 ] [216])
                    (const_int 29511 [0x7347])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":224 222 {*adddi_1}
     (nil))
(insn 435 434 436 23 (set (reg:SF 21 xmm0 [orig:218 _132 ] [218])
        (plus:SF (reg:SF 21 xmm0 [orig:212 _126 ] [212])
            (reg:SF 22 xmm1 [orig:206 _120 ] [206]))) "ETAFLD2.f":224 838 {*fop_sf_comm}
     (nil))
(insn 436 435 437 23 (set (reg/f:DI 1 dx [1846])
        (symbol_ref:DI ("fi.4396") [flags 0x202]  <var_decl 0x7f9828263f30 fi>)) "ETAFLD2.f":224 85 {*movdi_internal}
     (nil))
(insn 437 436 438 23 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:217 _131 ] [217])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1846])) [2 fi S4 A32])
        (reg:SF 21 xmm0 [orig:218 _132 ] [218])) "ETAFLD2.f":224 131 {*movsf_internal}
     (nil))
(insn 438 437 439 23 (set (reg:SI 1 dx [1847])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])) "ETAFLD2.f":225 86 {*movsi_internal}
     (nil))
(insn 439 438 440 23 (set (reg:DI 1 dx [orig:219 _133 ] [219])
        (sign_extend:DI (reg:SI 1 dx [1847]))) "ETAFLD2.f":225 149 {*extendsidi2_rex64}
     (nil))
(insn 440 439 441 23 (parallel [
            (set (reg:DI 2 cx [orig:220 _134 ] [220])
                (mult:DI (reg:DI 1 dx [orig:219 _133 ] [219])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":225 349 {*muldi3_1}
     (nil))
(insn 441 440 442 23 (set (reg:SI 1 dx [1848])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "ETAFLD2.f":225 86 {*movsi_internal}
     (nil))
(insn 442 441 443 23 (set (reg:DI 1 dx [orig:221 _135 ] [221])
        (sign_extend:DI (reg:SI 1 dx [1848]))) "ETAFLD2.f":225 149 {*extendsidi2_rex64}
     (nil))
(insn 443 442 444 23 (parallel [
            (set (reg:DI 1 dx [orig:222 _136 ] [222])
                (plus:DI (reg:DI 1 dx [orig:221 _135 ] [221])
                    (reg:DI 2 cx [orig:220 _134 ] [220])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":225 222 {*adddi_1}
     (nil))
(insn 444 443 445 23 (parallel [
            (set (reg:DI 2 cx [orig:223 _137 ] [223])
                (plus:DI (reg:DI 1 dx [orig:222 _136 ] [222])
                    (const_int 29511 [0x7347])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":225 222 {*adddi_1}
     (nil))
(insn 445 444 446 23 (set (reg/f:DI 1 dx [1849])
        (symbol_ref:DI ("fi.4396") [flags 0x202]  <var_decl 0x7f9828263f30 fi>)) "ETAFLD2.f":225 85 {*movdi_internal}
     (nil))
(insn 446 445 447 23 (set (reg:SF 22 xmm1 [orig:224 _138 ] [224])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:223 _137 ] [223])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1849])) [2 fi S4 A32])) "ETAFLD2.f":225 131 {*movsf_internal}
     (nil))
(insn 447 446 448 23 (set (reg:SI 1 dx [orig:225 l.29_139 ] [225])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":225 86 {*movsi_internal}
     (nil))
(insn 448 447 449 23 (set (reg:DI 1 dx [orig:226 _140 ] [226])
        (sign_extend:DI (reg:SI 1 dx [orig:225 l.29_139 ] [225]))) "ETAFLD2.f":225 149 {*extendsidi2_rex64}
     (nil))
(insn 449 448 450 23 (parallel [
            (set (reg:DI 2 cx [orig:227 _141 ] [227])
                (mult:DI (reg:DI 1 dx [orig:226 _140 ] [226])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":225 349 {*muldi3_1}
     (nil))
(insn 450 449 451 23 (set (reg:SI 1 dx [1850])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])) "ETAFLD2.f":225 86 {*movsi_internal}
     (nil))
(insn 451 450 452 23 (set (reg:DI 1 dx [orig:228 _142 ] [228])
        (sign_extend:DI (reg:SI 1 dx [1850]))) "ETAFLD2.f":225 149 {*extendsidi2_rex64}
     (nil))
(insn 452 451 453 23 (parallel [
            (set (reg:DI 1 dx [orig:229 _143 ] [229])
                (mult:DI (reg:DI 1 dx [orig:228 _142 ] [228])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":225 349 {*muldi3_1}
     (nil))
(insn 453 452 454 23 (parallel [
            (set (reg:DI 2 cx [orig:230 _144 ] [230])
                (plus:DI (reg:DI 2 cx [orig:227 _141 ] [227])
                    (reg:DI 1 dx [orig:229 _143 ] [229])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":225 222 {*adddi_1}
     (nil))
(insn 454 453 455 23 (set (reg:SI 1 dx [1851])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "ETAFLD2.f":225 86 {*movsi_internal}
     (nil))
(insn 455 454 456 23 (set (reg:DI 1 dx [orig:231 _145 ] [231])
        (sign_extend:DI (reg:SI 1 dx [1851]))) "ETAFLD2.f":225 149 {*extendsidi2_rex64}
     (nil))
(insn 456 455 457 23 (parallel [
            (set (reg:DI 1 dx [orig:232 _146 ] [232])
                (plus:DI (reg:DI 1 dx [orig:231 _145 ] [231])
                    (reg:DI 2 cx [orig:230 _144 ] [230])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":225 222 {*adddi_1}
     (nil))
(insn 457 456 458 23 (parallel [
            (set (reg:DI 2 cx [orig:233 _147 ] [233])
                (plus:DI (reg:DI 1 dx [orig:232 _146 ] [232])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":225 222 {*adddi_1}
     (nil))
(insn 458 457 459 23 (set (reg:SF 21 xmm0 [1852])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC8") [flags 0x2]) [0  S4 A32])) "ETAFLD2.f":225 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0204081237316131591796875e-1 [0x0.d0fac6p-3])
        (nil)))
(insn 459 458 460 23 (set (reg:SF 21 xmm0 [orig:234 _148 ] [234])
        (mult:SF (reg:SF 21 xmm0 [1852])
            (reg:SF 22 xmm1 [orig:224 _138 ] [224]))) "ETAFLD2.f":225 838 {*fop_sf_comm}
     (nil))
(insn 460 459 461 23 (set (reg/f:DI 1 dx [1853])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f9828240b40 extra>)) "ETAFLD2.f":225 85 {*movdi_internal}
     (nil))
(insn 461 460 462 23 (parallel [
            (set (reg:DI 2 cx [1854])
                (plus:DI (reg:DI 2 cx [orig:233 _147 ] [233])
                    (const_int 2311218 [0x234432])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":225 222 {*adddi_1}
     (nil))
(insn 462 461 463 23 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [1854])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1853])) [2 extra.zint S4 A32])
        (reg:SF 21 xmm0 [orig:234 _148 ] [234])) "ETAFLD2.f":225 131 {*movsf_internal}
     (nil))
(insn 463 462 464 23 (set (reg:SI 1 dx [1855])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])) "ETAFLD2.f":226 86 {*movsi_internal}
     (nil))
(insn 464 463 465 23 (set (reg:DI 1 dx [orig:235 _149 ] [235])
        (sign_extend:DI (reg:SI 1 dx [1855]))) "ETAFLD2.f":226 149 {*extendsidi2_rex64}
     (nil))
(insn 465 464 466 23 (parallel [
            (set (reg:DI 2 cx [orig:236 _150 ] [236])
                (mult:DI (reg:DI 1 dx [orig:235 _149 ] [235])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":226 349 {*muldi3_1}
     (nil))
(insn 466 465 467 23 (set (reg:SI 1 dx [1856])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "ETAFLD2.f":226 86 {*movsi_internal}
     (nil))
(insn 467 466 468 23 (set (reg:DI 1 dx [orig:237 _151 ] [237])
        (sign_extend:DI (reg:SI 1 dx [1856]))) "ETAFLD2.f":226 149 {*extendsidi2_rex64}
     (nil))
(insn 468 467 469 23 (parallel [
            (set (reg:DI 1 dx [orig:238 _152 ] [238])
                (plus:DI (reg:DI 1 dx [orig:237 _151 ] [237])
                    (reg:DI 2 cx [orig:236 _150 ] [236])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":226 222 {*adddi_1}
     (nil))
(insn 469 468 470 23 (parallel [
            (set (reg:DI 4 si [orig:239 _153 ] [239])
                (plus:DI (reg:DI 1 dx [orig:238 _152 ] [238])
                    (const_int 29511 [0x7347])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":226 222 {*adddi_1}
     (nil))
(insn 470 469 471 23 (set (reg:SI 1 dx [1857])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])) "ETAFLD2.f":226 86 {*movsi_internal}
     (nil))
(insn 471 470 472 23 (set (reg:DI 1 dx [orig:240 _154 ] [240])
        (sign_extend:DI (reg:SI 1 dx [1857]))) "ETAFLD2.f":226 149 {*extendsidi2_rex64}
     (nil))
(insn 472 471 473 23 (parallel [
            (set (reg:DI 2 cx [orig:241 _155 ] [241])
                (mult:DI (reg:DI 1 dx [orig:240 _154 ] [240])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":226 349 {*muldi3_1}
     (nil))
(insn 473 472 474 23 (set (reg:SI 1 dx [1858])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "ETAFLD2.f":226 86 {*movsi_internal}
     (nil))
(insn 474 473 475 23 (set (reg:DI 1 dx [orig:242 _156 ] [242])
        (sign_extend:DI (reg:SI 1 dx [1858]))) "ETAFLD2.f":226 149 {*extendsidi2_rex64}
     (nil))
(insn 475 474 476 23 (parallel [
            (set (reg:DI 1 dx [orig:243 _157 ] [243])
                (plus:DI (reg:DI 1 dx [orig:242 _156 ] [242])
                    (reg:DI 2 cx [orig:241 _155 ] [241])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":226 222 {*adddi_1}
     (nil))
(insn 476 475 477 23 (parallel [
            (set (reg:DI 2 cx [orig:244 _158 ] [244])
                (plus:DI (reg:DI 1 dx [orig:243 _157 ] [243])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":226 222 {*adddi_1}
     (nil))
(insn 477 476 478 23 (set (reg/f:DI 1 dx [1859])
        (symbol_ref:DI ("fi.4396") [flags 0x202]  <var_decl 0x7f9828263f30 fi>)) "ETAFLD2.f":226 85 {*movdi_internal}
     (nil))
(insn 478 477 479 23 (set (reg:SF 21 xmm0 [orig:245 _159 ] [245])
        (mem:SF (plus:DI (mult:DI (reg:DI 4 si [orig:239 _153 ] [239])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1859])) [2 fi S4 A32])) "ETAFLD2.f":226 131 {*movsf_internal}
     (nil))
(insn 479 478 480 23 (set (reg/f:DI 1 dx [1860])
        (symbol_ref:DI ("fi.4396") [flags 0x202]  <var_decl 0x7f9828263f30 fi>)) "ETAFLD2.f":226 85 {*movdi_internal}
     (nil))
(insn 480 479 481 23 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:244 _158 ] [244])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1860])) [2 fi S4 A32])
        (reg:SF 21 xmm0 [orig:245 _159 ] [245])) "ETAFLD2.f":226 131 {*movsf_internal}
     (nil))
(insn 481 480 5588 23 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":222 221 {*addsi_1}
     (nil))
(jump_insn 5588 481 5589 23 (set (pc)
        (label_ref 482)) "ETAFLD2.f":222 683 {jump}
     (nil)
 -> 482)
;;  succ:       22 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1664

(barrier 5589 5588 5708)
;; basic block 367, loop depth 0, maybe hot
;;  prev block 23, next block 24, flags: (RTL, MODIFIED)
;;  pred:       22
;; bb 367 artificial_defs: { }
;; bb 367 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1664
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 5708 5589 5707 367 227 (nil) [1 uses])
(note 5707 5708 5709 367 [bb 367] NOTE_INSN_BASIC_BLOCK)
(insn 5709 5707 485 367 (const_int 0 [0]) "ETAFLD2.f":226 718 {nop}
     (nil))
;;  succ:       24 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1664

;; basic block 24, loop depth 0, maybe hot
;;  prev block 367, next block 366, flags: (RTL, MODIFIED)
;;  pred:       367 [always]  (FALLTHRU)
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1664
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 485 5709 486 24 15 (nil) [0 uses])
(note 486 485 487 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 487 486 5590 24 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":221 221 {*addsi_1}
     (nil))
(jump_insn 5590 487 5591 24 (set (pc)
        (label_ref 488)) "ETAFLD2.f":221 683 {jump}
     (nil)
 -> 488)
;;  succ:       20 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1664

(barrier 5591 5590 5705)
;; basic block 366, loop depth 0, maybe hot
;;  prev block 24, next block 25, flags: (RTL, MODIFIED)
;;  pred:       20
;; bb 366 artificial_defs: { }
;; bb 366 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 5705 5591 5704 366 226 (nil) [1 uses])
(note 5704 5705 5706 366 [bb 366] NOTE_INSN_BASIC_BLOCK)
(insn 5706 5704 491 366 (const_int 0 [0]) "ETAFLD2.f":222 718 {nop}
     (nil))
;;  succ:       25 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 25, loop depth 0, maybe hot
;;  prev block 366, next block 365, flags: (RTL, MODIFIED)
;;  pred:       366 [always]  (FALLTHRU)
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 246 247
(code_label 491 5706 492 25 14 (nil) [0 uses])
(note 492 491 493 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 493 492 494 25 (set (reg:SI 0 ax [orig:246 l.30_160 ] [246])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":219 86 {*movsi_internal}
     (nil))
(insn 494 493 495 25 (parallel [
            (set (reg:SI 0 ax [orig:247 _161 ] [247])
                (plus:SI (reg:SI 0 ax [orig:246 l.30_160 ] [246])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":219 221 {*addsi_1}
     (nil))
(insn 495 494 5592 25 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])
        (reg:SI 0 ax [orig:247 _161 ] [247])) "ETAFLD2.f":219 86 {*movsi_internal}
     (nil))
(jump_insn 5592 495 5593 25 (set (pc)
        (label_ref 496)) "ETAFLD2.f":219 683 {jump}
     (nil)
 -> 496)
;;  succ:       18 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 5593 5592 5702)
;; basic block 365, loop depth 0, maybe hot
;;  prev block 25, next block 26, flags: (RTL, MODIFIED)
;;  pred:       18
;; bb 365 artificial_defs: { }
;; bb 365 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 5702 5593 5701 365 225 (nil) [1 uses])
(note 5701 5702 5703 365 [bb 365] NOTE_INSN_BASIC_BLOCK)
(insn 5703 5701 499 365 (const_int 0 [0]) "ETAFLD2.f":229 718 {nop}
     (nil))
;;  succ:       26 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 26, loop depth 0, maybe hot
;;  prev block 365, next block 27, flags: (RTL, MODIFIED)
;;  pred:       365 [always]  (FALLTHRU)
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 1667 1861 1862
(code_label 499 5703 500 26 13 (nil) [0 uses])
(note 500 499 501 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 501 500 502 26 (set (reg/f:DI 0 ax [1861])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f9828240b40 extra>)) "ETAFLD2.f":232 85 {*movdi_internal}
     (nil))
(insn 502 501 503 26 (set (reg:SI 0 ax [1862])
        (mem/c:SI (plus:DI (reg/f:DI 0 ax [1861])
                (const_int 13867456 [0xd399c0])) [1 extra.kmntm+148 S4 A128])) "ETAFLD2.f":232 86 {*movsi_internal}
     (nil))
(insn 503 502 504 26 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -128 [0xffffffffffffff80])) [1 kmm+0 S4 A32])
        (reg:SI 0 ax [1862])) "ETAFLD2.f":232 86 {*movsi_internal}
     (nil))
(insn 504 503 505 26 (set (reg:SI 4 si [orig:1667 _1788 ] [1667])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -128 [0xffffffffffffff80])) [1 kmm+0 S4 A32])) "ETAFLD2.f":235 86 {*movsi_internal}
     (nil))
(insn 505 504 638 26 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [1 km+0 S4 A32])
        (const_int 1 [0x1])) "ETAFLD2.f":235 86 {*movsi_internal}
     (nil))
;;  succ:       27 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1667

;; basic block 27, loop depth 0, maybe hot
;;  prev block 26, next block 28, flags: (RTL, MODIFIED)
;;  pred:       26 (FALLTHRU)
;;              37 [always] 
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1667
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1667
;; lr  def 	 17 [flags] 1668 1863
(code_label 638 505 506 27 25 (nil) [1 uses])
(note 506 638 507 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 507 506 508 27 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -48 [0xffffffffffffffd0])) [1 km+0 S4 A32])
            (reg:SI 4 si [orig:1667 _1788 ] [1667]))) "ETAFLD2.f":235 11 {*cmpsi_1}
     (nil))
(insn 508 507 509 27 (set (reg:QI 0 ax [1863])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "ETAFLD2.f":235 678 {*setcc_qi}
     (nil))
(insn 509 508 510 27 (set (reg:SI 0 ax [orig:1668 _1791 ] [1668])
        (zero_extend:SI (reg:QI 0 ax [1863]))) "ETAFLD2.f":235 140 {*zero_extendqisi2}
     (nil))
(insn 510 509 511 27 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:1668 _1791 ] [1668])
            (const_int 0 [0]))) "ETAFLD2.f":235 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 511 510 512 27 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 5711)
            (pc))) "ETAFLD2.f":235 682 {*jcc}
     (nil)
 -> 5711)
;;  succ:       368
;;              28 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1667

;; basic block 28, loop depth 0, maybe hot
;;  prev block 27, next block 29, flags: (RTL, MODIFIED)
;;  pred:       27 (FALLTHRU)
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1667
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 248 249 1864 1865 1866 1867 1868 1869 1870 1871 1872 1873 1874 1875 1876 1877 1878 1879 1880 1881 1882 1883
(note 512 511 513 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 513 512 514 28 (set (reg:SI 0 ax [1864])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [1 km+0 S4 A32])) "ETAFLD2.f":236 86 {*movsi_internal}
     (nil))
(insn 514 513 515 28 (set (reg:DI 0 ax [orig:248 _162 ] [248])
        (sign_extend:DI (reg:SI 0 ax [1864]))) "ETAFLD2.f":236 149 {*extendsidi2_rex64}
     (nil))
(insn 515 514 516 28 (parallel [
            (set (reg:DI 1 dx [orig:249 _163 ] [249])
                (plus:DI (reg:DI 0 ax [orig:248 _162 ] [248])
                    (const_int 1091758 [0x10a8ae])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":236 222 {*adddi_1}
     (nil))
(insn 516 515 517 28 (set (reg/f:DI 0 ax [1865])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f9828240b40 extra>)) "ETAFLD2.f":236 85 {*movdi_internal}
     (nil))
(insn 517 516 518 28 (parallel [
            (set (reg:DI 1 dx [1866])
                (plus:DI (reg:DI 1 dx [orig:249 _163 ] [249])
                    (const_int 3466865 [0x34e671])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":236 222 {*adddi_1}
     (nil))
(insn 518 517 519 28 (set (reg:SI 0 ax [1867])
        (mem:SI (plus:DI (mult:DI (reg:DI 1 dx [1866])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1865])) [1 extra.kmnt S4 A32])) "ETAFLD2.f":236 86 {*movsi_internal}
     (nil))
(insn 519 518 520 28 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -132 [0xffffffffffffff7c])) [1 k+0 S4 A32])
        (reg:SI 0 ax [1867])) "ETAFLD2.f":236 86 {*movsi_internal}
     (nil))
(insn 520 519 521 28 (set (reg:SI 2 cx [1869])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -132 [0xffffffffffffff7c])) [1 k+0 S4 A32])) "ETAFLD2.f":237 86 {*movsi_internal}
     (nil))
(insn 521 520 5828 28 (set (reg:SI 1 dx [1871])
        (const_int -1975322511 [0xffffffff8a42f871])) "ETAFLD2.f":237 86 {*movsi_internal}
     (nil))
(insn 5828 521 522 28 (set (reg:SI 0 ax [2981])
        (reg:SI 2 cx [1869])) "ETAFLD2.f":237 86 {*movsi_internal}
     (nil))
(insn 522 5828 523 28 (parallel [
            (set (reg:SI 1 dx [1870])
                (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 0 ax [2981]))
                            (sign_extend:DI (reg:SI 1 dx [1871])))
                        (const_int 32 [0x20]))))
            (clobber (reg:SI 0 ax [2981]))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":237 375 {*smulsi3_highpart_1}
     (nil))
(insn 523 522 524 28 (parallel [
            (set (reg:SI 0 ax [1872])
                (plus:SI (reg:SI 1 dx [1870])
                    (reg:SI 2 cx [1869])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":237 221 {*addsi_1}
     (nil))
(insn 524 523 5830 28 (parallel [
            (set (reg:SI 0 ax [1872])
                (ashiftrt:SI (reg:SI 0 ax [1872])
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":237 588 {*ashrsi3_1}
     (nil))
(insn 5830 524 5831 28 (set (reg:SI 1 dx [1873])
        (reg:SI 0 ax [1872])) "ETAFLD2.f":237 86 {*movsi_internal}
     (nil))
(insn 5831 5830 525 28 (set (reg:SI 0 ax [1869])
        (reg:SI 2 cx [1869])) "ETAFLD2.f":237 86 {*movsi_internal}
     (nil))
(insn 525 5831 526 28 (parallel [
            (set (reg:SI 0 ax [1869])
                (ashiftrt:SI (reg:SI 0 ax [1869])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":237 582 {ashrsi3_cvt}
     (nil))
(insn 526 525 5834 28 (parallel [
            (set (reg:SI 1 dx [1873])
                (minus:SI (reg:SI 1 dx [1873])
                    (reg:SI 0 ax [1874])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":237 277 {*subsi_1}
     (nil))
(insn 5834 526 527 28 (set (reg:SI 0 ax [1868])
        (reg:SI 1 dx [1873])) "ETAFLD2.f":237 86 {*movsi_internal}
     (nil))
(insn 527 5834 528 28 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -136 [0xffffffffffffff78])) [1 ndrow+0 S4 A32])
        (reg:SI 0 ax [1868])) "ETAFLD2.f":237 86 {*movsi_internal}
     (nil))
(insn 528 527 529 28 (set (reg:SI 2 cx [1876])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -132 [0xffffffffffffff7c])) [1 k+0 S4 A32])) "ETAFLD2.f":238 86 {*movsi_internal}
     (nil))
(insn 529 528 5835 28 (set (reg:SI 1 dx [1878])
        (const_int -1975322511 [0xffffffff8a42f871])) "ETAFLD2.f":238 86 {*movsi_internal}
     (nil))
(insn 5835 529 530 28 (set (reg:SI 0 ax [2982])
        (reg:SI 2 cx [1876])) "ETAFLD2.f":238 86 {*movsi_internal}
     (nil))
(insn 530 5835 531 28 (parallel [
            (set (reg:SI 1 dx [1877])
                (truncate:SI (lshiftrt:DI (mult:DI (sign_extend:DI (reg:SI 0 ax [2982]))
                            (sign_extend:DI (reg:SI 1 dx [1878])))
                        (const_int 32 [0x20]))))
            (clobber (reg:SI 0 ax [2982]))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":238 375 {*smulsi3_highpart_1}
     (nil))
(insn 531 530 532 28 (parallel [
            (set (reg:SI 0 ax [1879])
                (plus:SI (reg:SI 1 dx [1877])
                    (reg:SI 2 cx [1876])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":238 221 {*addsi_1}
     (nil))
(insn 532 531 5837 28 (parallel [
            (set (reg:SI 0 ax [1879])
                (ashiftrt:SI (reg:SI 0 ax [1879])
                    (const_int 7 [0x7])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":238 588 {*ashrsi3_1}
     (nil))
(insn 5837 532 5838 28 (set (reg:SI 1 dx [1880])
        (reg:SI 0 ax [1879])) "ETAFLD2.f":238 86 {*movsi_internal}
     (nil))
(insn 5838 5837 533 28 (set (reg:SI 0 ax [1881])
        (reg:SI 2 cx [1876])) "ETAFLD2.f":238 86 {*movsi_internal}
     (nil))
(insn 533 5838 534 28 (parallel [
            (set (reg:SI 0 ax [1881])
                (ashiftrt:SI (reg:SI 0 ax [1881])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":238 582 {ashrsi3_cvt}
     (nil))
(insn 534 533 5841 28 (parallel [
            (set (reg:SI 1 dx [1880])
                (minus:SI (reg:SI 1 dx [1880])
                    (reg:SI 0 ax [1881])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":238 277 {*subsi_1}
     (expr_list:REG_EQUAL (div:SI (reg:SI 2 cx [1876])
            (const_int 237 [0xed]))
        (nil)))
(insn 5841 534 535 28 (set (reg:SI 0 ax [1875])
        (reg:SI 1 dx [1880])) "ETAFLD2.f":238 86 {*movsi_internal}
     (nil))
(insn 535 5841 536 28 (parallel [
            (set (reg:SI 0 ax [1882])
                (mult:SI (reg:SI 0 ax [1875])
                    (const_int 237 [0xed])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":238 348 {*mulsi3_1}
     (nil))
(insn 536 535 5843 28 (parallel [
            (set (reg:SI 2 cx [1876])
                (minus:SI (reg:SI 2 cx [1876])
                    (reg:SI 0 ax [1882])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":238 277 {*subsi_1}
     (nil))
(insn 5843 536 537 28 (set (reg:SI 0 ax [1883])
        (reg:SI 2 cx [1876])) "ETAFLD2.f":238 86 {*movsi_internal}
     (nil))
(insn 537 5843 538 28 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -140 [0xffffffffffffff74])) [1 lftov1+0 S4 A32])
        (reg:SI 0 ax [1883])) "ETAFLD2.f":238 86 {*movsi_internal}
     (nil))
(insn 538 537 539 28 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -140 [0xffffffffffffff74])) [1 lftov1+0 S4 A32])
            (const_int 119 [0x77]))) "ETAFLD2.f":239 11 {*cmpsi_1}
     (nil))
(jump_insn 539 538 540 28 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 550)
            (pc))) "ETAFLD2.f":239 682 {*jcc}
     (nil)
 -> 550)
;;  succ:       29 (FALLTHRU)
;;              30
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1667

;; basic block 29, loop depth 0, maybe hot
;;  prev block 28, next block 30, flags: (RTL, MODIFIED)
;;  pred:       28 (FALLTHRU)
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1667
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 250 251 1884 1885 1886
(note 540 539 541 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 541 540 542 29 (set (reg:SI 0 ax [1884])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -136 [0xffffffffffffff78])) [1 ndrow+0 S4 A32])) "ETAFLD2.f":240 86 {*movsi_internal}
     (nil))
(insn 542 541 543 29 (parallel [
            (set (reg:SI 1 dx [orig:250 _164 ] [250])
                (mult:SI (reg:SI 0 ax [1884])
                    (const_int -237 [0xffffffffffffff13])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":240 348 {*mulsi3_1}
     (nil))
(insn 543 542 544 29 (set (reg:SI 0 ax [1885])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -132 [0xffffffffffffff7c])) [1 k+0 S4 A32])) "ETAFLD2.f":240 86 {*movsi_internal}
     (nil))
(insn 544 543 545 29 (parallel [
            (set (reg:SI 0 ax [orig:251 _165 ] [251])
                (plus:SI (reg:SI 0 ax [1885])
                    (reg:SI 1 dx [orig:250 _164 ] [250])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":240 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (reg:SI 1 dx [orig:250 _164 ] [250])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -100 [0xffffffffffffff9c])) [1 k+0 S4 A32]))
        (nil)))
(insn 545 544 546 29 (parallel [
            (set (reg:SI 0 ax [1886])
                (plus:SI (reg:SI 0 ax [orig:251 _165 ] [251])
                    (const_int -119 [0xffffffffffffff89])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":240 221 {*addsi_1}
     (nil))
(insn 546 545 547 29 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
        (reg:SI 0 ax [1886])) "ETAFLD2.f":240 86 {*movsi_internal}
     (nil))
(insn 547 546 5594 29 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 iadd+0 S4 A32])
        (const_int 2 [0x2])) "ETAFLD2.f":241 86 {*movsi_internal}
     (nil))
(jump_insn 5594 547 5595 29 (set (pc)
        (label_ref 573)) 683 {jump}
     (nil)
 -> 573)
;;  succ:       34 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1667

(barrier 5595 5594 550)
;; basic block 30, loop depth 0, maybe hot
;;  prev block 29, next block 31, flags: (RTL, MODIFIED)
;;  pred:       28
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1667
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 550 5595 551 30 20 (nil) [1 uses])
(note 551 550 552 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 552 551 553 30 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -140 [0xffffffffffffff74])) [1 lftov1+0 S4 A32])
            (const_int 0 [0]))) "ETAFLD2.f":242 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 553 552 554 30 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 566)
            (pc))) "ETAFLD2.f":242 682 {*jcc}
     (nil)
 -> 566)
;;  succ:       31 (FALLTHRU)
;;              32
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1667

;; basic block 31, loop depth 0, maybe hot
;;  prev block 30, next block 32, flags: (RTL, MODIFIED)
;;  pred:       30 (FALLTHRU)
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1667
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 252 1887 1890 1891
(note 554 553 555 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 555 554 556 31 (set (reg:SI 0 ax [1887])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -136 [0xffffffffffffff78])) [1 ndrow+0 S4 A32])) "ETAFLD2.f":243 86 {*movsi_internal}
     (nil))
(insn 556 555 560 31 (parallel [
            (set (reg:SI 1 dx [orig:252 _166 ] [252])
                (mult:SI (reg:SI 0 ax [1887])
                    (const_int -237 [0xffffffffffffff13])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":243 348 {*mulsi3_1}
     (nil))
(insn 560 556 561 31 (set (reg:SI 0 ax [1891])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -132 [0xffffffffffffff7c])) [1 k+0 S4 A32])) "ETAFLD2.f":243 86 {*movsi_internal}
     (nil))
(insn 561 560 562 31 (parallel [
            (set (reg:SI 0 ax [1890])
                (plus:SI (reg:SI 0 ax [1891])
                    (reg:SI 1 dx [orig:252 _166 ] [252])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":243 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (reg:SI 1 dx [orig:252 _166 ] [252])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -100 [0xffffffffffffff9c])) [1 k+0 S4 A32]))
        (nil)))
(insn 562 561 563 31 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
        (reg:SI 0 ax [1890])) "ETAFLD2.f":243 86 {*movsi_internal}
     (nil))
(insn 563 562 5596 31 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 iadd+0 S4 A32])
        (const_int 1 [0x1])) "ETAFLD2.f":244 86 {*movsi_internal}
     (nil))
(jump_insn 5596 563 5597 31 (set (pc)
        (label_ref 573)) 683 {jump}
     (nil)
 -> 573)
;;  succ:       34 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1667

(barrier 5597 5596 566)
;; basic block 32, loop depth 0, maybe hot
;;  prev block 31, next block 33, flags: (RTL, MODIFIED)
;;  pred:       30
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1667
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 566 5597 567 32 22 (nil) [1 uses])
(note 567 566 568 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 568 567 569 32 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -140 [0xffffffffffffff74])) [1 lftov1+0 S4 A32])
            (const_int 0 [0]))) "ETAFLD2.f":245 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 569 568 570 32 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 573)
            (pc))) "ETAFLD2.f":245 682 {*jcc}
     (nil)
 -> 573)
;;  succ:       33 (FALLTHRU)
;;              34
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1667

;; basic block 33, loop depth 0, maybe hot
;;  prev block 32, next block 34, flags: (RTL, MODIFIED)
;;  pred:       32 (FALLTHRU)
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1667
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 570 569 571 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 571 570 572 33 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
        (const_int 118 [0x76])) "ETAFLD2.f":246 86 {*movsi_internal}
     (nil))
(insn 572 571 573 33 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 iadd+0 S4 A32])
        (const_int 0 [0])) "ETAFLD2.f":247 86 {*movsi_internal}
     (nil))
;;  succ:       34 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1667

;; basic block 34, loop depth 0, maybe hot
;;  prev block 33, next block 35, flags: (RTL, MODIFIED)
;;  pred:       33 (FALLTHRU)
;;              29 [always] 
;;              32
;;              31 [always] 
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1667
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 253 254 255 256 257 258 259 1669 1892 1895 1896 1897 1898 1899 1900 1901
(code_label 573 572 574 34 21 (nil) [3 uses])
(note 574 573 575 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 575 574 576 34 (set (reg:SI 0 ax [1892])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -136 [0xffffffffffffff78])) [1 ndrow+0 S4 A32])) "ETAFLD2.f":249 86 {*movsi_internal}
     (nil))
(insn 576 575 580 34 (parallel [
            (set (reg:SI 1 dx [orig:253 _167 ] [253])
                (ashift:SI (reg:SI 0 ax [1892])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":249 550 {*ashlsi3_1}
     (expr_list:REG_EQUAL (ashift:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -104 [0xffffffffffffff98])) [1 ndrow+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 580 576 581 34 (set (reg:SI 0 ax [1896])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 iadd+0 S4 A32])) "ETAFLD2.f":249 86 {*movsi_internal}
     (nil))
(insn 581 580 582 34 (parallel [
            (set (reg:SI 0 ax [1895])
                (plus:SI (reg:SI 0 ax [1896])
                    (reg:SI 1 dx [orig:253 _167 ] [253])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":249 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (reg:SI 1 dx [orig:253 _167 ] [253])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 iadd+0 S4 A32]))
        (nil)))
(insn 582 581 583 34 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])
        (reg:SI 0 ax [1895])) "ETAFLD2.f":249 86 {*movsi_internal}
     (nil))
(insn 583 582 584 34 (set (reg:SI 0 ax [1897])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])) "ETAFLD2.f":252 86 {*movsi_internal}
     (nil))
(insn 584 583 585 34 (set (reg:DI 0 ax [orig:254 _168 ] [254])
        (sign_extend:DI (reg:SI 0 ax [1897]))) "ETAFLD2.f":252 149 {*extendsidi2_rex64}
     (nil))
(insn 585 584 586 34 (parallel [
            (set (reg:DI 1 dx [orig:255 _169 ] [255])
                (mult:DI (reg:DI 0 ax [orig:254 _168 ] [254])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":252 349 {*muldi3_1}
     (nil))
(insn 586 585 587 34 (set (reg:SI 0 ax [1898])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "ETAFLD2.f":252 86 {*movsi_internal}
     (nil))
(insn 587 586 588 34 (set (reg:DI 0 ax [orig:256 _170 ] [256])
        (sign_extend:DI (reg:SI 0 ax [1898]))) "ETAFLD2.f":252 149 {*extendsidi2_rex64}
     (nil))
(insn 588 587 589 34 (parallel [
            (set (reg:DI 0 ax [orig:257 _171 ] [257])
                (plus:DI (reg:DI 0 ax [orig:256 _170 ] [256])
                    (reg:DI 1 dx [orig:255 _169 ] [255])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":252 222 {*adddi_1}
     (nil))
(insn 589 588 590 34 (parallel [
            (set (reg:DI 1 dx [orig:258 _172 ] [258])
                (plus:DI (reg:DI 0 ax [orig:257 _171 ] [257])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":252 222 {*adddi_1}
     (nil))
(insn 590 589 591 34 (set (reg/f:DI 0 ax [1899])
        (symbol_ref:DI ("loops_") [flags 0x202]  <var_decl 0x7f9828246c60 loops>)) "ETAFLD2.f":252 85 {*movdi_internal}
     (nil))
(insn 591 590 592 34 (parallel [
            (set (reg:DI 1 dx [1900])
                (plus:DI (reg:DI 1 dx [orig:258 _172 ] [258])
                    (const_int 2420 [0x974])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":252 222 {*adddi_1}
     (nil))
(insn 592 591 593 34 (set (reg:SI 0 ax [orig:259 _173 ] [259])
        (mem:SI (plus:DI (mult:DI (reg:DI 1 dx [1900])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1899])) [1 loops.lmh S4 A32])) "ETAFLD2.f":252 86 {*movsi_internal}
     (nil))
(insn 593 592 594 34 (parallel [
            (set (reg:SI 0 ax [1901])
                (plus:SI (reg:SI 0 ax [orig:259 _173 ] [259])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":252 221 {*addsi_1}
     (nil))
(insn 594 593 595 34 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -144 [0xffffffffffffff70])) [1 lmap1+0 S4 A32])
        (reg:SI 0 ax [1901])) "ETAFLD2.f":252 86 {*movsi_internal}
     (nil))
(insn 595 594 596 34 (set (reg:SI 0 ax [orig:1669 _1803 ] [1669])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -144 [0xffffffffffffff70])) [1 lmap1+0 S4 A32])) "ETAFLD2.f":253 86 {*movsi_internal}
     (nil))
(insn 596 595 632 34 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])
        (reg:SI 0 ax [orig:1669 _1803 ] [1669])) "ETAFLD2.f":253 86 {*movsi_internal}
     (nil))
;;  succ:       35 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1667

;; basic block 35, loop depth 0, maybe hot
;;  prev block 34, next block 36, flags: (RTL, MODIFIED)
;;  pred:       34 (FALLTHRU)
;;              36 [always] 
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1667
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 260 1670 1902
(code_label 632 596 597 35 24 (nil) [1 uses])
(note 597 632 598 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 598 597 599 35 (set (reg:SI 0 ax [orig:260 l.31_174 ] [260])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":253 86 {*movsi_internal}
     (nil))
(insn 599 598 600 35 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [orig:260 l.31_174 ] [260])
            (const_int 38 [0x26]))) "ETAFLD2.f":253 11 {*cmpsi_1}
     (nil))
(insn 600 599 601 35 (set (reg:QI 0 ax [1902])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "ETAFLD2.f":253 678 {*setcc_qi}
     (nil))
(insn 601 600 602 35 (set (reg:SI 0 ax [orig:1670 _1805 ] [1670])
        (zero_extend:SI (reg:QI 0 ax [1902]))) "ETAFLD2.f":253 140 {*zero_extendqisi2}
     (nil))
(insn 602 601 603 35 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:1670 _1805 ] [1670])
            (const_int 0 [0]))) "ETAFLD2.f":253 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 603 602 604 35 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 5714)
            (pc))) "ETAFLD2.f":253 682 {*jcc}
     (nil)
 -> 5714)
;;  succ:       369
;;              36 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1667

;; basic block 36, loop depth 0, maybe hot
;;  prev block 35, next block 369, flags: (RTL, MODIFIED)
;;  pred:       35 (FALLTHRU)
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1667
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 1903 1904 1905 1906 1907 1908 1909
(note 604 603 605 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 605 604 606 36 (set (reg:SI 0 ax [orig:261 l.32_175 ] [261])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":254 86 {*movsi_internal}
     (nil))
(insn 606 605 607 36 (parallel [
            (set (reg:SI 0 ax [orig:262 _176 ] [262])
                (plus:SI (reg:SI 0 ax [orig:261 l.32_175 ] [261])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":254 221 {*addsi_1}
     (nil))
(insn 607 606 608 36 (set (reg:DI 0 ax [orig:263 _177 ] [263])
        (sign_extend:DI (reg:SI 0 ax [orig:262 _176 ] [262]))) "ETAFLD2.f":254 149 {*extendsidi2_rex64}
     (nil))
(insn 608 607 609 36 (parallel [
            (set (reg:DI 1 dx [orig:264 _178 ] [264])
                (plus:DI (reg:DI 0 ax [orig:263 _177 ] [263])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":254 222 {*adddi_1}
     (nil))
(insn 609 608 610 36 (set (reg/f:DI 0 ax [1903])
        (symbol_ref:DI ("dynam_") [flags 0x202]  <var_decl 0x7f9828239b40 dynam>)) "ETAFLD2.f":254 85 {*movdi_internal}
     (nil))
(insn 610 609 611 36 (parallel [
            (set (reg:DI 1 dx [1904])
                (plus:DI (reg:DI 1 dx [orig:264 _178 ] [264])
                    (const_int 200 [0xc8])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":254 222 {*adddi_1}
     (nil))
(insn 611 610 612 36 (set (reg:SF 22 xmm1 [orig:265 _179 ] [265])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [1904])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1903])) [2 dynam.dfl S4 A32])) "ETAFLD2.f":254 131 {*movsf_internal}
     (nil))
(insn 612 611 613 36 (set (reg:SI 0 ax [orig:266 l.33_180 ] [266])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":254 86 {*movsi_internal}
     (nil))
(insn 613 612 614 36 (parallel [
            (set (reg:SI 0 ax [orig:267 _181 ] [267])
                (plus:SI (reg:SI 0 ax [orig:266 l.33_180 ] [266])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":254 221 {*addsi_1}
     (nil))
(insn 614 613 615 36 (set (reg:DI 0 ax [orig:268 _182 ] [268])
        (sign_extend:DI (reg:SI 0 ax [orig:267 _181 ] [267]))) "ETAFLD2.f":254 149 {*extendsidi2_rex64}
     (nil))
(insn 615 614 616 36 (parallel [
            (set (reg:DI 1 dx [orig:269 _183 ] [269])
                (mult:DI (reg:DI 0 ax [orig:268 _182 ] [268])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":254 349 {*muldi3_1}
     (nil))
(insn 616 615 617 36 (set (reg:SI 0 ax [1905])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])) "ETAFLD2.f":254 86 {*movsi_internal}
     (nil))
(insn 617 616 618 36 (set (reg:DI 0 ax [orig:270 _184 ] [270])
        (sign_extend:DI (reg:SI 0 ax [1905]))) "ETAFLD2.f":254 149 {*extendsidi2_rex64}
     (nil))
(insn 618 617 619 36 (parallel [
            (set (reg:DI 0 ax [orig:271 _185 ] [271])
                (mult:DI (reg:DI 0 ax [orig:270 _184 ] [270])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":254 349 {*muldi3_1}
     (nil))
(insn 619 618 620 36 (parallel [
            (set (reg:DI 1 dx [orig:272 _186 ] [272])
                (plus:DI (reg:DI 1 dx [orig:269 _183 ] [269])
                    (reg:DI 0 ax [orig:271 _185 ] [271])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":254 222 {*adddi_1}
     (nil))
(insn 620 619 621 36 (set (reg:SI 0 ax [1906])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "ETAFLD2.f":254 86 {*movsi_internal}
     (nil))
(insn 621 620 622 36 (set (reg:DI 0 ax [orig:273 _187 ] [273])
        (sign_extend:DI (reg:SI 0 ax [1906]))) "ETAFLD2.f":254 149 {*extendsidi2_rex64}
     (nil))
(insn 622 621 623 36 (parallel [
            (set (reg:DI 0 ax [orig:274 _188 ] [274])
                (plus:DI (reg:DI 0 ax [orig:273 _187 ] [273])
                    (reg:DI 1 dx [orig:272 _186 ] [272])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":254 222 {*adddi_1}
     (nil))
(insn 623 622 624 36 (parallel [
            (set (reg:DI 1 dx [orig:275 _189 ] [275])
                (plus:DI (reg:DI 0 ax [orig:274 _188 ] [274])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":254 222 {*adddi_1}
     (nil))
(insn 624 623 625 36 (set (reg:SF 21 xmm0 [1907])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC8") [flags 0x2]) [0  S4 A32])) "ETAFLD2.f":254 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0204081237316131591796875e-1 [0x0.d0fac6p-3])
        (nil)))
(insn 625 624 626 36 (set (reg:SF 21 xmm0 [orig:276 _190 ] [276])
        (mult:SF (reg:SF 21 xmm0 [1907])
            (reg:SF 22 xmm1 [orig:265 _179 ] [265]))) "ETAFLD2.f":254 838 {*fop_sf_comm}
     (nil))
(insn 626 625 627 36 (set (reg/f:DI 0 ax [1908])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f9828240b40 extra>)) "ETAFLD2.f":254 85 {*movdi_internal}
     (nil))
(insn 627 626 628 36 (parallel [
            (set (reg:DI 1 dx [1909])
                (plus:DI (reg:DI 1 dx [orig:275 _189 ] [275])
                    (const_int 2311218 [0x234432])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":254 222 {*adddi_1}
     (nil))
(insn 628 627 629 36 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [1909])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1908])) [2 extra.zint S4 A32])
        (reg:SF 21 xmm0 [orig:276 _190 ] [276])) "ETAFLD2.f":254 131 {*movsf_internal}
     (nil))
(insn 629 628 630 36 (set (reg:SI 0 ax [orig:277 l.34_191 ] [277])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":253 86 {*movsi_internal}
     (nil))
(insn 630 629 631 36 (parallel [
            (set (reg:SI 0 ax [orig:278 _192 ] [278])
                (plus:SI (reg:SI 0 ax [orig:277 l.34_191 ] [277])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":253 221 {*addsi_1}
     (nil))
(insn 631 630 5598 36 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])
        (reg:SI 0 ax [orig:278 _192 ] [278])) "ETAFLD2.f":253 86 {*movsi_internal}
     (nil))
(jump_insn 5598 631 5599 36 (set (pc)
        (label_ref 632)) "ETAFLD2.f":253 683 {jump}
     (nil)
 -> 632)
;;  succ:       35 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1667

(barrier 5599 5598 5714)
;; basic block 369, loop depth 0, maybe hot
;;  prev block 36, next block 37, flags: (RTL, MODIFIED)
;;  pred:       35
;; bb 369 artificial_defs: { }
;; bb 369 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1667
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 5714 5599 5713 369 229 (nil) [1 uses])
(note 5713 5714 5715 369 [bb 369] NOTE_INSN_BASIC_BLOCK)
(insn 5715 5713 635 369 (const_int 0 [0]) "ETAFLD2.f":254 718 {nop}
     (nil))
;;  succ:       37 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1667

;; basic block 37, loop depth 0, maybe hot
;;  prev block 369, next block 368, flags: (RTL, MODIFIED)
;;  pred:       369 [always]  (FALLTHRU)
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1667
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 635 5715 636 37 23 (nil) [0 uses])
(note 636 635 637 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 637 636 5600 37 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -48 [0xffffffffffffffd0])) [1 km+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -48 [0xffffffffffffffd0])) [1 km+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":235 221 {*addsi_1}
     (nil))
(jump_insn 5600 637 5601 37 (set (pc)
        (label_ref 638)) "ETAFLD2.f":235 683 {jump}
     (nil)
 -> 638)
;;  succ:       27 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1667

(barrier 5601 5600 5711)
;; basic block 368, loop depth 0, maybe hot
;;  prev block 37, next block 38, flags: (RTL, MODIFIED)
;;  pred:       27
;; bb 368 artificial_defs: { }
;; bb 368 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 5711 5601 5710 368 228 (nil) [1 uses])
(note 5710 5711 5712 368 [bb 368] NOTE_INSN_BASIC_BLOCK)
(insn 5712 5710 641 368 (const_int 0 [0]) "ETAFLD2.f":257 718 {nop}
     (nil))
;;  succ:       38 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 38, loop depth 0, maybe hot
;;  prev block 368, next block 39, flags: (RTL, MODIFIED)
;;  pred:       368 [always]  (FALLTHRU)
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 641 5712 642 38 19 (nil) [0 uses])
(note 642 641 643 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 643 642 775 38 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])
        (const_int 1 [0x1])) "ETAFLD2.f":261 86 {*movsi_internal}
     (nil))
;;  succ:       39 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 39, loop depth 0, maybe hot
;;  prev block 38, next block 40, flags: (RTL, MODIFIED)
;;  pred:       38 (FALLTHRU)
;;              46 [always] 
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 279 1671 1910
(code_label 775 643 644 39 31 (nil) [1 uses])
(note 644 775 645 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 645 644 646 39 (set (reg:SI 0 ax [orig:279 l.35_193 ] [279])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":261 86 {*movsi_internal}
     (nil))
(insn 646 645 647 39 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [orig:279 l.35_193 ] [279])
            (const_int 38 [0x26]))) "ETAFLD2.f":261 11 {*cmpsi_1}
     (nil))
(insn 647 646 648 39 (set (reg:QI 0 ax [1910])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "ETAFLD2.f":261 678 {*setcc_qi}
     (nil))
(insn 648 647 649 39 (set (reg:SI 0 ax [orig:1671 _1810 ] [1671])
        (zero_extend:SI (reg:QI 0 ax [1910]))) "ETAFLD2.f":261 140 {*zero_extendqisi2}
     (nil))
(insn 649 648 650 39 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:1671 _1810 ] [1671])
            (const_int 0 [0]))) "ETAFLD2.f":261 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 650 649 651 39 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 5717)
            (pc))) "ETAFLD2.f":261 682 {*jcc}
     (nil)
 -> 5717)
;;  succ:       370
;;              40 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 40, loop depth 0, maybe hot
;;  prev block 39, next block 41, flags: (RTL, MODIFIED)
;;  pred:       39 (FALLTHRU)
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 1672 1673
(note 651 650 652 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 652 651 653 40 (set (reg:SI 1 dx [orig:1672 _1811 ] [1672])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f982824fc60 parallel>)
                    (const_int 8 [0x8]))) [1 parallel.jsta+0 S4 A64])) "ETAFLD2.f":262 86 {*movsi_internal}
     (nil))
(insn 653 652 654 40 (set (reg:SI 0 ax [orig:1673 _1812 ] [1673])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f982824fc60 parallel>)
                    (const_int 12 [0xc]))) [1 parallel.jend+0 S4 A32])) "ETAFLD2.f":262 86 {*movsi_internal}
     (nil))
(insn 654 653 767 40 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])
        (reg:SI 1 dx [orig:1672 _1811 ] [1672])) "ETAFLD2.f":262 86 {*movsi_internal}
     (nil))
;;  succ:       41 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1673

;; basic block 41, loop depth 0, maybe hot
;;  prev block 40, next block 42, flags: (RTL, MODIFIED)
;;  pred:       40 (FALLTHRU)
;;              45 [always] 
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1673
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1673
;; lr  def 	 17 [flags] 1674 1911
(code_label 767 654 655 41 30 (nil) [1 uses])
(note 655 767 656 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 656 655 657 41 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])
            (reg:SI 0 ax [orig:1673 _1812 ] [1673]))) "ETAFLD2.f":262 11 {*cmpsi_1}
     (nil))
(insn 657 656 658 41 (set (reg:QI 1 dx [1911])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "ETAFLD2.f":262 678 {*setcc_qi}
     (nil))
(insn 658 657 659 41 (set (reg:SI 1 dx [orig:1674 _1814 ] [1674])
        (zero_extend:SI (reg:QI 1 dx [1911]))) "ETAFLD2.f":262 140 {*zero_extendqisi2}
     (nil))
(insn 659 658 660 41 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1674 _1814 ] [1674])
            (const_int 0 [0]))) "ETAFLD2.f":262 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 660 659 661 41 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 5720)
            (pc))) "ETAFLD2.f":262 682 {*jcc}
     (nil)
 -> 5720)
;;  succ:       371
;;              42 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1673

;; basic block 42, loop depth 0, maybe hot
;;  prev block 41, next block 43, flags: (RTL, MODIFIED)
;;  pred:       41 (FALLTHRU)
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1673
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 661 660 662 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 662 661 761 42 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
        (const_int 1 [0x1])) "ETAFLD2.f":263 86 {*movsi_internal}
     (nil))
;;  succ:       43 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1673

;; basic block 43, loop depth 0, maybe hot
;;  prev block 42, next block 44, flags: (RTL, MODIFIED)
;;  pred:       42 (FALLTHRU)
;;              44 [always] 
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1673
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1675 1912
(code_label 761 662 663 43 29 (nil) [1 uses])
(note 663 761 664 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 664 663 665 43 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
            (const_int 119 [0x77]))) "ETAFLD2.f":263 11 {*cmpsi_1}
     (nil))
(insn 665 664 666 43 (set (reg:QI 1 dx [1912])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "ETAFLD2.f":263 678 {*setcc_qi}
     (nil))
(insn 666 665 667 43 (set (reg:SI 1 dx [orig:1675 _1816 ] [1675])
        (zero_extend:SI (reg:QI 1 dx [1912]))) "ETAFLD2.f":263 140 {*zero_extendqisi2}
     (nil))
(insn 667 666 668 43 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1675 _1816 ] [1675])
            (const_int 0 [0]))) "ETAFLD2.f":263 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 668 667 669 43 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 5723)
            (pc))) "ETAFLD2.f":263 682 {*jcc}
     (nil)
 -> 5723)
;;  succ:       372
;;              44 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1673

;; basic block 44, loop depth 0, maybe hot
;;  prev block 43, next block 372, flags: (RTL, MODIFIED)
;;  pred:       43 (FALLTHRU)
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1673
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 1913 1914 1915 1916 1917 1918 1919 1920 1921 1922 1923 1924 1925 1926 1927 1928 1929 1930 1931 1932 1933 1934
(note 669 668 670 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 670 669 671 44 (set (reg:SI 1 dx [orig:280 l.36_194 ] [280])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":264 86 {*movsi_internal}
     (nil))
(insn 671 670 672 44 (parallel [
            (set (reg:SI 1 dx [orig:281 _195 ] [281])
                (plus:SI (reg:SI 1 dx [orig:280 l.36_194 ] [280])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":264 221 {*addsi_1}
     (nil))
(insn 672 671 673 44 (set (reg:DI 1 dx [orig:282 _196 ] [282])
        (sign_extend:DI (reg:SI 1 dx [orig:281 _195 ] [281]))) "ETAFLD2.f":264 149 {*extendsidi2_rex64}
     (nil))
(insn 673 672 674 44 (parallel [
            (set (reg:DI 2 cx [orig:283 _197 ] [283])
                (mult:DI (reg:DI 1 dx [orig:282 _196 ] [282])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":264 349 {*muldi3_1}
     (nil))
(insn 674 673 675 44 (set (reg:SI 1 dx [1913])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])) "ETAFLD2.f":264 86 {*movsi_internal}
     (nil))
(insn 675 674 676 44 (set (reg:DI 1 dx [orig:284 _198 ] [284])
        (sign_extend:DI (reg:SI 1 dx [1913]))) "ETAFLD2.f":264 149 {*extendsidi2_rex64}
     (nil))
(insn 676 675 677 44 (parallel [
            (set (reg:DI 1 dx [orig:285 _199 ] [285])
                (mult:DI (reg:DI 1 dx [orig:284 _198 ] [284])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":264 349 {*muldi3_1}
     (nil))
(insn 677 676 678 44 (parallel [
            (set (reg:DI 2 cx [orig:286 _200 ] [286])
                (plus:DI (reg:DI 2 cx [orig:283 _197 ] [283])
                    (reg:DI 1 dx [orig:285 _199 ] [285])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":264 222 {*adddi_1}
     (nil))
(insn 678 677 679 44 (set (reg:SI 1 dx [1914])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "ETAFLD2.f":264 86 {*movsi_internal}
     (nil))
(insn 679 678 680 44 (set (reg:DI 1 dx [orig:287 _201 ] [287])
        (sign_extend:DI (reg:SI 1 dx [1914]))) "ETAFLD2.f":264 149 {*extendsidi2_rex64}
     (nil))
(insn 680 679 681 44 (parallel [
            (set (reg:DI 1 dx [orig:288 _202 ] [288])
                (plus:DI (reg:DI 1 dx [orig:287 _201 ] [287])
                    (reg:DI 2 cx [orig:286 _200 ] [286])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":264 222 {*adddi_1}
     (nil))
(insn 681 680 682 44 (parallel [
            (set (reg:DI 2 cx [orig:289 _203 ] [289])
                (plus:DI (reg:DI 1 dx [orig:288 _202 ] [288])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":264 222 {*adddi_1}
     (nil))
(insn 682 681 683 44 (set (reg/f:DI 1 dx [1915])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f9828240b40 extra>)) "ETAFLD2.f":264 85 {*movdi_internal}
     (nil))
(insn 683 682 684 44 (set (reg:SF 22 xmm1 [orig:290 _204 ] [290])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:289 _203 ] [289])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1915])) [2 extra.pint S4 A32])) "ETAFLD2.f":264 131 {*movsf_internal}
     (nil))
(insn 684 683 685 44 (set (reg:SI 1 dx [orig:291 l.37_205 ] [291])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":264 86 {*movsi_internal}
     (nil))
(insn 685 684 686 44 (set (reg:DI 1 dx [orig:292 _206 ] [292])
        (sign_extend:DI (reg:SI 1 dx [orig:291 l.37_205 ] [291]))) "ETAFLD2.f":264 149 {*extendsidi2_rex64}
     (nil))
(insn 686 685 687 44 (parallel [
            (set (reg:DI 2 cx [orig:293 _207 ] [293])
                (mult:DI (reg:DI 1 dx [orig:292 _206 ] [292])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":264 349 {*muldi3_1}
     (nil))
(insn 687 686 688 44 (set (reg:SI 1 dx [1916])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])) "ETAFLD2.f":264 86 {*movsi_internal}
     (nil))
(insn 688 687 689 44 (set (reg:DI 1 dx [orig:294 _208 ] [294])
        (sign_extend:DI (reg:SI 1 dx [1916]))) "ETAFLD2.f":264 149 {*extendsidi2_rex64}
     (nil))
(insn 689 688 690 44 (parallel [
            (set (reg:DI 1 dx [orig:295 _209 ] [295])
                (mult:DI (reg:DI 1 dx [orig:294 _208 ] [294])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":264 349 {*muldi3_1}
     (nil))
(insn 690 689 691 44 (parallel [
            (set (reg:DI 2 cx [orig:296 _210 ] [296])
                (plus:DI (reg:DI 2 cx [orig:293 _207 ] [293])
                    (reg:DI 1 dx [orig:295 _209 ] [295])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":264 222 {*adddi_1}
     (nil))
(insn 691 690 692 44 (set (reg:SI 1 dx [1917])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "ETAFLD2.f":264 86 {*movsi_internal}
     (nil))
(insn 692 691 693 44 (set (reg:DI 1 dx [orig:297 _211 ] [297])
        (sign_extend:DI (reg:SI 1 dx [1917]))) "ETAFLD2.f":264 149 {*extendsidi2_rex64}
     (nil))
(insn 693 692 694 44 (parallel [
            (set (reg:DI 1 dx [orig:298 _212 ] [298])
                (plus:DI (reg:DI 1 dx [orig:297 _211 ] [297])
                    (reg:DI 2 cx [orig:296 _210 ] [296])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":264 222 {*adddi_1}
     (nil))
(insn 694 693 695 44 (parallel [
            (set (reg:DI 2 cx [orig:299 _213 ] [299])
                (plus:DI (reg:DI 1 dx [orig:298 _212 ] [298])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":264 222 {*adddi_1}
     (nil))
(insn 695 694 696 44 (set (reg/f:DI 1 dx [1918])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f9828240b40 extra>)) "ETAFLD2.f":264 85 {*movdi_internal}
     (nil))
(insn 696 695 697 44 (set (reg:SF 21 xmm0 [orig:300 _214 ] [300])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:299 _213 ] [299])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1918])) [2 extra.pint S4 A32])) "ETAFLD2.f":264 131 {*movsf_internal}
     (nil))
(insn 697 696 698 44 (set (reg:SF 21 xmm0 [orig:301 _215 ] [301])
        (plus:SF (reg:SF 21 xmm0 [orig:300 _214 ] [300])
            (reg:SF 22 xmm1 [orig:290 _204 ] [290]))) "ETAFLD2.f":264 838 {*fop_sf_comm}
     (nil))
(insn 698 697 699 44 (set (reg:SF 22 xmm1 [orig:302 _216 ] [302])
        (reg:SF 21 xmm0 [orig:301 _215 ] [301])) "ETAFLD2.f":264 131 {*movsf_internal}
     (nil))
(insn 699 698 700 44 (set (reg:SI 1 dx [orig:303 l.38_217 ] [303])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":264 86 {*movsi_internal}
     (nil))
(insn 700 699 701 44 (set (reg:DI 1 dx [orig:304 _218 ] [304])
        (sign_extend:DI (reg:SI 1 dx [orig:303 l.38_217 ] [303]))) "ETAFLD2.f":264 149 {*extendsidi2_rex64}
     (nil))
(insn 701 700 702 44 (parallel [
            (set (reg:DI 2 cx [orig:305 _219 ] [305])
                (mult:DI (reg:DI 1 dx [orig:304 _218 ] [304])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":264 349 {*muldi3_1}
     (nil))
(insn 702 701 703 44 (set (reg:SI 1 dx [1919])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])) "ETAFLD2.f":264 86 {*movsi_internal}
     (nil))
(insn 703 702 704 44 (set (reg:DI 1 dx [orig:306 _220 ] [306])
        (sign_extend:DI (reg:SI 1 dx [1919]))) "ETAFLD2.f":264 149 {*extendsidi2_rex64}
     (nil))
(insn 704 703 705 44 (parallel [
            (set (reg:DI 1 dx [orig:307 _221 ] [307])
                (mult:DI (reg:DI 1 dx [orig:306 _220 ] [306])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":264 349 {*muldi3_1}
     (nil))
(insn 705 704 706 44 (parallel [
            (set (reg:DI 2 cx [orig:308 _222 ] [308])
                (plus:DI (reg:DI 2 cx [orig:305 _219 ] [305])
                    (reg:DI 1 dx [orig:307 _221 ] [307])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":264 222 {*adddi_1}
     (nil))
(insn 706 705 707 44 (set (reg:SI 1 dx [1920])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "ETAFLD2.f":264 86 {*movsi_internal}
     (nil))
(insn 707 706 708 44 (set (reg:DI 1 dx [orig:309 _223 ] [309])
        (sign_extend:DI (reg:SI 1 dx [1920]))) "ETAFLD2.f":264 149 {*extendsidi2_rex64}
     (nil))
(insn 708 707 709 44 (parallel [
            (set (reg:DI 1 dx [orig:310 _224 ] [310])
                (plus:DI (reg:DI 1 dx [orig:309 _223 ] [309])
                    (reg:DI 2 cx [orig:308 _222 ] [308])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":264 222 {*adddi_1}
     (nil))
(insn 709 708 710 44 (parallel [
            (set (reg:DI 2 cx [orig:311 _225 ] [311])
                (plus:DI (reg:DI 1 dx [orig:310 _224 ] [310])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":264 222 {*adddi_1}
     (nil))
(insn 710 709 711 44 (set (reg:SF 21 xmm0 [1921])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC10") [flags 0x2]) [0  S4 A32])) "ETAFLD2.f":264 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 5.0e-1 [0x0.8p+0])
        (nil)))
(insn 711 710 712 44 (set (reg:SF 21 xmm0 [orig:312 _226 ] [312])
        (mult:SF (reg:SF 21 xmm0 [1921])
            (reg:SF 22 xmm1 [orig:302 _216 ] [302]))) "ETAFLD2.f":264 838 {*fop_sf_comm}
     (nil))
(insn 712 711 713 44 (set (reg/f:DI 1 dx [1922])
        (symbol_ref:DI ("equiv.1.4359") [flags 0x202]  <var_decl 0x7f9828263360 equiv.1>)) "ETAFLD2.f":264 85 {*movdi_internal}
     (nil))
(insn 713 712 714 44 (set (mem/j:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:311 _225 ] [311])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1922])) [24 equiv.1.pmid S4 A32])
        (reg:SF 21 xmm0 [orig:312 _226 ] [312])) "ETAFLD2.f":264 131 {*movsf_internal}
     (nil))
(insn 714 713 715 44 (set (reg:SI 1 dx [orig:313 l.39_227 ] [313])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":265 86 {*movsi_internal}
     (nil))
(insn 715 714 716 44 (parallel [
            (set (reg:SI 1 dx [orig:314 _228 ] [314])
                (plus:SI (reg:SI 1 dx [orig:313 l.39_227 ] [313])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":265 221 {*addsi_1}
     (nil))
(insn 716 715 717 44 (set (reg:DI 1 dx [orig:315 _229 ] [315])
        (sign_extend:DI (reg:SI 1 dx [orig:314 _228 ] [314]))) "ETAFLD2.f":265 149 {*extendsidi2_rex64}
     (nil))
(insn 717 716 718 44 (parallel [
            (set (reg:DI 2 cx [orig:316 _230 ] [316])
                (mult:DI (reg:DI 1 dx [orig:315 _229 ] [315])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":265 349 {*muldi3_1}
     (nil))
(insn 718 717 719 44 (set (reg:SI 1 dx [1923])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])) "ETAFLD2.f":265 86 {*movsi_internal}
     (nil))
(insn 719 718 720 44 (set (reg:DI 1 dx [orig:317 _231 ] [317])
        (sign_extend:DI (reg:SI 1 dx [1923]))) "ETAFLD2.f":265 149 {*extendsidi2_rex64}
     (nil))
(insn 720 719 721 44 (parallel [
            (set (reg:DI 1 dx [orig:318 _232 ] [318])
                (mult:DI (reg:DI 1 dx [orig:317 _231 ] [317])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":265 349 {*muldi3_1}
     (nil))
(insn 721 720 722 44 (parallel [
            (set (reg:DI 2 cx [orig:319 _233 ] [319])
                (plus:DI (reg:DI 2 cx [orig:316 _230 ] [316])
                    (reg:DI 1 dx [orig:318 _232 ] [318])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":265 222 {*adddi_1}
     (nil))
(insn 722 721 723 44 (set (reg:SI 1 dx [1924])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "ETAFLD2.f":265 86 {*movsi_internal}
     (nil))
(insn 723 722 724 44 (set (reg:DI 1 dx [orig:320 _234 ] [320])
        (sign_extend:DI (reg:SI 1 dx [1924]))) "ETAFLD2.f":265 149 {*extendsidi2_rex64}
     (nil))
(insn 724 723 725 44 (parallel [
            (set (reg:DI 1 dx [orig:321 _235 ] [321])
                (plus:DI (reg:DI 1 dx [orig:320 _234 ] [320])
                    (reg:DI 2 cx [orig:319 _233 ] [319])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":265 222 {*adddi_1}
     (nil))
(insn 725 724 726 44 (parallel [
            (set (reg:DI 2 cx [orig:322 _236 ] [322])
                (plus:DI (reg:DI 1 dx [orig:321 _235 ] [321])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":265 222 {*adddi_1}
     (nil))
(insn 726 725 727 44 (set (reg/f:DI 1 dx [1925])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f9828240b40 extra>)) "ETAFLD2.f":265 85 {*movdi_internal}
     (nil))
(insn 727 726 728 44 (parallel [
            (set (reg:DI 2 cx [1926])
                (plus:DI (reg:DI 2 cx [orig:322 _236 ] [322])
                    (const_int 2311218 [0x234432])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":265 222 {*adddi_1}
     (nil))
(insn 728 727 729 44 (set (reg:SF 22 xmm1 [orig:323 _237 ] [323])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [1926])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1925])) [2 extra.zint S4 A32])) "ETAFLD2.f":265 131 {*movsf_internal}
     (nil))
(insn 729 728 730 44 (set (reg:SI 1 dx [orig:324 l.40_238 ] [324])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":265 86 {*movsi_internal}
     (nil))
(insn 730 729 731 44 (set (reg:DI 1 dx [orig:325 _239 ] [325])
        (sign_extend:DI (reg:SI 1 dx [orig:324 l.40_238 ] [324]))) "ETAFLD2.f":265 149 {*extendsidi2_rex64}
     (nil))
(insn 731 730 732 44 (parallel [
            (set (reg:DI 2 cx [orig:326 _240 ] [326])
                (mult:DI (reg:DI 1 dx [orig:325 _239 ] [325])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":265 349 {*muldi3_1}
     (nil))
(insn 732 731 733 44 (set (reg:SI 1 dx [1927])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])) "ETAFLD2.f":265 86 {*movsi_internal}
     (nil))
(insn 733 732 734 44 (set (reg:DI 1 dx [orig:327 _241 ] [327])
        (sign_extend:DI (reg:SI 1 dx [1927]))) "ETAFLD2.f":265 149 {*extendsidi2_rex64}
     (nil))
(insn 734 733 735 44 (parallel [
            (set (reg:DI 1 dx [orig:328 _242 ] [328])
                (mult:DI (reg:DI 1 dx [orig:327 _241 ] [327])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":265 349 {*muldi3_1}
     (nil))
(insn 735 734 736 44 (parallel [
            (set (reg:DI 2 cx [orig:329 _243 ] [329])
                (plus:DI (reg:DI 2 cx [orig:326 _240 ] [326])
                    (reg:DI 1 dx [orig:328 _242 ] [328])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":265 222 {*adddi_1}
     (nil))
(insn 736 735 737 44 (set (reg:SI 1 dx [1928])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "ETAFLD2.f":265 86 {*movsi_internal}
     (nil))
(insn 737 736 738 44 (set (reg:DI 1 dx [orig:330 _244 ] [330])
        (sign_extend:DI (reg:SI 1 dx [1928]))) "ETAFLD2.f":265 149 {*extendsidi2_rex64}
     (nil))
(insn 738 737 739 44 (parallel [
            (set (reg:DI 1 dx [orig:331 _245 ] [331])
                (plus:DI (reg:DI 1 dx [orig:330 _244 ] [330])
                    (reg:DI 2 cx [orig:329 _243 ] [329])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":265 222 {*adddi_1}
     (nil))
(insn 739 738 740 44 (parallel [
            (set (reg:DI 2 cx [orig:332 _246 ] [332])
                (plus:DI (reg:DI 1 dx [orig:331 _245 ] [331])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":265 222 {*adddi_1}
     (nil))
(insn 740 739 741 44 (set (reg/f:DI 1 dx [1929])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f9828240b40 extra>)) "ETAFLD2.f":265 85 {*movdi_internal}
     (nil))
(insn 741 740 742 44 (parallel [
            (set (reg:DI 2 cx [1930])
                (plus:DI (reg:DI 2 cx [orig:332 _246 ] [332])
                    (const_int 2311218 [0x234432])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":265 222 {*adddi_1}
     (nil))
(insn 742 741 743 44 (set (reg:SF 21 xmm0 [orig:333 _247 ] [333])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [1930])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1929])) [2 extra.zint S4 A32])) "ETAFLD2.f":265 131 {*movsf_internal}
     (nil))
(insn 743 742 744 44 (set (reg:SF 21 xmm0 [orig:334 _248 ] [334])
        (plus:SF (reg:SF 21 xmm0 [orig:333 _247 ] [333])
            (reg:SF 22 xmm1 [orig:323 _237 ] [323]))) "ETAFLD2.f":265 838 {*fop_sf_comm}
     (nil))
(insn 744 743 745 44 (set (reg:SF 22 xmm1 [orig:335 _249 ] [335])
        (reg:SF 21 xmm0 [orig:334 _248 ] [334])) "ETAFLD2.f":265 131 {*movsf_internal}
     (nil))
(insn 745 744 746 44 (set (reg:SI 1 dx [orig:336 l.41_250 ] [336])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":265 86 {*movsi_internal}
     (nil))
(insn 746 745 747 44 (set (reg:DI 1 dx [orig:337 _251 ] [337])
        (sign_extend:DI (reg:SI 1 dx [orig:336 l.41_250 ] [336]))) "ETAFLD2.f":265 149 {*extendsidi2_rex64}
     (nil))
(insn 747 746 748 44 (parallel [
            (set (reg:DI 2 cx [orig:338 _252 ] [338])
                (mult:DI (reg:DI 1 dx [orig:337 _251 ] [337])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":265 349 {*muldi3_1}
     (nil))
(insn 748 747 749 44 (set (reg:SI 1 dx [1931])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])) "ETAFLD2.f":265 86 {*movsi_internal}
     (nil))
(insn 749 748 750 44 (set (reg:DI 1 dx [orig:339 _253 ] [339])
        (sign_extend:DI (reg:SI 1 dx [1931]))) "ETAFLD2.f":265 149 {*extendsidi2_rex64}
     (nil))
(insn 750 749 751 44 (parallel [
            (set (reg:DI 1 dx [orig:340 _254 ] [340])
                (mult:DI (reg:DI 1 dx [orig:339 _253 ] [339])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":265 349 {*muldi3_1}
     (nil))
(insn 751 750 752 44 (parallel [
            (set (reg:DI 2 cx [orig:341 _255 ] [341])
                (plus:DI (reg:DI 2 cx [orig:338 _252 ] [338])
                    (reg:DI 1 dx [orig:340 _254 ] [340])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":265 222 {*adddi_1}
     (nil))
(insn 752 751 753 44 (set (reg:SI 1 dx [1932])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "ETAFLD2.f":265 86 {*movsi_internal}
     (nil))
(insn 753 752 754 44 (set (reg:DI 1 dx [orig:342 _256 ] [342])
        (sign_extend:DI (reg:SI 1 dx [1932]))) "ETAFLD2.f":265 149 {*extendsidi2_rex64}
     (nil))
(insn 754 753 755 44 (parallel [
            (set (reg:DI 1 dx [orig:343 _257 ] [343])
                (plus:DI (reg:DI 1 dx [orig:342 _256 ] [342])
                    (reg:DI 2 cx [orig:341 _255 ] [341])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":265 222 {*adddi_1}
     (nil))
(insn 755 754 756 44 (parallel [
            (set (reg:DI 2 cx [orig:344 _258 ] [344])
                (plus:DI (reg:DI 1 dx [orig:343 _257 ] [343])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":265 222 {*adddi_1}
     (nil))
(insn 756 755 757 44 (set (reg:SF 21 xmm0 [1933])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC10") [flags 0x2]) [0  S4 A32])) "ETAFLD2.f":265 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 5.0e-1 [0x0.8p+0])
        (nil)))
(insn 757 756 758 44 (set (reg:SF 21 xmm0 [orig:345 _259 ] [345])
        (mult:SF (reg:SF 21 xmm0 [1933])
            (reg:SF 22 xmm1 [orig:335 _249 ] [335]))) "ETAFLD2.f":265 838 {*fop_sf_comm}
     (nil))
(insn 758 757 759 44 (set (reg/f:DI 1 dx [1934])
        (symbol_ref:DI ("equiv.0.4352") [flags 0x202]  <var_decl 0x7f98282631b0 equiv.0>)) "ETAFLD2.f":265 85 {*movdi_internal}
     (nil))
(insn 759 758 760 44 (set (mem/j:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:344 _258 ] [344])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1934])) [25 equiv.0.zmid S4 A32])
        (reg:SF 21 xmm0 [orig:345 _259 ] [345])) "ETAFLD2.f":265 131 {*movsf_internal}
     (nil))
(insn 760 759 5602 44 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":263 221 {*addsi_1}
     (nil))
(jump_insn 5602 760 5603 44 (set (pc)
        (label_ref 761)) "ETAFLD2.f":263 683 {jump}
     (nil)
 -> 761)
;;  succ:       43 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1673

(barrier 5603 5602 5723)
;; basic block 372, loop depth 0, maybe hot
;;  prev block 44, next block 45, flags: (RTL, MODIFIED)
;;  pred:       43
;; bb 372 artificial_defs: { }
;; bb 372 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1673
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 5723 5603 5722 372 232 (nil) [1 uses])
(note 5722 5723 5724 372 [bb 372] NOTE_INSN_BASIC_BLOCK)
(insn 5724 5722 764 372 (const_int 0 [0]) "ETAFLD2.f":265 718 {nop}
     (nil))
;;  succ:       45 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1673

;; basic block 45, loop depth 0, maybe hot
;;  prev block 372, next block 371, flags: (RTL, MODIFIED)
;;  pred:       372 [always]  (FALLTHRU)
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1673
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 764 5724 765 45 28 (nil) [0 uses])
(note 765 764 766 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 766 765 5604 45 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":262 221 {*addsi_1}
     (nil))
(jump_insn 5604 766 5605 45 (set (pc)
        (label_ref 767)) "ETAFLD2.f":262 683 {jump}
     (nil)
 -> 767)
;;  succ:       41 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1673

(barrier 5605 5604 5720)
;; basic block 371, loop depth 0, maybe hot
;;  prev block 45, next block 46, flags: (RTL, MODIFIED)
;;  pred:       41
;; bb 371 artificial_defs: { }
;; bb 371 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 5720 5605 5719 371 231 (nil) [1 uses])
(note 5719 5720 5721 371 [bb 371] NOTE_INSN_BASIC_BLOCK)
(insn 5721 5719 770 371 (const_int 0 [0]) "ETAFLD2.f":263 718 {nop}
     (nil))
;;  succ:       46 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 46, loop depth 0, maybe hot
;;  prev block 371, next block 370, flags: (RTL, MODIFIED)
;;  pred:       371 [always]  (FALLTHRU)
;; bb 46 artificial_defs: { }
;; bb 46 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 346 347
(code_label 770 5721 771 46 27 (nil) [0 uses])
(note 771 770 772 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 772 771 773 46 (set (reg:SI 0 ax [orig:346 l.42_260 ] [346])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":261 86 {*movsi_internal}
     (nil))
(insn 773 772 774 46 (parallel [
            (set (reg:SI 0 ax [orig:347 _261 ] [347])
                (plus:SI (reg:SI 0 ax [orig:346 l.42_260 ] [346])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":261 221 {*addsi_1}
     (nil))
(insn 774 773 5606 46 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])
        (reg:SI 0 ax [orig:347 _261 ] [347])) "ETAFLD2.f":261 86 {*movsi_internal}
     (nil))
(jump_insn 5606 774 5607 46 (set (pc)
        (label_ref 775)) "ETAFLD2.f":261 683 {jump}
     (nil)
 -> 775)
;;  succ:       39 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 5607 5606 5717)
;; basic block 370, loop depth 0, maybe hot
;;  prev block 46, next block 47, flags: (RTL, MODIFIED)
;;  pred:       39
;; bb 370 artificial_defs: { }
;; bb 370 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 5717 5607 5716 370 230 (nil) [1 uses])
(note 5716 5717 5718 370 [bb 370] NOTE_INSN_BASIC_BLOCK)
(insn 5718 5716 778 370 (const_int 0 [0]) "ETAFLD2.f":268 718 {nop}
     (nil))
;;  succ:       47 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 47, loop depth 0, maybe hot
;;  prev block 370, next block 48, flags: (RTL, MODIFIED)
;;  pred:       370 [always]  (FALLTHRU)
;; bb 47 artificial_defs: { }
;; bb 47 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 348
(code_label 778 5718 779 47 26 (nil) [0 uses])
(note 779 778 780 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 780 779 781 47 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -280 [0xfffffffffffffee8])) [1 nrec0+0 S4 A64])
        (const_int 1 [0x1])) "ETAFLD2.f":274 86 {*movsi_internal}
     (nil))
(insn 781 780 782 47 (set (reg:SI 0 ax [orig:348 _262 ] [348])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 16 [0x10]))) [1 rqstfld.iget+0 S4 A128])) "ETAFLD2.f":286 86 {*movsi_internal}
     (nil))
(insn 782 781 783 47 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:348 _262 ] [348])
            (const_int 0 [0]))) "ETAFLD2.f":286 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 783 782 784 47 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 872)
            (pc))) "ETAFLD2.f":286 682 {*jcc}
     (nil)
 -> 872)
;;  succ:       70
;;              48 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 48, loop depth 0, maybe hot
;;  prev block 47, next block 49, flags: (RTL, MODIFIED)
;;  pred:       47 (FALLTHRU)
;; bb 48 artificial_defs: { }
;; bb 48 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 349
(note 784 783 785 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 785 784 786 48 (set (reg:SI 0 ax [orig:349 _263 ] [349])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 320 [0x140]))) [1 rqstfld.iget+304 S4 A128])) "ETAFLD2.f":286 86 {*movsi_internal}
     (nil))
(insn 786 785 787 48 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:349 _263 ] [349])
            (const_int 0 [0]))) "ETAFLD2.f":286 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 787 786 788 48 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 872)
            (pc))) "ETAFLD2.f":286 682 {*jcc}
     (nil)
 -> 872)
;;  succ:       70
;;              49 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 49, loop depth 0, maybe hot
;;  prev block 48, next block 50, flags: (RTL, MODIFIED)
;;  pred:       48 (FALLTHRU)
;; bb 49 artificial_defs: { }
;; bb 49 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 350
(note 788 787 789 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 789 788 790 49 (set (reg:SI 0 ax [orig:350 _264 ] [350])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 20 [0x14]))) [1 rqstfld.iget+4 S4 A32])) "ETAFLD2.f":286 86 {*movsi_internal}
     (nil))
(insn 790 789 791 49 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:350 _264 ] [350])
            (const_int 0 [0]))) "ETAFLD2.f":286 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 791 790 792 49 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 872)
            (pc))) "ETAFLD2.f":286 682 {*jcc}
     (nil)
 -> 872)
;;  succ:       70
;;              50 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 50, loop depth 0, maybe hot
;;  prev block 49, next block 51, flags: (RTL, MODIFIED)
;;  pred:       49 (FALLTHRU)
;; bb 50 artificial_defs: { }
;; bb 50 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 351
(note 792 791 793 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 793 792 794 50 (set (reg:SI 0 ax [orig:351 _265 ] [351])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 24 [0x18]))) [1 rqstfld.iget+8 S4 A64])) "ETAFLD2.f":286 86 {*movsi_internal}
     (nil))
(insn 794 793 795 50 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:351 _265 ] [351])
            (const_int 0 [0]))) "ETAFLD2.f":286 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 795 794 796 50 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 872)
            (pc))) "ETAFLD2.f":286 682 {*jcc}
     (nil)
 -> 872)
;;  succ:       70
;;              51 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 51, loop depth 0, maybe hot
;;  prev block 50, next block 52, flags: (RTL, MODIFIED)
;;  pred:       50 (FALLTHRU)
;; bb 51 artificial_defs: { }
;; bb 51 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 352
(note 796 795 797 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 797 796 798 51 (set (reg:SI 0 ax [orig:352 _266 ] [352])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 28 [0x1c]))) [1 rqstfld.iget+12 S4 A32])) "ETAFLD2.f":286 86 {*movsi_internal}
     (nil))
(insn 798 797 799 51 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:352 _266 ] [352])
            (const_int 0 [0]))) "ETAFLD2.f":286 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 799 798 800 51 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 872)
            (pc))) "ETAFLD2.f":286 682 {*jcc}
     (nil)
 -> 872)
;;  succ:       70
;;              52 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 52, loop depth 0, maybe hot
;;  prev block 51, next block 53, flags: (RTL, MODIFIED)
;;  pred:       51 (FALLTHRU)
;; bb 52 artificial_defs: { }
;; bb 52 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 353
(note 800 799 801 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 801 800 802 52 (set (reg:SI 0 ax [orig:353 _267 ] [353])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 32 [0x20]))) [1 rqstfld.iget+16 S4 A128])) "ETAFLD2.f":286 86 {*movsi_internal}
     (nil))
(insn 802 801 803 52 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:353 _267 ] [353])
            (const_int 0 [0]))) "ETAFLD2.f":286 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 803 802 804 52 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 872)
            (pc))) "ETAFLD2.f":286 682 {*jcc}
     (nil)
 -> 872)
;;  succ:       70
;;              53 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 53, loop depth 0, maybe hot
;;  prev block 52, next block 54, flags: (RTL, MODIFIED)
;;  pred:       52 (FALLTHRU)
;; bb 53 artificial_defs: { }
;; bb 53 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 354
(note 804 803 805 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(insn 805 804 806 53 (set (reg:SI 0 ax [orig:354 _268 ] [354])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 36 [0x24]))) [1 rqstfld.iget+20 S4 A32])) "ETAFLD2.f":286 86 {*movsi_internal}
     (nil))
(insn 806 805 807 53 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:354 _268 ] [354])
            (const_int 0 [0]))) "ETAFLD2.f":286 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 807 806 808 53 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 872)
            (pc))) "ETAFLD2.f":286 682 {*jcc}
     (nil)
 -> 872)
;;  succ:       70
;;              54 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 54, loop depth 0, maybe hot
;;  prev block 53, next block 55, flags: (RTL, MODIFIED)
;;  pred:       53 (FALLTHRU)
;; bb 54 artificial_defs: { }
;; bb 54 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 355
(note 808 807 809 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(insn 809 808 810 54 (set (reg:SI 0 ax [orig:355 _269 ] [355])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 344 [0x158]))) [1 rqstfld.iget+328 S4 A64])) "ETAFLD2.f":286 86 {*movsi_internal}
     (nil))
(insn 810 809 811 54 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:355 _269 ] [355])
            (const_int 0 [0]))) "ETAFLD2.f":286 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 811 810 812 54 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 872)
            (pc))) "ETAFLD2.f":286 682 {*jcc}
     (nil)
 -> 872)
;;  succ:       70
;;              55 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 55, loop depth 0, maybe hot
;;  prev block 54, next block 56, flags: (RTL, MODIFIED)
;;  pred:       54 (FALLTHRU)
;; bb 55 artificial_defs: { }
;; bb 55 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 356
(note 812 811 813 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(insn 813 812 814 55 (set (reg:SI 0 ax [orig:356 _270 ] [356])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 40 [0x28]))) [1 rqstfld.iget+24 S4 A64])) "ETAFLD2.f":286 86 {*movsi_internal}
     (nil))
(insn 814 813 815 55 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:356 _270 ] [356])
            (const_int 0 [0]))) "ETAFLD2.f":286 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 815 814 816 55 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 872)
            (pc))) "ETAFLD2.f":286 682 {*jcc}
     (nil)
 -> 872)
;;  succ:       70
;;              56 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 56, loop depth 0, maybe hot
;;  prev block 55, next block 57, flags: (RTL, MODIFIED)
;;  pred:       55 (FALLTHRU)
;; bb 56 artificial_defs: { }
;; bb 56 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 357
(note 816 815 817 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(insn 817 816 818 56 (set (reg:SI 0 ax [orig:357 _271 ] [357])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 44 [0x2c]))) [1 rqstfld.iget+28 S4 A32])) "ETAFLD2.f":286 86 {*movsi_internal}
     (nil))
(insn 818 817 819 56 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:357 _271 ] [357])
            (const_int 0 [0]))) "ETAFLD2.f":286 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 819 818 820 56 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 872)
            (pc))) "ETAFLD2.f":286 682 {*jcc}
     (nil)
 -> 872)
;;  succ:       70
;;              57 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 57, loop depth 0, maybe hot
;;  prev block 56, next block 58, flags: (RTL, MODIFIED)
;;  pred:       56 (FALLTHRU)
;; bb 57 artificial_defs: { }
;; bb 57 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 358
(note 820 819 821 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(insn 821 820 822 57 (set (reg:SI 0 ax [orig:358 _272 ] [358])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 48 [0x30]))) [1 rqstfld.iget+32 S4 A128])) "ETAFLD2.f":286 86 {*movsi_internal}
     (nil))
(insn 822 821 823 57 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:358 _272 ] [358])
            (const_int 0 [0]))) "ETAFLD2.f":286 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 823 822 824 57 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 872)
            (pc))) "ETAFLD2.f":286 682 {*jcc}
     (nil)
 -> 872)
;;  succ:       70
;;              58 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 58, loop depth 0, maybe hot
;;  prev block 57, next block 59, flags: (RTL, MODIFIED)
;;  pred:       57 (FALLTHRU)
;; bb 58 artificial_defs: { }
;; bb 58 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 359
(note 824 823 825 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(insn 825 824 826 58 (set (reg:SI 0 ax [orig:359 _273 ] [359])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 52 [0x34]))) [1 rqstfld.iget+36 S4 A32])) "ETAFLD2.f":286 86 {*movsi_internal}
     (nil))
(insn 826 825 827 58 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:359 _273 ] [359])
            (const_int 0 [0]))) "ETAFLD2.f":286 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 827 826 828 58 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 872)
            (pc))) "ETAFLD2.f":286 682 {*jcc}
     (nil)
 -> 872)
;;  succ:       70
;;              59 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 59, loop depth 0, maybe hot
;;  prev block 58, next block 60, flags: (RTL, MODIFIED)
;;  pred:       58 (FALLTHRU)
;; bb 59 artificial_defs: { }
;; bb 59 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 360
(note 828 827 829 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(insn 829 828 830 59 (set (reg:SI 0 ax [orig:360 _274 ] [360])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 348 [0x15c]))) [1 rqstfld.iget+332 S4 A32])) "ETAFLD2.f":286 86 {*movsi_internal}
     (nil))
(insn 830 829 831 59 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:360 _274 ] [360])
            (const_int 0 [0]))) "ETAFLD2.f":286 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 831 830 832 59 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 872)
            (pc))) "ETAFLD2.f":286 682 {*jcc}
     (nil)
 -> 872)
;;  succ:       70
;;              60 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 60, loop depth 0, maybe hot
;;  prev block 59, next block 61, flags: (RTL, MODIFIED)
;;  pred:       59 (FALLTHRU)
;; bb 60 artificial_defs: { }
;; bb 60 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 361
(note 832 831 833 60 [bb 60] NOTE_INSN_BASIC_BLOCK)
(insn 833 832 834 60 (set (reg:SI 0 ax [orig:361 _275 ] [361])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 56 [0x38]))) [1 rqstfld.iget+40 S4 A64])) "ETAFLD2.f":286 86 {*movsi_internal}
     (nil))
(insn 834 833 835 60 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:361 _275 ] [361])
            (const_int 0 [0]))) "ETAFLD2.f":286 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 835 834 836 60 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 872)
            (pc))) "ETAFLD2.f":286 682 {*jcc}
     (nil)
 -> 872)
;;  succ:       70
;;              61 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 61, loop depth 0, maybe hot
;;  prev block 60, next block 62, flags: (RTL, MODIFIED)
;;  pred:       60 (FALLTHRU)
;; bb 61 artificial_defs: { }
;; bb 61 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 362
(note 836 835 837 61 [bb 61] NOTE_INSN_BASIC_BLOCK)
(insn 837 836 838 61 (set (reg:SI 0 ax [orig:362 _276 ] [362])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 176 [0xb0]))) [1 rqstfld.iget+160 S4 A128])) "ETAFLD2.f":286 86 {*movsi_internal}
     (nil))
(insn 838 837 839 61 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:362 _276 ] [362])
            (const_int 0 [0]))) "ETAFLD2.f":286 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 839 838 840 61 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 872)
            (pc))) "ETAFLD2.f":286 682 {*jcc}
     (nil)
 -> 872)
;;  succ:       70
;;              62 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 62, loop depth 0, maybe hot
;;  prev block 61, next block 63, flags: (RTL, MODIFIED)
;;  pred:       61 (FALLTHRU)
;; bb 62 artificial_defs: { }
;; bb 62 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 363
(note 840 839 841 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(insn 841 840 842 62 (set (reg:SI 0 ax [orig:363 _277 ] [363])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 508 [0x1fc]))) [1 rqstfld.iget+492 S4 A32])) "ETAFLD2.f":286 86 {*movsi_internal}
     (nil))
(insn 842 841 843 62 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:363 _277 ] [363])
            (const_int 0 [0]))) "ETAFLD2.f":286 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 843 842 844 62 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 872)
            (pc))) "ETAFLD2.f":286 682 {*jcc}
     (nil)
 -> 872)
;;  succ:       70
;;              63 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 63, loop depth 0, maybe hot
;;  prev block 62, next block 64, flags: (RTL, MODIFIED)
;;  pred:       62 (FALLTHRU)
;; bb 63 artificial_defs: { }
;; bb 63 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 364
(note 844 843 845 63 [bb 63] NOTE_INSN_BASIC_BLOCK)
(insn 845 844 846 63 (set (reg:SI 0 ax [orig:364 _278 ] [364])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 512 [0x200]))) [1 rqstfld.iget+496 S4 A128])) "ETAFLD2.f":286 86 {*movsi_internal}
     (nil))
(insn 846 845 847 63 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:364 _278 ] [364])
            (const_int 0 [0]))) "ETAFLD2.f":286 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 847 846 848 63 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 872)
            (pc))) "ETAFLD2.f":286 682 {*jcc}
     (nil)
 -> 872)
;;  succ:       70
;;              64 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 64, loop depth 0, maybe hot
;;  prev block 63, next block 65, flags: (RTL, MODIFIED)
;;  pred:       63 (FALLTHRU)
;; bb 64 artificial_defs: { }
;; bb 64 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 365
(note 848 847 849 64 [bb 64] NOTE_INSN_BASIC_BLOCK)
(insn 849 848 850 64 (set (reg:SI 0 ax [orig:365 _279 ] [365])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 592 [0x250]))) [1 rqstfld.iget+576 S4 A128])) "ETAFLD2.f":286 86 {*movsi_internal}
     (nil))
(insn 850 849 851 64 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:365 _279 ] [365])
            (const_int 0 [0]))) "ETAFLD2.f":286 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 851 850 852 64 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 872)
            (pc))) "ETAFLD2.f":286 682 {*jcc}
     (nil)
 -> 872)
;;  succ:       70
;;              65 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 65, loop depth 0, maybe hot
;;  prev block 64, next block 66, flags: (RTL, MODIFIED)
;;  pred:       64 (FALLTHRU)
;; bb 65 artificial_defs: { }
;; bb 65 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 366
(note 852 851 853 65 [bb 65] NOTE_INSN_BASIC_BLOCK)
(insn 853 852 854 65 (set (reg:SI 0 ax [orig:366 _280 ] [366])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 324 [0x144]))) [1 rqstfld.iget+308 S4 A32])) "ETAFLD2.f":286 86 {*movsi_internal}
     (nil))
(insn 854 853 855 65 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:366 _280 ] [366])
            (const_int 0 [0]))) "ETAFLD2.f":286 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 855 854 856 65 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 872)
            (pc))) "ETAFLD2.f":286 682 {*jcc}
     (nil)
 -> 872)
;;  succ:       70
;;              66 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 66, loop depth 0, maybe hot
;;  prev block 65, next block 67, flags: (RTL, MODIFIED)
;;  pred:       65 (FALLTHRU)
;; bb 66 artificial_defs: { }
;; bb 66 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 367
(note 856 855 857 66 [bb 66] NOTE_INSN_BASIC_BLOCK)
(insn 857 856 858 66 (set (reg:SI 0 ax [orig:367 _281 ] [367])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 328 [0x148]))) [1 rqstfld.iget+312 S4 A64])) "ETAFLD2.f":286 86 {*movsi_internal}
     (nil))
(insn 858 857 859 66 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:367 _281 ] [367])
            (const_int 0 [0]))) "ETAFLD2.f":286 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 859 858 860 66 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 872)
            (pc))) "ETAFLD2.f":286 682 {*jcc}
     (nil)
 -> 872)
;;  succ:       70
;;              67 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 67, loop depth 0, maybe hot
;;  prev block 66, next block 68, flags: (RTL, MODIFIED)
;;  pred:       66 (FALLTHRU)
;; bb 67 artificial_defs: { }
;; bb 67 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 368
(note 860 859 861 67 [bb 67] NOTE_INSN_BASIC_BLOCK)
(insn 861 860 862 67 (set (reg:SI 0 ax [orig:368 _282 ] [368])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 572 [0x23c]))) [1 rqstfld.iget+556 S4 A32])) "ETAFLD2.f":286 86 {*movsi_internal}
     (nil))
(insn 862 861 863 67 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:368 _282 ] [368])
            (const_int 0 [0]))) "ETAFLD2.f":286 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 863 862 864 67 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 872)
            (pc))) "ETAFLD2.f":286 682 {*jcc}
     (nil)
 -> 872)
;;  succ:       70
;;              68 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 68, loop depth 0, maybe hot
;;  prev block 67, next block 69, flags: (RTL, MODIFIED)
;;  pred:       67 (FALLTHRU)
;; bb 68 artificial_defs: { }
;; bb 68 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 369
(note 864 863 865 68 [bb 68] NOTE_INSN_BASIC_BLOCK)
(insn 865 864 866 68 (set (reg:SI 0 ax [orig:369 _283 ] [369])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 172 [0xac]))) [1 rqstfld.iget+156 S4 A32])) "ETAFLD2.f":286 86 {*movsi_internal}
     (nil))
(insn 866 865 867 68 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:369 _283 ] [369])
            (const_int 0 [0]))) "ETAFLD2.f":286 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 867 866 868 68 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 872)
            (pc))) "ETAFLD2.f":286 682 {*jcc}
     (nil)
 -> 872)
;;  succ:       70
;;              69 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 69, loop depth 0, maybe hot
;;  prev block 68, next block 70, flags: (RTL, MODIFIED)
;;  pred:       68 (FALLTHRU)
;; bb 69 artificial_defs: { }
;; bb 69 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 370
(note 868 867 869 69 [bb 69] NOTE_INSN_BASIC_BLOCK)
(insn 869 868 870 69 (set (reg:SI 0 ax [orig:370 _284 ] [370])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 732 [0x2dc]))) [1 rqstfld.iget+716 S4 A32])) "ETAFLD2.f":286 86 {*movsi_internal}
     (nil))
(insn 870 869 871 69 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:370 _284 ] [370])
            (const_int 0 [0]))) "ETAFLD2.f":286 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 871 870 872 69 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 5726)
            (pc))) "ETAFLD2.f":286 682 {*jcc}
     (nil)
 -> 5726)
;;  succ:       70 (FALLTHRU)
;;              373
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 70, loop depth 0, maybe hot
;;  prev block 69, next block 71, flags: (RTL, MODIFIED)
;;  pred:       47
;;              48
;;              49
;;              50
;;              51
;;              52
;;              53
;;              54
;;              55
;;              56
;;              57
;;              58
;;              59
;;              60
;;              61
;;              62
;;              63
;;              64
;;              65
;;              66
;;              67
;;              68
;;              69 (FALLTHRU)
;; bb 70 artificial_defs: { }
;; bb 70 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 371
(code_label 872 871 873 70 32 (nil) [22 uses])
(note 873 872 874 70 [bb 70] NOTE_INSN_BASIC_BLOCK)
(insn 874 873 875 70 (set (reg:SI 0 ax [orig:371 _285 ] [371])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 508 [0x1fc]))) [1 rqstfld.iget+492 S4 A32])) "ETAFLD2.f":294 86 {*movsi_internal}
     (nil))
(insn 875 874 876 70 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:371 _285 ] [371])
            (const_int 0 [0]))) "ETAFLD2.f":294 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 876 875 877 70 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 893)
            (pc))) "ETAFLD2.f":294 682 {*jcc}
     (nil)
 -> 893)
;;  succ:       75
;;              71 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 71, loop depth 0, maybe hot
;;  prev block 70, next block 72, flags: (RTL, MODIFIED)
;;  pred:       70 (FALLTHRU)
;; bb 71 artificial_defs: { }
;; bb 71 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 372
(note 877 876 878 71 [bb 71] NOTE_INSN_BASIC_BLOCK)
(insn 878 877 879 71 (set (reg:SI 0 ax [orig:372 _286 ] [372])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 512 [0x200]))) [1 rqstfld.iget+496 S4 A128])) "ETAFLD2.f":294 86 {*movsi_internal}
     (nil))
(insn 879 878 880 71 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:372 _286 ] [372])
            (const_int 0 [0]))) "ETAFLD2.f":294 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 880 879 881 71 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 893)
            (pc))) "ETAFLD2.f":294 682 {*jcc}
     (nil)
 -> 893)
;;  succ:       75
;;              72 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 72, loop depth 0, maybe hot
;;  prev block 71, next block 73, flags: (RTL, MODIFIED)
;;  pred:       71 (FALLTHRU)
;; bb 72 artificial_defs: { }
;; bb 72 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 373
(note 881 880 882 72 [bb 72] NOTE_INSN_BASIC_BLOCK)
(insn 882 881 883 72 (set (reg:SI 0 ax [orig:373 _287 ] [373])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 592 [0x250]))) [1 rqstfld.iget+576 S4 A128])) "ETAFLD2.f":294 86 {*movsi_internal}
     (nil))
(insn 883 882 884 72 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:373 _287 ] [373])
            (const_int 0 [0]))) "ETAFLD2.f":294 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 884 883 885 72 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 893)
            (pc))) "ETAFLD2.f":294 682 {*jcc}
     (nil)
 -> 893)
;;  succ:       75
;;              73 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 73, loop depth 0, maybe hot
;;  prev block 72, next block 74, flags: (RTL, MODIFIED)
;;  pred:       72 (FALLTHRU)
;; bb 73 artificial_defs: { }
;; bb 73 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 374
(note 885 884 886 73 [bb 73] NOTE_INSN_BASIC_BLOCK)
(insn 886 885 887 73 (set (reg:SI 0 ax [orig:374 _288 ] [374])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 36 [0x24]))) [1 rqstfld.iget+20 S4 A32])) "ETAFLD2.f":294 86 {*movsi_internal}
     (nil))
(insn 887 886 888 73 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:374 _288 ] [374])
            (const_int 0 [0]))) "ETAFLD2.f":294 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 888 887 889 73 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 893)
            (pc))) "ETAFLD2.f":294 682 {*jcc}
     (nil)
 -> 893)
;;  succ:       75
;;              74 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 74, loop depth 0, maybe hot
;;  prev block 73, next block 75, flags: (RTL, MODIFIED)
;;  pred:       73 (FALLTHRU)
;; bb 74 artificial_defs: { }
;; bb 74 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 375
(note 889 888 890 74 [bb 74] NOTE_INSN_BASIC_BLOCK)
(insn 890 889 891 74 (set (reg:SI 0 ax [orig:375 _289 ] [375])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 732 [0x2dc]))) [1 rqstfld.iget+716 S4 A32])) "ETAFLD2.f":294 86 {*movsi_internal}
     (nil))
(insn 891 890 892 74 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:375 _289 ] [375])
            (const_int 0 [0]))) "ETAFLD2.f":294 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 892 891 893 74 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 5729)
            (pc))) "ETAFLD2.f":294 682 {*jcc}
     (nil)
 -> 5729)
;;  succ:       75 (FALLTHRU)
;;              374
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 75, loop depth 0, maybe hot
;;  prev block 74, next block 76, flags: (RTL, MODIFIED)
;;  pred:       70
;;              71
;;              72
;;              73
;;              74 (FALLTHRU)
;; bb 75 artificial_defs: { }
;; bb 75 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 1676 1677 1935
(code_label 893 892 894 75 34 (nil) [4 uses])
(note 894 893 895 75 [bb 75] NOTE_INSN_BASIC_BLOCK)
(insn 895 894 896 75 (set (reg:SF 21 xmm0 [1935])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC11") [flags 0x2]) [0  S4 A32])) "ETAFLD2.f":295 131 {*movsf_internal}
     (nil))
(insn 896 895 897 75 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -148 [0xffffffffffffff6c])) [2 climit+0 S4 A32])
        (reg:SF 21 xmm0 [1935])) "ETAFLD2.f":295 131 {*movsf_internal}
     (nil))
(insn 897 896 898 75 (set (reg:SI 1 dx [orig:1676 _1824 ] [1676])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f982824fc60 parallel>)
                    (const_int 8 [0x8]))) [1 parallel.jsta+0 S4 A64])) "ETAFLD2.f":297 86 {*movsi_internal}
     (nil))
(insn 898 897 899 75 (set (reg:SI 0 ax [orig:1677 _1825 ] [1677])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f982824fc60 parallel>)
                    (const_int 12 [0xc]))) [1 parallel.jend+0 S4 A32])) "ETAFLD2.f":297 86 {*movsi_internal}
     (nil))
(insn 899 898 932 75 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])
        (reg:SI 1 dx [orig:1676 _1824 ] [1676])) "ETAFLD2.f":297 86 {*movsi_internal}
     (nil))
;;  succ:       76 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1677

;; basic block 76, loop depth 0, maybe hot
;;  prev block 75, next block 77, flags: (RTL, MODIFIED)
;;  pred:       75 (FALLTHRU)
;;              80 [always] 
;; bb 76 artificial_defs: { }
;; bb 76 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1677
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1677
;; lr  def 	 17 [flags] 1678 1936
(code_label 932 899 900 76 39 (nil) [1 uses])
(note 900 932 901 76 [bb 76] NOTE_INSN_BASIC_BLOCK)
(insn 901 900 902 76 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])
            (reg:SI 0 ax [orig:1677 _1825 ] [1677]))) "ETAFLD2.f":297 11 {*cmpsi_1}
     (nil))
(insn 902 901 903 76 (set (reg:QI 1 dx [1936])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "ETAFLD2.f":297 678 {*setcc_qi}
     (nil))
(insn 903 902 904 76 (set (reg:SI 1 dx [orig:1678 _1827 ] [1678])
        (zero_extend:SI (reg:QI 1 dx [1936]))) "ETAFLD2.f":297 140 {*zero_extendqisi2}
     (nil))
(insn 904 903 905 76 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1678 _1827 ] [1678])
            (const_int 0 [0]))) "ETAFLD2.f":297 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 905 904 906 76 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 5732)
            (pc))) "ETAFLD2.f":297 682 {*jcc}
     (nil)
 -> 5732)
;;  succ:       375
;;              77 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1677

;; basic block 77, loop depth 0, maybe hot
;;  prev block 76, next block 78, flags: (RTL, MODIFIED)
;;  pred:       76 (FALLTHRU)
;; bb 77 artificial_defs: { }
;; bb 77 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1677
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 906 905 907 77 [bb 77] NOTE_INSN_BASIC_BLOCK)
(insn 907 906 926 77 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
        (const_int 1 [0x1])) "ETAFLD2.f":298 86 {*movsi_internal}
     (nil))
;;  succ:       78 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1677

;; basic block 78, loop depth 0, maybe hot
;;  prev block 77, next block 79, flags: (RTL, MODIFIED)
;;  pred:       77 (FALLTHRU)
;;              79 [always] 
;; bb 78 artificial_defs: { }
;; bb 78 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1677
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1679 1937
(code_label 926 907 908 78 38 (nil) [1 uses])
(note 908 926 909 78 [bb 78] NOTE_INSN_BASIC_BLOCK)
(insn 909 908 910 78 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
            (const_int 119 [0x77]))) "ETAFLD2.f":298 11 {*cmpsi_1}
     (nil))
(insn 910 909 911 78 (set (reg:QI 1 dx [1937])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "ETAFLD2.f":298 678 {*setcc_qi}
     (nil))
(insn 911 910 912 78 (set (reg:SI 1 dx [orig:1679 _1829 ] [1679])
        (zero_extend:SI (reg:QI 1 dx [1937]))) "ETAFLD2.f":298 140 {*zero_extendqisi2}
     (nil))
(insn 912 911 913 78 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1679 _1829 ] [1679])
            (const_int 0 [0]))) "ETAFLD2.f":298 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 913 912 914 78 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 5735)
            (pc))) "ETAFLD2.f":298 682 {*jcc}
     (nil)
 -> 5735)
;;  succ:       376
;;              79 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1677

;; basic block 79, loop depth 0, maybe hot
;;  prev block 78, next block 376, flags: (RTL, MODIFIED)
;;  pred:       78 (FALLTHRU)
;; bb 79 artificial_defs: { }
;; bb 79 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1677
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 376 377 378 379 380 1938 1939 1940 1941
(note 914 913 915 79 [bb 79] NOTE_INSN_BASIC_BLOCK)
(insn 915 914 916 79 (set (reg:SI 1 dx [1938])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])) "ETAFLD2.f":299 86 {*movsi_internal}
     (nil))
(insn 916 915 917 79 (set (reg:DI 1 dx [orig:376 _290 ] [376])
        (sign_extend:DI (reg:SI 1 dx [1938]))) "ETAFLD2.f":299 149 {*extendsidi2_rex64}
     (nil))
(insn 917 916 918 79 (parallel [
            (set (reg:DI 2 cx [orig:377 _291 ] [377])
                (mult:DI (reg:DI 1 dx [orig:376 _290 ] [376])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":299 349 {*muldi3_1}
     (nil))
(insn 918 917 919 79 (set (reg:SI 1 dx [1939])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "ETAFLD2.f":299 86 {*movsi_internal}
     (nil))
(insn 919 918 920 79 (set (reg:DI 1 dx [orig:378 _292 ] [378])
        (sign_extend:DI (reg:SI 1 dx [1939]))) "ETAFLD2.f":299 149 {*extendsidi2_rex64}
     (nil))
(insn 920 919 921 79 (parallel [
            (set (reg:DI 1 dx [orig:379 _293 ] [379])
                (plus:DI (reg:DI 1 dx [orig:378 _292 ] [378])
                    (reg:DI 2 cx [orig:377 _291 ] [377])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":299 222 {*adddi_1}
     (nil))
(insn 921 920 922 79 (parallel [
            (set (reg:DI 2 cx [orig:380 _294 ] [380])
                (plus:DI (reg:DI 1 dx [orig:379 _293 ] [379])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":299 222 {*adddi_1}
     (nil))
(insn 922 921 923 79 (set (reg/f:DI 1 dx [1940])
        (symbol_ref:DI ("iw.4421") [flags 0x202]  <var_decl 0x7f9827e68bd0 iw>)) "ETAFLD2.f":299 85 {*movdi_internal}
     (nil))
(insn 923 922 924 79 (set (reg:SF 21 xmm0 [1941])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) "ETAFLD2.f":299 131 {*movsf_internal}
     (nil))
(insn 924 923 925 79 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:380 _294 ] [380])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1940])) [2 iw S4 A32])
        (reg:SF 21 xmm0 [1941])) "ETAFLD2.f":299 131 {*movsf_internal}
     (nil))
(insn 925 924 5608 79 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":298 221 {*addsi_1}
     (nil))
(jump_insn 5608 925 5609 79 (set (pc)
        (label_ref 926)) "ETAFLD2.f":298 683 {jump}
     (nil)
 -> 926)
;;  succ:       78 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1677

(barrier 5609 5608 5735)
;; basic block 376, loop depth 0, maybe hot
;;  prev block 79, next block 80, flags: (RTL, MODIFIED)
;;  pred:       78
;; bb 376 artificial_defs: { }
;; bb 376 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1677
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 5735 5609 5734 376 236 (nil) [1 uses])
(note 5734 5735 5736 376 [bb 376] NOTE_INSN_BASIC_BLOCK)
(insn 5736 5734 929 376 (const_int 0 [0]) "ETAFLD2.f":299 718 {nop}
     (nil))
;;  succ:       80 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1677

;; basic block 80, loop depth 0, maybe hot
;;  prev block 376, next block 375, flags: (RTL, MODIFIED)
;;  pred:       376 [always]  (FALLTHRU)
;; bb 80 artificial_defs: { }
;; bb 80 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1677
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 929 5736 930 80 37 (nil) [0 uses])
(note 930 929 931 80 [bb 80] NOTE_INSN_BASIC_BLOCK)
(insn 931 930 5610 80 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":297 221 {*addsi_1}
     (nil))
(jump_insn 5610 931 5611 80 (set (pc)
        (label_ref 932)) "ETAFLD2.f":297 683 {jump}
     (nil)
 -> 932)
;;  succ:       76 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1677

(barrier 5611 5610 5732)
;; basic block 375, loop depth 0, maybe hot
;;  prev block 80, next block 81, flags: (RTL, MODIFIED)
;;  pred:       76
;; bb 375 artificial_defs: { }
;; bb 375 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 5732 5611 5731 375 235 (nil) [1 uses])
(note 5731 5732 5733 375 [bb 375] NOTE_INSN_BASIC_BLOCK)
(insn 5733 5731 935 375 (const_int 0 [0]) "ETAFLD2.f":298 718 {nop}
     (nil))
;;  succ:       81 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 81, loop depth 0, maybe hot
;;  prev block 375, next block 82, flags: (RTL, MODIFIED)
;;  pred:       375 [always]  (FALLTHRU)
;; bb 81 artificial_defs: { }
;; bb 81 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 935 5733 936 81 36 (nil) [0 uses])
(note 936 935 937 81 [bb 81] NOTE_INSN_BASIC_BLOCK)
(insn 937 936 1360 81 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])
        (const_int 2 [0x2])) "ETAFLD2.f":303 86 {*movsi_internal}
     (nil))
;;  succ:       82 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 82, loop depth 0, maybe hot
;;  prev block 81, next block 83, flags: (RTL, MODIFIED)
;;  pred:       81 (FALLTHRU)
;;              106 [always] 
;; bb 82 artificial_defs: { }
;; bb 82 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 381 1680 1942
(code_label 1360 937 938 82 59 (nil) [1 uses])
(note 938 1360 939 82 [bb 82] NOTE_INSN_BASIC_BLOCK)
(insn 939 938 940 82 (set (reg:SI 0 ax [orig:381 l.43_295 ] [381])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":303 86 {*movsi_internal}
     (nil))
(insn 940 939 941 82 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [orig:381 l.43_295 ] [381])
            (const_int 38 [0x26]))) "ETAFLD2.f":303 11 {*cmpsi_1}
     (nil))
(insn 941 940 942 82 (set (reg:QI 0 ax [1942])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "ETAFLD2.f":303 678 {*setcc_qi}
     (nil))
(insn 942 941 943 82 (set (reg:SI 0 ax [orig:1680 _1834 ] [1680])
        (zero_extend:SI (reg:QI 0 ax [1942]))) "ETAFLD2.f":303 140 {*zero_extendqisi2}
     (nil))
(insn 943 942 944 82 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:1680 _1834 ] [1680])
            (const_int 0 [0]))) "ETAFLD2.f":303 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 944 943 945 82 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 5729)
            (pc))) "ETAFLD2.f":303 682 {*jcc}
     (nil)
 -> 5729)
;;  succ:       374
;;              83 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 83, loop depth 0, maybe hot
;;  prev block 82, next block 84, flags: (RTL, MODIFIED)
;;  pred:       82 (FALLTHRU)
;; bb 83 artificial_defs: { }
;; bb 83 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 1681 1682
(note 945 944 946 83 [bb 83] NOTE_INSN_BASIC_BLOCK)
(insn 946 945 947 83 (set (reg:SI 0 ax [orig:1681 _1835 ] [1681])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f982824fc60 parallel>)
                    (const_int 8 [0x8]))) [1 parallel.jsta+0 S4 A64])) "ETAFLD2.f":304 86 {*movsi_internal}
     (nil))
(insn 947 946 948 83 (set (reg:SI 3 bx [orig:1682 _1836 ] [1682])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f982824fc60 parallel>)
                    (const_int 12 [0xc]))) [1 parallel.jend+0 S4 A32])) "ETAFLD2.f":304 86 {*movsi_internal}
     (nil))
(insn 948 947 1352 83 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])
        (reg:SI 0 ax [orig:1681 _1835 ] [1681])) "ETAFLD2.f":304 86 {*movsi_internal}
     (nil))
;;  succ:       84 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1682

;; basic block 84, loop depth 0, maybe hot
;;  prev block 83, next block 85, flags: (RTL, MODIFIED)
;;  pred:       83 (FALLTHRU)
;;              105 [always] 
;; bb 84 artificial_defs: { }
;; bb 84 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1682
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1682
;; lr  def 	 17 [flags] 1683 1943
(code_label 1352 948 949 84 58 (nil) [1 uses])
(note 949 1352 950 84 [bb 84] NOTE_INSN_BASIC_BLOCK)
(insn 950 949 951 84 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])
            (reg:SI 3 bx [orig:1682 _1836 ] [1682]))) "ETAFLD2.f":304 11 {*cmpsi_1}
     (nil))
(insn 951 950 952 84 (set (reg:QI 0 ax [1943])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "ETAFLD2.f":304 678 {*setcc_qi}
     (nil))
(insn 952 951 953 84 (set (reg:SI 0 ax [orig:1683 _1838 ] [1683])
        (zero_extend:SI (reg:QI 0 ax [1943]))) "ETAFLD2.f":304 140 {*zero_extendqisi2}
     (nil))
(insn 953 952 954 84 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:1683 _1838 ] [1683])
            (const_int 0 [0]))) "ETAFLD2.f":304 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 954 953 955 84 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 5738)
            (pc))) "ETAFLD2.f":304 682 {*jcc}
     (nil)
 -> 5738)
;;  succ:       377
;;              85 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1682

;; basic block 85, loop depth 0, maybe hot
;;  prev block 84, next block 86, flags: (RTL, MODIFIED)
;;  pred:       84 (FALLTHRU)
;; bb 85 artificial_defs: { }
;; bb 85 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1682
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 955 954 956 85 [bb 85] NOTE_INSN_BASIC_BLOCK)
(insn 956 955 1346 85 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
        (const_int 1 [0x1])) "ETAFLD2.f":305 86 {*movsi_internal}
     (nil))
;;  succ:       86 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1682

;; basic block 86, loop depth 0, maybe hot
;;  prev block 85, next block 87, flags: (RTL, MODIFIED)
;;  pred:       85 (FALLTHRU)
;;              104 [always] 
;; bb 86 artificial_defs: { }
;; bb 86 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1682
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1684 1944
(code_label 1346 956 957 86 57 (nil) [1 uses])
(note 957 1346 958 86 [bb 86] NOTE_INSN_BASIC_BLOCK)
(insn 958 957 959 86 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
            (const_int 119 [0x77]))) "ETAFLD2.f":305 11 {*cmpsi_1}
     (nil))
(insn 959 958 960 86 (set (reg:QI 0 ax [1944])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "ETAFLD2.f":305 678 {*setcc_qi}
     (nil))
(insn 960 959 961 86 (set (reg:SI 0 ax [orig:1684 _1840 ] [1684])
        (zero_extend:SI (reg:QI 0 ax [1944]))) "ETAFLD2.f":305 140 {*zero_extendqisi2}
     (nil))
(insn 961 960 962 86 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:1684 _1840 ] [1684])
            (const_int 0 [0]))) "ETAFLD2.f":305 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 962 961 963 86 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 5741)
            (pc))) "ETAFLD2.f":305 682 {*jcc}
     (nil)
 -> 5741)
;;  succ:       378
;;              87 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1682

;; basic block 87, loop depth 0, maybe hot
;;  prev block 86, next block 88, flags: (RTL, MODIFIED)
;;  pred:       86 (FALLTHRU)
;; bb 87 artificial_defs: { }
;; bb 87 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1682
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431 432 433 434 435 1634 1945 1946 1947 1948 1949 1950 1951 1952 1953 1954 1955 1956 1957 1958 1959 1960 1961 1962 1963 1964 1965 1966 1967 1968 1969 1970 1971 1972 1973 1974 1975 1976 1977 1978
(note 963 962 964 87 [bb 87] NOTE_INSN_BASIC_BLOCK)
(insn 964 963 965 87 (set (reg:SI 0 ax [1945])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])) "ETAFLD2.f":306 86 {*movsi_internal}
     (nil))
(insn 965 964 966 87 (set (reg:DI 0 ax [orig:382 _296 ] [382])
        (sign_extend:DI (reg:SI 0 ax [1945]))) "ETAFLD2.f":306 149 {*extendsidi2_rex64}
     (nil))
(insn 966 965 967 87 (parallel [
            (set (reg:DI 1 dx [orig:383 _297 ] [383])
                (mult:DI (reg:DI 0 ax [orig:382 _296 ] [382])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":306 349 {*muldi3_1}
     (nil))
(insn 967 966 968 87 (set (reg:SI 0 ax [1946])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "ETAFLD2.f":306 86 {*movsi_internal}
     (nil))
(insn 968 967 969 87 (set (reg:DI 0 ax [orig:384 _298 ] [384])
        (sign_extend:DI (reg:SI 0 ax [1946]))) "ETAFLD2.f":306 149 {*extendsidi2_rex64}
     (nil))
(insn 969 968 970 87 (parallel [
            (set (reg:DI 0 ax [orig:385 _299 ] [385])
                (plus:DI (reg:DI 0 ax [orig:384 _298 ] [384])
                    (reg:DI 1 dx [orig:383 _297 ] [383])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":306 222 {*adddi_1}
     (nil))
(insn 970 969 971 87 (parallel [
            (set (reg:DI 1 dx [orig:386 _300 ] [386])
                (plus:DI (reg:DI 0 ax [orig:385 _299 ] [385])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":306 222 {*adddi_1}
     (nil))
(insn 971 970 972 87 (set (reg/f:DI 0 ax [1947])
        (symbol_ref:DI ("loops_") [flags 0x202]  <var_decl 0x7f9828246c60 loops>)) "ETAFLD2.f":306 85 {*movdi_internal}
     (nil))
(insn 972 971 973 87 (parallel [
            (set (reg:DI 1 dx [1948])
                (plus:DI (reg:DI 1 dx [orig:386 _300 ] [386])
                    (const_int 2420 [0x974])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":306 222 {*adddi_1}
     (nil))
(insn 973 972 974 87 (set (reg:SI 0 ax [orig:387 _301 ] [387])
        (mem:SI (plus:DI (mult:DI (reg:DI 1 dx [1948])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1947])) [1 loops.lmh S4 A32])) "ETAFLD2.f":306 86 {*movsi_internal}
     (nil))
(insn 974 973 975 87 (set (reg:SI 1 dx [1949])
        (const_int 38 [0x26])) "ETAFLD2.f":306 86 {*movsi_internal}
     (nil))
(insn 975 974 5845 87 (parallel [
            (set (reg:SI 1 dx [1949])
                (minus:SI (reg:SI 1 dx [1949])
                    (reg:SI 0 ax [orig:387 _301 ] [387])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":306 277 {*subsi_1}
     (nil))
(insn 5845 975 976 87 (set (reg:SI 0 ax [1950])
        (reg:SI 1 dx [1949])) "ETAFLD2.f":306 86 {*movsi_internal}
     (nil))
(insn 976 5845 977 87 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -152 [0xffffffffffffff68])) [1 lml+0 S4 A32])
        (reg:SI 0 ax [1950])) "ETAFLD2.f":306 86 {*movsi_internal}
     (nil))
(insn 977 976 978 87 (set (reg:SI 0 ax [orig:388 l.44_302 ] [388])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":307 86 {*movsi_internal}
     (nil))
(insn 978 977 979 87 (set (reg:DI 0 ax [orig:389 _303 ] [389])
        (sign_extend:DI (reg:SI 0 ax [orig:388 l.44_302 ] [388]))) "ETAFLD2.f":307 149 {*extendsidi2_rex64}
     (nil))
(insn 979 978 980 87 (parallel [
            (set (reg:DI 1 dx [orig:390 _304 ] [390])
                (mult:DI (reg:DI 0 ax [orig:389 _303 ] [389])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":307 349 {*muldi3_1}
     (nil))
(insn 980 979 981 87 (set (reg:SI 0 ax [1951])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])) "ETAFLD2.f":307 86 {*movsi_internal}
     (nil))
(insn 981 980 982 87 (set (reg:DI 0 ax [orig:391 _305 ] [391])
        (sign_extend:DI (reg:SI 0 ax [1951]))) "ETAFLD2.f":307 149 {*extendsidi2_rex64}
     (nil))
(insn 982 981 983 87 (parallel [
            (set (reg:DI 0 ax [orig:392 _306 ] [392])
                (mult:DI (reg:DI 0 ax [orig:391 _305 ] [391])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":307 349 {*muldi3_1}
     (nil))
(insn 983 982 984 87 (parallel [
            (set (reg:DI 1 dx [orig:393 _307 ] [393])
                (plus:DI (reg:DI 1 dx [orig:390 _304 ] [390])
                    (reg:DI 0 ax [orig:392 _306 ] [392])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":307 222 {*adddi_1}
     (nil))
(insn 984 983 985 87 (set (reg:SI 0 ax [1952])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "ETAFLD2.f":307 86 {*movsi_internal}
     (nil))
(insn 985 984 986 87 (set (reg:DI 0 ax [orig:394 _308 ] [394])
        (sign_extend:DI (reg:SI 0 ax [1952]))) "ETAFLD2.f":307 149 {*extendsidi2_rex64}
     (nil))
(insn 986 985 987 87 (parallel [
            (set (reg:DI 0 ax [orig:395 _309 ] [395])
                (plus:DI (reg:DI 0 ax [orig:394 _308 ] [394])
                    (reg:DI 1 dx [orig:393 _307 ] [393])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":307 222 {*adddi_1}
     (nil))
(insn 987 986 988 87 (parallel [
            (set (reg:DI 1 dx [orig:396 _310 ] [396])
                (plus:DI (reg:DI 0 ax [orig:395 _309 ] [395])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":307 222 {*adddi_1}
     (nil))
(insn 988 987 989 87 (set (reg/f:DI 0 ax [1953])
        (symbol_ref:DI ("masks_") [flags 0x202]  <var_decl 0x7f982824f480 masks>)) "ETAFLD2.f":307 85 {*movdi_internal}
     (nil))
(insn 989 988 990 87 (parallel [
            (set (reg:DI 1 dx [1954])
                (plus:DI (reg:DI 1 dx [orig:396 _310 ] [396])
                    (const_int 148155 [0x242bb])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":307 222 {*adddi_1}
     (nil))
(insn 990 989 991 87 (set (reg:SF 22 xmm1 [orig:397 _311 ] [397])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [1954])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1953])) [2 masks.htm S4 A32])) "ETAFLD2.f":307 131 {*movsf_internal}
     (nil))
(insn 991 990 992 87 (set (reg:SI 0 ax [1955])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])) "ETAFLD2.f":307 86 {*movsi_internal}
     (nil))
(insn 992 991 993 87 (set (reg:DI 0 ax [orig:398 _312 ] [398])
        (sign_extend:DI (reg:SI 0 ax [1955]))) "ETAFLD2.f":307 149 {*extendsidi2_rex64}
     (nil))
(insn 993 992 994 87 (parallel [
            (set (reg:DI 1 dx [orig:399 _313 ] [399])
                (mult:DI (reg:DI 0 ax [orig:398 _312 ] [398])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":307 349 {*muldi3_1}
     (nil))
(insn 994 993 995 87 (set (reg:SI 0 ax [1956])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "ETAFLD2.f":307 86 {*movsi_internal}
     (nil))
(insn 995 994 996 87 (set (reg:DI 0 ax [orig:400 _314 ] [400])
        (sign_extend:DI (reg:SI 0 ax [1956]))) "ETAFLD2.f":307 149 {*extendsidi2_rex64}
     (nil))
(insn 996 995 997 87 (parallel [
            (set (reg:DI 0 ax [orig:401 _315 ] [401])
                (plus:DI (reg:DI 0 ax [orig:400 _314 ] [400])
                    (reg:DI 1 dx [orig:399 _313 ] [399])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":307 222 {*adddi_1}
     (nil))
(insn 997 996 998 87 (parallel [
            (set (reg:DI 1 dx [orig:402 _316 ] [402])
                (plus:DI (reg:DI 0 ax [orig:401 _315 ] [401])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":307 222 {*adddi_1}
     (nil))
(insn 998 997 999 87 (set (reg/f:DI 0 ax [1957])
        (symbol_ref:DI ("masks_") [flags 0x202]  <var_decl 0x7f982824f480 masks>)) "ETAFLD2.f":307 85 {*movdi_internal}
     (nil))
(insn 999 998 1000 87 (set (reg:SF 21 xmm0 [orig:403 _317 ] [403])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:402 _316 ] [402])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1957])) [2 masks.hbm2 S4 A32])) "ETAFLD2.f":307 131 {*movsf_internal}
     (nil))
(insn 1000 999 1001 87 (set (reg:SF 21 xmm0 [1958])
        (mult:SF (reg:SF 21 xmm0 [orig:403 _317 ] [403])
            (reg:SF 22 xmm1 [orig:397 _311 ] [397]))) "ETAFLD2.f":307 838 {*fop_sf_comm}
     (nil))
(insn 1001 1000 1002 87 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -156 [0xffffffffffffff64])) [2 hh+0 S4 A32])
        (reg:SF 21 xmm0 [1958])) "ETAFLD2.f":307 131 {*movsf_internal}
     (nil))
(insn 1002 1001 1003 87 (set (reg:SI 0 ax [orig:404 l.45_318 ] [404])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":308 86 {*movsi_internal}
     (nil))
(insn 1003 1002 1004 87 (set (reg:DI 0 ax [orig:405 _319 ] [405])
        (sign_extend:DI (reg:SI 0 ax [orig:404 l.45_318 ] [404]))) "ETAFLD2.f":308 149 {*extendsidi2_rex64}
     (nil))
(insn 1004 1003 1005 87 (parallel [
            (set (reg:DI 1 dx [orig:406 _320 ] [406])
                (mult:DI (reg:DI 0 ax [orig:405 _319 ] [405])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":308 349 {*muldi3_1}
     (nil))
(insn 1005 1004 1006 87 (set (reg:SI 0 ax [1959])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])) "ETAFLD2.f":308 86 {*movsi_internal}
     (nil))
(insn 1006 1005 1007 87 (set (reg:DI 0 ax [orig:407 _321 ] [407])
        (sign_extend:DI (reg:SI 0 ax [1959]))) "ETAFLD2.f":308 149 {*extendsidi2_rex64}
     (nil))
(insn 1007 1006 1008 87 (parallel [
            (set (reg:DI 0 ax [orig:408 _322 ] [408])
                (mult:DI (reg:DI 0 ax [orig:407 _321 ] [407])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":308 349 {*muldi3_1}
     (nil))
(insn 1008 1007 1009 87 (parallel [
            (set (reg:DI 1 dx [orig:409 _323 ] [409])
                (plus:DI (reg:DI 1 dx [orig:406 _320 ] [406])
                    (reg:DI 0 ax [orig:408 _322 ] [408])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":308 222 {*adddi_1}
     (nil))
(insn 1009 1008 1010 87 (set (reg:SI 0 ax [1960])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "ETAFLD2.f":308 86 {*movsi_internal}
     (nil))
(insn 1010 1009 1011 87 (set (reg:DI 0 ax [orig:410 _324 ] [410])
        (sign_extend:DI (reg:SI 0 ax [1960]))) "ETAFLD2.f":308 149 {*extendsidi2_rex64}
     (nil))
(insn 1011 1010 1012 87 (parallel [
            (set (reg:DI 0 ax [orig:411 _325 ] [411])
                (plus:DI (reg:DI 0 ax [orig:410 _324 ] [410])
                    (reg:DI 1 dx [orig:409 _323 ] [409])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":308 222 {*adddi_1}
     (nil))
(insn 1012 1011 1013 87 (parallel [
            (set (reg:DI 1 dx [orig:412 _326 ] [412])
                (plus:DI (reg:DI 0 ax [orig:411 _325 ] [411])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":308 222 {*adddi_1}
     (nil))
(insn 1013 1012 1014 87 (set (reg/f:DI 0 ax [1961])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7f982825bcf0 vrbls>)) "ETAFLD2.f":308 85 {*movdi_internal}
     (nil))
(insn 1014 1013 1015 87 (parallel [
            (set (reg:DI 1 dx [1962])
                (plus:DI (reg:DI 1 dx [orig:412 _326 ] [412])
                    (const_int 2340849 [0x23b7f1])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":308 222 {*adddi_1}
     (nil))
(insn 1015 1014 1016 87 (set (reg:SF 21 xmm0 [1963])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [1962])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1961])) [2 vrbls.t S4 A32])) "ETAFLD2.f":308 131 {*movsf_internal}
     (nil))
(insn 1016 1015 1017 87 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -160 [0xffffffffffffff60])) [2 tkl+0 S4 A32])
        (reg:SF 21 xmm0 [1963])) "ETAFLD2.f":308 131 {*movsf_internal}
     (nil))
(insn 1017 1016 1018 87 (set (reg:SI 0 ax [orig:413 l.46_327 ] [413])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":309 86 {*movsi_internal}
     (nil))
(insn 1018 1017 1019 87 (set (reg:DI 0 ax [orig:414 _328 ] [414])
        (sign_extend:DI (reg:SI 0 ax [orig:413 l.46_327 ] [413]))) "ETAFLD2.f":309 149 {*extendsidi2_rex64}
     (nil))
(insn 1019 1018 1020 87 (parallel [
            (set (reg:DI 1 dx [orig:415 _329 ] [415])
                (mult:DI (reg:DI 0 ax [orig:414 _328 ] [414])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":309 349 {*muldi3_1}
     (nil))
(insn 1020 1019 1021 87 (set (reg:SI 0 ax [1964])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])) "ETAFLD2.f":309 86 {*movsi_internal}
     (nil))
(insn 1021 1020 1022 87 (set (reg:DI 0 ax [orig:416 _330 ] [416])
        (sign_extend:DI (reg:SI 0 ax [1964]))) "ETAFLD2.f":309 149 {*extendsidi2_rex64}
     (nil))
(insn 1022 1021 1023 87 (parallel [
            (set (reg:DI 0 ax [orig:417 _331 ] [417])
                (mult:DI (reg:DI 0 ax [orig:416 _330 ] [416])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":309 349 {*muldi3_1}
     (nil))
(insn 1023 1022 1024 87 (parallel [
            (set (reg:DI 1 dx [orig:418 _332 ] [418])
                (plus:DI (reg:DI 1 dx [orig:415 _329 ] [415])
                    (reg:DI 0 ax [orig:417 _331 ] [417])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":309 222 {*adddi_1}
     (nil))
(insn 1024 1023 1025 87 (set (reg:SI 0 ax [1965])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "ETAFLD2.f":309 86 {*movsi_internal}
     (nil))
(insn 1025 1024 1026 87 (set (reg:DI 0 ax [orig:419 _333 ] [419])
        (sign_extend:DI (reg:SI 0 ax [1965]))) "ETAFLD2.f":309 149 {*extendsidi2_rex64}
     (nil))
(insn 1026 1025 1027 87 (parallel [
            (set (reg:DI 0 ax [orig:420 _334 ] [420])
                (plus:DI (reg:DI 0 ax [orig:419 _333 ] [419])
                    (reg:DI 1 dx [orig:418 _332 ] [418])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":309 222 {*adddi_1}
     (nil))
(insn 1027 1026 1028 87 (parallel [
            (set (reg:DI 1 dx [orig:421 _335 ] [421])
                (plus:DI (reg:DI 0 ax [orig:420 _334 ] [420])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":309 222 {*adddi_1}
     (nil))
(insn 1028 1027 1029 87 (set (reg/f:DI 0 ax [1966])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7f982825bcf0 vrbls>)) "ETAFLD2.f":309 85 {*movdi_internal}
     (nil))
(insn 1029 1028 1030 87 (parallel [
            (set (reg:DI 1 dx [1967])
                (plus:DI (reg:DI 1 dx [orig:421 _335 ] [421])
                    (const_int 3466827 [0x34e64b])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":309 222 {*adddi_1}
     (nil))
(insn 1030 1029 1031 87 (set (reg:SF 21 xmm0 [1968])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [1967])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1966])) [2 vrbls.q S4 A32])) "ETAFLD2.f":309 131 {*movsf_internal}
     (nil))
(insn 1031 1030 1032 87 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -164 [0xffffffffffffff5c])) [2 qkl+0 S4 A32])
        (reg:SF 21 xmm0 [1968])) "ETAFLD2.f":309 131 {*movsf_internal}
     (nil))
(insn 1032 1031 1033 87 (set (reg:SI 0 ax [orig:422 l.47_336 ] [422])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":310 86 {*movsi_internal}
     (nil))
(insn 1033 1032 1034 87 (set (reg:DI 0 ax [orig:423 _337 ] [423])
        (sign_extend:DI (reg:SI 0 ax [orig:422 l.47_336 ] [422]))) "ETAFLD2.f":310 149 {*extendsidi2_rex64}
     (nil))
(insn 1034 1033 1035 87 (parallel [
            (set (reg:DI 1 dx [orig:424 _338 ] [424])
                (mult:DI (reg:DI 0 ax [orig:423 _337 ] [423])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":310 349 {*muldi3_1}
     (nil))
(insn 1035 1034 1036 87 (set (reg:SI 0 ax [1969])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])) "ETAFLD2.f":310 86 {*movsi_internal}
     (nil))
(insn 1036 1035 1037 87 (set (reg:DI 0 ax [orig:425 _339 ] [425])
        (sign_extend:DI (reg:SI 0 ax [1969]))) "ETAFLD2.f":310 149 {*extendsidi2_rex64}
     (nil))
(insn 1037 1036 1038 87 (parallel [
            (set (reg:DI 0 ax [orig:426 _340 ] [426])
                (mult:DI (reg:DI 0 ax [orig:425 _339 ] [425])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":310 349 {*muldi3_1}
     (nil))
(insn 1038 1037 1039 87 (parallel [
            (set (reg:DI 1 dx [orig:427 _341 ] [427])
                (plus:DI (reg:DI 1 dx [orig:424 _338 ] [424])
                    (reg:DI 0 ax [orig:426 _340 ] [426])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":310 222 {*adddi_1}
     (nil))
(insn 1039 1038 1040 87 (set (reg:SI 0 ax [1970])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "ETAFLD2.f":310 86 {*movsi_internal}
     (nil))
(insn 1040 1039 1041 87 (set (reg:DI 0 ax [orig:428 _342 ] [428])
        (sign_extend:DI (reg:SI 0 ax [1970]))) "ETAFLD2.f":310 149 {*extendsidi2_rex64}
     (nil))
(insn 1041 1040 1042 87 (parallel [
            (set (reg:DI 0 ax [orig:429 _343 ] [429])
                (plus:DI (reg:DI 0 ax [orig:428 _342 ] [428])
                    (reg:DI 1 dx [orig:427 _341 ] [427])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":310 222 {*adddi_1}
     (nil))
(insn 1042 1041 1043 87 (parallel [
            (set (reg:DI 1 dx [orig:430 _344 ] [430])
                (plus:DI (reg:DI 0 ax [orig:429 _343 ] [429])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":310 222 {*adddi_1}
     (nil))
(insn 1043 1042 1044 87 (set (reg/f:DI 0 ax [1971])
        (symbol_ref:DI ("cldwtr_") [flags 0x202]  <var_decl 0x7f9828232a20 cldwtr>)) "ETAFLD2.f":310 85 {*movdi_internal}
     (nil))
(insn 1044 1043 1045 87 (set (reg:SF 21 xmm0 [1972])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:430 _344 ] [430])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1971])) [2 cldwtr.cwm S4 A32])) "ETAFLD2.f":310 131 {*movsf_internal}
     (nil))
(insn 1045 1044 1046 87 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [2 cwmkl+0 S4 A32])
        (reg:SF 21 xmm0 [1972])) "ETAFLD2.f":310 131 {*movsf_internal}
     (nil))
(insn 1046 1045 1047 87 (set (reg:SF 21 xmm0 [1973])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -160 [0xffffffffffffff60])) [2 tkl+0 S4 A32])) "ETAFLD2.f":311 131 {*movsf_internal}
     (nil))
(insn 1047 1046 1048 87 (set (reg:SF 22 xmm1 [1974])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC12") [flags 0x2]) [0  S4 A32])) "ETAFLD2.f":311 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 2.73149993896484375e+2 [0x0.889333p+9])
        (nil)))
(insn 1048 1047 1049 87 (set (reg:SF 21 xmm0 [orig:431 _345 ] [431])
        (minus:SF (reg:SF 21 xmm0 [1973])
            (reg:SF 22 xmm1 [1974]))) "ETAFLD2.f":311 841 {*fop_sf_1}
     (nil))
(insn 1049 1048 1050 87 (set (reg:SF 22 xmm1 [orig:432 _346 ] [432])
        (reg:SF 21 xmm0 [orig:431 _345 ] [431])) "ETAFLD2.f":311 131 {*movsf_internal}
     (nil))
(insn 1050 1049 1051 87 (set (reg:SF 21 xmm0 [1976])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -156 [0xffffffffffffff64])) [2 hh+0 S4 A32])) "ETAFLD2.f":311 131 {*movsf_internal}
     (nil))
(insn 1051 1050 1052 87 (set (reg:SF 21 xmm0 [1975])
        (mult:SF (reg:SF 21 xmm0 [1976])
            (reg:SF 22 xmm1 [orig:432 _346 ] [432]))) "ETAFLD2.f":311 838 {*fop_sf_comm}
     (nil))
(insn 1052 1051 1053 87 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -172 [0xffffffffffffff54])) [2 tmt0+0 S4 A32])
        (reg:SF 21 xmm0 [1975])) "ETAFLD2.f":311 131 {*movsf_internal}
     (nil))
(insn 1053 1052 1054 87 (set (reg:SF 21 xmm0 [orig:1634 M.11_1594 ] [1634])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -172 [0xffffffffffffff54])) [2 tmt0+0 S4 A32])) "ETAFLD2.f":312 131 {*movsf_internal}
     (nil))
(insn 1054 1053 1055 87 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [orig:1634 M.11_1594 ] [1634])
            (mem/u/c:SF (symbol_ref/u:DI ("*.LC13") [flags 0x2]) [0  S4 A32]))) "ETAFLD2.f":312 53 {*cmpisf}
     (nil))
(insn 1055 1054 1056 87 (set (reg:QI 0 ax [1977])
        (gt:QI (reg:CCFP 17 flags)
            (const_int 0 [0]))) "ETAFLD2.f":312 678 {*setcc_qi}
     (nil))
(insn 1056 1055 1057 87 (set (reg:SI 1 dx [orig:433 _347 ] [433])
        (zero_extend:SI (reg:QI 0 ax [1977]))) "ETAFLD2.f":312 140 {*zero_extendqisi2}
     (nil))
(insn 1057 1056 1058 87 (set (reg:CCFP 17 flags)
        (unspec:CCFP [
                (compare:CCFP (reg:SF 21 xmm0 [orig:1634 M.11_1594 ] [1634])
                    (reg:SF 21 xmm0 [orig:1634 M.11_1594 ] [1634]))
            ] UNSPEC_NOTRAP)) "ETAFLD2.f":312 54 {*cmpiusf}
     (nil))
(insn 1058 1057 1059 87 (set (reg:QI 0 ax [1978])
        (unordered:QI (reg:CCFP 17 flags)
            (const_int 0 [0]))) "ETAFLD2.f":312 678 {*setcc_qi}
     (nil))
(insn 1059 1058 1060 87 (set (reg:SI 0 ax [orig:434 _348 ] [434])
        (zero_extend:SI (reg:QI 0 ax [1978]))) "ETAFLD2.f":312 140 {*zero_extendqisi2}
     (nil))
(insn 1060 1059 1061 87 (parallel [
            (set (reg:SI 0 ax [orig:435 _349 ] [435])
                (ior:SI (reg:SI 0 ax [orig:434 _348 ] [434])
                    (reg:SI 1 dx [orig:433 _347 ] [433])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":312 450 {*iorsi_1}
     (nil))
(insn 1061 1060 1062 87 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:435 _349 ] [435])
            (const_int 0 [0]))) "ETAFLD2.f":312 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1062 1061 1063 87 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1065)
            (pc))) "ETAFLD2.f":312 682 {*jcc}
     (nil)
 -> 1065)
;;  succ:       88 (FALLTHRU)
;;              89
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1634 1682

;; basic block 88, loop depth 0, maybe hot
;;  prev block 87, next block 89, flags: (RTL, MODIFIED)
;;  pred:       87 (FALLTHRU)
;; bb 88 artificial_defs: { }
;; bb 88 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1682
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 1634
(note 1063 1062 1064 88 [bb 88] NOTE_INSN_BASIC_BLOCK)
(insn 1064 1063 1065 88 (set (reg:SF 21 xmm0 [orig:1634 M.11_1594 ] [1634])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC13") [flags 0x2]) [0  S4 A32])) "ETAFLD2.f":312 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF -1.5e+1 [-0x0.fp+4])
        (nil)))
;;  succ:       89 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1634 1682

;; basic block 89, loop depth 0, maybe hot
;;  prev block 88, next block 90, flags: (RTL, MODIFIED)
;;  pred:       87
;;              88 (FALLTHRU)
;; bb 89 artificial_defs: { }
;; bb 89 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1634 1682
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1634
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 436 437 438 439 440 441 442 443 444 445 446 447 448 449 450 451 452 453 454 455 456 457 458 459 460 1635 1979 1980 1981 1982 1983 1984 1985 1986 1987 1988 1989 1990 1991 1992 1993 1994 1995 1996 1997 1998 1999
(code_label 1065 1064 1066 89 42 (nil) [1 uses])
(note 1066 1065 1067 89 [bb 89] NOTE_INSN_BASIC_BLOCK)
(insn 1067 1066 1068 89 (set (reg:SF 21 xmm0 [1979])
        (mult:SF (reg:SF 21 xmm0 [orig:1634 M.11_1594 ] [1634])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -156 [0xffffffffffffff64])) [2 hh+0 S4 A32]))) "ETAFLD2.f":312 838 {*fop_sf_comm}
     (nil))
(insn 1068 1067 1069 89 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -176 [0xffffffffffffff50])) [2 tmt15+0 S4 A32])
        (reg:SF 21 xmm0 [1979])) "ETAFLD2.f":312 131 {*movsf_internal}
     (nil))
(insn 1069 1068 1070 89 (set (reg:SI 0 ax [1980])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])) "ETAFLD2.f":313 86 {*movsi_internal}
     (nil))
(insn 1070 1069 1071 89 (set (reg:DI 0 ax [orig:436 _350 ] [436])
        (sign_extend:DI (reg:SI 0 ax [1980]))) "ETAFLD2.f":313 149 {*extendsidi2_rex64}
     (nil))
(insn 1071 1070 1072 89 (parallel [
            (set (reg:DI 1 dx [orig:437 _351 ] [437])
                (mult:DI (reg:DI 0 ax [orig:436 _350 ] [436])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":313 349 {*muldi3_1}
     (nil))
(insn 1072 1071 1073 89 (set (reg:SI 0 ax [1981])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "ETAFLD2.f":313 86 {*movsi_internal}
     (nil))
(insn 1073 1072 1074 89 (set (reg:DI 0 ax [orig:438 _352 ] [438])
        (sign_extend:DI (reg:SI 0 ax [1981]))) "ETAFLD2.f":313 149 {*extendsidi2_rex64}
     (nil))
(insn 1074 1073 1075 89 (parallel [
            (set (reg:DI 0 ax [orig:439 _353 ] [439])
                (plus:DI (reg:DI 0 ax [orig:438 _352 ] [438])
                    (reg:DI 1 dx [orig:437 _351 ] [437])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":313 222 {*adddi_1}
     (nil))
(insn 1075 1074 1076 89 (parallel [
            (set (reg:DI 1 dx [orig:440 _354 ] [440])
                (plus:DI (reg:DI 0 ax [orig:439 _353 ] [439])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":313 222 {*adddi_1}
     (nil))
(insn 1076 1075 1077 89 (set (reg/f:DI 0 ax [1982])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f9828240b40 extra>)) "ETAFLD2.f":313 85 {*movdi_internal}
     (nil))
(insn 1077 1076 1078 89 (parallel [
            (set (reg:DI 1 dx [1983])
                (plus:DI (reg:DI 1 dx [orig:440 _354 ] [440])
                    (const_int 4647393 [0x46e9e1])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":313 222 {*adddi_1}
     (nil))
(insn 1078 1077 1079 89 (set (reg:SF 22 xmm1 [orig:441 _355 ] [441])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [1983])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1982])) [2 extra.pdsl S4 A32])) "ETAFLD2.f":313 131 {*movsf_internal}
     (nil))
(insn 1079 1078 1080 89 (set (reg:SI 0 ax [orig:442 l.48_356 ] [442])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":313 86 {*movsi_internal}
     (nil))
(insn 1080 1079 1081 89 (set (reg:DI 0 ax [orig:443 _357 ] [443])
        (sign_extend:DI (reg:SI 0 ax [orig:442 l.48_356 ] [442]))) "ETAFLD2.f":313 149 {*extendsidi2_rex64}
     (nil))
(insn 1081 1080 1082 89 (parallel [
            (set (reg:DI 1 dx [orig:444 _358 ] [444])
                (plus:DI (reg:DI 0 ax [orig:443 _357 ] [443])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":313 222 {*adddi_1}
     (nil))
(insn 1082 1081 1083 89 (set (reg/f:DI 0 ax [1984])
        (symbol_ref:DI ("mapot_") [flags 0x202]  <var_decl 0x7f982824b120 mapot>)) "ETAFLD2.f":313 85 {*movdi_internal}
     (nil))
(insn 1083 1082 1084 89 (parallel [
            (set (reg:DI 1 dx [1985])
                (plus:DI (reg:DI 1 dx [orig:444 _358 ] [444])
                    (const_int 1000099 [0xf42a3])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":313 222 {*adddi_1}
     (nil))
(insn 1084 1083 1085 89 (set (reg:SF 21 xmm0 [orig:445 _359 ] [445])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [1985])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1984])) [2 mapot.aeta S4 A32])) "ETAFLD2.f":313 131 {*movsf_internal}
     (nil))
(insn 1085 1084 1086 89 (set (reg:SF 22 xmm1 [orig:446 _360 ] [446])
        (mult:SF (reg:SF 22 xmm1 [orig:441 _355 ] [441])
            (reg:SF 21 xmm0 [orig:445 _359 ] [445]))) "ETAFLD2.f":313 838 {*fop_sf_comm}
     (nil))
(insn 1086 1085 1087 89 (set (reg/f:DI 0 ax [1986])
        (symbol_ref:DI ("mapot_") [flags 0x202]  <var_decl 0x7f982824b120 mapot>)) "ETAFLD2.f":1 85 {*movdi_internal}
     (nil))
(insn 1087 1086 1088 89 (set (reg:SF 21 xmm0 [orig:447 _361 ] [447])
        (mem/c:SF (plus:DI (reg/f:DI 0 ax [1986])
                (const_int 4000012 [0x3d090c])) [2 mapot.pt+0 S4 A32])) "ETAFLD2.f":1 131 {*movsf_internal}
     (nil))
(insn 1088 1087 1089 89 (set (reg:SF 21 xmm0 [1987])
        (plus:SF (reg:SF 21 xmm0 [orig:447 _361 ] [447])
            (reg:SF 22 xmm1 [orig:446 _360 ] [446]))) "ETAFLD2.f":313 838 {*fop_sf_comm}
     (nil))
(insn 1089 1088 1090 89 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -180 [0xffffffffffffff4c])) [2 pp+0 S4 A32])
        (reg:SF 21 xmm0 [1987])) "ETAFLD2.f":313 131 {*movsf_internal}
     (nil))
(insn 1090 1089 1091 89 (set (reg:SF 22 xmm1 [1988])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -156 [0xffffffffffffff64])) [2 hh+0 S4 A32])) "ETAFLD2.f":314 131 {*movsf_internal}
     (nil))
(insn 1091 1090 1092 89 (set (reg:SF 21 xmm0 [1989])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC14") [flags 0x2]) [0  S4 A32])) "ETAFLD2.f":314 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 3.799051513671875e+2 [0x0.bdf3dcp+9])
        (nil)))
(insn 1092 1091 1093 89 (set (reg:SF 21 xmm0 [orig:448 _362 ] [448])
        (mult:SF (reg:SF 21 xmm0 [1989])
            (reg:SF 22 xmm1 [1988]))) "ETAFLD2.f":314 838 {*fop_sf_comm}
     (nil))
(insn 1093 1092 5847 89 (set (reg:SF 21 xmm0 [orig:448 _362 ] [448])
        (div:SF (reg:SF 21 xmm0 [orig:448 _362 ] [448])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -180 [0xffffffffffffff4c])) [2 pp+0 S4 A32]))) "ETAFLD2.f":314 841 {*fop_sf_1}
     (nil))
(insn 5847 1093 5925 89 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -836 [0xfffffffffffffcbc])) [33 %sfp+-804 S4 A32])
        (reg:SF 21 xmm0 [orig:448 _362 ] [448])) "ETAFLD2.f":314 131 {*movsf_internal}
     (nil))
(note 5925 5847 5921 89 NOTE_INSN_DELETED)
(note 5921 5925 1094 89 NOTE_INSN_DELETED)
(insn 1094 5921 1095 89 (set (reg:SF 22 xmm1 [1990])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -156 [0xffffffffffffff64])) [2 hh+0 S4 A32])) "ETAFLD2.f":314 131 {*movsf_internal}
     (nil))
(insn 1095 1094 1096 89 (set (reg:SF 21 xmm0 [1991])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC15") [flags 0x2]) [0  S4 A32])) "ETAFLD2.f":314 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.72693881988525390625e+1 [0x0.8a27b5p+5])
        (nil)))
(insn 1096 1095 1097 89 (set (reg:SF 22 xmm1 [orig:450 _364 ] [450])
        (mult:SF (reg:SF 22 xmm1 [1990])
            (reg:SF 21 xmm0 [1991]))) "ETAFLD2.f":314 838 {*fop_sf_comm}
     (nil))
(insn 1097 1096 1098 89 (set (reg:SF 21 xmm0 [1992])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -160 [0xffffffffffffff60])) [2 tkl+0 S4 A32])) "ETAFLD2.f":314 131 {*movsf_internal}
     (nil))
(insn 1098 1097 1099 89 (set (reg:SF 23 xmm2 [1993])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC16") [flags 0x2]) [0  S4 A32])) "ETAFLD2.f":314 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 2.73160003662109375e+2 [0x0.88947bp+9])
        (nil)))
(insn 1099 1098 1101 89 (set (reg:SF 21 xmm0 [orig:451 _365 ] [451])
        (minus:SF (reg:SF 21 xmm0 [1992])
            (reg:SF 23 xmm2 [1993]))) "ETAFLD2.f":314 841 {*fop_sf_1}
     (nil))
(insn 1101 1099 1102 89 (set (reg:SF 21 xmm0 [orig:453 _367 ] [453])
        (mult:SF (reg:SF 21 xmm0 [orig:452 _366 ] [452])
            (reg:SF 22 xmm1 [orig:450 _364 ] [450]))) "ETAFLD2.f":314 838 {*fop_sf_comm}
     (nil))
(insn 1102 1101 1103 89 (set (reg:SF 22 xmm1 [1994])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -160 [0xffffffffffffff60])) [2 tkl+0 S4 A32])) "ETAFLD2.f":314 131 {*movsf_internal}
     (nil))
(insn 1103 1102 1104 89 (set (reg:SF 23 xmm2 [1995])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC17") [flags 0x2]) [0  S4 A32])) "ETAFLD2.f":314 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 3.58600006103515625e+1 [0x0.8f70a4p+6])
        (nil)))
(insn 1104 1103 1106 89 (set (reg:SF 22 xmm1 [orig:454 _368 ] [454])
        (minus:SF (reg:SF 22 xmm1 [1994])
            (reg:SF 23 xmm2 [1995]))) "ETAFLD2.f":314 841 {*fop_sf_1}
     (nil))
(insn 1106 1104 1108 89 (set (reg:SF 21 xmm0 [orig:456 _370 ] [456])
        (div:SF (reg:SF 21 xmm0 [orig:453 _367 ] [453])
            (reg:SF 22 xmm1 [orig:455 _369 ] [455]))) "ETAFLD2.f":314 841 {*fop_sf_1}
     (nil))
(call_insn/u 1108 1106 5848 89 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("expf") [flags 0x41]  <function_decl 0x7f98280a0300 __builtin_expf>) [0 __builtin_expf S1 A8])
            (const_int 0 [0]))) "ETAFLD2.f":314 700 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (nil)))
(note 5848 1108 5924 89 NOTE_INSN_DELETED)
(note 5924 5848 1110 89 NOTE_INSN_DELETED)
(insn 1110 5924 1111 89 (set (reg:SF 21 xmm0 [1996])
        (mult:SF (reg:SF 21 xmm0 [orig:457 _371 ] [457])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -836 [0xfffffffffffffcbc])) [33 %sfp+-804 S4 A32]))) "ETAFLD2.f":314 838 {*fop_sf_comm}
     (nil))
(insn 1111 1110 1112 89 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [2 qw+0 S4 A32])
        (reg:SF 21 xmm0 [1996])) "ETAFLD2.f":314 131 {*movsf_internal}
     (nil))
(insn 1112 1111 1113 89 (set (reg:SF 21 xmm0 [orig:1635 M.12_1595 ] [1635])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -172 [0xffffffffffffff54])) [2 tmt0+0 S4 A32])) "ETAFLD2.f":315 131 {*movsf_internal}
     (nil))
(insn 1113 1112 1114 89 (set (reg:SF 22 xmm1 [1998])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) "ETAFLD2.f":315 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 1114 1113 1115 89 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [orig:1635 M.12_1595 ] [1635])
            (reg:SF 22 xmm1 [1998]))) "ETAFLD2.f":315 53 {*cmpisf}
     (nil))
(insn 1115 1114 1116 89 (set (reg:QI 0 ax [1997])
        (gt:QI (reg:CCFP 17 flags)
            (const_int 0 [0]))) "ETAFLD2.f":315 678 {*setcc_qi}
     (nil))
(insn 1116 1115 1117 89 (set (reg:SI 1 dx [orig:458 _372 ] [458])
        (zero_extend:SI (reg:QI 0 ax [1997]))) "ETAFLD2.f":315 140 {*zero_extendqisi2}
     (nil))
(insn 1117 1116 1118 89 (set (reg:CCFP 17 flags)
        (unspec:CCFP [
                (compare:CCFP (reg:SF 21 xmm0 [orig:1635 M.12_1595 ] [1635])
                    (reg:SF 21 xmm0 [orig:1635 M.12_1595 ] [1635]))
            ] UNSPEC_NOTRAP)) "ETAFLD2.f":315 54 {*cmpiusf}
     (nil))
(insn 1118 1117 1119 89 (set (reg:QI 0 ax [1999])
        (unordered:QI (reg:CCFP 17 flags)
            (const_int 0 [0]))) "ETAFLD2.f":315 678 {*setcc_qi}
     (nil))
(insn 1119 1118 1120 89 (set (reg:SI 0 ax [orig:459 _373 ] [459])
        (zero_extend:SI (reg:QI 0 ax [1999]))) "ETAFLD2.f":315 140 {*zero_extendqisi2}
     (nil))
(insn 1120 1119 1121 89 (parallel [
            (set (reg:SI 0 ax [orig:460 _374 ] [460])
                (ior:SI (reg:SI 0 ax [orig:459 _373 ] [459])
                    (reg:SI 1 dx [orig:458 _372 ] [458])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":315 450 {*iorsi_1}
     (nil))
(insn 1121 1120 1122 89 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:460 _374 ] [460])
            (const_int 0 [0]))) "ETAFLD2.f":315 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1122 1121 1123 89 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1125)
            (pc))) "ETAFLD2.f":315 682 {*jcc}
     (nil)
 -> 1125)
;;  succ:       90 (FALLTHRU)
;;              91
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1635 1682

;; basic block 90, loop depth 0, maybe hot
;;  prev block 89, next block 91, flags: (RTL, MODIFIED)
;;  pred:       89 (FALLTHRU)
;; bb 90 artificial_defs: { }
;; bb 90 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1682
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 1635
(note 1123 1122 1124 90 [bb 90] NOTE_INSN_BASIC_BLOCK)
(insn 1124 1123 1125 90 (set (reg:SF 21 xmm0 [orig:1635 M.12_1595 ] [1635])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) "ETAFLD2.f":315 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
;;  succ:       91 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1635 1682

;; basic block 91, loop depth 0, maybe hot
;;  prev block 90, next block 92, flags: (RTL, MODIFIED)
;;  pred:       89
;;              90 (FALLTHRU)
;; bb 91 artificial_defs: { }
;; bb 91 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1635 1682
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1635
;; lr  def 	 17 [flags] 461 462 463 464 465 466 467 468 469 470 471 472 473 474 475 476 477 478 479 480 481 482 483 484 485 486 487 488 489 490 2000 2001 2002 2003 2004 2005 2006 2007 2008 2009 2010 2011 2012 2013 2014 2015 2016 2017 2018
(code_label 1125 1124 1126 91 43 (nil) [1 uses])
(note 1126 1125 1127 91 [bb 91] NOTE_INSN_BASIC_BLOCK)
(insn 1127 1126 1128 91 (set (reg:SF 22 xmm1 [2000])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC18") [flags 0x2]) [0  S4 A32])) "ETAFLD2.f":315 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 9.99999977648258209228515625e-3 [0x0.a3d70ap-6])
        (nil)))
(insn 1128 1127 1129 91 (set (reg:SF 22 xmm1 [orig:461 _375 ] [461])
        (mult:SF (reg:SF 22 xmm1 [2000])
            (reg:SF 21 xmm0 [orig:1635 M.12_1595 ] [1635]))) "ETAFLD2.f":315 838 {*fop_sf_comm}
     (nil))
(insn 1129 1128 1130 91 (set (reg:SF 21 xmm0 [2001])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0  S4 A32])) "ETAFLD2.f":315 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 1130 1129 1132 91 (set (reg:SF 21 xmm0 [orig:462 _376 ] [462])
        (plus:SF (reg:SF 21 xmm0 [2001])
            (reg:SF 22 xmm1 [orig:461 _375 ] [461]))) "ETAFLD2.f":315 838 {*fop_sf_comm}
     (nil))
(insn 1132 1130 1133 91 (set (reg:SI 0 ax [2002])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])) "ETAFLD2.f":315 86 {*movsi_internal}
     (nil))
(insn 1133 1132 1134 91 (set (reg:DI 0 ax [orig:464 _378 ] [464])
        (sign_extend:DI (reg:SI 0 ax [2002]))) "ETAFLD2.f":315 149 {*extendsidi2_rex64}
     (nil))
(insn 1134 1133 1135 91 (parallel [
            (set (reg:DI 1 dx [orig:465 _379 ] [465])
                (mult:DI (reg:DI 0 ax [orig:464 _378 ] [464])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":315 349 {*muldi3_1}
     (nil))
(insn 1135 1134 1136 91 (set (reg:SI 0 ax [2003])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "ETAFLD2.f":315 86 {*movsi_internal}
     (nil))
(insn 1136 1135 1137 91 (set (reg:DI 0 ax [orig:466 _380 ] [466])
        (sign_extend:DI (reg:SI 0 ax [2003]))) "ETAFLD2.f":315 149 {*extendsidi2_rex64}
     (nil))
(insn 1137 1136 1138 91 (parallel [
            (set (reg:DI 0 ax [orig:467 _381 ] [467])
                (plus:DI (reg:DI 0 ax [orig:466 _380 ] [466])
                    (reg:DI 1 dx [orig:465 _379 ] [465])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":315 222 {*adddi_1}
     (nil))
(insn 1138 1137 1139 91 (parallel [
            (set (reg:DI 1 dx [orig:468 _382 ] [468])
                (plus:DI (reg:DI 0 ax [orig:467 _381 ] [467])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":315 222 {*adddi_1}
     (nil))
(insn 1139 1138 1140 91 (set (reg:SF 21 xmm0 [orig:469 _383 ] [469])
        (mult:SF (reg:SF 21 xmm0 [orig:463 _377 ] [463])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -184 [0xffffffffffffff48])) [2 qw+0 S4 A32]))) "ETAFLD2.f":315 838 {*fop_sf_comm}
     (nil))
(insn 1140 1139 1141 91 (set (reg/f:DI 0 ax [2004])
        (symbol_ref:DI ("qi.4444") [flags 0x202]  <var_decl 0x7f9827e6b6c0 qi>)) "ETAFLD2.f":315 85 {*movdi_internal}
     (nil))
(insn 1141 1140 1142 91 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:468 _382 ] [468])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [2004])) [2 qi S4 A32])
        (reg:SF 21 xmm0 [orig:469 _383 ] [469])) "ETAFLD2.f":315 131 {*movsf_internal}
     (nil))
(insn 1142 1141 1143 91 (set (reg:SI 0 ax [2005])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])) "ETAFLD2.f":317 86 {*movsi_internal}
     (nil))
(insn 1143 1142 1144 91 (set (reg:DI 0 ax [orig:470 _384 ] [470])
        (sign_extend:DI (reg:SI 0 ax [2005]))) "ETAFLD2.f":317 149 {*extendsidi2_rex64}
     (nil))
(insn 1144 1143 1145 91 (parallel [
            (set (reg:DI 1 dx [orig:471 _385 ] [471])
                (mult:DI (reg:DI 0 ax [orig:470 _384 ] [470])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":317 349 {*muldi3_1}
     (nil))
(insn 1145 1144 1146 91 (set (reg:SI 0 ax [2006])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "ETAFLD2.f":317 86 {*movsi_internal}
     (nil))
(insn 1146 1145 1147 91 (set (reg:DI 0 ax [orig:472 _386 ] [472])
        (sign_extend:DI (reg:SI 0 ax [2006]))) "ETAFLD2.f":317 149 {*extendsidi2_rex64}
     (nil))
(insn 1147 1146 1148 91 (parallel [
            (set (reg:DI 0 ax [orig:473 _387 ] [473])
                (plus:DI (reg:DI 0 ax [orig:472 _386 ] [472])
                    (reg:DI 1 dx [orig:471 _385 ] [471])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":317 222 {*adddi_1}
     (nil))
(insn 1148 1147 1149 91 (parallel [
            (set (reg:DI 1 dx [orig:474 _388 ] [474])
                (plus:DI (reg:DI 0 ax [orig:473 _387 ] [473])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":317 222 {*adddi_1}
     (nil))
(insn 1149 1148 1150 91 (set (reg/f:DI 0 ax [2007])
        (symbol_ref:DI ("cldwtr_") [flags 0x202]  <var_decl 0x7f9828232a20 cldwtr>)) "ETAFLD2.f":317 85 {*movdi_internal}
     (nil))
(insn 1150 1149 1151 91 (parallel [
            (set (reg:DI 1 dx [2008])
                (plus:DI (reg:DI 1 dx [orig:474 _388 ] [474])
                    (const_int 1125978 [0x112e5a])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":317 222 {*adddi_1}
     (nil))
(insn 1151 1150 1152 91 (set (reg:SF 22 xmm1 [orig:475 _389 ] [475])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [2008])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [2007])) [2 cldwtr.u00 S4 A32])) "ETAFLD2.f":317 131 {*movsf_internal}
     (nil))
(insn 1152 1151 1153 91 (set (reg:SI 1 dx [orig:476 l.49_390 ] [476])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":317 86 {*movsi_internal}
     (nil))
(insn 1153 1152 1154 91 (set (reg:SI 0 ax [2009])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -152 [0xffffffffffffff68])) [1 lml+0 S4 A32])) "ETAFLD2.f":317 86 {*movsi_internal}
     (nil))
(insn 1154 1153 1155 91 (parallel [
            (set (reg:SI 0 ax [orig:477 _391 ] [477])
                (plus:SI (reg:SI 0 ax [2009])
                    (reg:SI 1 dx [orig:476 l.49_390 ] [476])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":317 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (reg:SI 1 dx [orig:476 l.49_390 ] [476])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -120 [0xffffffffffffff88])) [1 lml+0 S4 A32]))
        (nil)))
(insn 1155 1154 1156 91 (set (reg:DI 0 ax [orig:478 _392 ] [478])
        (sign_extend:DI (reg:SI 0 ax [orig:477 _391 ] [477]))) "ETAFLD2.f":317 149 {*extendsidi2_rex64}
     (nil))
(insn 1156 1155 1157 91 (parallel [
            (set (reg:DI 1 dx [orig:479 _393 ] [479])
                (plus:DI (reg:DI 0 ax [orig:478 _392 ] [478])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":317 222 {*adddi_1}
     (nil))
(insn 1157 1156 1158 91 (set (reg/f:DI 0 ax [2010])
        (symbol_ref:DI ("cldwtr_") [flags 0x202]  <var_decl 0x7f9828232a20 cldwtr>)) "ETAFLD2.f":317 85 {*movdi_internal}
     (nil))
(insn 1158 1157 1159 91 (parallel [
            (set (reg:DI 1 dx [2011])
                (plus:DI (reg:DI 1 dx [orig:479 _393 ] [479])
                    (const_int 1155609 [0x11a219])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":317 222 {*adddi_1}
     (nil))
(insn 1159 1158 1160 91 (set (reg:SF 23 xmm2 [orig:480 _394 ] [480])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [2011])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [2010])) [2 cldwtr.ul S4 A32])) "ETAFLD2.f":317 131 {*movsf_internal}
     (nil))
(insn 1160 1159 1161 91 (set (reg:SI 0 ax [2012])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])) "ETAFLD2.f":317 86 {*movsi_internal}
     (nil))
(insn 1161 1160 1162 91 (set (reg:DI 0 ax [orig:481 _395 ] [481])
        (sign_extend:DI (reg:SI 0 ax [2012]))) "ETAFLD2.f":317 149 {*extendsidi2_rex64}
     (nil))
(insn 1162 1161 1163 91 (parallel [
            (set (reg:DI 1 dx [orig:482 _396 ] [482])
                (mult:DI (reg:DI 0 ax [orig:481 _395 ] [481])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":317 349 {*muldi3_1}
     (nil))
(insn 1163 1162 1164 91 (set (reg:SI 0 ax [2013])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "ETAFLD2.f":317 86 {*movsi_internal}
     (nil))
(insn 1164 1163 1165 91 (set (reg:DI 0 ax [orig:483 _397 ] [483])
        (sign_extend:DI (reg:SI 0 ax [2013]))) "ETAFLD2.f":317 149 {*extendsidi2_rex64}
     (nil))
(insn 1165 1164 1166 91 (parallel [
            (set (reg:DI 0 ax [orig:484 _398 ] [484])
                (plus:DI (reg:DI 0 ax [orig:483 _397 ] [483])
                    (reg:DI 1 dx [orig:482 _396 ] [482])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":317 222 {*adddi_1}
     (nil))
(insn 1166 1165 1167 91 (parallel [
            (set (reg:DI 1 dx [orig:485 _399 ] [485])
                (plus:DI (reg:DI 0 ax [orig:484 _398 ] [484])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":317 222 {*adddi_1}
     (nil))
(insn 1167 1166 1168 91 (set (reg/f:DI 0 ax [2014])
        (symbol_ref:DI ("cldwtr_") [flags 0x202]  <var_decl 0x7f9828232a20 cldwtr>)) "ETAFLD2.f":317 85 {*movdi_internal}
     (nil))
(insn 1168 1167 1169 91 (parallel [
            (set (reg:DI 1 dx [2015])
                (plus:DI (reg:DI 1 dx [orig:485 _399 ] [485])
                    (const_int 1125978 [0x112e5a])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":317 222 {*adddi_1}
     (nil))
(insn 1169 1168 1170 91 (set (reg:SF 24 xmm3 [orig:486 _400 ] [486])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [2015])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [2014])) [2 cldwtr.u00 S4 A32])) "ETAFLD2.f":317 131 {*movsf_internal}
     (nil))
(insn 1170 1169 1171 91 (set (reg:SF 21 xmm0 [2016])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC19") [flags 0x2]) [0  S4 A32])) "ETAFLD2.f":317 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 9.49999988079071044921875e-1 [0x0.f33333p+0])
        (nil)))
(insn 1171 1170 1173 91 (set (reg:SF 21 xmm0 [orig:487 _401 ] [487])
        (minus:SF (reg:SF 21 xmm0 [2016])
            (reg:SF 24 xmm3 [orig:486 _400 ] [486]))) "ETAFLD2.f":317 841 {*fop_sf_1}
     (nil))
(insn 1173 1171 1174 91 (set (reg:SF 21 xmm0 [orig:489 _403 ] [489])
        (mult:SF (reg:SF 21 xmm0 [orig:488 _402 ] [488])
            (reg:SF 23 xmm2 [orig:480 _394 ] [480]))) "ETAFLD2.f":317 838 {*fop_sf_comm}
     (nil))
(insn 1174 1173 1175 91 (set (reg:SF 21 xmm0 [orig:490 _404 ] [490])
        (mult:SF (reg:SF 21 xmm0 [orig:489 _403 ] [489])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -60 [0xffffffffffffffc4])) [2 utim+0 S4 A32]))) "ETAFLD2.f":317 838 {*fop_sf_comm}
     (nil))
(insn 1175 1174 1176 91 (set (reg:SF 21 xmm0 [2017])
        (plus:SF (reg:SF 21 xmm0 [orig:490 _404 ] [490])
            (reg:SF 22 xmm1 [orig:475 _389 ] [475]))) "ETAFLD2.f":317 838 {*fop_sf_comm}
     (nil))
(insn 1176 1175 1177 91 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -188 [0xffffffffffffff44])) [2 u00kl+0 S4 A32])
        (reg:SF 21 xmm0 [2017])) "ETAFLD2.f":317 131 {*movsf_internal}
     (nil))
(insn 1177 1176 1178 91 (set (reg:SF 21 xmm0 [2018])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC13") [flags 0x2]) [0  S4 A32])) "ETAFLD2.f":318 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF -1.5e+1 [-0x0.fp+4])
        (nil)))
(insn 1178 1177 1179 91 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [2018])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -172 [0xffffffffffffff54])) [2 tmt0+0 S4 A32]))) "ETAFLD2.f":318 53 {*cmpisf}
     (nil))
(jump_insn 1179 1178 1183 91 (set (pc)
        (if_then_else (unle (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1244)
            (pc))) "ETAFLD2.f":318 682 {*jcc}
     (nil)
 -> 1244)
;;  succ:       92 (FALLTHRU)
;;              96
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1682

;; basic block 92, loop depth 0, maybe hot
;;  prev block 91, next block 93, flags: (RTL, MODIFIED)
;;  pred:       91 (FALLTHRU)
;; bb 92 artificial_defs: { }
;; bb 92 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1682
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 491 492 493 494 495 496 497 2019 2020 2021 2022 2023 2024 2025
(note 1183 1179 1184 92 [bb 92] NOTE_INSN_BASIC_BLOCK)
(insn 1184 1183 1185 92 (set (reg:SI 0 ax [2019])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])) "ETAFLD2.f":319 86 {*movsi_internal}
     (nil))
(insn 1185 1184 1186 92 (set (reg:DI 0 ax [orig:491 _405 ] [491])
        (sign_extend:DI (reg:SI 0 ax [2019]))) "ETAFLD2.f":319 149 {*extendsidi2_rex64}
     (nil))
(insn 1186 1185 1187 92 (parallel [
            (set (reg:DI 1 dx [orig:492 _406 ] [492])
                (mult:DI (reg:DI 0 ax [orig:491 _405 ] [491])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":319 349 {*muldi3_1}
     (nil))
(insn 1187 1186 1188 92 (set (reg:SI 0 ax [2020])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "ETAFLD2.f":319 86 {*movsi_internal}
     (nil))
(insn 1188 1187 1189 92 (set (reg:DI 0 ax [orig:493 _407 ] [493])
        (sign_extend:DI (reg:SI 0 ax [2020]))) "ETAFLD2.f":319 149 {*extendsidi2_rex64}
     (nil))
(insn 1189 1188 1190 92 (parallel [
            (set (reg:DI 0 ax [orig:494 _408 ] [494])
                (plus:DI (reg:DI 0 ax [orig:493 _407 ] [493])
                    (reg:DI 1 dx [orig:492 _406 ] [492])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":319 222 {*adddi_1}
     (nil))
(insn 1190 1189 1191 92 (parallel [
            (set (reg:DI 1 dx [orig:495 _409 ] [495])
                (plus:DI (reg:DI 0 ax [orig:494 _408 ] [494])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":319 222 {*adddi_1}
     (nil))
(insn 1191 1190 1192 92 (set (reg/f:DI 0 ax [2021])
        (symbol_ref:DI ("qi.4444") [flags 0x202]  <var_decl 0x7f9827e6b6c0 qi>)) "ETAFLD2.f":319 85 {*movdi_internal}
     (nil))
(insn 1192 1191 5849 92 (set (reg:SF 21 xmm0 [orig:496 _410 ] [496])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:495 _409 ] [495])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [2021])) [2 qi S4 A32])) "ETAFLD2.f":319 131 {*movsf_internal}
     (nil))
(insn 5849 1192 1193 92 (set (reg:SF 22 xmm1 [orig:496 _410 ] [496])
        (reg:SF 21 xmm0 [orig:496 _410 ] [496])) "ETAFLD2.f":319 131 {*movsf_internal}
     (nil))
(insn 1193 5849 1194 92 (set (reg:SF 22 xmm1 [orig:496 _410 ] [496])
        (mult:SF (reg:SF 22 xmm1 [orig:496 _410 ] [496])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -188 [0xffffffffffffff44])) [2 u00kl+0 S4 A32]))) "ETAFLD2.f":319 838 {*fop_sf_comm}
     (nil))
(insn 1194 1193 1195 92 (set (reg:SF 21 xmm0 [2023])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -164 [0xffffffffffffff5c])) [2 qkl+0 S4 A32])) "ETAFLD2.f":319 131 {*movsf_internal}
     (nil))
(insn 1195 1194 1196 92 (set (reg:SF 21 xmm0 [2022])
        (minus:SF (reg:SF 21 xmm0 [2023])
            (reg:SF 22 xmm1 [orig:497 _411 ] [497]))) "ETAFLD2.f":319 841 {*fop_sf_1}
     (nil))
(insn 1196 1195 1197 92 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [2 fiq+0 S4 A32])
        (reg:SF 21 xmm0 [2022])) "ETAFLD2.f":319 131 {*movsf_internal}
     (nil))
(insn 1197 1196 1198 92 (set (reg:SF 21 xmm0 [2024])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [2 fiq+0 S4 A32])) "ETAFLD2.f":320 131 {*movsf_internal}
     (nil))
(insn 1198 1197 1199 92 (set (reg:SF 22 xmm1 [2025])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) "ETAFLD2.f":320 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 1199 1198 1200 92 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [2024])
            (reg:SF 22 xmm1 [2025]))) "ETAFLD2.f":320 53 {*cmpisf}
     (nil))
(jump_insn 1200 1199 1201 92 (set (pc)
        (if_then_else (gt (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref 1208)
            (pc))) "ETAFLD2.f":320 682 {*jcc}
     (nil)
 -> 1208)
;;  succ:       94
;;              93 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1682

;; basic block 93, loop depth 0, maybe hot
;;  prev block 92, next block 94, flags: (RTL, MODIFIED)
;;  pred:       92 (FALLTHRU)
;; bb 93 artificial_defs: { }
;; bb 93 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1682
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 2026
(note 1201 1200 1202 93 [bb 93] NOTE_INSN_BASIC_BLOCK)
(insn 1202 1201 1203 93 (set (reg:SF 21 xmm0 [2026])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [2 cwmkl+0 S4 A32])) "ETAFLD2.f":320 131 {*movsf_internal}
     (nil))
(insn 1203 1202 1204 93 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [2026])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -148 [0xffffffffffffff6c])) [2 climit+0 S4 A32]))) "ETAFLD2.f":320 53 {*cmpisf}
     (nil))
(jump_insn 1204 1203 1208 93 (set (pc)
        (if_then_else (unle (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 5612)
            (pc))) "ETAFLD2.f":320 682 {*jcc}
     (nil)
 -> 5612)
;;  succ:       94 (FALLTHRU)
;;              95
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1682

;; basic block 94, loop depth 0, maybe hot
;;  prev block 93, next block 95, flags: (RTL, MODIFIED)
;;  pred:       92
;;              93 (FALLTHRU)
;; bb 94 artificial_defs: { }
;; bb 94 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1682
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 498 499 500 501 502 503 504 505 506 2027 2028 2029 2030
(code_label 1208 1204 1209 94 46 (nil) [1 uses])
(note 1209 1208 1210 94 [bb 94] NOTE_INSN_BASIC_BLOCK)
(insn 1210 1209 1211 94 (set (reg:SI 0 ax [orig:498 l.50_412 ] [498])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":321 86 {*movsi_internal}
     (nil))
(insn 1211 1210 1212 94 (set (reg:DI 0 ax [orig:499 _413 ] [499])
        (sign_extend:DI (reg:SI 0 ax [orig:498 l.50_412 ] [498]))) "ETAFLD2.f":321 149 {*extendsidi2_rex64}
     (nil))
(insn 1212 1211 1213 94 (parallel [
            (set (reg:DI 1 dx [orig:500 _414 ] [500])
                (mult:DI (reg:DI 0 ax [orig:499 _413 ] [499])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":321 349 {*muldi3_1}
     (nil))
(insn 1213 1212 1214 94 (set (reg:SI 0 ax [2027])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])) "ETAFLD2.f":321 86 {*movsi_internal}
     (nil))
(insn 1214 1213 1215 94 (set (reg:DI 0 ax [orig:501 _415 ] [501])
        (sign_extend:DI (reg:SI 0 ax [2027]))) "ETAFLD2.f":321 149 {*extendsidi2_rex64}
     (nil))
(insn 1215 1214 1216 94 (parallel [
            (set (reg:DI 0 ax [orig:502 _416 ] [502])
                (mult:DI (reg:DI 0 ax [orig:501 _415 ] [501])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":321 349 {*muldi3_1}
     (nil))
(insn 1216 1215 1217 94 (parallel [
            (set (reg:DI 1 dx [orig:503 _417 ] [503])
                (plus:DI (reg:DI 1 dx [orig:500 _414 ] [500])
                    (reg:DI 0 ax [orig:502 _416 ] [502])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":321 222 {*adddi_1}
     (nil))
(insn 1217 1216 1218 94 (set (reg:SI 0 ax [2028])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "ETAFLD2.f":321 86 {*movsi_internal}
     (nil))
(insn 1218 1217 1219 94 (set (reg:DI 0 ax [orig:504 _418 ] [504])
        (sign_extend:DI (reg:SI 0 ax [2028]))) "ETAFLD2.f":321 149 {*extendsidi2_rex64}
     (nil))
(insn 1219 1218 1220 94 (parallel [
            (set (reg:DI 0 ax [orig:505 _419 ] [505])
                (plus:DI (reg:DI 0 ax [orig:504 _418 ] [504])
                    (reg:DI 1 dx [orig:503 _417 ] [503])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":321 222 {*adddi_1}
     (nil))
(insn 1220 1219 1221 94 (parallel [
            (set (reg:DI 1 dx [orig:506 _420 ] [506])
                (plus:DI (reg:DI 0 ax [orig:505 _419 ] [505])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":321 222 {*adddi_1}
     (nil))
(insn 1221 1220 1222 94 (set (reg/f:DI 0 ax [2029])
        (symbol_ref:DI ("iw.4421") [flags 0x202]  <var_decl 0x7f9827e68bd0 iw>)) "ETAFLD2.f":321 85 {*movdi_internal}
     (nil))
(insn 1222 1221 1223 94 (set (reg:SF 21 xmm0 [2030])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0  S4 A32])) "ETAFLD2.f":321 131 {*movsf_internal}
     (nil))
(insn 1223 1222 5613 94 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:506 _420 ] [506])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [2029])) [2 iw S4 A32])
        (reg:SF 21 xmm0 [2030])) "ETAFLD2.f":321 131 {*movsf_internal}
     (nil))
(jump_insn 5613 1223 5614 94 (set (pc)
        (label_ref 1244)) "ETAFLD2.f":321 683 {jump}
     (nil)
 -> 1244)
;;  succ:       96 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1682

(barrier 5614 5613 5612)
;; basic block 95, loop depth 0, maybe hot
;;  prev block 94, next block 96, flags: (RTL, MODIFIED)
;;  pred:       93
;; bb 95 artificial_defs: { }
;; bb 95 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1682
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 507 508 509 510 511 512 513 514 515 2031 2032 2033 2034
(code_label 5612 5614 1227 95 218 (nil) [1 uses])
(note 1227 5612 1228 95 [bb 95] NOTE_INSN_BASIC_BLOCK)
(insn 1228 1227 1229 95 (set (reg:SI 0 ax [orig:507 l.51_421 ] [507])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":323 86 {*movsi_internal}
     (nil))
(insn 1229 1228 1230 95 (set (reg:DI 0 ax [orig:508 _422 ] [508])
        (sign_extend:DI (reg:SI 0 ax [orig:507 l.51_421 ] [507]))) "ETAFLD2.f":323 149 {*extendsidi2_rex64}
     (nil))
(insn 1230 1229 1231 95 (parallel [
            (set (reg:DI 1 dx [orig:509 _423 ] [509])
                (mult:DI (reg:DI 0 ax [orig:508 _422 ] [508])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":323 349 {*muldi3_1}
     (nil))
(insn 1231 1230 1232 95 (set (reg:SI 0 ax [2031])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])) "ETAFLD2.f":323 86 {*movsi_internal}
     (nil))
(insn 1232 1231 1233 95 (set (reg:DI 0 ax [orig:510 _424 ] [510])
        (sign_extend:DI (reg:SI 0 ax [2031]))) "ETAFLD2.f":323 149 {*extendsidi2_rex64}
     (nil))
(insn 1233 1232 1234 95 (parallel [
            (set (reg:DI 0 ax [orig:511 _425 ] [511])
                (mult:DI (reg:DI 0 ax [orig:510 _424 ] [510])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":323 349 {*muldi3_1}
     (nil))
(insn 1234 1233 1235 95 (parallel [
            (set (reg:DI 1 dx [orig:512 _426 ] [512])
                (plus:DI (reg:DI 1 dx [orig:509 _423 ] [509])
                    (reg:DI 0 ax [orig:511 _425 ] [511])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":323 222 {*adddi_1}
     (nil))
(insn 1235 1234 1236 95 (set (reg:SI 0 ax [2032])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "ETAFLD2.f":323 86 {*movsi_internal}
     (nil))
(insn 1236 1235 1237 95 (set (reg:DI 0 ax [orig:513 _427 ] [513])
        (sign_extend:DI (reg:SI 0 ax [2032]))) "ETAFLD2.f":323 149 {*extendsidi2_rex64}
     (nil))
(insn 1237 1236 1238 95 (parallel [
            (set (reg:DI 0 ax [orig:514 _428 ] [514])
                (plus:DI (reg:DI 0 ax [orig:513 _427 ] [513])
                    (reg:DI 1 dx [orig:512 _426 ] [512])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":323 222 {*adddi_1}
     (nil))
(insn 1238 1237 1239 95 (parallel [
            (set (reg:DI 1 dx [orig:515 _429 ] [515])
                (plus:DI (reg:DI 0 ax [orig:514 _428 ] [514])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":323 222 {*adddi_1}
     (nil))
(insn 1239 1238 1240 95 (set (reg/f:DI 0 ax [2033])
        (symbol_ref:DI ("iw.4421") [flags 0x202]  <var_decl 0x7f9827e68bd0 iw>)) "ETAFLD2.f":323 85 {*movdi_internal}
     (nil))
(insn 1240 1239 1241 95 (set (reg:SF 21 xmm0 [2034])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) "ETAFLD2.f":323 131 {*movsf_internal}
     (nil))
(insn 1241 1240 1244 95 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:515 _429 ] [515])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [2033])) [2 iw S4 A32])
        (reg:SF 21 xmm0 [2034])) "ETAFLD2.f":323 131 {*movsf_internal}
     (nil))
;;  succ:       96 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1682

;; basic block 96, loop depth 0, maybe hot
;;  prev block 95, next block 97, flags: (RTL, MODIFIED)
;;  pred:       95 (FALLTHRU)
;;              91
;;              94 [always] 
;; bb 96 artificial_defs: { }
;; bb 96 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1682
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 2035 2036
(code_label 1244 1241 1245 96 44 (nil) [2 uses])
(note 1245 1244 1246 96 [bb 96] NOTE_INSN_BASIC_BLOCK)
(insn 1246 1245 1247 96 (set (reg:SF 21 xmm0 [2035])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -172 [0xffffffffffffff54])) [2 tmt0+0 S4 A32])) "ETAFLD2.f":326 131 {*movsf_internal}
     (nil))
(insn 1247 1246 1248 96 (set (reg:SF 22 xmm1 [2036])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) "ETAFLD2.f":326 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 1248 1247 1249 96 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [2035])
            (reg:SF 22 xmm1 [2036]))) "ETAFLD2.f":326 53 {*cmpisf}
     (nil))
(jump_insn 1249 1248 1253 96 (set (pc)
        (if_then_else (unlt (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1268)
            (pc))) "ETAFLD2.f":326 682 {*jcc}
     (nil)
 -> 1268)
;;  succ:       97 (FALLTHRU)
;;              98
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1682

;; basic block 97, loop depth 0, maybe hot
;;  prev block 96, next block 98, flags: (RTL, MODIFIED)
;;  pred:       96 (FALLTHRU)
;; bb 97 artificial_defs: { }
;; bb 97 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1682
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 516 517 518 519 520 521 522 523 524 2037 2038 2039 2040
(note 1253 1249 1254 97 [bb 97] NOTE_INSN_BASIC_BLOCK)
(insn 1254 1253 1255 97 (set (reg:SI 0 ax [orig:516 l.52_430 ] [516])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":326 86 {*movsi_internal}
     (nil))
(insn 1255 1254 1256 97 (set (reg:DI 0 ax [orig:517 _431 ] [517])
        (sign_extend:DI (reg:SI 0 ax [orig:516 l.52_430 ] [516]))) "ETAFLD2.f":326 149 {*extendsidi2_rex64}
     (nil))
(insn 1256 1255 1257 97 (parallel [
            (set (reg:DI 1 dx [orig:518 _432 ] [518])
                (mult:DI (reg:DI 0 ax [orig:517 _431 ] [517])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":326 349 {*muldi3_1}
     (nil))
(insn 1257 1256 1258 97 (set (reg:SI 0 ax [2037])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])) "ETAFLD2.f":326 86 {*movsi_internal}
     (nil))
(insn 1258 1257 1259 97 (set (reg:DI 0 ax [orig:519 _433 ] [519])
        (sign_extend:DI (reg:SI 0 ax [2037]))) "ETAFLD2.f":326 149 {*extendsidi2_rex64}
     (nil))
(insn 1259 1258 1260 97 (parallel [
            (set (reg:DI 0 ax [orig:520 _434 ] [520])
                (mult:DI (reg:DI 0 ax [orig:519 _433 ] [519])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":326 349 {*muldi3_1}
     (nil))
(insn 1260 1259 1261 97 (parallel [
            (set (reg:DI 1 dx [orig:521 _435 ] [521])
                (plus:DI (reg:DI 1 dx [orig:518 _432 ] [518])
                    (reg:DI 0 ax [orig:520 _434 ] [520])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":326 222 {*adddi_1}
     (nil))
(insn 1261 1260 1262 97 (set (reg:SI 0 ax [2038])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "ETAFLD2.f":326 86 {*movsi_internal}
     (nil))
(insn 1262 1261 1263 97 (set (reg:DI 0 ax [orig:522 _436 ] [522])
        (sign_extend:DI (reg:SI 0 ax [2038]))) "ETAFLD2.f":326 149 {*extendsidi2_rex64}
     (nil))
(insn 1263 1262 1264 97 (parallel [
            (set (reg:DI 0 ax [orig:523 _437 ] [523])
                (plus:DI (reg:DI 0 ax [orig:522 _436 ] [522])
                    (reg:DI 1 dx [orig:521 _435 ] [521])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":326 222 {*adddi_1}
     (nil))
(insn 1264 1263 1265 97 (parallel [
            (set (reg:DI 1 dx [orig:524 _438 ] [524])
                (plus:DI (reg:DI 0 ax [orig:523 _437 ] [523])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":326 222 {*adddi_1}
     (nil))
(insn 1265 1264 1266 97 (set (reg/f:DI 0 ax [2039])
        (symbol_ref:DI ("iw.4421") [flags 0x202]  <var_decl 0x7f9827e68bd0 iw>)) "ETAFLD2.f":326 85 {*movdi_internal}
     (nil))
(insn 1266 1265 1267 97 (set (reg:SF 21 xmm0 [2040])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) "ETAFLD2.f":326 131 {*movsf_internal}
     (nil))
(insn 1267 1266 1268 97 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:524 _438 ] [524])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [2039])) [2 iw S4 A32])
        (reg:SF 21 xmm0 [2040])) "ETAFLD2.f":326 131 {*movsf_internal}
     (nil))
;;  succ:       98 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1682

;; basic block 98, loop depth 0, maybe hot
;;  prev block 97, next block 99, flags: (RTL, MODIFIED)
;;  pred:       97 (FALLTHRU)
;;              96
;; bb 98 artificial_defs: { }
;; bb 98 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1682
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 2041
(code_label 1268 1267 1269 98 50 (nil) [1 uses])
(note 1269 1268 1270 98 [bb 98] NOTE_INSN_BASIC_BLOCK)
(insn 1270 1269 1271 98 (set (reg:SF 21 xmm0 [2041])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) "ETAFLD2.f":327 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 1271 1270 1272 98 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [2041])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -172 [0xffffffffffffff54])) [2 tmt0+0 S4 A32]))) "ETAFLD2.f":327 53 {*cmpisf}
     (nil))
(jump_insn 1272 1271 1276 98 (set (pc)
        (if_then_else (unle (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1343)
            (pc))) "ETAFLD2.f":327 682 {*jcc}
     (nil)
 -> 1343)
;;  succ:       99 (FALLTHRU)
;;              104
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1682

;; basic block 99, loop depth 0, maybe hot
;;  prev block 98, next block 100, flags: (RTL, MODIFIED)
;;  pred:       98 (FALLTHRU)
;; bb 99 artificial_defs: { }
;; bb 99 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1682
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 2042
(note 1276 1272 1277 99 [bb 99] NOTE_INSN_BASIC_BLOCK)
(insn 1277 1276 1278 99 (set (reg:SF 21 xmm0 [2042])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -172 [0xffffffffffffff54])) [2 tmt0+0 S4 A32])) "ETAFLD2.f":327 131 {*movsf_internal}
     (nil))
(insn 1278 1277 1279 99 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [2042])
            (mem/u/c:SF (symbol_ref/u:DI ("*.LC13") [flags 0x2]) [0  S4 A32]))) "ETAFLD2.f":327 53 {*cmpisf}
     (nil))
(jump_insn 1279 1278 1283 99 (set (pc)
        (if_then_else (unlt (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1343)
            (pc))) "ETAFLD2.f":327 682 {*jcc}
     (nil)
 -> 1343)
;;  succ:       100 (FALLTHRU)
;;              104
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1682

;; basic block 100, loop depth 0, maybe hot
;;  prev block 99, next block 101, flags: (RTL, MODIFIED)
;;  pred:       99 (FALLTHRU)
;; bb 100 artificial_defs: { }
;; bb 100 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1682
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 525 526 527 528 529 530 531 532 533 534 535 536 537 538 539 540 541 542 543 544 2043 2044 2045 2046 2047 2048 2049 2050
(note 1283 1279 1284 100 [bb 100] NOTE_INSN_BASIC_BLOCK)
(insn 1284 1283 1285 100 (set (reg:SI 0 ax [orig:525 l.53_439 ] [525])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":328 86 {*movsi_internal}
     (nil))
(insn 1285 1284 1286 100 (set (reg:DI 0 ax [orig:526 _440 ] [526])
        (sign_extend:DI (reg:SI 0 ax [orig:525 l.53_439 ] [525]))) "ETAFLD2.f":328 149 {*extendsidi2_rex64}
     (nil))
(insn 1286 1285 1287 100 (parallel [
            (set (reg:DI 1 dx [orig:527 _441 ] [527])
                (mult:DI (reg:DI 0 ax [orig:526 _440 ] [526])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":328 349 {*muldi3_1}
     (nil))
(insn 1287 1286 1288 100 (set (reg:SI 0 ax [2043])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])) "ETAFLD2.f":328 86 {*movsi_internal}
     (nil))
(insn 1288 1287 1289 100 (set (reg:DI 0 ax [orig:528 _442 ] [528])
        (sign_extend:DI (reg:SI 0 ax [2043]))) "ETAFLD2.f":328 149 {*extendsidi2_rex64}
     (nil))
(insn 1289 1288 1290 100 (parallel [
            (set (reg:DI 0 ax [orig:529 _443 ] [529])
                (mult:DI (reg:DI 0 ax [orig:528 _442 ] [528])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":328 349 {*muldi3_1}
     (nil))
(insn 1290 1289 1291 100 (parallel [
            (set (reg:DI 1 dx [orig:530 _444 ] [530])
                (plus:DI (reg:DI 1 dx [orig:527 _441 ] [527])
                    (reg:DI 0 ax [orig:529 _443 ] [529])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":328 222 {*adddi_1}
     (nil))
(insn 1291 1290 1292 100 (set (reg:SI 0 ax [2044])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "ETAFLD2.f":328 86 {*movsi_internal}
     (nil))
(insn 1292 1291 1293 100 (set (reg:DI 0 ax [orig:531 _445 ] [531])
        (sign_extend:DI (reg:SI 0 ax [2044]))) "ETAFLD2.f":328 149 {*extendsidi2_rex64}
     (nil))
(insn 1293 1292 1294 100 (parallel [
            (set (reg:DI 0 ax [orig:532 _446 ] [532])
                (plus:DI (reg:DI 0 ax [orig:531 _445 ] [531])
                    (reg:DI 1 dx [orig:530 _444 ] [530])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":328 222 {*adddi_1}
     (nil))
(insn 1294 1293 1295 100 (parallel [
            (set (reg:DI 1 dx [orig:533 _447 ] [533])
                (plus:DI (reg:DI 0 ax [orig:532 _446 ] [532])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":328 222 {*adddi_1}
     (nil))
(insn 1295 1294 1296 100 (set (reg/f:DI 0 ax [2045])
        (symbol_ref:DI ("iw.4421") [flags 0x202]  <var_decl 0x7f9827e68bd0 iw>)) "ETAFLD2.f":328 85 {*movdi_internal}
     (nil))
(insn 1296 1295 1297 100 (set (reg:SF 21 xmm0 [2046])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) "ETAFLD2.f":328 131 {*movsf_internal}
     (nil))
(insn 1297 1296 1298 100 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:533 _447 ] [533])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [2045])) [2 iw S4 A32])
        (reg:SF 21 xmm0 [2046])) "ETAFLD2.f":328 131 {*movsf_internal}
     (nil))
(insn 1298 1297 1299 100 (set (reg:SI 0 ax [orig:534 l.54_448 ] [534])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":329 86 {*movsi_internal}
     (nil))
(insn 1299 1298 1300 100 (parallel [
            (set (reg:SI 0 ax [orig:535 _449 ] [535])
                (plus:SI (reg:SI 0 ax [orig:534 l.54_448 ] [534])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":329 221 {*addsi_1}
     (nil))
(insn 1300 1299 1301 100 (set (reg:DI 0 ax [orig:536 _450 ] [536])
        (sign_extend:DI (reg:SI 0 ax [orig:535 _449 ] [535]))) "ETAFLD2.f":329 149 {*extendsidi2_rex64}
     (nil))
(insn 1301 1300 1302 100 (parallel [
            (set (reg:DI 1 dx [orig:537 _451 ] [537])
                (mult:DI (reg:DI 0 ax [orig:536 _450 ] [536])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":329 349 {*muldi3_1}
     (nil))
(insn 1302 1301 1303 100 (set (reg:SI 0 ax [2047])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])) "ETAFLD2.f":329 86 {*movsi_internal}
     (nil))
(insn 1303 1302 1304 100 (set (reg:DI 0 ax [orig:538 _452 ] [538])
        (sign_extend:DI (reg:SI 0 ax [2047]))) "ETAFLD2.f":329 149 {*extendsidi2_rex64}
     (nil))
(insn 1304 1303 1305 100 (parallel [
            (set (reg:DI 0 ax [orig:539 _453 ] [539])
                (mult:DI (reg:DI 0 ax [orig:538 _452 ] [538])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":329 349 {*muldi3_1}
     (nil))
(insn 1305 1304 1306 100 (parallel [
            (set (reg:DI 1 dx [orig:540 _454 ] [540])
                (plus:DI (reg:DI 1 dx [orig:537 _451 ] [537])
                    (reg:DI 0 ax [orig:539 _453 ] [539])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":329 222 {*adddi_1}
     (nil))
(insn 1306 1305 1307 100 (set (reg:SI 0 ax [2048])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "ETAFLD2.f":329 86 {*movsi_internal}
     (nil))
(insn 1307 1306 1308 100 (set (reg:DI 0 ax [orig:541 _455 ] [541])
        (sign_extend:DI (reg:SI 0 ax [2048]))) "ETAFLD2.f":329 149 {*extendsidi2_rex64}
     (nil))
(insn 1308 1307 1309 100 (parallel [
            (set (reg:DI 0 ax [orig:542 _456 ] [542])
                (plus:DI (reg:DI 0 ax [orig:541 _455 ] [541])
                    (reg:DI 1 dx [orig:540 _454 ] [540])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":329 222 {*adddi_1}
     (nil))
(insn 1309 1308 1310 100 (parallel [
            (set (reg:DI 1 dx [orig:543 _457 ] [543])
                (plus:DI (reg:DI 0 ax [orig:542 _456 ] [542])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":329 222 {*adddi_1}
     (nil))
(insn 1310 1309 1311 100 (set (reg/f:DI 0 ax [2049])
        (symbol_ref:DI ("iw.4421") [flags 0x202]  <var_decl 0x7f9827e68bd0 iw>)) "ETAFLD2.f":329 85 {*movdi_internal}
     (nil))
(insn 1311 1310 1312 100 (set (reg:SF 21 xmm0 [orig:544 _458 ] [544])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:543 _457 ] [543])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [2049])) [2 iw S4 A32])) "ETAFLD2.f":329 131 {*movsf_internal}
     (nil))
(insn 1312 1311 1313 100 (set (reg:SF 22 xmm1 [2050])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0  S4 A32])) "ETAFLD2.f":329 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 1313 1312 1314 100 (set (reg:CCFP 17 flags)
        (unspec:CCFP [
                (compare:CCFP (reg:SF 21 xmm0 [orig:544 _458 ] [544])
                    (reg:SF 22 xmm1 [2050]))
            ] UNSPEC_NOTRAP)) "ETAFLD2.f":329 54 {*cmpiusf}
     (nil))
(jump_insn 1314 1313 5538 100 (set (pc)
        (if_then_else (unordered (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref 1343)
            (pc))) "ETAFLD2.f":329 682 {*jcc}
     (nil)
 -> 1343)
;;  succ:       104
;;              101 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 544 1682

;; basic block 101, loop depth 0, maybe hot
;;  prev block 100, next block 102, flags: (RTL, MODIFIED)
;;  pred:       100 (FALLTHRU)
;; bb 101 artificial_defs: { }
;; bb 101 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 544 1682
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 544
;; lr  def 	 17 [flags] 2051
(note 5538 1314 1315 101 [bb 101] NOTE_INSN_BASIC_BLOCK)
(insn 1315 5538 1316 101 (set (reg:SF 22 xmm1 [2051])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0  S4 A32])) "ETAFLD2.f":329 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 1316 1315 1317 101 (set (reg:CCFP 17 flags)
        (unspec:CCFP [
                (compare:CCFP (reg:SF 21 xmm0 [orig:544 _458 ] [544])
                    (reg:SF 22 xmm1 [2051]))
            ] UNSPEC_NOTRAP)) "ETAFLD2.f":329 54 {*cmpiusf}
     (nil))
(jump_insn 1317 1316 1321 101 (set (pc)
        (if_then_else (ltgt (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1343)
            (pc))) "ETAFLD2.f":329 682 {*jcc}
     (nil)
 -> 1343)
;;  succ:       102 (FALLTHRU)
;;              104
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1682

;; basic block 102, loop depth 0, maybe hot
;;  prev block 101, next block 103, flags: (RTL, MODIFIED)
;;  pred:       101 (FALLTHRU)
;; bb 102 artificial_defs: { }
;; bb 102 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1682
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 2052
(note 1321 1317 1322 102 [bb 102] NOTE_INSN_BASIC_BLOCK)
(insn 1322 1321 1323 102 (set (reg:SF 21 xmm0 [2052])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [2 cwmkl+0 S4 A32])) "ETAFLD2.f":329 131 {*movsf_internal}
     (nil))
(insn 1323 1322 1324 102 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [2052])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -148 [0xffffffffffffff6c])) [2 climit+0 S4 A32]))) "ETAFLD2.f":329 53 {*cmpisf}
     (nil))
(jump_insn 1324 1323 1328 102 (set (pc)
        (if_then_else (unle (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1343)
            (pc))) "ETAFLD2.f":329 682 {*jcc}
     (nil)
 -> 1343)
;;  succ:       103 (FALLTHRU)
;;              104
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1682

;; basic block 103, loop depth 0, maybe hot
;;  prev block 102, next block 104, flags: (RTL, MODIFIED)
;;  pred:       102 (FALLTHRU)
;; bb 103 artificial_defs: { }
;; bb 103 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1682
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 545 546 547 548 549 550 551 552 553 2053 2054 2055 2056
(note 1328 1324 1329 103 [bb 103] NOTE_INSN_BASIC_BLOCK)
(insn 1329 1328 1330 103 (set (reg:SI 0 ax [orig:545 l.55_459 ] [545])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":329 86 {*movsi_internal}
     (nil))
(insn 1330 1329 1331 103 (set (reg:DI 0 ax [orig:546 _460 ] [546])
        (sign_extend:DI (reg:SI 0 ax [orig:545 l.55_459 ] [545]))) "ETAFLD2.f":329 149 {*extendsidi2_rex64}
     (nil))
(insn 1331 1330 1332 103 (parallel [
            (set (reg:DI 1 dx [orig:547 _461 ] [547])
                (mult:DI (reg:DI 0 ax [orig:546 _460 ] [546])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":329 349 {*muldi3_1}
     (nil))
(insn 1332 1331 1333 103 (set (reg:SI 0 ax [2053])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])) "ETAFLD2.f":329 86 {*movsi_internal}
     (nil))
(insn 1333 1332 1334 103 (set (reg:DI 0 ax [orig:548 _462 ] [548])
        (sign_extend:DI (reg:SI 0 ax [2053]))) "ETAFLD2.f":329 149 {*extendsidi2_rex64}
     (nil))
(insn 1334 1333 1335 103 (parallel [
            (set (reg:DI 0 ax [orig:549 _463 ] [549])
                (mult:DI (reg:DI 0 ax [orig:548 _462 ] [548])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":329 349 {*muldi3_1}
     (nil))
(insn 1335 1334 1336 103 (parallel [
            (set (reg:DI 1 dx [orig:550 _464 ] [550])
                (plus:DI (reg:DI 1 dx [orig:547 _461 ] [547])
                    (reg:DI 0 ax [orig:549 _463 ] [549])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":329 222 {*adddi_1}
     (nil))
(insn 1336 1335 1337 103 (set (reg:SI 0 ax [2054])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "ETAFLD2.f":329 86 {*movsi_internal}
     (nil))
(insn 1337 1336 1338 103 (set (reg:DI 0 ax [orig:551 _465 ] [551])
        (sign_extend:DI (reg:SI 0 ax [2054]))) "ETAFLD2.f":329 149 {*extendsidi2_rex64}
     (nil))
(insn 1338 1337 1339 103 (parallel [
            (set (reg:DI 0 ax [orig:552 _466 ] [552])
                (plus:DI (reg:DI 0 ax [orig:551 _465 ] [551])
                    (reg:DI 1 dx [orig:550 _464 ] [550])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":329 222 {*adddi_1}
     (nil))
(insn 1339 1338 1340 103 (parallel [
            (set (reg:DI 1 dx [orig:553 _467 ] [553])
                (plus:DI (reg:DI 0 ax [orig:552 _466 ] [552])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":329 222 {*adddi_1}
     (nil))
(insn 1340 1339 1341 103 (set (reg/f:DI 0 ax [2055])
        (symbol_ref:DI ("iw.4421") [flags 0x202]  <var_decl 0x7f9827e68bd0 iw>)) "ETAFLD2.f":329 85 {*movdi_internal}
     (nil))
(insn 1341 1340 1342 103 (set (reg:SF 21 xmm0 [2056])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0  S4 A32])) "ETAFLD2.f":329 131 {*movsf_internal}
     (nil))
(insn 1342 1341 1343 103 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:553 _467 ] [553])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [2055])) [2 iw S4 A32])
        (reg:SF 21 xmm0 [2056])) "ETAFLD2.f":329 131 {*movsf_internal}
     (nil))
;;  succ:       104 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1682

;; basic block 104, loop depth 0, maybe hot
;;  prev block 103, next block 378, flags: (RTL, MODIFIED)
;;  pred:       103 (FALLTHRU)
;;              98
;;              99
;;              100
;;              101
;;              102
;; bb 104 artificial_defs: { }
;; bb 104 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1682
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 1343 1342 1344 104 52 (nil) [5 uses])
(note 1344 1343 1345 104 [bb 104] NOTE_INSN_BASIC_BLOCK)
(insn 1345 1344 5615 104 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":305 221 {*addsi_1}
     (nil))
(jump_insn 5615 1345 5616 104 (set (pc)
        (label_ref 1346)) "ETAFLD2.f":305 683 {jump}
     (nil)
 -> 1346)
;;  succ:       86 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1682

(barrier 5616 5615 5741)
;; basic block 378, loop depth 0, maybe hot
;;  prev block 104, next block 105, flags: (RTL, MODIFIED)
;;  pred:       86
;; bb 378 artificial_defs: { }
;; bb 378 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1682
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 5741 5616 5740 378 238 (nil) [1 uses])
(note 5740 5741 5742 378 [bb 378] NOTE_INSN_BASIC_BLOCK)
(insn 5742 5740 1349 378 (const_int 0 [0]) "ETAFLD2.f":327 718 {nop}
     (nil))
;;  succ:       105 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1682

;; basic block 105, loop depth 0, maybe hot
;;  prev block 378, next block 377, flags: (RTL, MODIFIED)
;;  pred:       378 [always]  (FALLTHRU)
;; bb 105 artificial_defs: { }
;; bb 105 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1682
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 1349 5742 1350 105 41 (nil) [0 uses])
(note 1350 1349 1351 105 [bb 105] NOTE_INSN_BASIC_BLOCK)
(insn 1351 1350 5617 105 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":304 221 {*addsi_1}
     (nil))
(jump_insn 5617 1351 5618 105 (set (pc)
        (label_ref 1352)) "ETAFLD2.f":304 683 {jump}
     (nil)
 -> 1352)
;;  succ:       84 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1682

(barrier 5618 5617 5738)
;; basic block 377, loop depth 0, maybe hot
;;  prev block 105, next block 106, flags: (RTL, MODIFIED)
;;  pred:       84
;; bb 377 artificial_defs: { }
;; bb 377 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 5738 5618 5737 377 237 (nil) [1 uses])
(note 5737 5738 5739 377 [bb 377] NOTE_INSN_BASIC_BLOCK)
(insn 5739 5737 1355 377 (const_int 0 [0]) "ETAFLD2.f":305 718 {nop}
     (nil))
;;  succ:       106 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 106, loop depth 0, maybe hot
;;  prev block 377, next block 374, flags: (RTL, MODIFIED)
;;  pred:       377 [always]  (FALLTHRU)
;; bb 106 artificial_defs: { }
;; bb 106 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 554 555
(code_label 1355 5739 1356 106 40 (nil) [0 uses])
(note 1356 1355 1357 106 [bb 106] NOTE_INSN_BASIC_BLOCK)
(insn 1357 1356 1358 106 (set (reg:SI 0 ax [orig:554 l.56_468 ] [554])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":303 86 {*movsi_internal}
     (nil))
(insn 1358 1357 1359 106 (parallel [
            (set (reg:SI 0 ax [orig:555 _469 ] [555])
                (plus:SI (reg:SI 0 ax [orig:554 l.56_468 ] [554])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":303 221 {*addsi_1}
     (nil))
(insn 1359 1358 5619 106 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])
        (reg:SI 0 ax [orig:555 _469 ] [555])) "ETAFLD2.f":303 86 {*movsi_internal}
     (nil))
(jump_insn 5619 1359 5620 106 (set (pc)
        (label_ref 1360)) "ETAFLD2.f":303 683 {jump}
     (nil)
 -> 1360)
;;  succ:       82 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 5620 5619 5729)
;; basic block 374, loop depth 0, maybe hot
;;  prev block 106, next block 107, flags: (RTL, MODIFIED)
;;  pred:       74
;;              82
;; bb 374 artificial_defs: { }
;; bb 374 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 5729 5620 5728 374 234 (nil) [2 uses])
(note 5728 5729 5730 374 [bb 374] NOTE_INSN_BASIC_BLOCK)
(insn 5730 5728 1363 374 (const_int 0 [0]) "ETAFLD2.f":333 718 {nop}
     (nil))
;;  succ:       107 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 107, loop depth 0, maybe hot
;;  prev block 374, next block 108, flags: (RTL, MODIFIED)
;;  pred:       374 [always]  (FALLTHRU)
;; bb 107 artificial_defs: { }
;; bb 107 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 1363 5730 1364 107 35 (nil) [0 uses])
(note 1364 1363 1365 107 [bb 107] NOTE_INSN_BASIC_BLOCK)
(insn 1365 1364 4523 107 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])
        (const_int 1 [0x1])) "ETAFLD2.f":336 86 {*movsi_internal}
     (nil))
;;  succ:       108 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 108, loop depth 0, maybe hot
;;  prev block 107, next block 109, flags: (RTL, MODIFIED)
;;  pred:       107 (FALLTHRU)
;;              312 [always] 
;; bb 108 artificial_defs: { }
;; bb 108 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 556 1685 2057
(code_label 4523 1365 1366 108 170 (nil) [1 uses])
(note 1366 4523 1367 108 [bb 108] NOTE_INSN_BASIC_BLOCK)
(insn 1367 1366 1368 108 (set (reg:SI 0 ax [orig:556 l.57_470 ] [556])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":336 86 {*movsi_internal}
     (nil))
(insn 1368 1367 1369 108 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [orig:556 l.57_470 ] [556])
            (const_int 38 [0x26]))) "ETAFLD2.f":336 11 {*cmpsi_1}
     (nil))
(insn 1369 1368 1370 108 (set (reg:QI 0 ax [2057])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "ETAFLD2.f":336 678 {*setcc_qi}
     (nil))
(insn 1370 1369 1371 108 (set (reg:SI 0 ax [orig:1685 _1866 ] [1685])
        (zero_extend:SI (reg:QI 0 ax [2057]))) "ETAFLD2.f":336 140 {*zero_extendqisi2}
     (nil))
(insn 1371 1370 1372 108 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:1685 _1866 ] [1685])
            (const_int 0 [0]))) "ETAFLD2.f":336 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1372 1371 1373 108 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 5726)
            (pc))) "ETAFLD2.f":336 682 {*jcc}
     (nil)
 -> 5726)
;;  succ:       373
;;              109 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 109, loop depth 0, maybe hot
;;  prev block 108, next block 110, flags: (RTL, MODIFIED)
;;  pred:       108 (FALLTHRU)
;; bb 109 artificial_defs: { }
;; bb 109 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 557
(note 1373 1372 1374 109 [bb 109] NOTE_INSN_BASIC_BLOCK)
(insn 1374 1373 1375 109 (set (reg:SI 0 ax [orig:557 _471 ] [557])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 16 [0x10]))) [1 rqstfld.iget+0 S4 A128])) "ETAFLD2.f":339 86 {*movsi_internal}
     (nil))
(insn 1375 1374 1376 109 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:557 _471 ] [557])
            (const_int 0 [0]))) "ETAFLD2.f":339 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1376 1375 1377 109 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 1476)
            (pc))) "ETAFLD2.f":339 682 {*jcc}
     (nil)
 -> 1476)
;;  succ:       110 (FALLTHRU)
;;              114
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 110, loop depth 0, maybe hot
;;  prev block 109, next block 111, flags: (RTL, MODIFIED)
;;  pred:       109 (FALLTHRU)
;; bb 110 artificial_defs: { }
;; bb 110 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 558 559 560 561 562 563 564 565 2058 2059 2060 2061
(note 1377 1376 1378 110 [bb 110] NOTE_INSN_BASIC_BLOCK)
(insn 1378 1377 1379 110 (set (reg:SI 0 ax [orig:558 _472 ] [558])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 16 [0x10]))) [1 rqstfld.iget+0 S4 A128])) "ETAFLD2.f":340 86 {*movsi_internal}
     (nil))
(insn 1379 1378 1380 110 (set (reg:DI 1 dx [orig:559 _473 ] [559])
        (sign_extend:DI (reg:SI 0 ax [orig:558 _472 ] [558]))) "ETAFLD2.f":340 149 {*extendsidi2_rex64}
     (nil))
(insn 1380 1379 1381 110 (set (reg:DI 0 ax [2058])
        (reg:DI 1 dx [orig:559 _473 ] [559])) "ETAFLD2.f":340 85 {*movdi_internal}
     (nil))
(insn 1381 1380 1383 110 (parallel [
            (set (reg:DI 0 ax [2059])
                (ashift:DI (reg:DI 0 ax [2058])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":340 551 {*ashldi3_1}
     (nil))
(insn 1383 1381 1384 110 (parallel [
            (set (reg:DI 0 ax [2058])
                (minus:DI (reg:DI 0 ax [2058])
                    (reg:DI 1 dx [orig:559 _473 ] [559])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":340 278 {*subdi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:559 _473 ] [559])
            (const_int 15 [0xf]))
        (nil)))
(insn 1384 1383 1386 110 (parallel [
            (set (reg:DI 0 ax [2060])
                (ashift:DI (reg:DI 0 ax [2058])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":340 551 {*ashldi3_1}
     (nil))
(insn 1386 1384 1387 110 (set (reg:DI 1 dx [orig:560 _474 ] [560])
        (reg:DI 0 ax [2058])) "ETAFLD2.f":340 85 {*movdi_internal}
     (nil))
(insn 1387 1386 1388 110 (set (reg:SI 0 ax [orig:561 l.58_475 ] [561])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":340 86 {*movsi_internal}
     (nil))
(insn 1388 1387 1389 110 (set (reg:DI 0 ax [orig:562 _476 ] [562])
        (sign_extend:DI (reg:SI 0 ax [orig:561 l.58_475 ] [561]))) "ETAFLD2.f":340 149 {*extendsidi2_rex64}
     (nil))
(insn 1389 1388 1390 110 (parallel [
            (set (reg:DI 0 ax [orig:563 _477 ] [563])
                (plus:DI (reg:DI 0 ax [orig:562 _476 ] [562])
                    (reg:DI 1 dx [orig:560 _474 ] [560])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":340 222 {*adddi_1}
     (nil))
(insn 1390 1389 1391 110 (parallel [
            (set (reg:DI 0 ax [orig:564 _478 ] [564])
                (plus:DI (reg:DI 0 ax [orig:563 _477 ] [563])
                    (const_int -61 [0xffffffffffffffc3])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":340 222 {*adddi_1}
     (nil))
(insn 1391 1390 1392 110 (parallel [
            (set (reg:DI 0 ax [2061])
                (plus:DI (reg:DI 0 ax [orig:564 _478 ] [564])
                    (const_int 1404 [0x57c])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":340 222 {*adddi_1}
     (nil))
(insn 1392 1391 1393 110 (set (reg:SI 0 ax [orig:565 _479 ] [565])
        (mem:SI (plus:DI (mult:DI (reg:DI 0 ax [2061])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)) [1 rqstfld.lvls S4 A32])) "ETAFLD2.f":340 86 {*movsi_internal}
     (nil))
(insn 1393 1392 1394 110 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:565 _479 ] [565])
            (const_int 0 [0]))) "ETAFLD2.f":340 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1394 1393 1395 110 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 1476)
            (pc))) "ETAFLD2.f":340 682 {*jcc}
     (nil)
 -> 1476)
;;  succ:       111 (FALLTHRU)
;;              114
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 111, loop depth 0, maybe hot
;;  prev block 110, next block 112, flags: (RTL, MODIFIED)
;;  pred:       110 (FALLTHRU)
;; bb 111 artificial_defs: { }
;; bb 111 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 566 567 568 569 570 571 572 573 574 575 2062 2063 2064 2065 2066 2067 2068 2069 2070 2071 2072
(note 1395 1394 1396 111 [bb 111] NOTE_INSN_BASIC_BLOCK)
(insn 1396 1395 1397 111 (set (reg:SI 0 ax [orig:566 _480 ] [566])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 16 [0x10]))) [1 rqstfld.iget+0 S4 A128])) "ETAFLD2.f":341 86 {*movsi_internal}
     (nil))
(insn 1397 1396 1398 111 (set (reg:DI 1 dx [orig:567 _481 ] [567])
        (sign_extend:DI (reg:SI 0 ax [orig:566 _480 ] [566]))) "ETAFLD2.f":341 149 {*extendsidi2_rex64}
     (nil))
(insn 1398 1397 1399 111 (set (reg:DI 0 ax [2062])
        (reg:DI 1 dx [orig:567 _481 ] [567])) "ETAFLD2.f":341 85 {*movdi_internal}
     (nil))
(insn 1399 1398 1401 111 (parallel [
            (set (reg:DI 0 ax [2063])
                (ashift:DI (reg:DI 0 ax [2062])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":341 551 {*ashldi3_1}
     (nil))
(insn 1401 1399 1402 111 (parallel [
            (set (reg:DI 0 ax [2062])
                (minus:DI (reg:DI 0 ax [2062])
                    (reg:DI 1 dx [orig:567 _481 ] [567])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":341 278 {*subdi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:567 _481 ] [567])
            (const_int 15 [0xf]))
        (nil)))
(insn 1402 1401 1404 111 (parallel [
            (set (reg:DI 0 ax [2064])
                (ashift:DI (reg:DI 0 ax [2062])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":341 551 {*ashldi3_1}
     (nil))
(insn 1404 1402 1405 111 (set (reg:DI 1 dx [orig:568 _482 ] [568])
        (reg:DI 0 ax [2062])) "ETAFLD2.f":341 85 {*movdi_internal}
     (nil))
(insn 1405 1404 1406 111 (set (reg:SI 0 ax [orig:569 l.59_483 ] [569])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":341 86 {*movsi_internal}
     (nil))
(insn 1406 1405 1407 111 (set (reg:DI 0 ax [orig:570 _484 ] [570])
        (sign_extend:DI (reg:SI 0 ax [orig:569 l.59_483 ] [569]))) "ETAFLD2.f":341 149 {*extendsidi2_rex64}
     (nil))
(insn 1407 1406 1408 111 (parallel [
            (set (reg:DI 0 ax [orig:571 _485 ] [571])
                (plus:DI (reg:DI 0 ax [orig:570 _484 ] [570])
                    (reg:DI 1 dx [orig:568 _482 ] [568])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":341 222 {*adddi_1}
     (nil))
(insn 1408 1407 1409 111 (parallel [
            (set (reg:DI 0 ax [orig:572 _486 ] [572])
                (plus:DI (reg:DI 0 ax [orig:571 _485 ] [571])
                    (const_int -61 [0xffffffffffffffc3])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":341 222 {*adddi_1}
     (nil))
(insn 1409 1408 1410 111 (parallel [
            (set (reg:DI 0 ax [2065])
                (plus:DI (reg:DI 0 ax [orig:572 _486 ] [572])
                    (const_int 1404 [0x57c])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":341 222 {*adddi_1}
     (nil))
(insn 1410 1409 1411 111 (set (reg:SI 0 ax [orig:573 _487 ] [573])
        (mem:SI (plus:DI (mult:DI (reg:DI 0 ax [2065])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)) [1 rqstfld.lvls S4 A32])) "ETAFLD2.f":341 86 {*movsi_internal}
     (nil))
(insn 1411 1410 1412 111 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -268 [0xfffffffffffffef4])) [1 itype+0 S4 A32])
        (reg:SI 0 ax [orig:573 _487 ] [573])) "ETAFLD2.f":341 86 {*movsi_internal}
     (nil))
(insn 1412 1411 1413 111 (parallel [
            (set (reg:DI 1 dx [2066])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -272 [0xfffffffffffffef0])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":342 222 {*adddi_1}
     (nil))
(insn 1413 1412 1414 111 (parallel [
            (set (reg:DI 0 ax [2067])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -268 [0xfffffffffffffef4])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":342 222 {*adddi_1}
     (nil))
(insn 1414 1413 1415 111 (set (reg:DI 37 r8)
        (symbol_ref:DI ("equiv.3.4378") [flags 0x202]  <var_decl 0x7f9828263750 equiv.3>)) "ETAFLD2.f":342 85 {*movdi_internal}
     (nil))
(insn 1415 1414 1417 111 (set (reg:DI 2 cx)
        (const:DI (plus:DI (symbol_ref:DI ("loops_") [flags 0x202]  <var_decl 0x7f9828246c60 loops>)
                (const_int 9680 [0x25d0])))) "ETAFLD2.f":342 85 {*movdi_internal}
     (nil))
(insn 1417 1415 1418 111 (set (reg:DI 4 si)
        (reg:DI 0 ax [2067])) "ETAFLD2.f":342 85 {*movdi_internal}
     (nil))
(insn 1418 1417 1419 111 (set (reg:DI 5 di)
        (symbol_ref:DI ("equiv.1.4359") [flags 0x202]  <var_decl 0x7f9828263360 equiv.1>)) "ETAFLD2.f":342 85 {*movdi_internal}
     (nil))
(insn 1419 1418 1420 111 (set (reg:QI 0 ax)
        (const_int 0 [0])) "ETAFLD2.f":342 88 {*movqi_internal}
     (nil))
(call_insn 1420 1419 1421 111 (call (mem:QI (symbol_ref:DI ("netal_") [flags 0x41]  <function_decl 0x7f9828228a00 netal>) [0 netal S1 A8])
        (const_int 0 [0])) "ETAFLD2.f":342 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (nil))))))))
(insn 1421 1420 1422 111 (set (reg:DI 1 dx [2068])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [4 grid2+0 S8 A64])) "ETAFLD2.f":343 85 {*movdi_internal}
     (nil))
(insn 1422 1421 1423 111 (set (reg:DI 0 ax [2069])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "ETAFLD2.f":343 85 {*movdi_internal}
     (nil))
(insn 1423 1422 1424 111 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [11  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -832 [0xfffffffffffffcc0])) [11 jmout+0 S8 A64])) "ETAFLD2.f":343 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 1424 1423 1425 111 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [11  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -824 [0xfffffffffffffcc8])) [11 imout+0 S8 A64])) "ETAFLD2.f":343 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 1425 1424 1426 111 (set (reg:DI 38 r9)
        (reg:DI 1 dx [2068])) "ETAFLD2.f":343 85 {*movdi_internal}
     (nil))
(insn 1426 1425 1427 111 (set (reg:DI 37 r8)
        (reg:DI 0 ax [2069])) "ETAFLD2.f":343 85 {*movdi_internal}
     (nil))
(insn 1427 1426 1428 111 (set (reg:DI 2 cx)
        (symbol_ref:DI ("equiv.2.4368") [flags 0x202]  <var_decl 0x7f9828263510 equiv.2>)) "ETAFLD2.f":343 85 {*movdi_internal}
     (nil))
(insn 1428 1427 1429 111 (set (reg:DI 1 dx)
        (symbol_ref:DI ("equiv.3.4378") [flags 0x202]  <var_decl 0x7f9828263750 equiv.3>)) "ETAFLD2.f":343 85 {*movdi_internal}
     (nil))
(insn 1429 1428 1430 111 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f9827f94240 *.LC3>)) "ETAFLD2.f":343 85 {*movdi_internal}
     (nil))
(insn 1430 1429 1431 111 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC20") [flags 0x2]  <var_decl 0x7f9827f94510 *.LC20>)) "ETAFLD2.f":343 85 {*movdi_internal}
     (nil))
(insn 1431 1430 1432 111 (set (reg:QI 0 ax)
        (const_int 0 [0])) "ETAFLD2.f":343 88 {*movqi_internal}
     (nil))
(call_insn 1432 1431 1433 111 (call (mem:QI (symbol_ref:DI ("e2out_") [flags 0x41]  <function_decl 0x7f9828228600 e2out>) [0 e2out S1 A8])
        (const_int 16 [0x10])) "ETAFLD2.f":343 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
(insn 1433 1432 1434 111 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":343 222 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 1434 1433 1435 111 (set (reg/f:DI 1 dx [2070])
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                (const_int 55216 [0xd7b0])))) "ETAFLD2.f":344 85 {*movdi_internal}
     (nil))
(insn 1435 1434 1436 111 (set (reg:DI 0 ax [2071])
        (const_int 0 [0])) "ETAFLD2.f":344 85 {*movdi_internal}
     (nil))
(insn 1436 1435 5851 111 (set (reg:DI 2 cx [2072])
        (const_int 12 [0xc])) "ETAFLD2.f":344 85 {*movdi_internal}
     (nil))
(insn 5851 1436 1437 111 (set (reg/f:DI 5 di [2070])
        (reg/f:DI 1 dx [2070])) "ETAFLD2.f":344 85 {*movdi_internal}
     (nil))
(insn 1437 5851 5852 111 (parallel [
            (set (reg:DI 2 cx [2072])
                (const_int 0 [0]))
            (set (reg/f:DI 5 di [2070])
                (plus:DI (ashift:DI (reg:DI 2 cx [2072])
                        (const_int 3 [0x3]))
                    (reg/f:DI 5 di [2070])))
            (set (mem/c:BLK (reg/f:DI 5 di [2070]) [1 rqstfld.id+0 S96 A128])
                (const_int 0 [0]))
            (use (reg:DI 0 ax [2071]))
            (use (reg:DI 2 cx [2072]))
        ]) "ETAFLD2.f":344 984 {*rep_stosdi_rex64}
     (nil))
(insn 5852 1437 1438 111 (set (reg/f:DI 1 dx [2070])
        (reg/f:DI 5 di [2070])) "ETAFLD2.f":344 85 {*movdi_internal}
     (nil))
(insn 1438 5852 1439 111 (set (mem/c:SI (reg/f:DI 1 dx [2070]) [1 rqstfld.id+96 S4 A128])
        (reg:SI 0 ax [2071])) "ETAFLD2.f":344 86 {*movsi_internal}
     (nil))
(insn 1439 1438 1440 111 (parallel [
            (set (reg/f:DI 1 dx [2070])
                (plus:DI (reg/f:DI 1 dx [2070])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":344 222 {*adddi_1}
     (nil))
(insn 1440 1439 1441 111 (set (reg:SI 0 ax [orig:574 l.60_488 ] [574])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":345 86 {*movsi_internal}
     (nil))
(insn 1441 1440 1442 111 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -276 [0xfffffffffffffeec])) [1 lyr+0 S4 A32])
        (reg:SI 0 ax [orig:574 l.60_488 ] [574])) "ETAFLD2.f":345 86 {*movsi_internal}
     (nil))
(insn 1442 1441 1443 111 (set (reg:SI 0 ax [orig:575 itype.61_489 ] [575])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -268 [0xfffffffffffffef4])) [1 itype+0 S4 A32])) "ETAFLD2.f":346 86 {*movsi_internal}
     (nil))
(insn 1443 1442 1444 111 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [orig:575 itype.61_489 ] [575])
            (const_int 1 [0x1]))) "ETAFLD2.f":346 11 {*cmpsi_1}
     (nil))
(jump_insn 1444 1443 1445 111 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 1447)
            (pc))) "ETAFLD2.f":346 682 {*jcc}
     (nil)
 -> 1447)
;;  succ:       112 (FALLTHRU)
;;              113
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 112, loop depth 0, maybe hot
;;  prev block 111, next block 113, flags: (RTL, MODIFIED)
;;  pred:       111 (FALLTHRU)
;; bb 112 artificial_defs: { }
;; bb 112 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 1445 1444 1446 112 [bb 112] NOTE_INSN_BASIC_BLOCK)
(insn 1446 1445 1447 112 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 55248 [0xd7d0]))) [1 rqstfld.id+32 S4 A128])
        (const_int 109 [0x6d])) "ETAFLD2.f":346 86 {*movsi_internal}
     (nil))
;;  succ:       113 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 113, loop depth 0, maybe hot
;;  prev block 112, next block 114, flags: (RTL, MODIFIED)
;;  pred:       111
;;              112 (FALLTHRU)
;; bb 113 artificial_defs: { }
;; bb 113 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 2073 2074 2075 2076 2077 2078 2079
(code_label 1447 1446 1448 113 61 (nil) [1 uses])
(note 1448 1447 1449 113 [bb 113] NOTE_INSN_BASIC_BLOCK)
(insn 1449 1448 1450 113 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -808 [0xfffffffffffffcd8])) [7 dt_parm.13.common.filename+0 S8 A64])
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7f9827f943f0 *.LC6>)) "ETAFLD2.f":347 85 {*movdi_internal}
     (nil))
(insn 1450 1449 1451 113 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -800 [0xfffffffffffffce0])) [1 dt_parm.13.common.line+0 S4 A128])
        (const_int 347 [0x15b])) "ETAFLD2.f":347 86 {*movsi_internal}
     (nil))
(insn 1451 1450 1452 113 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -816 [0xfffffffffffffcd0])) [1 dt_parm.13.common.flags+0 S4 A128])
        (const_int 128 [0x80])) "ETAFLD2.f":347 86 {*movsi_internal}
     (nil))
(insn 1452 1451 1453 113 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -812 [0xfffffffffffffcd4])) [1 dt_parm.13.common.unit+0 S4 A32])
        (const_int 6 [0x6])) "ETAFLD2.f":347 86 {*movsi_internal}
     (nil))
(insn 1453 1452 1454 113 (parallel [
            (set (reg:DI 0 ax [2073])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -816 [0xfffffffffffffcd0])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":347 222 {*adddi_1}
     (nil))
(insn 1454 1453 1455 113 (set (reg:DI 5 di)
        (reg:DI 0 ax [2073])) "ETAFLD2.f":347 85 {*movdi_internal}
     (nil))
(call_insn 1455 1454 1456 113 (call (mem:QI (symbol_ref:DI ("_gfortran_st_write") [flags 0x41]  <function_decl 0x7f9828225400 _gfortran_st_write>) [0 _gfortran_st_write S1 A8])
        (const_int 0 [0])) "ETAFLD2.f":347 689 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 1456 1455 1457 113 (parallel [
            (set (reg:DI 0 ax [2074])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -816 [0xfffffffffffffcd0])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":347 222 {*adddi_1}
     (nil))
(insn 1457 1456 1458 113 (set (reg:DI 1 dx)
        (const_int 30 [0x1e])) "ETAFLD2.f":347 85 {*movdi_internal}
     (nil))
(insn 1458 1457 1459 113 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC21") [flags 0x2]  <var_decl 0x7f9827f945a0 *.LC21>)) "ETAFLD2.f":347 85 {*movdi_internal}
     (nil))
(insn 1459 1458 1460 113 (set (reg:DI 5 di)
        (reg:DI 0 ax [2074])) "ETAFLD2.f":347 85 {*movdi_internal}
     (nil))
(call_insn 1460 1459 1461 113 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_character_write") [flags 0x41]  <function_decl 0x7f9828222500 _gfortran_transfer_character_write>) [0 _gfortran_transfer_character_write S1 A8])
        (const_int 0 [0])) "ETAFLD2.f":347 689 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 1461 1460 1462 113 (parallel [
            (set (reg:DI 0 ax [2075])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -816 [0xfffffffffffffcd0])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":347 222 {*adddi_1}
     (nil))
(insn 1462 1461 1463 113 (set (reg:DI 5 di)
        (reg:DI 0 ax [2075])) "ETAFLD2.f":347 85 {*movdi_internal}
     (nil))
(call_insn 1463 1462 1464 113 (call (mem:QI (symbol_ref:DI ("_gfortran_st_write_done") [flags 0x41]  <function_decl 0x7f9828225f00 _gfortran_st_write_done>) [0 _gfortran_st_write_done S1 A8])
        (const_int 0 [0])) "ETAFLD2.f":347 689 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 1464 1463 1465 113 (set (reg:DI 4 si [2076])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -832 [0xfffffffffffffcc0])) [11 jmout+0 S8 A64])) "ETAFLD2.f":348 85 {*movdi_internal}
     (nil))
(insn 1465 1464 1466 113 (set (reg:DI 2 cx [2077])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -824 [0xfffffffffffffcc8])) [11 imout+0 S8 A64])) "ETAFLD2.f":348 85 {*movdi_internal}
     (nil))
(insn 1466 1465 1467 113 (set (reg:DI 1 dx [2078])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "ETAFLD2.f":348 85 {*movdi_internal}
     (nil))
(insn 1467 1466 1468 113 (parallel [
            (set (reg:DI 0 ax [2079])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -276 [0xfffffffffffffeec])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":348 222 {*adddi_1}
     (nil))
(insn 1468 1467 1469 113 (set (reg:DI 38 r9)
        (reg:DI 4 si [2076])) "ETAFLD2.f":348 85 {*movdi_internal}
     (nil))
(insn 1469 1468 1470 113 (set (reg:DI 37 r8)
        (reg:DI 2 cx [2077])) "ETAFLD2.f":348 85 {*movdi_internal}
     (nil))
(insn 1470 1469 1471 113 (set (reg:DI 2 cx)
        (reg:DI 1 dx [2078])) "ETAFLD2.f":348 85 {*movdi_internal}
     (nil))
(insn 1471 1470 1472 113 (set (reg:DI 1 dx)
        (reg:DI 0 ax [2079])) "ETAFLD2.f":348 85 {*movdi_internal}
     (nil))
(insn 1472 1471 1473 113 (set (reg:DI 4 si)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                (const_int 16 [0x10])))) "ETAFLD2.f":348 85 {*movdi_internal}
     (nil))
(insn 1473 1472 1474 113 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                (const_int 4 [0x4])))) "ETAFLD2.f":348 85 {*movdi_internal}
     (nil))
(insn 1474 1473 1475 113 (set (reg:QI 0 ax)
        (const_int 0 [0])) "ETAFLD2.f":348 88 {*movqi_internal}
     (nil))
(call_insn 1475 1474 1476 113 (call (mem:QI (symbol_ref:DI ("output_") [flags 0x41]  <function_decl 0x7f9828228700 output>) [0 output S1 A8])
        (const_int 0 [0])) "ETAFLD2.f":348 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
;;  succ:       114 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 114, loop depth 0, maybe hot
;;  prev block 113, next block 115, flags: (RTL, MODIFIED)
;;  pred:       109
;;              113 (FALLTHRU)
;;              110
;; bb 114 artificial_defs: { }
;; bb 114 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 576
(code_label 1476 1475 1477 114 60 (nil) [2 uses])
(note 1477 1476 1478 114 [bb 114] NOTE_INSN_BASIC_BLOCK)
(insn 1478 1477 1479 114 (set (reg:SI 0 ax [orig:576 _490 ] [576])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 320 [0x140]))) [1 rqstfld.iget+304 S4 A128])) "ETAFLD2.f":353 86 {*movsi_internal}
     (nil))
(insn 1479 1478 1480 114 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:576 _490 ] [576])
            (const_int 0 [0]))) "ETAFLD2.f":353 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1480 1479 1481 114 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 1580)
            (pc))) "ETAFLD2.f":353 682 {*jcc}
     (nil)
 -> 1580)
;;  succ:       115 (FALLTHRU)
;;              119
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 115, loop depth 0, maybe hot
;;  prev block 114, next block 116, flags: (RTL, MODIFIED)
;;  pred:       114 (FALLTHRU)
;; bb 115 artificial_defs: { }
;; bb 115 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 577 578 579 580 581 582 583 584 2080 2081 2082 2083
(note 1481 1480 1482 115 [bb 115] NOTE_INSN_BASIC_BLOCK)
(insn 1482 1481 1483 115 (set (reg:SI 0 ax [orig:577 _491 ] [577])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 320 [0x140]))) [1 rqstfld.iget+304 S4 A128])) "ETAFLD2.f":354 86 {*movsi_internal}
     (nil))
(insn 1483 1482 1484 115 (set (reg:DI 1 dx [orig:578 _492 ] [578])
        (sign_extend:DI (reg:SI 0 ax [orig:577 _491 ] [577]))) "ETAFLD2.f":354 149 {*extendsidi2_rex64}
     (nil))
(insn 1484 1483 1485 115 (set (reg:DI 0 ax [2080])
        (reg:DI 1 dx [orig:578 _492 ] [578])) "ETAFLD2.f":354 85 {*movdi_internal}
     (nil))
(insn 1485 1484 1487 115 (parallel [
            (set (reg:DI 0 ax [2081])
                (ashift:DI (reg:DI 0 ax [2080])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":354 551 {*ashldi3_1}
     (nil))
(insn 1487 1485 1488 115 (parallel [
            (set (reg:DI 0 ax [2080])
                (minus:DI (reg:DI 0 ax [2080])
                    (reg:DI 1 dx [orig:578 _492 ] [578])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":354 278 {*subdi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:578 _492 ] [578])
            (const_int 15 [0xf]))
        (nil)))
(insn 1488 1487 1490 115 (parallel [
            (set (reg:DI 0 ax [2082])
                (ashift:DI (reg:DI 0 ax [2080])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":354 551 {*ashldi3_1}
     (nil))
(insn 1490 1488 1491 115 (set (reg:DI 1 dx [orig:579 _493 ] [579])
        (reg:DI 0 ax [2080])) "ETAFLD2.f":354 85 {*movdi_internal}
     (nil))
(insn 1491 1490 1492 115 (set (reg:SI 0 ax [orig:580 l.62_494 ] [580])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":354 86 {*movsi_internal}
     (nil))
(insn 1492 1491 1493 115 (set (reg:DI 0 ax [orig:581 _495 ] [581])
        (sign_extend:DI (reg:SI 0 ax [orig:580 l.62_494 ] [580]))) "ETAFLD2.f":354 149 {*extendsidi2_rex64}
     (nil))
(insn 1493 1492 1494 115 (parallel [
            (set (reg:DI 0 ax [orig:582 _496 ] [582])
                (plus:DI (reg:DI 0 ax [orig:581 _495 ] [581])
                    (reg:DI 1 dx [orig:579 _493 ] [579])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":354 222 {*adddi_1}
     (nil))
(insn 1494 1493 1495 115 (parallel [
            (set (reg:DI 0 ax [orig:583 _497 ] [583])
                (plus:DI (reg:DI 0 ax [orig:582 _496 ] [582])
                    (const_int -61 [0xffffffffffffffc3])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":354 222 {*adddi_1}
     (nil))
(insn 1495 1494 1496 115 (parallel [
            (set (reg:DI 0 ax [2083])
                (plus:DI (reg:DI 0 ax [orig:583 _497 ] [583])
                    (const_int 1404 [0x57c])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":354 222 {*adddi_1}
     (nil))
(insn 1496 1495 1497 115 (set (reg:SI 0 ax [orig:584 _498 ] [584])
        (mem:SI (plus:DI (mult:DI (reg:DI 0 ax [2083])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)) [1 rqstfld.lvls S4 A32])) "ETAFLD2.f":354 86 {*movsi_internal}
     (nil))
(insn 1497 1496 1498 115 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:584 _498 ] [584])
            (const_int 0 [0]))) "ETAFLD2.f":354 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1498 1497 1499 115 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 1580)
            (pc))) "ETAFLD2.f":354 682 {*jcc}
     (nil)
 -> 1580)
;;  succ:       116 (FALLTHRU)
;;              119
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 116, loop depth 0, maybe hot
;;  prev block 115, next block 117, flags: (RTL, MODIFIED)
;;  pred:       115 (FALLTHRU)
;; bb 116 artificial_defs: { }
;; bb 116 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 585 586 587 588 589 590 591 592 593 594 2084 2085 2086 2087 2088 2089 2090 2091 2092 2093 2094
(note 1499 1498 1500 116 [bb 116] NOTE_INSN_BASIC_BLOCK)
(insn 1500 1499 1501 116 (set (reg:SI 0 ax [orig:585 _499 ] [585])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 320 [0x140]))) [1 rqstfld.iget+304 S4 A128])) "ETAFLD2.f":355 86 {*movsi_internal}
     (nil))
(insn 1501 1500 1502 116 (set (reg:DI 1 dx [orig:586 _500 ] [586])
        (sign_extend:DI (reg:SI 0 ax [orig:585 _499 ] [585]))) "ETAFLD2.f":355 149 {*extendsidi2_rex64}
     (nil))
(insn 1502 1501 1503 116 (set (reg:DI 0 ax [2084])
        (reg:DI 1 dx [orig:586 _500 ] [586])) "ETAFLD2.f":355 85 {*movdi_internal}
     (nil))
(insn 1503 1502 1505 116 (parallel [
            (set (reg:DI 0 ax [2085])
                (ashift:DI (reg:DI 0 ax [2084])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":355 551 {*ashldi3_1}
     (nil))
(insn 1505 1503 1506 116 (parallel [
            (set (reg:DI 0 ax [2084])
                (minus:DI (reg:DI 0 ax [2084])
                    (reg:DI 1 dx [orig:586 _500 ] [586])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":355 278 {*subdi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:586 _500 ] [586])
            (const_int 15 [0xf]))
        (nil)))
(insn 1506 1505 1508 116 (parallel [
            (set (reg:DI 0 ax [2086])
                (ashift:DI (reg:DI 0 ax [2084])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":355 551 {*ashldi3_1}
     (nil))
(insn 1508 1506 1509 116 (set (reg:DI 1 dx [orig:587 _501 ] [587])
        (reg:DI 0 ax [2084])) "ETAFLD2.f":355 85 {*movdi_internal}
     (nil))
(insn 1509 1508 1510 116 (set (reg:SI 0 ax [orig:588 l.63_502 ] [588])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":355 86 {*movsi_internal}
     (nil))
(insn 1510 1509 1511 116 (set (reg:DI 0 ax [orig:589 _503 ] [589])
        (sign_extend:DI (reg:SI 0 ax [orig:588 l.63_502 ] [588]))) "ETAFLD2.f":355 149 {*extendsidi2_rex64}
     (nil))
(insn 1511 1510 1512 116 (parallel [
            (set (reg:DI 0 ax [orig:590 _504 ] [590])
                (plus:DI (reg:DI 0 ax [orig:589 _503 ] [589])
                    (reg:DI 1 dx [orig:587 _501 ] [587])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":355 222 {*adddi_1}
     (nil))
(insn 1512 1511 1513 116 (parallel [
            (set (reg:DI 0 ax [orig:591 _505 ] [591])
                (plus:DI (reg:DI 0 ax [orig:590 _504 ] [590])
                    (const_int -61 [0xffffffffffffffc3])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":355 222 {*adddi_1}
     (nil))
(insn 1513 1512 1514 116 (parallel [
            (set (reg:DI 0 ax [2087])
                (plus:DI (reg:DI 0 ax [orig:591 _505 ] [591])
                    (const_int 1404 [0x57c])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":355 222 {*adddi_1}
     (nil))
(insn 1514 1513 1515 116 (set (reg:SI 0 ax [orig:592 _506 ] [592])
        (mem:SI (plus:DI (mult:DI (reg:DI 0 ax [2087])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)) [1 rqstfld.lvls S4 A32])) "ETAFLD2.f":355 86 {*movsi_internal}
     (nil))
(insn 1515 1514 1516 116 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -268 [0xfffffffffffffef4])) [1 itype+0 S4 A32])
        (reg:SI 0 ax [orig:592 _506 ] [592])) "ETAFLD2.f":355 86 {*movsi_internal}
     (nil))
(insn 1516 1515 1517 116 (parallel [
            (set (reg:DI 1 dx [2088])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -272 [0xfffffffffffffef0])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":356 222 {*adddi_1}
     (nil))
(insn 1517 1516 1518 116 (parallel [
            (set (reg:DI 0 ax [2089])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -268 [0xfffffffffffffef4])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":356 222 {*adddi_1}
     (nil))
(insn 1518 1517 1519 116 (set (reg:DI 37 r8)
        (symbol_ref:DI ("equiv.3.4378") [flags 0x202]  <var_decl 0x7f9828263750 equiv.3>)) "ETAFLD2.f":356 85 {*movdi_internal}
     (nil))
(insn 1519 1518 1521 116 (set (reg:DI 2 cx)
        (const:DI (plus:DI (symbol_ref:DI ("loops_") [flags 0x202]  <var_decl 0x7f9828246c60 loops>)
                (const_int 9680 [0x25d0])))) "ETAFLD2.f":356 85 {*movdi_internal}
     (nil))
(insn 1521 1519 1522 116 (set (reg:DI 4 si)
        (reg:DI 0 ax [2089])) "ETAFLD2.f":356 85 {*movdi_internal}
     (nil))
(insn 1522 1521 1523 116 (set (reg:DI 5 di)
        (symbol_ref:DI ("equiv.0.4352") [flags 0x202]  <var_decl 0x7f98282631b0 equiv.0>)) "ETAFLD2.f":356 85 {*movdi_internal}
     (nil))
(insn 1523 1522 1524 116 (set (reg:QI 0 ax)
        (const_int 0 [0])) "ETAFLD2.f":356 88 {*movqi_internal}
     (nil))
(call_insn 1524 1523 1525 116 (call (mem:QI (symbol_ref:DI ("netal_") [flags 0x41]  <function_decl 0x7f9828228a00 netal>) [0 netal S1 A8])
        (const_int 0 [0])) "ETAFLD2.f":356 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (nil))))))))
(insn 1525 1524 1526 116 (set (reg:DI 1 dx [2090])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [4 grid2+0 S8 A64])) "ETAFLD2.f":357 85 {*movdi_internal}
     (nil))
(insn 1526 1525 1527 116 (set (reg:DI 0 ax [2091])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "ETAFLD2.f":357 85 {*movdi_internal}
     (nil))
(insn 1527 1526 1528 116 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [11  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -832 [0xfffffffffffffcc0])) [11 jmout+0 S8 A64])) "ETAFLD2.f":357 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 1528 1527 1529 116 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [11  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -824 [0xfffffffffffffcc8])) [11 imout+0 S8 A64])) "ETAFLD2.f":357 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 1529 1528 1530 116 (set (reg:DI 38 r9)
        (reg:DI 1 dx [2090])) "ETAFLD2.f":357 85 {*movdi_internal}
     (nil))
(insn 1530 1529 1531 116 (set (reg:DI 37 r8)
        (reg:DI 0 ax [2091])) "ETAFLD2.f":357 85 {*movdi_internal}
     (nil))
(insn 1531 1530 1532 116 (set (reg:DI 2 cx)
        (symbol_ref:DI ("equiv.2.4368") [flags 0x202]  <var_decl 0x7f9828263510 equiv.2>)) "ETAFLD2.f":357 85 {*movdi_internal}
     (nil))
(insn 1532 1531 1533 116 (set (reg:DI 1 dx)
        (symbol_ref:DI ("equiv.3.4378") [flags 0x202]  <var_decl 0x7f9828263750 equiv.3>)) "ETAFLD2.f":357 85 {*movdi_internal}
     (nil))
(insn 1533 1532 1534 116 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f9827f94240 *.LC3>)) "ETAFLD2.f":357 85 {*movdi_internal}
     (nil))
(insn 1534 1533 1535 116 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC22") [flags 0x2]  <var_decl 0x7f9827f94630 *.LC22>)) "ETAFLD2.f":357 85 {*movdi_internal}
     (nil))
(insn 1535 1534 1536 116 (set (reg:QI 0 ax)
        (const_int 0 [0])) "ETAFLD2.f":357 88 {*movqi_internal}
     (nil))
(call_insn 1536 1535 1537 116 (call (mem:QI (symbol_ref:DI ("e2out_") [flags 0x41]  <function_decl 0x7f9828228600 e2out>) [0 e2out S1 A8])
        (const_int 16 [0x10])) "ETAFLD2.f":357 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
(insn 1537 1536 1538 116 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":357 222 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 1538 1537 1539 116 (set (reg/f:DI 1 dx [2092])
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                (const_int 55216 [0xd7b0])))) "ETAFLD2.f":358 85 {*movdi_internal}
     (nil))
(insn 1539 1538 1540 116 (set (reg:DI 0 ax [2093])
        (const_int 0 [0])) "ETAFLD2.f":358 85 {*movdi_internal}
     (nil))
(insn 1540 1539 5853 116 (set (reg:DI 2 cx [2094])
        (const_int 12 [0xc])) "ETAFLD2.f":358 85 {*movdi_internal}
     (nil))
(insn 5853 1540 1541 116 (set (reg/f:DI 5 di [2092])
        (reg/f:DI 1 dx [2092])) "ETAFLD2.f":358 85 {*movdi_internal}
     (nil))
(insn 1541 5853 5854 116 (parallel [
            (set (reg:DI 2 cx [2094])
                (const_int 0 [0]))
            (set (reg/f:DI 5 di [2092])
                (plus:DI (ashift:DI (reg:DI 2 cx [2094])
                        (const_int 3 [0x3]))
                    (reg/f:DI 5 di [2092])))
            (set (mem/c:BLK (reg/f:DI 5 di [2092]) [1 rqstfld.id+0 S96 A128])
                (const_int 0 [0]))
            (use (reg:DI 0 ax [2093]))
            (use (reg:DI 2 cx [2094]))
        ]) "ETAFLD2.f":358 984 {*rep_stosdi_rex64}
     (nil))
(insn 5854 1541 1542 116 (set (reg/f:DI 1 dx [2092])
        (reg/f:DI 5 di [2092])) "ETAFLD2.f":358 85 {*movdi_internal}
     (nil))
(insn 1542 5854 1543 116 (set (mem/c:SI (reg/f:DI 1 dx [2092]) [1 rqstfld.id+96 S4 A128])
        (reg:SI 0 ax [2093])) "ETAFLD2.f":358 86 {*movsi_internal}
     (nil))
(insn 1543 1542 1544 116 (parallel [
            (set (reg/f:DI 1 dx [2092])
                (plus:DI (reg/f:DI 1 dx [2092])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":358 222 {*adddi_1}
     (nil))
(insn 1544 1543 1545 116 (set (reg:SI 0 ax [orig:593 l.64_507 ] [593])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":359 86 {*movsi_internal}
     (nil))
(insn 1545 1544 1546 116 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -276 [0xfffffffffffffeec])) [1 lyr+0 S4 A32])
        (reg:SI 0 ax [orig:593 l.64_507 ] [593])) "ETAFLD2.f":359 86 {*movsi_internal}
     (nil))
(insn 1546 1545 1547 116 (set (reg:SI 0 ax [orig:594 itype.65_508 ] [594])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -268 [0xfffffffffffffef4])) [1 itype+0 S4 A32])) "ETAFLD2.f":360 86 {*movsi_internal}
     (nil))
(insn 1547 1546 1548 116 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [orig:594 itype.65_508 ] [594])
            (const_int 1 [0x1]))) "ETAFLD2.f":360 11 {*cmpsi_1}
     (nil))
(jump_insn 1548 1547 1549 116 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 1551)
            (pc))) "ETAFLD2.f":360 682 {*jcc}
     (nil)
 -> 1551)
;;  succ:       117 (FALLTHRU)
;;              118
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 117, loop depth 0, maybe hot
;;  prev block 116, next block 118, flags: (RTL, MODIFIED)
;;  pred:       116 (FALLTHRU)
;; bb 117 artificial_defs: { }
;; bb 117 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 1549 1548 1550 117 [bb 117] NOTE_INSN_BASIC_BLOCK)
(insn 1550 1549 1551 117 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 55248 [0xd7d0]))) [1 rqstfld.id+32 S4 A128])
        (const_int 109 [0x6d])) "ETAFLD2.f":360 86 {*movsi_internal}
     (nil))
;;  succ:       118 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 118, loop depth 0, maybe hot
;;  prev block 117, next block 119, flags: (RTL, MODIFIED)
;;  pred:       116
;;              117 (FALLTHRU)
;; bb 118 artificial_defs: { }
;; bb 118 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 2095 2096 2097 2098 2099 2100 2101
(code_label 1551 1550 1552 118 63 (nil) [1 uses])
(note 1552 1551 1553 118 [bb 118] NOTE_INSN_BASIC_BLOCK)
(insn 1553 1552 1554 118 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -808 [0xfffffffffffffcd8])) [7 dt_parm.14.common.filename+0 S8 A64])
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7f9827f943f0 *.LC6>)) "ETAFLD2.f":361 85 {*movdi_internal}
     (nil))
(insn 1554 1553 1555 118 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -800 [0xfffffffffffffce0])) [1 dt_parm.14.common.line+0 S4 A128])
        (const_int 361 [0x169])) "ETAFLD2.f":361 86 {*movsi_internal}
     (nil))
(insn 1555 1554 1556 118 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -816 [0xfffffffffffffcd0])) [1 dt_parm.14.common.flags+0 S4 A128])
        (const_int 128 [0x80])) "ETAFLD2.f":361 86 {*movsi_internal}
     (nil))
(insn 1556 1555 1557 118 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -812 [0xfffffffffffffcd4])) [1 dt_parm.14.common.unit+0 S4 A32])
        (const_int 6 [0x6])) "ETAFLD2.f":361 86 {*movsi_internal}
     (nil))
(insn 1557 1556 1558 118 (parallel [
            (set (reg:DI 0 ax [2095])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -816 [0xfffffffffffffcd0])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":361 222 {*adddi_1}
     (nil))
(insn 1558 1557 1559 118 (set (reg:DI 5 di)
        (reg:DI 0 ax [2095])) "ETAFLD2.f":361 85 {*movdi_internal}
     (nil))
(call_insn 1559 1558 1560 118 (call (mem:QI (symbol_ref:DI ("_gfortran_st_write") [flags 0x41]  <function_decl 0x7f9828225400 _gfortran_st_write>) [0 _gfortran_st_write S1 A8])
        (const_int 0 [0])) "ETAFLD2.f":361 689 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 1560 1559 1561 118 (parallel [
            (set (reg:DI 0 ax [2096])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -816 [0xfffffffffffffcd0])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":361 222 {*adddi_1}
     (nil))
(insn 1561 1560 1562 118 (set (reg:DI 1 dx)
        (const_int 28 [0x1c])) "ETAFLD2.f":361 85 {*movdi_internal}
     (nil))
(insn 1562 1561 1563 118 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC23") [flags 0x2]  <var_decl 0x7f9827f946c0 *.LC23>)) "ETAFLD2.f":361 85 {*movdi_internal}
     (nil))
(insn 1563 1562 1564 118 (set (reg:DI 5 di)
        (reg:DI 0 ax [2096])) "ETAFLD2.f":361 85 {*movdi_internal}
     (nil))
(call_insn 1564 1563 1565 118 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_character_write") [flags 0x41]  <function_decl 0x7f9828222500 _gfortran_transfer_character_write>) [0 _gfortran_transfer_character_write S1 A8])
        (const_int 0 [0])) "ETAFLD2.f":361 689 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 1565 1564 1566 118 (parallel [
            (set (reg:DI 0 ax [2097])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -816 [0xfffffffffffffcd0])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":361 222 {*adddi_1}
     (nil))
(insn 1566 1565 1567 118 (set (reg:DI 5 di)
        (reg:DI 0 ax [2097])) "ETAFLD2.f":361 85 {*movdi_internal}
     (nil))
(call_insn 1567 1566 1568 118 (call (mem:QI (symbol_ref:DI ("_gfortran_st_write_done") [flags 0x41]  <function_decl 0x7f9828225f00 _gfortran_st_write_done>) [0 _gfortran_st_write_done S1 A8])
        (const_int 0 [0])) "ETAFLD2.f":361 689 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 1568 1567 1569 118 (set (reg:DI 4 si [2098])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -832 [0xfffffffffffffcc0])) [11 jmout+0 S8 A64])) "ETAFLD2.f":362 85 {*movdi_internal}
     (nil))
(insn 1569 1568 1570 118 (set (reg:DI 2 cx [2099])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -824 [0xfffffffffffffcc8])) [11 imout+0 S8 A64])) "ETAFLD2.f":362 85 {*movdi_internal}
     (nil))
(insn 1570 1569 1571 118 (set (reg:DI 1 dx [2100])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "ETAFLD2.f":362 85 {*movdi_internal}
     (nil))
(insn 1571 1570 1572 118 (parallel [
            (set (reg:DI 0 ax [2101])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -276 [0xfffffffffffffeec])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":362 222 {*adddi_1}
     (nil))
(insn 1572 1571 1573 118 (set (reg:DI 38 r9)
        (reg:DI 4 si [2098])) "ETAFLD2.f":362 85 {*movdi_internal}
     (nil))
(insn 1573 1572 1574 118 (set (reg:DI 37 r8)
        (reg:DI 2 cx [2099])) "ETAFLD2.f":362 85 {*movdi_internal}
     (nil))
(insn 1574 1573 1575 118 (set (reg:DI 2 cx)
        (reg:DI 1 dx [2100])) "ETAFLD2.f":362 85 {*movdi_internal}
     (nil))
(insn 1575 1574 1576 118 (set (reg:DI 1 dx)
        (reg:DI 0 ax [2101])) "ETAFLD2.f":362 85 {*movdi_internal}
     (nil))
(insn 1576 1575 1577 118 (set (reg:DI 4 si)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                (const_int 320 [0x140])))) "ETAFLD2.f":362 85 {*movdi_internal}
     (nil))
(insn 1577 1576 1578 118 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                (const_int 4 [0x4])))) "ETAFLD2.f":362 85 {*movdi_internal}
     (nil))
(insn 1578 1577 1579 118 (set (reg:QI 0 ax)
        (const_int 0 [0])) "ETAFLD2.f":362 88 {*movqi_internal}
     (nil))
(call_insn 1579 1578 1580 118 (call (mem:QI (symbol_ref:DI ("output_") [flags 0x41]  <function_decl 0x7f9828228700 output>) [0 output S1 A8])
        (const_int 0 [0])) "ETAFLD2.f":362 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
;;  succ:       119 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 119, loop depth 0, maybe hot
;;  prev block 118, next block 120, flags: (RTL, MODIFIED)
;;  pred:       114
;;              118 (FALLTHRU)
;;              115
;; bb 119 artificial_defs: { }
;; bb 119 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 595
(code_label 1580 1579 1581 119 62 (nil) [2 uses])
(note 1581 1580 1582 119 [bb 119] NOTE_INSN_BASIC_BLOCK)
(insn 1582 1581 1583 119 (set (reg:SI 0 ax [orig:595 _509 ] [595])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 20 [0x14]))) [1 rqstfld.iget+4 S4 A32])) "ETAFLD2.f":367 86 {*movsi_internal}
     (nil))
(insn 1583 1582 1584 119 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:595 _509 ] [595])
            (const_int 0 [0]))) "ETAFLD2.f":367 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1584 1583 1585 119 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 1669)
            (pc))) "ETAFLD2.f":367 682 {*jcc}
     (nil)
 -> 1669)
;;  succ:       120 (FALLTHRU)
;;              124
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 120, loop depth 0, maybe hot
;;  prev block 119, next block 121, flags: (RTL, MODIFIED)
;;  pred:       119 (FALLTHRU)
;; bb 120 artificial_defs: { }
;; bb 120 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 596 597 598 599 600 601 602 603 2102 2103 2104 2105
(note 1585 1584 1586 120 [bb 120] NOTE_INSN_BASIC_BLOCK)
(insn 1586 1585 1587 120 (set (reg:SI 0 ax [orig:596 _510 ] [596])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 20 [0x14]))) [1 rqstfld.iget+4 S4 A32])) "ETAFLD2.f":368 86 {*movsi_internal}
     (nil))
(insn 1587 1586 1588 120 (set (reg:DI 1 dx [orig:597 _511 ] [597])
        (sign_extend:DI (reg:SI 0 ax [orig:596 _510 ] [596]))) "ETAFLD2.f":368 149 {*extendsidi2_rex64}
     (nil))
(insn 1588 1587 1589 120 (set (reg:DI 0 ax [2102])
        (reg:DI 1 dx [orig:597 _511 ] [597])) "ETAFLD2.f":368 85 {*movdi_internal}
     (nil))
(insn 1589 1588 1591 120 (parallel [
            (set (reg:DI 0 ax [2103])
                (ashift:DI (reg:DI 0 ax [2102])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":368 551 {*ashldi3_1}
     (nil))
(insn 1591 1589 1592 120 (parallel [
            (set (reg:DI 0 ax [2102])
                (minus:DI (reg:DI 0 ax [2102])
                    (reg:DI 1 dx [orig:597 _511 ] [597])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":368 278 {*subdi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:597 _511 ] [597])
            (const_int 15 [0xf]))
        (nil)))
(insn 1592 1591 1594 120 (parallel [
            (set (reg:DI 0 ax [2104])
                (ashift:DI (reg:DI 0 ax [2102])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":368 551 {*ashldi3_1}
     (nil))
(insn 1594 1592 1595 120 (set (reg:DI 1 dx [orig:598 _512 ] [598])
        (reg:DI 0 ax [2102])) "ETAFLD2.f":368 85 {*movdi_internal}
     (nil))
(insn 1595 1594 1596 120 (set (reg:SI 0 ax [orig:599 l.66_513 ] [599])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":368 86 {*movsi_internal}
     (nil))
(insn 1596 1595 1597 120 (set (reg:DI 0 ax [orig:600 _514 ] [600])
        (sign_extend:DI (reg:SI 0 ax [orig:599 l.66_513 ] [599]))) "ETAFLD2.f":368 149 {*extendsidi2_rex64}
     (nil))
(insn 1597 1596 1598 120 (parallel [
            (set (reg:DI 0 ax [orig:601 _515 ] [601])
                (plus:DI (reg:DI 0 ax [orig:600 _514 ] [600])
                    (reg:DI 1 dx [orig:598 _512 ] [598])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":368 222 {*adddi_1}
     (nil))
(insn 1598 1597 1599 120 (parallel [
            (set (reg:DI 0 ax [orig:602 _516 ] [602])
                (plus:DI (reg:DI 0 ax [orig:601 _515 ] [601])
                    (const_int -61 [0xffffffffffffffc3])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":368 222 {*adddi_1}
     (nil))
(insn 1599 1598 1600 120 (parallel [
            (set (reg:DI 0 ax [2105])
                (plus:DI (reg:DI 0 ax [orig:602 _516 ] [602])
                    (const_int 1404 [0x57c])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":368 222 {*adddi_1}
     (nil))
(insn 1600 1599 1601 120 (set (reg:SI 0 ax [orig:603 _517 ] [603])
        (mem:SI (plus:DI (mult:DI (reg:DI 0 ax [2105])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)) [1 rqstfld.lvls S4 A32])) "ETAFLD2.f":368 86 {*movsi_internal}
     (nil))
(insn 1601 1600 1602 120 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:603 _517 ] [603])
            (const_int 0 [0]))) "ETAFLD2.f":368 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1602 1601 1603 120 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 1669)
            (pc))) "ETAFLD2.f":368 682 {*jcc}
     (nil)
 -> 1669)
;;  succ:       121 (FALLTHRU)
;;              124
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 121, loop depth 0, maybe hot
;;  prev block 120, next block 122, flags: (RTL, MODIFIED)
;;  pred:       120 (FALLTHRU)
;; bb 121 artificial_defs: { }
;; bb 121 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 604 605 606 607 608 609 610 611 612 613 2106 2107 2108 2109 2110 2111 2112 2113 2114 2115 2116
(note 1603 1602 1604 121 [bb 121] NOTE_INSN_BASIC_BLOCK)
(insn 1604 1603 1605 121 (set (reg:SI 0 ax [orig:604 _518 ] [604])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 20 [0x14]))) [1 rqstfld.iget+4 S4 A32])) "ETAFLD2.f":369 86 {*movsi_internal}
     (nil))
(insn 1605 1604 1606 121 (set (reg:DI 1 dx [orig:605 _519 ] [605])
        (sign_extend:DI (reg:SI 0 ax [orig:604 _518 ] [604]))) "ETAFLD2.f":369 149 {*extendsidi2_rex64}
     (nil))
(insn 1606 1605 1607 121 (set (reg:DI 0 ax [2106])
        (reg:DI 1 dx [orig:605 _519 ] [605])) "ETAFLD2.f":369 85 {*movdi_internal}
     (nil))
(insn 1607 1606 1609 121 (parallel [
            (set (reg:DI 0 ax [2107])
                (ashift:DI (reg:DI 0 ax [2106])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":369 551 {*ashldi3_1}
     (nil))
(insn 1609 1607 1610 121 (parallel [
            (set (reg:DI 0 ax [2106])
                (minus:DI (reg:DI 0 ax [2106])
                    (reg:DI 1 dx [orig:605 _519 ] [605])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":369 278 {*subdi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:605 _519 ] [605])
            (const_int 15 [0xf]))
        (nil)))
(insn 1610 1609 1612 121 (parallel [
            (set (reg:DI 0 ax [2108])
                (ashift:DI (reg:DI 0 ax [2106])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":369 551 {*ashldi3_1}
     (nil))
(insn 1612 1610 1613 121 (set (reg:DI 1 dx [orig:606 _520 ] [606])
        (reg:DI 0 ax [2106])) "ETAFLD2.f":369 85 {*movdi_internal}
     (nil))
(insn 1613 1612 1614 121 (set (reg:SI 0 ax [orig:607 l.67_521 ] [607])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":369 86 {*movsi_internal}
     (nil))
(insn 1614 1613 1615 121 (set (reg:DI 0 ax [orig:608 _522 ] [608])
        (sign_extend:DI (reg:SI 0 ax [orig:607 l.67_521 ] [607]))) "ETAFLD2.f":369 149 {*extendsidi2_rex64}
     (nil))
(insn 1615 1614 1616 121 (parallel [
            (set (reg:DI 0 ax [orig:609 _523 ] [609])
                (plus:DI (reg:DI 0 ax [orig:608 _522 ] [608])
                    (reg:DI 1 dx [orig:606 _520 ] [606])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":369 222 {*adddi_1}
     (nil))
(insn 1616 1615 1617 121 (parallel [
            (set (reg:DI 0 ax [orig:610 _524 ] [610])
                (plus:DI (reg:DI 0 ax [orig:609 _523 ] [609])
                    (const_int -61 [0xffffffffffffffc3])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":369 222 {*adddi_1}
     (nil))
(insn 1617 1616 1618 121 (parallel [
            (set (reg:DI 0 ax [2109])
                (plus:DI (reg:DI 0 ax [orig:610 _524 ] [610])
                    (const_int 1404 [0x57c])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":369 222 {*adddi_1}
     (nil))
(insn 1618 1617 1619 121 (set (reg:SI 0 ax [orig:611 _525 ] [611])
        (mem:SI (plus:DI (mult:DI (reg:DI 0 ax [2109])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)) [1 rqstfld.lvls S4 A32])) "ETAFLD2.f":369 86 {*movsi_internal}
     (nil))
(insn 1619 1618 1620 121 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -268 [0xfffffffffffffef4])) [1 itype+0 S4 A32])
        (reg:SI 0 ax [orig:611 _525 ] [611])) "ETAFLD2.f":369 86 {*movsi_internal}
     (nil))
(insn 1620 1619 1621 121 (parallel [
            (set (reg:DI 1 dx [2110])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -272 [0xfffffffffffffef0])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":370 222 {*adddi_1}
     (nil))
(insn 1621 1620 1622 121 (parallel [
            (set (reg:DI 0 ax [2111])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -268 [0xfffffffffffffef4])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":370 222 {*adddi_1}
     (nil))
(insn 1622 1621 1623 121 (set (reg:DI 37 r8)
        (symbol_ref:DI ("equiv.3.4378") [flags 0x202]  <var_decl 0x7f9828263750 equiv.3>)) "ETAFLD2.f":370 85 {*movdi_internal}
     (nil))
(insn 1623 1622 1625 121 (set (reg:DI 2 cx)
        (const:DI (plus:DI (symbol_ref:DI ("loops_") [flags 0x202]  <var_decl 0x7f9828246c60 loops>)
                (const_int 9680 [0x25d0])))) "ETAFLD2.f":370 85 {*movdi_internal}
     (nil))
(insn 1625 1623 1626 121 (set (reg:DI 4 si)
        (reg:DI 0 ax [2111])) "ETAFLD2.f":370 85 {*movdi_internal}
     (nil))
(insn 1626 1625 1627 121 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7f982825bcf0 vrbls>)
                (const_int 9363396 [0x8edfc4])))) "ETAFLD2.f":370 85 {*movdi_internal}
     (nil))
(insn 1627 1626 1628 121 (set (reg:QI 0 ax)
        (const_int 0 [0])) "ETAFLD2.f":370 88 {*movqi_internal}
     (nil))
(call_insn 1628 1627 1629 121 (call (mem:QI (symbol_ref:DI ("netal_") [flags 0x41]  <function_decl 0x7f9828228a00 netal>) [0 netal S1 A8])
        (const_int 0 [0])) "ETAFLD2.f":370 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (nil))))))))
(insn 1629 1628 1630 121 (set (reg:DI 1 dx [2112])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [4 grid2+0 S8 A64])) "ETAFLD2.f":371 85 {*movdi_internal}
     (nil))
(insn 1630 1629 1631 121 (set (reg:DI 0 ax [2113])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "ETAFLD2.f":371 85 {*movdi_internal}
     (nil))
(insn 1631 1630 1632 121 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [11  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -832 [0xfffffffffffffcc0])) [11 jmout+0 S8 A64])) "ETAFLD2.f":371 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 1632 1631 1633 121 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [11  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -824 [0xfffffffffffffcc8])) [11 imout+0 S8 A64])) "ETAFLD2.f":371 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 1633 1632 1634 121 (set (reg:DI 38 r9)
        (reg:DI 1 dx [2112])) "ETAFLD2.f":371 85 {*movdi_internal}
     (nil))
(insn 1634 1633 1635 121 (set (reg:DI 37 r8)
        (reg:DI 0 ax [2113])) "ETAFLD2.f":371 85 {*movdi_internal}
     (nil))
(insn 1635 1634 1636 121 (set (reg:DI 2 cx)
        (symbol_ref:DI ("equiv.2.4368") [flags 0x202]  <var_decl 0x7f9828263510 equiv.2>)) "ETAFLD2.f":371 85 {*movdi_internal}
     (nil))
(insn 1636 1635 1637 121 (set (reg:DI 1 dx)
        (symbol_ref:DI ("equiv.3.4378") [flags 0x202]  <var_decl 0x7f9828263750 equiv.3>)) "ETAFLD2.f":371 85 {*movdi_internal}
     (nil))
(insn 1637 1636 1638 121 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f9827f94240 *.LC3>)) "ETAFLD2.f":371 85 {*movdi_internal}
     (nil))
(insn 1638 1637 1639 121 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC24") [flags 0x2]  <var_decl 0x7f9827f94750 *.LC24>)) "ETAFLD2.f":371 85 {*movdi_internal}
     (nil))
(insn 1639 1638 1640 121 (set (reg:QI 0 ax)
        (const_int 0 [0])) "ETAFLD2.f":371 88 {*movqi_internal}
     (nil))
(call_insn 1640 1639 1641 121 (call (mem:QI (symbol_ref:DI ("e2out_") [flags 0x41]  <function_decl 0x7f9828228600 e2out>) [0 e2out S1 A8])
        (const_int 16 [0x10])) "ETAFLD2.f":371 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
(insn 1641 1640 1642 121 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":371 222 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 1642 1641 1643 121 (set (reg/f:DI 1 dx [2114])
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                (const_int 55216 [0xd7b0])))) "ETAFLD2.f":372 85 {*movdi_internal}
     (nil))
(insn 1643 1642 1644 121 (set (reg:DI 0 ax [2115])
        (const_int 0 [0])) "ETAFLD2.f":372 85 {*movdi_internal}
     (nil))
(insn 1644 1643 5855 121 (set (reg:DI 2 cx [2116])
        (const_int 12 [0xc])) "ETAFLD2.f":372 85 {*movdi_internal}
     (nil))
(insn 5855 1644 1645 121 (set (reg/f:DI 5 di [2114])
        (reg/f:DI 1 dx [2114])) "ETAFLD2.f":372 85 {*movdi_internal}
     (nil))
(insn 1645 5855 5856 121 (parallel [
            (set (reg:DI 2 cx [2116])
                (const_int 0 [0]))
            (set (reg/f:DI 5 di [2114])
                (plus:DI (ashift:DI (reg:DI 2 cx [2116])
                        (const_int 3 [0x3]))
                    (reg/f:DI 5 di [2114])))
            (set (mem/c:BLK (reg/f:DI 5 di [2114]) [1 rqstfld.id+0 S96 A128])
                (const_int 0 [0]))
            (use (reg:DI 0 ax [2115]))
            (use (reg:DI 2 cx [2116]))
        ]) "ETAFLD2.f":372 984 {*rep_stosdi_rex64}
     (nil))
(insn 5856 1645 1646 121 (set (reg/f:DI 1 dx [2114])
        (reg/f:DI 5 di [2114])) "ETAFLD2.f":372 85 {*movdi_internal}
     (nil))
(insn 1646 5856 1647 121 (set (mem/c:SI (reg/f:DI 1 dx [2114]) [1 rqstfld.id+96 S4 A128])
        (reg:SI 0 ax [2115])) "ETAFLD2.f":372 86 {*movsi_internal}
     (nil))
(insn 1647 1646 1648 121 (parallel [
            (set (reg/f:DI 1 dx [2114])
                (plus:DI (reg/f:DI 1 dx [2114])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":372 222 {*adddi_1}
     (nil))
(insn 1648 1647 1649 121 (set (reg:SI 0 ax [orig:612 l.68_526 ] [612])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":373 86 {*movsi_internal}
     (nil))
(insn 1649 1648 1650 121 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -276 [0xfffffffffffffeec])) [1 lyr+0 S4 A32])
        (reg:SI 0 ax [orig:612 l.68_526 ] [612])) "ETAFLD2.f":373 86 {*movsi_internal}
     (nil))
(insn 1650 1649 1651 121 (set (reg:SI 0 ax [orig:613 itype.69_527 ] [613])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -268 [0xfffffffffffffef4])) [1 itype+0 S4 A32])) "ETAFLD2.f":374 86 {*movsi_internal}
     (nil))
(insn 1651 1650 1652 121 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [orig:613 itype.69_527 ] [613])
            (const_int 1 [0x1]))) "ETAFLD2.f":374 11 {*cmpsi_1}
     (nil))
(jump_insn 1652 1651 1653 121 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 1655)
            (pc))) "ETAFLD2.f":374 682 {*jcc}
     (nil)
 -> 1655)
;;  succ:       122 (FALLTHRU)
;;              123
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 122, loop depth 0, maybe hot
;;  prev block 121, next block 123, flags: (RTL, MODIFIED)
;;  pred:       121 (FALLTHRU)
;; bb 122 artificial_defs: { }
;; bb 122 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 1653 1652 1654 122 [bb 122] NOTE_INSN_BASIC_BLOCK)
(insn 1654 1653 1655 122 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 55248 [0xd7d0]))) [1 rqstfld.id+32 S4 A128])
        (const_int 109 [0x6d])) "ETAFLD2.f":374 86 {*movsi_internal}
     (nil))
;;  succ:       123 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 123, loop depth 0, maybe hot
;;  prev block 122, next block 124, flags: (RTL, MODIFIED)
;;  pred:       121
;;              122 (FALLTHRU)
;; bb 123 artificial_defs: { }
;; bb 123 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 2117 2118 2119 2120
(code_label 1655 1654 1656 123 65 (nil) [1 uses])
(note 1656 1655 1657 123 [bb 123] NOTE_INSN_BASIC_BLOCK)
(insn 1657 1656 1658 123 (set (reg:DI 4 si [2117])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -832 [0xfffffffffffffcc0])) [11 jmout+0 S8 A64])) "ETAFLD2.f":375 85 {*movdi_internal}
     (nil))
(insn 1658 1657 1659 123 (set (reg:DI 2 cx [2118])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -824 [0xfffffffffffffcc8])) [11 imout+0 S8 A64])) "ETAFLD2.f":375 85 {*movdi_internal}
     (nil))
(insn 1659 1658 1660 123 (set (reg:DI 1 dx [2119])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "ETAFLD2.f":375 85 {*movdi_internal}
     (nil))
(insn 1660 1659 1661 123 (parallel [
            (set (reg:DI 0 ax [2120])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -276 [0xfffffffffffffeec])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":375 222 {*adddi_1}
     (nil))
(insn 1661 1660 1662 123 (set (reg:DI 38 r9)
        (reg:DI 4 si [2117])) "ETAFLD2.f":375 85 {*movdi_internal}
     (nil))
(insn 1662 1661 1663 123 (set (reg:DI 37 r8)
        (reg:DI 2 cx [2118])) "ETAFLD2.f":375 85 {*movdi_internal}
     (nil))
(insn 1663 1662 1664 123 (set (reg:DI 2 cx)
        (reg:DI 1 dx [2119])) "ETAFLD2.f":375 85 {*movdi_internal}
     (nil))
(insn 1664 1663 1665 123 (set (reg:DI 1 dx)
        (reg:DI 0 ax [2120])) "ETAFLD2.f":375 85 {*movdi_internal}
     (nil))
(insn 1665 1664 1666 123 (set (reg:DI 4 si)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                (const_int 20 [0x14])))) "ETAFLD2.f":375 85 {*movdi_internal}
     (nil))
(insn 1666 1665 1667 123 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                (const_int 4 [0x4])))) "ETAFLD2.f":375 85 {*movdi_internal}
     (nil))
(insn 1667 1666 1668 123 (set (reg:QI 0 ax)
        (const_int 0 [0])) "ETAFLD2.f":375 88 {*movqi_internal}
     (nil))
(call_insn 1668 1667 1669 123 (call (mem:QI (symbol_ref:DI ("output_") [flags 0x41]  <function_decl 0x7f9828228700 output>) [0 output S1 A8])
        (const_int 0 [0])) "ETAFLD2.f":375 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
;;  succ:       124 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 124, loop depth 0, maybe hot
;;  prev block 123, next block 125, flags: (RTL, MODIFIED)
;;  pred:       119
;;              123 (FALLTHRU)
;;              120
;; bb 124 artificial_defs: { }
;; bb 124 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 614
(code_label 1669 1668 1670 124 64 (nil) [2 uses])
(note 1670 1669 1671 124 [bb 124] NOTE_INSN_BASIC_BLOCK)
(insn 1671 1670 1672 124 (set (reg:SI 0 ax [orig:614 _528 ] [614])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 24 [0x18]))) [1 rqstfld.iget+8 S4 A64])) "ETAFLD2.f":380 86 {*movsi_internal}
     (nil))
(insn 1672 1671 1673 124 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:614 _528 ] [614])
            (const_int 0 [0]))) "ETAFLD2.f":380 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1673 1672 1674 124 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 1774)
            (pc))) "ETAFLD2.f":380 682 {*jcc}
     (nil)
 -> 1774)
;;  succ:       125 (FALLTHRU)
;;              129
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 125, loop depth 0, maybe hot
;;  prev block 124, next block 126, flags: (RTL, MODIFIED)
;;  pred:       124 (FALLTHRU)
;; bb 125 artificial_defs: { }
;; bb 125 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 615 616 617 618 619 620 621 622 2121 2122 2123 2124
(note 1674 1673 1675 125 [bb 125] NOTE_INSN_BASIC_BLOCK)
(insn 1675 1674 1676 125 (set (reg:SI 0 ax [orig:615 _529 ] [615])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 24 [0x18]))) [1 rqstfld.iget+8 S4 A64])) "ETAFLD2.f":381 86 {*movsi_internal}
     (nil))
(insn 1676 1675 1677 125 (set (reg:DI 1 dx [orig:616 _530 ] [616])
        (sign_extend:DI (reg:SI 0 ax [orig:615 _529 ] [615]))) "ETAFLD2.f":381 149 {*extendsidi2_rex64}
     (nil))
(insn 1677 1676 1678 125 (set (reg:DI 0 ax [2121])
        (reg:DI 1 dx [orig:616 _530 ] [616])) "ETAFLD2.f":381 85 {*movdi_internal}
     (nil))
(insn 1678 1677 1680 125 (parallel [
            (set (reg:DI 0 ax [2122])
                (ashift:DI (reg:DI 0 ax [2121])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":381 551 {*ashldi3_1}
     (nil))
(insn 1680 1678 1681 125 (parallel [
            (set (reg:DI 0 ax [2121])
                (minus:DI (reg:DI 0 ax [2121])
                    (reg:DI 1 dx [orig:616 _530 ] [616])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":381 278 {*subdi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:616 _530 ] [616])
            (const_int 15 [0xf]))
        (nil)))
(insn 1681 1680 1683 125 (parallel [
            (set (reg:DI 0 ax [2123])
                (ashift:DI (reg:DI 0 ax [2121])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":381 551 {*ashldi3_1}
     (nil))
(insn 1683 1681 1684 125 (set (reg:DI 1 dx [orig:617 _531 ] [617])
        (reg:DI 0 ax [2121])) "ETAFLD2.f":381 85 {*movdi_internal}
     (nil))
(insn 1684 1683 1685 125 (set (reg:SI 0 ax [orig:618 l.70_532 ] [618])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":381 86 {*movsi_internal}
     (nil))
(insn 1685 1684 1686 125 (set (reg:DI 0 ax [orig:619 _533 ] [619])
        (sign_extend:DI (reg:SI 0 ax [orig:618 l.70_532 ] [618]))) "ETAFLD2.f":381 149 {*extendsidi2_rex64}
     (nil))
(insn 1686 1685 1687 125 (parallel [
            (set (reg:DI 0 ax [orig:620 _534 ] [620])
                (plus:DI (reg:DI 0 ax [orig:619 _533 ] [619])
                    (reg:DI 1 dx [orig:617 _531 ] [617])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":381 222 {*adddi_1}
     (nil))
(insn 1687 1686 1688 125 (parallel [
            (set (reg:DI 0 ax [orig:621 _535 ] [621])
                (plus:DI (reg:DI 0 ax [orig:620 _534 ] [620])
                    (const_int -61 [0xffffffffffffffc3])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":381 222 {*adddi_1}
     (nil))
(insn 1688 1687 1689 125 (parallel [
            (set (reg:DI 0 ax [2124])
                (plus:DI (reg:DI 0 ax [orig:621 _535 ] [621])
                    (const_int 1404 [0x57c])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":381 222 {*adddi_1}
     (nil))
(insn 1689 1688 1690 125 (set (reg:SI 0 ax [orig:622 _536 ] [622])
        (mem:SI (plus:DI (mult:DI (reg:DI 0 ax [2124])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)) [1 rqstfld.lvls S4 A32])) "ETAFLD2.f":381 86 {*movsi_internal}
     (nil))
(insn 1690 1689 1691 125 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:622 _536 ] [622])
            (const_int 0 [0]))) "ETAFLD2.f":381 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1691 1690 1692 125 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 1774)
            (pc))) "ETAFLD2.f":381 682 {*jcc}
     (nil)
 -> 1774)
;;  succ:       126 (FALLTHRU)
;;              129
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 126, loop depth 0, maybe hot
;;  prev block 125, next block 127, flags: (RTL, MODIFIED)
;;  pred:       125 (FALLTHRU)
;; bb 126 artificial_defs: { }
;; bb 126 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 623 624 625 626 627 628 629 630 631 632 2125 2126 2127 2128 2129 2130 2131 2132 2133 2134 2135 2136 2137
(note 1692 1691 1693 126 [bb 126] NOTE_INSN_BASIC_BLOCK)
(insn 1693 1692 1694 126 (set (reg:SI 0 ax [orig:623 _537 ] [623])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 24 [0x18]))) [1 rqstfld.iget+8 S4 A64])) "ETAFLD2.f":382 86 {*movsi_internal}
     (nil))
(insn 1694 1693 1695 126 (set (reg:DI 1 dx [orig:624 _538 ] [624])
        (sign_extend:DI (reg:SI 0 ax [orig:623 _537 ] [623]))) "ETAFLD2.f":382 149 {*extendsidi2_rex64}
     (nil))
(insn 1695 1694 1696 126 (set (reg:DI 0 ax [2125])
        (reg:DI 1 dx [orig:624 _538 ] [624])) "ETAFLD2.f":382 85 {*movdi_internal}
     (nil))
(insn 1696 1695 1698 126 (parallel [
            (set (reg:DI 0 ax [2126])
                (ashift:DI (reg:DI 0 ax [2125])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":382 551 {*ashldi3_1}
     (nil))
(insn 1698 1696 1699 126 (parallel [
            (set (reg:DI 0 ax [2125])
                (minus:DI (reg:DI 0 ax [2125])
                    (reg:DI 1 dx [orig:624 _538 ] [624])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":382 278 {*subdi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:624 _538 ] [624])
            (const_int 15 [0xf]))
        (nil)))
(insn 1699 1698 1701 126 (parallel [
            (set (reg:DI 0 ax [2127])
                (ashift:DI (reg:DI 0 ax [2125])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":382 551 {*ashldi3_1}
     (nil))
(insn 1701 1699 1702 126 (set (reg:DI 1 dx [orig:625 _539 ] [625])
        (reg:DI 0 ax [2125])) "ETAFLD2.f":382 85 {*movdi_internal}
     (nil))
(insn 1702 1701 1703 126 (set (reg:SI 0 ax [orig:626 l.71_540 ] [626])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":382 86 {*movsi_internal}
     (nil))
(insn 1703 1702 1704 126 (set (reg:DI 0 ax [orig:627 _541 ] [627])
        (sign_extend:DI (reg:SI 0 ax [orig:626 l.71_540 ] [626]))) "ETAFLD2.f":382 149 {*extendsidi2_rex64}
     (nil))
(insn 1704 1703 1705 126 (parallel [
            (set (reg:DI 0 ax [orig:628 _542 ] [628])
                (plus:DI (reg:DI 0 ax [orig:627 _541 ] [627])
                    (reg:DI 1 dx [orig:625 _539 ] [625])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":382 222 {*adddi_1}
     (nil))
(insn 1705 1704 1706 126 (parallel [
            (set (reg:DI 0 ax [orig:629 _543 ] [629])
                (plus:DI (reg:DI 0 ax [orig:628 _542 ] [628])
                    (const_int -61 [0xffffffffffffffc3])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":382 222 {*adddi_1}
     (nil))
(insn 1706 1705 1707 126 (parallel [
            (set (reg:DI 0 ax [2128])
                (plus:DI (reg:DI 0 ax [orig:629 _543 ] [629])
                    (const_int 1404 [0x57c])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":382 222 {*adddi_1}
     (nil))
(insn 1707 1706 1708 126 (set (reg:SI 0 ax [orig:630 _544 ] [630])
        (mem:SI (plus:DI (mult:DI (reg:DI 0 ax [2128])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)) [1 rqstfld.lvls S4 A32])) "ETAFLD2.f":382 86 {*movsi_internal}
     (nil))
(insn 1708 1707 1709 126 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -268 [0xfffffffffffffef4])) [1 itype+0 S4 A32])
        (reg:SI 0 ax [orig:630 _544 ] [630])) "ETAFLD2.f":382 86 {*movsi_internal}
     (nil))
(insn 1709 1708 1710 126 (parallel [
            (set (reg:DI 1 dx [2129])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -272 [0xfffffffffffffef0])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":383 222 {*adddi_1}
     (nil))
(insn 1710 1709 1711 126 (parallel [
            (set (reg:DI 0 ax [2130])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -268 [0xfffffffffffffef4])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":383 222 {*adddi_1}
     (nil))
(insn 1711 1710 1712 126 (set (reg:DI 37 r8)
        (symbol_ref:DI ("equiv.3.4378") [flags 0x202]  <var_decl 0x7f9828263750 equiv.3>)) "ETAFLD2.f":383 85 {*movdi_internal}
     (nil))
(insn 1712 1711 1714 126 (set (reg:DI 2 cx)
        (const:DI (plus:DI (symbol_ref:DI ("loops_") [flags 0x202]  <var_decl 0x7f9828246c60 loops>)
                (const_int 9680 [0x25d0])))) "ETAFLD2.f":383 85 {*movdi_internal}
     (nil))
(insn 1714 1712 1715 126 (set (reg:DI 4 si)
        (reg:DI 0 ax [2130])) "ETAFLD2.f":383 85 {*movdi_internal}
     (nil))
(insn 1715 1714 1716 126 (set (reg:DI 5 di)
        (symbol_ref:DI ("equiv.1.4359") [flags 0x202]  <var_decl 0x7f9828263360 equiv.1>)) "ETAFLD2.f":383 85 {*movdi_internal}
     (nil))
(insn 1716 1715 1717 126 (set (reg:QI 0 ax)
        (const_int 0 [0])) "ETAFLD2.f":383 88 {*movqi_internal}
     (nil))
(call_insn 1717 1716 1718 126 (call (mem:QI (symbol_ref:DI ("netal_") [flags 0x41]  <function_decl 0x7f9828228a00 netal>) [0 netal S1 A8])
        (const_int 0 [0])) "ETAFLD2.f":383 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (nil))))))))
(insn 1718 1717 1719 126 (parallel [
            (set (reg:DI 1 dx [2131])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -272 [0xfffffffffffffef0])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":384 222 {*adddi_1}
     (nil))
(insn 1719 1718 1720 126 (parallel [
            (set (reg:DI 0 ax [2132])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -268 [0xfffffffffffffef4])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":384 222 {*adddi_1}
     (nil))
(insn 1720 1719 1721 126 (set (reg:DI 37 r8)
        (symbol_ref:DI ("equiv.2.4368") [flags 0x202]  <var_decl 0x7f9828263510 equiv.2>)) "ETAFLD2.f":384 85 {*movdi_internal}
     (nil))
(insn 1721 1720 1723 126 (set (reg:DI 2 cx)
        (const:DI (plus:DI (symbol_ref:DI ("loops_") [flags 0x202]  <var_decl 0x7f9828246c60 loops>)
                (const_int 9680 [0x25d0])))) "ETAFLD2.f":384 85 {*movdi_internal}
     (nil))
(insn 1723 1721 1724 126 (set (reg:DI 4 si)
        (reg:DI 0 ax [2132])) "ETAFLD2.f":384 85 {*movdi_internal}
     (nil))
(insn 1724 1723 1725 126 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7f982825bcf0 vrbls>)
                (const_int 9363396 [0x8edfc4])))) "ETAFLD2.f":384 85 {*movdi_internal}
     (nil))
(insn 1725 1724 1726 126 (set (reg:QI 0 ax)
        (const_int 0 [0])) "ETAFLD2.f":384 88 {*movqi_internal}
     (nil))
(call_insn 1726 1725 1727 126 (call (mem:QI (symbol_ref:DI ("netal_") [flags 0x41]  <function_decl 0x7f9828228a00 netal>) [0 netal S1 A8])
        (const_int 0 [0])) "ETAFLD2.f":384 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (nil))))))))
(insn 1727 1726 1728 126 (set (reg:DI 37 r8)
        (symbol_ref/f:DI ("*.LC25") [flags 0x2]  <var_decl 0x7f9827f947e0 *.LC25>)) "ETAFLD2.f":385 85 {*movdi_internal}
     (nil))
(insn 1728 1727 1729 126 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*.LC26") [flags 0x2]  <var_decl 0x7f9827f94870 *.LC26>)) "ETAFLD2.f":385 85 {*movdi_internal}
     (nil))
(insn 1729 1728 1730 126 (set (reg:DI 1 dx)
        (symbol_ref:DI ("egrid3.4390") [flags 0x202]  <var_decl 0x7f9828263d80 egrid3>)) "ETAFLD2.f":385 85 {*movdi_internal}
     (nil))
(insn 1730 1729 1731 126 (set (reg:DI 4 si)
        (symbol_ref:DI ("equiv.2.4368") [flags 0x202]  <var_decl 0x7f9828263510 equiv.2>)) "ETAFLD2.f":385 85 {*movdi_internal}
     (nil))
(insn 1731 1730 1732 126 (set (reg:DI 5 di)
        (symbol_ref:DI ("equiv.3.4378") [flags 0x202]  <var_decl 0x7f9828263750 equiv.3>)) "ETAFLD2.f":385 85 {*movdi_internal}
     (nil))
(insn 1732 1731 1733 126 (set (reg:QI 0 ax)
        (const_int 0 [0])) "ETAFLD2.f":385 88 {*movqi_internal}
     (nil))
(call_insn 1733 1732 1734 126 (call (mem:QI (symbol_ref:DI ("calpot2_") [flags 0x41]  <function_decl 0x7f9828228b00 calpot2>) [0 calpot2 S1 A8])
        (const_int 0 [0])) "ETAFLD2.f":385 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (nil))))))))
(insn 1734 1733 1735 126 (set (reg:DI 1 dx [2133])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [4 grid2+0 S8 A64])) "ETAFLD2.f":386 85 {*movdi_internal}
     (nil))
(insn 1735 1734 1736 126 (set (reg:DI 0 ax [2134])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "ETAFLD2.f":386 85 {*movdi_internal}
     (nil))
(insn 1736 1735 1737 126 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [11  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -832 [0xfffffffffffffcc0])) [11 jmout+0 S8 A64])) "ETAFLD2.f":386 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 1737 1736 1738 126 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [11  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -824 [0xfffffffffffffcc8])) [11 imout+0 S8 A64])) "ETAFLD2.f":386 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 1738 1737 1739 126 (set (reg:DI 38 r9)
        (reg:DI 1 dx [2133])) "ETAFLD2.f":386 85 {*movdi_internal}
     (nil))
(insn 1739 1738 1740 126 (set (reg:DI 37 r8)
        (reg:DI 0 ax [2134])) "ETAFLD2.f":386 85 {*movdi_internal}
     (nil))
(insn 1740 1739 1741 126 (set (reg:DI 2 cx)
        (symbol_ref:DI ("equiv.2.4368") [flags 0x202]  <var_decl 0x7f9828263510 equiv.2>)) "ETAFLD2.f":386 85 {*movdi_internal}
     (nil))
(insn 1741 1740 1742 126 (set (reg:DI 1 dx)
        (symbol_ref:DI ("egrid3.4390") [flags 0x202]  <var_decl 0x7f9828263d80 egrid3>)) "ETAFLD2.f":386 85 {*movdi_internal}
     (nil))
(insn 1742 1741 1743 126 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f9827f94240 *.LC3>)) "ETAFLD2.f":386 85 {*movdi_internal}
     (nil))
(insn 1743 1742 1744 126 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC27") [flags 0x2]  <var_decl 0x7f9827f94900 *.LC27>)) "ETAFLD2.f":386 85 {*movdi_internal}
     (nil))
(insn 1744 1743 1745 126 (set (reg:QI 0 ax)
        (const_int 0 [0])) "ETAFLD2.f":386 88 {*movqi_internal}
     (nil))
(call_insn 1745 1744 1746 126 (call (mem:QI (symbol_ref:DI ("e2out_") [flags 0x41]  <function_decl 0x7f9828228600 e2out>) [0 e2out S1 A8])
        (const_int 16 [0x10])) "ETAFLD2.f":386 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
(insn 1746 1745 1747 126 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":386 222 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 1747 1746 1748 126 (set (reg/f:DI 1 dx [2135])
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                (const_int 55216 [0xd7b0])))) "ETAFLD2.f":387 85 {*movdi_internal}
     (nil))
(insn 1748 1747 1749 126 (set (reg:DI 0 ax [2136])
        (const_int 0 [0])) "ETAFLD2.f":387 85 {*movdi_internal}
     (nil))
(insn 1749 1748 5857 126 (set (reg:DI 2 cx [2137])
        (const_int 12 [0xc])) "ETAFLD2.f":387 85 {*movdi_internal}
     (nil))
(insn 5857 1749 1750 126 (set (reg/f:DI 5 di [2135])
        (reg/f:DI 1 dx [2135])) "ETAFLD2.f":387 85 {*movdi_internal}
     (nil))
(insn 1750 5857 5858 126 (parallel [
            (set (reg:DI 2 cx [2137])
                (const_int 0 [0]))
            (set (reg/f:DI 5 di [2135])
                (plus:DI (ashift:DI (reg:DI 2 cx [2137])
                        (const_int 3 [0x3]))
                    (reg/f:DI 5 di [2135])))
            (set (mem/c:BLK (reg/f:DI 5 di [2135]) [1 rqstfld.id+0 S96 A128])
                (const_int 0 [0]))
            (use (reg:DI 0 ax [2136]))
            (use (reg:DI 2 cx [2137]))
        ]) "ETAFLD2.f":387 984 {*rep_stosdi_rex64}
     (nil))
(insn 5858 1750 1751 126 (set (reg/f:DI 1 dx [2135])
        (reg/f:DI 5 di [2135])) "ETAFLD2.f":387 85 {*movdi_internal}
     (nil))
(insn 1751 5858 1752 126 (set (mem/c:SI (reg/f:DI 1 dx [2135]) [1 rqstfld.id+96 S4 A128])
        (reg:SI 0 ax [2136])) "ETAFLD2.f":387 86 {*movsi_internal}
     (nil))
(insn 1752 1751 1753 126 (parallel [
            (set (reg/f:DI 1 dx [2135])
                (plus:DI (reg/f:DI 1 dx [2135])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":387 222 {*adddi_1}
     (nil))
(insn 1753 1752 1754 126 (set (reg:SI 0 ax [orig:631 l.72_545 ] [631])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":388 86 {*movsi_internal}
     (nil))
(insn 1754 1753 1755 126 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -276 [0xfffffffffffffeec])) [1 lyr+0 S4 A32])
        (reg:SI 0 ax [orig:631 l.72_545 ] [631])) "ETAFLD2.f":388 86 {*movsi_internal}
     (nil))
(insn 1755 1754 1756 126 (set (reg:SI 0 ax [orig:632 itype.73_546 ] [632])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -268 [0xfffffffffffffef4])) [1 itype+0 S4 A32])) "ETAFLD2.f":389 86 {*movsi_internal}
     (nil))
(insn 1756 1755 1757 126 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [orig:632 itype.73_546 ] [632])
            (const_int 1 [0x1]))) "ETAFLD2.f":389 11 {*cmpsi_1}
     (nil))
(jump_insn 1757 1756 1758 126 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 1760)
            (pc))) "ETAFLD2.f":389 682 {*jcc}
     (nil)
 -> 1760)
;;  succ:       127 (FALLTHRU)
;;              128
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 127, loop depth 0, maybe hot
;;  prev block 126, next block 128, flags: (RTL, MODIFIED)
;;  pred:       126 (FALLTHRU)
;; bb 127 artificial_defs: { }
;; bb 127 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 1758 1757 1759 127 [bb 127] NOTE_INSN_BASIC_BLOCK)
(insn 1759 1758 1760 127 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 55248 [0xd7d0]))) [1 rqstfld.id+32 S4 A128])
        (const_int 109 [0x6d])) "ETAFLD2.f":389 86 {*movsi_internal}
     (nil))
;;  succ:       128 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 128, loop depth 0, maybe hot
;;  prev block 127, next block 129, flags: (RTL, MODIFIED)
;;  pred:       126
;;              127 (FALLTHRU)
;; bb 128 artificial_defs: { }
;; bb 128 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 2138 2139 2140 2141
(code_label 1760 1759 1761 128 67 (nil) [1 uses])
(note 1761 1760 1762 128 [bb 128] NOTE_INSN_BASIC_BLOCK)
(insn 1762 1761 1763 128 (set (reg:DI 4 si [2138])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -832 [0xfffffffffffffcc0])) [11 jmout+0 S8 A64])) "ETAFLD2.f":390 85 {*movdi_internal}
     (nil))
(insn 1763 1762 1764 128 (set (reg:DI 2 cx [2139])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -824 [0xfffffffffffffcc8])) [11 imout+0 S8 A64])) "ETAFLD2.f":390 85 {*movdi_internal}
     (nil))
(insn 1764 1763 1765 128 (set (reg:DI 1 dx [2140])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "ETAFLD2.f":390 85 {*movdi_internal}
     (nil))
(insn 1765 1764 1766 128 (parallel [
            (set (reg:DI 0 ax [2141])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -276 [0xfffffffffffffeec])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":390 222 {*adddi_1}
     (nil))
(insn 1766 1765 1767 128 (set (reg:DI 38 r9)
        (reg:DI 4 si [2138])) "ETAFLD2.f":390 85 {*movdi_internal}
     (nil))
(insn 1767 1766 1768 128 (set (reg:DI 37 r8)
        (reg:DI 2 cx [2139])) "ETAFLD2.f":390 85 {*movdi_internal}
     (nil))
(insn 1768 1767 1769 128 (set (reg:DI 2 cx)
        (reg:DI 1 dx [2140])) "ETAFLD2.f":390 85 {*movdi_internal}
     (nil))
(insn 1769 1768 1770 128 (set (reg:DI 1 dx)
        (reg:DI 0 ax [2141])) "ETAFLD2.f":390 85 {*movdi_internal}
     (nil))
(insn 1770 1769 1771 128 (set (reg:DI 4 si)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                (const_int 24 [0x18])))) "ETAFLD2.f":390 85 {*movdi_internal}
     (nil))
(insn 1771 1770 1772 128 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                (const_int 4 [0x4])))) "ETAFLD2.f":390 85 {*movdi_internal}
     (nil))
(insn 1772 1771 1773 128 (set (reg:QI 0 ax)
        (const_int 0 [0])) "ETAFLD2.f":390 88 {*movqi_internal}
     (nil))
(call_insn 1773 1772 1774 128 (call (mem:QI (symbol_ref:DI ("output_") [flags 0x41]  <function_decl 0x7f9828228700 output>) [0 output S1 A8])
        (const_int 0 [0])) "ETAFLD2.f":390 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
;;  succ:       129 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 129, loop depth 0, maybe hot
;;  prev block 128, next block 130, flags: (RTL, MODIFIED)
;;  pred:       124
;;              128 (FALLTHRU)
;;              125
;; bb 129 artificial_defs: { }
;; bb 129 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 633
(code_label 1774 1773 1775 129 66 (nil) [2 uses])
(note 1775 1774 1776 129 [bb 129] NOTE_INSN_BASIC_BLOCK)
(insn 1776 1775 1777 129 (set (reg:SI 0 ax [orig:633 _547 ] [633])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 36 [0x24]))) [1 rqstfld.iget+20 S4 A32])) "ETAFLD2.f":395 86 {*movsi_internal}
     (nil))
(insn 1777 1776 1778 129 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:633 _547 ] [633])
            (const_int 0 [0]))) "ETAFLD2.f":395 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1778 1777 1779 129 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 1920)
            (pc))) "ETAFLD2.f":395 682 {*jcc}
     (nil)
 -> 1920)
;;  succ:       130 (FALLTHRU)
;;              134
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 130, loop depth 0, maybe hot
;;  prev block 129, next block 131, flags: (RTL, MODIFIED)
;;  pred:       129 (FALLTHRU)
;; bb 130 artificial_defs: { }
;; bb 130 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 634 635 636 637 638 639 640 641 2142 2143 2144 2145
(note 1779 1778 1780 130 [bb 130] NOTE_INSN_BASIC_BLOCK)
(insn 1780 1779 1781 130 (set (reg:SI 0 ax [orig:634 _548 ] [634])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 36 [0x24]))) [1 rqstfld.iget+20 S4 A32])) "ETAFLD2.f":396 86 {*movsi_internal}
     (nil))
(insn 1781 1780 1782 130 (set (reg:DI 1 dx [orig:635 _549 ] [635])
        (sign_extend:DI (reg:SI 0 ax [orig:634 _548 ] [634]))) "ETAFLD2.f":396 149 {*extendsidi2_rex64}
     (nil))
(insn 1782 1781 1783 130 (set (reg:DI 0 ax [2142])
        (reg:DI 1 dx [orig:635 _549 ] [635])) "ETAFLD2.f":396 85 {*movdi_internal}
     (nil))
(insn 1783 1782 1785 130 (parallel [
            (set (reg:DI 0 ax [2143])
                (ashift:DI (reg:DI 0 ax [2142])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":396 551 {*ashldi3_1}
     (nil))
(insn 1785 1783 1786 130 (parallel [
            (set (reg:DI 0 ax [2142])
                (minus:DI (reg:DI 0 ax [2142])
                    (reg:DI 1 dx [orig:635 _549 ] [635])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":396 278 {*subdi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:635 _549 ] [635])
            (const_int 15 [0xf]))
        (nil)))
(insn 1786 1785 1788 130 (parallel [
            (set (reg:DI 0 ax [2144])
                (ashift:DI (reg:DI 0 ax [2142])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":396 551 {*ashldi3_1}
     (nil))
(insn 1788 1786 1789 130 (set (reg:DI 1 dx [orig:636 _550 ] [636])
        (reg:DI 0 ax [2142])) "ETAFLD2.f":396 85 {*movdi_internal}
     (nil))
(insn 1789 1788 1790 130 (set (reg:SI 0 ax [orig:637 l.74_551 ] [637])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":396 86 {*movsi_internal}
     (nil))
(insn 1790 1789 1791 130 (set (reg:DI 0 ax [orig:638 _552 ] [638])
        (sign_extend:DI (reg:SI 0 ax [orig:637 l.74_551 ] [637]))) "ETAFLD2.f":396 149 {*extendsidi2_rex64}
     (nil))
(insn 1791 1790 1792 130 (parallel [
            (set (reg:DI 0 ax [orig:639 _553 ] [639])
                (plus:DI (reg:DI 0 ax [orig:638 _552 ] [638])
                    (reg:DI 1 dx [orig:636 _550 ] [636])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":396 222 {*adddi_1}
     (nil))
(insn 1792 1791 1793 130 (parallel [
            (set (reg:DI 0 ax [orig:640 _554 ] [640])
                (plus:DI (reg:DI 0 ax [orig:639 _553 ] [639])
                    (const_int -61 [0xffffffffffffffc3])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":396 222 {*adddi_1}
     (nil))
(insn 1793 1792 1794 130 (parallel [
            (set (reg:DI 0 ax [2145])
                (plus:DI (reg:DI 0 ax [orig:640 _554 ] [640])
                    (const_int 1404 [0x57c])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":396 222 {*adddi_1}
     (nil))
(insn 1794 1793 1795 130 (set (reg:SI 0 ax [orig:641 _555 ] [641])
        (mem:SI (plus:DI (mult:DI (reg:DI 0 ax [2145])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)) [1 rqstfld.lvls S4 A32])) "ETAFLD2.f":396 86 {*movsi_internal}
     (nil))
(insn 1795 1794 1796 130 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:641 _555 ] [641])
            (const_int 0 [0]))) "ETAFLD2.f":396 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1796 1795 1797 130 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 1920)
            (pc))) "ETAFLD2.f":396 682 {*jcc}
     (nil)
 -> 1920)
;;  succ:       131 (FALLTHRU)
;;              134
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 131, loop depth 0, maybe hot
;;  prev block 130, next block 132, flags: (RTL, MODIFIED)
;;  pred:       130 (FALLTHRU)
;; bb 131 artificial_defs: { }
;; bb 131 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 642 643 644 645 646 647 648 649 650 651 2146 2147 2148 2149 2150 2151 2152 2153 2154 2155 2156 2157 2158 2159 2160 2161 2162 2163 2164 2165 2166 2167 2168
(note 1797 1796 1798 131 [bb 131] NOTE_INSN_BASIC_BLOCK)
(insn 1798 1797 1799 131 (set (reg:SI 0 ax [orig:642 _556 ] [642])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 36 [0x24]))) [1 rqstfld.iget+20 S4 A32])) "ETAFLD2.f":397 86 {*movsi_internal}
     (nil))
(insn 1799 1798 1800 131 (set (reg:DI 1 dx [orig:643 _557 ] [643])
        (sign_extend:DI (reg:SI 0 ax [orig:642 _556 ] [642]))) "ETAFLD2.f":397 149 {*extendsidi2_rex64}
     (nil))
(insn 1800 1799 1801 131 (set (reg:DI 0 ax [2146])
        (reg:DI 1 dx [orig:643 _557 ] [643])) "ETAFLD2.f":397 85 {*movdi_internal}
     (nil))
(insn 1801 1800 1803 131 (parallel [
            (set (reg:DI 0 ax [2147])
                (ashift:DI (reg:DI 0 ax [2146])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":397 551 {*ashldi3_1}
     (nil))
(insn 1803 1801 1804 131 (parallel [
            (set (reg:DI 0 ax [2146])
                (minus:DI (reg:DI 0 ax [2146])
                    (reg:DI 1 dx [orig:643 _557 ] [643])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":397 278 {*subdi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:643 _557 ] [643])
            (const_int 15 [0xf]))
        (nil)))
(insn 1804 1803 1806 131 (parallel [
            (set (reg:DI 0 ax [2148])
                (ashift:DI (reg:DI 0 ax [2146])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":397 551 {*ashldi3_1}
     (nil))
(insn 1806 1804 1807 131 (set (reg:DI 1 dx [orig:644 _558 ] [644])
        (reg:DI 0 ax [2146])) "ETAFLD2.f":397 85 {*movdi_internal}
     (nil))
(insn 1807 1806 1808 131 (set (reg:SI 0 ax [orig:645 l.75_559 ] [645])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":397 86 {*movsi_internal}
     (nil))
(insn 1808 1807 1809 131 (set (reg:DI 0 ax [orig:646 _560 ] [646])
        (sign_extend:DI (reg:SI 0 ax [orig:645 l.75_559 ] [645]))) "ETAFLD2.f":397 149 {*extendsidi2_rex64}
     (nil))
(insn 1809 1808 1810 131 (parallel [
            (set (reg:DI 0 ax [orig:647 _561 ] [647])
                (plus:DI (reg:DI 0 ax [orig:646 _560 ] [646])
                    (reg:DI 1 dx [orig:644 _558 ] [644])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":397 222 {*adddi_1}
     (nil))
(insn 1810 1809 1811 131 (parallel [
            (set (reg:DI 0 ax [orig:648 _562 ] [648])
                (plus:DI (reg:DI 0 ax [orig:647 _561 ] [647])
                    (const_int -61 [0xffffffffffffffc3])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":397 222 {*adddi_1}
     (nil))
(insn 1811 1810 1812 131 (parallel [
            (set (reg:DI 0 ax [2149])
                (plus:DI (reg:DI 0 ax [orig:648 _562 ] [648])
                    (const_int 1404 [0x57c])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":397 222 {*adddi_1}
     (nil))
(insn 1812 1811 1813 131 (set (reg:SI 0 ax [orig:649 _563 ] [649])
        (mem:SI (plus:DI (mult:DI (reg:DI 0 ax [2149])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)) [1 rqstfld.lvls S4 A32])) "ETAFLD2.f":397 86 {*movsi_internal}
     (nil))
(insn 1813 1812 1814 131 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -268 [0xfffffffffffffef4])) [1 itype+0 S4 A32])
        (reg:SI 0 ax [orig:649 _563 ] [649])) "ETAFLD2.f":397 86 {*movsi_internal}
     (nil))
(insn 1814 1813 1815 131 (parallel [
            (set (reg:DI 1 dx [2150])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -272 [0xfffffffffffffef0])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":398 222 {*adddi_1}
     (nil))
(insn 1815 1814 1816 131 (parallel [
            (set (reg:DI 0 ax [2151])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -268 [0xfffffffffffffef4])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":398 222 {*adddi_1}
     (nil))
(insn 1816 1815 1817 131 (set (reg:DI 37 r8)
        (symbol_ref:DI ("equiv.3.4378") [flags 0x202]  <var_decl 0x7f9828263750 equiv.3>)) "ETAFLD2.f":398 85 {*movdi_internal}
     (nil))
(insn 1817 1816 1819 131 (set (reg:DI 2 cx)
        (const:DI (plus:DI (symbol_ref:DI ("loops_") [flags 0x202]  <var_decl 0x7f9828246c60 loops>)
                (const_int 9680 [0x25d0])))) "ETAFLD2.f":398 85 {*movdi_internal}
     (nil))
(insn 1819 1817 1820 131 (set (reg:DI 4 si)
        (reg:DI 0 ax [2151])) "ETAFLD2.f":398 85 {*movdi_internal}
     (nil))
(insn 1820 1819 1821 131 (set (reg:DI 5 di)
        (symbol_ref:DI ("equiv.1.4359") [flags 0x202]  <var_decl 0x7f9828263360 equiv.1>)) "ETAFLD2.f":398 85 {*movdi_internal}
     (nil))
(insn 1821 1820 1822 131 (set (reg:QI 0 ax)
        (const_int 0 [0])) "ETAFLD2.f":398 88 {*movqi_internal}
     (nil))
(call_insn 1822 1821 1823 131 (call (mem:QI (symbol_ref:DI ("netal_") [flags 0x41]  <function_decl 0x7f9828228a00 netal>) [0 netal S1 A8])
        (const_int 0 [0])) "ETAFLD2.f":398 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (nil))))))))
(insn 1823 1822 1824 131 (parallel [
            (set (reg:DI 1 dx [2152])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -272 [0xfffffffffffffef0])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":399 222 {*adddi_1}
     (nil))
(insn 1824 1823 1825 131 (parallel [
            (set (reg:DI 0 ax [2153])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -268 [0xfffffffffffffef4])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":399 222 {*adddi_1}
     (nil))
(insn 1825 1824 1826 131 (set (reg:DI 37 r8)
        (symbol_ref:DI ("equiv.2.4368") [flags 0x202]  <var_decl 0x7f9828263510 equiv.2>)) "ETAFLD2.f":399 85 {*movdi_internal}
     (nil))
(insn 1826 1825 1828 131 (set (reg:DI 2 cx)
        (const:DI (plus:DI (symbol_ref:DI ("loops_") [flags 0x202]  <var_decl 0x7f9828246c60 loops>)
                (const_int 9680 [0x25d0])))) "ETAFLD2.f":399 85 {*movdi_internal}
     (nil))
(insn 1828 1826 1829 131 (set (reg:DI 4 si)
        (reg:DI 0 ax [2153])) "ETAFLD2.f":399 85 {*movdi_internal}
     (nil))
(insn 1829 1828 1830 131 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7f982825bcf0 vrbls>)
                (const_int 9363396 [0x8edfc4])))) "ETAFLD2.f":399 85 {*movdi_internal}
     (nil))
(insn 1830 1829 1831 131 (set (reg:QI 0 ax)
        (const_int 0 [0])) "ETAFLD2.f":399 88 {*movqi_internal}
     (nil))
(call_insn 1831 1830 1832 131 (call (mem:QI (symbol_ref:DI ("netal_") [flags 0x41]  <function_decl 0x7f9828228a00 netal>) [0 netal S1 A8])
        (const_int 0 [0])) "ETAFLD2.f":399 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (nil))))))))
(insn 1832 1831 1833 131 (parallel [
            (set (reg:DI 1 dx [2154])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -272 [0xfffffffffffffef0])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":400 222 {*adddi_1}
     (nil))
(insn 1833 1832 1834 131 (parallel [
            (set (reg:DI 0 ax [2155])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -268 [0xfffffffffffffef4])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":400 222 {*adddi_1}
     (nil))
(insn 1834 1833 1835 131 (set (reg:DI 37 r8)
        (symbol_ref:DI ("q1d.4439") [flags 0x202]  <var_decl 0x7f9827e6b510 q1d>)) "ETAFLD2.f":400 85 {*movdi_internal}
     (nil))
(insn 1835 1834 1837 131 (set (reg:DI 2 cx)
        (const:DI (plus:DI (symbol_ref:DI ("loops_") [flags 0x202]  <var_decl 0x7f9828246c60 loops>)
                (const_int 9680 [0x25d0])))) "ETAFLD2.f":400 85 {*movdi_internal}
     (nil))
(insn 1837 1835 1838 131 (set (reg:DI 4 si)
        (reg:DI 0 ax [2155])) "ETAFLD2.f":400 85 {*movdi_internal}
     (nil))
(insn 1838 1837 1839 131 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7f982825bcf0 vrbls>)
                (const_int 13867308 [0xd3992c])))) "ETAFLD2.f":400 85 {*movdi_internal}
     (nil))
(insn 1839 1838 1840 131 (set (reg:QI 0 ax)
        (const_int 0 [0])) "ETAFLD2.f":400 88 {*movqi_internal}
     (nil))
(call_insn 1840 1839 1841 131 (call (mem:QI (symbol_ref:DI ("netal_") [flags 0x41]  <function_decl 0x7f9828228a00 netal>) [0 netal S1 A8])
        (const_int 0 [0])) "ETAFLD2.f":400 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (nil))))))))
(insn 1841 1840 1842 131 (parallel [
            (set (reg:DI 1 dx [2156])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -272 [0xfffffffffffffef0])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":401 222 {*adddi_1}
     (nil))
(insn 1842 1841 1843 131 (parallel [
            (set (reg:DI 0 ax [2157])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -268 [0xfffffffffffffef4])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":401 222 {*adddi_1}
     (nil))
(insn 1843 1842 1844 131 (set (reg:DI 37 r8)
        (symbol_ref:DI ("egrid3.4390") [flags 0x202]  <var_decl 0x7f9828263d80 egrid3>)) "ETAFLD2.f":401 85 {*movdi_internal}
     (nil))
(insn 1844 1843 1846 131 (set (reg:DI 2 cx)
        (const:DI (plus:DI (symbol_ref:DI ("loops_") [flags 0x202]  <var_decl 0x7f9828246c60 loops>)
                (const_int 9680 [0x25d0])))) "ETAFLD2.f":401 85 {*movdi_internal}
     (nil))
(insn 1846 1844 1847 131 (set (reg:DI 4 si)
        (reg:DI 0 ax [2157])) "ETAFLD2.f":401 85 {*movdi_internal}
     (nil))
(insn 1847 1846 1848 131 (set (reg:DI 5 di)
        (symbol_ref:DI ("iw.4421") [flags 0x202]  <var_decl 0x7f9827e68bd0 iw>)) "ETAFLD2.f":401 85 {*movdi_internal}
     (nil))
(insn 1848 1847 1849 131 (set (reg:QI 0 ax)
        (const_int 0 [0])) "ETAFLD2.f":401 88 {*movqi_internal}
     (nil))
(call_insn 1849 1848 1850 131 (call (mem:QI (symbol_ref:DI ("netal_") [flags 0x41]  <function_decl 0x7f9828228a00 netal>) [0 netal S1 A8])
        (const_int 0 [0])) "ETAFLD2.f":401 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (nil))))))))
(insn 1850 1849 1851 131 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":402 222 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 1851 1850 1852 131 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [8  S8 A64])
        (symbol_ref/f:DI ("*.LC25") [flags 0x2]  <var_decl 0x7f9827f947e0 *.LC25>)) "ETAFLD2.f":402 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 1852 1851 1853 131 (set (reg:DI 38 r9)
        (symbol_ref/f:DI ("*.LC26") [flags 0x2]  <var_decl 0x7f9827f94870 *.LC26>)) "ETAFLD2.f":402 85 {*movdi_internal}
     (nil))
(insn 1853 1852 1854 131 (set (reg:DI 37 r8)
        (symbol_ref:DI ("egrid4.4392") [flags 0x202]  <var_decl 0x7f9828263e10 egrid4>)) "ETAFLD2.f":402 85 {*movdi_internal}
     (nil))
(insn 1854 1853 1855 131 (set (reg:DI 2 cx)
        (symbol_ref:DI ("egrid3.4390") [flags 0x202]  <var_decl 0x7f9828263d80 egrid3>)) "ETAFLD2.f":402 85 {*movdi_internal}
     (nil))
(insn 1855 1854 1856 131 (set (reg:DI 1 dx)
        (symbol_ref:DI ("q1d.4439") [flags 0x202]  <var_decl 0x7f9827e6b510 q1d>)) "ETAFLD2.f":402 85 {*movdi_internal}
     (nil))
(insn 1856 1855 1857 131 (set (reg:DI 4 si)
        (symbol_ref:DI ("equiv.2.4368") [flags 0x202]  <var_decl 0x7f9828263510 equiv.2>)) "ETAFLD2.f":402 85 {*movdi_internal}
     (nil))
(insn 1857 1856 1858 131 (set (reg:DI 5 di)
        (symbol_ref:DI ("equiv.3.4378") [flags 0x202]  <var_decl 0x7f9828263750 equiv.3>)) "ETAFLD2.f":402 85 {*movdi_internal}
     (nil))
(insn 1858 1857 1859 131 (set (reg:QI 0 ax)
        (const_int 0 [0])) "ETAFLD2.f":402 88 {*movqi_internal}
     (nil))
(call_insn 1859 1858 1860 131 (call (mem:QI (symbol_ref:DI ("calrh2_") [flags 0x41]  <function_decl 0x7f9828228c00 calrh2>) [0 calrh2 S1 A8])
        (const_int 16 [0x10])) "ETAFLD2.f":402 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
(insn 1860 1859 1861 131 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":402 222 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 1861 1860 1862 131 (set (reg:DI 1 dx [2158])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [4 grid2+0 S8 A64])) "ETAFLD2.f":404 85 {*movdi_internal}
     (nil))
(insn 1862 1861 1863 131 (set (reg:DI 0 ax [2159])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "ETAFLD2.f":404 85 {*movdi_internal}
     (nil))
(insn 1863 1862 1864 131 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [11  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -832 [0xfffffffffffffcc0])) [11 jmout+0 S8 A64])) "ETAFLD2.f":404 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 1864 1863 1865 131 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [11  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -824 [0xfffffffffffffcc8])) [11 imout+0 S8 A64])) "ETAFLD2.f":404 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 1865 1864 1866 131 (set (reg:DI 38 r9)
        (reg:DI 1 dx [2158])) "ETAFLD2.f":404 85 {*movdi_internal}
     (nil))
(insn 1866 1865 1867 131 (set (reg:DI 37 r8)
        (reg:DI 0 ax [2159])) "ETAFLD2.f":404 85 {*movdi_internal}
     (nil))
(insn 1867 1866 1868 131 (set (reg:DI 2 cx)
        (symbol_ref:DI ("equiv.2.4368") [flags 0x202]  <var_decl 0x7f9828263510 equiv.2>)) "ETAFLD2.f":404 85 {*movdi_internal}
     (nil))
(insn 1868 1867 1869 131 (set (reg:DI 1 dx)
        (symbol_ref:DI ("egrid4.4392") [flags 0x202]  <var_decl 0x7f9828263e10 egrid4>)) "ETAFLD2.f":404 85 {*movdi_internal}
     (nil))
(insn 1869 1868 1870 131 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f9827f94240 *.LC3>)) "ETAFLD2.f":404 85 {*movdi_internal}
     (nil))
(insn 1870 1869 1871 131 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC28") [flags 0x2]  <var_decl 0x7f9827f94990 *.LC28>)) "ETAFLD2.f":404 85 {*movdi_internal}
     (nil))
(insn 1871 1870 1872 131 (set (reg:QI 0 ax)
        (const_int 0 [0])) "ETAFLD2.f":404 88 {*movqi_internal}
     (nil))
(call_insn 1872 1871 1873 131 (call (mem:QI (symbol_ref:DI ("e2out_") [flags 0x41]  <function_decl 0x7f9828228600 e2out>) [0 e2out S1 A8])
        (const_int 16 [0x10])) "ETAFLD2.f":404 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
(insn 1873 1872 1874 131 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":404 222 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 1874 1873 1875 131 (set (reg:DI 2 cx [2160])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -832 [0xfffffffffffffcc0])) [11 jmout+0 S8 A64])) "ETAFLD2.f":405 85 {*movdi_internal}
     (nil))
(insn 1875 1874 1876 131 (set (reg:DI 1 dx [2161])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -824 [0xfffffffffffffcc8])) [11 imout+0 S8 A64])) "ETAFLD2.f":405 85 {*movdi_internal}
     (nil))
(insn 1876 1875 1879 131 (set (reg:DI 0 ax [2162])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "ETAFLD2.f":405 85 {*movdi_internal}
     (nil))
(insn 1879 1876 1880 131 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC29") [flags 0x2]  <var_decl 0x7f9827f94a20 *.LC29>)) "ETAFLD2.f":405 85 {*movdi_internal}
     (nil))
(insn 1880 1879 1881 131 (set (reg:DI 5 di)
        (reg:DI 0 ax [2162])) "ETAFLD2.f":405 85 {*movdi_internal}
     (nil))
(insn 1881 1880 1882 131 (set (reg:QI 0 ax)
        (const_int 0 [0])) "ETAFLD2.f":405 88 {*movqi_internal}
     (nil))
(call_insn 1882 1881 1883 131 (call (mem:QI (symbol_ref:DI ("sclfld_") [flags 0x41]  <function_decl 0x7f9828228d00 sclfld>) [0 sclfld S1 A8])
        (const_int 0 [0])) "ETAFLD2.f":405 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (nil)))))))
(insn 1883 1882 1884 131 (set (reg:DI 2 cx [2163])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -832 [0xfffffffffffffcc0])) [11 jmout+0 S8 A64])) "ETAFLD2.f":406 85 {*movdi_internal}
     (nil))
(insn 1884 1883 1885 131 (set (reg:DI 1 dx [2164])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -824 [0xfffffffffffffcc8])) [11 imout+0 S8 A64])) "ETAFLD2.f":406 85 {*movdi_internal}
     (nil))
(insn 1885 1884 1886 131 (set (reg:DI 0 ax [2165])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "ETAFLD2.f":406 85 {*movdi_internal}
     (nil))
(insn 1886 1885 1887 131 (set (reg:DI 37 r8)
        (reg:DI 2 cx [2163])) "ETAFLD2.f":406 85 {*movdi_internal}
     (nil))
(insn 1887 1886 1888 131 (set (reg:DI 2 cx)
        (reg:DI 1 dx [2164])) "ETAFLD2.f":406 85 {*movdi_internal}
     (nil))
(insn 1888 1887 1889 131 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC29") [flags 0x2]  <var_decl 0x7f9827f94a20 *.LC29>)) "ETAFLD2.f":406 85 {*movdi_internal}
     (nil))
(insn 1889 1888 1890 131 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC30") [flags 0x2]  <var_decl 0x7f9827f94ab0 *.LC30>)) "ETAFLD2.f":406 85 {*movdi_internal}
     (nil))
(insn 1890 1889 1891 131 (set (reg:DI 5 di)
        (reg:DI 0 ax [2165])) "ETAFLD2.f":406 85 {*movdi_internal}
     (nil))
(insn 1891 1890 1892 131 (set (reg:QI 0 ax)
        (const_int 0 [0])) "ETAFLD2.f":406 88 {*movqi_internal}
     (nil))
(call_insn 1892 1891 1893 131 (call (mem:QI (symbol_ref:DI ("bound_") [flags 0x41]  <function_decl 0x7f9828228e00 bound>) [0 bound S1 A8])
        (const_int 0 [0])) "ETAFLD2.f":406 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (nil))))))))
(insn 1893 1892 1894 131 (set (reg/f:DI 1 dx [2166])
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                (const_int 55216 [0xd7b0])))) "ETAFLD2.f":407 85 {*movdi_internal}
     (nil))
(insn 1894 1893 1895 131 (set (reg:DI 0 ax [2167])
        (const_int 0 [0])) "ETAFLD2.f":407 85 {*movdi_internal}
     (nil))
(insn 1895 1894 5859 131 (set (reg:DI 2 cx [2168])
        (const_int 12 [0xc])) "ETAFLD2.f":407 85 {*movdi_internal}
     (nil))
(insn 5859 1895 1896 131 (set (reg/f:DI 5 di [2166])
        (reg/f:DI 1 dx [2166])) "ETAFLD2.f":407 85 {*movdi_internal}
     (nil))
(insn 1896 5859 5860 131 (parallel [
            (set (reg:DI 2 cx [2168])
                (const_int 0 [0]))
            (set (reg/f:DI 5 di [2166])
                (plus:DI (ashift:DI (reg:DI 2 cx [2168])
                        (const_int 3 [0x3]))
                    (reg/f:DI 5 di [2166])))
            (set (mem/c:BLK (reg/f:DI 5 di [2166]) [1 rqstfld.id+0 S96 A128])
                (const_int 0 [0]))
            (use (reg:DI 0 ax [2167]))
            (use (reg:DI 2 cx [2168]))
        ]) "ETAFLD2.f":407 984 {*rep_stosdi_rex64}
     (nil))
(insn 5860 1896 1897 131 (set (reg/f:DI 1 dx [2166])
        (reg/f:DI 5 di [2166])) "ETAFLD2.f":407 85 {*movdi_internal}
     (nil))
(insn 1897 5860 1898 131 (set (mem/c:SI (reg/f:DI 1 dx [2166]) [1 rqstfld.id+96 S4 A128])
        (reg:SI 0 ax [2167])) "ETAFLD2.f":407 86 {*movsi_internal}
     (nil))
(insn 1898 1897 1899 131 (parallel [
            (set (reg/f:DI 1 dx [2166])
                (plus:DI (reg/f:DI 1 dx [2166])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":407 222 {*adddi_1}
     (nil))
(insn 1899 1898 1900 131 (set (reg:SI 0 ax [orig:650 l.76_564 ] [650])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":408 86 {*movsi_internal}
     (nil))
(insn 1900 1899 1901 131 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -276 [0xfffffffffffffeec])) [1 lyr+0 S4 A32])
        (reg:SI 0 ax [orig:650 l.76_564 ] [650])) "ETAFLD2.f":408 86 {*movsi_internal}
     (nil))
(insn 1901 1900 1902 131 (set (reg:SI 0 ax [orig:651 itype.77_565 ] [651])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -268 [0xfffffffffffffef4])) [1 itype+0 S4 A32])) "ETAFLD2.f":409 86 {*movsi_internal}
     (nil))
(insn 1902 1901 1903 131 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [orig:651 itype.77_565 ] [651])
            (const_int 1 [0x1]))) "ETAFLD2.f":409 11 {*cmpsi_1}
     (nil))
(jump_insn 1903 1902 1904 131 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 1906)
            (pc))) "ETAFLD2.f":409 682 {*jcc}
     (nil)
 -> 1906)
;;  succ:       132 (FALLTHRU)
;;              133
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 132, loop depth 0, maybe hot
;;  prev block 131, next block 133, flags: (RTL, MODIFIED)
;;  pred:       131 (FALLTHRU)
;; bb 132 artificial_defs: { }
;; bb 132 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 1904 1903 1905 132 [bb 132] NOTE_INSN_BASIC_BLOCK)
(insn 1905 1904 1906 132 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 55248 [0xd7d0]))) [1 rqstfld.id+32 S4 A128])
        (const_int 109 [0x6d])) "ETAFLD2.f":409 86 {*movsi_internal}
     (nil))
;;  succ:       133 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 133, loop depth 0, maybe hot
;;  prev block 132, next block 134, flags: (RTL, MODIFIED)
;;  pred:       131
;;              132 (FALLTHRU)
;; bb 133 artificial_defs: { }
;; bb 133 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 2169 2170 2171 2172
(code_label 1906 1905 1907 133 69 (nil) [1 uses])
(note 1907 1906 1908 133 [bb 133] NOTE_INSN_BASIC_BLOCK)
(insn 1908 1907 1909 133 (set (reg:DI 4 si [2169])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -832 [0xfffffffffffffcc0])) [11 jmout+0 S8 A64])) "ETAFLD2.f":410 85 {*movdi_internal}
     (nil))
(insn 1909 1908 1910 133 (set (reg:DI 2 cx [2170])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -824 [0xfffffffffffffcc8])) [11 imout+0 S8 A64])) "ETAFLD2.f":410 85 {*movdi_internal}
     (nil))
(insn 1910 1909 1911 133 (set (reg:DI 1 dx [2171])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "ETAFLD2.f":410 85 {*movdi_internal}
     (nil))
(insn 1911 1910 1912 133 (parallel [
            (set (reg:DI 0 ax [2172])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -276 [0xfffffffffffffeec])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":410 222 {*adddi_1}
     (nil))
(insn 1912 1911 1913 133 (set (reg:DI 38 r9)
        (reg:DI 4 si [2169])) "ETAFLD2.f":410 85 {*movdi_internal}
     (nil))
(insn 1913 1912 1914 133 (set (reg:DI 37 r8)
        (reg:DI 2 cx [2170])) "ETAFLD2.f":410 85 {*movdi_internal}
     (nil))
(insn 1914 1913 1915 133 (set (reg:DI 2 cx)
        (reg:DI 1 dx [2171])) "ETAFLD2.f":410 85 {*movdi_internal}
     (nil))
(insn 1915 1914 1916 133 (set (reg:DI 1 dx)
        (reg:DI 0 ax [2172])) "ETAFLD2.f":410 85 {*movdi_internal}
     (nil))
(insn 1916 1915 1917 133 (set (reg:DI 4 si)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                (const_int 36 [0x24])))) "ETAFLD2.f":410 85 {*movdi_internal}
     (nil))
(insn 1917 1916 1918 133 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                (const_int 4 [0x4])))) "ETAFLD2.f":410 85 {*movdi_internal}
     (nil))
(insn 1918 1917 1919 133 (set (reg:QI 0 ax)
        (const_int 0 [0])) "ETAFLD2.f":410 88 {*movqi_internal}
     (nil))
(call_insn 1919 1918 1920 133 (call (mem:QI (symbol_ref:DI ("output_") [flags 0x41]  <function_decl 0x7f9828228700 output>) [0 output S1 A8])
        (const_int 0 [0])) "ETAFLD2.f":410 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
;;  succ:       134 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 134, loop depth 0, maybe hot
;;  prev block 133, next block 135, flags: (RTL, MODIFIED)
;;  pred:       129
;;              133 (FALLTHRU)
;;              130
;; bb 134 artificial_defs: { }
;; bb 134 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 652
(code_label 1920 1919 1921 134 68 (nil) [2 uses])
(note 1921 1920 1922 134 [bb 134] NOTE_INSN_BASIC_BLOCK)
(insn 1922 1921 1923 134 (set (reg:SI 0 ax [orig:652 _566 ] [652])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 28 [0x1c]))) [1 rqstfld.iget+12 S4 A32])) "ETAFLD2.f":415 86 {*movsi_internal}
     (nil))
(insn 1923 1922 1924 134 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:652 _566 ] [652])
            (const_int 0 [0]))) "ETAFLD2.f":415 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1924 1923 1925 134 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 2033)
            (pc))) "ETAFLD2.f":415 682 {*jcc}
     (nil)
 -> 2033)
;;  succ:       135 (FALLTHRU)
;;              139
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 135, loop depth 0, maybe hot
;;  prev block 134, next block 136, flags: (RTL, MODIFIED)
;;  pred:       134 (FALLTHRU)
;; bb 135 artificial_defs: { }
;; bb 135 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 653 654 655 656 657 658 659 660 2173 2174 2175 2176
(note 1925 1924 1926 135 [bb 135] NOTE_INSN_BASIC_BLOCK)
(insn 1926 1925 1927 135 (set (reg:SI 0 ax [orig:653 _567 ] [653])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 28 [0x1c]))) [1 rqstfld.iget+12 S4 A32])) "ETAFLD2.f":416 86 {*movsi_internal}
     (nil))
(insn 1927 1926 1928 135 (set (reg:DI 1 dx [orig:654 _568 ] [654])
        (sign_extend:DI (reg:SI 0 ax [orig:653 _567 ] [653]))) "ETAFLD2.f":416 149 {*extendsidi2_rex64}
     (nil))
(insn 1928 1927 1929 135 (set (reg:DI 0 ax [2173])
        (reg:DI 1 dx [orig:654 _568 ] [654])) "ETAFLD2.f":416 85 {*movdi_internal}
     (nil))
(insn 1929 1928 1931 135 (parallel [
            (set (reg:DI 0 ax [2174])
                (ashift:DI (reg:DI 0 ax [2173])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":416 551 {*ashldi3_1}
     (nil))
(insn 1931 1929 1932 135 (parallel [
            (set (reg:DI 0 ax [2173])
                (minus:DI (reg:DI 0 ax [2173])
                    (reg:DI 1 dx [orig:654 _568 ] [654])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":416 278 {*subdi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:654 _568 ] [654])
            (const_int 15 [0xf]))
        (nil)))
(insn 1932 1931 1934 135 (parallel [
            (set (reg:DI 0 ax [2175])
                (ashift:DI (reg:DI 0 ax [2173])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":416 551 {*ashldi3_1}
     (nil))
(insn 1934 1932 1935 135 (set (reg:DI 1 dx [orig:655 _569 ] [655])
        (reg:DI 0 ax [2173])) "ETAFLD2.f":416 85 {*movdi_internal}
     (nil))
(insn 1935 1934 1936 135 (set (reg:SI 0 ax [orig:656 l.78_570 ] [656])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":416 86 {*movsi_internal}
     (nil))
(insn 1936 1935 1937 135 (set (reg:DI 0 ax [orig:657 _571 ] [657])
        (sign_extend:DI (reg:SI 0 ax [orig:656 l.78_570 ] [656]))) "ETAFLD2.f":416 149 {*extendsidi2_rex64}
     (nil))
(insn 1937 1936 1938 135 (parallel [
            (set (reg:DI 0 ax [orig:658 _572 ] [658])
                (plus:DI (reg:DI 0 ax [orig:657 _571 ] [657])
                    (reg:DI 1 dx [orig:655 _569 ] [655])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":416 222 {*adddi_1}
     (nil))
(insn 1938 1937 1939 135 (parallel [
            (set (reg:DI 0 ax [orig:659 _573 ] [659])
                (plus:DI (reg:DI 0 ax [orig:658 _572 ] [658])
                    (const_int -61 [0xffffffffffffffc3])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":416 222 {*adddi_1}
     (nil))
(insn 1939 1938 1940 135 (parallel [
            (set (reg:DI 0 ax [2176])
                (plus:DI (reg:DI 0 ax [orig:659 _573 ] [659])
                    (const_int 1404 [0x57c])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":416 222 {*adddi_1}
     (nil))
(insn 1940 1939 1941 135 (set (reg:SI 0 ax [orig:660 _574 ] [660])
        (mem:SI (plus:DI (mult:DI (reg:DI 0 ax [2176])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)) [1 rqstfld.lvls S4 A32])) "ETAFLD2.f":416 86 {*movsi_internal}
     (nil))
(insn 1941 1940 1942 135 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:660 _574 ] [660])
            (const_int 0 [0]))) "ETAFLD2.f":416 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1942 1941 1943 135 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 2033)
            (pc))) "ETAFLD2.f":416 682 {*jcc}
     (nil)
 -> 2033)
;;  succ:       136 (FALLTHRU)
;;              139
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 136, loop depth 0, maybe hot
;;  prev block 135, next block 137, flags: (RTL, MODIFIED)
;;  pred:       135 (FALLTHRU)
;; bb 136 artificial_defs: { }
;; bb 136 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 661 662 663 664 665 666 667 668 669 670 2177 2178 2179 2180 2181 2182 2183 2184 2185 2186 2187 2188 2189 2190 2191
(note 1943 1942 1944 136 [bb 136] NOTE_INSN_BASIC_BLOCK)
(insn 1944 1943 1945 136 (set (reg:SI 0 ax [orig:661 _575 ] [661])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 28 [0x1c]))) [1 rqstfld.iget+12 S4 A32])) "ETAFLD2.f":417 86 {*movsi_internal}
     (nil))
(insn 1945 1944 1946 136 (set (reg:DI 1 dx [orig:662 _576 ] [662])
        (sign_extend:DI (reg:SI 0 ax [orig:661 _575 ] [661]))) "ETAFLD2.f":417 149 {*extendsidi2_rex64}
     (nil))
(insn 1946 1945 1947 136 (set (reg:DI 0 ax [2177])
        (reg:DI 1 dx [orig:662 _576 ] [662])) "ETAFLD2.f":417 85 {*movdi_internal}
     (nil))
(insn 1947 1946 1949 136 (parallel [
            (set (reg:DI 0 ax [2178])
                (ashift:DI (reg:DI 0 ax [2177])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":417 551 {*ashldi3_1}
     (nil))
(insn 1949 1947 1950 136 (parallel [
            (set (reg:DI 0 ax [2177])
                (minus:DI (reg:DI 0 ax [2177])
                    (reg:DI 1 dx [orig:662 _576 ] [662])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":417 278 {*subdi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:662 _576 ] [662])
            (const_int 15 [0xf]))
        (nil)))
(insn 1950 1949 1952 136 (parallel [
            (set (reg:DI 0 ax [2179])
                (ashift:DI (reg:DI 0 ax [2177])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":417 551 {*ashldi3_1}
     (nil))
(insn 1952 1950 1953 136 (set (reg:DI 1 dx [orig:663 _577 ] [663])
        (reg:DI 0 ax [2177])) "ETAFLD2.f":417 85 {*movdi_internal}
     (nil))
(insn 1953 1952 1954 136 (set (reg:SI 0 ax [orig:664 l.79_578 ] [664])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":417 86 {*movsi_internal}
     (nil))
(insn 1954 1953 1955 136 (set (reg:DI 0 ax [orig:665 _579 ] [665])
        (sign_extend:DI (reg:SI 0 ax [orig:664 l.79_578 ] [664]))) "ETAFLD2.f":417 149 {*extendsidi2_rex64}
     (nil))
(insn 1955 1954 1956 136 (parallel [
            (set (reg:DI 0 ax [orig:666 _580 ] [666])
                (plus:DI (reg:DI 0 ax [orig:665 _579 ] [665])
                    (reg:DI 1 dx [orig:663 _577 ] [663])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":417 222 {*adddi_1}
     (nil))
(insn 1956 1955 1957 136 (parallel [
            (set (reg:DI 0 ax [orig:667 _581 ] [667])
                (plus:DI (reg:DI 0 ax [orig:666 _580 ] [666])
                    (const_int -61 [0xffffffffffffffc3])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":417 222 {*adddi_1}
     (nil))
(insn 1957 1956 1958 136 (parallel [
            (set (reg:DI 0 ax [2180])
                (plus:DI (reg:DI 0 ax [orig:667 _581 ] [667])
                    (const_int 1404 [0x57c])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":417 222 {*adddi_1}
     (nil))
(insn 1958 1957 1959 136 (set (reg:SI 0 ax [orig:668 _582 ] [668])
        (mem:SI (plus:DI (mult:DI (reg:DI 0 ax [2180])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)) [1 rqstfld.lvls S4 A32])) "ETAFLD2.f":417 86 {*movsi_internal}
     (nil))
(insn 1959 1958 1960 136 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -268 [0xfffffffffffffef4])) [1 itype+0 S4 A32])
        (reg:SI 0 ax [orig:668 _582 ] [668])) "ETAFLD2.f":417 86 {*movsi_internal}
     (nil))
(insn 1960 1959 1961 136 (parallel [
            (set (reg:DI 1 dx [2181])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -272 [0xfffffffffffffef0])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":418 222 {*adddi_1}
     (nil))
(insn 1961 1960 1962 136 (parallel [
            (set (reg:DI 0 ax [2182])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -268 [0xfffffffffffffef4])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":418 222 {*adddi_1}
     (nil))
(insn 1962 1961 1963 136 (set (reg:DI 37 r8)
        (symbol_ref:DI ("equiv.3.4378") [flags 0x202]  <var_decl 0x7f9828263750 equiv.3>)) "ETAFLD2.f":418 85 {*movdi_internal}
     (nil))
(insn 1963 1962 1965 136 (set (reg:DI 2 cx)
        (const:DI (plus:DI (symbol_ref:DI ("loops_") [flags 0x202]  <var_decl 0x7f9828246c60 loops>)
                (const_int 9680 [0x25d0])))) "ETAFLD2.f":418 85 {*movdi_internal}
     (nil))
(insn 1965 1963 1966 136 (set (reg:DI 4 si)
        (reg:DI 0 ax [2182])) "ETAFLD2.f":418 85 {*movdi_internal}
     (nil))
(insn 1966 1965 1967 136 (set (reg:DI 5 di)
        (symbol_ref:DI ("equiv.1.4359") [flags 0x202]  <var_decl 0x7f9828263360 equiv.1>)) "ETAFLD2.f":418 85 {*movdi_internal}
     (nil))
(insn 1967 1966 1968 136 (set (reg:QI 0 ax)
        (const_int 0 [0])) "ETAFLD2.f":418 88 {*movqi_internal}
     (nil))
(call_insn 1968 1967 1969 136 (call (mem:QI (symbol_ref:DI ("netal_") [flags 0x41]  <function_decl 0x7f9828228a00 netal>) [0 netal S1 A8])
        (const_int 0 [0])) "ETAFLD2.f":418 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (nil))))))))
(insn 1969 1968 1970 136 (parallel [
            (set (reg:DI 1 dx [2183])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -272 [0xfffffffffffffef0])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":419 222 {*adddi_1}
     (nil))
(insn 1970 1969 1971 136 (parallel [
            (set (reg:DI 0 ax [2184])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -268 [0xfffffffffffffef4])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":419 222 {*adddi_1}
     (nil))
(insn 1971 1970 1972 136 (set (reg:DI 37 r8)
        (symbol_ref:DI ("q1d.4439") [flags 0x202]  <var_decl 0x7f9827e6b510 q1d>)) "ETAFLD2.f":419 85 {*movdi_internal}
     (nil))
(insn 1972 1971 1974 136 (set (reg:DI 2 cx)
        (const:DI (plus:DI (symbol_ref:DI ("loops_") [flags 0x202]  <var_decl 0x7f9828246c60 loops>)
                (const_int 9680 [0x25d0])))) "ETAFLD2.f":419 85 {*movdi_internal}
     (nil))
(insn 1974 1972 1975 136 (set (reg:DI 4 si)
        (reg:DI 0 ax [2184])) "ETAFLD2.f":419 85 {*movdi_internal}
     (nil))
(insn 1975 1974 1976 136 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7f982825bcf0 vrbls>)
                (const_int 13867308 [0xd3992c])))) "ETAFLD2.f":419 85 {*movdi_internal}
     (nil))
(insn 1976 1975 1977 136 (set (reg:QI 0 ax)
        (const_int 0 [0])) "ETAFLD2.f":419 88 {*movqi_internal}
     (nil))
(call_insn 1977 1976 1978 136 (call (mem:QI (symbol_ref:DI ("netal_") [flags 0x41]  <function_decl 0x7f9828228a00 netal>) [0 netal S1 A8])
        (const_int 0 [0])) "ETAFLD2.f":419 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (nil))))))))
(insn 1978 1977 1979 136 (parallel [
            (set (reg:DI 1 dx [2185])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -272 [0xfffffffffffffef0])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":420 222 {*adddi_1}
     (nil))
(insn 1979 1978 1980 136 (parallel [
            (set (reg:DI 0 ax [2186])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -268 [0xfffffffffffffef4])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":420 222 {*adddi_1}
     (nil))
(insn 1980 1979 1981 136 (set (reg:DI 37 r8)
        (symbol_ref:DI ("equiv.2.4368") [flags 0x202]  <var_decl 0x7f9828263510 equiv.2>)) "ETAFLD2.f":420 85 {*movdi_internal}
     (nil))
(insn 1981 1980 1983 136 (set (reg:DI 2 cx)
        (const:DI (plus:DI (symbol_ref:DI ("loops_") [flags 0x202]  <var_decl 0x7f9828246c60 loops>)
                (const_int 9680 [0x25d0])))) "ETAFLD2.f":420 85 {*movdi_internal}
     (nil))
(insn 1983 1981 1984 136 (set (reg:DI 4 si)
        (reg:DI 0 ax [2186])) "ETAFLD2.f":420 85 {*movdi_internal}
     (nil))
(insn 1984 1983 1985 136 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7f982825bcf0 vrbls>)
                (const_int 9363396 [0x8edfc4])))) "ETAFLD2.f":420 85 {*movdi_internal}
     (nil))
(insn 1985 1984 1986 136 (set (reg:QI 0 ax)
        (const_int 0 [0])) "ETAFLD2.f":420 88 {*movqi_internal}
     (nil))
(call_insn 1986 1985 1987 136 (call (mem:QI (symbol_ref:DI ("netal_") [flags 0x41]  <function_decl 0x7f9828228a00 netal>) [0 netal S1 A8])
        (const_int 0 [0])) "ETAFLD2.f":420 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (nil))))))))
(insn 1987 1986 1988 136 (set (reg:DI 2 cx)
        (symbol_ref:DI ("equiv.2.4368") [flags 0x202]  <var_decl 0x7f9828263510 equiv.2>)) "ETAFLD2.f":421 85 {*movdi_internal}
     (nil))
(insn 1988 1987 1989 136 (set (reg:DI 1 dx)
        (symbol_ref:DI ("egrid3.4390") [flags 0x202]  <var_decl 0x7f9828263d80 egrid3>)) "ETAFLD2.f":421 85 {*movdi_internal}
     (nil))
(insn 1989 1988 1990 136 (set (reg:DI 4 si)
        (symbol_ref:DI ("q1d.4439") [flags 0x202]  <var_decl 0x7f9827e6b510 q1d>)) "ETAFLD2.f":421 85 {*movdi_internal}
     (nil))
(insn 1990 1989 1991 136 (set (reg:DI 5 di)
        (symbol_ref:DI ("equiv.3.4378") [flags 0x202]  <var_decl 0x7f9828263750 equiv.3>)) "ETAFLD2.f":421 85 {*movdi_internal}
     (nil))
(insn 1991 1990 1992 136 (set (reg:QI 0 ax)
        (const_int 0 [0])) "ETAFLD2.f":421 88 {*movqi_internal}
     (nil))
(call_insn 1992 1991 1993 136 (call (mem:QI (symbol_ref:DI ("caldwp2_") [flags 0x41]  <function_decl 0x7f9828228f00 caldwp2>) [0 caldwp2 S1 A8])
        (const_int 0 [0])) "ETAFLD2.f":421 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (nil)))))))
(insn 1993 1992 1994 136 (set (reg:DI 1 dx [2187])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [4 grid2+0 S8 A64])) "ETAFLD2.f":422 85 {*movdi_internal}
     (nil))
(insn 1994 1993 1995 136 (set (reg:DI 0 ax [2188])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "ETAFLD2.f":422 85 {*movdi_internal}
     (nil))
(insn 1995 1994 1996 136 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [11  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -832 [0xfffffffffffffcc0])) [11 jmout+0 S8 A64])) "ETAFLD2.f":422 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 1996 1995 1997 136 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [11  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -824 [0xfffffffffffffcc8])) [11 imout+0 S8 A64])) "ETAFLD2.f":422 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 1997 1996 1998 136 (set (reg:DI 38 r9)
        (reg:DI 1 dx [2187])) "ETAFLD2.f":422 85 {*movdi_internal}
     (nil))
(insn 1998 1997 1999 136 (set (reg:DI 37 r8)
        (reg:DI 0 ax [2188])) "ETAFLD2.f":422 85 {*movdi_internal}
     (nil))
(insn 1999 1998 2000 136 (set (reg:DI 2 cx)
        (symbol_ref:DI ("equiv.2.4368") [flags 0x202]  <var_decl 0x7f9828263510 equiv.2>)) "ETAFLD2.f":422 85 {*movdi_internal}
     (nil))
(insn 2000 1999 2001 136 (set (reg:DI 1 dx)
        (symbol_ref:DI ("egrid3.4390") [flags 0x202]  <var_decl 0x7f9828263d80 egrid3>)) "ETAFLD2.f":422 85 {*movdi_internal}
     (nil))
(insn 2001 2000 2002 136 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f9827f94240 *.LC3>)) "ETAFLD2.f":422 85 {*movdi_internal}
     (nil))
(insn 2002 2001 2003 136 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC31") [flags 0x2]  <var_decl 0x7f9827f94b40 *.LC31>)) "ETAFLD2.f":422 85 {*movdi_internal}
     (nil))
(insn 2003 2002 2004 136 (set (reg:QI 0 ax)
        (const_int 0 [0])) "ETAFLD2.f":422 88 {*movqi_internal}
     (nil))
(call_insn 2004 2003 2005 136 (call (mem:QI (symbol_ref:DI ("e2out_") [flags 0x41]  <function_decl 0x7f9828228600 e2out>) [0 e2out S1 A8])
        (const_int 16 [0x10])) "ETAFLD2.f":422 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
(insn 2005 2004 2006 136 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":422 222 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 2006 2005 2007 136 (set (reg/f:DI 1 dx [2189])
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                (const_int 55216 [0xd7b0])))) "ETAFLD2.f":423 85 {*movdi_internal}
     (nil))
(insn 2007 2006 2008 136 (set (reg:DI 0 ax [2190])
        (const_int 0 [0])) "ETAFLD2.f":423 85 {*movdi_internal}
     (nil))
(insn 2008 2007 5861 136 (set (reg:DI 2 cx [2191])
        (const_int 12 [0xc])) "ETAFLD2.f":423 85 {*movdi_internal}
     (nil))
(insn 5861 2008 2009 136 (set (reg/f:DI 5 di [2189])
        (reg/f:DI 1 dx [2189])) "ETAFLD2.f":423 85 {*movdi_internal}
     (nil))
(insn 2009 5861 5862 136 (parallel [
            (set (reg:DI 2 cx [2191])
                (const_int 0 [0]))
            (set (reg/f:DI 5 di [2189])
                (plus:DI (ashift:DI (reg:DI 2 cx [2191])
                        (const_int 3 [0x3]))
                    (reg/f:DI 5 di [2189])))
            (set (mem/c:BLK (reg/f:DI 5 di [2189]) [1 rqstfld.id+0 S96 A128])
                (const_int 0 [0]))
            (use (reg:DI 0 ax [2190]))
            (use (reg:DI 2 cx [2191]))
        ]) "ETAFLD2.f":423 984 {*rep_stosdi_rex64}
     (nil))
(insn 5862 2009 2010 136 (set (reg/f:DI 1 dx [2189])
        (reg/f:DI 5 di [2189])) "ETAFLD2.f":423 85 {*movdi_internal}
     (nil))
(insn 2010 5862 2011 136 (set (mem/c:SI (reg/f:DI 1 dx [2189]) [1 rqstfld.id+96 S4 A128])
        (reg:SI 0 ax [2190])) "ETAFLD2.f":423 86 {*movsi_internal}
     (nil))
(insn 2011 2010 2012 136 (parallel [
            (set (reg/f:DI 1 dx [2189])
                (plus:DI (reg/f:DI 1 dx [2189])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":423 222 {*adddi_1}
     (nil))
(insn 2012 2011 2013 136 (set (reg:SI 0 ax [orig:669 l.80_583 ] [669])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":424 86 {*movsi_internal}
     (nil))
(insn 2013 2012 2014 136 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -276 [0xfffffffffffffeec])) [1 lyr+0 S4 A32])
        (reg:SI 0 ax [orig:669 l.80_583 ] [669])) "ETAFLD2.f":424 86 {*movsi_internal}
     (nil))
(insn 2014 2013 2015 136 (set (reg:SI 0 ax [orig:670 itype.81_584 ] [670])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -268 [0xfffffffffffffef4])) [1 itype+0 S4 A32])) "ETAFLD2.f":425 86 {*movsi_internal}
     (nil))
(insn 2015 2014 2016 136 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [orig:670 itype.81_584 ] [670])
            (const_int 1 [0x1]))) "ETAFLD2.f":425 11 {*cmpsi_1}
     (nil))
(jump_insn 2016 2015 2017 136 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 2019)
            (pc))) "ETAFLD2.f":425 682 {*jcc}
     (nil)
 -> 2019)
;;  succ:       137 (FALLTHRU)
;;              138
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 137, loop depth 0, maybe hot
;;  prev block 136, next block 138, flags: (RTL, MODIFIED)
;;  pred:       136 (FALLTHRU)
;; bb 137 artificial_defs: { }
;; bb 137 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 2017 2016 2018 137 [bb 137] NOTE_INSN_BASIC_BLOCK)
(insn 2018 2017 2019 137 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 55248 [0xd7d0]))) [1 rqstfld.id+32 S4 A128])
        (const_int 109 [0x6d])) "ETAFLD2.f":425 86 {*movsi_internal}
     (nil))
;;  succ:       138 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 138, loop depth 0, maybe hot
;;  prev block 137, next block 139, flags: (RTL, MODIFIED)
;;  pred:       136
;;              137 (FALLTHRU)
;; bb 138 artificial_defs: { }
;; bb 138 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 2192 2193 2194 2195
(code_label 2019 2018 2020 138 71 (nil) [1 uses])
(note 2020 2019 2021 138 [bb 138] NOTE_INSN_BASIC_BLOCK)
(insn 2021 2020 2022 138 (set (reg:DI 4 si [2192])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -832 [0xfffffffffffffcc0])) [11 jmout+0 S8 A64])) "ETAFLD2.f":426 85 {*movdi_internal}
     (nil))
(insn 2022 2021 2023 138 (set (reg:DI 2 cx [2193])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -824 [0xfffffffffffffcc8])) [11 imout+0 S8 A64])) "ETAFLD2.f":426 85 {*movdi_internal}
     (nil))
(insn 2023 2022 2024 138 (set (reg:DI 1 dx [2194])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "ETAFLD2.f":426 85 {*movdi_internal}
     (nil))
(insn 2024 2023 2025 138 (parallel [
            (set (reg:DI 0 ax [2195])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -276 [0xfffffffffffffeec])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":426 222 {*adddi_1}
     (nil))
(insn 2025 2024 2026 138 (set (reg:DI 38 r9)
        (reg:DI 4 si [2192])) "ETAFLD2.f":426 85 {*movdi_internal}
     (nil))
(insn 2026 2025 2027 138 (set (reg:DI 37 r8)
        (reg:DI 2 cx [2193])) "ETAFLD2.f":426 85 {*movdi_internal}
     (nil))
(insn 2027 2026 2028 138 (set (reg:DI 2 cx)
        (reg:DI 1 dx [2194])) "ETAFLD2.f":426 85 {*movdi_internal}
     (nil))
(insn 2028 2027 2029 138 (set (reg:DI 1 dx)
        (reg:DI 0 ax [2195])) "ETAFLD2.f":426 85 {*movdi_internal}
     (nil))
(insn 2029 2028 2030 138 (set (reg:DI 4 si)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                (const_int 28 [0x1c])))) "ETAFLD2.f":426 85 {*movdi_internal}
     (nil))
(insn 2030 2029 2031 138 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                (const_int 4 [0x4])))) "ETAFLD2.f":426 85 {*movdi_internal}
     (nil))
(insn 2031 2030 2032 138 (set (reg:QI 0 ax)
        (const_int 0 [0])) "ETAFLD2.f":426 88 {*movqi_internal}
     (nil))
(call_insn 2032 2031 2033 138 (call (mem:QI (symbol_ref:DI ("output_") [flags 0x41]  <function_decl 0x7f9828228700 output>) [0 output S1 A8])
        (const_int 0 [0])) "ETAFLD2.f":426 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
;;  succ:       139 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 139, loop depth 0, maybe hot
;;  prev block 138, next block 140, flags: (RTL, MODIFIED)
;;  pred:       134
;;              138 (FALLTHRU)
;;              135
;; bb 139 artificial_defs: { }
;; bb 139 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 671
(code_label 2033 2032 2034 139 70 (nil) [2 uses])
(note 2034 2033 2035 139 [bb 139] NOTE_INSN_BASIC_BLOCK)
(insn 2035 2034 2036 139 (set (reg:SI 0 ax [orig:671 _585 ] [671])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 32 [0x20]))) [1 rqstfld.iget+16 S4 A128])) "ETAFLD2.f":431 86 {*movsi_internal}
     (nil))
(insn 2036 2035 2037 139 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:671 _585 ] [671])
            (const_int 0 [0]))) "ETAFLD2.f":431 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 2037 2036 2038 139 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 2132)
            (pc))) "ETAFLD2.f":431 682 {*jcc}
     (nil)
 -> 2132)
;;  succ:       140 (FALLTHRU)
;;              144
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 140, loop depth 0, maybe hot
;;  prev block 139, next block 141, flags: (RTL, MODIFIED)
;;  pred:       139 (FALLTHRU)
;; bb 140 artificial_defs: { }
;; bb 140 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 672 673 674 675 676 677 678 679 2196 2197 2198 2199
(note 2038 2037 2039 140 [bb 140] NOTE_INSN_BASIC_BLOCK)
(insn 2039 2038 2040 140 (set (reg:SI 0 ax [orig:672 _586 ] [672])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 32 [0x20]))) [1 rqstfld.iget+16 S4 A128])) "ETAFLD2.f":432 86 {*movsi_internal}
     (nil))
(insn 2040 2039 2041 140 (set (reg:DI 1 dx [orig:673 _587 ] [673])
        (sign_extend:DI (reg:SI 0 ax [orig:672 _586 ] [672]))) "ETAFLD2.f":432 149 {*extendsidi2_rex64}
     (nil))
(insn 2041 2040 2042 140 (set (reg:DI 0 ax [2196])
        (reg:DI 1 dx [orig:673 _587 ] [673])) "ETAFLD2.f":432 85 {*movdi_internal}
     (nil))
(insn 2042 2041 2044 140 (parallel [
            (set (reg:DI 0 ax [2197])
                (ashift:DI (reg:DI 0 ax [2196])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":432 551 {*ashldi3_1}
     (nil))
(insn 2044 2042 2045 140 (parallel [
            (set (reg:DI 0 ax [2196])
                (minus:DI (reg:DI 0 ax [2196])
                    (reg:DI 1 dx [orig:673 _587 ] [673])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":432 278 {*subdi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:673 _587 ] [673])
            (const_int 15 [0xf]))
        (nil)))
(insn 2045 2044 2047 140 (parallel [
            (set (reg:DI 0 ax [2198])
                (ashift:DI (reg:DI 0 ax [2196])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":432 551 {*ashldi3_1}
     (nil))
(insn 2047 2045 2048 140 (set (reg:DI 1 dx [orig:674 _588 ] [674])
        (reg:DI 0 ax [2196])) "ETAFLD2.f":432 85 {*movdi_internal}
     (nil))
(insn 2048 2047 2049 140 (set (reg:SI 0 ax [orig:675 l.82_589 ] [675])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":432 86 {*movsi_internal}
     (nil))
(insn 2049 2048 2050 140 (set (reg:DI 0 ax [orig:676 _590 ] [676])
        (sign_extend:DI (reg:SI 0 ax [orig:675 l.82_589 ] [675]))) "ETAFLD2.f":432 149 {*extendsidi2_rex64}
     (nil))
(insn 2050 2049 2051 140 (parallel [
            (set (reg:DI 0 ax [orig:677 _591 ] [677])
                (plus:DI (reg:DI 0 ax [orig:676 _590 ] [676])
                    (reg:DI 1 dx [orig:674 _588 ] [674])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":432 222 {*adddi_1}
     (nil))
(insn 2051 2050 2052 140 (parallel [
            (set (reg:DI 0 ax [orig:678 _592 ] [678])
                (plus:DI (reg:DI 0 ax [orig:677 _591 ] [677])
                    (const_int -61 [0xffffffffffffffc3])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":432 222 {*adddi_1}
     (nil))
(insn 2052 2051 2053 140 (parallel [
            (set (reg:DI 0 ax [2199])
                (plus:DI (reg:DI 0 ax [orig:678 _592 ] [678])
                    (const_int 1404 [0x57c])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":432 222 {*adddi_1}
     (nil))
(insn 2053 2052 2054 140 (set (reg:SI 0 ax [orig:679 _593 ] [679])
        (mem:SI (plus:DI (mult:DI (reg:DI 0 ax [2199])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)) [1 rqstfld.lvls S4 A32])) "ETAFLD2.f":432 86 {*movsi_internal}
     (nil))
(insn 2054 2053 2055 140 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:679 _593 ] [679])
            (const_int 0 [0]))) "ETAFLD2.f":432 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 2055 2054 2056 140 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 2132)
            (pc))) "ETAFLD2.f":432 682 {*jcc}
     (nil)
 -> 2132)
;;  succ:       141 (FALLTHRU)
;;              144
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 141, loop depth 0, maybe hot
;;  prev block 140, next block 142, flags: (RTL, MODIFIED)
;;  pred:       140 (FALLTHRU)
;; bb 141 artificial_defs: { }
;; bb 141 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 680 681 682 683 684 685 686 687 688 689 2200 2201 2202 2203 2204 2205 2206 2207 2208 2209 2210 2211 2212 2213
(note 2056 2055 2057 141 [bb 141] NOTE_INSN_BASIC_BLOCK)
(insn 2057 2056 2058 141 (set (reg:SI 0 ax [orig:680 _594 ] [680])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 32 [0x20]))) [1 rqstfld.iget+16 S4 A128])) "ETAFLD2.f":433 86 {*movsi_internal}
     (nil))
(insn 2058 2057 2059 141 (set (reg:DI 1 dx [orig:681 _595 ] [681])
        (sign_extend:DI (reg:SI 0 ax [orig:680 _594 ] [680]))) "ETAFLD2.f":433 149 {*extendsidi2_rex64}
     (nil))
(insn 2059 2058 2060 141 (set (reg:DI 0 ax [2200])
        (reg:DI 1 dx [orig:681 _595 ] [681])) "ETAFLD2.f":433 85 {*movdi_internal}
     (nil))
(insn 2060 2059 2062 141 (parallel [
            (set (reg:DI 0 ax [2201])
                (ashift:DI (reg:DI 0 ax [2200])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":433 551 {*ashldi3_1}
     (nil))
(insn 2062 2060 2063 141 (parallel [
            (set (reg:DI 0 ax [2200])
                (minus:DI (reg:DI 0 ax [2200])
                    (reg:DI 1 dx [orig:681 _595 ] [681])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":433 278 {*subdi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:681 _595 ] [681])
            (const_int 15 [0xf]))
        (nil)))
(insn 2063 2062 2065 141 (parallel [
            (set (reg:DI 0 ax [2202])
                (ashift:DI (reg:DI 0 ax [2200])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":433 551 {*ashldi3_1}
     (nil))
(insn 2065 2063 2066 141 (set (reg:DI 1 dx [orig:682 _596 ] [682])
        (reg:DI 0 ax [2200])) "ETAFLD2.f":433 85 {*movdi_internal}
     (nil))
(insn 2066 2065 2067 141 (set (reg:SI 0 ax [orig:683 l.83_597 ] [683])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":433 86 {*movsi_internal}
     (nil))
(insn 2067 2066 2068 141 (set (reg:DI 0 ax [orig:684 _598 ] [684])
        (sign_extend:DI (reg:SI 0 ax [orig:683 l.83_597 ] [683]))) "ETAFLD2.f":433 149 {*extendsidi2_rex64}
     (nil))
(insn 2068 2067 2069 141 (parallel [
            (set (reg:DI 0 ax [orig:685 _599 ] [685])
                (plus:DI (reg:DI 0 ax [orig:684 _598 ] [684])
                    (reg:DI 1 dx [orig:682 _596 ] [682])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":433 222 {*adddi_1}
     (nil))
(insn 2069 2068 2070 141 (parallel [
            (set (reg:DI 0 ax [orig:686 _600 ] [686])
                (plus:DI (reg:DI 0 ax [orig:685 _599 ] [685])
                    (const_int -61 [0xffffffffffffffc3])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":433 222 {*adddi_1}
     (nil))
(insn 2070 2069 2071 141 (parallel [
            (set (reg:DI 0 ax [2203])
                (plus:DI (reg:DI 0 ax [orig:686 _600 ] [686])
                    (const_int 1404 [0x57c])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":433 222 {*adddi_1}
     (nil))
(insn 2071 2070 2072 141 (set (reg:SI 0 ax [orig:687 _601 ] [687])
        (mem:SI (plus:DI (mult:DI (reg:DI 0 ax [2203])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)) [1 rqstfld.lvls S4 A32])) "ETAFLD2.f":433 86 {*movsi_internal}
     (nil))
(insn 2072 2071 2073 141 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -268 [0xfffffffffffffef4])) [1 itype+0 S4 A32])
        (reg:SI 0 ax [orig:687 _601 ] [687])) "ETAFLD2.f":433 86 {*movsi_internal}
     (nil))
(insn 2073 2072 2074 141 (parallel [
            (set (reg:DI 1 dx [2204])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -272 [0xfffffffffffffef0])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":434 222 {*adddi_1}
     (nil))
(insn 2074 2073 2075 141 (parallel [
            (set (reg:DI 0 ax [2205])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -268 [0xfffffffffffffef4])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":434 222 {*adddi_1}
     (nil))
(insn 2075 2074 2076 141 (set (reg:DI 37 r8)
        (symbol_ref:DI ("equiv.3.4378") [flags 0x202]  <var_decl 0x7f9828263750 equiv.3>)) "ETAFLD2.f":434 85 {*movdi_internal}
     (nil))
(insn 2076 2075 2078 141 (set (reg:DI 2 cx)
        (const:DI (plus:DI (symbol_ref:DI ("loops_") [flags 0x202]  <var_decl 0x7f9828246c60 loops>)
                (const_int 9680 [0x25d0])))) "ETAFLD2.f":434 85 {*movdi_internal}
     (nil))
(insn 2078 2076 2079 141 (set (reg:DI 4 si)
        (reg:DI 0 ax [2205])) "ETAFLD2.f":434 85 {*movdi_internal}
     (nil))
(insn 2079 2078 2080 141 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7f982825bcf0 vrbls>)
                (const_int 13867308 [0xd3992c])))) "ETAFLD2.f":434 85 {*movdi_internal}
     (nil))
(insn 2080 2079 2081 141 (set (reg:QI 0 ax)
        (const_int 0 [0])) "ETAFLD2.f":434 88 {*movqi_internal}
     (nil))
(call_insn 2081 2080 2082 141 (call (mem:QI (symbol_ref:DI ("netal_") [flags 0x41]  <function_decl 0x7f9828228a00 netal>) [0 netal S1 A8])
        (const_int 0 [0])) "ETAFLD2.f":434 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (nil))))))))
(insn 2082 2081 2083 141 (set (reg:DI 1 dx [2206])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [4 grid2+0 S8 A64])) "ETAFLD2.f":435 85 {*movdi_internal}
     (nil))
(insn 2083 2082 2084 141 (set (reg:DI 0 ax [2207])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "ETAFLD2.f":435 85 {*movdi_internal}
     (nil))
(insn 2084 2083 2085 141 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [11  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -832 [0xfffffffffffffcc0])) [11 jmout+0 S8 A64])) "ETAFLD2.f":435 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 2085 2084 2086 141 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [11  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -824 [0xfffffffffffffcc8])) [11 imout+0 S8 A64])) "ETAFLD2.f":435 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 2086 2085 2087 141 (set (reg:DI 38 r9)
        (reg:DI 1 dx [2206])) "ETAFLD2.f":435 85 {*movdi_internal}
     (nil))
(insn 2087 2086 2088 141 (set (reg:DI 37 r8)
        (reg:DI 0 ax [2207])) "ETAFLD2.f":435 85 {*movdi_internal}
     (nil))
(insn 2088 2087 2089 141 (set (reg:DI 2 cx)
        (symbol_ref:DI ("equiv.2.4368") [flags 0x202]  <var_decl 0x7f9828263510 equiv.2>)) "ETAFLD2.f":435 85 {*movdi_internal}
     (nil))
(insn 2089 2088 2090 141 (set (reg:DI 1 dx)
        (symbol_ref:DI ("equiv.3.4378") [flags 0x202]  <var_decl 0x7f9828263750 equiv.3>)) "ETAFLD2.f":435 85 {*movdi_internal}
     (nil))
(insn 2090 2089 2091 141 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f9827f94240 *.LC3>)) "ETAFLD2.f":435 85 {*movdi_internal}
     (nil))
(insn 2091 2090 2092 141 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC32") [flags 0x2]  <var_decl 0x7f9827f94bd0 *.LC32>)) "ETAFLD2.f":435 85 {*movdi_internal}
     (nil))
(insn 2092 2091 2093 141 (set (reg:QI 0 ax)
        (const_int 0 [0])) "ETAFLD2.f":435 88 {*movqi_internal}
     (nil))
(call_insn 2093 2092 2094 141 (call (mem:QI (symbol_ref:DI ("e2out_") [flags 0x41]  <function_decl 0x7f9828228600 e2out>) [0 e2out S1 A8])
        (const_int 16 [0x10])) "ETAFLD2.f":435 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
(insn 2094 2093 2095 141 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":435 222 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 2095 2094 2096 141 (set (reg:DI 2 cx [2208])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -832 [0xfffffffffffffcc0])) [11 jmout+0 S8 A64])) "ETAFLD2.f":436 85 {*movdi_internal}
     (nil))
(insn 2096 2095 2097 141 (set (reg:DI 1 dx [2209])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -824 [0xfffffffffffffcc8])) [11 imout+0 S8 A64])) "ETAFLD2.f":436 85 {*movdi_internal}
     (nil))
(insn 2097 2096 2098 141 (set (reg:DI 0 ax [2210])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "ETAFLD2.f":436 85 {*movdi_internal}
     (nil))
(insn 2098 2097 2099 141 (set (reg:DI 37 r8)
        (reg:DI 2 cx [2208])) "ETAFLD2.f":436 85 {*movdi_internal}
     (nil))
(insn 2099 2098 2100 141 (set (reg:DI 2 cx)
        (reg:DI 1 dx [2209])) "ETAFLD2.f":436 85 {*movdi_internal}
     (nil))
(insn 2100 2099 2101 141 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC33") [flags 0x2]  <var_decl 0x7f9827f94c60 *.LC33>)) "ETAFLD2.f":436 85 {*movdi_internal}
     (nil))
(insn 2101 2100 2102 141 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC34") [flags 0x2]  <var_decl 0x7f9827f94cf0 *.LC34>)) "ETAFLD2.f":436 85 {*movdi_internal}
     (nil))
(insn 2102 2101 2103 141 (set (reg:DI 5 di)
        (reg:DI 0 ax [2210])) "ETAFLD2.f":436 85 {*movdi_internal}
     (nil))
(insn 2103 2102 2104 141 (set (reg:QI 0 ax)
        (const_int 0 [0])) "ETAFLD2.f":436 88 {*movqi_internal}
     (nil))
(call_insn 2104 2103 2105 141 (call (mem:QI (symbol_ref:DI ("bound_") [flags 0x41]  <function_decl 0x7f9828228e00 bound>) [0 bound S1 A8])
        (const_int 0 [0])) "ETAFLD2.f":436 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (nil))))))))
(insn 2105 2104 2106 141 (set (reg/f:DI 1 dx [2211])
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                (const_int 55216 [0xd7b0])))) "ETAFLD2.f":437 85 {*movdi_internal}
     (nil))
(insn 2106 2105 2107 141 (set (reg:DI 0 ax [2212])
        (const_int 0 [0])) "ETAFLD2.f":437 85 {*movdi_internal}
     (nil))
(insn 2107 2106 5863 141 (set (reg:DI 2 cx [2213])
        (const_int 12 [0xc])) "ETAFLD2.f":437 85 {*movdi_internal}
     (nil))
(insn 5863 2107 2108 141 (set (reg/f:DI 5 di [2211])
        (reg/f:DI 1 dx [2211])) "ETAFLD2.f":437 85 {*movdi_internal}
     (nil))
(insn 2108 5863 5864 141 (parallel [
            (set (reg:DI 2 cx [2213])
                (const_int 0 [0]))
            (set (reg/f:DI 5 di [2211])
                (plus:DI (ashift:DI (reg:DI 2 cx [2213])
                        (const_int 3 [0x3]))
                    (reg/f:DI 5 di [2211])))
            (set (mem/c:BLK (reg/f:DI 5 di [2211]) [1 rqstfld.id+0 S96 A128])
                (const_int 0 [0]))
            (use (reg:DI 0 ax [2212]))
            (use (reg:DI 2 cx [2213]))
        ]) "ETAFLD2.f":437 984 {*rep_stosdi_rex64}
     (nil))
(insn 5864 2108 2109 141 (set (reg/f:DI 1 dx [2211])
        (reg/f:DI 5 di [2211])) "ETAFLD2.f":437 85 {*movdi_internal}
     (nil))
(insn 2109 5864 2110 141 (set (mem/c:SI (reg/f:DI 1 dx [2211]) [1 rqstfld.id+96 S4 A128])
        (reg:SI 0 ax [2212])) "ETAFLD2.f":437 86 {*movsi_internal}
     (nil))
(insn 2110 2109 2111 141 (parallel [
            (set (reg/f:DI 1 dx [2211])
                (plus:DI (reg/f:DI 1 dx [2211])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":437 222 {*adddi_1}
     (nil))
(insn 2111 2110 2112 141 (set (reg:SI 0 ax [orig:688 l.84_602 ] [688])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":438 86 {*movsi_internal}
     (nil))
(insn 2112 2111 2113 141 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -276 [0xfffffffffffffeec])) [1 lyr+0 S4 A32])
        (reg:SI 0 ax [orig:688 l.84_602 ] [688])) "ETAFLD2.f":438 86 {*movsi_internal}
     (nil))
(insn 2113 2112 2114 141 (set (reg:SI 0 ax [orig:689 itype.85_603 ] [689])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -268 [0xfffffffffffffef4])) [1 itype+0 S4 A32])) "ETAFLD2.f":439 86 {*movsi_internal}
     (nil))
(insn 2114 2113 2115 141 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [orig:689 itype.85_603 ] [689])
            (const_int 1 [0x1]))) "ETAFLD2.f":439 11 {*cmpsi_1}
     (nil))
(jump_insn 2115 2114 2116 141 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 2118)
            (pc))) "ETAFLD2.f":439 682 {*jcc}
     (nil)
 -> 2118)
;;  succ:       142 (FALLTHRU)
;;              143
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 142, loop depth 0, maybe hot
;;  prev block 141, next block 143, flags: (RTL, MODIFIED)
;;  pred:       141 (FALLTHRU)
;; bb 142 artificial_defs: { }
;; bb 142 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 2116 2115 2117 142 [bb 142] NOTE_INSN_BASIC_BLOCK)
(insn 2117 2116 2118 142 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 55248 [0xd7d0]))) [1 rqstfld.id+32 S4 A128])
        (const_int 109 [0x6d])) "ETAFLD2.f":439 86 {*movsi_internal}
     (nil))
;;  succ:       143 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 143, loop depth 0, maybe hot
;;  prev block 142, next block 144, flags: (RTL, MODIFIED)
;;  pred:       141
;;              142 (FALLTHRU)
;; bb 143 artificial_defs: { }
;; bb 143 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 2214 2215 2216 2217
(code_label 2118 2117 2119 143 73 (nil) [1 uses])
(note 2119 2118 2120 143 [bb 143] NOTE_INSN_BASIC_BLOCK)
(insn 2120 2119 2121 143 (set (reg:DI 4 si [2214])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -832 [0xfffffffffffffcc0])) [11 jmout+0 S8 A64])) "ETAFLD2.f":440 85 {*movdi_internal}
     (nil))
(insn 2121 2120 2122 143 (set (reg:DI 2 cx [2215])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -824 [0xfffffffffffffcc8])) [11 imout+0 S8 A64])) "ETAFLD2.f":440 85 {*movdi_internal}
     (nil))
(insn 2122 2121 2123 143 (set (reg:DI 1 dx [2216])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "ETAFLD2.f":440 85 {*movdi_internal}
     (nil))
(insn 2123 2122 2124 143 (parallel [
            (set (reg:DI 0 ax [2217])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -276 [0xfffffffffffffeec])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":440 222 {*adddi_1}
     (nil))
(insn 2124 2123 2125 143 (set (reg:DI 38 r9)
        (reg:DI 4 si [2214])) "ETAFLD2.f":440 85 {*movdi_internal}
     (nil))
(insn 2125 2124 2126 143 (set (reg:DI 37 r8)
        (reg:DI 2 cx [2215])) "ETAFLD2.f":440 85 {*movdi_internal}
     (nil))
(insn 2126 2125 2127 143 (set (reg:DI 2 cx)
        (reg:DI 1 dx [2216])) "ETAFLD2.f":440 85 {*movdi_internal}
     (nil))
(insn 2127 2126 2128 143 (set (reg:DI 1 dx)
        (reg:DI 0 ax [2217])) "ETAFLD2.f":440 85 {*movdi_internal}
     (nil))
(insn 2128 2127 2129 143 (set (reg:DI 4 si)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                (const_int 32 [0x20])))) "ETAFLD2.f":440 85 {*movdi_internal}
     (nil))
(insn 2129 2128 2130 143 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                (const_int 4 [0x4])))) "ETAFLD2.f":440 85 {*movdi_internal}
     (nil))
(insn 2130 2129 2131 143 (set (reg:QI 0 ax)
        (const_int 0 [0])) "ETAFLD2.f":440 88 {*movqi_internal}
     (nil))
(call_insn 2131 2130 2132 143 (call (mem:QI (symbol_ref:DI ("output_") [flags 0x41]  <function_decl 0x7f9828228700 output>) [0 output S1 A8])
        (const_int 0 [0])) "ETAFLD2.f":440 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
;;  succ:       144 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 144, loop depth 0, maybe hot
;;  prev block 143, next block 145, flags: (RTL, MODIFIED)
;;  pred:       139
;;              143 (FALLTHRU)
;;              140
;; bb 144 artificial_defs: { }
;; bb 144 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 690
(code_label 2132 2131 2133 144 72 (nil) [2 uses])
(note 2133 2132 2134 144 [bb 144] NOTE_INSN_BASIC_BLOCK)
(insn 2134 2133 2135 144 (set (reg:SI 0 ax [orig:690 _604 ] [690])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 344 [0x158]))) [1 rqstfld.iget+328 S4 A64])) "ETAFLD2.f":445 86 {*movsi_internal}
     (nil))
(insn 2135 2134 2136 144 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:690 _604 ] [690])
            (const_int 0 [0]))) "ETAFLD2.f":445 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 2136 2135 2137 144 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 2246)
            (pc))) "ETAFLD2.f":445 682 {*jcc}
     (nil)
 -> 2246)
;;  succ:       145 (FALLTHRU)
;;              149
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 145, loop depth 0, maybe hot
;;  prev block 144, next block 146, flags: (RTL, MODIFIED)
;;  pred:       144 (FALLTHRU)
;; bb 145 artificial_defs: { }
;; bb 145 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 691 692 693 694 695 696 697 698 2218 2219 2220 2221
(note 2137 2136 2138 145 [bb 145] NOTE_INSN_BASIC_BLOCK)
(insn 2138 2137 2139 145 (set (reg:SI 0 ax [orig:691 _605 ] [691])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 344 [0x158]))) [1 rqstfld.iget+328 S4 A64])) "ETAFLD2.f":446 86 {*movsi_internal}
     (nil))
(insn 2139 2138 2140 145 (set (reg:DI 1 dx [orig:692 _606 ] [692])
        (sign_extend:DI (reg:SI 0 ax [orig:691 _605 ] [691]))) "ETAFLD2.f":446 149 {*extendsidi2_rex64}
     (nil))
(insn 2140 2139 2141 145 (set (reg:DI 0 ax [2218])
        (reg:DI 1 dx [orig:692 _606 ] [692])) "ETAFLD2.f":446 85 {*movdi_internal}
     (nil))
(insn 2141 2140 2143 145 (parallel [
            (set (reg:DI 0 ax [2219])
                (ashift:DI (reg:DI 0 ax [2218])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":446 551 {*ashldi3_1}
     (nil))
(insn 2143 2141 2144 145 (parallel [
            (set (reg:DI 0 ax [2218])
                (minus:DI (reg:DI 0 ax [2218])
                    (reg:DI 1 dx [orig:692 _606 ] [692])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":446 278 {*subdi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:692 _606 ] [692])
            (const_int 15 [0xf]))
        (nil)))
(insn 2144 2143 2146 145 (parallel [
            (set (reg:DI 0 ax [2220])
                (ashift:DI (reg:DI 0 ax [2218])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":446 551 {*ashldi3_1}
     (nil))
(insn 2146 2144 2147 145 (set (reg:DI 1 dx [orig:693 _607 ] [693])
        (reg:DI 0 ax [2218])) "ETAFLD2.f":446 85 {*movdi_internal}
     (nil))
(insn 2147 2146 2148 145 (set (reg:SI 0 ax [orig:694 l.86_608 ] [694])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":446 86 {*movsi_internal}
     (nil))
(insn 2148 2147 2149 145 (set (reg:DI 0 ax [orig:695 _609 ] [695])
        (sign_extend:DI (reg:SI 0 ax [orig:694 l.86_608 ] [694]))) "ETAFLD2.f":446 149 {*extendsidi2_rex64}
     (nil))
(insn 2149 2148 2150 145 (parallel [
            (set (reg:DI 0 ax [orig:696 _610 ] [696])
                (plus:DI (reg:DI 0 ax [orig:695 _609 ] [695])
                    (reg:DI 1 dx [orig:693 _607 ] [693])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":446 222 {*adddi_1}
     (nil))
(insn 2150 2149 2151 145 (parallel [
            (set (reg:DI 0 ax [orig:697 _611 ] [697])
                (plus:DI (reg:DI 0 ax [orig:696 _610 ] [696])
                    (const_int -61 [0xffffffffffffffc3])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":446 222 {*adddi_1}
     (nil))
(insn 2151 2150 2152 145 (parallel [
            (set (reg:DI 0 ax [2221])
                (plus:DI (reg:DI 0 ax [orig:697 _611 ] [697])
                    (const_int 1404 [0x57c])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":446 222 {*adddi_1}
     (nil))
(insn 2152 2151 2153 145 (set (reg:SI 0 ax [orig:698 _612 ] [698])
        (mem:SI (plus:DI (mult:DI (reg:DI 0 ax [2221])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)) [1 rqstfld.lvls S4 A32])) "ETAFLD2.f":446 86 {*movsi_internal}
     (nil))
(insn 2153 2152 2154 145 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:698 _612 ] [698])
            (const_int 0 [0]))) "ETAFLD2.f":446 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 2154 2153 2155 145 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 2246)
            (pc))) "ETAFLD2.f":446 682 {*jcc}
     (nil)
 -> 2246)
;;  succ:       146 (FALLTHRU)
;;              149
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 146, loop depth 0, maybe hot
;;  prev block 145, next block 147, flags: (RTL, MODIFIED)
;;  pred:       145 (FALLTHRU)
;; bb 146 artificial_defs: { }
;; bb 146 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 699 700 701 702 703 704 705 706 707 708 2222 2223 2224 2225 2226 2227 2228 2229 2230 2231 2232 2233 2234 2235 2236
(note 2155 2154 2156 146 [bb 146] NOTE_INSN_BASIC_BLOCK)
(insn 2156 2155 2157 146 (set (reg:SI 0 ax [orig:699 _613 ] [699])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 344 [0x158]))) [1 rqstfld.iget+328 S4 A64])) "ETAFLD2.f":447 86 {*movsi_internal}
     (nil))
(insn 2157 2156 2158 146 (set (reg:DI 1 dx [orig:700 _614 ] [700])
        (sign_extend:DI (reg:SI 0 ax [orig:699 _613 ] [699]))) "ETAFLD2.f":447 149 {*extendsidi2_rex64}
     (nil))
(insn 2158 2157 2159 146 (set (reg:DI 0 ax [2222])
        (reg:DI 1 dx [orig:700 _614 ] [700])) "ETAFLD2.f":447 85 {*movdi_internal}
     (nil))
(insn 2159 2158 2161 146 (parallel [
            (set (reg:DI 0 ax [2223])
                (ashift:DI (reg:DI 0 ax [2222])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":447 551 {*ashldi3_1}
     (nil))
(insn 2161 2159 2162 146 (parallel [
            (set (reg:DI 0 ax [2222])
                (minus:DI (reg:DI 0 ax [2222])
                    (reg:DI 1 dx [orig:700 _614 ] [700])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":447 278 {*subdi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:700 _614 ] [700])
            (const_int 15 [0xf]))
        (nil)))
(insn 2162 2161 2164 146 (parallel [
            (set (reg:DI 0 ax [2224])
                (ashift:DI (reg:DI 0 ax [2222])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":447 551 {*ashldi3_1}
     (nil))
(insn 2164 2162 2165 146 (set (reg:DI 1 dx [orig:701 _615 ] [701])
        (reg:DI 0 ax [2222])) "ETAFLD2.f":447 85 {*movdi_internal}
     (nil))
(insn 2165 2164 2166 146 (set (reg:SI 0 ax [orig:702 l.87_616 ] [702])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":447 86 {*movsi_internal}
     (nil))
(insn 2166 2165 2167 146 (set (reg:DI 0 ax [orig:703 _617 ] [703])
        (sign_extend:DI (reg:SI 0 ax [orig:702 l.87_616 ] [702]))) "ETAFLD2.f":447 149 {*extendsidi2_rex64}
     (nil))
(insn 2167 2166 2168 146 (parallel [
            (set (reg:DI 0 ax [orig:704 _618 ] [704])
                (plus:DI (reg:DI 0 ax [orig:703 _617 ] [703])
                    (reg:DI 1 dx [orig:701 _615 ] [701])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":447 222 {*adddi_1}
     (nil))
(insn 2168 2167 2169 146 (parallel [
            (set (reg:DI 0 ax [orig:705 _619 ] [705])
                (plus:DI (reg:DI 0 ax [orig:704 _618 ] [704])
                    (const_int -61 [0xffffffffffffffc3])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":447 222 {*adddi_1}
     (nil))
(insn 2169 2168 2170 146 (parallel [
            (set (reg:DI 0 ax [2225])
                (plus:DI (reg:DI 0 ax [orig:705 _619 ] [705])
                    (const_int 1404 [0x57c])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":447 222 {*adddi_1}
     (nil))
(insn 2170 2169 2171 146 (set (reg:SI 0 ax [orig:706 _620 ] [706])
        (mem:SI (plus:DI (mult:DI (reg:DI 0 ax [2225])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)) [1 rqstfld.lvls S4 A32])) "ETAFLD2.f":447 86 {*movsi_internal}
     (nil))
(insn 2171 2170 2172 146 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -268 [0xfffffffffffffef4])) [1 itype+0 S4 A32])
        (reg:SI 0 ax [orig:706 _620 ] [706])) "ETAFLD2.f":447 86 {*movsi_internal}
     (nil))
(insn 2172 2171 2173 146 (parallel [
            (set (reg:DI 1 dx [2226])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -272 [0xfffffffffffffef0])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":448 222 {*adddi_1}
     (nil))
(insn 2173 2172 2174 146 (parallel [
            (set (reg:DI 0 ax [2227])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -268 [0xfffffffffffffef4])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":448 222 {*adddi_1}
     (nil))
(insn 2174 2173 2175 146 (set (reg:DI 37 r8)
        (symbol_ref:DI ("q1d.4439") [flags 0x202]  <var_decl 0x7f9827e6b510 q1d>)) "ETAFLD2.f":448 85 {*movdi_internal}
     (nil))
(insn 2175 2174 2177 146 (set (reg:DI 2 cx)
        (const:DI (plus:DI (symbol_ref:DI ("loops_") [flags 0x202]  <var_decl 0x7f9828246c60 loops>)
                (const_int 9680 [0x25d0])))) "ETAFLD2.f":448 85 {*movdi_internal}
     (nil))
(insn 2177 2175 2178 146 (set (reg:DI 4 si)
        (reg:DI 0 ax [2227])) "ETAFLD2.f":448 85 {*movdi_internal}
     (nil))
(insn 2178 2177 2179 146 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7f982825bcf0 vrbls>)
                (const_int 13867308 [0xd3992c])))) "ETAFLD2.f":448 85 {*movdi_internal}
     (nil))
(insn 2179 2178 2180 146 (set (reg:QI 0 ax)
        (const_int 0 [0])) "ETAFLD2.f":448 88 {*movqi_internal}
     (nil))
(call_insn 2180 2179 2181 146 (call (mem:QI (symbol_ref:DI ("netal_") [flags 0x41]  <function_decl 0x7f9828228a00 netal>) [0 netal S1 A8])
        (const_int 0 [0])) "ETAFLD2.f":448 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (nil))))))))
(insn 2181 2180 2182 146 (parallel [
            (set (reg:DI 1 dx [2228])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -272 [0xfffffffffffffef0])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":449 222 {*adddi_1}
     (nil))
(insn 2182 2181 2183 146 (parallel [
            (set (reg:DI 0 ax [2229])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -268 [0xfffffffffffffef4])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":449 222 {*adddi_1}
     (nil))
(insn 2183 2182 2184 146 (set (reg:DI 37 r8)
        (symbol_ref:DI ("equiv.3.4378") [flags 0x202]  <var_decl 0x7f9828263750 equiv.3>)) "ETAFLD2.f":449 85 {*movdi_internal}
     (nil))
(insn 2184 2183 2186 146 (set (reg:DI 2 cx)
        (const:DI (plus:DI (symbol_ref:DI ("loops_") [flags 0x202]  <var_decl 0x7f9828246c60 loops>)
                (const_int 128204 [0x1f4cc])))) "ETAFLD2.f":449 85 {*movdi_internal}
     (nil))
(insn 2186 2184 2187 146 (set (reg:DI 4 si)
        (reg:DI 0 ax [2229])) "ETAFLD2.f":449 85 {*movdi_internal}
     (nil))
(insn 2187 2186 2188 146 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7f982825bcf0 vrbls>)
                (const_int 355572 [0x56cf4])))) "ETAFLD2.f":449 85 {*movdi_internal}
     (nil))
(insn 2188 2187 2189 146 (set (reg:QI 0 ax)
        (const_int 0 [0])) "ETAFLD2.f":449 88 {*movqi_internal}
     (nil))
(call_insn 2189 2188 2190 146 (call (mem:QI (symbol_ref:DI ("netal_") [flags 0x41]  <function_decl 0x7f9828228a00 netal>) [0 netal S1 A8])
        (const_int 0 [0])) "ETAFLD2.f":449 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (nil))))))))
(insn 2190 2189 2191 146 (parallel [
            (set (reg:DI 1 dx [2230])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -272 [0xfffffffffffffef0])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":450 222 {*adddi_1}
     (nil))
(insn 2191 2190 2192 146 (parallel [
            (set (reg:DI 0 ax [2231])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -268 [0xfffffffffffffef4])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":450 222 {*adddi_1}
     (nil))
(insn 2192 2191 2193 146 (set (reg:DI 37 r8)
        (symbol_ref:DI ("equiv.2.4368") [flags 0x202]  <var_decl 0x7f9828263510 equiv.2>)) "ETAFLD2.f":450 85 {*movdi_internal}
     (nil))
(insn 2193 2192 2195 146 (set (reg:DI 2 cx)
        (const:DI (plus:DI (symbol_ref:DI ("loops_") [flags 0x202]  <var_decl 0x7f9828246c60 loops>)
                (const_int 128204 [0x1f4cc])))) "ETAFLD2.f":450 85 {*movdi_internal}
     (nil))
(insn 2195 2193 2196 146 (set (reg:DI 4 si)
        (reg:DI 0 ax [2231])) "ETAFLD2.f":450 85 {*movdi_internal}
     (nil))
(insn 2196 2195 2197 146 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7f982825bcf0 vrbls>)
                (const_int 4859484 [0x4a265c])))) "ETAFLD2.f":450 85 {*movdi_internal}
     (nil))
(insn 2197 2196 2198 146 (set (reg:QI 0 ax)
        (const_int 0 [0])) "ETAFLD2.f":450 88 {*movqi_internal}
     (nil))
(call_insn 2198 2197 2199 146 (call (mem:QI (symbol_ref:DI ("netal_") [flags 0x41]  <function_decl 0x7f9828228a00 netal>) [0 netal S1 A8])
        (const_int 0 [0])) "ETAFLD2.f":450 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (nil))))))))
(insn 2199 2198 2200 146 (set (reg:DI 37 r8)
        (symbol_ref:DI ("egrid3.4390") [flags 0x202]  <var_decl 0x7f9828263d80 egrid3>)) "ETAFLD2.f":451 85 {*movdi_internal}
     (nil))
(insn 2200 2199 2201 146 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*.LC35") [flags 0x2]  <var_decl 0x7f9827f94d80 *.LC35>)) "ETAFLD2.f":451 85 {*movdi_internal}
     (nil))
(insn 2201 2200 2202 146 (set (reg:DI 1 dx)
        (symbol_ref:DI ("equiv.2.4368") [flags 0x202]  <var_decl 0x7f9828263510 equiv.2>)) "ETAFLD2.f":451 85 {*movdi_internal}
     (nil))
(insn 2202 2201 2203 146 (set (reg:DI 4 si)
        (symbol_ref:DI ("equiv.3.4378") [flags 0x202]  <var_decl 0x7f9828263750 equiv.3>)) "ETAFLD2.f":451 85 {*movdi_internal}
     (nil))
(insn 2203 2202 2204 146 (set (reg:DI 5 di)
        (symbol_ref:DI ("q1d.4439") [flags 0x202]  <var_decl 0x7f9827e6b510 q1d>)) "ETAFLD2.f":451 85 {*movdi_internal}
     (nil))
(insn 2204 2203 2205 146 (set (reg:QI 0 ax)
        (const_int 0 [0])) "ETAFLD2.f":451 88 {*movqi_internal}
     (nil))
(call_insn 2205 2204 2206 146 (call (mem:QI (symbol_ref:DI ("calmcvg_") [flags 0x41]  <function_decl 0x7f9827e92000 calmcvg>) [0 calmcvg S1 A8])
        (const_int 0 [0])) "ETAFLD2.f":451 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (nil))))))))
(insn 2206 2205 2207 146 (set (reg:DI 1 dx [2232])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [4 grid2+0 S8 A64])) "ETAFLD2.f":452 85 {*movdi_internal}
     (nil))
(insn 2207 2206 2208 146 (set (reg:DI 0 ax [2233])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "ETAFLD2.f":452 85 {*movdi_internal}
     (nil))
(insn 2208 2207 2209 146 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [11  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -832 [0xfffffffffffffcc0])) [11 jmout+0 S8 A64])) "ETAFLD2.f":452 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 2209 2208 2210 146 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [11  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -824 [0xfffffffffffffcc8])) [11 imout+0 S8 A64])) "ETAFLD2.f":452 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 2210 2209 2211 146 (set (reg:DI 38 r9)
        (reg:DI 1 dx [2232])) "ETAFLD2.f":452 85 {*movdi_internal}
     (nil))
(insn 2211 2210 2212 146 (set (reg:DI 37 r8)
        (reg:DI 0 ax [2233])) "ETAFLD2.f":452 85 {*movdi_internal}
     (nil))
(insn 2212 2211 2213 146 (set (reg:DI 2 cx)
        (symbol_ref:DI ("equiv.2.4368") [flags 0x202]  <var_decl 0x7f9828263510 equiv.2>)) "ETAFLD2.f":452 85 {*movdi_internal}
     (nil))
(insn 2213 2212 2214 146 (set (reg:DI 1 dx)
        (symbol_ref:DI ("egrid3.4390") [flags 0x202]  <var_decl 0x7f9828263d80 egrid3>)) "ETAFLD2.f":452 85 {*movdi_internal}
     (nil))
(insn 2214 2213 2215 146 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f9827f94240 *.LC3>)) "ETAFLD2.f":452 85 {*movdi_internal}
     (nil))
(insn 2215 2214 2216 146 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC36") [flags 0x2]  <var_decl 0x7f9827f94e10 *.LC36>)) "ETAFLD2.f":452 85 {*movdi_internal}
     (nil))
(insn 2216 2215 2217 146 (set (reg:QI 0 ax)
        (const_int 0 [0])) "ETAFLD2.f":452 88 {*movqi_internal}
     (nil))
(call_insn 2217 2216 2218 146 (call (mem:QI (symbol_ref:DI ("e2out_") [flags 0x41]  <function_decl 0x7f9828228600 e2out>) [0 e2out S1 A8])
        (const_int 16 [0x10])) "ETAFLD2.f":452 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
(insn 2218 2217 2219 146 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":452 222 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 2219 2218 2220 146 (set (reg/f:DI 1 dx [2234])
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                (const_int 55216 [0xd7b0])))) "ETAFLD2.f":453 85 {*movdi_internal}
     (nil))
(insn 2220 2219 2221 146 (set (reg:DI 0 ax [2235])
        (const_int 0 [0])) "ETAFLD2.f":453 85 {*movdi_internal}
     (nil))
(insn 2221 2220 5865 146 (set (reg:DI 2 cx [2236])
        (const_int 12 [0xc])) "ETAFLD2.f":453 85 {*movdi_internal}
     (nil))
(insn 5865 2221 2222 146 (set (reg/f:DI 5 di [2234])
        (reg/f:DI 1 dx [2234])) "ETAFLD2.f":453 85 {*movdi_internal}
     (nil))
(insn 2222 5865 5866 146 (parallel [
            (set (reg:DI 2 cx [2236])
                (const_int 0 [0]))
            (set (reg/f:DI 5 di [2234])
                (plus:DI (ashift:DI (reg:DI 2 cx [2236])
                        (const_int 3 [0x3]))
                    (reg/f:DI 5 di [2234])))
            (set (mem/c:BLK (reg/f:DI 5 di [2234]) [1 rqstfld.id+0 S96 A128])
                (const_int 0 [0]))
            (use (reg:DI 0 ax [2235]))
            (use (reg:DI 2 cx [2236]))
        ]) "ETAFLD2.f":453 984 {*rep_stosdi_rex64}
     (nil))
(insn 5866 2222 2223 146 (set (reg/f:DI 1 dx [2234])
        (reg/f:DI 5 di [2234])) "ETAFLD2.f":453 85 {*movdi_internal}
     (nil))
(insn 2223 5866 2224 146 (set (mem/c:SI (reg/f:DI 1 dx [2234]) [1 rqstfld.id+96 S4 A128])
        (reg:SI 0 ax [2235])) "ETAFLD2.f":453 86 {*movsi_internal}
     (nil))
(insn 2224 2223 2225 146 (parallel [
            (set (reg/f:DI 1 dx [2234])
                (plus:DI (reg/f:DI 1 dx [2234])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":453 222 {*adddi_1}
     (nil))
(insn 2225 2224 2226 146 (set (reg:SI 0 ax [orig:707 l.88_621 ] [707])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":454 86 {*movsi_internal}
     (nil))
(insn 2226 2225 2227 146 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -276 [0xfffffffffffffeec])) [1 lyr+0 S4 A32])
        (reg:SI 0 ax [orig:707 l.88_621 ] [707])) "ETAFLD2.f":454 86 {*movsi_internal}
     (nil))
(insn 2227 2226 2228 146 (set (reg:SI 0 ax [orig:708 itype.89_622 ] [708])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -268 [0xfffffffffffffef4])) [1 itype+0 S4 A32])) "ETAFLD2.f":455 86 {*movsi_internal}
     (nil))
(insn 2228 2227 2229 146 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [orig:708 itype.89_622 ] [708])
            (const_int 1 [0x1]))) "ETAFLD2.f":455 11 {*cmpsi_1}
     (nil))
(jump_insn 2229 2228 2230 146 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 2232)
            (pc))) "ETAFLD2.f":455 682 {*jcc}
     (nil)
 -> 2232)
;;  succ:       147 (FALLTHRU)
;;              148
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 147, loop depth 0, maybe hot
;;  prev block 146, next block 148, flags: (RTL, MODIFIED)
;;  pred:       146 (FALLTHRU)
;; bb 147 artificial_defs: { }
;; bb 147 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 2230 2229 2231 147 [bb 147] NOTE_INSN_BASIC_BLOCK)
(insn 2231 2230 2232 147 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 55248 [0xd7d0]))) [1 rqstfld.id+32 S4 A128])
        (const_int 109 [0x6d])) "ETAFLD2.f":455 86 {*movsi_internal}
     (nil))
;;  succ:       148 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 148, loop depth 0, maybe hot
;;  prev block 147, next block 149, flags: (RTL, MODIFIED)
;;  pred:       146
;;              147 (FALLTHRU)
;; bb 148 artificial_defs: { }
;; bb 148 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 2237 2238 2239 2240
(code_label 2232 2231 2233 148 75 (nil) [1 uses])
(note 2233 2232 2234 148 [bb 148] NOTE_INSN_BASIC_BLOCK)
(insn 2234 2233 2235 148 (set (reg:DI 4 si [2237])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -832 [0xfffffffffffffcc0])) [11 jmout+0 S8 A64])) "ETAFLD2.f":456 85 {*movdi_internal}
     (nil))
(insn 2235 2234 2236 148 (set (reg:DI 2 cx [2238])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -824 [0xfffffffffffffcc8])) [11 imout+0 S8 A64])) "ETAFLD2.f":456 85 {*movdi_internal}
     (nil))
(insn 2236 2235 2237 148 (set (reg:DI 1 dx [2239])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "ETAFLD2.f":456 85 {*movdi_internal}
     (nil))
(insn 2237 2236 2238 148 (parallel [
            (set (reg:DI 0 ax [2240])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -276 [0xfffffffffffffeec])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":456 222 {*adddi_1}
     (nil))
(insn 2238 2237 2239 148 (set (reg:DI 38 r9)
        (reg:DI 4 si [2237])) "ETAFLD2.f":456 85 {*movdi_internal}
     (nil))
(insn 2239 2238 2240 148 (set (reg:DI 37 r8)
        (reg:DI 2 cx [2238])) "ETAFLD2.f":456 85 {*movdi_internal}
     (nil))
(insn 2240 2239 2241 148 (set (reg:DI 2 cx)
        (reg:DI 1 dx [2239])) "ETAFLD2.f":456 85 {*movdi_internal}
     (nil))
(insn 2241 2240 2242 148 (set (reg:DI 1 dx)
        (reg:DI 0 ax [2240])) "ETAFLD2.f":456 85 {*movdi_internal}
     (nil))
(insn 2242 2241 2243 148 (set (reg:DI 4 si)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                (const_int 344 [0x158])))) "ETAFLD2.f":456 85 {*movdi_internal}
     (nil))
(insn 2243 2242 2244 148 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                (const_int 4 [0x4])))) "ETAFLD2.f":456 85 {*movdi_internal}
     (nil))
(insn 2244 2243 2245 148 (set (reg:QI 0 ax)
        (const_int 0 [0])) "ETAFLD2.f":456 88 {*movqi_internal}
     (nil))
(call_insn 2245 2244 2246 148 (call (mem:QI (symbol_ref:DI ("output_") [flags 0x41]  <function_decl 0x7f9828228700 output>) [0 output S1 A8])
        (const_int 0 [0])) "ETAFLD2.f":456 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
;;  succ:       149 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 149, loop depth 0, maybe hot
;;  prev block 148, next block 150, flags: (RTL, MODIFIED)
;;  pred:       144
;;              148 (FALLTHRU)
;;              145
;; bb 149 artificial_defs: { }
;; bb 149 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 709
(code_label 2246 2245 2247 149 74 (nil) [2 uses])
(note 2247 2246 2248 149 [bb 149] NOTE_INSN_BASIC_BLOCK)
(insn 2248 2247 2249 149 (set (reg:SI 0 ax [orig:709 _623 ] [709])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 40 [0x28]))) [1 rqstfld.iget+24 S4 A64])) "ETAFLD2.f":462 86 {*movsi_internal}
     (nil))
(insn 2249 2248 2250 149 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:709 _623 ] [709])
            (const_int 0 [0]))) "ETAFLD2.f":462 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 2250 2249 2251 149 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 2255)
            (pc))) "ETAFLD2.f":462 682 {*jcc}
     (nil)
 -> 2255)
;;  succ:       151
;;              150 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 150, loop depth 0, maybe hot
;;  prev block 149, next block 151, flags: (RTL, MODIFIED)
;;  pred:       149 (FALLTHRU)
;; bb 150 artificial_defs: { }
;; bb 150 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 710
(note 2251 2250 2252 150 [bb 150] NOTE_INSN_BASIC_BLOCK)
(insn 2252 2251 2253 150 (set (reg:SI 0 ax [orig:710 _624 ] [710])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 44 [0x2c]))) [1 rqstfld.iget+28 S4 A32])) "ETAFLD2.f":462 86 {*movsi_internal}
     (nil))
(insn 2253 2252 2254 150 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:710 _624 ] [710])
            (const_int 0 [0]))) "ETAFLD2.f":462 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 2254 2253 2255 150 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 2421)
            (pc))) "ETAFLD2.f":462 682 {*jcc}
     (nil)
 -> 2421)
;;  succ:       151 (FALLTHRU)
;;              161
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 151, loop depth 0, maybe hot
;;  prev block 150, next block 152, flags: (RTL, MODIFIED)
;;  pred:       149
;;              150 (FALLTHRU)
;; bb 151 artificial_defs: { }
;; bb 151 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 711 712 713 714 715 716 717 718 2241 2242 2243 2244
(code_label 2255 2254 2256 151 76 (nil) [1 uses])
(note 2256 2255 2257 151 [bb 151] NOTE_INSN_BASIC_BLOCK)
(insn 2257 2256 2258 151 (set (reg:SI 0 ax [orig:711 _625 ] [711])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 40 [0x28]))) [1 rqstfld.iget+24 S4 A64])) "ETAFLD2.f":463 86 {*movsi_internal}
     (nil))
(insn 2258 2257 2259 151 (set (reg:DI 1 dx [orig:712 _626 ] [712])
        (sign_extend:DI (reg:SI 0 ax [orig:711 _625 ] [711]))) "ETAFLD2.f":463 149 {*extendsidi2_rex64}
     (nil))
(insn 2259 2258 2260 151 (set (reg:DI 0 ax [2241])
        (reg:DI 1 dx [orig:712 _626 ] [712])) "ETAFLD2.f":463 85 {*movdi_internal}
     (nil))
(insn 2260 2259 2262 151 (parallel [
            (set (reg:DI 0 ax [2242])
                (ashift:DI (reg:DI 0 ax [2241])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":463 551 {*ashldi3_1}
     (nil))
(insn 2262 2260 2263 151 (parallel [
            (set (reg:DI 0 ax [2241])
                (minus:DI (reg:DI 0 ax [2241])
                    (reg:DI 1 dx [orig:712 _626 ] [712])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":463 278 {*subdi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:712 _626 ] [712])
            (const_int 15 [0xf]))
        (nil)))
(insn 2263 2262 2265 151 (parallel [
            (set (reg:DI 0 ax [2243])
                (ashift:DI (reg:DI 0 ax [2241])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":463 551 {*ashldi3_1}
     (nil))
(insn 2265 2263 2266 151 (set (reg:DI 1 dx [orig:713 _627 ] [713])
        (reg:DI 0 ax [2241])) "ETAFLD2.f":463 85 {*movdi_internal}
     (nil))
(insn 2266 2265 2267 151 (set (reg:SI 0 ax [orig:714 l.90_628 ] [714])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":463 86 {*movsi_internal}
     (nil))
(insn 2267 2266 2268 151 (set (reg:DI 0 ax [orig:715 _629 ] [715])
        (sign_extend:DI (reg:SI 0 ax [orig:714 l.90_628 ] [714]))) "ETAFLD2.f":463 149 {*extendsidi2_rex64}
     (nil))
(insn 2268 2267 2269 151 (parallel [
            (set (reg:DI 0 ax [orig:716 _630 ] [716])
                (plus:DI (reg:DI 0 ax [orig:715 _629 ] [715])
                    (reg:DI 1 dx [orig:713 _627 ] [713])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":463 222 {*adddi_1}
     (nil))
(insn 2269 2268 2270 151 (parallel [
            (set (reg:DI 0 ax [orig:717 _631 ] [717])
                (plus:DI (reg:DI 0 ax [orig:716 _630 ] [716])
                    (const_int -61 [0xffffffffffffffc3])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":463 222 {*adddi_1}
     (nil))
(insn 2270 2269 2271 151 (parallel [
            (set (reg:DI 0 ax [2244])
                (plus:DI (reg:DI 0 ax [orig:717 _631 ] [717])
                    (const_int 1404 [0x57c])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":463 222 {*adddi_1}
     (nil))
(insn 2271 2270 2272 151 (set (reg:SI 0 ax [orig:718 _632 ] [718])
        (mem:SI (plus:DI (mult:DI (reg:DI 0 ax [2244])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)) [1 rqstfld.lvls S4 A32])) "ETAFLD2.f":463 86 {*movsi_internal}
     (nil))
(insn 2272 2271 2273 151 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:718 _632 ] [718])
            (const_int 0 [0]))) "ETAFLD2.f":463 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 2273 2272 2274 151 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 2292)
            (pc))) "ETAFLD2.f":463 682 {*jcc}
     (nil)
 -> 2292)
;;  succ:       153
;;              152 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 152, loop depth 0, maybe hot
;;  prev block 151, next block 153, flags: (RTL, MODIFIED)
;;  pred:       151 (FALLTHRU)
;; bb 152 artificial_defs: { }
;; bb 152 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 719 720 721 722 723 724 725 726 2245 2246 2247 2248
(note 2274 2273 2275 152 [bb 152] NOTE_INSN_BASIC_BLOCK)
(insn 2275 2274 2276 152 (set (reg:SI 0 ax [orig:719 _633 ] [719])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 44 [0x2c]))) [1 rqstfld.iget+28 S4 A32])) "ETAFLD2.f":463 86 {*movsi_internal}
     (nil))
(insn 2276 2275 2277 152 (set (reg:DI 1 dx [orig:720 _634 ] [720])
        (sign_extend:DI (reg:SI 0 ax [orig:719 _633 ] [719]))) "ETAFLD2.f":463 149 {*extendsidi2_rex64}
     (nil))
(insn 2277 2276 2278 152 (set (reg:DI 0 ax [2245])
        (reg:DI 1 dx [orig:720 _634 ] [720])) "ETAFLD2.f":463 85 {*movdi_internal}
     (nil))
(insn 2278 2277 2280 152 (parallel [
            (set (reg:DI 0 ax [2246])
                (ashift:DI (reg:DI 0 ax [2245])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":463 551 {*ashldi3_1}
     (nil))
(insn 2280 2278 2281 152 (parallel [
            (set (reg:DI 0 ax [2245])
                (minus:DI (reg:DI 0 ax [2245])
                    (reg:DI 1 dx [orig:720 _634 ] [720])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":463 278 {*subdi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:720 _634 ] [720])
            (const_int 15 [0xf]))
        (nil)))
(insn 2281 2280 2283 152 (parallel [
            (set (reg:DI 0 ax [2247])
                (ashift:DI (reg:DI 0 ax [2245])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":463 551 {*ashldi3_1}
     (nil))
(insn 2283 2281 2284 152 (set (reg:DI 1 dx [orig:721 _635 ] [721])
        (reg:DI 0 ax [2245])) "ETAFLD2.f":463 85 {*movdi_internal}
     (nil))
(insn 2284 2283 2285 152 (set (reg:SI 0 ax [orig:722 l.91_636 ] [722])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":463 86 {*movsi_internal}
     (nil))
(insn 2285 2284 2286 152 (set (reg:DI 0 ax [orig:723 _637 ] [723])
        (sign_extend:DI (reg:SI 0 ax [orig:722 l.91_636 ] [722]))) "ETAFLD2.f":463 149 {*extendsidi2_rex64}
     (nil))
(insn 2286 2285 2287 152 (parallel [
            (set (reg:DI 0 ax [orig:724 _638 ] [724])
                (plus:DI (reg:DI 0 ax [orig:723 _637 ] [723])
                    (reg:DI 1 dx [orig:721 _635 ] [721])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":463 222 {*adddi_1}
     (nil))
(insn 2287 2286 2288 152 (parallel [
            (set (reg:DI 0 ax [orig:725 _639 ] [725])
                (plus:DI (reg:DI 0 ax [orig:724 _638 ] [724])
                    (const_int -61 [0xffffffffffffffc3])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":463 222 {*adddi_1}
     (nil))
(insn 2288 2287 2289 152 (parallel [
            (set (reg:DI 0 ax [2248])
                (plus:DI (reg:DI 0 ax [orig:725 _639 ] [725])
                    (const_int 1404 [0x57c])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":463 222 {*adddi_1}
     (nil))
(insn 2289 2288 2290 152 (set (reg:SI 0 ax [orig:726 _640 ] [726])
        (mem:SI (plus:DI (mult:DI (reg:DI 0 ax [2248])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)) [1 rqstfld.lvls S4 A32])) "ETAFLD2.f":463 86 {*movsi_internal}
     (nil))
(insn 2290 2289 2291 152 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:726 _640 ] [726])
            (const_int 0 [0]))) "ETAFLD2.f":463 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 2291 2290 2292 152 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 2421)
            (pc))) "ETAFLD2.f":463 682 {*jcc}
     (nil)
 -> 2421)
;;  succ:       153 (FALLTHRU)
;;              161
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 153, loop depth 0, maybe hot
;;  prev block 152, next block 154, flags: (RTL, MODIFIED)
;;  pred:       151
;;              152 (FALLTHRU)
;; bb 153 artificial_defs: { }
;; bb 153 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 727 728 729 730 731 732 733 734 735 736 737 738 739 740 741 742 743 744 2249 2250 2251 2252 2253 2254 2255 2256 2257 2258 2259 2260 2261 2262 2263 2264 2265
(code_label 2292 2291 2293 153 78 (nil) [1 uses])
(note 2293 2292 2294 153 [bb 153] NOTE_INSN_BASIC_BLOCK)
(insn 2294 2293 2295 153 (set (reg:SI 0 ax [orig:727 _641 ] [727])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 40 [0x28]))) [1 rqstfld.iget+24 S4 A64])) "ETAFLD2.f":464 86 {*movsi_internal}
     (nil))
(insn 2295 2294 2296 153 (set (reg:DI 1 dx [orig:728 _642 ] [728])
        (sign_extend:DI (reg:SI 0 ax [orig:727 _641 ] [727]))) "ETAFLD2.f":464 149 {*extendsidi2_rex64}
     (nil))
(insn 2296 2295 2297 153 (set (reg:DI 0 ax [2249])
        (reg:DI 1 dx [orig:728 _642 ] [728])) "ETAFLD2.f":464 85 {*movdi_internal}
     (nil))
(insn 2297 2296 2299 153 (parallel [
            (set (reg:DI 0 ax [2250])
                (ashift:DI (reg:DI 0 ax [2249])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":464 551 {*ashldi3_1}
     (nil))
(insn 2299 2297 2300 153 (parallel [
            (set (reg:DI 0 ax [2249])
                (minus:DI (reg:DI 0 ax [2249])
                    (reg:DI 1 dx [orig:728 _642 ] [728])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":464 278 {*subdi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:728 _642 ] [728])
            (const_int 15 [0xf]))
        (nil)))
(insn 2300 2299 2302 153 (parallel [
            (set (reg:DI 0 ax [2251])
                (ashift:DI (reg:DI 0 ax [2249])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":464 551 {*ashldi3_1}
     (nil))
(insn 2302 2300 2303 153 (set (reg:DI 1 dx [orig:729 _643 ] [729])
        (reg:DI 0 ax [2249])) "ETAFLD2.f":464 85 {*movdi_internal}
     (nil))
(insn 2303 2302 2304 153 (set (reg:SI 0 ax [orig:730 l.92_644 ] [730])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":464 86 {*movsi_internal}
     (nil))
(insn 2304 2303 2305 153 (set (reg:DI 0 ax [orig:731 _645 ] [731])
        (sign_extend:DI (reg:SI 0 ax [orig:730 l.92_644 ] [730]))) "ETAFLD2.f":464 149 {*extendsidi2_rex64}
     (nil))
(insn 2305 2304 2306 153 (parallel [
            (set (reg:DI 0 ax [orig:732 _646 ] [732])
                (plus:DI (reg:DI 0 ax [orig:731 _645 ] [731])
                    (reg:DI 1 dx [orig:729 _643 ] [729])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":464 222 {*adddi_1}
     (nil))
(insn 2306 2305 2307 153 (parallel [
            (set (reg:DI 0 ax [orig:733 _647 ] [733])
                (plus:DI (reg:DI 0 ax [orig:732 _646 ] [732])
                    (const_int -61 [0xffffffffffffffc3])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":464 222 {*adddi_1}
     (nil))
(insn 2307 2306 2308 153 (parallel [
            (set (reg:DI 0 ax [2252])
                (plus:DI (reg:DI 0 ax [orig:733 _647 ] [733])
                    (const_int 1404 [0x57c])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":464 222 {*adddi_1}
     (nil))
(insn 2308 2307 2309 153 (set (reg:SI 0 ax [orig:734 _648 ] [734])
        (mem:SI (plus:DI (mult:DI (reg:DI 0 ax [2252])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)) [1 rqstfld.lvls S4 A32])) "ETAFLD2.f":464 86 {*movsi_internal}
     (nil))
(insn 2309 2308 2310 153 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -268 [0xfffffffffffffef4])) [1 itype+0 S4 A32])
        (reg:SI 0 ax [orig:734 _648 ] [734])) "ETAFLD2.f":464 86 {*movsi_internal}
     (nil))
(insn 2310 2309 2311 153 (parallel [
            (set (reg:DI 1 dx [2253])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -272 [0xfffffffffffffef0])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":465 222 {*adddi_1}
     (nil))
(insn 2311 2310 2312 153 (parallel [
            (set (reg:DI 0 ax [2254])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -268 [0xfffffffffffffef4])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":465 222 {*adddi_1}
     (nil))
(insn 2312 2311 2313 153 (set (reg:DI 37 r8)
        (symbol_ref:DI ("equiv.3.4378") [flags 0x202]  <var_decl 0x7f9828263750 equiv.3>)) "ETAFLD2.f":465 85 {*movdi_internal}
     (nil))
(insn 2313 2312 2315 153 (set (reg:DI 2 cx)
        (const:DI (plus:DI (symbol_ref:DI ("loops_") [flags 0x202]  <var_decl 0x7f9828246c60 loops>)
                (const_int 128204 [0x1f4cc])))) "ETAFLD2.f":465 85 {*movdi_internal}
     (nil))
(insn 2315 2313 2316 153 (set (reg:DI 4 si)
        (reg:DI 0 ax [2254])) "ETAFLD2.f":465 85 {*movdi_internal}
     (nil))
(insn 2316 2315 2317 153 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7f982825bcf0 vrbls>)
                (const_int 355572 [0x56cf4])))) "ETAFLD2.f":465 85 {*movdi_internal}
     (nil))
(insn 2317 2316 2318 153 (set (reg:QI 0 ax)
        (const_int 0 [0])) "ETAFLD2.f":465 88 {*movqi_internal}
     (nil))
(call_insn 2318 2317 2319 153 (call (mem:QI (symbol_ref:DI ("netal_") [flags 0x41]  <function_decl 0x7f9828228a00 netal>) [0 netal S1 A8])
        (const_int 0 [0])) "ETAFLD2.f":465 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (nil))))))))
(insn 2319 2318 2320 153 (set (reg:SI 0 ax [orig:735 _649 ] [735])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 44 [0x2c]))) [1 rqstfld.iget+28 S4 A32])) "ETAFLD2.f":466 86 {*movsi_internal}
     (nil))
(insn 2320 2319 2321 153 (set (reg:DI 1 dx [orig:736 _650 ] [736])
        (sign_extend:DI (reg:SI 0 ax [orig:735 _649 ] [735]))) "ETAFLD2.f":466 149 {*extendsidi2_rex64}
     (nil))
(insn 2321 2320 2322 153 (set (reg:DI 0 ax [2255])
        (reg:DI 1 dx [orig:736 _650 ] [736])) "ETAFLD2.f":466 85 {*movdi_internal}
     (nil))
(insn 2322 2321 2324 153 (parallel [
            (set (reg:DI 0 ax [2256])
                (ashift:DI (reg:DI 0 ax [2255])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":466 551 {*ashldi3_1}
     (nil))
(insn 2324 2322 2325 153 (parallel [
            (set (reg:DI 0 ax [2255])
                (minus:DI (reg:DI 0 ax [2255])
                    (reg:DI 1 dx [orig:736 _650 ] [736])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":466 278 {*subdi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:736 _650 ] [736])
            (const_int 15 [0xf]))
        (nil)))
(insn 2325 2324 2327 153 (parallel [
            (set (reg:DI 0 ax [2257])
                (ashift:DI (reg:DI 0 ax [2255])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":466 551 {*ashldi3_1}
     (nil))
(insn 2327 2325 2328 153 (set (reg:DI 1 dx [orig:737 _651 ] [737])
        (reg:DI 0 ax [2255])) "ETAFLD2.f":466 85 {*movdi_internal}
     (nil))
(insn 2328 2327 2329 153 (set (reg:SI 0 ax [orig:738 l.93_652 ] [738])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":466 86 {*movsi_internal}
     (nil))
(insn 2329 2328 2330 153 (set (reg:DI 0 ax [orig:739 _653 ] [739])
        (sign_extend:DI (reg:SI 0 ax [orig:738 l.93_652 ] [738]))) "ETAFLD2.f":466 149 {*extendsidi2_rex64}
     (nil))
(insn 2330 2329 2331 153 (parallel [
            (set (reg:DI 0 ax [orig:740 _654 ] [740])
                (plus:DI (reg:DI 0 ax [orig:739 _653 ] [739])
                    (reg:DI 1 dx [orig:737 _651 ] [737])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":466 222 {*adddi_1}
     (nil))
(insn 2331 2330 2332 153 (parallel [
            (set (reg:DI 0 ax [orig:741 _655 ] [741])
                (plus:DI (reg:DI 0 ax [orig:740 _654 ] [740])
                    (const_int -61 [0xffffffffffffffc3])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":466 222 {*adddi_1}
     (nil))
(insn 2332 2331 2333 153 (parallel [
            (set (reg:DI 0 ax [2258])
                (plus:DI (reg:DI 0 ax [orig:741 _655 ] [741])
                    (const_int 1404 [0x57c])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":466 222 {*adddi_1}
     (nil))
(insn 2333 2332 2334 153 (set (reg:SI 0 ax [orig:742 _656 ] [742])
        (mem:SI (plus:DI (mult:DI (reg:DI 0 ax [2258])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)) [1 rqstfld.lvls S4 A32])) "ETAFLD2.f":466 86 {*movsi_internal}
     (nil))
(insn 2334 2333 2335 153 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -268 [0xfffffffffffffef4])) [1 itype+0 S4 A32])
        (reg:SI 0 ax [orig:742 _656 ] [742])) "ETAFLD2.f":466 86 {*movsi_internal}
     (nil))
(insn 2335 2334 2336 153 (parallel [
            (set (reg:DI 1 dx [2259])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -272 [0xfffffffffffffef0])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":467 222 {*adddi_1}
     (nil))
(insn 2336 2335 2337 153 (parallel [
            (set (reg:DI 0 ax [2260])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -268 [0xfffffffffffffef4])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":467 222 {*adddi_1}
     (nil))
(insn 2337 2336 2338 153 (set (reg:DI 37 r8)
        (symbol_ref:DI ("equiv.2.4368") [flags 0x202]  <var_decl 0x7f9828263510 equiv.2>)) "ETAFLD2.f":467 85 {*movdi_internal}
     (nil))
(insn 2338 2337 2340 153 (set (reg:DI 2 cx)
        (const:DI (plus:DI (symbol_ref:DI ("loops_") [flags 0x202]  <var_decl 0x7f9828246c60 loops>)
                (const_int 128204 [0x1f4cc])))) "ETAFLD2.f":467 85 {*movdi_internal}
     (nil))
(insn 2340 2338 2341 153 (set (reg:DI 4 si)
        (reg:DI 0 ax [2260])) "ETAFLD2.f":467 85 {*movdi_internal}
     (nil))
(insn 2341 2340 2342 153 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7f982825bcf0 vrbls>)
                (const_int 4859484 [0x4a265c])))) "ETAFLD2.f":467 85 {*movdi_internal}
     (nil))
(insn 2342 2341 2343 153 (set (reg:QI 0 ax)
        (const_int 0 [0])) "ETAFLD2.f":467 88 {*movqi_internal}
     (nil))
(call_insn 2343 2342 2344 153 (call (mem:QI (symbol_ref:DI ("netal_") [flags 0x41]  <function_decl 0x7f9828228a00 netal>) [0 netal S1 A8])
        (const_int 0 [0])) "ETAFLD2.f":467 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (nil))))))))
(insn 2344 2343 2345 153 (set (reg:DI 1 dx [2261])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [4 grid2+0 S8 A64])) "ETAFLD2.f":468 85 {*movdi_internal}
     (nil))
(insn 2345 2344 2346 153 (set (reg:DI 0 ax [2262])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "ETAFLD2.f":468 85 {*movdi_internal}
     (nil))
(insn 2346 2345 2347 153 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [11  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -832 [0xfffffffffffffcc0])) [11 jmout+0 S8 A64])) "ETAFLD2.f":468 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 2347 2346 2348 153 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [11  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -824 [0xfffffffffffffcc8])) [11 imout+0 S8 A64])) "ETAFLD2.f":468 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 2348 2347 2349 153 (set (reg:DI 38 r9)
        (reg:DI 1 dx [2261])) "ETAFLD2.f":468 85 {*movdi_internal}
     (nil))
(insn 2349 2348 2350 153 (set (reg:DI 37 r8)
        (reg:DI 0 ax [2262])) "ETAFLD2.f":468 85 {*movdi_internal}
     (nil))
(insn 2350 2349 2351 153 (set (reg:DI 2 cx)
        (symbol_ref:DI ("equiv.2.4368") [flags 0x202]  <var_decl 0x7f9828263510 equiv.2>)) "ETAFLD2.f":468 85 {*movdi_internal}
     (nil))
(insn 2351 2350 2352 153 (set (reg:DI 1 dx)
        (symbol_ref:DI ("equiv.3.4378") [flags 0x202]  <var_decl 0x7f9828263750 equiv.3>)) "ETAFLD2.f":468 85 {*movdi_internal}
     (nil))
(insn 2352 2351 2353 153 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC37") [flags 0x2]  <var_decl 0x7f9827f94ea0 *.LC37>)) "ETAFLD2.f":468 85 {*movdi_internal}
     (nil))
(insn 2353 2352 2354 153 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC38") [flags 0x2]  <var_decl 0x7f9827f94f30 *.LC38>)) "ETAFLD2.f":468 85 {*movdi_internal}
     (nil))
(insn 2354 2353 2355 153 (set (reg:QI 0 ax)
        (const_int 0 [0])) "ETAFLD2.f":468 88 {*movqi_internal}
     (nil))
(call_insn 2355 2354 2356 153 (call (mem:QI (symbol_ref:DI ("e2out_") [flags 0x41]  <function_decl 0x7f9828228600 e2out>) [0 e2out S1 A8])
        (const_int 16 [0x10])) "ETAFLD2.f":468 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
(insn 2356 2355 2357 153 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":468 222 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 2357 2356 2358 153 (set (reg/f:DI 1 dx [2263])
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                (const_int 55216 [0xd7b0])))) "ETAFLD2.f":469 85 {*movdi_internal}
     (nil))
(insn 2358 2357 2359 153 (set (reg:DI 0 ax [2264])
        (const_int 0 [0])) "ETAFLD2.f":469 85 {*movdi_internal}
     (nil))
(insn 2359 2358 5867 153 (set (reg:DI 2 cx [2265])
        (const_int 12 [0xc])) "ETAFLD2.f":469 85 {*movdi_internal}
     (nil))
(insn 5867 2359 2360 153 (set (reg/f:DI 5 di [2263])
        (reg/f:DI 1 dx [2263])) "ETAFLD2.f":469 85 {*movdi_internal}
     (nil))
(insn 2360 5867 5868 153 (parallel [
            (set (reg:DI 2 cx [2265])
                (const_int 0 [0]))
            (set (reg/f:DI 5 di [2263])
                (plus:DI (ashift:DI (reg:DI 2 cx [2265])
                        (const_int 3 [0x3]))
                    (reg/f:DI 5 di [2263])))
            (set (mem/c:BLK (reg/f:DI 5 di [2263]) [1 rqstfld.id+0 S96 A128])
                (const_int 0 [0]))
            (use (reg:DI 0 ax [2264]))
            (use (reg:DI 2 cx [2265]))
        ]) "ETAFLD2.f":469 984 {*rep_stosdi_rex64}
     (nil))
(insn 5868 2360 2361 153 (set (reg/f:DI 1 dx [2263])
        (reg/f:DI 5 di [2263])) "ETAFLD2.f":469 85 {*movdi_internal}
     (nil))
(insn 2361 5868 2362 153 (set (mem/c:SI (reg/f:DI 1 dx [2263]) [1 rqstfld.id+96 S4 A128])
        (reg:SI 0 ax [2264])) "ETAFLD2.f":469 86 {*movsi_internal}
     (nil))
(insn 2362 2361 2363 153 (parallel [
            (set (reg/f:DI 1 dx [2263])
                (plus:DI (reg/f:DI 1 dx [2263])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":469 222 {*adddi_1}
     (nil))
(insn 2363 2362 2364 153 (set (reg:SI 0 ax [orig:743 l.94_657 ] [743])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":470 86 {*movsi_internal}
     (nil))
(insn 2364 2363 2365 153 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -276 [0xfffffffffffffeec])) [1 lyr+0 S4 A32])
        (reg:SI 0 ax [orig:743 l.94_657 ] [743])) "ETAFLD2.f":470 86 {*movsi_internal}
     (nil))
(insn 2365 2364 2366 153 (set (reg:SI 0 ax [orig:744 itype.95_658 ] [744])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -268 [0xfffffffffffffef4])) [1 itype+0 S4 A32])) "ETAFLD2.f":471 86 {*movsi_internal}
     (nil))
(insn 2366 2365 2367 153 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [orig:744 itype.95_658 ] [744])
            (const_int 1 [0x1]))) "ETAFLD2.f":471 11 {*cmpsi_1}
     (nil))
(jump_insn 2367 2366 2368 153 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 2370)
            (pc))) "ETAFLD2.f":471 682 {*jcc}
     (nil)
 -> 2370)
;;  succ:       154 (FALLTHRU)
;;              155
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 154, loop depth 0, maybe hot
;;  prev block 153, next block 155, flags: (RTL, MODIFIED)
;;  pred:       153 (FALLTHRU)
;; bb 154 artificial_defs: { }
;; bb 154 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 2368 2367 2369 154 [bb 154] NOTE_INSN_BASIC_BLOCK)
(insn 2369 2368 2370 154 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 55248 [0xd7d0]))) [1 rqstfld.id+32 S4 A128])
        (const_int 109 [0x6d])) "ETAFLD2.f":471 86 {*movsi_internal}
     (nil))
;;  succ:       155 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 155, loop depth 0, maybe hot
;;  prev block 154, next block 156, flags: (RTL, MODIFIED)
;;  pred:       153
;;              154 (FALLTHRU)
;; bb 155 artificial_defs: { }
;; bb 155 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 745
(code_label 2370 2369 2371 155 79 (nil) [1 uses])
(note 2371 2370 2372 155 [bb 155] NOTE_INSN_BASIC_BLOCK)
(insn 2372 2371 2373 155 (set (reg:SI 0 ax [orig:745 _659 ] [745])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 40 [0x28]))) [1 rqstfld.iget+24 S4 A64])) "ETAFLD2.f":472 86 {*movsi_internal}
     (nil))
(insn 2373 2372 2374 155 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:745 _659 ] [745])
            (const_int 0 [0]))) "ETAFLD2.f":472 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 2374 2373 2375 155 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 2388)
            (pc))) "ETAFLD2.f":472 682 {*jcc}
     (nil)
 -> 2388)
;;  succ:       156 (FALLTHRU)
;;              157
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 156, loop depth 0, maybe hot
;;  prev block 155, next block 157, flags: (RTL, MODIFIED)
;;  pred:       155 (FALLTHRU)
;; bb 156 artificial_defs: { }
;; bb 156 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 2266 2267 2268 2269
(note 2375 2374 2376 156 [bb 156] NOTE_INSN_BASIC_BLOCK)
(insn 2376 2375 2377 156 (set (reg:DI 4 si [2266])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -832 [0xfffffffffffffcc0])) [11 jmout+0 S8 A64])) "ETAFLD2.f":473 85 {*movdi_internal}
     (nil))
(insn 2377 2376 2378 156 (set (reg:DI 2 cx [2267])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -824 [0xfffffffffffffcc8])) [11 imout+0 S8 A64])) "ETAFLD2.f":473 85 {*movdi_internal}
     (nil))
(insn 2378 2377 2379 156 (set (reg:DI 1 dx [2268])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "ETAFLD2.f":473 85 {*movdi_internal}
     (nil))
(insn 2379 2378 2380 156 (parallel [
            (set (reg:DI 0 ax [2269])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -276 [0xfffffffffffffeec])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":473 222 {*adddi_1}
     (nil))
(insn 2380 2379 2381 156 (set (reg:DI 38 r9)
        (reg:DI 4 si [2266])) "ETAFLD2.f":473 85 {*movdi_internal}
     (nil))
(insn 2381 2380 2382 156 (set (reg:DI 37 r8)
        (reg:DI 2 cx [2267])) "ETAFLD2.f":473 85 {*movdi_internal}
     (nil))
(insn 2382 2381 2383 156 (set (reg:DI 2 cx)
        (reg:DI 1 dx [2268])) "ETAFLD2.f":473 85 {*movdi_internal}
     (nil))
(insn 2383 2382 2384 156 (set (reg:DI 1 dx)
        (reg:DI 0 ax [2269])) "ETAFLD2.f":473 85 {*movdi_internal}
     (nil))
(insn 2384 2383 2385 156 (set (reg:DI 4 si)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                (const_int 40 [0x28])))) "ETAFLD2.f":473 85 {*movdi_internal}
     (nil))
(insn 2385 2384 2386 156 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                (const_int 4 [0x4])))) "ETAFLD2.f":473 85 {*movdi_internal}
     (nil))
(insn 2386 2385 2387 156 (set (reg:QI 0 ax)
        (const_int 0 [0])) "ETAFLD2.f":473 88 {*movqi_internal}
     (nil))
(call_insn 2387 2386 2388 156 (call (mem:QI (symbol_ref:DI ("output_") [flags 0x41]  <function_decl 0x7f9828228700 output>) [0 output S1 A8])
        (const_int 0 [0])) "ETAFLD2.f":473 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
;;  succ:       157 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 157, loop depth 0, maybe hot
;;  prev block 156, next block 158, flags: (RTL, MODIFIED)
;;  pred:       155
;;              156 (FALLTHRU)
;; bb 157 artificial_defs: { }
;; bb 157 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 746 747 2270 2271 2272
(code_label 2388 2387 2389 157 80 (nil) [1 uses])
(note 2389 2388 2390 157 [bb 157] NOTE_INSN_BASIC_BLOCK)
(insn 2390 2389 2391 157 (set (reg/f:DI 1 dx [2270])
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                (const_int 55216 [0xd7b0])))) "ETAFLD2.f":474 85 {*movdi_internal}
     (nil))
(insn 2391 2390 2392 157 (set (reg:DI 0 ax [2271])
        (const_int 0 [0])) "ETAFLD2.f":474 85 {*movdi_internal}
     (nil))
(insn 2392 2391 5869 157 (set (reg:DI 2 cx [2272])
        (const_int 12 [0xc])) "ETAFLD2.f":474 85 {*movdi_internal}
     (nil))
(insn 5869 2392 2393 157 (set (reg/f:DI 5 di [2270])
        (reg/f:DI 1 dx [2270])) "ETAFLD2.f":474 85 {*movdi_internal}
     (nil))
(insn 2393 5869 5870 157 (parallel [
            (set (reg:DI 2 cx [2272])
                (const_int 0 [0]))
            (set (reg/f:DI 5 di [2270])
                (plus:DI (ashift:DI (reg:DI 2 cx [2272])
                        (const_int 3 [0x3]))
                    (reg/f:DI 5 di [2270])))
            (set (mem/c:BLK (reg/f:DI 5 di [2270]) [1 rqstfld.id+0 S96 A128])
                (const_int 0 [0]))
            (use (reg:DI 0 ax [2271]))
            (use (reg:DI 2 cx [2272]))
        ]) "ETAFLD2.f":474 984 {*rep_stosdi_rex64}
     (nil))
(insn 5870 2393 2394 157 (set (reg/f:DI 1 dx [2270])
        (reg/f:DI 5 di [2270])) "ETAFLD2.f":474 85 {*movdi_internal}
     (nil))
(insn 2394 5870 2395 157 (set (mem/c:SI (reg/f:DI 1 dx [2270]) [1 rqstfld.id+96 S4 A128])
        (reg:SI 0 ax [2271])) "ETAFLD2.f":474 86 {*movsi_internal}
     (nil))
(insn 2395 2394 2396 157 (parallel [
            (set (reg/f:DI 1 dx [2270])
                (plus:DI (reg/f:DI 1 dx [2270])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":474 222 {*adddi_1}
     (nil))
(insn 2396 2395 2397 157 (set (reg:SI 0 ax [orig:746 l.96_660 ] [746])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":475 86 {*movsi_internal}
     (nil))
(insn 2397 2396 2398 157 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -276 [0xfffffffffffffeec])) [1 lyr+0 S4 A32])
        (reg:SI 0 ax [orig:746 l.96_660 ] [746])) "ETAFLD2.f":475 86 {*movsi_internal}
     (nil))
(insn 2398 2397 2399 157 (set (reg:SI 0 ax [orig:747 itype.97_661 ] [747])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -268 [0xfffffffffffffef4])) [1 itype+0 S4 A32])) "ETAFLD2.f":476 86 {*movsi_internal}
     (nil))
(insn 2399 2398 2400 157 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [orig:747 itype.97_661 ] [747])
            (const_int 1 [0x1]))) "ETAFLD2.f":476 11 {*cmpsi_1}
     (nil))
(jump_insn 2400 2399 2401 157 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 2403)
            (pc))) "ETAFLD2.f":476 682 {*jcc}
     (nil)
 -> 2403)
;;  succ:       158 (FALLTHRU)
;;              159
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 158, loop depth 0, maybe hot
;;  prev block 157, next block 159, flags: (RTL, MODIFIED)
;;  pred:       157 (FALLTHRU)
;; bb 158 artificial_defs: { }
;; bb 158 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 2401 2400 2402 158 [bb 158] NOTE_INSN_BASIC_BLOCK)
(insn 2402 2401 2403 158 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 55248 [0xd7d0]))) [1 rqstfld.id+32 S4 A128])
        (const_int 109 [0x6d])) "ETAFLD2.f":476 86 {*movsi_internal}
     (nil))
;;  succ:       159 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 159, loop depth 0, maybe hot
;;  prev block 158, next block 160, flags: (RTL, MODIFIED)
;;  pred:       157
;;              158 (FALLTHRU)
;; bb 159 artificial_defs: { }
;; bb 159 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 748
(code_label 2403 2402 2404 159 81 (nil) [1 uses])
(note 2404 2403 2405 159 [bb 159] NOTE_INSN_BASIC_BLOCK)
(insn 2405 2404 2406 159 (set (reg:SI 0 ax [orig:748 _662 ] [748])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 44 [0x2c]))) [1 rqstfld.iget+28 S4 A32])) "ETAFLD2.f":477 86 {*movsi_internal}
     (nil))
(insn 2406 2405 2407 159 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:748 _662 ] [748])
            (const_int 0 [0]))) "ETAFLD2.f":477 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 2407 2406 2408 159 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 2421)
            (pc))) "ETAFLD2.f":477 682 {*jcc}
     (nil)
 -> 2421)
;;  succ:       160 (FALLTHRU)
;;              161
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 160, loop depth 0, maybe hot
;;  prev block 159, next block 161, flags: (RTL, MODIFIED)
;;  pred:       159 (FALLTHRU)
;; bb 160 artificial_defs: { }
;; bb 160 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 2273 2274 2275 2276
(note 2408 2407 2409 160 [bb 160] NOTE_INSN_BASIC_BLOCK)
(insn 2409 2408 2410 160 (set (reg:DI 4 si [2273])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -832 [0xfffffffffffffcc0])) [11 jmout+0 S8 A64])) "ETAFLD2.f":478 85 {*movdi_internal}
     (nil))
(insn 2410 2409 2411 160 (set (reg:DI 2 cx [2274])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -824 [0xfffffffffffffcc8])) [11 imout+0 S8 A64])) "ETAFLD2.f":478 85 {*movdi_internal}
     (nil))
(insn 2411 2410 2412 160 (set (reg:DI 1 dx [2275])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [4 grid2+0 S8 A64])) "ETAFLD2.f":478 85 {*movdi_internal}
     (nil))
(insn 2412 2411 2413 160 (parallel [
            (set (reg:DI 0 ax [2276])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -276 [0xfffffffffffffeec])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":478 222 {*adddi_1}
     (nil))
(insn 2413 2412 2414 160 (set (reg:DI 38 r9)
        (reg:DI 4 si [2273])) "ETAFLD2.f":478 85 {*movdi_internal}
     (nil))
(insn 2414 2413 2415 160 (set (reg:DI 37 r8)
        (reg:DI 2 cx [2274])) "ETAFLD2.f":478 85 {*movdi_internal}
     (nil))
(insn 2415 2414 2416 160 (set (reg:DI 2 cx)
        (reg:DI 1 dx [2275])) "ETAFLD2.f":478 85 {*movdi_internal}
     (nil))
(insn 2416 2415 2417 160 (set (reg:DI 1 dx)
        (reg:DI 0 ax [2276])) "ETAFLD2.f":478 85 {*movdi_internal}
     (nil))
(insn 2417 2416 2418 160 (set (reg:DI 4 si)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                (const_int 44 [0x2c])))) "ETAFLD2.f":478 85 {*movdi_internal}
     (nil))
(insn 2418 2417 2419 160 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                (const_int 4 [0x4])))) "ETAFLD2.f":478 85 {*movdi_internal}
     (nil))
(insn 2419 2418 2420 160 (set (reg:QI 0 ax)
        (const_int 0 [0])) "ETAFLD2.f":478 88 {*movqi_internal}
     (nil))
(call_insn 2420 2419 2421 160 (call (mem:QI (symbol_ref:DI ("output_") [flags 0x41]  <function_decl 0x7f9828228700 output>) [0 output S1 A8])
        (const_int 0 [0])) "ETAFLD2.f":478 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
;;  succ:       161 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 161, loop depth 0, maybe hot
;;  prev block 160, next block 162, flags: (RTL, MODIFIED)
;;  pred:       150
;;              152
;;              159
;;              160 (FALLTHRU)
;; bb 161 artificial_defs: { }
;; bb 161 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 749
(code_label 2421 2420 2422 161 77 (nil) [3 uses])
(note 2422 2421 2423 161 [bb 161] NOTE_INSN_BASIC_BLOCK)
(insn 2423 2422 2424 161 (set (reg:SI 0 ax [orig:749 _663 ] [749])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 48 [0x30]))) [1 rqstfld.iget+32 S4 A128])) "ETAFLD2.f":483 86 {*movsi_internal}
     (nil))
(insn 2424 2423 2425 161 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:749 _663 ] [749])
            (const_int 0 [0]))) "ETAFLD2.f":483 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 2425 2424 2426 161 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 2510)
            (pc))) "ETAFLD2.f":483 682 {*jcc}
     (nil)
 -> 2510)
;;  succ:       162 (FALLTHRU)
;;              166
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 162, loop depth 0, maybe hot
;;  prev block 161, next block 163, flags: (RTL, MODIFIED)
;;  pred:       161 (FALLTHRU)
;; bb 162 artificial_defs: { }
;; bb 162 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 750 751 752 753 754 755 756 757 2277 2278 2279 2280
(note 2426 2425 2427 162 [bb 162] NOTE_INSN_BASIC_BLOCK)
(insn 2427 2426 2428 162 (set (reg:SI 0 ax [orig:750 _664 ] [750])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 48 [0x30]))) [1 rqstfld.iget+32 S4 A128])) "ETAFLD2.f":484 86 {*movsi_internal}
     (nil))
(insn 2428 2427 2429 162 (set (reg:DI 1 dx [orig:751 _665 ] [751])
        (sign_extend:DI (reg:SI 0 ax [orig:750 _664 ] [750]))) "ETAFLD2.f":484 149 {*extendsidi2_rex64}
     (nil))
(insn 2429 2428 2430 162 (set (reg:DI 0 ax [2277])
        (reg:DI 1 dx [orig:751 _665 ] [751])) "ETAFLD2.f":484 85 {*movdi_internal}
     (nil))
(insn 2430 2429 2432 162 (parallel [
            (set (reg:DI 0 ax [2278])
                (ashift:DI (reg:DI 0 ax [2277])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":484 551 {*ashldi3_1}
     (nil))
(insn 2432 2430 2433 162 (parallel [
            (set (reg:DI 0 ax [2277])
                (minus:DI (reg:DI 0 ax [2277])
                    (reg:DI 1 dx [orig:751 _665 ] [751])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":484 278 {*subdi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:751 _665 ] [751])
            (const_int 15 [0xf]))
        (nil)))
(insn 2433 2432 2435 162 (parallel [
            (set (reg:DI 0 ax [2279])
                (ashift:DI (reg:DI 0 ax [2277])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":484 551 {*ashldi3_1}
     (nil))
(insn 2435 2433 2436 162 (set (reg:DI 1 dx [orig:752 _666 ] [752])
        (reg:DI 0 ax [2277])) "ETAFLD2.f":484 85 {*movdi_internal}
     (nil))
(insn 2436 2435 2437 162 (set (reg:SI 0 ax [orig:753 l.98_667 ] [753])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":484 86 {*movsi_internal}
     (nil))
(insn 2437 2436 2438 162 (set (reg:DI 0 ax [orig:754 _668 ] [754])
        (sign_extend:DI (reg:SI 0 ax [orig:753 l.98_667 ] [753]))) "ETAFLD2.f":484 149 {*extendsidi2_rex64}
     (nil))
(insn 2438 2437 2439 162 (parallel [
            (set (reg:DI 0 ax [orig:755 _669 ] [755])
                (plus:DI (reg:DI 0 ax [orig:754 _668 ] [754])
                    (reg:DI 1 dx [orig:752 _666 ] [752])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":484 222 {*adddi_1}
     (nil))
(insn 2439 2438 2440 162 (parallel [
            (set (reg:DI 0 ax [orig:756 _670 ] [756])
                (plus:DI (reg:DI 0 ax [orig:755 _669 ] [755])
                    (const_int -61 [0xffffffffffffffc3])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":484 222 {*adddi_1}
     (nil))
(insn 2440 2439 2441 162 (parallel [
            (set (reg:DI 0 ax [2280])
                (plus:DI (reg:DI 0 ax [orig:756 _670 ] [756])
                    (const_int 1404 [0x57c])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":484 222 {*adddi_1}
     (nil))
(insn 2441 2440 2442 162 (set (reg:SI 0 ax [orig:757 _671 ] [757])
        (mem:SI (plus:DI (mult:DI (reg:DI 0 ax [2280])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)) [1 rqstfld.lvls S4 A32])) "ETAFLD2.f":484 86 {*movsi_internal}
     (nil))
(insn 2442 2441 2443 162 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:757 _671 ] [757])
            (const_int 0 [0]))) "ETAFLD2.f":484 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 2443 2442 2444 162 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 2510)
            (pc))) "ETAFLD2.f":484 682 {*jcc}
     (nil)
 -> 2510)
;;  succ:       163 (FALLTHRU)
;;              166
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 163, loop depth 0, maybe hot
;;  prev block 162, next block 164, flags: (RTL, MODIFIED)
;;  pred:       162 (FALLTHRU)
;; bb 163 artificial_defs: { }
;; bb 163 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 758 759 760 761 762 763 764 765 766 767 2281 2282 2283 2284 2285 2286 2287 2288 2289 2290 2291
(note 2444 2443 2445 163 [bb 163] NOTE_INSN_BASIC_BLOCK)
(insn 2445 2444 2446 163 (set (reg:SI 0 ax [orig:758 _672 ] [758])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 48 [0x30]))) [1 rqstfld.iget+32 S4 A128])) "ETAFLD2.f":485 86 {*movsi_internal}
     (nil))
(insn 2446 2445 2447 163 (set (reg:DI 1 dx [orig:759 _673 ] [759])
        (sign_extend:DI (reg:SI 0 ax [orig:758 _672 ] [758]))) "ETAFLD2.f":485 149 {*extendsidi2_rex64}
     (nil))
(insn 2447 2446 2448 163 (set (reg:DI 0 ax [2281])
        (reg:DI 1 dx [orig:759 _673 ] [759])) "ETAFLD2.f":485 85 {*movdi_internal}
     (nil))
(insn 2448 2447 2450 163 (parallel [
            (set (reg:DI 0 ax [2282])
                (ashift:DI (reg:DI 0 ax [2281])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":485 551 {*ashldi3_1}
     (nil))
(insn 2450 2448 2451 163 (parallel [
            (set (reg:DI 0 ax [2281])
                (minus:DI (reg:DI 0 ax [2281])
                    (reg:DI 1 dx [orig:759 _673 ] [759])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":485 278 {*subdi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:759 _673 ] [759])
            (const_int 15 [0xf]))
        (nil)))
(insn 2451 2450 2453 163 (parallel [
            (set (reg:DI 0 ax [2283])
                (ashift:DI (reg:DI 0 ax [2281])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":485 551 {*ashldi3_1}
     (nil))
(insn 2453 2451 2454 163 (set (reg:DI 1 dx [orig:760 _674 ] [760])
        (reg:DI 0 ax [2281])) "ETAFLD2.f":485 85 {*movdi_internal}
     (nil))
(insn 2454 2453 2455 163 (set (reg:SI 0 ax [orig:761 l.99_675 ] [761])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":485 86 {*movsi_internal}
     (nil))
(insn 2455 2454 2456 163 (set (reg:DI 0 ax [orig:762 _676 ] [762])
        (sign_extend:DI (reg:SI 0 ax [orig:761 l.99_675 ] [761]))) "ETAFLD2.f":485 149 {*extendsidi2_rex64}
     (nil))
(insn 2456 2455 2457 163 (parallel [
            (set (reg:DI 0 ax [orig:763 _677 ] [763])
                (plus:DI (reg:DI 0 ax [orig:762 _676 ] [762])
                    (reg:DI 1 dx [orig:760 _674 ] [760])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":485 222 {*adddi_1}
     (nil))
(insn 2457 2456 2458 163 (parallel [
            (set (reg:DI 0 ax [orig:764 _678 ] [764])
                (plus:DI (reg:DI 0 ax [orig:763 _677 ] [763])
                    (const_int -61 [0xffffffffffffffc3])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":485 222 {*adddi_1}
     (nil))
(insn 2458 2457 2459 163 (parallel [
            (set (reg:DI 0 ax [2284])
                (plus:DI (reg:DI 0 ax [orig:764 _678 ] [764])
                    (const_int 1404 [0x57c])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":485 222 {*adddi_1}
     (nil))
(insn 2459 2458 2460 163 (set (reg:SI 0 ax [orig:765 _679 ] [765])
        (mem:SI (plus:DI (mult:DI (reg:DI 0 ax [2284])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)) [1 rqstfld.lvls S4 A32])) "ETAFLD2.f":485 86 {*movsi_internal}
     (nil))
(insn 2460 2459 2461 163 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -268 [0xfffffffffffffef4])) [1 itype+0 S4 A32])
        (reg:SI 0 ax [orig:765 _679 ] [765])) "ETAFLD2.f":485 86 {*movsi_internal}
     (nil))
(insn 2461 2460 2462 163 (parallel [
            (set (reg:DI 1 dx [2285])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -272 [0xfffffffffffffef0])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":486 222 {*adddi_1}
     (nil))
(insn 2462 2461 2463 163 (parallel [
            (set (reg:DI 0 ax [2286])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -268 [0xfffffffffffffef4])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":486 222 {*adddi_1}
     (nil))
(insn 2463 2462 2464 163 (set (reg:DI 37 r8)
        (symbol_ref:DI ("equiv.3.4378") [flags 0x202]  <var_decl 0x7f9828263750 equiv.3>)) "ETAFLD2.f":486 85 {*movdi_internal}
     (nil))
(insn 2464 2463 2466 163 (set (reg:DI 2 cx)
        (const:DI (plus:DI (symbol_ref:DI ("loops_") [flags 0x202]  <var_decl 0x7f9828246c60 loops>)
                (const_int 9680 [0x25d0])))) "ETAFLD2.f":486 85 {*movdi_internal}
     (nil))
(insn 2466 2464 2467 163 (set (reg:DI 4 si)
        (reg:DI 0 ax [2286])) "ETAFLD2.f":486 85 {*movdi_internal}
     (nil))
(insn 2467 2466 2468 163 (set (reg:DI 5 di)
        (symbol_ref:DI ("omgaot_") [flags 0x202]  <var_decl 0x7f982824f900 omgaot>)) "ETAFLD2.f":486 85 {*movdi_internal}
     (nil))
(insn 2468 2467 2469 163 (set (reg:QI 0 ax)
        (const_int 0 [0])) "ETAFLD2.f":486 88 {*movqi_internal}
     (nil))
(call_insn 2469 2468 2470 163 (call (mem:QI (symbol_ref:DI ("netal_") [flags 0x41]  <function_decl 0x7f9828228a00 netal>) [0 netal S1 A8])
        (const_int 0 [0])) "ETAFLD2.f":486 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (nil))))))))
(insn 2470 2469 2471 163 (set (reg:DI 1 dx [2287])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [4 grid2+0 S8 A64])) "ETAFLD2.f":487 85 {*movdi_internal}
     (nil))
(insn 2471 2470 2472 163 (set (reg:DI 0 ax [2288])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "ETAFLD2.f":487 85 {*movdi_internal}
     (nil))
(insn 2472 2471 2473 163 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [11  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -832 [0xfffffffffffffcc0])) [11 jmout+0 S8 A64])) "ETAFLD2.f":487 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 2473 2472 2474 163 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [11  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -824 [0xfffffffffffffcc8])) [11 imout+0 S8 A64])) "ETAFLD2.f":487 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 2474 2473 2475 163 (set (reg:DI 38 r9)
        (reg:DI 1 dx [2287])) "ETAFLD2.f":487 85 {*movdi_internal}
     (nil))
(insn 2475 2474 2476 163 (set (reg:DI 37 r8)
        (reg:DI 0 ax [2288])) "ETAFLD2.f":487 85 {*movdi_internal}
     (nil))
(insn 2476 2475 2477 163 (set (reg:DI 2 cx)
        (symbol_ref:DI ("equiv.2.4368") [flags 0x202]  <var_decl 0x7f9828263510 equiv.2>)) "ETAFLD2.f":487 85 {*movdi_internal}
     (nil))
(insn 2477 2476 2478 163 (set (reg:DI 1 dx)
        (symbol_ref:DI ("equiv.3.4378") [flags 0x202]  <var_decl 0x7f9828263750 equiv.3>)) "ETAFLD2.f":487 85 {*movdi_internal}
     (nil))
(insn 2478 2477 2479 163 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f9827f94240 *.LC3>)) "ETAFLD2.f":487 85 {*movdi_internal}
     (nil))
(insn 2479 2478 2480 163 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC39") [flags 0x2]  <var_decl 0x7f9827f94000 *.LC39>)) "ETAFLD2.f":487 85 {*movdi_internal}
     (nil))
(insn 2480 2479 2481 163 (set (reg:QI 0 ax)
        (const_int 0 [0])) "ETAFLD2.f":487 88 {*movqi_internal}
     (nil))
(call_insn 2481 2480 2482 163 (call (mem:QI (symbol_ref:DI ("e2out_") [flags 0x41]  <function_decl 0x7f9828228600 e2out>) [0 e2out S1 A8])
        (const_int 16 [0x10])) "ETAFLD2.f":487 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
(insn 2482 2481 2483 163 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":487 222 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 2483 2482 2484 163 (set (reg/f:DI 1 dx [2289])
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                (const_int 55216 [0xd7b0])))) "ETAFLD2.f":488 85 {*movdi_internal}
     (nil))
(insn 2484 2483 2485 163 (set (reg:DI 0 ax [2290])
        (const_int 0 [0])) "ETAFLD2.f":488 85 {*movdi_internal}
     (nil))
(insn 2485 2484 5871 163 (set (reg:DI 2 cx [2291])
        (const_int 12 [0xc])) "ETAFLD2.f":488 85 {*movdi_internal}
     (nil))
(insn 5871 2485 2486 163 (set (reg/f:DI 5 di [2289])
        (reg/f:DI 1 dx [2289])) "ETAFLD2.f":488 85 {*movdi_internal}
     (nil))
(insn 2486 5871 5872 163 (parallel [
            (set (reg:DI 2 cx [2291])
                (const_int 0 [0]))
            (set (reg/f:DI 5 di [2289])
                (plus:DI (ashift:DI (reg:DI 2 cx [2291])
                        (const_int 3 [0x3]))
                    (reg/f:DI 5 di [2289])))
            (set (mem/c:BLK (reg/f:DI 5 di [2289]) [1 rqstfld.id+0 S96 A128])
                (const_int 0 [0]))
            (use (reg:DI 0 ax [2290]))
            (use (reg:DI 2 cx [2291]))
        ]) "ETAFLD2.f":488 984 {*rep_stosdi_rex64}
     (nil))
(insn 5872 2486 2487 163 (set (reg/f:DI 1 dx [2289])
        (reg/f:DI 5 di [2289])) "ETAFLD2.f":488 85 {*movdi_internal}
     (nil))
(insn 2487 5872 2488 163 (set (mem/c:SI (reg/f:DI 1 dx [2289]) [1 rqstfld.id+96 S4 A128])
        (reg:SI 0 ax [2290])) "ETAFLD2.f":488 86 {*movsi_internal}
     (nil))
(insn 2488 2487 2489 163 (parallel [
            (set (reg/f:DI 1 dx [2289])
                (plus:DI (reg/f:DI 1 dx [2289])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":488 222 {*adddi_1}
     (nil))
(insn 2489 2488 2490 163 (set (reg:SI 0 ax [orig:766 l.100_680 ] [766])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":489 86 {*movsi_internal}
     (nil))
(insn 2490 2489 2491 163 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -276 [0xfffffffffffffeec])) [1 lyr+0 S4 A32])
        (reg:SI 0 ax [orig:766 l.100_680 ] [766])) "ETAFLD2.f":489 86 {*movsi_internal}
     (nil))
(insn 2491 2490 2492 163 (set (reg:SI 0 ax [orig:767 itype.101_681 ] [767])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -268 [0xfffffffffffffef4])) [1 itype+0 S4 A32])) "ETAFLD2.f":490 86 {*movsi_internal}
     (nil))
(insn 2492 2491 2493 163 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [orig:767 itype.101_681 ] [767])
            (const_int 1 [0x1]))) "ETAFLD2.f":490 11 {*cmpsi_1}
     (nil))
(jump_insn 2493 2492 2494 163 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 2496)
            (pc))) "ETAFLD2.f":490 682 {*jcc}
     (nil)
 -> 2496)
;;  succ:       164 (FALLTHRU)
;;              165
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 164, loop depth 0, maybe hot
;;  prev block 163, next block 165, flags: (RTL, MODIFIED)
;;  pred:       163 (FALLTHRU)
;; bb 164 artificial_defs: { }
;; bb 164 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 2494 2493 2495 164 [bb 164] NOTE_INSN_BASIC_BLOCK)
(insn 2495 2494 2496 164 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 55248 [0xd7d0]))) [1 rqstfld.id+32 S4 A128])
        (const_int 109 [0x6d])) "ETAFLD2.f":490 86 {*movsi_internal}
     (nil))
;;  succ:       165 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 165, loop depth 0, maybe hot
;;  prev block 164, next block 166, flags: (RTL, MODIFIED)
;;  pred:       163
;;              164 (FALLTHRU)
;; bb 165 artificial_defs: { }
;; bb 165 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 2292 2293 2294 2295
(code_label 2496 2495 2497 165 83 (nil) [1 uses])
(note 2497 2496 2498 165 [bb 165] NOTE_INSN_BASIC_BLOCK)
(insn 2498 2497 2499 165 (set (reg:DI 4 si [2292])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -832 [0xfffffffffffffcc0])) [11 jmout+0 S8 A64])) "ETAFLD2.f":491 85 {*movdi_internal}
     (nil))
(insn 2499 2498 2500 165 (set (reg:DI 2 cx [2293])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -824 [0xfffffffffffffcc8])) [11 imout+0 S8 A64])) "ETAFLD2.f":491 85 {*movdi_internal}
     (nil))
(insn 2500 2499 2501 165 (set (reg:DI 1 dx [2294])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "ETAFLD2.f":491 85 {*movdi_internal}
     (nil))
(insn 2501 2500 2502 165 (parallel [
            (set (reg:DI 0 ax [2295])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -276 [0xfffffffffffffeec])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":491 222 {*adddi_1}
     (nil))
(insn 2502 2501 2503 165 (set (reg:DI 38 r9)
        (reg:DI 4 si [2292])) "ETAFLD2.f":491 85 {*movdi_internal}
     (nil))
(insn 2503 2502 2504 165 (set (reg:DI 37 r8)
        (reg:DI 2 cx [2293])) "ETAFLD2.f":491 85 {*movdi_internal}
     (nil))
(insn 2504 2503 2505 165 (set (reg:DI 2 cx)
        (reg:DI 1 dx [2294])) "ETAFLD2.f":491 85 {*movdi_internal}
     (nil))
(insn 2505 2504 2506 165 (set (reg:DI 1 dx)
        (reg:DI 0 ax [2295])) "ETAFLD2.f":491 85 {*movdi_internal}
     (nil))
(insn 2506 2505 2507 165 (set (reg:DI 4 si)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                (const_int 48 [0x30])))) "ETAFLD2.f":491 85 {*movdi_internal}
     (nil))
(insn 2507 2506 2508 165 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                (const_int 4 [0x4])))) "ETAFLD2.f":491 85 {*movdi_internal}
     (nil))
(insn 2508 2507 2509 165 (set (reg:QI 0 ax)
        (const_int 0 [0])) "ETAFLD2.f":491 88 {*movqi_internal}
     (nil))
(call_insn 2509 2508 2510 165 (call (mem:QI (symbol_ref:DI ("output_") [flags 0x41]  <function_decl 0x7f9828228700 output>) [0 output S1 A8])
        (const_int 0 [0])) "ETAFLD2.f":491 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
;;  succ:       166 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 166, loop depth 0, maybe hot
;;  prev block 165, next block 167, flags: (RTL, MODIFIED)
;;  pred:       161
;;              165 (FALLTHRU)
;;              162
;; bb 166 artificial_defs: { }
;; bb 166 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 768
(code_label 2510 2509 2511 166 82 (nil) [2 uses])
(note 2511 2510 2512 166 [bb 166] NOTE_INSN_BASIC_BLOCK)
(insn 2512 2511 2513 166 (set (reg:SI 0 ax [orig:768 _682 ] [768])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 52 [0x34]))) [1 rqstfld.iget+36 S4 A32])) "ETAFLD2.f":496 86 {*movsi_internal}
     (nil))
(insn 2513 2512 2514 166 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:768 _682 ] [768])
            (const_int 0 [0]))) "ETAFLD2.f":496 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 2514 2513 2515 166 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 2613)
            (pc))) "ETAFLD2.f":496 682 {*jcc}
     (nil)
 -> 2613)
;;  succ:       167 (FALLTHRU)
;;              171
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 167, loop depth 0, maybe hot
;;  prev block 166, next block 168, flags: (RTL, MODIFIED)
;;  pred:       166 (FALLTHRU)
;; bb 167 artificial_defs: { }
;; bb 167 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 769 770 771 772 773 774 775 776 2296 2297 2298 2299
(note 2515 2514 2516 167 [bb 167] NOTE_INSN_BASIC_BLOCK)
(insn 2516 2515 2517 167 (set (reg:SI 0 ax [orig:769 _683 ] [769])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 52 [0x34]))) [1 rqstfld.iget+36 S4 A32])) "ETAFLD2.f":497 86 {*movsi_internal}
     (nil))
(insn 2517 2516 2518 167 (set (reg:DI 1 dx [orig:770 _684 ] [770])
        (sign_extend:DI (reg:SI 0 ax [orig:769 _683 ] [769]))) "ETAFLD2.f":497 149 {*extendsidi2_rex64}
     (nil))
(insn 2518 2517 2519 167 (set (reg:DI 0 ax [2296])
        (reg:DI 1 dx [orig:770 _684 ] [770])) "ETAFLD2.f":497 85 {*movdi_internal}
     (nil))
(insn 2519 2518 2521 167 (parallel [
            (set (reg:DI 0 ax [2297])
                (ashift:DI (reg:DI 0 ax [2296])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":497 551 {*ashldi3_1}
     (nil))
(insn 2521 2519 2522 167 (parallel [
            (set (reg:DI 0 ax [2296])
                (minus:DI (reg:DI 0 ax [2296])
                    (reg:DI 1 dx [orig:770 _684 ] [770])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":497 278 {*subdi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:770 _684 ] [770])
            (const_int 15 [0xf]))
        (nil)))
(insn 2522 2521 2524 167 (parallel [
            (set (reg:DI 0 ax [2298])
                (ashift:DI (reg:DI 0 ax [2296])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":497 551 {*ashldi3_1}
     (nil))
(insn 2524 2522 2525 167 (set (reg:DI 1 dx [orig:771 _685 ] [771])
        (reg:DI 0 ax [2296])) "ETAFLD2.f":497 85 {*movdi_internal}
     (nil))
(insn 2525 2524 2526 167 (set (reg:SI 0 ax [orig:772 l.102_686 ] [772])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":497 86 {*movsi_internal}
     (nil))
(insn 2526 2525 2527 167 (set (reg:DI 0 ax [orig:773 _687 ] [773])
        (sign_extend:DI (reg:SI 0 ax [orig:772 l.102_686 ] [772]))) "ETAFLD2.f":497 149 {*extendsidi2_rex64}
     (nil))
(insn 2527 2526 2528 167 (parallel [
            (set (reg:DI 0 ax [orig:774 _688 ] [774])
                (plus:DI (reg:DI 0 ax [orig:773 _687 ] [773])
                    (reg:DI 1 dx [orig:771 _685 ] [771])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":497 222 {*adddi_1}
     (nil))
(insn 2528 2527 2529 167 (parallel [
            (set (reg:DI 0 ax [orig:775 _689 ] [775])
                (plus:DI (reg:DI 0 ax [orig:774 _688 ] [774])
                    (const_int -61 [0xffffffffffffffc3])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":497 222 {*adddi_1}
     (nil))
(insn 2529 2528 2530 167 (parallel [
            (set (reg:DI 0 ax [2299])
                (plus:DI (reg:DI 0 ax [orig:775 _689 ] [775])
                    (const_int 1404 [0x57c])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":497 222 {*adddi_1}
     (nil))
(insn 2530 2529 2531 167 (set (reg:SI 0 ax [orig:776 _690 ] [776])
        (mem:SI (plus:DI (mult:DI (reg:DI 0 ax [2299])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)) [1 rqstfld.lvls S4 A32])) "ETAFLD2.f":497 86 {*movsi_internal}
     (nil))
(insn 2531 2530 2532 167 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:776 _690 ] [776])
            (const_int 0 [0]))) "ETAFLD2.f":497 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 2532 2531 2533 167 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 2613)
            (pc))) "ETAFLD2.f":497 682 {*jcc}
     (nil)
 -> 2613)
;;  succ:       168 (FALLTHRU)
;;              171
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 168, loop depth 0, maybe hot
;;  prev block 167, next block 169, flags: (RTL, MODIFIED)
;;  pred:       167 (FALLTHRU)
;; bb 168 artificial_defs: { }
;; bb 168 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 777 778 779 780 781 782 783 784 785 786 2300 2301 2302 2303 2304 2305 2306 2307 2308 2309 2310 2311 2312
(note 2533 2532 2534 168 [bb 168] NOTE_INSN_BASIC_BLOCK)
(insn 2534 2533 2535 168 (set (reg:SI 0 ax [orig:777 _691 ] [777])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 52 [0x34]))) [1 rqstfld.iget+36 S4 A32])) "ETAFLD2.f":498 86 {*movsi_internal}
     (nil))
(insn 2535 2534 2536 168 (set (reg:DI 1 dx [orig:778 _692 ] [778])
        (sign_extend:DI (reg:SI 0 ax [orig:777 _691 ] [777]))) "ETAFLD2.f":498 149 {*extendsidi2_rex64}
     (nil))
(insn 2536 2535 2537 168 (set (reg:DI 0 ax [2300])
        (reg:DI 1 dx [orig:778 _692 ] [778])) "ETAFLD2.f":498 85 {*movdi_internal}
     (nil))
(insn 2537 2536 2539 168 (parallel [
            (set (reg:DI 0 ax [2301])
                (ashift:DI (reg:DI 0 ax [2300])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":498 551 {*ashldi3_1}
     (nil))
(insn 2539 2537 2540 168 (parallel [
            (set (reg:DI 0 ax [2300])
                (minus:DI (reg:DI 0 ax [2300])
                    (reg:DI 1 dx [orig:778 _692 ] [778])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":498 278 {*subdi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:778 _692 ] [778])
            (const_int 15 [0xf]))
        (nil)))
(insn 2540 2539 2542 168 (parallel [
            (set (reg:DI 0 ax [2302])
                (ashift:DI (reg:DI 0 ax [2300])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":498 551 {*ashldi3_1}
     (nil))
(insn 2542 2540 2543 168 (set (reg:DI 1 dx [orig:779 _693 ] [779])
        (reg:DI 0 ax [2300])) "ETAFLD2.f":498 85 {*movdi_internal}
     (nil))
(insn 2543 2542 2544 168 (set (reg:SI 0 ax [orig:780 l.103_694 ] [780])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":498 86 {*movsi_internal}
     (nil))
(insn 2544 2543 2545 168 (set (reg:DI 0 ax [orig:781 _695 ] [781])
        (sign_extend:DI (reg:SI 0 ax [orig:780 l.103_694 ] [780]))) "ETAFLD2.f":498 149 {*extendsidi2_rex64}
     (nil))
(insn 2545 2544 2546 168 (parallel [
            (set (reg:DI 0 ax [orig:782 _696 ] [782])
                (plus:DI (reg:DI 0 ax [orig:781 _695 ] [781])
                    (reg:DI 1 dx [orig:779 _693 ] [779])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":498 222 {*adddi_1}
     (nil))
(insn 2546 2545 2547 168 (parallel [
            (set (reg:DI 0 ax [orig:783 _697 ] [783])
                (plus:DI (reg:DI 0 ax [orig:782 _696 ] [782])
                    (const_int -61 [0xffffffffffffffc3])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":498 222 {*adddi_1}
     (nil))
(insn 2547 2546 2548 168 (parallel [
            (set (reg:DI 0 ax [2303])
                (plus:DI (reg:DI 0 ax [orig:783 _697 ] [783])
                    (const_int 1404 [0x57c])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":498 222 {*adddi_1}
     (nil))
(insn 2548 2547 2549 168 (set (reg:SI 0 ax [orig:784 _698 ] [784])
        (mem:SI (plus:DI (mult:DI (reg:DI 0 ax [2303])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)) [1 rqstfld.lvls S4 A32])) "ETAFLD2.f":498 86 {*movsi_internal}
     (nil))
(insn 2549 2548 2550 168 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -268 [0xfffffffffffffef4])) [1 itype+0 S4 A32])
        (reg:SI 0 ax [orig:784 _698 ] [784])) "ETAFLD2.f":498 86 {*movsi_internal}
     (nil))
(insn 2550 2549 2551 168 (parallel [
            (set (reg:DI 1 dx [2304])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -272 [0xfffffffffffffef0])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":499 222 {*adddi_1}
     (nil))
(insn 2551 2550 2552 168 (parallel [
            (set (reg:DI 0 ax [2305])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -268 [0xfffffffffffffef4])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":499 222 {*adddi_1}
     (nil))
(insn 2552 2551 2553 168 (set (reg:DI 37 r8)
        (symbol_ref:DI ("equiv.3.4378") [flags 0x202]  <var_decl 0x7f9828263750 equiv.3>)) "ETAFLD2.f":499 85 {*movdi_internal}
     (nil))
(insn 2553 2552 2555 168 (set (reg:DI 2 cx)
        (const:DI (plus:DI (symbol_ref:DI ("loops_") [flags 0x202]  <var_decl 0x7f9828246c60 loops>)
                (const_int 128204 [0x1f4cc])))) "ETAFLD2.f":499 85 {*movdi_internal}
     (nil))
(insn 2555 2553 2556 168 (set (reg:DI 4 si)
        (reg:DI 0 ax [2305])) "ETAFLD2.f":499 85 {*movdi_internal}
     (nil))
(insn 2556 2555 2557 168 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7f982825bcf0 vrbls>)
                (const_int 355572 [0x56cf4])))) "ETAFLD2.f":499 85 {*movdi_internal}
     (nil))
(insn 2557 2556 2558 168 (set (reg:QI 0 ax)
        (const_int 0 [0])) "ETAFLD2.f":499 88 {*movqi_internal}
     (nil))
(call_insn 2558 2557 2559 168 (call (mem:QI (symbol_ref:DI ("netal_") [flags 0x41]  <function_decl 0x7f9828228a00 netal>) [0 netal S1 A8])
        (const_int 0 [0])) "ETAFLD2.f":499 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (nil))))))))
(insn 2559 2558 2560 168 (parallel [
            (set (reg:DI 1 dx [2306])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -272 [0xfffffffffffffef0])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":500 222 {*adddi_1}
     (nil))
(insn 2560 2559 2561 168 (parallel [
            (set (reg:DI 0 ax [2307])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -268 [0xfffffffffffffef4])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":500 222 {*adddi_1}
     (nil))
(insn 2561 2560 2562 168 (set (reg:DI 37 r8)
        (symbol_ref:DI ("equiv.2.4368") [flags 0x202]  <var_decl 0x7f9828263510 equiv.2>)) "ETAFLD2.f":500 85 {*movdi_internal}
     (nil))
(insn 2562 2561 2564 168 (set (reg:DI 2 cx)
        (const:DI (plus:DI (symbol_ref:DI ("loops_") [flags 0x202]  <var_decl 0x7f9828246c60 loops>)
                (const_int 128204 [0x1f4cc])))) "ETAFLD2.f":500 85 {*movdi_internal}
     (nil))
(insn 2564 2562 2565 168 (set (reg:DI 4 si)
        (reg:DI 0 ax [2307])) "ETAFLD2.f":500 85 {*movdi_internal}
     (nil))
(insn 2565 2564 2566 168 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7f982825bcf0 vrbls>)
                (const_int 4859484 [0x4a265c])))) "ETAFLD2.f":500 85 {*movdi_internal}
     (nil))
(insn 2566 2565 2567 168 (set (reg:QI 0 ax)
        (const_int 0 [0])) "ETAFLD2.f":500 88 {*movqi_internal}
     (nil))
(call_insn 2567 2566 2568 168 (call (mem:QI (symbol_ref:DI ("netal_") [flags 0x41]  <function_decl 0x7f9828228a00 netal>) [0 netal S1 A8])
        (const_int 0 [0])) "ETAFLD2.f":500 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (nil))))))))
(insn 2568 2567 2569 168 (set (reg:DI 1 dx)
        (symbol_ref:DI ("egrid3.4390") [flags 0x202]  <var_decl 0x7f9828263d80 egrid3>)) "ETAFLD2.f":501 85 {*movdi_internal}
     (nil))
(insn 2569 2568 2570 168 (set (reg:DI 4 si)
        (symbol_ref:DI ("equiv.2.4368") [flags 0x202]  <var_decl 0x7f9828263510 equiv.2>)) "ETAFLD2.f":501 85 {*movdi_internal}
     (nil))
(insn 2570 2569 2571 168 (set (reg:DI 5 di)
        (symbol_ref:DI ("equiv.3.4378") [flags 0x202]  <var_decl 0x7f9828263750 equiv.3>)) "ETAFLD2.f":501 85 {*movdi_internal}
     (nil))
(insn 2571 2570 2572 168 (set (reg:QI 0 ax)
        (const_int 0 [0])) "ETAFLD2.f":501 88 {*movqi_internal}
     (nil))
(call_insn 2572 2571 2573 168 (call (mem:QI (symbol_ref:DI ("calvor_") [flags 0x41]  <function_decl 0x7f9827e92100 calvor>) [0 calvor S1 A8])
        (const_int 0 [0])) "ETAFLD2.f":501 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 2573 2572 2574 168 (set (reg:DI 1 dx [2308])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [4 grid2+0 S8 A64])) "ETAFLD2.f":502 85 {*movdi_internal}
     (nil))
(insn 2574 2573 2575 168 (set (reg:DI 0 ax [2309])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "ETAFLD2.f":502 85 {*movdi_internal}
     (nil))
(insn 2575 2574 2576 168 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [11  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -832 [0xfffffffffffffcc0])) [11 jmout+0 S8 A64])) "ETAFLD2.f":502 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 2576 2575 2577 168 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [11  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -824 [0xfffffffffffffcc8])) [11 imout+0 S8 A64])) "ETAFLD2.f":502 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 2577 2576 2578 168 (set (reg:DI 38 r9)
        (reg:DI 1 dx [2308])) "ETAFLD2.f":502 85 {*movdi_internal}
     (nil))
(insn 2578 2577 2579 168 (set (reg:DI 37 r8)
        (reg:DI 0 ax [2309])) "ETAFLD2.f":502 85 {*movdi_internal}
     (nil))
(insn 2579 2578 2580 168 (set (reg:DI 2 cx)
        (symbol_ref:DI ("equiv.2.4368") [flags 0x202]  <var_decl 0x7f9828263510 equiv.2>)) "ETAFLD2.f":502 85 {*movdi_internal}
     (nil))
(insn 2580 2579 2581 168 (set (reg:DI 1 dx)
        (symbol_ref:DI ("egrid3.4390") [flags 0x202]  <var_decl 0x7f9828263d80 egrid3>)) "ETAFLD2.f":502 85 {*movdi_internal}
     (nil))
(insn 2581 2580 2582 168 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f9827f94240 *.LC3>)) "ETAFLD2.f":502 85 {*movdi_internal}
     (nil))
(insn 2582 2581 2583 168 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC40") [flags 0x2]  <var_decl 0x7f9827f94090 *.LC40>)) "ETAFLD2.f":502 85 {*movdi_internal}
     (nil))
(insn 2583 2582 2584 168 (set (reg:QI 0 ax)
        (const_int 0 [0])) "ETAFLD2.f":502 88 {*movqi_internal}
     (nil))
(call_insn 2584 2583 2585 168 (call (mem:QI (symbol_ref:DI ("e2out_") [flags 0x41]  <function_decl 0x7f9828228600 e2out>) [0 e2out S1 A8])
        (const_int 16 [0x10])) "ETAFLD2.f":502 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
(insn 2585 2584 2586 168 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":502 222 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 2586 2585 2587 168 (set (reg/f:DI 1 dx [2310])
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                (const_int 55216 [0xd7b0])))) "ETAFLD2.f":503 85 {*movdi_internal}
     (nil))
(insn 2587 2586 2588 168 (set (reg:DI 0 ax [2311])
        (const_int 0 [0])) "ETAFLD2.f":503 85 {*movdi_internal}
     (nil))
(insn 2588 2587 5873 168 (set (reg:DI 2 cx [2312])
        (const_int 12 [0xc])) "ETAFLD2.f":503 85 {*movdi_internal}
     (nil))
(insn 5873 2588 2589 168 (set (reg/f:DI 5 di [2310])
        (reg/f:DI 1 dx [2310])) "ETAFLD2.f":503 85 {*movdi_internal}
     (nil))
(insn 2589 5873 5874 168 (parallel [
            (set (reg:DI 2 cx [2312])
                (const_int 0 [0]))
            (set (reg/f:DI 5 di [2310])
                (plus:DI (ashift:DI (reg:DI 2 cx [2312])
                        (const_int 3 [0x3]))
                    (reg/f:DI 5 di [2310])))
            (set (mem/c:BLK (reg/f:DI 5 di [2310]) [1 rqstfld.id+0 S96 A128])
                (const_int 0 [0]))
            (use (reg:DI 0 ax [2311]))
            (use (reg:DI 2 cx [2312]))
        ]) "ETAFLD2.f":503 984 {*rep_stosdi_rex64}
     (nil))
(insn 5874 2589 2590 168 (set (reg/f:DI 1 dx [2310])
        (reg/f:DI 5 di [2310])) "ETAFLD2.f":503 85 {*movdi_internal}
     (nil))
(insn 2590 5874 2591 168 (set (mem/c:SI (reg/f:DI 1 dx [2310]) [1 rqstfld.id+96 S4 A128])
        (reg:SI 0 ax [2311])) "ETAFLD2.f":503 86 {*movsi_internal}
     (nil))
(insn 2591 2590 2592 168 (parallel [
            (set (reg/f:DI 1 dx [2310])
                (plus:DI (reg/f:DI 1 dx [2310])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":503 222 {*adddi_1}
     (nil))
(insn 2592 2591 2593 168 (set (reg:SI 0 ax [orig:785 l.104_699 ] [785])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":504 86 {*movsi_internal}
     (nil))
(insn 2593 2592 2594 168 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -276 [0xfffffffffffffeec])) [1 lyr+0 S4 A32])
        (reg:SI 0 ax [orig:785 l.104_699 ] [785])) "ETAFLD2.f":504 86 {*movsi_internal}
     (nil))
(insn 2594 2593 2595 168 (set (reg:SI 0 ax [orig:786 itype.105_700 ] [786])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -268 [0xfffffffffffffef4])) [1 itype+0 S4 A32])) "ETAFLD2.f":505 86 {*movsi_internal}
     (nil))
(insn 2595 2594 2596 168 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [orig:786 itype.105_700 ] [786])
            (const_int 1 [0x1]))) "ETAFLD2.f":505 11 {*cmpsi_1}
     (nil))
(jump_insn 2596 2595 2597 168 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 2599)
            (pc))) "ETAFLD2.f":505 682 {*jcc}
     (nil)
 -> 2599)
;;  succ:       169 (FALLTHRU)
;;              170
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 169, loop depth 0, maybe hot
;;  prev block 168, next block 170, flags: (RTL, MODIFIED)
;;  pred:       168 (FALLTHRU)
;; bb 169 artificial_defs: { }
;; bb 169 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 2597 2596 2598 169 [bb 169] NOTE_INSN_BASIC_BLOCK)
(insn 2598 2597 2599 169 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 55248 [0xd7d0]))) [1 rqstfld.id+32 S4 A128])
        (const_int 109 [0x6d])) "ETAFLD2.f":505 86 {*movsi_internal}
     (nil))
;;  succ:       170 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 170, loop depth 0, maybe hot
;;  prev block 169, next block 171, flags: (RTL, MODIFIED)
;;  pred:       168
;;              169 (FALLTHRU)
;; bb 170 artificial_defs: { }
;; bb 170 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 2313 2314 2315 2316
(code_label 2599 2598 2600 170 85 (nil) [1 uses])
(note 2600 2599 2601 170 [bb 170] NOTE_INSN_BASIC_BLOCK)
(insn 2601 2600 2602 170 (set (reg:DI 4 si [2313])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -832 [0xfffffffffffffcc0])) [11 jmout+0 S8 A64])) "ETAFLD2.f":506 85 {*movdi_internal}
     (nil))
(insn 2602 2601 2603 170 (set (reg:DI 2 cx [2314])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -824 [0xfffffffffffffcc8])) [11 imout+0 S8 A64])) "ETAFLD2.f":506 85 {*movdi_internal}
     (nil))
(insn 2603 2602 2604 170 (set (reg:DI 1 dx [2315])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "ETAFLD2.f":506 85 {*movdi_internal}
     (nil))
(insn 2604 2603 2605 170 (parallel [
            (set (reg:DI 0 ax [2316])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -276 [0xfffffffffffffeec])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":506 222 {*adddi_1}
     (nil))
(insn 2605 2604 2606 170 (set (reg:DI 38 r9)
        (reg:DI 4 si [2313])) "ETAFLD2.f":506 85 {*movdi_internal}
     (nil))
(insn 2606 2605 2607 170 (set (reg:DI 37 r8)
        (reg:DI 2 cx [2314])) "ETAFLD2.f":506 85 {*movdi_internal}
     (nil))
(insn 2607 2606 2608 170 (set (reg:DI 2 cx)
        (reg:DI 1 dx [2315])) "ETAFLD2.f":506 85 {*movdi_internal}
     (nil))
(insn 2608 2607 2609 170 (set (reg:DI 1 dx)
        (reg:DI 0 ax [2316])) "ETAFLD2.f":506 85 {*movdi_internal}
     (nil))
(insn 2609 2608 2610 170 (set (reg:DI 4 si)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                (const_int 52 [0x34])))) "ETAFLD2.f":506 85 {*movdi_internal}
     (nil))
(insn 2610 2609 2611 170 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                (const_int 4 [0x4])))) "ETAFLD2.f":506 85 {*movdi_internal}
     (nil))
(insn 2611 2610 2612 170 (set (reg:QI 0 ax)
        (const_int 0 [0])) "ETAFLD2.f":506 88 {*movqi_internal}
     (nil))
(call_insn 2612 2611 2613 170 (call (mem:QI (symbol_ref:DI ("output_") [flags 0x41]  <function_decl 0x7f9828228700 output>) [0 output S1 A8])
        (const_int 0 [0])) "ETAFLD2.f":506 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
;;  succ:       171 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 171, loop depth 0, maybe hot
;;  prev block 170, next block 172, flags: (RTL, MODIFIED)
;;  pred:       166
;;              170 (FALLTHRU)
;;              167
;; bb 171 artificial_defs: { }
;; bb 171 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 787
(code_label 2613 2612 2614 171 84 (nil) [2 uses])
(note 2614 2613 2615 171 [bb 171] NOTE_INSN_BASIC_BLOCK)
(insn 2615 2614 2616 171 (set (reg:SI 0 ax [orig:787 _701 ] [787])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 348 [0x15c]))) [1 rqstfld.iget+332 S4 A32])) "ETAFLD2.f":511 86 {*movsi_internal}
     (nil))
(insn 2616 2615 2617 171 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:787 _701 ] [787])
            (const_int 0 [0]))) "ETAFLD2.f":511 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 2617 2616 2618 171 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 2706)
            (pc))) "ETAFLD2.f":511 682 {*jcc}
     (nil)
 -> 2706)
;;  succ:       172 (FALLTHRU)
;;              176
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 172, loop depth 0, maybe hot
;;  prev block 171, next block 173, flags: (RTL, MODIFIED)
;;  pred:       171 (FALLTHRU)
;; bb 172 artificial_defs: { }
;; bb 172 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 788 789 790 791 792 793 794 795 2317 2318 2319 2320
(note 2618 2617 2619 172 [bb 172] NOTE_INSN_BASIC_BLOCK)
(insn 2619 2618 2620 172 (set (reg:SI 0 ax [orig:788 _702 ] [788])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 348 [0x15c]))) [1 rqstfld.iget+332 S4 A32])) "ETAFLD2.f":512 86 {*movsi_internal}
     (nil))
(insn 2620 2619 2621 172 (set (reg:DI 1 dx [orig:789 _703 ] [789])
        (sign_extend:DI (reg:SI 0 ax [orig:788 _702 ] [788]))) "ETAFLD2.f":512 149 {*extendsidi2_rex64}
     (nil))
(insn 2621 2620 2622 172 (set (reg:DI 0 ax [2317])
        (reg:DI 1 dx [orig:789 _703 ] [789])) "ETAFLD2.f":512 85 {*movdi_internal}
     (nil))
(insn 2622 2621 2624 172 (parallel [
            (set (reg:DI 0 ax [2318])
                (ashift:DI (reg:DI 0 ax [2317])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":512 551 {*ashldi3_1}
     (nil))
(insn 2624 2622 2625 172 (parallel [
            (set (reg:DI 0 ax [2317])
                (minus:DI (reg:DI 0 ax [2317])
                    (reg:DI 1 dx [orig:789 _703 ] [789])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":512 278 {*subdi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:789 _703 ] [789])
            (const_int 15 [0xf]))
        (nil)))
(insn 2625 2624 2627 172 (parallel [
            (set (reg:DI 0 ax [2319])
                (ashift:DI (reg:DI 0 ax [2317])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":512 551 {*ashldi3_1}
     (nil))
(insn 2627 2625 2628 172 (set (reg:DI 1 dx [orig:790 _704 ] [790])
        (reg:DI 0 ax [2317])) "ETAFLD2.f":512 85 {*movdi_internal}
     (nil))
(insn 2628 2627 2629 172 (set (reg:SI 0 ax [orig:791 l.106_705 ] [791])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":512 86 {*movsi_internal}
     (nil))
(insn 2629 2628 2630 172 (set (reg:DI 0 ax [orig:792 _706 ] [792])
        (sign_extend:DI (reg:SI 0 ax [orig:791 l.106_705 ] [791]))) "ETAFLD2.f":512 149 {*extendsidi2_rex64}
     (nil))
(insn 2630 2629 2631 172 (parallel [
            (set (reg:DI 0 ax [orig:793 _707 ] [793])
                (plus:DI (reg:DI 0 ax [orig:792 _706 ] [792])
                    (reg:DI 1 dx [orig:790 _704 ] [790])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":512 222 {*adddi_1}
     (nil))
(insn 2631 2630 2632 172 (parallel [
            (set (reg:DI 0 ax [orig:794 _708 ] [794])
                (plus:DI (reg:DI 0 ax [orig:793 _707 ] [793])
                    (const_int -61 [0xffffffffffffffc3])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":512 222 {*adddi_1}
     (nil))
(insn 2632 2631 2633 172 (parallel [
            (set (reg:DI 0 ax [2320])
                (plus:DI (reg:DI 0 ax [orig:794 _708 ] [794])
                    (const_int 1404 [0x57c])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":512 222 {*adddi_1}
     (nil))
(insn 2633 2632 2634 172 (set (reg:SI 0 ax [orig:795 _709 ] [795])
        (mem:SI (plus:DI (mult:DI (reg:DI 0 ax [2320])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)) [1 rqstfld.lvls S4 A32])) "ETAFLD2.f":512 86 {*movsi_internal}
     (nil))
(insn 2634 2633 2635 172 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:795 _709 ] [795])
            (const_int 0 [0]))) "ETAFLD2.f":512 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 2635 2634 2636 172 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 2706)
            (pc))) "ETAFLD2.f":512 682 {*jcc}
     (nil)
 -> 2706)
;;  succ:       173 (FALLTHRU)
;;              176
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 173, loop depth 0, maybe hot
;;  prev block 172, next block 174, flags: (RTL, MODIFIED)
;;  pred:       172 (FALLTHRU)
;; bb 173 artificial_defs: { }
;; bb 173 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 796 797 798 799 800 801 802 803 804 805 2321 2322 2323 2324 2325 2326 2327 2328 2329 2330 2331
(note 2636 2635 2637 173 [bb 173] NOTE_INSN_BASIC_BLOCK)
(insn 2637 2636 2638 173 (set (reg:SI 0 ax [orig:796 _710 ] [796])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 348 [0x15c]))) [1 rqstfld.iget+332 S4 A32])) "ETAFLD2.f":513 86 {*movsi_internal}
     (nil))
(insn 2638 2637 2639 173 (set (reg:DI 1 dx [orig:797 _711 ] [797])
        (sign_extend:DI (reg:SI 0 ax [orig:796 _710 ] [796]))) "ETAFLD2.f":513 149 {*extendsidi2_rex64}
     (nil))
(insn 2639 2638 2640 173 (set (reg:DI 0 ax [2321])
        (reg:DI 1 dx [orig:797 _711 ] [797])) "ETAFLD2.f":513 85 {*movdi_internal}
     (nil))
(insn 2640 2639 2642 173 (parallel [
            (set (reg:DI 0 ax [2322])
                (ashift:DI (reg:DI 0 ax [2321])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":513 551 {*ashldi3_1}
     (nil))
(insn 2642 2640 2643 173 (parallel [
            (set (reg:DI 0 ax [2321])
                (minus:DI (reg:DI 0 ax [2321])
                    (reg:DI 1 dx [orig:797 _711 ] [797])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":513 278 {*subdi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:797 _711 ] [797])
            (const_int 15 [0xf]))
        (nil)))
(insn 2643 2642 2645 173 (parallel [
            (set (reg:DI 0 ax [2323])
                (ashift:DI (reg:DI 0 ax [2321])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":513 551 {*ashldi3_1}
     (nil))
(insn 2645 2643 2646 173 (set (reg:DI 1 dx [orig:798 _712 ] [798])
        (reg:DI 0 ax [2321])) "ETAFLD2.f":513 85 {*movdi_internal}
     (nil))
(insn 2646 2645 2647 173 (set (reg:SI 0 ax [orig:799 l.107_713 ] [799])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":513 86 {*movsi_internal}
     (nil))
(insn 2647 2646 2648 173 (set (reg:DI 0 ax [orig:800 _714 ] [800])
        (sign_extend:DI (reg:SI 0 ax [orig:799 l.107_713 ] [799]))) "ETAFLD2.f":513 149 {*extendsidi2_rex64}
     (nil))
(insn 2648 2647 2649 173 (parallel [
            (set (reg:DI 0 ax [orig:801 _715 ] [801])
                (plus:DI (reg:DI 0 ax [orig:800 _714 ] [800])
                    (reg:DI 1 dx [orig:798 _712 ] [798])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":513 222 {*adddi_1}
     (nil))
(insn 2649 2648 2650 173 (parallel [
            (set (reg:DI 0 ax [orig:802 _716 ] [802])
                (plus:DI (reg:DI 0 ax [orig:801 _715 ] [801])
                    (const_int -61 [0xffffffffffffffc3])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":513 222 {*adddi_1}
     (nil))
(insn 2650 2649 2651 173 (parallel [
            (set (reg:DI 0 ax [2324])
                (plus:DI (reg:DI 0 ax [orig:802 _716 ] [802])
                    (const_int 1404 [0x57c])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":513 222 {*adddi_1}
     (nil))
(insn 2651 2650 2652 173 (set (reg:SI 0 ax [orig:803 _717 ] [803])
        (mem:SI (plus:DI (mult:DI (reg:DI 0 ax [2324])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)) [1 rqstfld.lvls S4 A32])) "ETAFLD2.f":513 86 {*movsi_internal}
     (nil))
(insn 2652 2651 2653 173 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -268 [0xfffffffffffffef4])) [1 itype+0 S4 A32])
        (reg:SI 0 ax [orig:803 _717 ] [803])) "ETAFLD2.f":513 86 {*movsi_internal}
     (nil))
(insn 2653 2652 2654 173 (parallel [
            (set (reg:DI 1 dx [2325])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -272 [0xfffffffffffffef0])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":514 222 {*adddi_1}
     (nil))
(insn 2654 2653 2655 173 (parallel [
            (set (reg:DI 0 ax [2326])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -268 [0xfffffffffffffef4])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":514 222 {*adddi_1}
     (nil))
(insn 2655 2654 2656 173 (set (reg:DI 37 r8)
        (symbol_ref:DI ("equiv.3.4378") [flags 0x202]  <var_decl 0x7f9828263750 equiv.3>)) "ETAFLD2.f":514 85 {*movdi_internal}
     (nil))
(insn 2656 2655 2658 173 (set (reg:DI 2 cx)
        (const:DI (plus:DI (symbol_ref:DI ("loops_") [flags 0x202]  <var_decl 0x7f9828246c60 loops>)
                (const_int 9680 [0x25d0])))) "ETAFLD2.f":514 85 {*movdi_internal}
     (nil))
(insn 2658 2656 2659 173 (set (reg:DI 4 si)
        (reg:DI 0 ax [2326])) "ETAFLD2.f":514 85 {*movdi_internal}
     (nil))
(insn 2659 2658 2660 173 (set (reg:DI 5 di)
        (symbol_ref:DI ("equiv.0.4352") [flags 0x202]  <var_decl 0x7f98282631b0 equiv.0>)) "ETAFLD2.f":514 85 {*movdi_internal}
     (nil))
(insn 2660 2659 2661 173 (set (reg:QI 0 ax)
        (const_int 0 [0])) "ETAFLD2.f":514 88 {*movqi_internal}
     (nil))
(call_insn 2661 2660 2662 173 (call (mem:QI (symbol_ref:DI ("netal_") [flags 0x41]  <function_decl 0x7f9828228a00 netal>) [0 netal S1 A8])
        (const_int 0 [0])) "ETAFLD2.f":514 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (nil))))))))
(insn 2662 2661 2663 173 (set (reg:DI 4 si)
        (symbol_ref:DI ("equiv.2.4368") [flags 0x202]  <var_decl 0x7f9828263510 equiv.2>)) "ETAFLD2.f":515 85 {*movdi_internal}
     (nil))
(insn 2663 2662 2664 173 (set (reg:DI 5 di)
        (symbol_ref:DI ("equiv.3.4378") [flags 0x202]  <var_decl 0x7f9828263750 equiv.3>)) "ETAFLD2.f":515 85 {*movdi_internal}
     (nil))
(insn 2664 2663 2665 173 (set (reg:QI 0 ax)
        (const_int 0 [0])) "ETAFLD2.f":515 88 {*movqi_internal}
     (nil))
(call_insn 2665 2664 2666 173 (call (mem:QI (symbol_ref:DI ("calstrm_") [flags 0x41]  <function_decl 0x7f9827e92200 calstrm>) [0 calstrm S1 A8])
        (const_int 0 [0])) "ETAFLD2.f":515 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 2666 2665 2667 173 (set (reg:DI 1 dx [2327])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [4 grid2+0 S8 A64])) "ETAFLD2.f":516 85 {*movdi_internal}
     (nil))
(insn 2667 2666 2668 173 (set (reg:DI 0 ax [2328])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "ETAFLD2.f":516 85 {*movdi_internal}
     (nil))
(insn 2668 2667 2669 173 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [11  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -832 [0xfffffffffffffcc0])) [11 jmout+0 S8 A64])) "ETAFLD2.f":516 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 2669 2668 2670 173 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [11  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -824 [0xfffffffffffffcc8])) [11 imout+0 S8 A64])) "ETAFLD2.f":516 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 2670 2669 2671 173 (set (reg:DI 38 r9)
        (reg:DI 1 dx [2327])) "ETAFLD2.f":516 85 {*movdi_internal}
     (nil))
(insn 2671 2670 2672 173 (set (reg:DI 37 r8)
        (reg:DI 0 ax [2328])) "ETAFLD2.f":516 85 {*movdi_internal}
     (nil))
(insn 2672 2671 2673 173 (set (reg:DI 2 cx)
        (symbol_ref:DI ("egrid3.4390") [flags 0x202]  <var_decl 0x7f9828263d80 egrid3>)) "ETAFLD2.f":516 85 {*movdi_internal}
     (nil))
(insn 2673 2672 2674 173 (set (reg:DI 1 dx)
        (symbol_ref:DI ("equiv.2.4368") [flags 0x202]  <var_decl 0x7f9828263510 equiv.2>)) "ETAFLD2.f":516 85 {*movdi_internal}
     (nil))
(insn 2674 2673 2675 173 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f9827f94240 *.LC3>)) "ETAFLD2.f":516 85 {*movdi_internal}
     (nil))
(insn 2675 2674 2676 173 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC41") [flags 0x2]  <var_decl 0x7f9827f941b0 *.LC41>)) "ETAFLD2.f":516 85 {*movdi_internal}
     (nil))
(insn 2676 2675 2677 173 (set (reg:QI 0 ax)
        (const_int 0 [0])) "ETAFLD2.f":516 88 {*movqi_internal}
     (nil))
(call_insn 2677 2676 2678 173 (call (mem:QI (symbol_ref:DI ("e2out_") [flags 0x41]  <function_decl 0x7f9828228600 e2out>) [0 e2out S1 A8])
        (const_int 16 [0x10])) "ETAFLD2.f":516 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
(insn 2678 2677 2679 173 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":516 222 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 2679 2678 2680 173 (set (reg/f:DI 1 dx [2329])
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                (const_int 55216 [0xd7b0])))) "ETAFLD2.f":517 85 {*movdi_internal}
     (nil))
(insn 2680 2679 2681 173 (set (reg:DI 0 ax [2330])
        (const_int 0 [0])) "ETAFLD2.f":517 85 {*movdi_internal}
     (nil))
(insn 2681 2680 5875 173 (set (reg:DI 2 cx [2331])
        (const_int 12 [0xc])) "ETAFLD2.f":517 85 {*movdi_internal}
     (nil))
(insn 5875 2681 2682 173 (set (reg/f:DI 5 di [2329])
        (reg/f:DI 1 dx [2329])) "ETAFLD2.f":517 85 {*movdi_internal}
     (nil))
(insn 2682 5875 5876 173 (parallel [
            (set (reg:DI 2 cx [2331])
                (const_int 0 [0]))
            (set (reg/f:DI 5 di [2329])
                (plus:DI (ashift:DI (reg:DI 2 cx [2331])
                        (const_int 3 [0x3]))
                    (reg/f:DI 5 di [2329])))
            (set (mem/c:BLK (reg/f:DI 5 di [2329]) [1 rqstfld.id+0 S96 A128])
                (const_int 0 [0]))
            (use (reg:DI 0 ax [2330]))
            (use (reg:DI 2 cx [2331]))
        ]) "ETAFLD2.f":517 984 {*rep_stosdi_rex64}
     (nil))
(insn 5876 2682 2683 173 (set (reg/f:DI 1 dx [2329])
        (reg/f:DI 5 di [2329])) "ETAFLD2.f":517 85 {*movdi_internal}
     (nil))
(insn 2683 5876 2684 173 (set (mem/c:SI (reg/f:DI 1 dx [2329]) [1 rqstfld.id+96 S4 A128])
        (reg:SI 0 ax [2330])) "ETAFLD2.f":517 86 {*movsi_internal}
     (nil))
(insn 2684 2683 2685 173 (parallel [
            (set (reg/f:DI 1 dx [2329])
                (plus:DI (reg/f:DI 1 dx [2329])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":517 222 {*adddi_1}
     (nil))
(insn 2685 2684 2686 173 (set (reg:SI 0 ax [orig:804 l.108_718 ] [804])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":518 86 {*movsi_internal}
     (nil))
(insn 2686 2685 2687 173 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -276 [0xfffffffffffffeec])) [1 lyr+0 S4 A32])
        (reg:SI 0 ax [orig:804 l.108_718 ] [804])) "ETAFLD2.f":518 86 {*movsi_internal}
     (nil))
(insn 2687 2686 2688 173 (set (reg:SI 0 ax [orig:805 itype.109_719 ] [805])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -268 [0xfffffffffffffef4])) [1 itype+0 S4 A32])) "ETAFLD2.f":519 86 {*movsi_internal}
     (nil))
(insn 2688 2687 2689 173 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [orig:805 itype.109_719 ] [805])
            (const_int 1 [0x1]))) "ETAFLD2.f":519 11 {*cmpsi_1}
     (nil))
(jump_insn 2689 2688 2690 173 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 2692)
            (pc))) "ETAFLD2.f":519 682 {*jcc}
     (nil)
 -> 2692)
;;  succ:       174 (FALLTHRU)
;;              175
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 174, loop depth 0, maybe hot
;;  prev block 173, next block 175, flags: (RTL, MODIFIED)
;;  pred:       173 (FALLTHRU)
;; bb 174 artificial_defs: { }
;; bb 174 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 2690 2689 2691 174 [bb 174] NOTE_INSN_BASIC_BLOCK)
(insn 2691 2690 2692 174 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 55248 [0xd7d0]))) [1 rqstfld.id+32 S4 A128])
        (const_int 109 [0x6d])) "ETAFLD2.f":519 86 {*movsi_internal}
     (nil))
;;  succ:       175 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 175, loop depth 0, maybe hot
;;  prev block 174, next block 176, flags: (RTL, MODIFIED)
;;  pred:       173
;;              174 (FALLTHRU)
;; bb 175 artificial_defs: { }
;; bb 175 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 2332 2333 2334 2335
(code_label 2692 2691 2693 175 87 (nil) [1 uses])
(note 2693 2692 2694 175 [bb 175] NOTE_INSN_BASIC_BLOCK)
(insn 2694 2693 2695 175 (set (reg:DI 4 si [2332])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -832 [0xfffffffffffffcc0])) [11 jmout+0 S8 A64])) "ETAFLD2.f":520 85 {*movdi_internal}
     (nil))
(insn 2695 2694 2696 175 (set (reg:DI 2 cx [2333])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -824 [0xfffffffffffffcc8])) [11 imout+0 S8 A64])) "ETAFLD2.f":520 85 {*movdi_internal}
     (nil))
(insn 2696 2695 2697 175 (set (reg:DI 1 dx [2334])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "ETAFLD2.f":520 85 {*movdi_internal}
     (nil))
(insn 2697 2696 2698 175 (parallel [
            (set (reg:DI 0 ax [2335])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -276 [0xfffffffffffffeec])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":520 222 {*adddi_1}
     (nil))
(insn 2698 2697 2699 175 (set (reg:DI 38 r9)
        (reg:DI 4 si [2332])) "ETAFLD2.f":520 85 {*movdi_internal}
     (nil))
(insn 2699 2698 2700 175 (set (reg:DI 37 r8)
        (reg:DI 2 cx [2333])) "ETAFLD2.f":520 85 {*movdi_internal}
     (nil))
(insn 2700 2699 2701 175 (set (reg:DI 2 cx)
        (reg:DI 1 dx [2334])) "ETAFLD2.f":520 85 {*movdi_internal}
     (nil))
(insn 2701 2700 2702 175 (set (reg:DI 1 dx)
        (reg:DI 0 ax [2335])) "ETAFLD2.f":520 85 {*movdi_internal}
     (nil))
(insn 2702 2701 2703 175 (set (reg:DI 4 si)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                (const_int 348 [0x15c])))) "ETAFLD2.f":520 85 {*movdi_internal}
     (nil))
(insn 2703 2702 2704 175 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                (const_int 4 [0x4])))) "ETAFLD2.f":520 85 {*movdi_internal}
     (nil))
(insn 2704 2703 2705 175 (set (reg:QI 0 ax)
        (const_int 0 [0])) "ETAFLD2.f":520 88 {*movqi_internal}
     (nil))
(call_insn 2705 2704 2706 175 (call (mem:QI (symbol_ref:DI ("output_") [flags 0x41]  <function_decl 0x7f9828228700 output>) [0 output S1 A8])
        (const_int 0 [0])) "ETAFLD2.f":520 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
;;  succ:       176 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 176, loop depth 0, maybe hot
;;  prev block 175, next block 177, flags: (RTL, MODIFIED)
;;  pred:       171
;;              175 (FALLTHRU)
;;              172
;; bb 176 artificial_defs: { }
;; bb 176 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 806
(code_label 2706 2705 2707 176 86 (nil) [2 uses])
(note 2707 2706 2708 176 [bb 176] NOTE_INSN_BASIC_BLOCK)
(insn 2708 2707 2709 176 (set (reg:SI 0 ax [orig:806 _720 ] [806])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 56 [0x38]))) [1 rqstfld.iget+40 S4 A64])) "ETAFLD2.f":525 86 {*movsi_internal}
     (nil))
(insn 2709 2708 2710 176 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:806 _720 ] [806])
            (const_int 0 [0]))) "ETAFLD2.f":525 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 2710 2709 2711 176 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 2795)
            (pc))) "ETAFLD2.f":525 682 {*jcc}
     (nil)
 -> 2795)
;;  succ:       177 (FALLTHRU)
;;              181
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 177, loop depth 0, maybe hot
;;  prev block 176, next block 178, flags: (RTL, MODIFIED)
;;  pred:       176 (FALLTHRU)
;; bb 177 artificial_defs: { }
;; bb 177 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 807 808 809 810 811 812 813 814 2336 2337 2338 2339
(note 2711 2710 2712 177 [bb 177] NOTE_INSN_BASIC_BLOCK)
(insn 2712 2711 2713 177 (set (reg:SI 0 ax [orig:807 _721 ] [807])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 56 [0x38]))) [1 rqstfld.iget+40 S4 A64])) "ETAFLD2.f":526 86 {*movsi_internal}
     (nil))
(insn 2713 2712 2714 177 (set (reg:DI 1 dx [orig:808 _722 ] [808])
        (sign_extend:DI (reg:SI 0 ax [orig:807 _721 ] [807]))) "ETAFLD2.f":526 149 {*extendsidi2_rex64}
     (nil))
(insn 2714 2713 2715 177 (set (reg:DI 0 ax [2336])
        (reg:DI 1 dx [orig:808 _722 ] [808])) "ETAFLD2.f":526 85 {*movdi_internal}
     (nil))
(insn 2715 2714 2717 177 (parallel [
            (set (reg:DI 0 ax [2337])
                (ashift:DI (reg:DI 0 ax [2336])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":526 551 {*ashldi3_1}
     (nil))
(insn 2717 2715 2718 177 (parallel [
            (set (reg:DI 0 ax [2336])
                (minus:DI (reg:DI 0 ax [2336])
                    (reg:DI 1 dx [orig:808 _722 ] [808])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":526 278 {*subdi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:808 _722 ] [808])
            (const_int 15 [0xf]))
        (nil)))
(insn 2718 2717 2720 177 (parallel [
            (set (reg:DI 0 ax [2338])
                (ashift:DI (reg:DI 0 ax [2336])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":526 551 {*ashldi3_1}
     (nil))
(insn 2720 2718 2721 177 (set (reg:DI 1 dx [orig:809 _723 ] [809])
        (reg:DI 0 ax [2336])) "ETAFLD2.f":526 85 {*movdi_internal}
     (nil))
(insn 2721 2720 2722 177 (set (reg:SI 0 ax [orig:810 l.110_724 ] [810])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":526 86 {*movsi_internal}
     (nil))
(insn 2722 2721 2723 177 (set (reg:DI 0 ax [orig:811 _725 ] [811])
        (sign_extend:DI (reg:SI 0 ax [orig:810 l.110_724 ] [810]))) "ETAFLD2.f":526 149 {*extendsidi2_rex64}
     (nil))
(insn 2723 2722 2724 177 (parallel [
            (set (reg:DI 0 ax [orig:812 _726 ] [812])
                (plus:DI (reg:DI 0 ax [orig:811 _725 ] [811])
                    (reg:DI 1 dx [orig:809 _723 ] [809])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":526 222 {*adddi_1}
     (nil))
(insn 2724 2723 2725 177 (parallel [
            (set (reg:DI 0 ax [orig:813 _727 ] [813])
                (plus:DI (reg:DI 0 ax [orig:812 _726 ] [812])
                    (const_int -61 [0xffffffffffffffc3])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":526 222 {*adddi_1}
     (nil))
(insn 2725 2724 2726 177 (parallel [
            (set (reg:DI 0 ax [2339])
                (plus:DI (reg:DI 0 ax [orig:813 _727 ] [813])
                    (const_int 1404 [0x57c])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":526 222 {*adddi_1}
     (nil))
(insn 2726 2725 2727 177 (set (reg:SI 0 ax [orig:814 _728 ] [814])
        (mem:SI (plus:DI (mult:DI (reg:DI 0 ax [2339])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)) [1 rqstfld.lvls S4 A32])) "ETAFLD2.f":526 86 {*movsi_internal}
     (nil))
(insn 2727 2726 2728 177 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:814 _728 ] [814])
            (const_int 0 [0]))) "ETAFLD2.f":526 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 2728 2727 2729 177 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 2795)
            (pc))) "ETAFLD2.f":526 682 {*jcc}
     (nil)
 -> 2795)
;;  succ:       178 (FALLTHRU)
;;              181
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 178, loop depth 0, maybe hot
;;  prev block 177, next block 179, flags: (RTL, MODIFIED)
;;  pred:       177 (FALLTHRU)
;; bb 178 artificial_defs: { }
;; bb 178 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 815 816 817 818 819 820 821 822 823 824 2340 2341 2342 2343 2344 2345 2346 2347 2348 2349 2350
(note 2729 2728 2730 178 [bb 178] NOTE_INSN_BASIC_BLOCK)
(insn 2730 2729 2731 178 (set (reg:SI 0 ax [orig:815 _729 ] [815])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 56 [0x38]))) [1 rqstfld.iget+40 S4 A64])) "ETAFLD2.f":527 86 {*movsi_internal}
     (nil))
(insn 2731 2730 2732 178 (set (reg:DI 1 dx [orig:816 _730 ] [816])
        (sign_extend:DI (reg:SI 0 ax [orig:815 _729 ] [815]))) "ETAFLD2.f":527 149 {*extendsidi2_rex64}
     (nil))
(insn 2732 2731 2733 178 (set (reg:DI 0 ax [2340])
        (reg:DI 1 dx [orig:816 _730 ] [816])) "ETAFLD2.f":527 85 {*movdi_internal}
     (nil))
(insn 2733 2732 2735 178 (parallel [
            (set (reg:DI 0 ax [2341])
                (ashift:DI (reg:DI 0 ax [2340])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":527 551 {*ashldi3_1}
     (nil))
(insn 2735 2733 2736 178 (parallel [
            (set (reg:DI 0 ax [2340])
                (minus:DI (reg:DI 0 ax [2340])
                    (reg:DI 1 dx [orig:816 _730 ] [816])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":527 278 {*subdi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:816 _730 ] [816])
            (const_int 15 [0xf]))
        (nil)))
(insn 2736 2735 2738 178 (parallel [
            (set (reg:DI 0 ax [2342])
                (ashift:DI (reg:DI 0 ax [2340])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":527 551 {*ashldi3_1}
     (nil))
(insn 2738 2736 2739 178 (set (reg:DI 1 dx [orig:817 _731 ] [817])
        (reg:DI 0 ax [2340])) "ETAFLD2.f":527 85 {*movdi_internal}
     (nil))
(insn 2739 2738 2740 178 (set (reg:SI 0 ax [orig:818 l.111_732 ] [818])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":527 86 {*movsi_internal}
     (nil))
(insn 2740 2739 2741 178 (set (reg:DI 0 ax [orig:819 _733 ] [819])
        (sign_extend:DI (reg:SI 0 ax [orig:818 l.111_732 ] [818]))) "ETAFLD2.f":527 149 {*extendsidi2_rex64}
     (nil))
(insn 2741 2740 2742 178 (parallel [
            (set (reg:DI 0 ax [orig:820 _734 ] [820])
                (plus:DI (reg:DI 0 ax [orig:819 _733 ] [819])
                    (reg:DI 1 dx [orig:817 _731 ] [817])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":527 222 {*adddi_1}
     (nil))
(insn 2742 2741 2743 178 (parallel [
            (set (reg:DI 0 ax [orig:821 _735 ] [821])
                (plus:DI (reg:DI 0 ax [orig:820 _734 ] [820])
                    (const_int -61 [0xffffffffffffffc3])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":527 222 {*adddi_1}
     (nil))
(insn 2743 2742 2744 178 (parallel [
            (set (reg:DI 0 ax [2343])
                (plus:DI (reg:DI 0 ax [orig:821 _735 ] [821])
                    (const_int 1404 [0x57c])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":527 222 {*adddi_1}
     (nil))
(insn 2744 2743 2745 178 (set (reg:SI 0 ax [orig:822 _736 ] [822])
        (mem:SI (plus:DI (mult:DI (reg:DI 0 ax [2343])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)) [1 rqstfld.lvls S4 A32])) "ETAFLD2.f":527 86 {*movsi_internal}
     (nil))
(insn 2745 2744 2746 178 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -268 [0xfffffffffffffef4])) [1 itype+0 S4 A32])
        (reg:SI 0 ax [orig:822 _736 ] [822])) "ETAFLD2.f":527 86 {*movsi_internal}
     (nil))
(insn 2746 2745 2747 178 (parallel [
            (set (reg:DI 1 dx [2344])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -272 [0xfffffffffffffef0])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":528 222 {*adddi_1}
     (nil))
(insn 2747 2746 2748 178 (parallel [
            (set (reg:DI 0 ax [2345])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -268 [0xfffffffffffffef4])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":528 222 {*adddi_1}
     (nil))
(insn 2748 2747 2749 178 (set (reg:DI 37 r8)
        (symbol_ref:DI ("equiv.3.4378") [flags 0x202]  <var_decl 0x7f9828263750 equiv.3>)) "ETAFLD2.f":528 85 {*movdi_internal}
     (nil))
(insn 2749 2748 2751 178 (set (reg:DI 2 cx)
        (const:DI (plus:DI (symbol_ref:DI ("loops_") [flags 0x202]  <var_decl 0x7f9828246c60 loops>)
                (const_int 9680 [0x25d0])))) "ETAFLD2.f":528 85 {*movdi_internal}
     (nil))
(insn 2751 2749 2752 178 (set (reg:DI 4 si)
        (reg:DI 0 ax [2345])) "ETAFLD2.f":528 85 {*movdi_internal}
     (nil))
(insn 2752 2751 2753 178 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("pvrbls_") [flags 0x202]  <var_decl 0x7f9828254510 pvrbls>)
                (const_int 2251956 [0x225cb4])))) "ETAFLD2.f":528 85 {*movdi_internal}
     (nil))
(insn 2753 2752 2754 178 (set (reg:QI 0 ax)
        (const_int 0 [0])) "ETAFLD2.f":528 88 {*movqi_internal}
     (nil))
(call_insn 2754 2753 2755 178 (call (mem:QI (symbol_ref:DI ("netal_") [flags 0x41]  <function_decl 0x7f9828228a00 netal>) [0 netal S1 A8])
        (const_int 0 [0])) "ETAFLD2.f":528 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (nil))))))))
(insn 2755 2754 2756 178 (set (reg:DI 1 dx [2346])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [4 grid2+0 S8 A64])) "ETAFLD2.f":529 85 {*movdi_internal}
     (nil))
(insn 2756 2755 2757 178 (set (reg:DI 0 ax [2347])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "ETAFLD2.f":529 85 {*movdi_internal}
     (nil))
(insn 2757 2756 2758 178 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [11  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -832 [0xfffffffffffffcc0])) [11 jmout+0 S8 A64])) "ETAFLD2.f":529 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 2758 2757 2759 178 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [11  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -824 [0xfffffffffffffcc8])) [11 imout+0 S8 A64])) "ETAFLD2.f":529 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 2759 2758 2760 178 (set (reg:DI 38 r9)
        (reg:DI 1 dx [2346])) "ETAFLD2.f":529 85 {*movdi_internal}
     (nil))
(insn 2760 2759 2761 178 (set (reg:DI 37 r8)
        (reg:DI 0 ax [2347])) "ETAFLD2.f":529 85 {*movdi_internal}
     (nil))
(insn 2761 2760 2762 178 (set (reg:DI 2 cx)
        (symbol_ref:DI ("equiv.2.4368") [flags 0x202]  <var_decl 0x7f9828263510 equiv.2>)) "ETAFLD2.f":529 85 {*movdi_internal}
     (nil))
(insn 2762 2761 2763 178 (set (reg:DI 1 dx)
        (symbol_ref:DI ("equiv.3.4378") [flags 0x202]  <var_decl 0x7f9828263750 equiv.3>)) "ETAFLD2.f":529 85 {*movdi_internal}
     (nil))
(insn 2763 2762 2764 178 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f9827f94240 *.LC3>)) "ETAFLD2.f":529 85 {*movdi_internal}
     (nil))
(insn 2764 2763 2765 178 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC42") [flags 0x2]  <var_decl 0x7f9828035000 *.LC42>)) "ETAFLD2.f":529 85 {*movdi_internal}
     (nil))
(insn 2765 2764 2766 178 (set (reg:QI 0 ax)
        (const_int 0 [0])) "ETAFLD2.f":529 88 {*movqi_internal}
     (nil))
(call_insn 2766 2765 2767 178 (call (mem:QI (symbol_ref:DI ("e2out_") [flags 0x41]  <function_decl 0x7f9828228600 e2out>) [0 e2out S1 A8])
        (const_int 16 [0x10])) "ETAFLD2.f":529 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
(insn 2767 2766 2768 178 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":529 222 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 2768 2767 2769 178 (set (reg/f:DI 1 dx [2348])
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                (const_int 55216 [0xd7b0])))) "ETAFLD2.f":530 85 {*movdi_internal}
     (nil))
(insn 2769 2768 2770 178 (set (reg:DI 0 ax [2349])
        (const_int 0 [0])) "ETAFLD2.f":530 85 {*movdi_internal}
     (nil))
(insn 2770 2769 5877 178 (set (reg:DI 2 cx [2350])
        (const_int 12 [0xc])) "ETAFLD2.f":530 85 {*movdi_internal}
     (nil))
(insn 5877 2770 2771 178 (set (reg/f:DI 5 di [2348])
        (reg/f:DI 1 dx [2348])) "ETAFLD2.f":530 85 {*movdi_internal}
     (nil))
(insn 2771 5877 5878 178 (parallel [
            (set (reg:DI 2 cx [2350])
                (const_int 0 [0]))
            (set (reg/f:DI 5 di [2348])
                (plus:DI (ashift:DI (reg:DI 2 cx [2350])
                        (const_int 3 [0x3]))
                    (reg/f:DI 5 di [2348])))
            (set (mem/c:BLK (reg/f:DI 5 di [2348]) [1 rqstfld.id+0 S96 A128])
                (const_int 0 [0]))
            (use (reg:DI 0 ax [2349]))
            (use (reg:DI 2 cx [2350]))
        ]) "ETAFLD2.f":530 984 {*rep_stosdi_rex64}
     (nil))
(insn 5878 2771 2772 178 (set (reg/f:DI 1 dx [2348])
        (reg/f:DI 5 di [2348])) "ETAFLD2.f":530 85 {*movdi_internal}
     (nil))
(insn 2772 5878 2773 178 (set (mem/c:SI (reg/f:DI 1 dx [2348]) [1 rqstfld.id+96 S4 A128])
        (reg:SI 0 ax [2349])) "ETAFLD2.f":530 86 {*movsi_internal}
     (nil))
(insn 2773 2772 2774 178 (parallel [
            (set (reg/f:DI 1 dx [2348])
                (plus:DI (reg/f:DI 1 dx [2348])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":530 222 {*adddi_1}
     (nil))
(insn 2774 2773 2775 178 (set (reg:SI 0 ax [orig:823 l.112_737 ] [823])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":531 86 {*movsi_internal}
     (nil))
(insn 2775 2774 2776 178 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -276 [0xfffffffffffffeec])) [1 lyr+0 S4 A32])
        (reg:SI 0 ax [orig:823 l.112_737 ] [823])) "ETAFLD2.f":531 86 {*movsi_internal}
     (nil))
(insn 2776 2775 2777 178 (set (reg:SI 0 ax [orig:824 itype.113_738 ] [824])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -268 [0xfffffffffffffef4])) [1 itype+0 S4 A32])) "ETAFLD2.f":532 86 {*movsi_internal}
     (nil))
(insn 2777 2776 2778 178 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [orig:824 itype.113_738 ] [824])
            (const_int 1 [0x1]))) "ETAFLD2.f":532 11 {*cmpsi_1}
     (nil))
(jump_insn 2778 2777 2779 178 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 2781)
            (pc))) "ETAFLD2.f":532 682 {*jcc}
     (nil)
 -> 2781)
;;  succ:       179 (FALLTHRU)
;;              180
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 179, loop depth 0, maybe hot
;;  prev block 178, next block 180, flags: (RTL, MODIFIED)
;;  pred:       178 (FALLTHRU)
;; bb 179 artificial_defs: { }
;; bb 179 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 2779 2778 2780 179 [bb 179] NOTE_INSN_BASIC_BLOCK)
(insn 2780 2779 2781 179 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 55248 [0xd7d0]))) [1 rqstfld.id+32 S4 A128])
        (const_int 109 [0x6d])) "ETAFLD2.f":532 86 {*movsi_internal}
     (nil))
;;  succ:       180 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 180, loop depth 0, maybe hot
;;  prev block 179, next block 181, flags: (RTL, MODIFIED)
;;  pred:       178
;;              179 (FALLTHRU)
;; bb 180 artificial_defs: { }
;; bb 180 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 2351 2352 2353 2354
(code_label 2781 2780 2782 180 89 (nil) [1 uses])
(note 2782 2781 2783 180 [bb 180] NOTE_INSN_BASIC_BLOCK)
(insn 2783 2782 2784 180 (set (reg:DI 4 si [2351])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -832 [0xfffffffffffffcc0])) [11 jmout+0 S8 A64])) "ETAFLD2.f":533 85 {*movdi_internal}
     (nil))
(insn 2784 2783 2785 180 (set (reg:DI 2 cx [2352])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -824 [0xfffffffffffffcc8])) [11 imout+0 S8 A64])) "ETAFLD2.f":533 85 {*movdi_internal}
     (nil))
(insn 2785 2784 2786 180 (set (reg:DI 1 dx [2353])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "ETAFLD2.f":533 85 {*movdi_internal}
     (nil))
(insn 2786 2785 2787 180 (parallel [
            (set (reg:DI 0 ax [2354])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -276 [0xfffffffffffffeec])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":533 222 {*adddi_1}
     (nil))
(insn 2787 2786 2788 180 (set (reg:DI 38 r9)
        (reg:DI 4 si [2351])) "ETAFLD2.f":533 85 {*movdi_internal}
     (nil))
(insn 2788 2787 2789 180 (set (reg:DI 37 r8)
        (reg:DI 2 cx [2352])) "ETAFLD2.f":533 85 {*movdi_internal}
     (nil))
(insn 2789 2788 2790 180 (set (reg:DI 2 cx)
        (reg:DI 1 dx [2353])) "ETAFLD2.f":533 85 {*movdi_internal}
     (nil))
(insn 2790 2789 2791 180 (set (reg:DI 1 dx)
        (reg:DI 0 ax [2354])) "ETAFLD2.f":533 85 {*movdi_internal}
     (nil))
(insn 2791 2790 2792 180 (set (reg:DI 4 si)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                (const_int 56 [0x38])))) "ETAFLD2.f":533 85 {*movdi_internal}
     (nil))
(insn 2792 2791 2793 180 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                (const_int 4 [0x4])))) "ETAFLD2.f":533 85 {*movdi_internal}
     (nil))
(insn 2793 2792 2794 180 (set (reg:QI 0 ax)
        (const_int 0 [0])) "ETAFLD2.f":533 88 {*movqi_internal}
     (nil))
(call_insn 2794 2793 2795 180 (call (mem:QI (symbol_ref:DI ("output_") [flags 0x41]  <function_decl 0x7f9828228700 output>) [0 output S1 A8])
        (const_int 0 [0])) "ETAFLD2.f":533 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
;;  succ:       181 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 181, loop depth 0, maybe hot
;;  prev block 180, next block 182, flags: (RTL, MODIFIED)
;;  pred:       176
;;              180 (FALLTHRU)
;;              177
;; bb 181 artificial_defs: { }
;; bb 181 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 825
(code_label 2795 2794 2796 181 88 (nil) [2 uses])
(note 2796 2795 2797 181 [bb 181] NOTE_INSN_BASIC_BLOCK)
(insn 2797 2796 2798 181 (set (reg:SI 0 ax [orig:825 _739 ] [825])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 508 [0x1fc]))) [1 rqstfld.iget+492 S4 A32])) "ETAFLD2.f":538 86 {*movsi_internal}
     (nil))
(insn 2798 2797 2799 181 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:825 _739 ] [825])
            (const_int 0 [0]))) "ETAFLD2.f":538 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 2799 2798 2800 181 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 3039)
            (pc))) "ETAFLD2.f":538 682 {*jcc}
     (nil)
 -> 3039)
;;  succ:       182 (FALLTHRU)
;;              201
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 182, loop depth 0, maybe hot
;;  prev block 181, next block 183, flags: (RTL, MODIFIED)
;;  pred:       181 (FALLTHRU)
;; bb 182 artificial_defs: { }
;; bb 182 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 826 827 828 829 830 831 832 833 2355 2356 2357 2358
(note 2800 2799 2801 182 [bb 182] NOTE_INSN_BASIC_BLOCK)
(insn 2801 2800 2802 182 (set (reg:SI 0 ax [orig:826 _740 ] [826])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 508 [0x1fc]))) [1 rqstfld.iget+492 S4 A32])) "ETAFLD2.f":539 86 {*movsi_internal}
     (nil))
(insn 2802 2801 2803 182 (set (reg:DI 1 dx [orig:827 _741 ] [827])
        (sign_extend:DI (reg:SI 0 ax [orig:826 _740 ] [826]))) "ETAFLD2.f":539 149 {*extendsidi2_rex64}
     (nil))
(insn 2803 2802 2804 182 (set (reg:DI 0 ax [2355])
        (reg:DI 1 dx [orig:827 _741 ] [827])) "ETAFLD2.f":539 85 {*movdi_internal}
     (nil))
(insn 2804 2803 2806 182 (parallel [
            (set (reg:DI 0 ax [2356])
                (ashift:DI (reg:DI 0 ax [2355])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":539 551 {*ashldi3_1}
     (nil))
(insn 2806 2804 2807 182 (parallel [
            (set (reg:DI 0 ax [2355])
                (minus:DI (reg:DI 0 ax [2355])
                    (reg:DI 1 dx [orig:827 _741 ] [827])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":539 278 {*subdi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:827 _741 ] [827])
            (const_int 15 [0xf]))
        (nil)))
(insn 2807 2806 2809 182 (parallel [
            (set (reg:DI 0 ax [2357])
                (ashift:DI (reg:DI 0 ax [2355])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":539 551 {*ashldi3_1}
     (nil))
(insn 2809 2807 2810 182 (set (reg:DI 1 dx [orig:828 _742 ] [828])
        (reg:DI 0 ax [2355])) "ETAFLD2.f":539 85 {*movdi_internal}
     (nil))
(insn 2810 2809 2811 182 (set (reg:SI 0 ax [orig:829 l.114_743 ] [829])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":539 86 {*movsi_internal}
     (nil))
(insn 2811 2810 2812 182 (set (reg:DI 0 ax [orig:830 _744 ] [830])
        (sign_extend:DI (reg:SI 0 ax [orig:829 l.114_743 ] [829]))) "ETAFLD2.f":539 149 {*extendsidi2_rex64}
     (nil))
(insn 2812 2811 2813 182 (parallel [
            (set (reg:DI 0 ax [orig:831 _745 ] [831])
                (plus:DI (reg:DI 0 ax [orig:830 _744 ] [830])
                    (reg:DI 1 dx [orig:828 _742 ] [828])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":539 222 {*adddi_1}
     (nil))
(insn 2813 2812 2814 182 (parallel [
            (set (reg:DI 0 ax [orig:832 _746 ] [832])
                (plus:DI (reg:DI 0 ax [orig:831 _745 ] [831])
                    (const_int -61 [0xffffffffffffffc3])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":539 222 {*adddi_1}
     (nil))
(insn 2814 2813 2815 182 (parallel [
            (set (reg:DI 0 ax [2358])
                (plus:DI (reg:DI 0 ax [orig:832 _746 ] [832])
                    (const_int 1404 [0x57c])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":539 222 {*adddi_1}
     (nil))
(insn 2815 2814 2816 182 (set (reg:SI 0 ax [orig:833 _747 ] [833])
        (mem:SI (plus:DI (mult:DI (reg:DI 0 ax [2358])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)) [1 rqstfld.lvls S4 A32])) "ETAFLD2.f":539 86 {*movsi_internal}
     (nil))
(insn 2816 2815 2817 182 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:833 _747 ] [833])
            (const_int 0 [0]))) "ETAFLD2.f":539 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 2817 2816 2818 182 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 3039)
            (pc))) "ETAFLD2.f":539 682 {*jcc}
     (nil)
 -> 3039)
;;  succ:       183 (FALLTHRU)
;;              201
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 183, loop depth 0, maybe hot
;;  prev block 182, next block 184, flags: (RTL, MODIFIED)
;;  pred:       182 (FALLTHRU)
;; bb 183 artificial_defs: { }
;; bb 183 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 1686 1687
(note 2818 2817 2819 183 [bb 183] NOTE_INSN_BASIC_BLOCK)
(insn 2819 2818 2820 183 (set (reg:SI 1 dx [orig:1686 _1998 ] [1686])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f982824fc60 parallel>)
                    (const_int 8 [0x8]))) [1 parallel.jsta+0 S4 A64])) "ETAFLD2.f":540 86 {*movsi_internal}
     (nil))
(insn 2820 2819 2821 183 (set (reg:SI 0 ax [orig:1687 _1999 ] [1687])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f982824fc60 parallel>)
                    (const_int 12 [0xc]))) [1 parallel.jend+0 S4 A32])) "ETAFLD2.f":540 86 {*movsi_internal}
     (nil))
(insn 2821 2820 2899 183 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])
        (reg:SI 1 dx [orig:1686 _1998 ] [1686])) "ETAFLD2.f":540 86 {*movsi_internal}
     (nil))
;;  succ:       184 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1687

;; basic block 184, loop depth 0, maybe hot
;;  prev block 183, next block 185, flags: (RTL, MODIFIED)
;;  pred:       183 (FALLTHRU)
;;              191 [always] 
;; bb 184 artificial_defs: { }
;; bb 184 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1687
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1687
;; lr  def 	 17 [flags] 1688 2359
(code_label 2899 2821 2822 184 97 (nil) [1 uses])
(note 2822 2899 2823 184 [bb 184] NOTE_INSN_BASIC_BLOCK)
(insn 2823 2822 2824 184 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])
            (reg:SI 0 ax [orig:1687 _1999 ] [1687]))) "ETAFLD2.f":540 11 {*cmpsi_1}
     (nil))
(insn 2824 2823 2825 184 (set (reg:QI 1 dx [2359])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "ETAFLD2.f":540 678 {*setcc_qi}
     (nil))
(insn 2825 2824 2826 184 (set (reg:SI 1 dx [orig:1688 _2001 ] [1688])
        (zero_extend:SI (reg:QI 1 dx [2359]))) "ETAFLD2.f":540 140 {*zero_extendqisi2}
     (nil))
(insn 2826 2825 2827 184 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1688 _2001 ] [1688])
            (const_int 0 [0]))) "ETAFLD2.f":540 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 2827 2826 2828 184 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 5744)
            (pc))) "ETAFLD2.f":540 682 {*jcc}
     (nil)
 -> 5744)
;;  succ:       379
;;              185 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1687

;; basic block 185, loop depth 0, maybe hot
;;  prev block 184, next block 186, flags: (RTL, MODIFIED)
;;  pred:       184 (FALLTHRU)
;; bb 185 artificial_defs: { }
;; bb 185 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1687
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 2828 2827 2829 185 [bb 185] NOTE_INSN_BASIC_BLOCK)
(insn 2829 2828 2893 185 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
        (const_int 1 [0x1])) "ETAFLD2.f":541 86 {*movsi_internal}
     (nil))
;;  succ:       186 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1687

;; basic block 186, loop depth 0, maybe hot
;;  prev block 185, next block 187, flags: (RTL, MODIFIED)
;;  pred:       185 (FALLTHRU)
;;              190 [always] 
;; bb 186 artificial_defs: { }
;; bb 186 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1687
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1689 2360
(code_label 2893 2829 2830 186 96 (nil) [1 uses])
(note 2830 2893 2831 186 [bb 186] NOTE_INSN_BASIC_BLOCK)
(insn 2831 2830 2832 186 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
            (const_int 119 [0x77]))) "ETAFLD2.f":541 11 {*cmpsi_1}
     (nil))
(insn 2832 2831 2833 186 (set (reg:QI 1 dx [2360])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "ETAFLD2.f":541 678 {*setcc_qi}
     (nil))
(insn 2833 2832 2834 186 (set (reg:SI 1 dx [orig:1689 _2003 ] [1689])
        (zero_extend:SI (reg:QI 1 dx [2360]))) "ETAFLD2.f":541 140 {*zero_extendqisi2}
     (nil))
(insn 2834 2833 2835 186 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1689 _2003 ] [1689])
            (const_int 0 [0]))) "ETAFLD2.f":541 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 2835 2834 2836 186 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 5747)
            (pc))) "ETAFLD2.f":541 682 {*jcc}
     (nil)
 -> 5747)
;;  succ:       380
;;              187 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1687

;; basic block 187, loop depth 0, maybe hot
;;  prev block 186, next block 188, flags: (RTL, MODIFIED)
;;  pred:       186 (FALLTHRU)
;; bb 187 artificial_defs: { }
;; bb 187 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1687
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 834 835 836 837 838 839 840 841 842 843 2361 2362 2363 2364
(note 2836 2835 2837 187 [bb 187] NOTE_INSN_BASIC_BLOCK)
(insn 2837 2836 2838 187 (set (reg:SI 1 dx [orig:834 l.115_748 ] [834])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":542 86 {*movsi_internal}
     (nil))
(insn 2838 2837 2839 187 (set (reg:DI 1 dx [orig:835 _749 ] [835])
        (sign_extend:DI (reg:SI 1 dx [orig:834 l.115_748 ] [834]))) "ETAFLD2.f":542 149 {*extendsidi2_rex64}
     (nil))
(insn 2839 2838 2840 187 (parallel [
            (set (reg:DI 2 cx [orig:836 _750 ] [836])
                (mult:DI (reg:DI 1 dx [orig:835 _749 ] [835])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":542 349 {*muldi3_1}
     (nil))
(insn 2840 2839 2841 187 (set (reg:SI 1 dx [2361])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])) "ETAFLD2.f":542 86 {*movsi_internal}
     (nil))
(insn 2841 2840 2842 187 (set (reg:DI 1 dx [orig:837 _751 ] [837])
        (sign_extend:DI (reg:SI 1 dx [2361]))) "ETAFLD2.f":542 149 {*extendsidi2_rex64}
     (nil))
(insn 2842 2841 2843 187 (parallel [
            (set (reg:DI 1 dx [orig:838 _752 ] [838])
                (mult:DI (reg:DI 1 dx [orig:837 _751 ] [837])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":542 349 {*muldi3_1}
     (nil))
(insn 2843 2842 2844 187 (parallel [
            (set (reg:DI 2 cx [orig:839 _753 ] [839])
                (plus:DI (reg:DI 2 cx [orig:836 _750 ] [836])
                    (reg:DI 1 dx [orig:838 _752 ] [838])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":542 222 {*adddi_1}
     (nil))
(insn 2844 2843 2845 187 (set (reg:SI 1 dx [2362])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "ETAFLD2.f":542 86 {*movsi_internal}
     (nil))
(insn 2845 2844 2846 187 (set (reg:DI 1 dx [orig:840 _754 ] [840])
        (sign_extend:DI (reg:SI 1 dx [2362]))) "ETAFLD2.f":542 149 {*extendsidi2_rex64}
     (nil))
(insn 2846 2845 2847 187 (parallel [
            (set (reg:DI 1 dx [orig:841 _755 ] [841])
                (plus:DI (reg:DI 1 dx [orig:840 _754 ] [840])
                    (reg:DI 2 cx [orig:839 _753 ] [839])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":542 222 {*adddi_1}
     (nil))
(insn 2847 2846 2848 187 (parallel [
            (set (reg:DI 2 cx [orig:842 _756 ] [842])
                (plus:DI (reg:DI 1 dx [orig:841 _755 ] [841])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":542 222 {*adddi_1}
     (nil))
(insn 2848 2847 2849 187 (set (reg/f:DI 1 dx [2363])
        (symbol_ref:DI ("cldwtr_") [flags 0x202]  <var_decl 0x7f9828232a20 cldwtr>)) "ETAFLD2.f":542 85 {*movdi_internal}
     (nil))
(insn 2849 2848 2850 187 (set (reg:SF 22 xmm1 [orig:843 _757 ] [843])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:842 _756 ] [842])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [2363])) [2 cldwtr.cwm S4 A32])) "ETAFLD2.f":542 131 {*movsf_internal}
     (nil))
(insn 2850 2849 2851 187 (set (reg:SF 21 xmm0 [2364])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) "ETAFLD2.f":542 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 2851 2850 2852 187 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [2364])
            (reg:SF 22 xmm1 [orig:843 _757 ] [843]))) "ETAFLD2.f":542 53 {*cmpisf}
     (nil))
(jump_insn 2852 2851 2856 187 (set (pc)
        (if_then_else (unle (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 2890)
            (pc))) "ETAFLD2.f":542 682 {*jcc}
     (nil)
 -> 2890)
;;  succ:       188 (FALLTHRU)
;;              190
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1687

;; basic block 188, loop depth 0, maybe hot
;;  prev block 187, next block 189, flags: (RTL, MODIFIED)
;;  pred:       187 (FALLTHRU)
;; bb 188 artificial_defs: { }
;; bb 188 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1687
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 844 845 846 847 848 849 850 851 852 853 2365 2366 2367
(note 2856 2852 2857 188 [bb 188] NOTE_INSN_BASIC_BLOCK)
(insn 2857 2856 2858 188 (set (reg:SI 1 dx [orig:844 l.116_758 ] [844])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":542 86 {*movsi_internal}
     (nil))
(insn 2858 2857 2859 188 (set (reg:DI 1 dx [orig:845 _759 ] [845])
        (sign_extend:DI (reg:SI 1 dx [orig:844 l.116_758 ] [844]))) "ETAFLD2.f":542 149 {*extendsidi2_rex64}
     (nil))
(insn 2859 2858 2860 188 (parallel [
            (set (reg:DI 2 cx [orig:846 _760 ] [846])
                (mult:DI (reg:DI 1 dx [orig:845 _759 ] [845])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":542 349 {*muldi3_1}
     (nil))
(insn 2860 2859 2861 188 (set (reg:SI 1 dx [2365])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])) "ETAFLD2.f":542 86 {*movsi_internal}
     (nil))
(insn 2861 2860 2862 188 (set (reg:DI 1 dx [orig:847 _761 ] [847])
        (sign_extend:DI (reg:SI 1 dx [2365]))) "ETAFLD2.f":542 149 {*extendsidi2_rex64}
     (nil))
(insn 2862 2861 2863 188 (parallel [
            (set (reg:DI 1 dx [orig:848 _762 ] [848])
                (mult:DI (reg:DI 1 dx [orig:847 _761 ] [847])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":542 349 {*muldi3_1}
     (nil))
(insn 2863 2862 2864 188 (parallel [
            (set (reg:DI 2 cx [orig:849 _763 ] [849])
                (plus:DI (reg:DI 2 cx [orig:846 _760 ] [846])
                    (reg:DI 1 dx [orig:848 _762 ] [848])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":542 222 {*adddi_1}
     (nil))
(insn 2864 2863 2865 188 (set (reg:SI 1 dx [2366])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "ETAFLD2.f":542 86 {*movsi_internal}
     (nil))
(insn 2865 2864 2866 188 (set (reg:DI 1 dx [orig:850 _764 ] [850])
        (sign_extend:DI (reg:SI 1 dx [2366]))) "ETAFLD2.f":542 149 {*extendsidi2_rex64}
     (nil))
(insn 2866 2865 2867 188 (parallel [
            (set (reg:DI 1 dx [orig:851 _765 ] [851])
                (plus:DI (reg:DI 1 dx [orig:850 _764 ] [850])
                    (reg:DI 2 cx [orig:849 _763 ] [849])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":542 222 {*adddi_1}
     (nil))
(insn 2867 2866 2868 188 (parallel [
            (set (reg:DI 2 cx [orig:852 _766 ] [852])
                (plus:DI (reg:DI 1 dx [orig:851 _765 ] [851])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":542 222 {*adddi_1}
     (nil))
(insn 2868 2867 2869 188 (set (reg/f:DI 1 dx [2367])
        (symbol_ref:DI ("cldwtr_") [flags 0x202]  <var_decl 0x7f9828232a20 cldwtr>)) "ETAFLD2.f":542 85 {*movdi_internal}
     (nil))
(insn 2869 2868 2870 188 (set (reg:SF 21 xmm0 [orig:853 _767 ] [853])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:852 _766 ] [852])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [2367])) [2 cldwtr.cwm S4 A32])) "ETAFLD2.f":542 131 {*movsf_internal}
     (nil))
(insn 2870 2869 2871 188 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [orig:853 _767 ] [853])
            (mem/u/c:SF (symbol_ref/u:DI ("*.LC43") [flags 0x2]) [0  S4 A32]))) "ETAFLD2.f":542 53 {*cmpisf}
     (nil))
(jump_insn 2871 2870 2875 188 (set (pc)
        (if_then_else (unle (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 2890)
            (pc))) "ETAFLD2.f":542 682 {*jcc}
     (nil)
 -> 2890)
;;  succ:       189 (FALLTHRU)
;;              190
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1687

;; basic block 189, loop depth 0, maybe hot
;;  prev block 188, next block 190, flags: (RTL, MODIFIED)
;;  pred:       188 (FALLTHRU)
;; bb 189 artificial_defs: { }
;; bb 189 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1687
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 854 855 856 857 858 859 860 861 862 2368 2369 2370 2371
(note 2875 2871 2876 189 [bb 189] NOTE_INSN_BASIC_BLOCK)
(insn 2876 2875 2877 189 (set (reg:SI 1 dx [orig:854 l.117_768 ] [854])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":543 86 {*movsi_internal}
     (nil))
(insn 2877 2876 2878 189 (set (reg:DI 1 dx [orig:855 _769 ] [855])
        (sign_extend:DI (reg:SI 1 dx [orig:854 l.117_768 ] [854]))) "ETAFLD2.f":543 149 {*extendsidi2_rex64}
     (nil))
(insn 2878 2877 2879 189 (parallel [
            (set (reg:DI 2 cx [orig:856 _770 ] [856])
                (mult:DI (reg:DI 1 dx [orig:855 _769 ] [855])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":543 349 {*muldi3_1}
     (nil))
(insn 2879 2878 2880 189 (set (reg:SI 1 dx [2368])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])) "ETAFLD2.f":543 86 {*movsi_internal}
     (nil))
(insn 2880 2879 2881 189 (set (reg:DI 1 dx [orig:857 _771 ] [857])
        (sign_extend:DI (reg:SI 1 dx [2368]))) "ETAFLD2.f":543 149 {*extendsidi2_rex64}
     (nil))
(insn 2881 2880 2882 189 (parallel [
            (set (reg:DI 1 dx [orig:858 _772 ] [858])
                (mult:DI (reg:DI 1 dx [orig:857 _771 ] [857])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":543 349 {*muldi3_1}
     (nil))
(insn 2882 2881 2883 189 (parallel [
            (set (reg:DI 2 cx [orig:859 _773 ] [859])
                (plus:DI (reg:DI 2 cx [orig:856 _770 ] [856])
                    (reg:DI 1 dx [orig:858 _772 ] [858])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":543 222 {*adddi_1}
     (nil))
(insn 2883 2882 2884 189 (set (reg:SI 1 dx [2369])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "ETAFLD2.f":543 86 {*movsi_internal}
     (nil))
(insn 2884 2883 2885 189 (set (reg:DI 1 dx [orig:860 _774 ] [860])
        (sign_extend:DI (reg:SI 1 dx [2369]))) "ETAFLD2.f":543 149 {*extendsidi2_rex64}
     (nil))
(insn 2885 2884 2886 189 (parallel [
            (set (reg:DI 1 dx [orig:861 _775 ] [861])
                (plus:DI (reg:DI 1 dx [orig:860 _774 ] [860])
                    (reg:DI 2 cx [orig:859 _773 ] [859])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":543 222 {*adddi_1}
     (nil))
(insn 2886 2885 2887 189 (parallel [
            (set (reg:DI 2 cx [orig:862 _776 ] [862])
                (plus:DI (reg:DI 1 dx [orig:861 _775 ] [861])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":543 222 {*adddi_1}
     (nil))
(insn 2887 2886 2888 189 (set (reg/f:DI 1 dx [2370])
        (symbol_ref:DI ("cldwtr_") [flags 0x202]  <var_decl 0x7f9828232a20 cldwtr>)) "ETAFLD2.f":543 85 {*movdi_internal}
     (nil))
(insn 2888 2887 2889 189 (set (reg:SF 21 xmm0 [2371])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) "ETAFLD2.f":543 131 {*movsf_internal}
     (nil))
(insn 2889 2888 2890 189 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:862 _776 ] [862])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [2370])) [2 cldwtr.cwm S4 A32])
        (reg:SF 21 xmm0 [2371])) "ETAFLD2.f":543 131 {*movsf_internal}
     (nil))
;;  succ:       190 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1687

;; basic block 190, loop depth 0, maybe hot
;;  prev block 189, next block 380, flags: (RTL, MODIFIED)
;;  pred:       189 (FALLTHRU)
;;              187
;;              188
;; bb 190 artificial_defs: { }
;; bb 190 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1687
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 2890 2889 2891 190 93 (nil) [2 uses])
(note 2891 2890 2892 190 [bb 190] NOTE_INSN_BASIC_BLOCK)
(insn 2892 2891 5621 190 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":541 221 {*addsi_1}
     (nil))
(jump_insn 5621 2892 5622 190 (set (pc)
        (label_ref 2893)) "ETAFLD2.f":541 683 {jump}
     (nil)
 -> 2893)
;;  succ:       186 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1687

(barrier 5622 5621 5747)
;; basic block 380, loop depth 0, maybe hot
;;  prev block 190, next block 191, flags: (RTL, MODIFIED)
;;  pred:       186
;; bb 380 artificial_defs: { }
;; bb 380 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1687
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 5747 5622 5746 380 240 (nil) [1 uses])
(note 5746 5747 5748 380 [bb 380] NOTE_INSN_BASIC_BLOCK)
(insn 5748 5746 2896 380 (const_int 0 [0]) "ETAFLD2.f":543 718 {nop}
     (nil))
;;  succ:       191 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1687

;; basic block 191, loop depth 0, maybe hot
;;  prev block 380, next block 379, flags: (RTL, MODIFIED)
;;  pred:       380 [always]  (FALLTHRU)
;; bb 191 artificial_defs: { }
;; bb 191 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1687
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 2896 5748 2897 191 92 (nil) [0 uses])
(note 2897 2896 2898 191 [bb 191] NOTE_INSN_BASIC_BLOCK)
(insn 2898 2897 5623 191 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":540 221 {*addsi_1}
     (nil))
(jump_insn 5623 2898 5624 191 (set (pc)
        (label_ref 2899)) "ETAFLD2.f":540 683 {jump}
     (nil)
 -> 2899)
;;  succ:       184 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1687

(barrier 5624 5623 5744)
;; basic block 379, loop depth 0, maybe hot
;;  prev block 191, next block 192, flags: (RTL, MODIFIED)
;;  pred:       184
;; bb 379 artificial_defs: { }
;; bb 379 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 5744 5624 5743 379 239 (nil) [1 uses])
(note 5743 5744 5745 379 [bb 379] NOTE_INSN_BASIC_BLOCK)
(insn 5745 5743 2902 379 (const_int 0 [0]) "ETAFLD2.f":541 718 {nop}
     (nil))
;;  succ:       192 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 192, loop depth 0, maybe hot
;;  prev block 379, next block 193, flags: (RTL, MODIFIED)
;;  pred:       379 [always]  (FALLTHRU)
;; bb 192 artificial_defs: { }
;; bb 192 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 863 864 865 866 867 868 869 870 1690 1691 2372 2373 2374 2375 2376 2377 2378 2379
(code_label 2902 5745 2903 192 91 (nil) [0 uses])
(note 2903 2902 2904 192 [bb 192] NOTE_INSN_BASIC_BLOCK)
(insn 2904 2903 2905 192 (set (reg:SI 0 ax [orig:863 _777 ] [863])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 508 [0x1fc]))) [1 rqstfld.iget+492 S4 A32])) "ETAFLD2.f":547 86 {*movsi_internal}
     (nil))
(insn 2905 2904 2906 192 (set (reg:DI 1 dx [orig:864 _778 ] [864])
        (sign_extend:DI (reg:SI 0 ax [orig:863 _777 ] [863]))) "ETAFLD2.f":547 149 {*extendsidi2_rex64}
     (nil))
(insn 2906 2905 2907 192 (set (reg:DI 0 ax [2372])
        (reg:DI 1 dx [orig:864 _778 ] [864])) "ETAFLD2.f":547 85 {*movdi_internal}
     (nil))
(insn 2907 2906 2909 192 (parallel [
            (set (reg:DI 0 ax [2373])
                (ashift:DI (reg:DI 0 ax [2372])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":547 551 {*ashldi3_1}
     (nil))
(insn 2909 2907 2910 192 (parallel [
            (set (reg:DI 0 ax [2372])
                (minus:DI (reg:DI 0 ax [2372])
                    (reg:DI 1 dx [orig:864 _778 ] [864])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":547 278 {*subdi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:864 _778 ] [864])
            (const_int 15 [0xf]))
        (nil)))
(insn 2910 2909 2912 192 (parallel [
            (set (reg:DI 0 ax [2374])
                (ashift:DI (reg:DI 0 ax [2372])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":547 551 {*ashldi3_1}
     (nil))
(insn 2912 2910 2913 192 (set (reg:DI 1 dx [orig:865 _779 ] [865])
        (reg:DI 0 ax [2372])) "ETAFLD2.f":547 85 {*movdi_internal}
     (nil))
(insn 2913 2912 2914 192 (set (reg:SI 0 ax [orig:866 l.118_780 ] [866])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":547 86 {*movsi_internal}
     (nil))
(insn 2914 2913 2915 192 (set (reg:DI 0 ax [orig:867 _781 ] [867])
        (sign_extend:DI (reg:SI 0 ax [orig:866 l.118_780 ] [866]))) "ETAFLD2.f":547 149 {*extendsidi2_rex64}
     (nil))
(insn 2915 2914 2916 192 (parallel [
            (set (reg:DI 0 ax [orig:868 _782 ] [868])
                (plus:DI (reg:DI 0 ax [orig:867 _781 ] [867])
                    (reg:DI 1 dx [orig:865 _779 ] [865])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":547 222 {*adddi_1}
     (nil))
(insn 2916 2915 2917 192 (parallel [
            (set (reg:DI 0 ax [orig:869 _783 ] [869])
                (plus:DI (reg:DI 0 ax [orig:868 _782 ] [868])
                    (const_int -61 [0xffffffffffffffc3])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":547 222 {*adddi_1}
     (nil))
(insn 2917 2916 2918 192 (parallel [
            (set (reg:DI 0 ax [2375])
                (plus:DI (reg:DI 0 ax [orig:869 _783 ] [869])
                    (const_int 1404 [0x57c])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":547 222 {*adddi_1}
     (nil))
(insn 2918 2917 2919 192 (set (reg:SI 0 ax [orig:870 _784 ] [870])
        (mem:SI (plus:DI (mult:DI (reg:DI 0 ax [2375])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)) [1 rqstfld.lvls S4 A32])) "ETAFLD2.f":547 86 {*movsi_internal}
     (nil))
(insn 2919 2918 2920 192 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -268 [0xfffffffffffffef4])) [1 itype+0 S4 A32])
        (reg:SI 0 ax [orig:870 _784 ] [870])) "ETAFLD2.f":547 86 {*movsi_internal}
     (nil))
(insn 2920 2919 2921 192 (parallel [
            (set (reg:DI 1 dx [2376])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -272 [0xfffffffffffffef0])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":548 222 {*adddi_1}
     (nil))
(insn 2921 2920 2922 192 (parallel [
            (set (reg:DI 0 ax [2377])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -268 [0xfffffffffffffef4])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":548 222 {*adddi_1}
     (nil))
(insn 2922 2921 2923 192 (set (reg:DI 37 r8)
        (symbol_ref:DI ("equiv.3.4378") [flags 0x202]  <var_decl 0x7f9828263750 equiv.3>)) "ETAFLD2.f":548 85 {*movdi_internal}
     (nil))
(insn 2923 2922 2925 192 (set (reg:DI 2 cx)
        (const:DI (plus:DI (symbol_ref:DI ("loops_") [flags 0x202]  <var_decl 0x7f9828246c60 loops>)
                (const_int 9680 [0x25d0])))) "ETAFLD2.f":548 85 {*movdi_internal}
     (nil))
(insn 2925 2923 2926 192 (set (reg:DI 4 si)
        (reg:DI 0 ax [2377])) "ETAFLD2.f":548 85 {*movdi_internal}
     (nil))
(insn 2926 2925 2927 192 (set (reg:DI 5 di)
        (symbol_ref:DI ("cldwtr_") [flags 0x202]  <var_decl 0x7f9828232a20 cldwtr>)) "ETAFLD2.f":548 85 {*movdi_internal}
     (nil))
(insn 2927 2926 2928 192 (set (reg:QI 0 ax)
        (const_int 0 [0])) "ETAFLD2.f":548 88 {*movqi_internal}
     (nil))
(call_insn 2928 2927 2929 192 (call (mem:QI (symbol_ref:DI ("netal_") [flags 0x41]  <function_decl 0x7f9828228a00 netal>) [0 netal S1 A8])
        (const_int 0 [0])) "ETAFLD2.f":548 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (nil))))))))
(insn 2929 2928 2930 192 (parallel [
            (set (reg:DI 1 dx [2378])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -272 [0xfffffffffffffef0])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":549 222 {*adddi_1}
     (nil))
(insn 2930 2929 2931 192 (parallel [
            (set (reg:DI 0 ax [2379])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -268 [0xfffffffffffffef4])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":549 222 {*adddi_1}
     (nil))
(insn 2931 2930 2932 192 (set (reg:DI 37 r8)
        (symbol_ref:DI ("equiv.2.4368") [flags 0x202]  <var_decl 0x7f9828263510 equiv.2>)) "ETAFLD2.f":549 85 {*movdi_internal}
     (nil))
(insn 2932 2931 2934 192 (set (reg:DI 2 cx)
        (const:DI (plus:DI (symbol_ref:DI ("loops_") [flags 0x202]  <var_decl 0x7f9828246c60 loops>)
                (const_int 9680 [0x25d0])))) "ETAFLD2.f":549 85 {*movdi_internal}
     (nil))
(insn 2934 2932 2935 192 (set (reg:DI 4 si)
        (reg:DI 0 ax [2379])) "ETAFLD2.f":549 85 {*movdi_internal}
     (nil))
(insn 2935 2934 2936 192 (set (reg:DI 5 di)
        (symbol_ref:DI ("iw.4421") [flags 0x202]  <var_decl 0x7f9827e68bd0 iw>)) "ETAFLD2.f":549 85 {*movdi_internal}
     (nil))
(insn 2936 2935 2937 192 (set (reg:QI 0 ax)
        (const_int 0 [0])) "ETAFLD2.f":549 88 {*movqi_internal}
     (nil))
(call_insn 2937 2936 2938 192 (call (mem:QI (symbol_ref:DI ("netal_") [flags 0x41]  <function_decl 0x7f9828228a00 netal>) [0 netal S1 A8])
        (const_int 0 [0])) "ETAFLD2.f":549 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (nil))))))))
(insn 2938 2937 2939 192 (set (reg:SI 1 dx [orig:1690 _2010 ] [1690])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f982824fc60 parallel>)
                    (const_int 8 [0x8]))) [1 parallel.jsta+0 S4 A64])) "ETAFLD2.f":551 86 {*movsi_internal}
     (nil))
(insn 2939 2938 2940 192 (set (reg:SI 0 ax [orig:1691 _2011 ] [1691])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f982824fc60 parallel>)
                    (const_int 12 [0xc]))) [1 parallel.jend+0 S4 A32])) "ETAFLD2.f":551 86 {*movsi_internal}
     (nil))
(insn 2940 2939 2994 192 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])
        (reg:SI 1 dx [orig:1690 _2010 ] [1690])) "ETAFLD2.f":551 86 {*movsi_internal}
     (nil))
;;  succ:       193 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1691

;; basic block 193, loop depth 0, maybe hot
;;  prev block 192, next block 194, flags: (RTL, MODIFIED)
;;  pred:       192 (FALLTHRU)
;;              197 [always] 
;; bb 193 artificial_defs: { }
;; bb 193 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1691
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1691
;; lr  def 	 17 [flags] 1692 2380
(code_label 2994 2940 2941 193 101 (nil) [1 uses])
(note 2941 2994 2942 193 [bb 193] NOTE_INSN_BASIC_BLOCK)
(insn 2942 2941 2943 193 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])
            (reg:SI 0 ax [orig:1691 _2011 ] [1691]))) "ETAFLD2.f":551 11 {*cmpsi_1}
     (nil))
(insn 2943 2942 2944 193 (set (reg:QI 1 dx [2380])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "ETAFLD2.f":551 678 {*setcc_qi}
     (nil))
(insn 2944 2943 2945 193 (set (reg:SI 1 dx [orig:1692 _2013 ] [1692])
        (zero_extend:SI (reg:QI 1 dx [2380]))) "ETAFLD2.f":551 140 {*zero_extendqisi2}
     (nil))
(insn 2945 2944 2946 193 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1692 _2013 ] [1692])
            (const_int 0 [0]))) "ETAFLD2.f":551 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 2946 2945 2947 193 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 5750)
            (pc))) "ETAFLD2.f":551 682 {*jcc}
     (nil)
 -> 5750)
;;  succ:       381
;;              194 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1691

;; basic block 194, loop depth 0, maybe hot
;;  prev block 193, next block 195, flags: (RTL, MODIFIED)
;;  pred:       193 (FALLTHRU)
;; bb 194 artificial_defs: { }
;; bb 194 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1691
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 2947 2946 2948 194 [bb 194] NOTE_INSN_BASIC_BLOCK)
(insn 2948 2947 2988 194 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
        (const_int 1 [0x1])) "ETAFLD2.f":552 86 {*movsi_internal}
     (nil))
;;  succ:       195 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1691

;; basic block 195, loop depth 0, maybe hot
;;  prev block 194, next block 196, flags: (RTL, MODIFIED)
;;  pred:       194 (FALLTHRU)
;;              196 [always] 
;; bb 195 artificial_defs: { }
;; bb 195 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1691
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1693 2381
(code_label 2988 2948 2949 195 100 (nil) [1 uses])
(note 2949 2988 2950 195 [bb 195] NOTE_INSN_BASIC_BLOCK)
(insn 2950 2949 2951 195 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
            (const_int 119 [0x77]))) "ETAFLD2.f":552 11 {*cmpsi_1}
     (nil))
(insn 2951 2950 2952 195 (set (reg:QI 1 dx [2381])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "ETAFLD2.f":552 678 {*setcc_qi}
     (nil))
(insn 2952 2951 2953 195 (set (reg:SI 1 dx [orig:1693 _2015 ] [1693])
        (zero_extend:SI (reg:QI 1 dx [2381]))) "ETAFLD2.f":552 140 {*zero_extendqisi2}
     (nil))
(insn 2953 2952 2954 195 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1693 _2015 ] [1693])
            (const_int 0 [0]))) "ETAFLD2.f":552 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 2954 2953 2955 195 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 5753)
            (pc))) "ETAFLD2.f":552 682 {*jcc}
     (nil)
 -> 5753)
;;  succ:       382
;;              196 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1691

;; basic block 196, loop depth 0, maybe hot
;;  prev block 195, next block 382, flags: (RTL, MODIFIED)
;;  pred:       195 (FALLTHRU)
;; bb 196 artificial_defs: { }
;; bb 196 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1691
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 871 872 873 874 875 876 877 878 879 880 881 882 883 884 885 886 887 888 889 890 2382 2383 2384 2385 2386 2387 2388 2389 2390 2391
(note 2955 2954 2956 196 [bb 196] NOTE_INSN_BASIC_BLOCK)
(insn 2956 2955 2957 196 (set (reg:SI 1 dx [2382])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])) "ETAFLD2.f":553 86 {*movsi_internal}
     (nil))
(insn 2957 2956 2958 196 (set (reg:DI 1 dx [orig:871 _785 ] [871])
        (sign_extend:DI (reg:SI 1 dx [2382]))) "ETAFLD2.f":553 149 {*extendsidi2_rex64}
     (nil))
(insn 2958 2957 2959 196 (parallel [
            (set (reg:DI 2 cx [orig:872 _786 ] [872])
                (mult:DI (reg:DI 1 dx [orig:871 _785 ] [871])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":553 349 {*muldi3_1}
     (nil))
(insn 2959 2958 2960 196 (set (reg:SI 1 dx [2383])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "ETAFLD2.f":553 86 {*movsi_internal}
     (nil))
(insn 2960 2959 2961 196 (set (reg:DI 1 dx [orig:873 _787 ] [873])
        (sign_extend:DI (reg:SI 1 dx [2383]))) "ETAFLD2.f":553 149 {*extendsidi2_rex64}
     (nil))
(insn 2961 2960 2962 196 (parallel [
            (set (reg:DI 1 dx [orig:874 _788 ] [874])
                (plus:DI (reg:DI 1 dx [orig:873 _787 ] [873])
                    (reg:DI 2 cx [orig:872 _786 ] [872])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":553 222 {*adddi_1}
     (nil))
(insn 2962 2961 2963 196 (parallel [
            (set (reg:DI 2 cx [orig:875 _789 ] [875])
                (plus:DI (reg:DI 1 dx [orig:874 _788 ] [874])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":553 222 {*adddi_1}
     (nil))
(insn 2963 2962 2964 196 (set (reg/f:DI 1 dx [2384])
        (symbol_ref:DI ("equiv.3.4378") [flags 0x202]  <var_decl 0x7f9828263750 equiv.3>)) "ETAFLD2.f":553 85 {*movdi_internal}
     (nil))
(insn 2964 2963 2965 196 (set (reg:SF 22 xmm1 [orig:876 _790 ] [876])
        (mem/j:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:875 _789 ] [875])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [2384])) [27 equiv.3.egrid1 S4 A32])) "ETAFLD2.f":553 131 {*movsf_internal}
     (nil))
(insn 2965 2964 2966 196 (set (reg:SI 1 dx [2385])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])) "ETAFLD2.f":553 86 {*movsi_internal}
     (nil))
(insn 2966 2965 2967 196 (set (reg:DI 1 dx [orig:877 _791 ] [877])
        (sign_extend:DI (reg:SI 1 dx [2385]))) "ETAFLD2.f":553 149 {*extendsidi2_rex64}
     (nil))
(insn 2967 2966 2968 196 (parallel [
            (set (reg:DI 2 cx [orig:878 _792 ] [878])
                (mult:DI (reg:DI 1 dx [orig:877 _791 ] [877])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":553 349 {*muldi3_1}
     (nil))
(insn 2968 2967 2969 196 (set (reg:SI 1 dx [2386])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "ETAFLD2.f":553 86 {*movsi_internal}
     (nil))
(insn 2969 2968 2970 196 (set (reg:DI 1 dx [orig:879 _793 ] [879])
        (sign_extend:DI (reg:SI 1 dx [2386]))) "ETAFLD2.f":553 149 {*extendsidi2_rex64}
     (nil))
(insn 2970 2969 2971 196 (parallel [
            (set (reg:DI 1 dx [orig:880 _794 ] [880])
                (plus:DI (reg:DI 1 dx [orig:879 _793 ] [879])
                    (reg:DI 2 cx [orig:878 _792 ] [878])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":553 222 {*adddi_1}
     (nil))
(insn 2971 2970 2972 196 (parallel [
            (set (reg:DI 2 cx [orig:881 _795 ] [881])
                (plus:DI (reg:DI 1 dx [orig:880 _794 ] [880])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":553 222 {*adddi_1}
     (nil))
(insn 2972 2971 2973 196 (set (reg/f:DI 1 dx [2387])
        (symbol_ref:DI ("equiv.2.4368") [flags 0x202]  <var_decl 0x7f9828263510 equiv.2>)) "ETAFLD2.f":553 85 {*movdi_internal}
     (nil))
(insn 2973 2972 2974 196 (set (reg:SF 23 xmm2 [orig:882 _796 ] [882])
        (mem/j:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:881 _795 ] [881])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [2387])) [16 equiv.2.egrid2 S4 A32])) "ETAFLD2.f":553 131 {*movsf_internal}
     (nil))
(insn 2974 2973 2975 196 (set (reg:SF 21 xmm0 [2388])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0  S4 A32])) "ETAFLD2.f":553 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 2975 2974 2977 196 (set (reg:SF 21 xmm0 [orig:883 _797 ] [883])
        (minus:SF (reg:SF 21 xmm0 [2388])
            (reg:SF 23 xmm2 [orig:882 _796 ] [882]))) "ETAFLD2.f":553 841 {*fop_sf_1}
     (nil))
(insn 2977 2975 2978 196 (set (reg:SI 1 dx [2389])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])) "ETAFLD2.f":553 86 {*movsi_internal}
     (nil))
(insn 2978 2977 2979 196 (set (reg:DI 1 dx [orig:885 _799 ] [885])
        (sign_extend:DI (reg:SI 1 dx [2389]))) "ETAFLD2.f":553 149 {*extendsidi2_rex64}
     (nil))
(insn 2979 2978 2980 196 (parallel [
            (set (reg:DI 2 cx [orig:886 _800 ] [886])
                (mult:DI (reg:DI 1 dx [orig:885 _799 ] [885])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":553 349 {*muldi3_1}
     (nil))
(insn 2980 2979 2981 196 (set (reg:SI 1 dx [2390])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "ETAFLD2.f":553 86 {*movsi_internal}
     (nil))
(insn 2981 2980 2982 196 (set (reg:DI 1 dx [orig:887 _801 ] [887])
        (sign_extend:DI (reg:SI 1 dx [2390]))) "ETAFLD2.f":553 149 {*extendsidi2_rex64}
     (nil))
(insn 2982 2981 2983 196 (parallel [
            (set (reg:DI 1 dx [orig:888 _802 ] [888])
                (plus:DI (reg:DI 1 dx [orig:887 _801 ] [887])
                    (reg:DI 2 cx [orig:886 _800 ] [886])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":553 222 {*adddi_1}
     (nil))
(insn 2983 2982 2984 196 (parallel [
            (set (reg:DI 2 cx [orig:889 _803 ] [889])
                (plus:DI (reg:DI 1 dx [orig:888 _802 ] [888])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":553 222 {*adddi_1}
     (nil))
(insn 2984 2983 2985 196 (set (reg:SF 21 xmm0 [orig:890 _804 ] [890])
        (mult:SF (reg:SF 21 xmm0 [orig:884 _798 ] [884])
            (reg:SF 22 xmm1 [orig:876 _790 ] [876]))) "ETAFLD2.f":553 838 {*fop_sf_comm}
     (nil))
(insn 2985 2984 2986 196 (set (reg/f:DI 1 dx [2391])
        (symbol_ref:DI ("equiv.3.4378") [flags 0x202]  <var_decl 0x7f9828263750 equiv.3>)) "ETAFLD2.f":553 85 {*movdi_internal}
     (nil))
(insn 2986 2985 2987 196 (set (mem/j:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:889 _803 ] [889])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [2391])) [27 equiv.3.egrid1 S4 A32])
        (reg:SF 21 xmm0 [orig:890 _804 ] [890])) "ETAFLD2.f":553 131 {*movsf_internal}
     (nil))
(insn 2987 2986 5625 196 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":552 221 {*addsi_1}
     (nil))
(jump_insn 5625 2987 5626 196 (set (pc)
        (label_ref 2988)) "ETAFLD2.f":552 683 {jump}
     (nil)
 -> 2988)
;;  succ:       195 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1691

(barrier 5626 5625 5753)
;; basic block 382, loop depth 0, maybe hot
;;  prev block 196, next block 197, flags: (RTL, MODIFIED)
;;  pred:       195
;; bb 382 artificial_defs: { }
;; bb 382 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1691
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 5753 5626 5752 382 242 (nil) [1 uses])
(note 5752 5753 5754 382 [bb 382] NOTE_INSN_BASIC_BLOCK)
(insn 5754 5752 2991 382 (const_int 0 [0]) "ETAFLD2.f":553 718 {nop}
     (nil))
;;  succ:       197 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1691

;; basic block 197, loop depth 0, maybe hot
;;  prev block 382, next block 381, flags: (RTL, MODIFIED)
;;  pred:       382 [always]  (FALLTHRU)
;; bb 197 artificial_defs: { }
;; bb 197 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1691
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 2991 5754 2992 197 99 (nil) [0 uses])
(note 2992 2991 2993 197 [bb 197] NOTE_INSN_BASIC_BLOCK)
(insn 2993 2992 5627 197 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":551 221 {*addsi_1}
     (nil))
(jump_insn 5627 2993 5628 197 (set (pc)
        (label_ref 2994)) "ETAFLD2.f":551 683 {jump}
     (nil)
 -> 2994)
;;  succ:       193 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1691

(barrier 5628 5627 5750)
;; basic block 381, loop depth 0, maybe hot
;;  prev block 197, next block 198, flags: (RTL, MODIFIED)
;;  pred:       193
;; bb 381 artificial_defs: { }
;; bb 381 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 5750 5628 5749 381 241 (nil) [1 uses])
(note 5749 5750 5751 381 [bb 381] NOTE_INSN_BASIC_BLOCK)
(insn 5751 5749 2997 381 (const_int 0 [0]) "ETAFLD2.f":552 718 {nop}
     (nil))
;;  succ:       198 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 198, loop depth 0, maybe hot
;;  prev block 381, next block 199, flags: (RTL, MODIFIED)
;;  pred:       381 [always]  (FALLTHRU)
;; bb 198 artificial_defs: { }
;; bb 198 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 891 892 2392 2393 2394 2395 2396
(code_label 2997 5751 2998 198 98 (nil) [0 uses])
(note 2998 2997 2999 198 [bb 198] NOTE_INSN_BASIC_BLOCK)
(insn 2999 2998 3000 198 (set (reg:DI 1 dx [2392])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [4 grid2+0 S8 A64])) "ETAFLD2.f":557 85 {*movdi_internal}
     (nil))
(insn 3000 2999 3001 198 (set (reg:DI 0 ax [2393])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "ETAFLD2.f":557 85 {*movdi_internal}
     (nil))
(insn 3001 3000 3002 198 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [11  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -832 [0xfffffffffffffcc0])) [11 jmout+0 S8 A64])) "ETAFLD2.f":557 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 3002 3001 3003 198 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [11  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -824 [0xfffffffffffffcc8])) [11 imout+0 S8 A64])) "ETAFLD2.f":557 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 3003 3002 3004 198 (set (reg:DI 38 r9)
        (reg:DI 1 dx [2392])) "ETAFLD2.f":557 85 {*movdi_internal}
     (nil))
(insn 3004 3003 3005 198 (set (reg:DI 37 r8)
        (reg:DI 0 ax [2393])) "ETAFLD2.f":557 85 {*movdi_internal}
     (nil))
(insn 3005 3004 3006 198 (set (reg:DI 2 cx)
        (symbol_ref:DI ("equiv.2.4368") [flags 0x202]  <var_decl 0x7f9828263510 equiv.2>)) "ETAFLD2.f":557 85 {*movdi_internal}
     (nil))
(insn 3006 3005 3007 198 (set (reg:DI 1 dx)
        (symbol_ref:DI ("equiv.3.4378") [flags 0x202]  <var_decl 0x7f9828263750 equiv.3>)) "ETAFLD2.f":557 85 {*movdi_internal}
     (nil))
(insn 3007 3006 3008 198 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f9827f94240 *.LC3>)) "ETAFLD2.f":557 85 {*movdi_internal}
     (nil))
(insn 3008 3007 3009 198 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC44") [flags 0x2]  <var_decl 0x7f9828035090 *.LC44>)) "ETAFLD2.f":557 85 {*movdi_internal}
     (nil))
(insn 3009 3008 3010 198 (set (reg:QI 0 ax)
        (const_int 0 [0])) "ETAFLD2.f":557 88 {*movqi_internal}
     (nil))
(call_insn 3010 3009 3011 198 (call (mem:QI (symbol_ref:DI ("e2out_") [flags 0x41]  <function_decl 0x7f9828228600 e2out>) [0 e2out S1 A8])
        (const_int 16 [0x10])) "ETAFLD2.f":557 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
(insn 3011 3010 3012 198 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":557 222 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 3012 3011 3013 198 (set (reg/f:DI 1 dx [2394])
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                (const_int 55216 [0xd7b0])))) "ETAFLD2.f":558 85 {*movdi_internal}
     (nil))
(insn 3013 3012 3014 198 (set (reg:DI 0 ax [2395])
        (const_int 0 [0])) "ETAFLD2.f":558 85 {*movdi_internal}
     (nil))
(insn 3014 3013 5879 198 (set (reg:DI 2 cx [2396])
        (const_int 12 [0xc])) "ETAFLD2.f":558 85 {*movdi_internal}
     (nil))
(insn 5879 3014 3015 198 (set (reg/f:DI 5 di [2394])
        (reg/f:DI 1 dx [2394])) "ETAFLD2.f":558 85 {*movdi_internal}
     (nil))
(insn 3015 5879 5880 198 (parallel [
            (set (reg:DI 2 cx [2396])
                (const_int 0 [0]))
            (set (reg/f:DI 5 di [2394])
                (plus:DI (ashift:DI (reg:DI 2 cx [2396])
                        (const_int 3 [0x3]))
                    (reg/f:DI 5 di [2394])))
            (set (mem/c:BLK (reg/f:DI 5 di [2394]) [1 rqstfld.id+0 S96 A128])
                (const_int 0 [0]))
            (use (reg:DI 0 ax [2395]))
            (use (reg:DI 2 cx [2396]))
        ]) "ETAFLD2.f":558 984 {*rep_stosdi_rex64}
     (nil))
(insn 5880 3015 3016 198 (set (reg/f:DI 1 dx [2394])
        (reg/f:DI 5 di [2394])) "ETAFLD2.f":558 85 {*movdi_internal}
     (nil))
(insn 3016 5880 3017 198 (set (mem/c:SI (reg/f:DI 1 dx [2394]) [1 rqstfld.id+96 S4 A128])
        (reg:SI 0 ax [2395])) "ETAFLD2.f":558 86 {*movsi_internal}
     (nil))
(insn 3017 3016 3018 198 (parallel [
            (set (reg/f:DI 1 dx [2394])
                (plus:DI (reg/f:DI 1 dx [2394])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":558 222 {*adddi_1}
     (nil))
(insn 3018 3017 3019 198 (set (reg:SI 0 ax [orig:891 l.119_805 ] [891])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":559 86 {*movsi_internal}
     (nil))
(insn 3019 3018 3020 198 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -276 [0xfffffffffffffeec])) [1 lyr+0 S4 A32])
        (reg:SI 0 ax [orig:891 l.119_805 ] [891])) "ETAFLD2.f":559 86 {*movsi_internal}
     (nil))
(insn 3020 3019 3021 198 (set (reg:SI 0 ax [orig:892 itype.120_806 ] [892])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -268 [0xfffffffffffffef4])) [1 itype+0 S4 A32])) "ETAFLD2.f":560 86 {*movsi_internal}
     (nil))
(insn 3021 3020 3022 198 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [orig:892 itype.120_806 ] [892])
            (const_int 1 [0x1]))) "ETAFLD2.f":560 11 {*cmpsi_1}
     (nil))
(jump_insn 3022 3021 3023 198 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 3025)
            (pc))) "ETAFLD2.f":560 682 {*jcc}
     (nil)
 -> 3025)
;;  succ:       199 (FALLTHRU)
;;              200
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 199, loop depth 0, maybe hot
;;  prev block 198, next block 200, flags: (RTL, MODIFIED)
;;  pred:       198 (FALLTHRU)
;; bb 199 artificial_defs: { }
;; bb 199 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 3023 3022 3024 199 [bb 199] NOTE_INSN_BASIC_BLOCK)
(insn 3024 3023 3025 199 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 55248 [0xd7d0]))) [1 rqstfld.id+32 S4 A128])
        (const_int 109 [0x6d])) "ETAFLD2.f":560 86 {*movsi_internal}
     (nil))
;;  succ:       200 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 200, loop depth 0, maybe hot
;;  prev block 199, next block 201, flags: (RTL, MODIFIED)
;;  pred:       198
;;              199 (FALLTHRU)
;; bb 200 artificial_defs: { }
;; bb 200 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 2397 2398 2399 2400
(code_label 3025 3024 3026 200 102 (nil) [1 uses])
(note 3026 3025 3027 200 [bb 200] NOTE_INSN_BASIC_BLOCK)
(insn 3027 3026 3028 200 (set (reg:DI 4 si [2397])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -832 [0xfffffffffffffcc0])) [11 jmout+0 S8 A64])) "ETAFLD2.f":561 85 {*movdi_internal}
     (nil))
(insn 3028 3027 3029 200 (set (reg:DI 2 cx [2398])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -824 [0xfffffffffffffcc8])) [11 imout+0 S8 A64])) "ETAFLD2.f":561 85 {*movdi_internal}
     (nil))
(insn 3029 3028 3030 200 (set (reg:DI 1 dx [2399])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "ETAFLD2.f":561 85 {*movdi_internal}
     (nil))
(insn 3030 3029 3031 200 (parallel [
            (set (reg:DI 0 ax [2400])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -276 [0xfffffffffffffeec])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":561 222 {*adddi_1}
     (nil))
(insn 3031 3030 3032 200 (set (reg:DI 38 r9)
        (reg:DI 4 si [2397])) "ETAFLD2.f":561 85 {*movdi_internal}
     (nil))
(insn 3032 3031 3033 200 (set (reg:DI 37 r8)
        (reg:DI 2 cx [2398])) "ETAFLD2.f":561 85 {*movdi_internal}
     (nil))
(insn 3033 3032 3034 200 (set (reg:DI 2 cx)
        (reg:DI 1 dx [2399])) "ETAFLD2.f":561 85 {*movdi_internal}
     (nil))
(insn 3034 3033 3035 200 (set (reg:DI 1 dx)
        (reg:DI 0 ax [2400])) "ETAFLD2.f":561 85 {*movdi_internal}
     (nil))
(insn 3035 3034 3036 200 (set (reg:DI 4 si)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                (const_int 508 [0x1fc])))) "ETAFLD2.f":561 85 {*movdi_internal}
     (nil))
(insn 3036 3035 3037 200 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                (const_int 4 [0x4])))) "ETAFLD2.f":561 85 {*movdi_internal}
     (nil))
(insn 3037 3036 3038 200 (set (reg:QI 0 ax)
        (const_int 0 [0])) "ETAFLD2.f":561 88 {*movqi_internal}
     (nil))
(call_insn 3038 3037 3039 200 (call (mem:QI (symbol_ref:DI ("output_") [flags 0x41]  <function_decl 0x7f9828228700 output>) [0 output S1 A8])
        (const_int 0 [0])) "ETAFLD2.f":561 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
;;  succ:       201 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 201, loop depth 0, maybe hot
;;  prev block 200, next block 202, flags: (RTL, MODIFIED)
;;  pred:       181
;;              200 (FALLTHRU)
;;              182
;; bb 201 artificial_defs: { }
;; bb 201 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 893
(code_label 3039 3038 3040 201 90 (nil) [2 uses])
(note 3040 3039 3041 201 [bb 201] NOTE_INSN_BASIC_BLOCK)
(insn 3041 3040 3042 201 (set (reg:SI 0 ax [orig:893 _807 ] [893])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 512 [0x200]))) [1 rqstfld.iget+496 S4 A128])) "ETAFLD2.f":566 86 {*movsi_internal}
     (nil))
(insn 3042 3041 3043 201 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:893 _807 ] [893])
            (const_int 0 [0]))) "ETAFLD2.f":566 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 3043 3042 3044 201 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 3195)
            (pc))) "ETAFLD2.f":566 682 {*jcc}
     (nil)
 -> 3195)
;;  succ:       202 (FALLTHRU)
;;              212
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 202, loop depth 0, maybe hot
;;  prev block 201, next block 203, flags: (RTL, MODIFIED)
;;  pred:       201 (FALLTHRU)
;; bb 202 artificial_defs: { }
;; bb 202 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 894 895 896 897 898 899 900 901 2401 2402 2403 2404
(note 3044 3043 3045 202 [bb 202] NOTE_INSN_BASIC_BLOCK)
(insn 3045 3044 3046 202 (set (reg:SI 0 ax [orig:894 _808 ] [894])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 512 [0x200]))) [1 rqstfld.iget+496 S4 A128])) "ETAFLD2.f":567 86 {*movsi_internal}
     (nil))
(insn 3046 3045 3047 202 (set (reg:DI 1 dx [orig:895 _809 ] [895])
        (sign_extend:DI (reg:SI 0 ax [orig:894 _808 ] [894]))) "ETAFLD2.f":567 149 {*extendsidi2_rex64}
     (nil))
(insn 3047 3046 3048 202 (set (reg:DI 0 ax [2401])
        (reg:DI 1 dx [orig:895 _809 ] [895])) "ETAFLD2.f":567 85 {*movdi_internal}
     (nil))
(insn 3048 3047 3050 202 (parallel [
            (set (reg:DI 0 ax [2402])
                (ashift:DI (reg:DI 0 ax [2401])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":567 551 {*ashldi3_1}
     (nil))
(insn 3050 3048 3051 202 (parallel [
            (set (reg:DI 0 ax [2401])
                (minus:DI (reg:DI 0 ax [2401])
                    (reg:DI 1 dx [orig:895 _809 ] [895])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":567 278 {*subdi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:895 _809 ] [895])
            (const_int 15 [0xf]))
        (nil)))
(insn 3051 3050 3053 202 (parallel [
            (set (reg:DI 0 ax [2403])
                (ashift:DI (reg:DI 0 ax [2401])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":567 551 {*ashldi3_1}
     (nil))
(insn 3053 3051 3054 202 (set (reg:DI 1 dx [orig:896 _810 ] [896])
        (reg:DI 0 ax [2401])) "ETAFLD2.f":567 85 {*movdi_internal}
     (nil))
(insn 3054 3053 3055 202 (set (reg:SI 0 ax [orig:897 l.121_811 ] [897])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":567 86 {*movsi_internal}
     (nil))
(insn 3055 3054 3056 202 (set (reg:DI 0 ax [orig:898 _812 ] [898])
        (sign_extend:DI (reg:SI 0 ax [orig:897 l.121_811 ] [897]))) "ETAFLD2.f":567 149 {*extendsidi2_rex64}
     (nil))
(insn 3056 3055 3057 202 (parallel [
            (set (reg:DI 0 ax [orig:899 _813 ] [899])
                (plus:DI (reg:DI 0 ax [orig:898 _812 ] [898])
                    (reg:DI 1 dx [orig:896 _810 ] [896])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":567 222 {*adddi_1}
     (nil))
(insn 3057 3056 3058 202 (parallel [
            (set (reg:DI 0 ax [orig:900 _814 ] [900])
                (plus:DI (reg:DI 0 ax [orig:899 _813 ] [899])
                    (const_int -61 [0xffffffffffffffc3])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":567 222 {*adddi_1}
     (nil))
(insn 3058 3057 3059 202 (parallel [
            (set (reg:DI 0 ax [2404])
                (plus:DI (reg:DI 0 ax [orig:900 _814 ] [900])
                    (const_int 1404 [0x57c])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":567 222 {*adddi_1}
     (nil))
(insn 3059 3058 3060 202 (set (reg:SI 0 ax [orig:901 _815 ] [901])
        (mem:SI (plus:DI (mult:DI (reg:DI 0 ax [2404])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)) [1 rqstfld.lvls S4 A32])) "ETAFLD2.f":567 86 {*movsi_internal}
     (nil))
(insn 3060 3059 3061 202 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:901 _815 ] [901])
            (const_int 0 [0]))) "ETAFLD2.f":567 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 3061 3060 3062 202 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 3195)
            (pc))) "ETAFLD2.f":567 682 {*jcc}
     (nil)
 -> 3195)
;;  succ:       203 (FALLTHRU)
;;              212
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 203, loop depth 0, maybe hot
;;  prev block 202, next block 204, flags: (RTL, MODIFIED)
;;  pred:       202 (FALLTHRU)
;; bb 203 artificial_defs: { }
;; bb 203 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 902 903 904 905 906 907 908 909 1694 1695 2405 2406 2407 2408 2409 2410 2411 2412
(note 3062 3061 3063 203 [bb 203] NOTE_INSN_BASIC_BLOCK)
(insn 3063 3062 3064 203 (set (reg:SI 0 ax [orig:902 _816 ] [902])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 512 [0x200]))) [1 rqstfld.iget+496 S4 A128])) "ETAFLD2.f":568 86 {*movsi_internal}
     (nil))
(insn 3064 3063 3065 203 (set (reg:DI 1 dx [orig:903 _817 ] [903])
        (sign_extend:DI (reg:SI 0 ax [orig:902 _816 ] [902]))) "ETAFLD2.f":568 149 {*extendsidi2_rex64}
     (nil))
(insn 3065 3064 3066 203 (set (reg:DI 0 ax [2405])
        (reg:DI 1 dx [orig:903 _817 ] [903])) "ETAFLD2.f":568 85 {*movdi_internal}
     (nil))
(insn 3066 3065 3068 203 (parallel [
            (set (reg:DI 0 ax [2406])
                (ashift:DI (reg:DI 0 ax [2405])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":568 551 {*ashldi3_1}
     (nil))
(insn 3068 3066 3069 203 (parallel [
            (set (reg:DI 0 ax [2405])
                (minus:DI (reg:DI 0 ax [2405])
                    (reg:DI 1 dx [orig:903 _817 ] [903])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":568 278 {*subdi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:903 _817 ] [903])
            (const_int 15 [0xf]))
        (nil)))
(insn 3069 3068 3071 203 (parallel [
            (set (reg:DI 0 ax [2407])
                (ashift:DI (reg:DI 0 ax [2405])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":568 551 {*ashldi3_1}
     (nil))
(insn 3071 3069 3072 203 (set (reg:DI 1 dx [orig:904 _818 ] [904])
        (reg:DI 0 ax [2405])) "ETAFLD2.f":568 85 {*movdi_internal}
     (nil))
(insn 3072 3071 3073 203 (set (reg:SI 0 ax [orig:905 l.122_819 ] [905])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":568 86 {*movsi_internal}
     (nil))
(insn 3073 3072 3074 203 (set (reg:DI 0 ax [orig:906 _820 ] [906])
        (sign_extend:DI (reg:SI 0 ax [orig:905 l.122_819 ] [905]))) "ETAFLD2.f":568 149 {*extendsidi2_rex64}
     (nil))
(insn 3074 3073 3075 203 (parallel [
            (set (reg:DI 0 ax [orig:907 _821 ] [907])
                (plus:DI (reg:DI 0 ax [orig:906 _820 ] [906])
                    (reg:DI 1 dx [orig:904 _818 ] [904])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":568 222 {*adddi_1}
     (nil))
(insn 3075 3074 3076 203 (parallel [
            (set (reg:DI 0 ax [orig:908 _822 ] [908])
                (plus:DI (reg:DI 0 ax [orig:907 _821 ] [907])
                    (const_int -61 [0xffffffffffffffc3])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":568 222 {*adddi_1}
     (nil))
(insn 3076 3075 3077 203 (parallel [
            (set (reg:DI 0 ax [2408])
                (plus:DI (reg:DI 0 ax [orig:908 _822 ] [908])
                    (const_int 1404 [0x57c])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":568 222 {*adddi_1}
     (nil))
(insn 3077 3076 3078 203 (set (reg:SI 0 ax [orig:909 _823 ] [909])
        (mem:SI (plus:DI (mult:DI (reg:DI 0 ax [2408])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)) [1 rqstfld.lvls S4 A32])) "ETAFLD2.f":568 86 {*movsi_internal}
     (nil))
(insn 3078 3077 3079 203 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -268 [0xfffffffffffffef4])) [1 itype+0 S4 A32])
        (reg:SI 0 ax [orig:909 _823 ] [909])) "ETAFLD2.f":568 86 {*movsi_internal}
     (nil))
(insn 3079 3078 3080 203 (parallel [
            (set (reg:DI 1 dx [2409])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -272 [0xfffffffffffffef0])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":569 222 {*adddi_1}
     (nil))
(insn 3080 3079 3081 203 (parallel [
            (set (reg:DI 0 ax [2410])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -268 [0xfffffffffffffef4])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":569 222 {*adddi_1}
     (nil))
(insn 3081 3080 3082 203 (set (reg:DI 37 r8)
        (symbol_ref:DI ("equiv.3.4378") [flags 0x202]  <var_decl 0x7f9828263750 equiv.3>)) "ETAFLD2.f":569 85 {*movdi_internal}
     (nil))
(insn 3082 3081 3084 203 (set (reg:DI 2 cx)
        (const:DI (plus:DI (symbol_ref:DI ("loops_") [flags 0x202]  <var_decl 0x7f9828246c60 loops>)
                (const_int 9680 [0x25d0])))) "ETAFLD2.f":569 85 {*movdi_internal}
     (nil))
(insn 3084 3082 3085 203 (set (reg:DI 4 si)
        (reg:DI 0 ax [2410])) "ETAFLD2.f":569 85 {*movdi_internal}
     (nil))
(insn 3085 3084 3086 203 (set (reg:DI 5 di)
        (symbol_ref:DI ("cldwtr_") [flags 0x202]  <var_decl 0x7f9828232a20 cldwtr>)) "ETAFLD2.f":569 85 {*movdi_internal}
     (nil))
(insn 3086 3085 3087 203 (set (reg:QI 0 ax)
        (const_int 0 [0])) "ETAFLD2.f":569 88 {*movqi_internal}
     (nil))
(call_insn 3087 3086 3088 203 (call (mem:QI (symbol_ref:DI ("netal_") [flags 0x41]  <function_decl 0x7f9828228a00 netal>) [0 netal S1 A8])
        (const_int 0 [0])) "ETAFLD2.f":569 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (nil))))))))
(insn 3088 3087 3089 203 (parallel [
            (set (reg:DI 1 dx [2411])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -272 [0xfffffffffffffef0])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":570 222 {*adddi_1}
     (nil))
(insn 3089 3088 3090 203 (parallel [
            (set (reg:DI 0 ax [2412])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -268 [0xfffffffffffffef4])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":570 222 {*adddi_1}
     (nil))
(insn 3090 3089 3091 203 (set (reg:DI 37 r8)
        (symbol_ref:DI ("equiv.2.4368") [flags 0x202]  <var_decl 0x7f9828263510 equiv.2>)) "ETAFLD2.f":570 85 {*movdi_internal}
     (nil))
(insn 3091 3090 3093 203 (set (reg:DI 2 cx)
        (const:DI (plus:DI (symbol_ref:DI ("loops_") [flags 0x202]  <var_decl 0x7f9828246c60 loops>)
                (const_int 9680 [0x25d0])))) "ETAFLD2.f":570 85 {*movdi_internal}
     (nil))
(insn 3093 3091 3094 203 (set (reg:DI 4 si)
        (reg:DI 0 ax [2412])) "ETAFLD2.f":570 85 {*movdi_internal}
     (nil))
(insn 3094 3093 3095 203 (set (reg:DI 5 di)
        (symbol_ref:DI ("iw.4421") [flags 0x202]  <var_decl 0x7f9827e68bd0 iw>)) "ETAFLD2.f":570 85 {*movdi_internal}
     (nil))
(insn 3095 3094 3096 203 (set (reg:QI 0 ax)
        (const_int 0 [0])) "ETAFLD2.f":570 88 {*movqi_internal}
     (nil))
(call_insn 3096 3095 3097 203 (call (mem:QI (symbol_ref:DI ("netal_") [flags 0x41]  <function_decl 0x7f9828228a00 netal>) [0 netal S1 A8])
        (const_int 0 [0])) "ETAFLD2.f":570 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (nil))))))))
(insn 3097 3096 3098 203 (set (reg:SI 1 dx [orig:1694 _2027 ] [1694])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f982824fc60 parallel>)
                    (const_int 8 [0x8]))) [1 parallel.jsta+0 S4 A64])) "ETAFLD2.f":572 86 {*movsi_internal}
     (nil))
(insn 3098 3097 3099 203 (set (reg:SI 0 ax [orig:1695 _2028 ] [1695])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f982824fc60 parallel>)
                    (const_int 12 [0xc]))) [1 parallel.jend+0 S4 A32])) "ETAFLD2.f":572 86 {*movsi_internal}
     (nil))
(insn 3099 3098 3150 203 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])
        (reg:SI 1 dx [orig:1694 _2027 ] [1694])) "ETAFLD2.f":572 86 {*movsi_internal}
     (nil))
;;  succ:       204 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1695

;; basic block 204, loop depth 0, maybe hot
;;  prev block 203, next block 205, flags: (RTL, MODIFIED)
;;  pred:       203 (FALLTHRU)
;;              208 [always] 
;; bb 204 artificial_defs: { }
;; bb 204 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1695
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1695
;; lr  def 	 17 [flags] 1696 2413
(code_label 3150 3099 3100 204 107 (nil) [1 uses])
(note 3100 3150 3101 204 [bb 204] NOTE_INSN_BASIC_BLOCK)
(insn 3101 3100 3102 204 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])
            (reg:SI 0 ax [orig:1695 _2028 ] [1695]))) "ETAFLD2.f":572 11 {*cmpsi_1}
     (nil))
(insn 3102 3101 3103 204 (set (reg:QI 1 dx [2413])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "ETAFLD2.f":572 678 {*setcc_qi}
     (nil))
(insn 3103 3102 3104 204 (set (reg:SI 1 dx [orig:1696 _2030 ] [1696])
        (zero_extend:SI (reg:QI 1 dx [2413]))) "ETAFLD2.f":572 140 {*zero_extendqisi2}
     (nil))
(insn 3104 3103 3105 204 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1696 _2030 ] [1696])
            (const_int 0 [0]))) "ETAFLD2.f":572 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 3105 3104 3106 204 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 5756)
            (pc))) "ETAFLD2.f":572 682 {*jcc}
     (nil)
 -> 5756)
;;  succ:       383
;;              205 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1695

;; basic block 205, loop depth 0, maybe hot
;;  prev block 204, next block 206, flags: (RTL, MODIFIED)
;;  pred:       204 (FALLTHRU)
;; bb 205 artificial_defs: { }
;; bb 205 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1695
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 3106 3105 3107 205 [bb 205] NOTE_INSN_BASIC_BLOCK)
(insn 3107 3106 3144 205 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
        (const_int 1 [0x1])) "ETAFLD2.f":573 86 {*movsi_internal}
     (nil))
;;  succ:       206 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1695

;; basic block 206, loop depth 0, maybe hot
;;  prev block 205, next block 207, flags: (RTL, MODIFIED)
;;  pred:       205 (FALLTHRU)
;;              207 [always] 
;; bb 206 artificial_defs: { }
;; bb 206 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1695
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1697 2414
(code_label 3144 3107 3108 206 106 (nil) [1 uses])
(note 3108 3144 3109 206 [bb 206] NOTE_INSN_BASIC_BLOCK)
(insn 3109 3108 3110 206 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
            (const_int 119 [0x77]))) "ETAFLD2.f":573 11 {*cmpsi_1}
     (nil))
(insn 3110 3109 3111 206 (set (reg:QI 1 dx [2414])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "ETAFLD2.f":573 678 {*setcc_qi}
     (nil))
(insn 3111 3110 3112 206 (set (reg:SI 1 dx [orig:1697 _2032 ] [1697])
        (zero_extend:SI (reg:QI 1 dx [2414]))) "ETAFLD2.f":573 140 {*zero_extendqisi2}
     (nil))
(insn 3112 3111 3113 206 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1697 _2032 ] [1697])
            (const_int 0 [0]))) "ETAFLD2.f":573 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 3113 3112 3114 206 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 5759)
            (pc))) "ETAFLD2.f":573 682 {*jcc}
     (nil)
 -> 5759)
;;  succ:       384
;;              207 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1695

;; basic block 207, loop depth 0, maybe hot
;;  prev block 206, next block 384, flags: (RTL, MODIFIED)
;;  pred:       206 (FALLTHRU)
;; bb 207 artificial_defs: { }
;; bb 207 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1695
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 910 911 912 913 914 915 916 917 918 919 920 921 922 923 924 925 926 927 2415 2416 2417 2418 2419 2420 2421 2422 2423
(note 3114 3113 3115 207 [bb 207] NOTE_INSN_BASIC_BLOCK)
(insn 3115 3114 3116 207 (set (reg:SI 1 dx [2415])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])) "ETAFLD2.f":574 86 {*movsi_internal}
     (nil))
(insn 3116 3115 3117 207 (set (reg:DI 1 dx [orig:910 _824 ] [910])
        (sign_extend:DI (reg:SI 1 dx [2415]))) "ETAFLD2.f":574 149 {*extendsidi2_rex64}
     (nil))
(insn 3117 3116 3118 207 (parallel [
            (set (reg:DI 2 cx [orig:911 _825 ] [911])
                (mult:DI (reg:DI 1 dx [orig:910 _824 ] [910])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":574 349 {*muldi3_1}
     (nil))
(insn 3118 3117 3119 207 (set (reg:SI 1 dx [2416])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "ETAFLD2.f":574 86 {*movsi_internal}
     (nil))
(insn 3119 3118 3120 207 (set (reg:DI 1 dx [orig:912 _826 ] [912])
        (sign_extend:DI (reg:SI 1 dx [2416]))) "ETAFLD2.f":574 149 {*extendsidi2_rex64}
     (nil))
(insn 3120 3119 3121 207 (parallel [
            (set (reg:DI 1 dx [orig:913 _827 ] [913])
                (plus:DI (reg:DI 1 dx [orig:912 _826 ] [912])
                    (reg:DI 2 cx [orig:911 _825 ] [911])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":574 222 {*adddi_1}
     (nil))
(insn 3121 3120 3122 207 (parallel [
            (set (reg:DI 2 cx [orig:914 _828 ] [914])
                (plus:DI (reg:DI 1 dx [orig:913 _827 ] [913])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":574 222 {*adddi_1}
     (nil))
(insn 3122 3121 3123 207 (set (reg/f:DI 1 dx [2417])
        (symbol_ref:DI ("equiv.3.4378") [flags 0x202]  <var_decl 0x7f9828263750 equiv.3>)) "ETAFLD2.f":574 85 {*movdi_internal}
     (nil))
(insn 3123 3122 3124 207 (set (reg:SF 22 xmm1 [orig:915 _829 ] [915])
        (mem/j:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:914 _828 ] [914])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [2417])) [27 equiv.3.egrid1 S4 A32])) "ETAFLD2.f":574 131 {*movsf_internal}
     (nil))
(insn 3124 3123 3125 207 (set (reg:SI 1 dx [2418])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])) "ETAFLD2.f":574 86 {*movsi_internal}
     (nil))
(insn 3125 3124 3126 207 (set (reg:DI 1 dx [orig:916 _830 ] [916])
        (sign_extend:DI (reg:SI 1 dx [2418]))) "ETAFLD2.f":574 149 {*extendsidi2_rex64}
     (nil))
(insn 3126 3125 3127 207 (parallel [
            (set (reg:DI 2 cx [orig:917 _831 ] [917])
                (mult:DI (reg:DI 1 dx [orig:916 _830 ] [916])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":574 349 {*muldi3_1}
     (nil))
(insn 3127 3126 3128 207 (set (reg:SI 1 dx [2419])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "ETAFLD2.f":574 86 {*movsi_internal}
     (nil))
(insn 3128 3127 3129 207 (set (reg:DI 1 dx [orig:918 _832 ] [918])
        (sign_extend:DI (reg:SI 1 dx [2419]))) "ETAFLD2.f":574 149 {*extendsidi2_rex64}
     (nil))
(insn 3129 3128 3130 207 (parallel [
            (set (reg:DI 1 dx [orig:919 _833 ] [919])
                (plus:DI (reg:DI 1 dx [orig:918 _832 ] [918])
                    (reg:DI 2 cx [orig:917 _831 ] [917])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":574 222 {*adddi_1}
     (nil))
(insn 3130 3129 3131 207 (parallel [
            (set (reg:DI 2 cx [orig:920 _834 ] [920])
                (plus:DI (reg:DI 1 dx [orig:919 _833 ] [919])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":574 222 {*adddi_1}
     (nil))
(insn 3131 3130 3132 207 (set (reg/f:DI 1 dx [2420])
        (symbol_ref:DI ("equiv.2.4368") [flags 0x202]  <var_decl 0x7f9828263510 equiv.2>)) "ETAFLD2.f":574 85 {*movdi_internal}
     (nil))
(insn 3132 3131 3133 207 (set (reg:SF 21 xmm0 [orig:921 _835 ] [921])
        (mem/j:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:920 _834 ] [920])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [2420])) [16 equiv.2.egrid2 S4 A32])) "ETAFLD2.f":574 131 {*movsf_internal}
     (nil))
(insn 3133 3132 3134 207 (set (reg:SI 1 dx [2421])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])) "ETAFLD2.f":574 86 {*movsi_internal}
     (nil))
(insn 3134 3133 3135 207 (set (reg:DI 1 dx [orig:922 _836 ] [922])
        (sign_extend:DI (reg:SI 1 dx [2421]))) "ETAFLD2.f":574 149 {*extendsidi2_rex64}
     (nil))
(insn 3135 3134 3136 207 (parallel [
            (set (reg:DI 2 cx [orig:923 _837 ] [923])
                (mult:DI (reg:DI 1 dx [orig:922 _836 ] [922])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":574 349 {*muldi3_1}
     (nil))
(insn 3136 3135 3137 207 (set (reg:SI 1 dx [2422])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "ETAFLD2.f":574 86 {*movsi_internal}
     (nil))
(insn 3137 3136 3138 207 (set (reg:DI 1 dx [orig:924 _838 ] [924])
        (sign_extend:DI (reg:SI 1 dx [2422]))) "ETAFLD2.f":574 149 {*extendsidi2_rex64}
     (nil))
(insn 3138 3137 3139 207 (parallel [
            (set (reg:DI 1 dx [orig:925 _839 ] [925])
                (plus:DI (reg:DI 1 dx [orig:924 _838 ] [924])
                    (reg:DI 2 cx [orig:923 _837 ] [923])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":574 222 {*adddi_1}
     (nil))
(insn 3139 3138 3140 207 (parallel [
            (set (reg:DI 2 cx [orig:926 _840 ] [926])
                (plus:DI (reg:DI 1 dx [orig:925 _839 ] [925])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":574 222 {*adddi_1}
     (nil))
(insn 3140 3139 3141 207 (set (reg:SF 21 xmm0 [orig:927 _841 ] [927])
        (mult:SF (reg:SF 21 xmm0 [orig:921 _835 ] [921])
            (reg:SF 22 xmm1 [orig:915 _829 ] [915]))) "ETAFLD2.f":574 838 {*fop_sf_comm}
     (nil))
(insn 3141 3140 3142 207 (set (reg/f:DI 1 dx [2423])
        (symbol_ref:DI ("equiv.3.4378") [flags 0x202]  <var_decl 0x7f9828263750 equiv.3>)) "ETAFLD2.f":574 85 {*movdi_internal}
     (nil))
(insn 3142 3141 3143 207 (set (mem/j:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:926 _840 ] [926])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [2423])) [27 equiv.3.egrid1 S4 A32])
        (reg:SF 21 xmm0 [orig:927 _841 ] [927])) "ETAFLD2.f":574 131 {*movsf_internal}
     (nil))
(insn 3143 3142 5629 207 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":573 221 {*addsi_1}
     (nil))
(jump_insn 5629 3143 5630 207 (set (pc)
        (label_ref 3144)) "ETAFLD2.f":573 683 {jump}
     (nil)
 -> 3144)
;;  succ:       206 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1695

(barrier 5630 5629 5759)
;; basic block 384, loop depth 0, maybe hot
;;  prev block 207, next block 208, flags: (RTL, MODIFIED)
;;  pred:       206
;; bb 384 artificial_defs: { }
;; bb 384 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1695
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 5759 5630 5758 384 244 (nil) [1 uses])
(note 5758 5759 5760 384 [bb 384] NOTE_INSN_BASIC_BLOCK)
(insn 5760 5758 3147 384 (const_int 0 [0]) "ETAFLD2.f":574 718 {nop}
     (nil))
;;  succ:       208 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1695

;; basic block 208, loop depth 0, maybe hot
;;  prev block 384, next block 383, flags: (RTL, MODIFIED)
;;  pred:       384 [always]  (FALLTHRU)
;; bb 208 artificial_defs: { }
;; bb 208 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1695
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 3147 5760 3148 208 105 (nil) [0 uses])
(note 3148 3147 3149 208 [bb 208] NOTE_INSN_BASIC_BLOCK)
(insn 3149 3148 5631 208 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":572 221 {*addsi_1}
     (nil))
(jump_insn 5631 3149 5632 208 (set (pc)
        (label_ref 3150)) "ETAFLD2.f":572 683 {jump}
     (nil)
 -> 3150)
;;  succ:       204 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1695

(barrier 5632 5631 5756)
;; basic block 383, loop depth 0, maybe hot
;;  prev block 208, next block 209, flags: (RTL, MODIFIED)
;;  pred:       204
;; bb 383 artificial_defs: { }
;; bb 383 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 5756 5632 5755 383 243 (nil) [1 uses])
(note 5755 5756 5757 383 [bb 383] NOTE_INSN_BASIC_BLOCK)
(insn 5757 5755 3153 383 (const_int 0 [0]) "ETAFLD2.f":573 718 {nop}
     (nil))
;;  succ:       209 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 209, loop depth 0, maybe hot
;;  prev block 383, next block 210, flags: (RTL, MODIFIED)
;;  pred:       383 [always]  (FALLTHRU)
;; bb 209 artificial_defs: { }
;; bb 209 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 928 929 2424 2425 2426 2427 2428
(code_label 3153 5757 3154 209 104 (nil) [0 uses])
(note 3154 3153 3155 209 [bb 209] NOTE_INSN_BASIC_BLOCK)
(insn 3155 3154 3156 209 (set (reg:DI 1 dx [2424])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [4 grid2+0 S8 A64])) "ETAFLD2.f":578 85 {*movdi_internal}
     (nil))
(insn 3156 3155 3157 209 (set (reg:DI 0 ax [2425])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "ETAFLD2.f":578 85 {*movdi_internal}
     (nil))
(insn 3157 3156 3158 209 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [11  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -832 [0xfffffffffffffcc0])) [11 jmout+0 S8 A64])) "ETAFLD2.f":578 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 3158 3157 3159 209 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [11  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -824 [0xfffffffffffffcc8])) [11 imout+0 S8 A64])) "ETAFLD2.f":578 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 3159 3158 3160 209 (set (reg:DI 38 r9)
        (reg:DI 1 dx [2424])) "ETAFLD2.f":578 85 {*movdi_internal}
     (nil))
(insn 3160 3159 3161 209 (set (reg:DI 37 r8)
        (reg:DI 0 ax [2425])) "ETAFLD2.f":578 85 {*movdi_internal}
     (nil))
(insn 3161 3160 3162 209 (set (reg:DI 2 cx)
        (symbol_ref:DI ("equiv.2.4368") [flags 0x202]  <var_decl 0x7f9828263510 equiv.2>)) "ETAFLD2.f":578 85 {*movdi_internal}
     (nil))
(insn 3162 3161 3163 209 (set (reg:DI 1 dx)
        (symbol_ref:DI ("equiv.3.4378") [flags 0x202]  <var_decl 0x7f9828263750 equiv.3>)) "ETAFLD2.f":578 85 {*movdi_internal}
     (nil))
(insn 3163 3162 3164 209 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f9827f94240 *.LC3>)) "ETAFLD2.f":578 85 {*movdi_internal}
     (nil))
(insn 3164 3163 3165 209 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC45") [flags 0x2]  <var_decl 0x7f9828035120 *.LC45>)) "ETAFLD2.f":578 85 {*movdi_internal}
     (nil))
(insn 3165 3164 3166 209 (set (reg:QI 0 ax)
        (const_int 0 [0])) "ETAFLD2.f":578 88 {*movqi_internal}
     (nil))
(call_insn 3166 3165 3167 209 (call (mem:QI (symbol_ref:DI ("e2out_") [flags 0x41]  <function_decl 0x7f9828228600 e2out>) [0 e2out S1 A8])
        (const_int 16 [0x10])) "ETAFLD2.f":578 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
(insn 3167 3166 3168 209 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":578 222 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 3168 3167 3169 209 (set (reg/f:DI 1 dx [2426])
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                (const_int 55216 [0xd7b0])))) "ETAFLD2.f":579 85 {*movdi_internal}
     (nil))
(insn 3169 3168 3170 209 (set (reg:DI 0 ax [2427])
        (const_int 0 [0])) "ETAFLD2.f":579 85 {*movdi_internal}
     (nil))
(insn 3170 3169 5881 209 (set (reg:DI 2 cx [2428])
        (const_int 12 [0xc])) "ETAFLD2.f":579 85 {*movdi_internal}
     (nil))
(insn 5881 3170 3171 209 (set (reg/f:DI 5 di [2426])
        (reg/f:DI 1 dx [2426])) "ETAFLD2.f":579 85 {*movdi_internal}
     (nil))
(insn 3171 5881 5882 209 (parallel [
            (set (reg:DI 2 cx [2428])
                (const_int 0 [0]))
            (set (reg/f:DI 5 di [2426])
                (plus:DI (ashift:DI (reg:DI 2 cx [2428])
                        (const_int 3 [0x3]))
                    (reg/f:DI 5 di [2426])))
            (set (mem/c:BLK (reg/f:DI 5 di [2426]) [1 rqstfld.id+0 S96 A128])
                (const_int 0 [0]))
            (use (reg:DI 0 ax [2427]))
            (use (reg:DI 2 cx [2428]))
        ]) "ETAFLD2.f":579 984 {*rep_stosdi_rex64}
     (nil))
(insn 5882 3171 3172 209 (set (reg/f:DI 1 dx [2426])
        (reg/f:DI 5 di [2426])) "ETAFLD2.f":579 85 {*movdi_internal}
     (nil))
(insn 3172 5882 3173 209 (set (mem/c:SI (reg/f:DI 1 dx [2426]) [1 rqstfld.id+96 S4 A128])
        (reg:SI 0 ax [2427])) "ETAFLD2.f":579 86 {*movsi_internal}
     (nil))
(insn 3173 3172 3174 209 (parallel [
            (set (reg/f:DI 1 dx [2426])
                (plus:DI (reg/f:DI 1 dx [2426])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":579 222 {*adddi_1}
     (nil))
(insn 3174 3173 3175 209 (set (reg:SI 0 ax [orig:928 l.123_842 ] [928])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":580 86 {*movsi_internal}
     (nil))
(insn 3175 3174 3176 209 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -276 [0xfffffffffffffeec])) [1 lyr+0 S4 A32])
        (reg:SI 0 ax [orig:928 l.123_842 ] [928])) "ETAFLD2.f":580 86 {*movsi_internal}
     (nil))
(insn 3176 3175 3177 209 (set (reg:SI 0 ax [orig:929 itype.124_843 ] [929])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -268 [0xfffffffffffffef4])) [1 itype+0 S4 A32])) "ETAFLD2.f":581 86 {*movsi_internal}
     (nil))
(insn 3177 3176 3178 209 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [orig:929 itype.124_843 ] [929])
            (const_int 1 [0x1]))) "ETAFLD2.f":581 11 {*cmpsi_1}
     (nil))
(jump_insn 3178 3177 3179 209 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 3181)
            (pc))) "ETAFLD2.f":581 682 {*jcc}
     (nil)
 -> 3181)
;;  succ:       210 (FALLTHRU)
;;              211
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 210, loop depth 0, maybe hot
;;  prev block 209, next block 211, flags: (RTL, MODIFIED)
;;  pred:       209 (FALLTHRU)
;; bb 210 artificial_defs: { }
;; bb 210 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 3179 3178 3180 210 [bb 210] NOTE_INSN_BASIC_BLOCK)
(insn 3180 3179 3181 210 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 55248 [0xd7d0]))) [1 rqstfld.id+32 S4 A128])
        (const_int 109 [0x6d])) "ETAFLD2.f":581 86 {*movsi_internal}
     (nil))
;;  succ:       211 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 211, loop depth 0, maybe hot
;;  prev block 210, next block 212, flags: (RTL, MODIFIED)
;;  pred:       209
;;              210 (FALLTHRU)
;; bb 211 artificial_defs: { }
;; bb 211 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 2429 2430 2431 2432
(code_label 3181 3180 3182 211 108 (nil) [1 uses])
(note 3182 3181 3183 211 [bb 211] NOTE_INSN_BASIC_BLOCK)
(insn 3183 3182 3184 211 (set (reg:DI 4 si [2429])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -832 [0xfffffffffffffcc0])) [11 jmout+0 S8 A64])) "ETAFLD2.f":582 85 {*movdi_internal}
     (nil))
(insn 3184 3183 3185 211 (set (reg:DI 2 cx [2430])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -824 [0xfffffffffffffcc8])) [11 imout+0 S8 A64])) "ETAFLD2.f":582 85 {*movdi_internal}
     (nil))
(insn 3185 3184 3186 211 (set (reg:DI 1 dx [2431])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "ETAFLD2.f":582 85 {*movdi_internal}
     (nil))
(insn 3186 3185 3187 211 (parallel [
            (set (reg:DI 0 ax [2432])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -276 [0xfffffffffffffeec])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":582 222 {*adddi_1}
     (nil))
(insn 3187 3186 3188 211 (set (reg:DI 38 r9)
        (reg:DI 4 si [2429])) "ETAFLD2.f":582 85 {*movdi_internal}
     (nil))
(insn 3188 3187 3189 211 (set (reg:DI 37 r8)
        (reg:DI 2 cx [2430])) "ETAFLD2.f":582 85 {*movdi_internal}
     (nil))
(insn 3189 3188 3190 211 (set (reg:DI 2 cx)
        (reg:DI 1 dx [2431])) "ETAFLD2.f":582 85 {*movdi_internal}
     (nil))
(insn 3190 3189 3191 211 (set (reg:DI 1 dx)
        (reg:DI 0 ax [2432])) "ETAFLD2.f":582 85 {*movdi_internal}
     (nil))
(insn 3191 3190 3192 211 (set (reg:DI 4 si)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                (const_int 512 [0x200])))) "ETAFLD2.f":582 85 {*movdi_internal}
     (nil))
(insn 3192 3191 3193 211 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                (const_int 4 [0x4])))) "ETAFLD2.f":582 85 {*movdi_internal}
     (nil))
(insn 3193 3192 3194 211 (set (reg:QI 0 ax)
        (const_int 0 [0])) "ETAFLD2.f":582 88 {*movqi_internal}
     (nil))
(call_insn 3194 3193 3195 211 (call (mem:QI (symbol_ref:DI ("output_") [flags 0x41]  <function_decl 0x7f9828228700 output>) [0 output S1 A8])
        (const_int 0 [0])) "ETAFLD2.f":582 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
;;  succ:       212 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 212, loop depth 0, maybe hot
;;  prev block 211, next block 213, flags: (RTL, MODIFIED)
;;  pred:       201
;;              211 (FALLTHRU)
;;              202
;; bb 212 artificial_defs: { }
;; bb 212 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 930
(code_label 3195 3194 3196 212 103 (nil) [2 uses])
(note 3196 3195 3197 212 [bb 212] NOTE_INSN_BASIC_BLOCK)
(insn 3197 3196 3198 212 (set (reg:SI 0 ax [orig:930 _844 ] [930])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 592 [0x250]))) [1 rqstfld.iget+576 S4 A128])) "ETAFLD2.f":588 86 {*movsi_internal}
     (nil))
(insn 3198 3197 3199 212 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:930 _844 ] [930])
            (const_int 0 [0]))) "ETAFLD2.f":588 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 3199 3198 3200 212 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 3765)
            (pc))) "ETAFLD2.f":588 682 {*jcc}
     (nil)
 -> 3765)
;;  succ:       213 (FALLTHRU)
;;              247
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 213, loop depth 0, maybe hot
;;  prev block 212, next block 214, flags: (RTL, MODIFIED)
;;  pred:       212 (FALLTHRU)
;; bb 213 artificial_defs: { }
;; bb 213 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 931 932 933 934 935 936 937 938 2433 2434 2435 2436
(note 3200 3199 3201 213 [bb 213] NOTE_INSN_BASIC_BLOCK)
(insn 3201 3200 3202 213 (set (reg:SI 0 ax [orig:931 _845 ] [931])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 592 [0x250]))) [1 rqstfld.iget+576 S4 A128])) "ETAFLD2.f":589 86 {*movsi_internal}
     (nil))
(insn 3202 3201 3203 213 (set (reg:DI 1 dx [orig:932 _846 ] [932])
        (sign_extend:DI (reg:SI 0 ax [orig:931 _845 ] [931]))) "ETAFLD2.f":589 149 {*extendsidi2_rex64}
     (nil))
(insn 3203 3202 3204 213 (set (reg:DI 0 ax [2433])
        (reg:DI 1 dx [orig:932 _846 ] [932])) "ETAFLD2.f":589 85 {*movdi_internal}
     (nil))
(insn 3204 3203 3206 213 (parallel [
            (set (reg:DI 0 ax [2434])
                (ashift:DI (reg:DI 0 ax [2433])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":589 551 {*ashldi3_1}
     (nil))
(insn 3206 3204 3207 213 (parallel [
            (set (reg:DI 0 ax [2433])
                (minus:DI (reg:DI 0 ax [2433])
                    (reg:DI 1 dx [orig:932 _846 ] [932])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":589 278 {*subdi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:932 _846 ] [932])
            (const_int 15 [0xf]))
        (nil)))
(insn 3207 3206 3209 213 (parallel [
            (set (reg:DI 0 ax [2435])
                (ashift:DI (reg:DI 0 ax [2433])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":589 551 {*ashldi3_1}
     (nil))
(insn 3209 3207 3210 213 (set (reg:DI 1 dx [orig:933 _847 ] [933])
        (reg:DI 0 ax [2433])) "ETAFLD2.f":589 85 {*movdi_internal}
     (nil))
(insn 3210 3209 3211 213 (set (reg:SI 0 ax [orig:934 l.125_848 ] [934])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":589 86 {*movsi_internal}
     (nil))
(insn 3211 3210 3212 213 (set (reg:DI 0 ax [orig:935 _849 ] [935])
        (sign_extend:DI (reg:SI 0 ax [orig:934 l.125_848 ] [934]))) "ETAFLD2.f":589 149 {*extendsidi2_rex64}
     (nil))
(insn 3212 3211 3213 213 (parallel [
            (set (reg:DI 0 ax [orig:936 _850 ] [936])
                (plus:DI (reg:DI 0 ax [orig:935 _849 ] [935])
                    (reg:DI 1 dx [orig:933 _847 ] [933])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":589 222 {*adddi_1}
     (nil))
(insn 3213 3212 3214 213 (parallel [
            (set (reg:DI 0 ax [orig:937 _851 ] [937])
                (plus:DI (reg:DI 0 ax [orig:936 _850 ] [936])
                    (const_int -61 [0xffffffffffffffc3])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":589 222 {*adddi_1}
     (nil))
(insn 3214 3213 3215 213 (parallel [
            (set (reg:DI 0 ax [2436])
                (plus:DI (reg:DI 0 ax [orig:937 _851 ] [937])
                    (const_int 1404 [0x57c])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":589 222 {*adddi_1}
     (nil))
(insn 3215 3214 3216 213 (set (reg:SI 0 ax [orig:938 _852 ] [938])
        (mem:SI (plus:DI (mult:DI (reg:DI 0 ax [2436])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)) [1 rqstfld.lvls S4 A32])) "ETAFLD2.f":589 86 {*movsi_internal}
     (nil))
(insn 3216 3215 3217 213 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:938 _852 ] [938])
            (const_int 0 [0]))) "ETAFLD2.f":589 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 3217 3216 3218 213 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 3765)
            (pc))) "ETAFLD2.f":589 682 {*jcc}
     (nil)
 -> 3765)
;;  succ:       214 (FALLTHRU)
;;              247
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 214, loop depth 0, maybe hot
;;  prev block 213, next block 215, flags: (RTL, MODIFIED)
;;  pred:       213 (FALLTHRU)
;; bb 214 artificial_defs: { }
;; bb 214 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 939 940 941 942 943 944 945 946 947 2437 2438 2439 2440 2441 2442 2443
(note 3218 3217 3219 214 [bb 214] NOTE_INSN_BASIC_BLOCK)
(insn 3219 3218 3220 214 (set (reg:SI 0 ax [orig:939 _853 ] [939])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 592 [0x250]))) [1 rqstfld.iget+576 S4 A128])) "ETAFLD2.f":590 86 {*movsi_internal}
     (nil))
(insn 3220 3219 3221 214 (set (reg:DI 1 dx [orig:940 _854 ] [940])
        (sign_extend:DI (reg:SI 0 ax [orig:939 _853 ] [939]))) "ETAFLD2.f":590 149 {*extendsidi2_rex64}
     (nil))
(insn 3221 3220 3222 214 (set (reg:DI 0 ax [2437])
        (reg:DI 1 dx [orig:940 _854 ] [940])) "ETAFLD2.f":590 85 {*movdi_internal}
     (nil))
(insn 3222 3221 3224 214 (parallel [
            (set (reg:DI 0 ax [2438])
                (ashift:DI (reg:DI 0 ax [2437])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":590 551 {*ashldi3_1}
     (nil))
(insn 3224 3222 3225 214 (parallel [
            (set (reg:DI 0 ax [2437])
                (minus:DI (reg:DI 0 ax [2437])
                    (reg:DI 1 dx [orig:940 _854 ] [940])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":590 278 {*subdi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:940 _854 ] [940])
            (const_int 15 [0xf]))
        (nil)))
(insn 3225 3224 3227 214 (parallel [
            (set (reg:DI 0 ax [2439])
                (ashift:DI (reg:DI 0 ax [2437])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":590 551 {*ashldi3_1}
     (nil))
(insn 3227 3225 3228 214 (set (reg:DI 1 dx [orig:941 _855 ] [941])
        (reg:DI 0 ax [2437])) "ETAFLD2.f":590 85 {*movdi_internal}
     (nil))
(insn 3228 3227 3229 214 (set (reg:SI 0 ax [orig:942 l.126_856 ] [942])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":590 86 {*movsi_internal}
     (nil))
(insn 3229 3228 3230 214 (set (reg:DI 0 ax [orig:943 _857 ] [943])
        (sign_extend:DI (reg:SI 0 ax [orig:942 l.126_856 ] [942]))) "ETAFLD2.f":590 149 {*extendsidi2_rex64}
     (nil))
(insn 3230 3229 3231 214 (parallel [
            (set (reg:DI 0 ax [orig:944 _858 ] [944])
                (plus:DI (reg:DI 0 ax [orig:943 _857 ] [943])
                    (reg:DI 1 dx [orig:941 _855 ] [941])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":590 222 {*adddi_1}
     (nil))
(insn 3231 3230 3232 214 (parallel [
            (set (reg:DI 0 ax [orig:945 _859 ] [945])
                (plus:DI (reg:DI 0 ax [orig:944 _858 ] [944])
                    (const_int -61 [0xffffffffffffffc3])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":590 222 {*adddi_1}
     (nil))
(insn 3232 3231 3233 214 (parallel [
            (set (reg:DI 0 ax [2440])
                (plus:DI (reg:DI 0 ax [orig:945 _859 ] [945])
                    (const_int 1404 [0x57c])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":590 222 {*adddi_1}
     (nil))
(insn 3233 3232 3234 214 (set (reg:SI 0 ax [orig:946 _860 ] [946])
        (mem:SI (plus:DI (mult:DI (reg:DI 0 ax [2440])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)) [1 rqstfld.lvls S4 A32])) "ETAFLD2.f":590 86 {*movsi_internal}
     (nil))
(insn 3234 3233 3235 214 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -268 [0xfffffffffffffef4])) [1 itype+0 S4 A32])
        (reg:SI 0 ax [orig:946 _860 ] [946])) "ETAFLD2.f":590 86 {*movsi_internal}
     (nil))
(insn 3235 3234 3236 214 (set (reg:SF 21 xmm0 [2441])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0  S4 A32])) "ETAFLD2.f":591 131 {*movsf_internal}
     (nil))
(insn 3236 3235 3237 214 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -196 [0xffffffffffffff3c])) [2 us+0 S4 A32])
        (reg:SF 21 xmm0 [2441])) "ETAFLD2.f":591 131 {*movsf_internal}
     (nil))
(insn 3237 3236 3238 214 (set (reg:SF 21 xmm0 [2442])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC46") [flags 0x2]) [0  S4 A32])) "ETAFLD2.f":592 131 {*movsf_internal}
     (nil))
(insn 3238 3237 3239 214 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [2 cclimit+0 S4 A32])
        (reg:SF 21 xmm0 [2442])) "ETAFLD2.f":592 131 {*movsf_internal}
     (nil))
(insn 3239 3238 3240 214 (set (reg:SF 21 xmm0 [2443])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC11") [flags 0x2]) [0  S4 A32])) "ETAFLD2.f":593 131 {*movsf_internal}
     (nil))
(insn 3240 3239 3241 214 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -148 [0xffffffffffffff6c])) [2 climit+0 S4 A32])
        (reg:SF 21 xmm0 [2443])) "ETAFLD2.f":593 131 {*movsf_internal}
     (nil))
(insn 3241 3240 3242 214 (set (reg:SI 0 ax [orig:947 l.127_861 ] [947])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":595 86 {*movsi_internal}
     (nil))
(insn 3242 3241 3243 214 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:947 l.127_861 ] [947])
            (const_int 1 [0x1]))) "ETAFLD2.f":595 11 {*cmpsi_1}
     (nil))
(jump_insn 3243 3242 3244 214 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 3287)
            (pc))) "ETAFLD2.f":595 682 {*jcc}
     (nil)
 -> 3287)
;;  succ:       215 (FALLTHRU)
;;              222
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 215, loop depth 0, maybe hot
;;  prev block 214, next block 216, flags: (RTL, MODIFIED)
;;  pred:       214 (FALLTHRU)
;; bb 215 artificial_defs: { }
;; bb 215 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 1698 1699
(note 3244 3243 3245 215 [bb 215] NOTE_INSN_BASIC_BLOCK)
(insn 3245 3244 3246 215 (set (reg:SI 1 dx [orig:1698 _2045 ] [1698])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f982824fc60 parallel>)
                    (const_int 8 [0x8]))) [1 parallel.jsta+0 S4 A64])) "ETAFLD2.f":597 86 {*movsi_internal}
     (nil))
(insn 3246 3245 3247 215 (set (reg:SI 0 ax [orig:1699 _2046 ] [1699])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f982824fc60 parallel>)
                    (const_int 12 [0xc]))) [1 parallel.jend+0 S4 A32])) "ETAFLD2.f":597 86 {*movsi_internal}
     (nil))
(insn 3247 3246 3280 215 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])
        (reg:SI 1 dx [orig:1698 _2045 ] [1698])) "ETAFLD2.f":597 86 {*movsi_internal}
     (nil))
;;  succ:       216 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1699

;; basic block 216, loop depth 0, maybe hot
;;  prev block 215, next block 217, flags: (RTL, MODIFIED)
;;  pred:       215 (FALLTHRU)
;;              220 [always] 
;; bb 216 artificial_defs: { }
;; bb 216 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1699
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1699
;; lr  def 	 17 [flags] 1700 2444
(code_label 3280 3247 3248 216 114 (nil) [1 uses])
(note 3248 3280 3249 216 [bb 216] NOTE_INSN_BASIC_BLOCK)
(insn 3249 3248 3250 216 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])
            (reg:SI 0 ax [orig:1699 _2046 ] [1699]))) "ETAFLD2.f":597 11 {*cmpsi_1}
     (nil))
(insn 3250 3249 3251 216 (set (reg:QI 1 dx [2444])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "ETAFLD2.f":597 678 {*setcc_qi}
     (nil))
(insn 3251 3250 3252 216 (set (reg:SI 1 dx [orig:1700 _2048 ] [1700])
        (zero_extend:SI (reg:QI 1 dx [2444]))) "ETAFLD2.f":597 140 {*zero_extendqisi2}
     (nil))
(insn 3252 3251 3253 216 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1700 _2048 ] [1700])
            (const_int 0 [0]))) "ETAFLD2.f":597 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 3253 3252 3254 216 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 5762)
            (pc))) "ETAFLD2.f":597 682 {*jcc}
     (nil)
 -> 5762)
;;  succ:       385
;;              217 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1699

;; basic block 217, loop depth 0, maybe hot
;;  prev block 216, next block 218, flags: (RTL, MODIFIED)
;;  pred:       216 (FALLTHRU)
;; bb 217 artificial_defs: { }
;; bb 217 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1699
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 3254 3253 3255 217 [bb 217] NOTE_INSN_BASIC_BLOCK)
(insn 3255 3254 3274 217 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
        (const_int 1 [0x1])) "ETAFLD2.f":598 86 {*movsi_internal}
     (nil))
;;  succ:       218 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1699

;; basic block 218, loop depth 0, maybe hot
;;  prev block 217, next block 219, flags: (RTL, MODIFIED)
;;  pred:       217 (FALLTHRU)
;;              219 [always] 
;; bb 218 artificial_defs: { }
;; bb 218 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1699
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1701 2445
(code_label 3274 3255 3256 218 113 (nil) [1 uses])
(note 3256 3274 3257 218 [bb 218] NOTE_INSN_BASIC_BLOCK)
(insn 3257 3256 3258 218 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
            (const_int 119 [0x77]))) "ETAFLD2.f":598 11 {*cmpsi_1}
     (nil))
(insn 3258 3257 3259 218 (set (reg:QI 1 dx [2445])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "ETAFLD2.f":598 678 {*setcc_qi}
     (nil))
(insn 3259 3258 3260 218 (set (reg:SI 1 dx [orig:1701 _2050 ] [1701])
        (zero_extend:SI (reg:QI 1 dx [2445]))) "ETAFLD2.f":598 140 {*zero_extendqisi2}
     (nil))
(insn 3260 3259 3261 218 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1701 _2050 ] [1701])
            (const_int 0 [0]))) "ETAFLD2.f":598 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 3261 3260 3262 218 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 5765)
            (pc))) "ETAFLD2.f":598 682 {*jcc}
     (nil)
 -> 5765)
;;  succ:       386
;;              219 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1699

;; basic block 219, loop depth 0, maybe hot
;;  prev block 218, next block 386, flags: (RTL, MODIFIED)
;;  pred:       218 (FALLTHRU)
;; bb 219 artificial_defs: { }
;; bb 219 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1699
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 948 949 950 951 952 2446 2447 2448 2449
(note 3262 3261 3263 219 [bb 219] NOTE_INSN_BASIC_BLOCK)
(insn 3263 3262 3264 219 (set (reg:SI 1 dx [2446])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])) "ETAFLD2.f":599 86 {*movsi_internal}
     (nil))
(insn 3264 3263 3265 219 (set (reg:DI 1 dx [orig:948 _862 ] [948])
        (sign_extend:DI (reg:SI 1 dx [2446]))) "ETAFLD2.f":599 149 {*extendsidi2_rex64}
     (nil))
(insn 3265 3264 3266 219 (parallel [
            (set (reg:DI 2 cx [orig:949 _863 ] [949])
                (mult:DI (reg:DI 1 dx [orig:948 _862 ] [948])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":599 349 {*muldi3_1}
     (nil))
(insn 3266 3265 3267 219 (set (reg:SI 1 dx [2447])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "ETAFLD2.f":599 86 {*movsi_internal}
     (nil))
(insn 3267 3266 3268 219 (set (reg:DI 1 dx [orig:950 _864 ] [950])
        (sign_extend:DI (reg:SI 1 dx [2447]))) "ETAFLD2.f":599 149 {*extendsidi2_rex64}
     (nil))
(insn 3268 3267 3269 219 (parallel [
            (set (reg:DI 1 dx [orig:951 _865 ] [951])
                (plus:DI (reg:DI 1 dx [orig:950 _864 ] [950])
                    (reg:DI 2 cx [orig:949 _863 ] [949])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":599 222 {*adddi_1}
     (nil))
(insn 3269 3268 3270 219 (parallel [
            (set (reg:DI 2 cx [orig:952 _866 ] [952])
                (plus:DI (reg:DI 1 dx [orig:951 _865 ] [951])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":599 222 {*adddi_1}
     (nil))
(insn 3270 3269 3271 219 (set (reg/f:DI 1 dx [2448])
        (symbol_ref:DI ("equiv.3.4378") [flags 0x202]  <var_decl 0x7f9828263750 equiv.3>)) "ETAFLD2.f":599 85 {*movdi_internal}
     (nil))
(insn 3271 3270 3272 219 (set (reg:SF 21 xmm0 [2449])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) "ETAFLD2.f":599 131 {*movsf_internal}
     (nil))
(insn 3272 3271 3273 219 (set (mem/j:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:952 _866 ] [952])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [2448])) [27 equiv.3.egrid1 S4 A32])
        (reg:SF 21 xmm0 [2449])) "ETAFLD2.f":599 131 {*movsf_internal}
     (nil))
(insn 3273 3272 5633 219 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":598 221 {*addsi_1}
     (nil))
(jump_insn 5633 3273 5634 219 (set (pc)
        (label_ref 3274)) "ETAFLD2.f":598 683 {jump}
     (nil)
 -> 3274)
;;  succ:       218 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1699

(barrier 5634 5633 5765)
;; basic block 386, loop depth 0, maybe hot
;;  prev block 219, next block 220, flags: (RTL, MODIFIED)
;;  pred:       218
;; bb 386 artificial_defs: { }
;; bb 386 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1699
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 5765 5634 5764 386 246 (nil) [1 uses])
(note 5764 5765 5766 386 [bb 386] NOTE_INSN_BASIC_BLOCK)
(insn 5766 5764 3277 386 (const_int 0 [0]) "ETAFLD2.f":599 718 {nop}
     (nil))
;;  succ:       220 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1699

;; basic block 220, loop depth 0, maybe hot
;;  prev block 386, next block 385, flags: (RTL, MODIFIED)
;;  pred:       386 [always]  (FALLTHRU)
;; bb 220 artificial_defs: { }
;; bb 220 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1699
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 3277 5766 3278 220 112 (nil) [0 uses])
(note 3278 3277 3279 220 [bb 220] NOTE_INSN_BASIC_BLOCK)
(insn 3279 3278 5635 220 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":597 221 {*addsi_1}
     (nil))
(jump_insn 5635 3279 5636 220 (set (pc)
        (label_ref 3280)) "ETAFLD2.f":597 683 {jump}
     (nil)
 -> 3280)
;;  succ:       216 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1699

(barrier 5636 5635 5762)
;; basic block 385, loop depth 0, maybe hot
;;  prev block 220, next block 221, flags: (RTL, MODIFIED)
;;  pred:       216
;; bb 385 artificial_defs: { }
;; bb 385 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 5762 5636 5761 385 245 (nil) [1 uses])
(note 5761 5762 5763 385 [bb 385] NOTE_INSN_BASIC_BLOCK)
(insn 5763 5761 3283 385 (const_int 0 [0]) "ETAFLD2.f":598 718 {nop}
     (nil))
;;  succ:       221 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 221, loop depth 0, maybe hot
;;  prev block 385, next block 222, flags: (RTL, MODIFIED)
;;  pred:       385 [always]  (FALLTHRU)
;; bb 221 artificial_defs: { }
;; bb 221 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 3283 5763 3284 221 111 (nil) [0 uses])
(note 3284 3283 5637 221 [bb 221] NOTE_INSN_BASIC_BLOCK)
(jump_insn 5637 3284 5638 221 (set (pc)
        (label_ref 3714)) "ETAFLD2.f":602 683 {jump}
     (nil)
 -> 3714)
;;  succ:       244 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 5638 5637 3287)
;; basic block 222, loop depth 0, maybe hot
;;  prev block 221, next block 223, flags: (RTL, MODIFIED)
;;  pred:       214
;; bb 222 artificial_defs: { }
;; bb 222 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 1702 1703
(code_label 3287 5638 3288 222 110 (nil) [1 uses])
(note 3288 3287 3289 222 [bb 222] NOTE_INSN_BASIC_BLOCK)
(insn 3289 3288 3290 222 (set (reg:SI 0 ax [orig:1702 _2054 ] [1702])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f982824fc60 parallel>)
                    (const_int 8 [0x8]))) [1 parallel.jsta+0 S4 A64])) "ETAFLD2.f":608 86 {*movsi_internal}
     (nil))
(insn 3290 3289 3291 222 (set (reg:SI 3 bx [orig:1703 _2055 ] [1703])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f982824fc60 parallel>)
                    (const_int 12 [0xc]))) [1 parallel.jend+0 S4 A32])) "ETAFLD2.f":608 86 {*movsi_internal}
     (nil))
(insn 3291 3290 3711 222 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])
        (reg:SI 0 ax [orig:1702 _2054 ] [1702])) "ETAFLD2.f":608 86 {*movsi_internal}
     (nil))
;;  succ:       223 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1703

;; basic block 223, loop depth 0, maybe hot
;;  prev block 222, next block 224, flags: (RTL, MODIFIED)
;;  pred:       222 (FALLTHRU)
;;              243 [always] 
;; bb 223 artificial_defs: { }
;; bb 223 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1703
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1703
;; lr  def 	 17 [flags] 1704 2450
(code_label 3711 3291 3292 223 130 (nil) [1 uses])
(note 3292 3711 3293 223 [bb 223] NOTE_INSN_BASIC_BLOCK)
(insn 3293 3292 3294 223 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])
            (reg:SI 3 bx [orig:1703 _2055 ] [1703]))) "ETAFLD2.f":608 11 {*cmpsi_1}
     (nil))
(insn 3294 3293 3295 223 (set (reg:QI 0 ax [2450])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "ETAFLD2.f":608 678 {*setcc_qi}
     (nil))
(insn 3295 3294 3296 223 (set (reg:SI 0 ax [orig:1704 _2057 ] [1704])
        (zero_extend:SI (reg:QI 0 ax [2450]))) "ETAFLD2.f":608 140 {*zero_extendqisi2}
     (nil))
(insn 3296 3295 3297 223 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:1704 _2057 ] [1704])
            (const_int 0 [0]))) "ETAFLD2.f":608 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 3297 3296 3298 223 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 5768)
            (pc))) "ETAFLD2.f":608 682 {*jcc}
     (nil)
 -> 5768)
;;  succ:       387
;;              224 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1703

;; basic block 224, loop depth 0, maybe hot
;;  prev block 223, next block 225, flags: (RTL, MODIFIED)
;;  pred:       223 (FALLTHRU)
;; bb 224 artificial_defs: { }
;; bb 224 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1703
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 3298 3297 3299 224 [bb 224] NOTE_INSN_BASIC_BLOCK)
(insn 3299 3298 3705 224 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
        (const_int 1 [0x1])) "ETAFLD2.f":609 86 {*movsi_internal}
     (nil))
;;  succ:       225 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1703

;; basic block 225, loop depth 0, maybe hot
;;  prev block 224, next block 226, flags: (RTL, MODIFIED)
;;  pred:       224 (FALLTHRU)
;;              242 [always] 
;; bb 225 artificial_defs: { }
;; bb 225 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1703
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1705 2451
(code_label 3705 3299 3300 225 129 (nil) [1 uses])
(note 3300 3705 3301 225 [bb 225] NOTE_INSN_BASIC_BLOCK)
(insn 3301 3300 3302 225 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
            (const_int 119 [0x77]))) "ETAFLD2.f":609 11 {*cmpsi_1}
     (nil))
(insn 3302 3301 3303 225 (set (reg:QI 0 ax [2451])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "ETAFLD2.f":609 678 {*setcc_qi}
     (nil))
(insn 3303 3302 3304 225 (set (reg:SI 0 ax [orig:1705 _2059 ] [1705])
        (zero_extend:SI (reg:QI 0 ax [2451]))) "ETAFLD2.f":609 140 {*zero_extendqisi2}
     (nil))
(insn 3304 3303 3305 225 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:1705 _2059 ] [1705])
            (const_int 0 [0]))) "ETAFLD2.f":609 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 3305 3304 3306 225 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 5771)
            (pc))) "ETAFLD2.f":609 682 {*jcc}
     (nil)
 -> 5771)
;;  succ:       388
;;              226 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1703

;; basic block 226, loop depth 0, maybe hot
;;  prev block 225, next block 227, flags: (RTL, MODIFIED)
;;  pred:       225 (FALLTHRU)
;; bb 226 artificial_defs: { }
;; bb 226 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1703
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 953 954 955 956 957 958 959 960 961 962 963 964 965 966 967 968 969 970 971 972 973 974 975 976 977 978 979 980 981 982 983 984 985 986 987 988 989 990 991 992 993 994 995 996 997 998 999 1000 1001 1002 1003 1004 1005 1006 1636 2452 2453 2454 2455 2456 2457 2458 2459 2460 2461 2462 2463 2464 2465 2466 2467 2468 2469 2470 2471 2472 2473 2474 2475 2476 2477 2478 2479 2480 2481 2482 2483 2484 2485
(note 3306 3305 3307 226 [bb 226] NOTE_INSN_BASIC_BLOCK)
(insn 3307 3306 3308 226 (set (reg:SI 0 ax [2452])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])) "ETAFLD2.f":610 86 {*movsi_internal}
     (nil))
(insn 3308 3307 3309 226 (set (reg:DI 0 ax [orig:953 _867 ] [953])
        (sign_extend:DI (reg:SI 0 ax [2452]))) "ETAFLD2.f":610 149 {*extendsidi2_rex64}
     (nil))
(insn 3309 3308 3310 226 (parallel [
            (set (reg:DI 1 dx [orig:954 _868 ] [954])
                (mult:DI (reg:DI 0 ax [orig:953 _867 ] [953])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":610 349 {*muldi3_1}
     (nil))
(insn 3310 3309 3311 226 (set (reg:SI 0 ax [2453])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "ETAFLD2.f":610 86 {*movsi_internal}
     (nil))
(insn 3311 3310 3312 226 (set (reg:DI 0 ax [orig:955 _869 ] [955])
        (sign_extend:DI (reg:SI 0 ax [2453]))) "ETAFLD2.f":610 149 {*extendsidi2_rex64}
     (nil))
(insn 3312 3311 3313 226 (parallel [
            (set (reg:DI 0 ax [orig:956 _870 ] [956])
                (plus:DI (reg:DI 0 ax [orig:955 _869 ] [955])
                    (reg:DI 1 dx [orig:954 _868 ] [954])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":610 222 {*adddi_1}
     (nil))
(insn 3313 3312 3314 226 (parallel [
            (set (reg:DI 1 dx [orig:957 _871 ] [957])
                (plus:DI (reg:DI 0 ax [orig:956 _870 ] [956])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":610 222 {*adddi_1}
     (nil))
(insn 3314 3313 3315 226 (set (reg/f:DI 0 ax [2454])
        (symbol_ref:DI ("loops_") [flags 0x202]  <var_decl 0x7f9828246c60 loops>)) "ETAFLD2.f":610 85 {*movdi_internal}
     (nil))
(insn 3315 3314 3316 226 (parallel [
            (set (reg:DI 1 dx [2455])
                (plus:DI (reg:DI 1 dx [orig:957 _871 ] [957])
                    (const_int 2420 [0x974])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":610 222 {*adddi_1}
     (nil))
(insn 3316 3315 3317 226 (set (reg:SI 0 ax [orig:958 _872 ] [958])
        (mem:SI (plus:DI (mult:DI (reg:DI 1 dx [2455])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [2454])) [1 loops.lmh S4 A32])) "ETAFLD2.f":610 86 {*movsi_internal}
     (nil))
(insn 3317 3316 3318 226 (set (reg:SI 1 dx [2456])
        (const_int 38 [0x26])) "ETAFLD2.f":610 86 {*movsi_internal}
     (nil))
(insn 3318 3317 5884 226 (parallel [
            (set (reg:SI 1 dx [2456])
                (minus:SI (reg:SI 1 dx [2456])
                    (reg:SI 0 ax [orig:958 _872 ] [958])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":610 277 {*subsi_1}
     (nil))
(insn 5884 3318 3319 226 (set (reg:SI 0 ax [2457])
        (reg:SI 1 dx [2456])) "ETAFLD2.f":610 86 {*movsi_internal}
     (nil))
(insn 3319 5884 3320 226 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -152 [0xffffffffffffff68])) [1 lml+0 S4 A32])
        (reg:SI 0 ax [2457])) "ETAFLD2.f":610 86 {*movsi_internal}
     (nil))
(insn 3320 3319 3321 226 (set (reg:SI 0 ax [orig:959 l.128_873 ] [959])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":611 86 {*movsi_internal}
     (nil))
(insn 3321 3320 3322 226 (set (reg:DI 0 ax [orig:960 _874 ] [960])
        (sign_extend:DI (reg:SI 0 ax [orig:959 l.128_873 ] [959]))) "ETAFLD2.f":611 149 {*extendsidi2_rex64}
     (nil))
(insn 3322 3321 3323 226 (parallel [
            (set (reg:DI 1 dx [orig:961 _875 ] [961])
                (mult:DI (reg:DI 0 ax [orig:960 _874 ] [960])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":611 349 {*muldi3_1}
     (nil))
(insn 3323 3322 3324 226 (set (reg:SI 0 ax [2458])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])) "ETAFLD2.f":611 86 {*movsi_internal}
     (nil))
(insn 3324 3323 3325 226 (set (reg:DI 0 ax [orig:962 _876 ] [962])
        (sign_extend:DI (reg:SI 0 ax [2458]))) "ETAFLD2.f":611 149 {*extendsidi2_rex64}
     (nil))
(insn 3325 3324 3326 226 (parallel [
            (set (reg:DI 0 ax [orig:963 _877 ] [963])
                (mult:DI (reg:DI 0 ax [orig:962 _876 ] [962])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":611 349 {*muldi3_1}
     (nil))
(insn 3326 3325 3327 226 (parallel [
            (set (reg:DI 1 dx [orig:964 _878 ] [964])
                (plus:DI (reg:DI 1 dx [orig:961 _875 ] [961])
                    (reg:DI 0 ax [orig:963 _877 ] [963])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":611 222 {*adddi_1}
     (nil))
(insn 3327 3326 3328 226 (set (reg:SI 0 ax [2459])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "ETAFLD2.f":611 86 {*movsi_internal}
     (nil))
(insn 3328 3327 3329 226 (set (reg:DI 0 ax [orig:965 _879 ] [965])
        (sign_extend:DI (reg:SI 0 ax [2459]))) "ETAFLD2.f":611 149 {*extendsidi2_rex64}
     (nil))
(insn 3329 3328 3330 226 (parallel [
            (set (reg:DI 0 ax [orig:966 _880 ] [966])
                (plus:DI (reg:DI 0 ax [orig:965 _879 ] [965])
                    (reg:DI 1 dx [orig:964 _878 ] [964])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":611 222 {*adddi_1}
     (nil))
(insn 3330 3329 3331 226 (parallel [
            (set (reg:DI 1 dx [orig:967 _881 ] [967])
                (plus:DI (reg:DI 0 ax [orig:966 _880 ] [966])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":611 222 {*adddi_1}
     (nil))
(insn 3331 3330 3332 226 (set (reg/f:DI 0 ax [2460])
        (symbol_ref:DI ("masks_") [flags 0x202]  <var_decl 0x7f982824f480 masks>)) "ETAFLD2.f":611 85 {*movdi_internal}
     (nil))
(insn 3332 3331 3333 226 (parallel [
            (set (reg:DI 1 dx [2461])
                (plus:DI (reg:DI 1 dx [orig:967 _881 ] [967])
                    (const_int 148155 [0x242bb])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":611 222 {*adddi_1}
     (nil))
(insn 3333 3332 3334 226 (set (reg:SF 22 xmm1 [orig:968 _882 ] [968])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [2461])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [2460])) [2 masks.htm S4 A32])) "ETAFLD2.f":611 131 {*movsf_internal}
     (nil))
(insn 3334 3333 3335 226 (set (reg:SI 0 ax [2462])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])) "ETAFLD2.f":611 86 {*movsi_internal}
     (nil))
(insn 3335 3334 3336 226 (set (reg:DI 0 ax [orig:969 _883 ] [969])
        (sign_extend:DI (reg:SI 0 ax [2462]))) "ETAFLD2.f":611 149 {*extendsidi2_rex64}
     (nil))
(insn 3336 3335 3337 226 (parallel [
            (set (reg:DI 1 dx [orig:970 _884 ] [970])
                (mult:DI (reg:DI 0 ax [orig:969 _883 ] [969])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":611 349 {*muldi3_1}
     (nil))
(insn 3337 3336 3338 226 (set (reg:SI 0 ax [2463])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "ETAFLD2.f":611 86 {*movsi_internal}
     (nil))
(insn 3338 3337 3339 226 (set (reg:DI 0 ax [orig:971 _885 ] [971])
        (sign_extend:DI (reg:SI 0 ax [2463]))) "ETAFLD2.f":611 149 {*extendsidi2_rex64}
     (nil))
(insn 3339 3338 3340 226 (parallel [
            (set (reg:DI 0 ax [orig:972 _886 ] [972])
                (plus:DI (reg:DI 0 ax [orig:971 _885 ] [971])
                    (reg:DI 1 dx [orig:970 _884 ] [970])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":611 222 {*adddi_1}
     (nil))
(insn 3340 3339 3341 226 (parallel [
            (set (reg:DI 1 dx [orig:973 _887 ] [973])
                (plus:DI (reg:DI 0 ax [orig:972 _886 ] [972])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":611 222 {*adddi_1}
     (nil))
(insn 3341 3340 3342 226 (set (reg/f:DI 0 ax [2464])
        (symbol_ref:DI ("masks_") [flags 0x202]  <var_decl 0x7f982824f480 masks>)) "ETAFLD2.f":611 85 {*movdi_internal}
     (nil))
(insn 3342 3341 3343 226 (set (reg:SF 21 xmm0 [orig:974 _888 ] [974])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:973 _887 ] [973])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [2464])) [2 masks.hbm2 S4 A32])) "ETAFLD2.f":611 131 {*movsf_internal}
     (nil))
(insn 3343 3342 3344 226 (set (reg:SF 21 xmm0 [2465])
        (mult:SF (reg:SF 21 xmm0 [orig:974 _888 ] [974])
            (reg:SF 22 xmm1 [orig:968 _882 ] [968]))) "ETAFLD2.f":611 838 {*fop_sf_comm}
     (nil))
(insn 3344 3343 3345 226 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -156 [0xffffffffffffff64])) [2 hh+0 S4 A32])
        (reg:SF 21 xmm0 [2465])) "ETAFLD2.f":611 131 {*movsf_internal}
     (nil))
(insn 3345 3344 3346 226 (set (reg:SI 0 ax [orig:975 l.129_889 ] [975])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":612 86 {*movsi_internal}
     (nil))
(insn 3346 3345 3347 226 (set (reg:DI 0 ax [orig:976 _890 ] [976])
        (sign_extend:DI (reg:SI 0 ax [orig:975 l.129_889 ] [975]))) "ETAFLD2.f":612 149 {*extendsidi2_rex64}
     (nil))
(insn 3347 3346 3348 226 (parallel [
            (set (reg:DI 1 dx [orig:977 _891 ] [977])
                (mult:DI (reg:DI 0 ax [orig:976 _890 ] [976])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":612 349 {*muldi3_1}
     (nil))
(insn 3348 3347 3349 226 (set (reg:SI 0 ax [2466])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])) "ETAFLD2.f":612 86 {*movsi_internal}
     (nil))
(insn 3349 3348 3350 226 (set (reg:DI 0 ax [orig:978 _892 ] [978])
        (sign_extend:DI (reg:SI 0 ax [2466]))) "ETAFLD2.f":612 149 {*extendsidi2_rex64}
     (nil))
(insn 3350 3349 3351 226 (parallel [
            (set (reg:DI 0 ax [orig:979 _893 ] [979])
                (mult:DI (reg:DI 0 ax [orig:978 _892 ] [978])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":612 349 {*muldi3_1}
     (nil))
(insn 3351 3350 3352 226 (parallel [
            (set (reg:DI 1 dx [orig:980 _894 ] [980])
                (plus:DI (reg:DI 1 dx [orig:977 _891 ] [977])
                    (reg:DI 0 ax [orig:979 _893 ] [979])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":612 222 {*adddi_1}
     (nil))
(insn 3352 3351 3353 226 (set (reg:SI 0 ax [2467])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "ETAFLD2.f":612 86 {*movsi_internal}
     (nil))
(insn 3353 3352 3354 226 (set (reg:DI 0 ax [orig:981 _895 ] [981])
        (sign_extend:DI (reg:SI 0 ax [2467]))) "ETAFLD2.f":612 149 {*extendsidi2_rex64}
     (nil))
(insn 3354 3353 3355 226 (parallel [
            (set (reg:DI 0 ax [orig:982 _896 ] [982])
                (plus:DI (reg:DI 0 ax [orig:981 _895 ] [981])
                    (reg:DI 1 dx [orig:980 _894 ] [980])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":612 222 {*adddi_1}
     (nil))
(insn 3355 3354 3356 226 (parallel [
            (set (reg:DI 1 dx [orig:983 _897 ] [983])
                (plus:DI (reg:DI 0 ax [orig:982 _896 ] [982])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":612 222 {*adddi_1}
     (nil))
(insn 3356 3355 3357 226 (set (reg/f:DI 0 ax [2468])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7f982825bcf0 vrbls>)) "ETAFLD2.f":612 85 {*movdi_internal}
     (nil))
(insn 3357 3356 3358 226 (parallel [
            (set (reg:DI 1 dx [2469])
                (plus:DI (reg:DI 1 dx [orig:983 _897 ] [983])
                    (const_int 2340849 [0x23b7f1])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":612 222 {*adddi_1}
     (nil))
(insn 3358 3357 3359 226 (set (reg:SF 21 xmm0 [2470])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [2469])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [2468])) [2 vrbls.t S4 A32])) "ETAFLD2.f":612 131 {*movsf_internal}
     (nil))
(insn 3359 3358 3360 226 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -160 [0xffffffffffffff60])) [2 tkl+0 S4 A32])
        (reg:SF 21 xmm0 [2470])) "ETAFLD2.f":612 131 {*movsf_internal}
     (nil))
(insn 3360 3359 3361 226 (set (reg:SI 0 ax [orig:984 l.130_898 ] [984])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":613 86 {*movsi_internal}
     (nil))
(insn 3361 3360 3362 226 (set (reg:DI 0 ax [orig:985 _899 ] [985])
        (sign_extend:DI (reg:SI 0 ax [orig:984 l.130_898 ] [984]))) "ETAFLD2.f":613 149 {*extendsidi2_rex64}
     (nil))
(insn 3362 3361 3363 226 (parallel [
            (set (reg:DI 1 dx [orig:986 _900 ] [986])
                (mult:DI (reg:DI 0 ax [orig:985 _899 ] [985])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":613 349 {*muldi3_1}
     (nil))
(insn 3363 3362 3364 226 (set (reg:SI 0 ax [2471])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])) "ETAFLD2.f":613 86 {*movsi_internal}
     (nil))
(insn 3364 3363 3365 226 (set (reg:DI 0 ax [orig:987 _901 ] [987])
        (sign_extend:DI (reg:SI 0 ax [2471]))) "ETAFLD2.f":613 149 {*extendsidi2_rex64}
     (nil))
(insn 3365 3364 3366 226 (parallel [
            (set (reg:DI 0 ax [orig:988 _902 ] [988])
                (mult:DI (reg:DI 0 ax [orig:987 _901 ] [987])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":613 349 {*muldi3_1}
     (nil))
(insn 3366 3365 3367 226 (parallel [
            (set (reg:DI 1 dx [orig:989 _903 ] [989])
                (plus:DI (reg:DI 1 dx [orig:986 _900 ] [986])
                    (reg:DI 0 ax [orig:988 _902 ] [988])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":613 222 {*adddi_1}
     (nil))
(insn 3367 3366 3368 226 (set (reg:SI 0 ax [2472])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "ETAFLD2.f":613 86 {*movsi_internal}
     (nil))
(insn 3368 3367 3369 226 (set (reg:DI 0 ax [orig:990 _904 ] [990])
        (sign_extend:DI (reg:SI 0 ax [2472]))) "ETAFLD2.f":613 149 {*extendsidi2_rex64}
     (nil))
(insn 3369 3368 3370 226 (parallel [
            (set (reg:DI 0 ax [orig:991 _905 ] [991])
                (plus:DI (reg:DI 0 ax [orig:990 _904 ] [990])
                    (reg:DI 1 dx [orig:989 _903 ] [989])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":613 222 {*adddi_1}
     (nil))
(insn 3370 3369 3371 226 (parallel [
            (set (reg:DI 1 dx [orig:992 _906 ] [992])
                (plus:DI (reg:DI 0 ax [orig:991 _905 ] [991])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":613 222 {*adddi_1}
     (nil))
(insn 3371 3370 3372 226 (set (reg/f:DI 0 ax [2473])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7f982825bcf0 vrbls>)) "ETAFLD2.f":613 85 {*movdi_internal}
     (nil))
(insn 3372 3371 3373 226 (parallel [
            (set (reg:DI 1 dx [2474])
                (plus:DI (reg:DI 1 dx [orig:992 _906 ] [992])
                    (const_int 3466827 [0x34e64b])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":613 222 {*adddi_1}
     (nil))
(insn 3373 3372 3374 226 (set (reg:SF 21 xmm0 [2475])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [2474])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [2473])) [2 vrbls.q S4 A32])) "ETAFLD2.f":613 131 {*movsf_internal}
     (nil))
(insn 3374 3373 3375 226 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -164 [0xffffffffffffff5c])) [2 qkl+0 S4 A32])
        (reg:SF 21 xmm0 [2475])) "ETAFLD2.f":613 131 {*movsf_internal}
     (nil))
(insn 3375 3374 3376 226 (set (reg:SI 0 ax [orig:993 l.131_907 ] [993])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":614 86 {*movsi_internal}
     (nil))
(insn 3376 3375 3377 226 (set (reg:DI 0 ax [orig:994 _908 ] [994])
        (sign_extend:DI (reg:SI 0 ax [orig:993 l.131_907 ] [993]))) "ETAFLD2.f":614 149 {*extendsidi2_rex64}
     (nil))
(insn 3377 3376 3378 226 (parallel [
            (set (reg:DI 1 dx [orig:995 _909 ] [995])
                (mult:DI (reg:DI 0 ax [orig:994 _908 ] [994])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":614 349 {*muldi3_1}
     (nil))
(insn 3378 3377 3379 226 (set (reg:SI 0 ax [2476])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])) "ETAFLD2.f":614 86 {*movsi_internal}
     (nil))
(insn 3379 3378 3380 226 (set (reg:DI 0 ax [orig:996 _910 ] [996])
        (sign_extend:DI (reg:SI 0 ax [2476]))) "ETAFLD2.f":614 149 {*extendsidi2_rex64}
     (nil))
(insn 3380 3379 3381 226 (parallel [
            (set (reg:DI 0 ax [orig:997 _911 ] [997])
                (mult:DI (reg:DI 0 ax [orig:996 _910 ] [996])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":614 349 {*muldi3_1}
     (nil))
(insn 3381 3380 3382 226 (parallel [
            (set (reg:DI 1 dx [orig:998 _912 ] [998])
                (plus:DI (reg:DI 1 dx [orig:995 _909 ] [995])
                    (reg:DI 0 ax [orig:997 _911 ] [997])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":614 222 {*adddi_1}
     (nil))
(insn 3382 3381 3383 226 (set (reg:SI 0 ax [2477])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "ETAFLD2.f":614 86 {*movsi_internal}
     (nil))
(insn 3383 3382 3384 226 (set (reg:DI 0 ax [orig:999 _913 ] [999])
        (sign_extend:DI (reg:SI 0 ax [2477]))) "ETAFLD2.f":614 149 {*extendsidi2_rex64}
     (nil))
(insn 3384 3383 3385 226 (parallel [
            (set (reg:DI 0 ax [orig:1000 _914 ] [1000])
                (plus:DI (reg:DI 0 ax [orig:999 _913 ] [999])
                    (reg:DI 1 dx [orig:998 _912 ] [998])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":614 222 {*adddi_1}
     (nil))
(insn 3385 3384 3386 226 (parallel [
            (set (reg:DI 1 dx [orig:1001 _915 ] [1001])
                (plus:DI (reg:DI 0 ax [orig:1000 _914 ] [1000])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":614 222 {*adddi_1}
     (nil))
(insn 3386 3385 3387 226 (set (reg/f:DI 0 ax [2478])
        (symbol_ref:DI ("cldwtr_") [flags 0x202]  <var_decl 0x7f9828232a20 cldwtr>)) "ETAFLD2.f":614 85 {*movdi_internal}
     (nil))
(insn 3387 3386 3388 226 (set (reg:SF 21 xmm0 [2479])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:1001 _915 ] [1001])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [2478])) [2 cldwtr.cwm S4 A32])) "ETAFLD2.f":614 131 {*movsf_internal}
     (nil))
(insn 3388 3387 3389 226 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [2 cwmkl+0 S4 A32])
        (reg:SF 21 xmm0 [2479])) "ETAFLD2.f":614 131 {*movsf_internal}
     (nil))
(insn 3389 3388 3390 226 (set (reg:SF 21 xmm0 [2480])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -160 [0xffffffffffffff60])) [2 tkl+0 S4 A32])) "ETAFLD2.f":615 131 {*movsf_internal}
     (nil))
(insn 3390 3389 3391 226 (set (reg:SF 22 xmm1 [2481])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC12") [flags 0x2]) [0  S4 A32])) "ETAFLD2.f":615 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 2.73149993896484375e+2 [0x0.889333p+9])
        (nil)))
(insn 3391 3390 3392 226 (set (reg:SF 21 xmm0 [orig:1002 _916 ] [1002])
        (minus:SF (reg:SF 21 xmm0 [2480])
            (reg:SF 22 xmm1 [2481]))) "ETAFLD2.f":615 841 {*fop_sf_1}
     (nil))
(insn 3392 3391 3393 226 (set (reg:SF 22 xmm1 [orig:1003 _917 ] [1003])
        (reg:SF 21 xmm0 [orig:1002 _916 ] [1002])) "ETAFLD2.f":615 131 {*movsf_internal}
     (nil))
(insn 3393 3392 3394 226 (set (reg:SF 21 xmm0 [2483])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -156 [0xffffffffffffff64])) [2 hh+0 S4 A32])) "ETAFLD2.f":615 131 {*movsf_internal}
     (nil))
(insn 3394 3393 3395 226 (set (reg:SF 21 xmm0 [2482])
        (mult:SF (reg:SF 21 xmm0 [2483])
            (reg:SF 22 xmm1 [orig:1003 _917 ] [1003]))) "ETAFLD2.f":615 838 {*fop_sf_comm}
     (nil))
(insn 3395 3394 3396 226 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -172 [0xffffffffffffff54])) [2 tmt0+0 S4 A32])
        (reg:SF 21 xmm0 [2482])) "ETAFLD2.f":615 131 {*movsf_internal}
     (nil))
(insn 3396 3395 3397 226 (set (reg:SF 21 xmm0 [orig:1636 M.15_1596 ] [1636])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -172 [0xffffffffffffff54])) [2 tmt0+0 S4 A32])) "ETAFLD2.f":616 131 {*movsf_internal}
     (nil))
(insn 3397 3396 3398 226 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [orig:1636 M.15_1596 ] [1636])
            (mem/u/c:SF (symbol_ref/u:DI ("*.LC13") [flags 0x2]) [0  S4 A32]))) "ETAFLD2.f":616 53 {*cmpisf}
     (nil))
(insn 3398 3397 3399 226 (set (reg:QI 0 ax [2484])
        (gt:QI (reg:CCFP 17 flags)
            (const_int 0 [0]))) "ETAFLD2.f":616 678 {*setcc_qi}
     (nil))
(insn 3399 3398 3400 226 (set (reg:SI 1 dx [orig:1004 _918 ] [1004])
        (zero_extend:SI (reg:QI 0 ax [2484]))) "ETAFLD2.f":616 140 {*zero_extendqisi2}
     (nil))
(insn 3400 3399 3401 226 (set (reg:CCFP 17 flags)
        (unspec:CCFP [
                (compare:CCFP (reg:SF 21 xmm0 [orig:1636 M.15_1596 ] [1636])
                    (reg:SF 21 xmm0 [orig:1636 M.15_1596 ] [1636]))
            ] UNSPEC_NOTRAP)) "ETAFLD2.f":616 54 {*cmpiusf}
     (nil))
(insn 3401 3400 3402 226 (set (reg:QI 0 ax [2485])
        (unordered:QI (reg:CCFP 17 flags)
            (const_int 0 [0]))) "ETAFLD2.f":616 678 {*setcc_qi}
     (nil))
(insn 3402 3401 3403 226 (set (reg:SI 0 ax [orig:1005 _919 ] [1005])
        (zero_extend:SI (reg:QI 0 ax [2485]))) "ETAFLD2.f":616 140 {*zero_extendqisi2}
     (nil))
(insn 3403 3402 3404 226 (parallel [
            (set (reg:SI 0 ax [orig:1006 _920 ] [1006])
                (ior:SI (reg:SI 0 ax [orig:1005 _919 ] [1005])
                    (reg:SI 1 dx [orig:1004 _918 ] [1004])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":616 450 {*iorsi_1}
     (nil))
(insn 3404 3403 3405 226 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:1006 _920 ] [1006])
            (const_int 0 [0]))) "ETAFLD2.f":616 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 3405 3404 3406 226 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 3408)
            (pc))) "ETAFLD2.f":616 682 {*jcc}
     (nil)
 -> 3408)
;;  succ:       227 (FALLTHRU)
;;              228
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1636 1703

;; basic block 227, loop depth 0, maybe hot
;;  prev block 226, next block 228, flags: (RTL, MODIFIED)
;;  pred:       226 (FALLTHRU)
;; bb 227 artificial_defs: { }
;; bb 227 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1703
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 1636
(note 3406 3405 3407 227 [bb 227] NOTE_INSN_BASIC_BLOCK)
(insn 3407 3406 3408 227 (set (reg:SF 21 xmm0 [orig:1636 M.15_1596 ] [1636])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC13") [flags 0x2]) [0  S4 A32])) "ETAFLD2.f":616 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF -1.5e+1 [-0x0.fp+4])
        (nil)))
;;  succ:       228 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1636 1703

;; basic block 228, loop depth 0, maybe hot
;;  prev block 227, next block 229, flags: (RTL, MODIFIED)
;;  pred:       226
;;              227 (FALLTHRU)
;; bb 228 artificial_defs: { }
;; bb 228 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1636 1703
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1636
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 1007 1008 1009 1010 1011 1012 1013 1014 1015 1016 1017 1018 1019 1020 1021 1022 1023 1024 1025 1026 1027 1028 1029 1030 1031 1637 2486 2487 2488 2489 2490 2491 2492 2493 2494 2495 2496 2497 2498 2499 2500 2501 2502 2503 2504 2505 2506
(code_label 3408 3407 3409 228 117 (nil) [1 uses])
(note 3409 3408 3410 228 [bb 228] NOTE_INSN_BASIC_BLOCK)
(insn 3410 3409 3411 228 (set (reg:SF 21 xmm0 [2486])
        (mult:SF (reg:SF 21 xmm0 [orig:1636 M.15_1596 ] [1636])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -156 [0xffffffffffffff64])) [2 hh+0 S4 A32]))) "ETAFLD2.f":616 838 {*fop_sf_comm}
     (nil))
(insn 3411 3410 3412 228 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -176 [0xffffffffffffff50])) [2 tmt15+0 S4 A32])
        (reg:SF 21 xmm0 [2486])) "ETAFLD2.f":616 131 {*movsf_internal}
     (nil))
(insn 3412 3411 3413 228 (set (reg:SI 0 ax [2487])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])) "ETAFLD2.f":617 86 {*movsi_internal}
     (nil))
(insn 3413 3412 3414 228 (set (reg:DI 0 ax [orig:1007 _921 ] [1007])
        (sign_extend:DI (reg:SI 0 ax [2487]))) "ETAFLD2.f":617 149 {*extendsidi2_rex64}
     (nil))
(insn 3414 3413 3415 228 (parallel [
            (set (reg:DI 1 dx [orig:1008 _922 ] [1008])
                (mult:DI (reg:DI 0 ax [orig:1007 _921 ] [1007])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":617 349 {*muldi3_1}
     (nil))
(insn 3415 3414 3416 228 (set (reg:SI 0 ax [2488])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "ETAFLD2.f":617 86 {*movsi_internal}
     (nil))
(insn 3416 3415 3417 228 (set (reg:DI 0 ax [orig:1009 _923 ] [1009])
        (sign_extend:DI (reg:SI 0 ax [2488]))) "ETAFLD2.f":617 149 {*extendsidi2_rex64}
     (nil))
(insn 3417 3416 3418 228 (parallel [
            (set (reg:DI 0 ax [orig:1010 _924 ] [1010])
                (plus:DI (reg:DI 0 ax [orig:1009 _923 ] [1009])
                    (reg:DI 1 dx [orig:1008 _922 ] [1008])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":617 222 {*adddi_1}
     (nil))
(insn 3418 3417 3419 228 (parallel [
            (set (reg:DI 1 dx [orig:1011 _925 ] [1011])
                (plus:DI (reg:DI 0 ax [orig:1010 _924 ] [1010])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":617 222 {*adddi_1}
     (nil))
(insn 3419 3418 3420 228 (set (reg/f:DI 0 ax [2489])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f9828240b40 extra>)) "ETAFLD2.f":617 85 {*movdi_internal}
     (nil))
(insn 3420 3419 3421 228 (parallel [
            (set (reg:DI 1 dx [2490])
                (plus:DI (reg:DI 1 dx [orig:1011 _925 ] [1011])
                    (const_int 4647393 [0x46e9e1])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":617 222 {*adddi_1}
     (nil))
(insn 3421 3420 3422 228 (set (reg:SF 22 xmm1 [orig:1012 _926 ] [1012])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [2490])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [2489])) [2 extra.pdsl S4 A32])) "ETAFLD2.f":617 131 {*movsf_internal}
     (nil))
(insn 3422 3421 3423 228 (set (reg:SI 0 ax [orig:1013 l.132_927 ] [1013])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":617 86 {*movsi_internal}
     (nil))
(insn 3423 3422 3424 228 (set (reg:DI 0 ax [orig:1014 _928 ] [1014])
        (sign_extend:DI (reg:SI 0 ax [orig:1013 l.132_927 ] [1013]))) "ETAFLD2.f":617 149 {*extendsidi2_rex64}
     (nil))
(insn 3424 3423 3425 228 (parallel [
            (set (reg:DI 1 dx [orig:1015 _929 ] [1015])
                (plus:DI (reg:DI 0 ax [orig:1014 _928 ] [1014])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":617 222 {*adddi_1}
     (nil))
(insn 3425 3424 3426 228 (set (reg/f:DI 0 ax [2491])
        (symbol_ref:DI ("mapot_") [flags 0x202]  <var_decl 0x7f982824b120 mapot>)) "ETAFLD2.f":617 85 {*movdi_internal}
     (nil))
(insn 3426 3425 3427 228 (parallel [
            (set (reg:DI 1 dx [2492])
                (plus:DI (reg:DI 1 dx [orig:1015 _929 ] [1015])
                    (const_int 1000099 [0xf42a3])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":617 222 {*adddi_1}
     (nil))
(insn 3427 3426 3428 228 (set (reg:SF 21 xmm0 [orig:1016 _930 ] [1016])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [2492])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [2491])) [2 mapot.aeta S4 A32])) "ETAFLD2.f":617 131 {*movsf_internal}
     (nil))
(insn 3428 3427 3429 228 (set (reg:SF 22 xmm1 [orig:1017 _931 ] [1017])
        (mult:SF (reg:SF 22 xmm1 [orig:1012 _926 ] [1012])
            (reg:SF 21 xmm0 [orig:1016 _930 ] [1016]))) "ETAFLD2.f":617 838 {*fop_sf_comm}
     (nil))
(insn 3429 3428 3430 228 (set (reg/f:DI 0 ax [2493])
        (symbol_ref:DI ("mapot_") [flags 0x202]  <var_decl 0x7f982824b120 mapot>)) "ETAFLD2.f":1 85 {*movdi_internal}
     (nil))
(insn 3430 3429 3431 228 (set (reg:SF 21 xmm0 [orig:1018 _932 ] [1018])
        (mem/c:SF (plus:DI (reg/f:DI 0 ax [2493])
                (const_int 4000012 [0x3d090c])) [2 mapot.pt+0 S4 A32])) "ETAFLD2.f":1 131 {*movsf_internal}
     (nil))
(insn 3431 3430 3432 228 (set (reg:SF 21 xmm0 [2494])
        (plus:SF (reg:SF 21 xmm0 [orig:1018 _932 ] [1018])
            (reg:SF 22 xmm1 [orig:1017 _931 ] [1017]))) "ETAFLD2.f":617 838 {*fop_sf_comm}
     (nil))
(insn 3432 3431 3433 228 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -180 [0xffffffffffffff4c])) [2 pp+0 S4 A32])
        (reg:SF 21 xmm0 [2494])) "ETAFLD2.f":617 131 {*movsf_internal}
     (nil))
(insn 3433 3432 3434 228 (set (reg:SF 22 xmm1 [2495])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -156 [0xffffffffffffff64])) [2 hh+0 S4 A32])) "ETAFLD2.f":618 131 {*movsf_internal}
     (nil))
(insn 3434 3433 3435 228 (set (reg:SF 21 xmm0 [2496])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC14") [flags 0x2]) [0  S4 A32])) "ETAFLD2.f":618 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 3.799051513671875e+2 [0x0.bdf3dcp+9])
        (nil)))
(insn 3435 3434 3436 228 (set (reg:SF 21 xmm0 [orig:1019 _933 ] [1019])
        (mult:SF (reg:SF 21 xmm0 [2496])
            (reg:SF 22 xmm1 [2495]))) "ETAFLD2.f":618 838 {*fop_sf_comm}
     (nil))
(insn 3436 3435 5886 228 (set (reg:SF 21 xmm0 [orig:1019 _933 ] [1019])
        (div:SF (reg:SF 21 xmm0 [orig:1019 _933 ] [1019])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -180 [0xffffffffffffff4c])) [2 pp+0 S4 A32]))) "ETAFLD2.f":618 841 {*fop_sf_1}
     (nil))
(insn 5886 3436 5926 228 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -836 [0xfffffffffffffcbc])) [33 %sfp+-804 S4 A32])
        (reg:SF 21 xmm0 [orig:1019 _933 ] [1019])) "ETAFLD2.f":618 131 {*movsf_internal}
     (nil))
(note 5926 5886 5922 228 NOTE_INSN_DELETED)
(note 5922 5926 3437 228 NOTE_INSN_DELETED)
(insn 3437 5922 3438 228 (set (reg:SF 22 xmm1 [2497])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -156 [0xffffffffffffff64])) [2 hh+0 S4 A32])) "ETAFLD2.f":618 131 {*movsf_internal}
     (nil))
(insn 3438 3437 3439 228 (set (reg:SF 21 xmm0 [2498])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC15") [flags 0x2]) [0  S4 A32])) "ETAFLD2.f":618 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.72693881988525390625e+1 [0x0.8a27b5p+5])
        (nil)))
(insn 3439 3438 3440 228 (set (reg:SF 22 xmm1 [orig:1021 _935 ] [1021])
        (mult:SF (reg:SF 22 xmm1 [2497])
            (reg:SF 21 xmm0 [2498]))) "ETAFLD2.f":618 838 {*fop_sf_comm}
     (nil))
(insn 3440 3439 3441 228 (set (reg:SF 21 xmm0 [2499])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -160 [0xffffffffffffff60])) [2 tkl+0 S4 A32])) "ETAFLD2.f":618 131 {*movsf_internal}
     (nil))
(insn 3441 3440 3442 228 (set (reg:SF 23 xmm2 [2500])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC16") [flags 0x2]) [0  S4 A32])) "ETAFLD2.f":618 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 2.73160003662109375e+2 [0x0.88947bp+9])
        (nil)))
(insn 3442 3441 3444 228 (set (reg:SF 21 xmm0 [orig:1022 _936 ] [1022])
        (minus:SF (reg:SF 21 xmm0 [2499])
            (reg:SF 23 xmm2 [2500]))) "ETAFLD2.f":618 841 {*fop_sf_1}
     (nil))
(insn 3444 3442 3445 228 (set (reg:SF 21 xmm0 [orig:1024 _938 ] [1024])
        (mult:SF (reg:SF 21 xmm0 [orig:1023 _937 ] [1023])
            (reg:SF 22 xmm1 [orig:1021 _935 ] [1021]))) "ETAFLD2.f":618 838 {*fop_sf_comm}
     (nil))
(insn 3445 3444 3446 228 (set (reg:SF 22 xmm1 [2501])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -160 [0xffffffffffffff60])) [2 tkl+0 S4 A32])) "ETAFLD2.f":618 131 {*movsf_internal}
     (nil))
(insn 3446 3445 3447 228 (set (reg:SF 23 xmm2 [2502])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC17") [flags 0x2]) [0  S4 A32])) "ETAFLD2.f":618 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 3.58600006103515625e+1 [0x0.8f70a4p+6])
        (nil)))
(insn 3447 3446 3449 228 (set (reg:SF 22 xmm1 [orig:1025 _939 ] [1025])
        (minus:SF (reg:SF 22 xmm1 [2501])
            (reg:SF 23 xmm2 [2502]))) "ETAFLD2.f":618 841 {*fop_sf_1}
     (nil))
(insn 3449 3447 3451 228 (set (reg:SF 21 xmm0 [orig:1027 _941 ] [1027])
        (div:SF (reg:SF 21 xmm0 [orig:1024 _938 ] [1024])
            (reg:SF 22 xmm1 [orig:1026 _940 ] [1026]))) "ETAFLD2.f":618 841 {*fop_sf_1}
     (nil))
(call_insn/u 3451 3449 5887 228 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("expf") [flags 0x41]  <function_decl 0x7f98280a0300 __builtin_expf>) [0 __builtin_expf S1 A8])
            (const_int 0 [0]))) "ETAFLD2.f":618 700 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (nil)))
(note 5887 3451 5923 228 NOTE_INSN_DELETED)
(note 5923 5887 3453 228 NOTE_INSN_DELETED)
(insn 3453 5923 3454 228 (set (reg:SF 21 xmm0 [2503])
        (mult:SF (reg:SF 21 xmm0 [orig:1028 _942 ] [1028])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -836 [0xfffffffffffffcbc])) [33 %sfp+-804 S4 A32]))) "ETAFLD2.f":618 838 {*fop_sf_comm}
     (nil))
(insn 3454 3453 3455 228 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [2 qw+0 S4 A32])
        (reg:SF 21 xmm0 [2503])) "ETAFLD2.f":618 131 {*movsf_internal}
     (nil))
(insn 3455 3454 3456 228 (set (reg:SF 21 xmm0 [orig:1637 M.16_1597 ] [1637])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -172 [0xffffffffffffff54])) [2 tmt0+0 S4 A32])) "ETAFLD2.f":619 131 {*movsf_internal}
     (nil))
(insn 3456 3455 3457 228 (set (reg:SF 22 xmm1 [2505])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) "ETAFLD2.f":619 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 3457 3456 3458 228 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [orig:1637 M.16_1597 ] [1637])
            (reg:SF 22 xmm1 [2505]))) "ETAFLD2.f":619 53 {*cmpisf}
     (nil))
(insn 3458 3457 3459 228 (set (reg:QI 0 ax [2504])
        (gt:QI (reg:CCFP 17 flags)
            (const_int 0 [0]))) "ETAFLD2.f":619 678 {*setcc_qi}
     (nil))
(insn 3459 3458 3460 228 (set (reg:SI 1 dx [orig:1029 _943 ] [1029])
        (zero_extend:SI (reg:QI 0 ax [2504]))) "ETAFLD2.f":619 140 {*zero_extendqisi2}
     (nil))
(insn 3460 3459 3461 228 (set (reg:CCFP 17 flags)
        (unspec:CCFP [
                (compare:CCFP (reg:SF 21 xmm0 [orig:1637 M.16_1597 ] [1637])
                    (reg:SF 21 xmm0 [orig:1637 M.16_1597 ] [1637]))
            ] UNSPEC_NOTRAP)) "ETAFLD2.f":619 54 {*cmpiusf}
     (nil))
(insn 3461 3460 3462 228 (set (reg:QI 0 ax [2506])
        (unordered:QI (reg:CCFP 17 flags)
            (const_int 0 [0]))) "ETAFLD2.f":619 678 {*setcc_qi}
     (nil))
(insn 3462 3461 3463 228 (set (reg:SI 0 ax [orig:1030 _944 ] [1030])
        (zero_extend:SI (reg:QI 0 ax [2506]))) "ETAFLD2.f":619 140 {*zero_extendqisi2}
     (nil))
(insn 3463 3462 3464 228 (parallel [
            (set (reg:SI 0 ax [orig:1031 _945 ] [1031])
                (ior:SI (reg:SI 0 ax [orig:1030 _944 ] [1030])
                    (reg:SI 1 dx [orig:1029 _943 ] [1029])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":619 450 {*iorsi_1}
     (nil))
(insn 3464 3463 3465 228 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:1031 _945 ] [1031])
            (const_int 0 [0]))) "ETAFLD2.f":619 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 3465 3464 3466 228 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 3468)
            (pc))) "ETAFLD2.f":619 682 {*jcc}
     (nil)
 -> 3468)
;;  succ:       229 (FALLTHRU)
;;              230
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1637 1703

;; basic block 229, loop depth 0, maybe hot
;;  prev block 228, next block 230, flags: (RTL, MODIFIED)
;;  pred:       228 (FALLTHRU)
;; bb 229 artificial_defs: { }
;; bb 229 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1703
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 1637
(note 3466 3465 3467 229 [bb 229] NOTE_INSN_BASIC_BLOCK)
(insn 3467 3466 3468 229 (set (reg:SF 21 xmm0 [orig:1637 M.16_1597 ] [1637])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) "ETAFLD2.f":619 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
;;  succ:       230 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1637 1703

;; basic block 230, loop depth 0, maybe hot
;;  prev block 229, next block 231, flags: (RTL, MODIFIED)
;;  pred:       228
;;              229 (FALLTHRU)
;; bb 230 artificial_defs: { }
;; bb 230 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1637 1703
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1637
;; lr  def 	 17 [flags] 1032 1033 1034 1035 1036 1037 1038 1039 1040 1041 1042 1043 1044 1045 1046 1047 1048 1049 1050 1051 1052 2507 2508 2509 2510 2511 2512 2513 2514 2515 2516 2517 2518 2519 2520
(code_label 3468 3467 3469 230 118 (nil) [1 uses])
(note 3469 3468 3470 230 [bb 230] NOTE_INSN_BASIC_BLOCK)
(insn 3470 3469 3471 230 (set (reg:SF 22 xmm1 [2507])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC18") [flags 0x2]) [0  S4 A32])) "ETAFLD2.f":619 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 9.99999977648258209228515625e-3 [0x0.a3d70ap-6])
        (nil)))
(insn 3471 3470 3472 230 (set (reg:SF 22 xmm1 [orig:1032 _946 ] [1032])
        (mult:SF (reg:SF 22 xmm1 [2507])
            (reg:SF 21 xmm0 [orig:1637 M.16_1597 ] [1637]))) "ETAFLD2.f":619 838 {*fop_sf_comm}
     (nil))
(insn 3472 3471 3473 230 (set (reg:SF 21 xmm0 [2508])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0  S4 A32])) "ETAFLD2.f":619 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 3473 3472 3475 230 (set (reg:SF 21 xmm0 [orig:1033 _947 ] [1033])
        (plus:SF (reg:SF 21 xmm0 [2508])
            (reg:SF 22 xmm1 [orig:1032 _946 ] [1032]))) "ETAFLD2.f":619 838 {*fop_sf_comm}
     (nil))
(insn 3475 3473 3476 230 (set (reg:SI 0 ax [2509])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])) "ETAFLD2.f":619 86 {*movsi_internal}
     (nil))
(insn 3476 3475 3477 230 (set (reg:DI 0 ax [orig:1035 _949 ] [1035])
        (sign_extend:DI (reg:SI 0 ax [2509]))) "ETAFLD2.f":619 149 {*extendsidi2_rex64}
     (nil))
(insn 3477 3476 3478 230 (parallel [
            (set (reg:DI 1 dx [orig:1036 _950 ] [1036])
                (mult:DI (reg:DI 0 ax [orig:1035 _949 ] [1035])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":619 349 {*muldi3_1}
     (nil))
(insn 3478 3477 3479 230 (set (reg:SI 0 ax [2510])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "ETAFLD2.f":619 86 {*movsi_internal}
     (nil))
(insn 3479 3478 3480 230 (set (reg:DI 0 ax [orig:1037 _951 ] [1037])
        (sign_extend:DI (reg:SI 0 ax [2510]))) "ETAFLD2.f":619 149 {*extendsidi2_rex64}
     (nil))
(insn 3480 3479 3481 230 (parallel [
            (set (reg:DI 0 ax [orig:1038 _952 ] [1038])
                (plus:DI (reg:DI 0 ax [orig:1037 _951 ] [1037])
                    (reg:DI 1 dx [orig:1036 _950 ] [1036])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":619 222 {*adddi_1}
     (nil))
(insn 3481 3480 3482 230 (parallel [
            (set (reg:DI 1 dx [orig:1039 _953 ] [1039])
                (plus:DI (reg:DI 0 ax [orig:1038 _952 ] [1038])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":619 222 {*adddi_1}
     (nil))
(insn 3482 3481 3483 230 (set (reg:SF 21 xmm0 [orig:1040 _954 ] [1040])
        (mult:SF (reg:SF 21 xmm0 [orig:1034 _948 ] [1034])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -184 [0xffffffffffffff48])) [2 qw+0 S4 A32]))) "ETAFLD2.f":619 838 {*fop_sf_comm}
     (nil))
(insn 3483 3482 3484 230 (set (reg/f:DI 0 ax [2511])
        (symbol_ref:DI ("qi.4444") [flags 0x202]  <var_decl 0x7f9827e6b6c0 qi>)) "ETAFLD2.f":619 85 {*movdi_internal}
     (nil))
(insn 3484 3483 3485 230 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:1039 _953 ] [1039])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [2511])) [2 qi S4 A32])
        (reg:SF 21 xmm0 [orig:1040 _954 ] [1040])) "ETAFLD2.f":619 131 {*movsf_internal}
     (nil))
(insn 3485 3484 3486 230 (set (reg:SF 22 xmm1 [2512])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -176 [0xffffffffffffff50])) [2 tmt15+0 S4 A32])) "ETAFLD2.f":620 131 {*movsf_internal}
     (nil))
(insn 3486 3485 3487 230 (set (reg:SF 21 xmm0 [2513])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC47") [flags 0x2]) [0  S4 A32])) "ETAFLD2.f":620 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 3.9999998989515006542205810546875e-4 [0x0.d1b717p-11])
        (nil)))
(insn 3487 3486 3488 230 (set (reg:SF 21 xmm0 [orig:1041 _955 ] [1041])
        (mult:SF (reg:SF 21 xmm0 [2513])
            (reg:SF 22 xmm1 [2512]))) "ETAFLD2.f":620 838 {*fop_sf_comm}
     (nil))
(insn 3488 3487 3489 230 (set (reg:SF 23 xmm2 [2514])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -176 [0xffffffffffffff50])) [2 tmt15+0 S4 A32])) "ETAFLD2.f":620 131 {*movsf_internal}
     (nil))
(insn 3489 3488 3490 230 (set (reg:SF 22 xmm1 [2515])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC48") [flags 0x2]) [0  S4 A32])) "ETAFLD2.f":620 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.5e+1 [0x0.fp+4])
        (nil)))
(insn 3490 3489 3492 230 (set (reg:SF 22 xmm1 [orig:1042 _956 ] [1042])
        (plus:SF (reg:SF 22 xmm1 [2515])
            (reg:SF 23 xmm2 [2514]))) "ETAFLD2.f":620 838 {*fop_sf_comm}
     (nil))
(insn 3492 3490 3493 230 (set (reg:SF 22 xmm1 [orig:1044 _958 ] [1044])
        (mult:SF (reg:SF 22 xmm1 [orig:1043 _957 ] [1043])
            (reg:SF 21 xmm0 [orig:1041 _955 ] [1041]))) "ETAFLD2.f":620 838 {*fop_sf_comm}
     (nil))
(insn 3493 3492 3494 230 (set (reg:SF 21 xmm0 [2516])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0  S4 A32])) "ETAFLD2.f":620 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 3494 3493 3496 230 (set (reg:SF 21 xmm0 [orig:1045 _959 ] [1045])
        (minus:SF (reg:SF 21 xmm0 [2516])
            (reg:SF 22 xmm1 [orig:1044 _958 ] [1044]))) "ETAFLD2.f":620 841 {*fop_sf_1}
     (nil))
(insn 3496 3494 3497 230 (set (reg:SI 0 ax [2517])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])) "ETAFLD2.f":620 86 {*movsi_internal}
     (nil))
(insn 3497 3496 3498 230 (set (reg:DI 0 ax [orig:1047 _961 ] [1047])
        (sign_extend:DI (reg:SI 0 ax [2517]))) "ETAFLD2.f":620 149 {*extendsidi2_rex64}
     (nil))
(insn 3498 3497 3499 230 (parallel [
            (set (reg:DI 1 dx [orig:1048 _962 ] [1048])
                (mult:DI (reg:DI 0 ax [orig:1047 _961 ] [1047])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":620 349 {*muldi3_1}
     (nil))
(insn 3499 3498 3500 230 (set (reg:SI 0 ax [2518])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "ETAFLD2.f":620 86 {*movsi_internal}
     (nil))
(insn 3500 3499 3501 230 (set (reg:DI 0 ax [orig:1049 _963 ] [1049])
        (sign_extend:DI (reg:SI 0 ax [2518]))) "ETAFLD2.f":620 149 {*extendsidi2_rex64}
     (nil))
(insn 3501 3500 3502 230 (parallel [
            (set (reg:DI 0 ax [orig:1050 _964 ] [1050])
                (plus:DI (reg:DI 0 ax [orig:1049 _963 ] [1049])
                    (reg:DI 1 dx [orig:1048 _962 ] [1048])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":620 222 {*adddi_1}
     (nil))
(insn 3502 3501 3503 230 (parallel [
            (set (reg:DI 1 dx [orig:1051 _965 ] [1051])
                (plus:DI (reg:DI 0 ax [orig:1050 _964 ] [1050])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":620 222 {*adddi_1}
     (nil))
(insn 3503 3502 3504 230 (set (reg:SF 21 xmm0 [orig:1052 _966 ] [1052])
        (mult:SF (reg:SF 21 xmm0 [orig:1046 _960 ] [1046])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -184 [0xffffffffffffff48])) [2 qw+0 S4 A32]))) "ETAFLD2.f":620 838 {*fop_sf_comm}
     (nil))
(insn 3504 3503 3505 230 (set (reg/f:DI 0 ax [2519])
        (symbol_ref:DI ("qint.4448") [flags 0x202]  <var_decl 0x7f9827e6b7e0 qint>)) "ETAFLD2.f":620 85 {*movdi_internal}
     (nil))
(insn 3505 3504 3506 230 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:1051 _965 ] [1051])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [2519])) [2 qint S4 A32])
        (reg:SF 21 xmm0 [orig:1052 _966 ] [1052])) "ETAFLD2.f":620 131 {*movsf_internal}
     (nil))
(insn 3506 3505 3507 230 (set (reg:SF 21 xmm0 [2520])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC49") [flags 0x2]) [0  S4 A32])) "ETAFLD2.f":621 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF -4.0e+1 [-0x0.ap+6])
        (nil)))
(insn 3507 3506 3508 230 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [2520])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -172 [0xffffffffffffff54])) [2 tmt0+0 S4 A32]))) "ETAFLD2.f":621 53 {*cmpisf}
     (nil))
(jump_insn 3508 3507 3512 230 (set (pc)
        (if_then_else (unlt (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 3531)
            (pc))) "ETAFLD2.f":621 682 {*jcc}
     (nil)
 -> 3531)
;;  succ:       231 (FALLTHRU)
;;              232
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1703

;; basic block 231, loop depth 0, maybe hot
;;  prev block 230, next block 232, flags: (RTL, MODIFIED)
;;  pred:       230 (FALLTHRU)
;; bb 231 artificial_defs: { }
;; bb 231 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1703
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1053 1054 1055 1056 1057 1058 1059 1060 1061 1062 1063 2521 2522 2523 2524 2525 2526
(note 3512 3508 3513 231 [bb 231] NOTE_INSN_BASIC_BLOCK)
(insn 3513 3512 3514 231 (set (reg:SI 0 ax [2521])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])) "ETAFLD2.f":621 86 {*movsi_internal}
     (nil))
(insn 3514 3513 3515 231 (set (reg:DI 0 ax [orig:1053 _967 ] [1053])
        (sign_extend:DI (reg:SI 0 ax [2521]))) "ETAFLD2.f":621 149 {*extendsidi2_rex64}
     (nil))
(insn 3515 3514 3516 231 (parallel [
            (set (reg:DI 1 dx [orig:1054 _968 ] [1054])
                (mult:DI (reg:DI 0 ax [orig:1053 _967 ] [1053])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":621 349 {*muldi3_1}
     (nil))
(insn 3516 3515 3517 231 (set (reg:SI 0 ax [2522])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "ETAFLD2.f":621 86 {*movsi_internal}
     (nil))
(insn 3517 3516 3518 231 (set (reg:DI 0 ax [orig:1055 _969 ] [1055])
        (sign_extend:DI (reg:SI 0 ax [2522]))) "ETAFLD2.f":621 149 {*extendsidi2_rex64}
     (nil))
(insn 3518 3517 3519 231 (parallel [
            (set (reg:DI 0 ax [orig:1056 _970 ] [1056])
                (plus:DI (reg:DI 0 ax [orig:1055 _969 ] [1055])
                    (reg:DI 1 dx [orig:1054 _968 ] [1054])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":621 222 {*adddi_1}
     (nil))
(insn 3519 3518 3520 231 (parallel [
            (set (reg:DI 2 cx [orig:1057 _971 ] [1057])
                (plus:DI (reg:DI 0 ax [orig:1056 _970 ] [1056])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":621 222 {*adddi_1}
     (nil))
(insn 3520 3519 3521 231 (set (reg:SI 0 ax [2523])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])) "ETAFLD2.f":621 86 {*movsi_internal}
     (nil))
(insn 3521 3520 3522 231 (set (reg:DI 0 ax [orig:1058 _972 ] [1058])
        (sign_extend:DI (reg:SI 0 ax [2523]))) "ETAFLD2.f":621 149 {*extendsidi2_rex64}
     (nil))
(insn 3522 3521 3523 231 (parallel [
            (set (reg:DI 1 dx [orig:1059 _973 ] [1059])
                (mult:DI (reg:DI 0 ax [orig:1058 _972 ] [1058])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":621 349 {*muldi3_1}
     (nil))
(insn 3523 3522 3524 231 (set (reg:SI 0 ax [2524])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "ETAFLD2.f":621 86 {*movsi_internal}
     (nil))
(insn 3524 3523 3525 231 (set (reg:DI 0 ax [orig:1060 _974 ] [1060])
        (sign_extend:DI (reg:SI 0 ax [2524]))) "ETAFLD2.f":621 149 {*extendsidi2_rex64}
     (nil))
(insn 3525 3524 3526 231 (parallel [
            (set (reg:DI 0 ax [orig:1061 _975 ] [1061])
                (plus:DI (reg:DI 0 ax [orig:1060 _974 ] [1060])
                    (reg:DI 1 dx [orig:1059 _973 ] [1059])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":621 222 {*adddi_1}
     (nil))
(insn 3526 3525 3527 231 (parallel [
            (set (reg:DI 1 dx [orig:1062 _976 ] [1062])
                (plus:DI (reg:DI 0 ax [orig:1061 _975 ] [1061])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":621 222 {*adddi_1}
     (nil))
(insn 3527 3526 3528 231 (set (reg/f:DI 0 ax [2525])
        (symbol_ref:DI ("qi.4444") [flags 0x202]  <var_decl 0x7f9827e6b6c0 qi>)) "ETAFLD2.f":621 85 {*movdi_internal}
     (nil))
(insn 3528 3527 3529 231 (set (reg:SF 21 xmm0 [orig:1063 _977 ] [1063])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:1057 _971 ] [1057])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [2525])) [2 qi S4 A32])) "ETAFLD2.f":621 131 {*movsf_internal}
     (nil))
(insn 3529 3528 3530 231 (set (reg/f:DI 0 ax [2526])
        (symbol_ref:DI ("qint.4448") [flags 0x202]  <var_decl 0x7f9827e6b7e0 qint>)) "ETAFLD2.f":621 85 {*movdi_internal}
     (nil))
(insn 3530 3529 3531 231 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:1062 _976 ] [1062])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [2526])) [2 qint S4 A32])
        (reg:SF 21 xmm0 [orig:1063 _977 ] [1063])) "ETAFLD2.f":621 131 {*movsf_internal}
     (nil))
;;  succ:       232 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1703

;; basic block 232, loop depth 0, maybe hot
;;  prev block 231, next block 233, flags: (RTL, MODIFIED)
;;  pred:       231 (FALLTHRU)
;;              230
;; bb 232 artificial_defs: { }
;; bb 232 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1703
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1064 1065 1066 1067 1068 1069 1070 1071 1072 1073 1074 1075 1076 1077 1078 1079 1080 1081 1082 1083 1084 1085 1086 1087 1088 1089 1090 1091 1092 1093 1094 1095 1096 1097 1098 1099 1100 1101 1102 1103 1104 1105 1106 1107 1108 1109 2527 2528 2529 2530 2531 2532 2533 2534 2535 2536 2537 2538 2539 2540 2541 2542 2543 2544 2545 2546 2547 2548 2549 2550 2551 2552
(code_label 3531 3530 3532 232 119 (nil) [1 uses])
(note 3532 3531 3533 232 [bb 232] NOTE_INSN_BASIC_BLOCK)
(insn 3533 3532 3534 232 (set (reg:SI 0 ax [2527])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])) "ETAFLD2.f":623 86 {*movsi_internal}
     (nil))
(insn 3534 3533 3535 232 (set (reg:DI 0 ax [orig:1064 _978 ] [1064])
        (sign_extend:DI (reg:SI 0 ax [2527]))) "ETAFLD2.f":623 149 {*extendsidi2_rex64}
     (nil))
(insn 3535 3534 3536 232 (parallel [
            (set (reg:DI 1 dx [orig:1065 _979 ] [1065])
                (mult:DI (reg:DI 0 ax [orig:1064 _978 ] [1064])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":623 349 {*muldi3_1}
     (nil))
(insn 3536 3535 3537 232 (set (reg:SI 0 ax [2528])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "ETAFLD2.f":623 86 {*movsi_internal}
     (nil))
(insn 3537 3536 3538 232 (set (reg:DI 0 ax [orig:1066 _980 ] [1066])
        (sign_extend:DI (reg:SI 0 ax [2528]))) "ETAFLD2.f":623 149 {*extendsidi2_rex64}
     (nil))
(insn 3538 3537 3539 232 (parallel [
            (set (reg:DI 0 ax [orig:1067 _981 ] [1067])
                (plus:DI (reg:DI 0 ax [orig:1066 _980 ] [1066])
                    (reg:DI 1 dx [orig:1065 _979 ] [1065])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":623 222 {*adddi_1}
     (nil))
(insn 3539 3538 3540 232 (parallel [
            (set (reg:DI 1 dx [orig:1068 _982 ] [1068])
                (plus:DI (reg:DI 0 ax [orig:1067 _981 ] [1067])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":623 222 {*adddi_1}
     (nil))
(insn 3540 3539 3541 232 (set (reg/f:DI 0 ax [2529])
        (symbol_ref:DI ("cldwtr_") [flags 0x202]  <var_decl 0x7f9828232a20 cldwtr>)) "ETAFLD2.f":623 85 {*movdi_internal}
     (nil))
(insn 3541 3540 3542 232 (parallel [
            (set (reg:DI 1 dx [2530])
                (plus:DI (reg:DI 1 dx [orig:1068 _982 ] [1068])
                    (const_int 1125978 [0x112e5a])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":623 222 {*adddi_1}
     (nil))
(insn 3542 3541 3543 232 (set (reg:SF 22 xmm1 [orig:1069 _983 ] [1069])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [2530])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [2529])) [2 cldwtr.u00 S4 A32])) "ETAFLD2.f":623 131 {*movsf_internal}
     (nil))
(insn 3543 3542 3544 232 (set (reg:SI 1 dx [orig:1070 l.133_984 ] [1070])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":623 86 {*movsi_internal}
     (nil))
(insn 3544 3543 3545 232 (set (reg:SI 0 ax [2531])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -152 [0xffffffffffffff68])) [1 lml+0 S4 A32])) "ETAFLD2.f":623 86 {*movsi_internal}
     (nil))
(insn 3545 3544 3546 232 (parallel [
            (set (reg:SI 0 ax [orig:1071 _985 ] [1071])
                (plus:SI (reg:SI 0 ax [2531])
                    (reg:SI 1 dx [orig:1070 l.133_984 ] [1070])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":623 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (reg:SI 1 dx [orig:1070 l.133_984 ] [1070])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -120 [0xffffffffffffff88])) [1 lml+0 S4 A32]))
        (nil)))
(insn 3546 3545 3547 232 (set (reg:DI 0 ax [orig:1072 _986 ] [1072])
        (sign_extend:DI (reg:SI 0 ax [orig:1071 _985 ] [1071]))) "ETAFLD2.f":623 149 {*extendsidi2_rex64}
     (nil))
(insn 3547 3546 3548 232 (parallel [
            (set (reg:DI 1 dx [orig:1073 _987 ] [1073])
                (plus:DI (reg:DI 0 ax [orig:1072 _986 ] [1072])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":623 222 {*adddi_1}
     (nil))
(insn 3548 3547 3549 232 (set (reg/f:DI 0 ax [2532])
        (symbol_ref:DI ("cldwtr_") [flags 0x202]  <var_decl 0x7f9828232a20 cldwtr>)) "ETAFLD2.f":623 85 {*movdi_internal}
     (nil))
(insn 3549 3548 3550 232 (parallel [
            (set (reg:DI 1 dx [2533])
                (plus:DI (reg:DI 1 dx [orig:1073 _987 ] [1073])
                    (const_int 1155609 [0x11a219])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":623 222 {*adddi_1}
     (nil))
(insn 3550 3549 3551 232 (set (reg:SF 23 xmm2 [orig:1074 _988 ] [1074])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [2533])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [2532])) [2 cldwtr.ul S4 A32])) "ETAFLD2.f":623 131 {*movsf_internal}
     (nil))
(insn 3551 3550 3552 232 (set (reg:SI 0 ax [2534])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])) "ETAFLD2.f":623 86 {*movsi_internal}
     (nil))
(insn 3552 3551 3553 232 (set (reg:DI 0 ax [orig:1075 _989 ] [1075])
        (sign_extend:DI (reg:SI 0 ax [2534]))) "ETAFLD2.f":623 149 {*extendsidi2_rex64}
     (nil))
(insn 3553 3552 3554 232 (parallel [
            (set (reg:DI 1 dx [orig:1076 _990 ] [1076])
                (mult:DI (reg:DI 0 ax [orig:1075 _989 ] [1075])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":623 349 {*muldi3_1}
     (nil))
(insn 3554 3553 3555 232 (set (reg:SI 0 ax [2535])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "ETAFLD2.f":623 86 {*movsi_internal}
     (nil))
(insn 3555 3554 3556 232 (set (reg:DI 0 ax [orig:1077 _991 ] [1077])
        (sign_extend:DI (reg:SI 0 ax [2535]))) "ETAFLD2.f":623 149 {*extendsidi2_rex64}
     (nil))
(insn 3556 3555 3557 232 (parallel [
            (set (reg:DI 0 ax [orig:1078 _992 ] [1078])
                (plus:DI (reg:DI 0 ax [orig:1077 _991 ] [1077])
                    (reg:DI 1 dx [orig:1076 _990 ] [1076])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":623 222 {*adddi_1}
     (nil))
(insn 3557 3556 3558 232 (parallel [
            (set (reg:DI 1 dx [orig:1079 _993 ] [1079])
                (plus:DI (reg:DI 0 ax [orig:1078 _992 ] [1078])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":623 222 {*adddi_1}
     (nil))
(insn 3558 3557 3559 232 (set (reg/f:DI 0 ax [2536])
        (symbol_ref:DI ("cldwtr_") [flags 0x202]  <var_decl 0x7f9828232a20 cldwtr>)) "ETAFLD2.f":623 85 {*movdi_internal}
     (nil))
(insn 3559 3558 3560 232 (parallel [
            (set (reg:DI 1 dx [2537])
                (plus:DI (reg:DI 1 dx [orig:1079 _993 ] [1079])
                    (const_int 1125978 [0x112e5a])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":623 222 {*adddi_1}
     (nil))
(insn 3560 3559 3561 232 (set (reg:SF 24 xmm3 [orig:1080 _994 ] [1080])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [2537])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [2536])) [2 cldwtr.u00 S4 A32])) "ETAFLD2.f":623 131 {*movsf_internal}
     (nil))
(insn 3561 3560 3562 232 (set (reg:SF 21 xmm0 [2538])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC19") [flags 0x2]) [0  S4 A32])) "ETAFLD2.f":623 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 9.49999988079071044921875e-1 [0x0.f33333p+0])
        (nil)))
(insn 3562 3561 3564 232 (set (reg:SF 21 xmm0 [orig:1081 _995 ] [1081])
        (minus:SF (reg:SF 21 xmm0 [2538])
            (reg:SF 24 xmm3 [orig:1080 _994 ] [1080]))) "ETAFLD2.f":623 841 {*fop_sf_1}
     (nil))
(insn 3564 3562 3565 232 (set (reg:SF 21 xmm0 [orig:1083 _997 ] [1083])
        (mult:SF (reg:SF 21 xmm0 [orig:1082 _996 ] [1082])
            (reg:SF 23 xmm2 [orig:1074 _988 ] [1074]))) "ETAFLD2.f":623 838 {*fop_sf_comm}
     (nil))
(insn 3565 3564 3566 232 (set (reg:SF 21 xmm0 [orig:1084 _998 ] [1084])
        (mult:SF (reg:SF 21 xmm0 [orig:1083 _997 ] [1083])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -60 [0xffffffffffffffc4])) [2 utim+0 S4 A32]))) "ETAFLD2.f":623 838 {*fop_sf_comm}
     (nil))
(insn 3566 3565 3567 232 (set (reg:SF 21 xmm0 [2539])
        (plus:SF (reg:SF 21 xmm0 [orig:1084 _998 ] [1084])
            (reg:SF 22 xmm1 [orig:1069 _983 ] [1069]))) "ETAFLD2.f":623 838 {*fop_sf_comm}
     (nil))
(insn 3567 3566 3568 232 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -188 [0xffffffffffffff44])) [2 u00kl+0 S4 A32])
        (reg:SF 21 xmm0 [2539])) "ETAFLD2.f":623 131 {*movsf_internal}
     (nil))
(insn 3568 3567 3569 232 (set (reg:SI 0 ax [orig:1085 l.134_999 ] [1085])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":625 86 {*movsi_internal}
     (nil))
(insn 3569 3568 3570 232 (set (reg:DI 0 ax [orig:1086 _1000 ] [1086])
        (sign_extend:DI (reg:SI 0 ax [orig:1085 l.134_999 ] [1085]))) "ETAFLD2.f":625 149 {*extendsidi2_rex64}
     (nil))
(insn 3570 3569 3571 232 (parallel [
            (set (reg:DI 1 dx [orig:1087 _1001 ] [1087])
                (mult:DI (reg:DI 0 ax [orig:1086 _1000 ] [1086])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":625 349 {*muldi3_1}
     (nil))
(insn 3571 3570 3572 232 (set (reg:SI 0 ax [2540])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])) "ETAFLD2.f":625 86 {*movsi_internal}
     (nil))
(insn 3572 3571 3573 232 (set (reg:DI 0 ax [orig:1088 _1002 ] [1088])
        (sign_extend:DI (reg:SI 0 ax [2540]))) "ETAFLD2.f":625 149 {*extendsidi2_rex64}
     (nil))
(insn 3573 3572 3574 232 (parallel [
            (set (reg:DI 0 ax [orig:1089 _1003 ] [1089])
                (mult:DI (reg:DI 0 ax [orig:1088 _1002 ] [1088])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":625 349 {*muldi3_1}
     (nil))
(insn 3574 3573 3575 232 (parallel [
            (set (reg:DI 1 dx [orig:1090 _1004 ] [1090])
                (plus:DI (reg:DI 1 dx [orig:1087 _1001 ] [1087])
                    (reg:DI 0 ax [orig:1089 _1003 ] [1089])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":625 222 {*adddi_1}
     (nil))
(insn 3575 3574 3576 232 (set (reg:SI 0 ax [2541])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "ETAFLD2.f":625 86 {*movsi_internal}
     (nil))
(insn 3576 3575 3577 232 (set (reg:DI 0 ax [orig:1091 _1005 ] [1091])
        (sign_extend:DI (reg:SI 0 ax [2541]))) "ETAFLD2.f":625 149 {*extendsidi2_rex64}
     (nil))
(insn 3577 3576 3578 232 (parallel [
            (set (reg:DI 0 ax [orig:1092 _1006 ] [1092])
                (plus:DI (reg:DI 0 ax [orig:1091 _1005 ] [1091])
                    (reg:DI 1 dx [orig:1090 _1004 ] [1090])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":625 222 {*adddi_1}
     (nil))
(insn 3578 3577 3579 232 (parallel [
            (set (reg:DI 1 dx [orig:1093 _1007 ] [1093])
                (plus:DI (reg:DI 0 ax [orig:1092 _1006 ] [1092])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":625 222 {*adddi_1}
     (nil))
(insn 3579 3578 3580 232 (set (reg/f:DI 0 ax [2542])
        (symbol_ref:DI ("iw.4421") [flags 0x202]  <var_decl 0x7f9827e68bd0 iw>)) "ETAFLD2.f":625 85 {*movdi_internal}
     (nil))
(insn 3580 3579 3581 232 (set (reg:SF 21 xmm0 [2543])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:1093 _1007 ] [1093])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [2542])) [2 iw S4 A32])) "ETAFLD2.f":625 131 {*movsf_internal}
     (nil))
(insn 3581 3580 3582 232 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -204 [0xffffffffffffff34])) [2 fiw+0 S4 A32])
        (reg:SF 21 xmm0 [2543])) "ETAFLD2.f":625 131 {*movsf_internal}
     (nil))
(insn 3582 3581 3583 232 (set (reg:SF 21 xmm0 [2544])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0  S4 A32])) "ETAFLD2.f":626 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 3583 3582 3584 232 (set (reg:SF 21 xmm0 [orig:1094 _1008 ] [1094])
        (minus:SF (reg:SF 21 xmm0 [2544])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -204 [0xffffffffffffff34])) [2 fiw+0 S4 A32]))) "ETAFLD2.f":626 841 {*fop_sf_1}
     (nil))
(insn 3584 3583 3585 232 (set (reg:SF 22 xmm1 [orig:1095 _1009 ] [1095])
        (reg:SF 21 xmm0 [orig:1094 _1008 ] [1094])) "ETAFLD2.f":626 131 {*movsf_internal}
     (nil))
(insn 3585 3584 3586 232 (set (reg:SI 0 ax [2545])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])) "ETAFLD2.f":626 86 {*movsi_internal}
     (nil))
(insn 3586 3585 3587 232 (set (reg:DI 0 ax [orig:1096 _1010 ] [1096])
        (sign_extend:DI (reg:SI 0 ax [2545]))) "ETAFLD2.f":626 149 {*extendsidi2_rex64}
     (nil))
(insn 3587 3586 3588 232 (parallel [
            (set (reg:DI 1 dx [orig:1097 _1011 ] [1097])
                (mult:DI (reg:DI 0 ax [orig:1096 _1010 ] [1096])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":626 349 {*muldi3_1}
     (nil))
(insn 3588 3587 3589 232 (set (reg:SI 0 ax [2546])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "ETAFLD2.f":626 86 {*movsi_internal}
     (nil))
(insn 3589 3588 3590 232 (set (reg:DI 0 ax [orig:1098 _1012 ] [1098])
        (sign_extend:DI (reg:SI 0 ax [2546]))) "ETAFLD2.f":626 149 {*extendsidi2_rex64}
     (nil))
(insn 3590 3589 3591 232 (parallel [
            (set (reg:DI 0 ax [orig:1099 _1013 ] [1099])
                (plus:DI (reg:DI 0 ax [orig:1098 _1012 ] [1098])
                    (reg:DI 1 dx [orig:1097 _1011 ] [1097])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":626 222 {*adddi_1}
     (nil))
(insn 3591 3590 3592 232 (parallel [
            (set (reg:DI 1 dx [orig:1100 _1014 ] [1100])
                (plus:DI (reg:DI 0 ax [orig:1099 _1013 ] [1099])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":626 222 {*adddi_1}
     (nil))
(insn 3592 3591 3593 232 (set (reg/f:DI 0 ax [2547])
        (symbol_ref:DI ("qint.4448") [flags 0x202]  <var_decl 0x7f9827e6b7e0 qint>)) "ETAFLD2.f":626 85 {*movdi_internal}
     (nil))
(insn 3593 3592 3594 232 (set (reg:SF 21 xmm0 [orig:1101 _1015 ] [1101])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:1100 _1014 ] [1100])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [2547])) [2 qint S4 A32])) "ETAFLD2.f":626 131 {*movsf_internal}
     (nil))
(insn 3594 3593 3595 232 (set (reg:SF 22 xmm1 [orig:1102 _1016 ] [1102])
        (mult:SF (reg:SF 22 xmm1 [orig:1095 _1009 ] [1095])
            (reg:SF 21 xmm0 [orig:1101 _1015 ] [1101]))) "ETAFLD2.f":626 838 {*fop_sf_comm}
     (nil))
(insn 3595 3594 3596 232 (set (reg:SI 0 ax [2548])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])) "ETAFLD2.f":626 86 {*movsi_internal}
     (nil))
(insn 3596 3595 3597 232 (set (reg:DI 0 ax [orig:1103 _1017 ] [1103])
        (sign_extend:DI (reg:SI 0 ax [2548]))) "ETAFLD2.f":626 149 {*extendsidi2_rex64}
     (nil))
(insn 3597 3596 3598 232 (parallel [
            (set (reg:DI 1 dx [orig:1104 _1018 ] [1104])
                (mult:DI (reg:DI 0 ax [orig:1103 _1017 ] [1103])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":626 349 {*muldi3_1}
     (nil))
(insn 3598 3597 3599 232 (set (reg:SI 0 ax [2549])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "ETAFLD2.f":626 86 {*movsi_internal}
     (nil))
(insn 3599 3598 3600 232 (set (reg:DI 0 ax [orig:1105 _1019 ] [1105])
        (sign_extend:DI (reg:SI 0 ax [2549]))) "ETAFLD2.f":626 149 {*extendsidi2_rex64}
     (nil))
(insn 3600 3599 3601 232 (parallel [
            (set (reg:DI 0 ax [orig:1106 _1020 ] [1106])
                (plus:DI (reg:DI 0 ax [orig:1105 _1019 ] [1105])
                    (reg:DI 1 dx [orig:1104 _1018 ] [1104])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":626 222 {*adddi_1}
     (nil))
(insn 3601 3600 3602 232 (parallel [
            (set (reg:DI 1 dx [orig:1107 _1021 ] [1107])
                (plus:DI (reg:DI 0 ax [orig:1106 _1020 ] [1106])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":626 222 {*adddi_1}
     (nil))
(insn 3602 3601 3603 232 (set (reg/f:DI 0 ax [2550])
        (symbol_ref:DI ("qi.4444") [flags 0x202]  <var_decl 0x7f9827e6b6c0 qi>)) "ETAFLD2.f":626 85 {*movdi_internal}
     (nil))
(insn 3603 3602 3604 232 (set (reg:SF 21 xmm0 [orig:1108 _1022 ] [1108])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:1107 _1021 ] [1107])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [2550])) [2 qi S4 A32])) "ETAFLD2.f":626 131 {*movsf_internal}
     (nil))
(insn 3604 3603 3605 232 (set (reg:SF 21 xmm0 [orig:1109 _1023 ] [1109])
        (mult:SF (reg:SF 21 xmm0 [orig:1108 _1022 ] [1108])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -204 [0xffffffffffffff34])) [2 fiw+0 S4 A32]))) "ETAFLD2.f":626 838 {*fop_sf_comm}
     (nil))
(insn 3605 3604 3606 232 (set (reg:SF 21 xmm0 [2551])
        (plus:SF (reg:SF 21 xmm0 [orig:1109 _1023 ] [1109])
            (reg:SF 22 xmm1 [orig:1102 _1016 ] [1102]))) "ETAFLD2.f":626 838 {*fop_sf_comm}
     (nil))
(insn 3606 3605 3607 232 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -208 [0xffffffffffffff30])) [2 qc+0 S4 A32])
        (reg:SF 21 xmm0 [2551])) "ETAFLD2.f":626 131 {*movsf_internal}
     (nil))
(insn 3607 3606 3608 232 (set (reg:SF 21 xmm0 [2552])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) "ETAFLD2.f":628 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 3608 3607 3609 232 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [2552])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -208 [0xffffffffffffff30])) [2 qc+0 S4 A32]))) "ETAFLD2.f":628 53 {*cmpisf}
     (nil))
(jump_insn 3609 3608 3613 232 (set (pc)
        (if_then_else (unlt (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 5639)
            (pc))) "ETAFLD2.f":628 682 {*jcc}
     (nil)
 -> 5639)
;;  succ:       233 (FALLTHRU)
;;              234
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1703

;; basic block 233, loop depth 0, maybe hot
;;  prev block 232, next block 234, flags: (RTL, MODIFIED)
;;  pred:       232 (FALLTHRU)
;; bb 233 artificial_defs: { }
;; bb 233 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1703
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 2553
(note 3613 3609 3614 233 [bb 233] NOTE_INSN_BASIC_BLOCK)
(insn 3614 3613 3615 233 (set (reg:SF 21 xmm0 [2553])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) "ETAFLD2.f":629 131 {*movsf_internal}
     (nil))
(insn 3615 3614 5640 233 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 rqkl+0 S4 A32])
        (reg:SF 21 xmm0 [2553])) "ETAFLD2.f":629 131 {*movsf_internal}
     (nil))
(jump_insn 5640 3615 5641 233 (set (pc)
        (label_ref 3623)) 683 {jump}
     (nil)
 -> 3623)
;;  succ:       235 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1703

(barrier 5641 5640 5639)
;; basic block 234, loop depth 0, maybe hot
;;  prev block 233, next block 235, flags: (RTL, MODIFIED)
;;  pred:       232
;; bb 234 artificial_defs: { }
;; bb 234 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1703
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 2554 2555
(code_label 5639 5641 3619 234 219 (nil) [1 uses])
(note 3619 5639 3620 234 [bb 234] NOTE_INSN_BASIC_BLOCK)
(insn 3620 3619 3621 234 (set (reg:SF 21 xmm0 [2555])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -164 [0xffffffffffffff5c])) [2 qkl+0 S4 A32])) "ETAFLD2.f":631 131 {*movsf_internal}
     (nil))
(insn 3621 3620 3622 234 (set (reg:SF 21 xmm0 [2554])
        (div:SF (reg:SF 21 xmm0 [2555])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -208 [0xffffffffffffff30])) [2 qc+0 S4 A32]))) "ETAFLD2.f":631 841 {*fop_sf_1}
     (nil))
(insn 3622 3621 3623 234 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 rqkl+0 S4 A32])
        (reg:SF 21 xmm0 [2554])) "ETAFLD2.f":631 131 {*movsf_internal}
     (nil))
;;  succ:       235 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1703

;; basic block 235, loop depth 0, maybe hot
;;  prev block 234, next block 236, flags: (RTL, MODIFIED)
;;  pred:       234 (FALLTHRU)
;;              233 [always] 
;; bb 235 artificial_defs: { }
;; bb 235 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1703
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 2556
(code_label 3623 3622 3624 235 123 (nil) [1 uses])
(note 3624 3623 3625 235 [bb 235] NOTE_INSN_BASIC_BLOCK)
(insn 3625 3624 3626 235 (set (reg:SF 21 xmm0 [2556])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 rqkl+0 S4 A32])) "ETAFLD2.f":634 131 {*movsf_internal}
     (nil))
(insn 3626 3625 3627 235 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [2556])
            (mem/u/c:SF (symbol_ref/u:DI ("*.LC50") [flags 0x2]) [0  S4 A32]))) "ETAFLD2.f":634 53 {*cmpisf}
     (nil))
(jump_insn 3627 3626 3631 235 (set (pc)
        (if_then_else (unlt (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 5642)
            (pc))) "ETAFLD2.f":634 682 {*jcc}
     (nil)
 -> 5642)
;;  succ:       236 (FALLTHRU)
;;              239
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1703

;; basic block 236, loop depth 0, maybe hot
;;  prev block 235, next block 237, flags: (RTL, MODIFIED)
;;  pred:       235 (FALLTHRU)
;; bb 236 artificial_defs: { }
;; bb 236 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1703
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1110 1111 1112 1638 2558 2559
(note 3631 3627 3632 236 [bb 236] NOTE_INSN_BASIC_BLOCK)
(insn 3632 3631 3633 236 (set (reg:SF 21 xmm0 [orig:1638 M.17_1598 ] [1638])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0  S4 A32])) "ETAFLD2.f":635 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 3633 3632 3634 236 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [orig:1638 M.17_1598 ] [1638])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -52 [0xffffffffffffffcc])) [2 rqkl+0 S4 A32]))) "ETAFLD2.f":635 53 {*cmpisf}
     (nil))
(insn 3634 3633 3635 236 (set (reg:QI 0 ax [2558])
        (gt:QI (reg:CCFP 17 flags)
            (const_int 0 [0]))) "ETAFLD2.f":635 678 {*setcc_qi}
     (nil))
(insn 3635 3634 3636 236 (set (reg:SI 1 dx [orig:1110 _1024 ] [1110])
        (zero_extend:SI (reg:QI 0 ax [2558]))) "ETAFLD2.f":635 140 {*zero_extendqisi2}
     (nil))
(insn 3636 3635 3637 236 (set (reg:CCFP 17 flags)
        (unspec:CCFP [
                (compare:CCFP (reg:SF 21 xmm0 [orig:1638 M.17_1598 ] [1638])
                    (reg:SF 21 xmm0 [orig:1638 M.17_1598 ] [1638]))
            ] UNSPEC_NOTRAP)) "ETAFLD2.f":635 54 {*cmpiusf}
     (nil))
(insn 3637 3636 3638 236 (set (reg:QI 0 ax [2559])
        (unordered:QI (reg:CCFP 17 flags)
            (const_int 0 [0]))) "ETAFLD2.f":635 678 {*setcc_qi}
     (nil))
(insn 3638 3637 3639 236 (set (reg:SI 0 ax [orig:1111 _1025 ] [1111])
        (zero_extend:SI (reg:QI 0 ax [2559]))) "ETAFLD2.f":635 140 {*zero_extendqisi2}
     (nil))
(insn 3639 3638 3640 236 (parallel [
            (set (reg:SI 0 ax [orig:1112 _1026 ] [1112])
                (ior:SI (reg:SI 0 ax [orig:1111 _1025 ] [1111])
                    (reg:SI 1 dx [orig:1110 _1024 ] [1110])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":635 450 {*iorsi_1}
     (nil))
(insn 3640 3639 3641 236 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:1112 _1026 ] [1112])
            (const_int 0 [0]))) "ETAFLD2.f":635 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 3641 3640 3642 236 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 3644)
            (pc))) "ETAFLD2.f":635 682 {*jcc}
     (nil)
 -> 3644)
;;  succ:       237 (FALLTHRU)
;;              238
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1638 1703

;; basic block 237, loop depth 0, maybe hot
;;  prev block 236, next block 238, flags: (RTL, MODIFIED)
;;  pred:       236 (FALLTHRU)
;; bb 237 artificial_defs: { }
;; bb 237 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1703
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 1638
(note 3642 3641 3643 237 [bb 237] NOTE_INSN_BASIC_BLOCK)
(insn 3643 3642 3644 237 (set (reg:SF 21 xmm0 [orig:1638 M.17_1598 ] [1638])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 rqkl+0 S4 A32])) "ETAFLD2.f":635 131 {*movsf_internal}
     (nil))
;;  succ:       238 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1638 1703

;; basic block 238, loop depth 0, maybe hot
;;  prev block 237, next block 239, flags: (RTL, MODIFIED)
;;  pred:       236
;;              237 (FALLTHRU)
;; bb 238 artificial_defs: { }
;; bb 238 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1638 1703
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1638
;; lr  def 	 17 [flags] 1113 1114 1115 1116 1117 2560 2561 2562
(code_label 3644 3643 3645 238 126 (nil) [1 uses])
(note 3645 3644 3646 238 [bb 238] NOTE_INSN_BASIC_BLOCK)
(insn 3646 3645 3647 238 (set (reg:SI 0 ax [2560])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])) "ETAFLD2.f":635 86 {*movsi_internal}
     (nil))
(insn 3647 3646 3648 238 (set (reg:DI 0 ax [orig:1113 _1027 ] [1113])
        (sign_extend:DI (reg:SI 0 ax [2560]))) "ETAFLD2.f":635 149 {*extendsidi2_rex64}
     (nil))
(insn 3648 3647 3649 238 (parallel [
            (set (reg:DI 1 dx [orig:1114 _1028 ] [1114])
                (mult:DI (reg:DI 0 ax [orig:1113 _1027 ] [1113])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":635 349 {*muldi3_1}
     (nil))
(insn 3649 3648 3650 238 (set (reg:SI 0 ax [2561])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "ETAFLD2.f":635 86 {*movsi_internal}
     (nil))
(insn 3650 3649 3651 238 (set (reg:DI 0 ax [orig:1115 _1029 ] [1115])
        (sign_extend:DI (reg:SI 0 ax [2561]))) "ETAFLD2.f":635 149 {*extendsidi2_rex64}
     (nil))
(insn 3651 3650 3652 238 (parallel [
            (set (reg:DI 0 ax [orig:1116 _1030 ] [1116])
                (plus:DI (reg:DI 0 ax [orig:1115 _1029 ] [1115])
                    (reg:DI 1 dx [orig:1114 _1028 ] [1114])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":635 222 {*adddi_1}
     (nil))
(insn 3652 3651 3653 238 (parallel [
            (set (reg:DI 1 dx [orig:1117 _1031 ] [1117])
                (plus:DI (reg:DI 0 ax [orig:1116 _1030 ] [1116])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":635 222 {*adddi_1}
     (nil))
(insn 3653 3652 3654 238 (set (reg/f:DI 0 ax [2562])
        (symbol_ref:DI ("equiv.3.4378") [flags 0x202]  <var_decl 0x7f9828263750 equiv.3>)) "ETAFLD2.f":635 85 {*movdi_internal}
     (nil))
(insn 3654 3653 5643 238 (set (mem/j:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:1117 _1031 ] [1117])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [2562])) [27 equiv.3.egrid1 S4 A32])
        (reg:SF 21 xmm0 [orig:1638 M.17_1598 ] [1638])) "ETAFLD2.f":635 131 {*movsf_internal}
     (nil))
(jump_insn 5643 3654 5644 238 (set (pc)
        (label_ref 3702)) 683 {jump}
     (nil)
 -> 3702)
;;  succ:       242 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1703

(barrier 5644 5643 5642)
;; basic block 239, loop depth 0, maybe hot
;;  prev block 238, next block 240, flags: (RTL, MODIFIED)
;;  pred:       235
;; bb 239 artificial_defs: { }
;; bb 239 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1703
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1118 1119 1120 1121 1122 1123 1124 1639 2563 2564 2565 2566 2567 2569 2570 2571
(code_label 5642 5644 3658 239 220 (nil) [1 uses])
(note 3658 5642 3659 239 [bb 239] NOTE_INSN_BASIC_BLOCK)
(insn 3659 3658 3660 239 (set (reg:SF 22 xmm1 [2563])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [2 cwmkl+0 S4 A32])) "ETAFLD2.f":637 131 {*movsf_internal}
     (nil))
(insn 3660 3659 3661 239 (set (reg:SF 21 xmm0 [2564])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC51") [flags 0x2]) [0  S4 A32])) "ETAFLD2.f":637 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+3 [0x0.fap+10])
        (nil)))
(insn 3661 3660 3662 239 (set (reg:SF 21 xmm0 [orig:1118 _1032 ] [1118])
        (mult:SF (reg:SF 21 xmm0 [2564])
            (reg:SF 22 xmm1 [2563]))) "ETAFLD2.f":637 838 {*fop_sf_comm}
     (nil))
(insn 3662 3661 3663 239 (set (reg:SF 22 xmm1 [2565])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0  S4 A32])) "ETAFLD2.f":637 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 3663 3662 3665 239 (set (reg:SF 22 xmm1 [orig:1119 _1033 ] [1119])
        (minus:SF (reg:SF 22 xmm1 [2565])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -52 [0xffffffffffffffcc])) [2 rqkl+0 S4 A32]))) "ETAFLD2.f":637 841 {*fop_sf_1}
     (nil))
(insn 3665 3663 3666 239 (set (reg:SF 21 xmm0 [orig:1121 _1035 ] [1121])
        (div:SF (reg:SF 21 xmm0 [orig:1118 _1032 ] [1118])
            (reg:SF 22 xmm1 [orig:1120 _1034 ] [1120]))) "ETAFLD2.f":637 841 {*fop_sf_1}
     (nil))
(insn 3666 3665 3667 239 (set (reg:V4SF 22 xmm1 [2567])
        (mem/u/c:V4SF (symbol_ref/u:DI ("*.LC52") [flags 0x2]) [0  S16 A128])) "ETAFLD2.f":637 1282 {movv4sf_internal}
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF -0.0 [-0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 3667 3666 3668 239 (parallel [
            (set (reg:SF 21 xmm0 [2566])
                (neg:SF (reg:SF 21 xmm0 [orig:1121 _1035 ] [1121])))
            (use (reg:V4SF 22 xmm1 [2567]))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":637 507 {*absnegsf2}
     (expr_list:REG_EQUAL (neg:SF (reg:SF 21 xmm0 [orig:1121 _1035 ] [1121]))
        (nil)))
(insn 3668 3667 3669 239 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -212 [0xffffffffffffff2c])) [2 arg+0 S4 A32])
        (reg:SF 21 xmm0 [2566])) "ETAFLD2.f":637 131 {*movsf_internal}
     (nil))
(insn 3669 3668 3670 239 (set (reg:SF 21 xmm0 [orig:1639 M.18_1599 ] [1639])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -212 [0xffffffffffffff2c])) [2 arg+0 S4 A32])) "ETAFLD2.f":638 131 {*movsf_internal}
     (nil))
(insn 3670 3669 3671 239 (set (reg:SF 22 xmm1 [2570])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC53") [flags 0x2]) [0  S4 A32])) "ETAFLD2.f":638 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF -1.2e+1 [-0x0.cp+4])
        (nil)))
(insn 3671 3670 3672 239 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 22 xmm1 [2570])
            (reg:SF 21 xmm0 [orig:1639 M.18_1599 ] [1639]))) "ETAFLD2.f":638 53 {*cmpisf}
     (nil))
(insn 3672 3671 3673 239 (set (reg:QI 0 ax [2569])
        (gt:QI (reg:CCFP 17 flags)
            (const_int 0 [0]))) "ETAFLD2.f":638 678 {*setcc_qi}
     (nil))
(insn 3673 3672 3674 239 (set (reg:SI 1 dx [orig:1122 _1036 ] [1122])
        (zero_extend:SI (reg:QI 0 ax [2569]))) "ETAFLD2.f":638 140 {*zero_extendqisi2}
     (nil))
(insn 3674 3673 3675 239 (set (reg:CCFP 17 flags)
        (unspec:CCFP [
                (compare:CCFP (reg:SF 21 xmm0 [orig:1639 M.18_1599 ] [1639])
                    (reg:SF 21 xmm0 [orig:1639 M.18_1599 ] [1639]))
            ] UNSPEC_NOTRAP)) "ETAFLD2.f":638 54 {*cmpiusf}
     (nil))
(insn 3675 3674 3676 239 (set (reg:QI 0 ax [2571])
        (unordered:QI (reg:CCFP 17 flags)
            (const_int 0 [0]))) "ETAFLD2.f":638 678 {*setcc_qi}
     (nil))
(insn 3676 3675 3677 239 (set (reg:SI 0 ax [orig:1123 _1037 ] [1123])
        (zero_extend:SI (reg:QI 0 ax [2571]))) "ETAFLD2.f":638 140 {*zero_extendqisi2}
     (nil))
(insn 3677 3676 3678 239 (parallel [
            (set (reg:SI 0 ax [orig:1124 _1038 ] [1124])
                (ior:SI (reg:SI 0 ax [orig:1123 _1037 ] [1123])
                    (reg:SI 1 dx [orig:1122 _1036 ] [1122])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":638 450 {*iorsi_1}
     (nil))
(insn 3678 3677 3679 239 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:1124 _1038 ] [1124])
            (const_int 0 [0]))) "ETAFLD2.f":638 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 3679 3678 3680 239 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 3682)
            (pc))) "ETAFLD2.f":638 682 {*jcc}
     (nil)
 -> 3682)
;;  succ:       240 (FALLTHRU)
;;              241
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1639 1703

;; basic block 240, loop depth 0, maybe hot
;;  prev block 239, next block 241, flags: (RTL, MODIFIED)
;;  pred:       239 (FALLTHRU)
;; bb 240 artificial_defs: { }
;; bb 240 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1703
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 1639
(note 3680 3679 3681 240 [bb 240] NOTE_INSN_BASIC_BLOCK)
(insn 3681 3680 3682 240 (set (reg:SF 21 xmm0 [orig:1639 M.18_1599 ] [1639])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC53") [flags 0x2]) [0  S4 A32])) "ETAFLD2.f":638 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF -1.2e+1 [-0x0.cp+4])
        (nil)))
;;  succ:       241 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1639 1703

;; basic block 241, loop depth 0, maybe hot
;;  prev block 240, next block 242, flags: (RTL, MODIFIED)
;;  pred:       239
;;              240 (FALLTHRU)
;; bb 241 artificial_defs: { }
;; bb 241 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1639 1703
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1639
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 1125 1126 1127 1128 1129 1130 1131 1132 1133 2572 2573 2574 2575 2576
(code_label 3682 3681 3683 241 128 (nil) [1 uses])
(note 3683 3682 3684 241 [bb 241] NOTE_INSN_BASIC_BLOCK)
(insn 3684 3683 3685 241 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -212 [0xffffffffffffff2c])) [2 arg+0 S4 A32])
        (reg:SF 21 xmm0 [orig:1639 M.18_1599 ] [1639])) "ETAFLD2.f":638 131 {*movsf_internal}
     (nil))
(insn 3685 3684 3687 241 (set (reg:SF 21 xmm0 [2572])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -212 [0xffffffffffffff2c])) [2 arg+0 S4 A32])) "ETAFLD2.f":639 131 {*movsf_internal}
     (nil))
(call_insn/u 3687 3685 3688 241 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("expf") [flags 0x41]  <function_decl 0x7f98280a0300 __builtin_expf>) [0 __builtin_expf S1 A8])
            (const_int 0 [0]))) "ETAFLD2.f":639 700 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (nil)))
(insn 3688 3687 3689 241 (set (reg:SF 22 xmm1 [orig:1125 _1039 ] [1125])
        (reg:SF 21 xmm0)) "ETAFLD2.f":639 131 {*movsf_internal}
     (nil))
(insn 3689 3688 3690 241 (set (reg:SF 21 xmm0 [2573])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0  S4 A32])) "ETAFLD2.f":639 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 3690 3689 3692 241 (set (reg:SF 21 xmm0 [orig:1126 _1040 ] [1126])
        (minus:SF (reg:SF 21 xmm0 [2573])
            (reg:SF 22 xmm1 [orig:1125 _1039 ] [1125]))) "ETAFLD2.f":639 841 {*fop_sf_1}
     (nil))
(insn 3692 3690 3693 241 (set (reg:SI 0 ax [2574])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])) "ETAFLD2.f":639 86 {*movsi_internal}
     (nil))
(insn 3693 3692 3694 241 (set (reg:DI 0 ax [orig:1128 _1042 ] [1128])
        (sign_extend:DI (reg:SI 0 ax [2574]))) "ETAFLD2.f":639 149 {*extendsidi2_rex64}
     (nil))
(insn 3694 3693 3695 241 (parallel [
            (set (reg:DI 1 dx [orig:1129 _1043 ] [1129])
                (mult:DI (reg:DI 0 ax [orig:1128 _1042 ] [1128])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":639 349 {*muldi3_1}
     (nil))
(insn 3695 3694 3696 241 (set (reg:SI 0 ax [2575])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "ETAFLD2.f":639 86 {*movsi_internal}
     (nil))
(insn 3696 3695 3697 241 (set (reg:DI 0 ax [orig:1130 _1044 ] [1130])
        (sign_extend:DI (reg:SI 0 ax [2575]))) "ETAFLD2.f":639 149 {*extendsidi2_rex64}
     (nil))
(insn 3697 3696 3698 241 (parallel [
            (set (reg:DI 0 ax [orig:1131 _1045 ] [1131])
                (plus:DI (reg:DI 0 ax [orig:1130 _1044 ] [1130])
                    (reg:DI 1 dx [orig:1129 _1043 ] [1129])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":639 222 {*adddi_1}
     (nil))
(insn 3698 3697 3699 241 (parallel [
            (set (reg:DI 1 dx [orig:1132 _1046 ] [1132])
                (plus:DI (reg:DI 0 ax [orig:1131 _1045 ] [1131])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":639 222 {*adddi_1}
     (nil))
(insn 3699 3698 3700 241 (set (reg:SF 21 xmm0 [orig:1133 _1047 ] [1133])
        (mult:SF (reg:SF 21 xmm0 [orig:1127 _1041 ] [1127])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -52 [0xffffffffffffffcc])) [2 rqkl+0 S4 A32]))) "ETAFLD2.f":639 838 {*fop_sf_comm}
     (nil))
(insn 3700 3699 3701 241 (set (reg/f:DI 0 ax [2576])
        (symbol_ref:DI ("equiv.3.4378") [flags 0x202]  <var_decl 0x7f9828263750 equiv.3>)) "ETAFLD2.f":639 85 {*movdi_internal}
     (nil))
(insn 3701 3700 3702 241 (set (mem/j:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:1132 _1046 ] [1132])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [2576])) [27 equiv.3.egrid1 S4 A32])
        (reg:SF 21 xmm0 [orig:1133 _1047 ] [1133])) "ETAFLD2.f":639 131 {*movsf_internal}
     (nil))
;;  succ:       242 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1703

;; basic block 242, loop depth 0, maybe hot
;;  prev block 241, next block 388, flags: (RTL, MODIFIED)
;;  pred:       241 (FALLTHRU)
;;              238 [always] 
;; bb 242 artificial_defs: { }
;; bb 242 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1703
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 3702 3701 3703 242 127 (nil) [1 uses])
(note 3703 3702 3704 242 [bb 242] NOTE_INSN_BASIC_BLOCK)
(insn 3704 3703 5645 242 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":609 221 {*addsi_1}
     (nil))
(jump_insn 5645 3704 5646 242 (set (pc)
        (label_ref 3705)) "ETAFLD2.f":609 683 {jump}
     (nil)
 -> 3705)
;;  succ:       225 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1703

(barrier 5646 5645 5771)
;; basic block 388, loop depth 0, maybe hot
;;  prev block 242, next block 243, flags: (RTL, MODIFIED)
;;  pred:       225
;; bb 388 artificial_defs: { }
;; bb 388 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1703
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 5771 5646 5770 388 248 (nil) [1 uses])
(note 5770 5771 5772 388 [bb 388] NOTE_INSN_BASIC_BLOCK)
(insn 5772 5770 3708 388 (const_int 0 [0]) "ETAFLD2.f":634 718 {nop}
     (nil))
;;  succ:       243 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1703

;; basic block 243, loop depth 0, maybe hot
;;  prev block 388, next block 387, flags: (RTL, MODIFIED)
;;  pred:       388 [always]  (FALLTHRU)
;; bb 243 artificial_defs: { }
;; bb 243 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1703
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 3708 5772 3709 243 116 (nil) [0 uses])
(note 3709 3708 3710 243 [bb 243] NOTE_INSN_BASIC_BLOCK)
(insn 3710 3709 5647 243 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":608 221 {*addsi_1}
     (nil))
(jump_insn 5647 3710 5648 243 (set (pc)
        (label_ref 3711)) "ETAFLD2.f":608 683 {jump}
     (nil)
 -> 3711)
;;  succ:       223 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1703

(barrier 5648 5647 5768)
;; basic block 387, loop depth 0, maybe hot
;;  prev block 243, next block 244, flags: (RTL, MODIFIED)
;;  pred:       223
;; bb 387 artificial_defs: { }
;; bb 387 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 5768 5648 5767 387 247 (nil) [1 uses])
(note 5767 5768 5769 387 [bb 387] NOTE_INSN_BASIC_BLOCK)
(insn 5769 5767 3714 387 (const_int 0 [0]) "ETAFLD2.f":609 718 {nop}
     (nil))
;;  succ:       244 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 244, loop depth 0, maybe hot
;;  prev block 387, next block 245, flags: (RTL, MODIFIED)
;;  pred:       387 [always]  (FALLTHRU)
;;              221 [always] 
;; bb 244 artificial_defs: { }
;; bb 244 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 1134 1135 2577 2578 2579 2580 2581
(code_label 3714 5769 3715 244 115 (nil) [1 uses])
(note 3715 3714 3716 244 [bb 244] NOTE_INSN_BASIC_BLOCK)
(insn 3716 3715 3717 244 (set (reg:DI 1 dx [2577])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [4 grid2+0 S8 A64])) "ETAFLD2.f":646 85 {*movdi_internal}
     (nil))
(insn 3717 3716 3718 244 (set (reg:DI 0 ax [2578])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "ETAFLD2.f":646 85 {*movdi_internal}
     (nil))
(insn 3718 3717 3719 244 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [11  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -832 [0xfffffffffffffcc0])) [11 jmout+0 S8 A64])) "ETAFLD2.f":646 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 3719 3718 3720 244 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [11  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -824 [0xfffffffffffffcc8])) [11 imout+0 S8 A64])) "ETAFLD2.f":646 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 3720 3719 3721 244 (set (reg:DI 38 r9)
        (reg:DI 1 dx [2577])) "ETAFLD2.f":646 85 {*movdi_internal}
     (nil))
(insn 3721 3720 3722 244 (set (reg:DI 37 r8)
        (reg:DI 0 ax [2578])) "ETAFLD2.f":646 85 {*movdi_internal}
     (nil))
(insn 3722 3721 3723 244 (set (reg:DI 2 cx)
        (symbol_ref:DI ("equiv.2.4368") [flags 0x202]  <var_decl 0x7f9828263510 equiv.2>)) "ETAFLD2.f":646 85 {*movdi_internal}
     (nil))
(insn 3723 3722 3724 244 (set (reg:DI 1 dx)
        (symbol_ref:DI ("equiv.3.4378") [flags 0x202]  <var_decl 0x7f9828263750 equiv.3>)) "ETAFLD2.f":646 85 {*movdi_internal}
     (nil))
(insn 3724 3723 3725 244 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f9827f94240 *.LC3>)) "ETAFLD2.f":646 85 {*movdi_internal}
     (nil))
(insn 3725 3724 3726 244 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC54") [flags 0x2]  <var_decl 0x7f98280351b0 *.LC54>)) "ETAFLD2.f":646 85 {*movdi_internal}
     (nil))
(insn 3726 3725 3727 244 (set (reg:QI 0 ax)
        (const_int 0 [0])) "ETAFLD2.f":646 88 {*movqi_internal}
     (nil))
(call_insn 3727 3726 3728 244 (call (mem:QI (symbol_ref:DI ("e2out_") [flags 0x41]  <function_decl 0x7f9828228600 e2out>) [0 e2out S1 A8])
        (const_int 16 [0x10])) "ETAFLD2.f":646 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
(insn 3728 3727 3729 244 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":646 222 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 3729 3728 3730 244 (set (reg/f:DI 1 dx [2579])
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                (const_int 55216 [0xd7b0])))) "ETAFLD2.f":647 85 {*movdi_internal}
     (nil))
(insn 3730 3729 3731 244 (set (reg:DI 0 ax [2580])
        (const_int 0 [0])) "ETAFLD2.f":647 85 {*movdi_internal}
     (nil))
(insn 3731 3730 5888 244 (set (reg:DI 2 cx [2581])
        (const_int 12 [0xc])) "ETAFLD2.f":647 85 {*movdi_internal}
     (nil))
(insn 5888 3731 3732 244 (set (reg/f:DI 5 di [2579])
        (reg/f:DI 1 dx [2579])) "ETAFLD2.f":647 85 {*movdi_internal}
     (nil))
(insn 3732 5888 5889 244 (parallel [
            (set (reg:DI 2 cx [2581])
                (const_int 0 [0]))
            (set (reg/f:DI 5 di [2579])
                (plus:DI (ashift:DI (reg:DI 2 cx [2581])
                        (const_int 3 [0x3]))
                    (reg/f:DI 5 di [2579])))
            (set (mem/c:BLK (reg/f:DI 5 di [2579]) [1 rqstfld.id+0 S96 A128])
                (const_int 0 [0]))
            (use (reg:DI 0 ax [2580]))
            (use (reg:DI 2 cx [2581]))
        ]) "ETAFLD2.f":647 984 {*rep_stosdi_rex64}
     (nil))
(insn 5889 3732 3733 244 (set (reg/f:DI 1 dx [2579])
        (reg/f:DI 5 di [2579])) "ETAFLD2.f":647 85 {*movdi_internal}
     (nil))
(insn 3733 5889 3734 244 (set (mem/c:SI (reg/f:DI 1 dx [2579]) [1 rqstfld.id+96 S4 A128])
        (reg:SI 0 ax [2580])) "ETAFLD2.f":647 86 {*movsi_internal}
     (nil))
(insn 3734 3733 3735 244 (parallel [
            (set (reg/f:DI 1 dx [2579])
                (plus:DI (reg/f:DI 1 dx [2579])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":647 222 {*adddi_1}
     (nil))
(insn 3735 3734 3736 244 (set (reg:SI 0 ax [orig:1134 l.135_1048 ] [1134])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":648 86 {*movsi_internal}
     (nil))
(insn 3736 3735 3737 244 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -276 [0xfffffffffffffeec])) [1 lyr+0 S4 A32])
        (reg:SI 0 ax [orig:1134 l.135_1048 ] [1134])) "ETAFLD2.f":648 86 {*movsi_internal}
     (nil))
(insn 3737 3736 3738 244 (set (reg:SI 0 ax [orig:1135 itype.136_1049 ] [1135])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -268 [0xfffffffffffffef4])) [1 itype+0 S4 A32])) "ETAFLD2.f":649 86 {*movsi_internal}
     (nil))
(insn 3738 3737 3739 244 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [orig:1135 itype.136_1049 ] [1135])
            (const_int 1 [0x1]))) "ETAFLD2.f":649 11 {*cmpsi_1}
     (nil))
(jump_insn 3739 3738 3740 244 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 3742)
            (pc))) "ETAFLD2.f":649 682 {*jcc}
     (nil)
 -> 3742)
;;  succ:       245 (FALLTHRU)
;;              246
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 245, loop depth 0, maybe hot
;;  prev block 244, next block 246, flags: (RTL, MODIFIED)
;;  pred:       244 (FALLTHRU)
;; bb 245 artificial_defs: { }
;; bb 245 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 3740 3739 3741 245 [bb 245] NOTE_INSN_BASIC_BLOCK)
(insn 3741 3740 3742 245 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 55248 [0xd7d0]))) [1 rqstfld.id+32 S4 A128])
        (const_int 109 [0x6d])) "ETAFLD2.f":649 86 {*movsi_internal}
     (nil))
;;  succ:       246 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 246, loop depth 0, maybe hot
;;  prev block 245, next block 247, flags: (RTL, MODIFIED)
;;  pred:       244
;;              245 (FALLTHRU)
;; bb 246 artificial_defs: { }
;; bb 246 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 2582 2583 2584 2585 2586 2587 2588
(code_label 3742 3741 3743 246 131 (nil) [1 uses])
(note 3743 3742 3744 246 [bb 246] NOTE_INSN_BASIC_BLOCK)
(insn 3744 3743 3745 246 (set (reg:DI 2 cx [2582])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -832 [0xfffffffffffffcc0])) [11 jmout+0 S8 A64])) "ETAFLD2.f":650 85 {*movdi_internal}
     (nil))
(insn 3745 3744 3746 246 (set (reg:DI 1 dx [2583])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -824 [0xfffffffffffffcc8])) [11 imout+0 S8 A64])) "ETAFLD2.f":650 85 {*movdi_internal}
     (nil))
(insn 3746 3745 3749 246 (set (reg:DI 0 ax [2584])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "ETAFLD2.f":650 85 {*movdi_internal}
     (nil))
(insn 3749 3746 3750 246 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC29") [flags 0x2]  <var_decl 0x7f9827f94a20 *.LC29>)) "ETAFLD2.f":650 85 {*movdi_internal}
     (nil))
(insn 3750 3749 3751 246 (set (reg:DI 5 di)
        (reg:DI 0 ax [2584])) "ETAFLD2.f":650 85 {*movdi_internal}
     (nil))
(insn 3751 3750 3752 246 (set (reg:QI 0 ax)
        (const_int 0 [0])) "ETAFLD2.f":650 88 {*movqi_internal}
     (nil))
(call_insn 3752 3751 3753 246 (call (mem:QI (symbol_ref:DI ("sclfld_") [flags 0x41]  <function_decl 0x7f9828228d00 sclfld>) [0 sclfld S1 A8])
        (const_int 0 [0])) "ETAFLD2.f":650 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (nil)))))))
(insn 3753 3752 3754 246 (set (reg:DI 4 si [2585])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -832 [0xfffffffffffffcc0])) [11 jmout+0 S8 A64])) "ETAFLD2.f":651 85 {*movdi_internal}
     (nil))
(insn 3754 3753 3755 246 (set (reg:DI 2 cx [2586])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -824 [0xfffffffffffffcc8])) [11 imout+0 S8 A64])) "ETAFLD2.f":651 85 {*movdi_internal}
     (nil))
(insn 3755 3754 3756 246 (set (reg:DI 1 dx [2587])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "ETAFLD2.f":651 85 {*movdi_internal}
     (nil))
(insn 3756 3755 3757 246 (parallel [
            (set (reg:DI 0 ax [2588])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -276 [0xfffffffffffffeec])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":651 222 {*adddi_1}
     (nil))
(insn 3757 3756 3758 246 (set (reg:DI 38 r9)
        (reg:DI 4 si [2585])) "ETAFLD2.f":651 85 {*movdi_internal}
     (nil))
(insn 3758 3757 3759 246 (set (reg:DI 37 r8)
        (reg:DI 2 cx [2586])) "ETAFLD2.f":651 85 {*movdi_internal}
     (nil))
(insn 3759 3758 3760 246 (set (reg:DI 2 cx)
        (reg:DI 1 dx [2587])) "ETAFLD2.f":651 85 {*movdi_internal}
     (nil))
(insn 3760 3759 3761 246 (set (reg:DI 1 dx)
        (reg:DI 0 ax [2588])) "ETAFLD2.f":651 85 {*movdi_internal}
     (nil))
(insn 3761 3760 3762 246 (set (reg:DI 4 si)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                (const_int 592 [0x250])))) "ETAFLD2.f":651 85 {*movdi_internal}
     (nil))
(insn 3762 3761 3763 246 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                (const_int 4 [0x4])))) "ETAFLD2.f":651 85 {*movdi_internal}
     (nil))
(insn 3763 3762 3764 246 (set (reg:QI 0 ax)
        (const_int 0 [0])) "ETAFLD2.f":651 88 {*movqi_internal}
     (nil))
(call_insn 3764 3763 3765 246 (call (mem:QI (symbol_ref:DI ("output_") [flags 0x41]  <function_decl 0x7f9828228700 output>) [0 output S1 A8])
        (const_int 0 [0])) "ETAFLD2.f":651 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
;;  succ:       247 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 247, loop depth 0, maybe hot
;;  prev block 246, next block 248, flags: (RTL, MODIFIED)
;;  pred:       212
;;              246 (FALLTHRU)
;;              213
;; bb 247 artificial_defs: { }
;; bb 247 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1136
(code_label 3765 3764 3766 247 109 (nil) [2 uses])
(note 3766 3765 3767 247 [bb 247] NOTE_INSN_BASIC_BLOCK)
(insn 3767 3766 3768 247 (set (reg:SI 0 ax [orig:1136 _1050 ] [1136])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 572 [0x23c]))) [1 rqstfld.iget+556 S4 A32])) "ETAFLD2.f":656 86 {*movsi_internal}
     (nil))
(insn 3768 3767 3769 247 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:1136 _1050 ] [1136])
            (const_int 0 [0]))) "ETAFLD2.f":656 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 3769 3768 3770 247 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 3868)
            (pc))) "ETAFLD2.f":656 682 {*jcc}
     (nil)
 -> 3868)
;;  succ:       248 (FALLTHRU)
;;              252
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 248, loop depth 0, maybe hot
;;  prev block 247, next block 249, flags: (RTL, MODIFIED)
;;  pred:       247 (FALLTHRU)
;; bb 248 artificial_defs: { }
;; bb 248 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1137 1138 1139 1140 1141 1142 1143 1144 2589 2590 2591 2592
(note 3770 3769 3771 248 [bb 248] NOTE_INSN_BASIC_BLOCK)
(insn 3771 3770 3772 248 (set (reg:SI 0 ax [orig:1137 _1051 ] [1137])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 572 [0x23c]))) [1 rqstfld.iget+556 S4 A32])) "ETAFLD2.f":657 86 {*movsi_internal}
     (nil))
(insn 3772 3771 3773 248 (set (reg:DI 1 dx [orig:1138 _1052 ] [1138])
        (sign_extend:DI (reg:SI 0 ax [orig:1137 _1051 ] [1137]))) "ETAFLD2.f":657 149 {*extendsidi2_rex64}
     (nil))
(insn 3773 3772 3774 248 (set (reg:DI 0 ax [2589])
        (reg:DI 1 dx [orig:1138 _1052 ] [1138])) "ETAFLD2.f":657 85 {*movdi_internal}
     (nil))
(insn 3774 3773 3776 248 (parallel [
            (set (reg:DI 0 ax [2590])
                (ashift:DI (reg:DI 0 ax [2589])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":657 551 {*ashldi3_1}
     (nil))
(insn 3776 3774 3777 248 (parallel [
            (set (reg:DI 0 ax [2589])
                (minus:DI (reg:DI 0 ax [2589])
                    (reg:DI 1 dx [orig:1138 _1052 ] [1138])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":657 278 {*subdi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:1138 _1052 ] [1138])
            (const_int 15 [0xf]))
        (nil)))
(insn 3777 3776 3779 248 (parallel [
            (set (reg:DI 0 ax [2591])
                (ashift:DI (reg:DI 0 ax [2589])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":657 551 {*ashldi3_1}
     (nil))
(insn 3779 3777 3780 248 (set (reg:DI 1 dx [orig:1139 _1053 ] [1139])
        (reg:DI 0 ax [2589])) "ETAFLD2.f":657 85 {*movdi_internal}
     (nil))
(insn 3780 3779 3781 248 (set (reg:SI 0 ax [orig:1140 l.137_1054 ] [1140])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":657 86 {*movsi_internal}
     (nil))
(insn 3781 3780 3782 248 (set (reg:DI 0 ax [orig:1141 _1055 ] [1141])
        (sign_extend:DI (reg:SI 0 ax [orig:1140 l.137_1054 ] [1140]))) "ETAFLD2.f":657 149 {*extendsidi2_rex64}
     (nil))
(insn 3782 3781 3783 248 (parallel [
            (set (reg:DI 0 ax [orig:1142 _1056 ] [1142])
                (plus:DI (reg:DI 0 ax [orig:1141 _1055 ] [1141])
                    (reg:DI 1 dx [orig:1139 _1053 ] [1139])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":657 222 {*adddi_1}
     (nil))
(insn 3783 3782 3784 248 (parallel [
            (set (reg:DI 0 ax [orig:1143 _1057 ] [1143])
                (plus:DI (reg:DI 0 ax [orig:1142 _1056 ] [1142])
                    (const_int -61 [0xffffffffffffffc3])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":657 222 {*adddi_1}
     (nil))
(insn 3784 3783 3785 248 (parallel [
            (set (reg:DI 0 ax [2592])
                (plus:DI (reg:DI 0 ax [orig:1143 _1057 ] [1143])
                    (const_int 1404 [0x57c])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":657 222 {*adddi_1}
     (nil))
(insn 3785 3784 3786 248 (set (reg:SI 0 ax [orig:1144 _1058 ] [1144])
        (mem:SI (plus:DI (mult:DI (reg:DI 0 ax [2592])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)) [1 rqstfld.lvls S4 A32])) "ETAFLD2.f":657 86 {*movsi_internal}
     (nil))
(insn 3786 3785 3787 248 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:1144 _1058 ] [1144])
            (const_int 0 [0]))) "ETAFLD2.f":657 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 3787 3786 3788 248 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 3868)
            (pc))) "ETAFLD2.f":657 682 {*jcc}
     (nil)
 -> 3868)
;;  succ:       249 (FALLTHRU)
;;              252
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 249, loop depth 0, maybe hot
;;  prev block 248, next block 250, flags: (RTL, MODIFIED)
;;  pred:       248 (FALLTHRU)
;; bb 249 artificial_defs: { }
;; bb 249 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 1145 1146 1147 1148 1149 1150 1151 1152 1153 1154 1155 1156 1157 1158 1159 1160 2593 2594 2595 2596 2597 2598 2599 2600 2601 2602 2603 2604
(note 3788 3787 3789 249 [bb 249] NOTE_INSN_BASIC_BLOCK)
(insn 3789 3788 3790 249 (set (reg:SI 0 ax [orig:1145 l.138_1059 ] [1145])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":658 86 {*movsi_internal}
     (nil))
(insn 3790 3789 3791 249 (parallel [
            (set (reg:SI 1 dx [orig:1146 _1060 ] [1146])
                (plus:SI (reg:SI 0 ax [orig:1145 l.138_1059 ] [1145])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":658 221 {*addsi_1}
     (nil))
(insn 3791 3790 3792 249 (set (reg:SI 0 ax [2593])
        (reg:SI 1 dx [orig:1146 _1060 ] [1146])) "ETAFLD2.f":658 86 {*movsi_internal}
     (nil))
(insn 3792 3791 3793 249 (parallel [
            (set (reg:SI 0 ax [2593])
                (ashift:SI (reg:SI 0 ax [2593])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":658 550 {*ashlsi3_1}
     (nil))
(insn 3793 3792 3794 249 (parallel [
            (set (reg:SI 0 ax [orig:1147 _1061 ] [1147])
                (plus:SI (reg:SI 0 ax [2593])
                    (reg:SI 1 dx [orig:1146 _1060 ] [1146])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":658 221 {*addsi_1}
     (expr_list:REG_EQUAL (mult:SI (reg:SI 1 dx [orig:1146 _1060 ] [1146])
            (const_int 9 [0x9]))
        (nil)))
(insn 3794 3793 3795 249 (parallel [
            (set (reg:SI 0 ax [orig:1148 _1062 ] [1148])
                (plus:SI (reg:SI 0 ax [orig:1147 _1061 ] [1147])
                    (const_int 49 [0x31])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":658 221 {*addsi_1}
     (nil))
(insn 3795 3794 3796 249 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -284 [0xfffffffffffffee4])) [1 nrec1+0 S4 A32])
        (reg:SI 0 ax [orig:1148 _1062 ] [1148])) "ETAFLD2.f":658 86 {*movsi_internal}
     (nil))
(insn 3796 3795 3797 249 (parallel [
            (set (reg:DI 1 dx [2594])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -284 [0xfffffffffffffee4])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":659 222 {*adddi_1}
     (nil))
(insn 3797 3796 3798 249 (parallel [
            (set (reg:DI 0 ax [2595])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -280 [0xfffffffffffffee8])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":659 222 {*adddi_1}
     (nil))
(insn 3798 3797 3799 249 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [31  S8 A64])
        (symbol_ref/f:DI ("*.LC55") [flags 0x2]  <var_decl 0x7f9828035240 *.LC55>)) "ETAFLD2.f":659 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 3799 3798 3800 249 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [8  S8 A64])
        (symbol_ref/f:DI ("*.LC20") [flags 0x2]  <var_decl 0x7f9827f94510 *.LC20>)) "ETAFLD2.f":659 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 3800 3799 3801 249 (set (reg:DI 38 r9)
        (reg:DI 1 dx [2594])) "ETAFLD2.f":659 85 {*movdi_internal}
     (nil))
(insn 3801 3800 3802 249 (set (reg:DI 37 r8)
        (reg:DI 0 ax [2595])) "ETAFLD2.f":659 85 {*movdi_internal}
     (nil))
(insn 3802 3801 3803 249 (set (reg:DI 2 cx)
        (const:DI (plus:DI (symbol_ref:DI ("outfil_") [flags 0x2]  <var_decl 0x7f982824fa20 outfil>)
                (const_int 4 [0x4])))) "ETAFLD2.f":659 85 {*movdi_internal}
     (nil))
(insn 3803 3802 3804 249 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC25") [flags 0x2]  <var_decl 0x7f9827f947e0 *.LC25>)) "ETAFLD2.f":659 85 {*movdi_internal}
     (nil))
(insn 3804 3803 3805 249 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC26") [flags 0x2]  <var_decl 0x7f9827f94870 *.LC26>)) "ETAFLD2.f":659 85 {*movdi_internal}
     (nil))
(insn 3805 3804 3806 249 (set (reg:DI 5 di)
        (symbol_ref:DI ("ttnd.4478") [flags 0x202]  <var_decl 0x7f9827e6f510 ttnd>)) "ETAFLD2.f":659 85 {*movdi_internal}
     (nil))
(insn 3806 3805 3807 249 (set (reg:QI 0 ax)
        (const_int 0 [0])) "ETAFLD2.f":659 88 {*movqi_internal}
     (nil))
(call_insn 3807 3806 3808 249 (call (mem:QI (symbol_ref:DI ("rdrst2d_") [flags 0x41]  <function_decl 0x7f9827e92300 rdrst2d>) [0 rdrst2d S1 A8])
        (const_int 16 [0x10])) "ETAFLD2.f":659 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
(insn 3808 3807 3809 249 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":659 222 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 3809 3808 3810 249 (set (reg:SI 0 ax [orig:1149 nrec1.139_1063 ] [1149])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -284 [0xfffffffffffffee4])) [1 nrec1+0 S4 A32])) "ETAFLD2.f":660 86 {*movsi_internal}
     (nil))
(insn 3810 3809 3811 249 (parallel [
            (set (reg:SI 0 ax [orig:1150 _1064 ] [1150])
                (plus:SI (reg:SI 0 ax [orig:1149 nrec1.139_1063 ] [1149])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":660 221 {*addsi_1}
     (nil))
(insn 3811 3810 3812 249 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -280 [0xfffffffffffffee8])) [1 nrec0+0 S4 A64])
        (reg:SI 0 ax [orig:1150 _1064 ] [1150])) "ETAFLD2.f":660 86 {*movsi_internal}
     (nil))
(insn 3812 3811 3813 249 (set (reg:SI 0 ax [orig:1151 _1065 ] [1151])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 572 [0x23c]))) [1 rqstfld.iget+556 S4 A32])) "ETAFLD2.f":661 86 {*movsi_internal}
     (nil))
(insn 3813 3812 3814 249 (set (reg:DI 1 dx [orig:1152 _1066 ] [1152])
        (sign_extend:DI (reg:SI 0 ax [orig:1151 _1065 ] [1151]))) "ETAFLD2.f":661 149 {*extendsidi2_rex64}
     (nil))
(insn 3814 3813 3815 249 (set (reg:DI 0 ax [2596])
        (reg:DI 1 dx [orig:1152 _1066 ] [1152])) "ETAFLD2.f":661 85 {*movdi_internal}
     (nil))
(insn 3815 3814 3817 249 (parallel [
            (set (reg:DI 0 ax [2597])
                (ashift:DI (reg:DI 0 ax [2596])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":661 551 {*ashldi3_1}
     (nil))
(insn 3817 3815 3818 249 (parallel [
            (set (reg:DI 0 ax [2596])
                (minus:DI (reg:DI 0 ax [2596])
                    (reg:DI 1 dx [orig:1152 _1066 ] [1152])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":661 278 {*subdi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:1152 _1066 ] [1152])
            (const_int 15 [0xf]))
        (nil)))
(insn 3818 3817 3820 249 (parallel [
            (set (reg:DI 0 ax [2598])
                (ashift:DI (reg:DI 0 ax [2596])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":661 551 {*ashldi3_1}
     (nil))
(insn 3820 3818 3821 249 (set (reg:DI 1 dx [orig:1153 _1067 ] [1153])
        (reg:DI 0 ax [2596])) "ETAFLD2.f":661 85 {*movdi_internal}
     (nil))
(insn 3821 3820 3822 249 (set (reg:SI 0 ax [orig:1154 l.140_1068 ] [1154])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":661 86 {*movsi_internal}
     (nil))
(insn 3822 3821 3823 249 (set (reg:DI 0 ax [orig:1155 _1069 ] [1155])
        (sign_extend:DI (reg:SI 0 ax [orig:1154 l.140_1068 ] [1154]))) "ETAFLD2.f":661 149 {*extendsidi2_rex64}
     (nil))
(insn 3823 3822 3824 249 (parallel [
            (set (reg:DI 0 ax [orig:1156 _1070 ] [1156])
                (plus:DI (reg:DI 0 ax [orig:1155 _1069 ] [1155])
                    (reg:DI 1 dx [orig:1153 _1067 ] [1153])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":661 222 {*adddi_1}
     (nil))
(insn 3824 3823 3825 249 (parallel [
            (set (reg:DI 0 ax [orig:1157 _1071 ] [1157])
                (plus:DI (reg:DI 0 ax [orig:1156 _1070 ] [1156])
                    (const_int -61 [0xffffffffffffffc3])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":661 222 {*adddi_1}
     (nil))
(insn 3825 3824 3826 249 (parallel [
            (set (reg:DI 0 ax [2599])
                (plus:DI (reg:DI 0 ax [orig:1157 _1071 ] [1157])
                    (const_int 1404 [0x57c])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":661 222 {*adddi_1}
     (nil))
(insn 3826 3825 3827 249 (set (reg:SI 0 ax [orig:1158 _1072 ] [1158])
        (mem:SI (plus:DI (mult:DI (reg:DI 0 ax [2599])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)) [1 rqstfld.lvls S4 A32])) "ETAFLD2.f":661 86 {*movsi_internal}
     (nil))
(insn 3827 3826 3828 249 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -268 [0xfffffffffffffef4])) [1 itype+0 S4 A32])
        (reg:SI 0 ax [orig:1158 _1072 ] [1158])) "ETAFLD2.f":661 86 {*movsi_internal}
     (nil))
(insn 3828 3827 3829 249 (set (reg:DI 1 dx [2600])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [4 grid2+0 S8 A64])) "ETAFLD2.f":663 85 {*movdi_internal}
     (nil))
(insn 3829 3828 3830 249 (set (reg:DI 0 ax [2601])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "ETAFLD2.f":663 85 {*movdi_internal}
     (nil))
(insn 3830 3829 3831 249 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [11  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -832 [0xfffffffffffffcc0])) [11 jmout+0 S8 A64])) "ETAFLD2.f":663 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 3831 3830 3832 249 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [11  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -824 [0xfffffffffffffcc8])) [11 imout+0 S8 A64])) "ETAFLD2.f":663 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 3832 3831 3833 249 (set (reg:DI 38 r9)
        (reg:DI 1 dx [2600])) "ETAFLD2.f":663 85 {*movdi_internal}
     (nil))
(insn 3833 3832 3834 249 (set (reg:DI 37 r8)
        (reg:DI 0 ax [2601])) "ETAFLD2.f":663 85 {*movdi_internal}
     (nil))
(insn 3834 3833 3835 249 (set (reg:DI 2 cx)
        (symbol_ref:DI ("equiv.2.4368") [flags 0x202]  <var_decl 0x7f9828263510 equiv.2>)) "ETAFLD2.f":663 85 {*movdi_internal}
     (nil))
(insn 3835 3834 3836 249 (set (reg:DI 1 dx)
        (symbol_ref:DI ("ttnd.4478") [flags 0x202]  <var_decl 0x7f9827e6f510 ttnd>)) "ETAFLD2.f":663 85 {*movdi_internal}
     (nil))
(insn 3836 3835 3837 249 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f9827f94240 *.LC3>)) "ETAFLD2.f":663 85 {*movdi_internal}
     (nil))
(insn 3837 3836 3838 249 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC56") [flags 0x2]  <var_decl 0x7f98280352d0 *.LC56>)) "ETAFLD2.f":663 85 {*movdi_internal}
     (nil))
(insn 3838 3837 3839 249 (set (reg:QI 0 ax)
        (const_int 0 [0])) "ETAFLD2.f":663 88 {*movqi_internal}
     (nil))
(call_insn 3839 3838 3840 249 (call (mem:QI (symbol_ref:DI ("e2out_") [flags 0x41]  <function_decl 0x7f9828228600 e2out>) [0 e2out S1 A8])
        (const_int 16 [0x10])) "ETAFLD2.f":663 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
(insn 3840 3839 3841 249 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":663 222 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 3841 3840 3842 249 (set (reg/f:DI 1 dx [2602])
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                (const_int 55216 [0xd7b0])))) "ETAFLD2.f":664 85 {*movdi_internal}
     (nil))
(insn 3842 3841 3843 249 (set (reg:DI 0 ax [2603])
        (const_int 0 [0])) "ETAFLD2.f":664 85 {*movdi_internal}
     (nil))
(insn 3843 3842 5890 249 (set (reg:DI 2 cx [2604])
        (const_int 12 [0xc])) "ETAFLD2.f":664 85 {*movdi_internal}
     (nil))
(insn 5890 3843 3844 249 (set (reg/f:DI 5 di [2602])
        (reg/f:DI 1 dx [2602])) "ETAFLD2.f":664 85 {*movdi_internal}
     (nil))
(insn 3844 5890 5891 249 (parallel [
            (set (reg:DI 2 cx [2604])
                (const_int 0 [0]))
            (set (reg/f:DI 5 di [2602])
                (plus:DI (ashift:DI (reg:DI 2 cx [2604])
                        (const_int 3 [0x3]))
                    (reg/f:DI 5 di [2602])))
            (set (mem/c:BLK (reg/f:DI 5 di [2602]) [1 rqstfld.id+0 S96 A128])
                (const_int 0 [0]))
            (use (reg:DI 0 ax [2603]))
            (use (reg:DI 2 cx [2604]))
        ]) "ETAFLD2.f":664 984 {*rep_stosdi_rex64}
     (nil))
(insn 5891 3844 3845 249 (set (reg/f:DI 1 dx [2602])
        (reg/f:DI 5 di [2602])) "ETAFLD2.f":664 85 {*movdi_internal}
     (nil))
(insn 3845 5891 3846 249 (set (mem/c:SI (reg/f:DI 1 dx [2602]) [1 rqstfld.id+96 S4 A128])
        (reg:SI 0 ax [2603])) "ETAFLD2.f":664 86 {*movsi_internal}
     (nil))
(insn 3846 3845 3847 249 (parallel [
            (set (reg/f:DI 1 dx [2602])
                (plus:DI (reg/f:DI 1 dx [2602])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":664 222 {*adddi_1}
     (nil))
(insn 3847 3846 3848 249 (set (reg:SI 0 ax [orig:1159 l.141_1073 ] [1159])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":665 86 {*movsi_internal}
     (nil))
(insn 3848 3847 3849 249 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -276 [0xfffffffffffffeec])) [1 lyr+0 S4 A32])
        (reg:SI 0 ax [orig:1159 l.141_1073 ] [1159])) "ETAFLD2.f":665 86 {*movsi_internal}
     (nil))
(insn 3849 3848 3850 249 (set (reg:SI 0 ax [orig:1160 itype.142_1074 ] [1160])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -268 [0xfffffffffffffef4])) [1 itype+0 S4 A32])) "ETAFLD2.f":666 86 {*movsi_internal}
     (nil))
(insn 3850 3849 3851 249 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [orig:1160 itype.142_1074 ] [1160])
            (const_int 1 [0x1]))) "ETAFLD2.f":666 11 {*cmpsi_1}
     (nil))
(jump_insn 3851 3850 3852 249 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 3854)
            (pc))) "ETAFLD2.f":666 682 {*jcc}
     (nil)
 -> 3854)
;;  succ:       250 (FALLTHRU)
;;              251
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 250, loop depth 0, maybe hot
;;  prev block 249, next block 251, flags: (RTL, MODIFIED)
;;  pred:       249 (FALLTHRU)
;; bb 250 artificial_defs: { }
;; bb 250 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 3852 3851 3853 250 [bb 250] NOTE_INSN_BASIC_BLOCK)
(insn 3853 3852 3854 250 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 55248 [0xd7d0]))) [1 rqstfld.id+32 S4 A128])
        (const_int 109 [0x6d])) "ETAFLD2.f":666 86 {*movsi_internal}
     (nil))
;;  succ:       251 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 251, loop depth 0, maybe hot
;;  prev block 250, next block 252, flags: (RTL, MODIFIED)
;;  pred:       249
;;              250 (FALLTHRU)
;; bb 251 artificial_defs: { }
;; bb 251 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 2605 2606 2607 2608
(code_label 3854 3853 3855 251 133 (nil) [1 uses])
(note 3855 3854 3856 251 [bb 251] NOTE_INSN_BASIC_BLOCK)
(insn 3856 3855 3857 251 (set (reg:DI 4 si [2605])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -832 [0xfffffffffffffcc0])) [11 jmout+0 S8 A64])) "ETAFLD2.f":667 85 {*movdi_internal}
     (nil))
(insn 3857 3856 3858 251 (set (reg:DI 2 cx [2606])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -824 [0xfffffffffffffcc8])) [11 imout+0 S8 A64])) "ETAFLD2.f":667 85 {*movdi_internal}
     (nil))
(insn 3858 3857 3859 251 (set (reg:DI 1 dx [2607])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "ETAFLD2.f":667 85 {*movdi_internal}
     (nil))
(insn 3859 3858 3860 251 (parallel [
            (set (reg:DI 0 ax [2608])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -276 [0xfffffffffffffeec])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":667 222 {*adddi_1}
     (nil))
(insn 3860 3859 3861 251 (set (reg:DI 38 r9)
        (reg:DI 4 si [2605])) "ETAFLD2.f":667 85 {*movdi_internal}
     (nil))
(insn 3861 3860 3862 251 (set (reg:DI 37 r8)
        (reg:DI 2 cx [2606])) "ETAFLD2.f":667 85 {*movdi_internal}
     (nil))
(insn 3862 3861 3863 251 (set (reg:DI 2 cx)
        (reg:DI 1 dx [2607])) "ETAFLD2.f":667 85 {*movdi_internal}
     (nil))
(insn 3863 3862 3864 251 (set (reg:DI 1 dx)
        (reg:DI 0 ax [2608])) "ETAFLD2.f":667 85 {*movdi_internal}
     (nil))
(insn 3864 3863 3865 251 (set (reg:DI 4 si)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                (const_int 572 [0x23c])))) "ETAFLD2.f":667 85 {*movdi_internal}
     (nil))
(insn 3865 3864 3866 251 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                (const_int 4 [0x4])))) "ETAFLD2.f":667 85 {*movdi_internal}
     (nil))
(insn 3866 3865 3867 251 (set (reg:QI 0 ax)
        (const_int 0 [0])) "ETAFLD2.f":667 88 {*movqi_internal}
     (nil))
(call_insn 3867 3866 3868 251 (call (mem:QI (symbol_ref:DI ("output_") [flags 0x41]  <function_decl 0x7f9828228700 output>) [0 output S1 A8])
        (const_int 0 [0])) "ETAFLD2.f":667 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
;;  succ:       252 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 252, loop depth 0, maybe hot
;;  prev block 251, next block 253, flags: (RTL, MODIFIED)
;;  pred:       247
;;              251 (FALLTHRU)
;;              248
;; bb 252 artificial_defs: { }
;; bb 252 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1161
(code_label 3868 3867 3869 252 132 (nil) [2 uses])
(note 3869 3868 3870 252 [bb 252] NOTE_INSN_BASIC_BLOCK)
(insn 3870 3869 3871 252 (set (reg:SI 0 ax [orig:1161 _1075 ] [1161])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 172 [0xac]))) [1 rqstfld.iget+156 S4 A32])) "ETAFLD2.f":672 86 {*movsi_internal}
     (nil))
(insn 3871 3870 3872 252 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:1161 _1075 ] [1161])
            (const_int 0 [0]))) "ETAFLD2.f":672 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 3872 3871 3873 252 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 3988)
            (pc))) "ETAFLD2.f":672 682 {*jcc}
     (nil)
 -> 3988)
;;  succ:       253 (FALLTHRU)
;;              263
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 253, loop depth 0, maybe hot
;;  prev block 252, next block 254, flags: (RTL, MODIFIED)
;;  pred:       252 (FALLTHRU)
;; bb 253 artificial_defs: { }
;; bb 253 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1162 1163 1164 1165 1166 1167 1168 1169 2609 2610 2611 2612
(note 3873 3872 3874 253 [bb 253] NOTE_INSN_BASIC_BLOCK)
(insn 3874 3873 3875 253 (set (reg:SI 0 ax [orig:1162 _1076 ] [1162])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 172 [0xac]))) [1 rqstfld.iget+156 S4 A32])) "ETAFLD2.f":673 86 {*movsi_internal}
     (nil))
(insn 3875 3874 3876 253 (set (reg:DI 1 dx [orig:1163 _1077 ] [1163])
        (sign_extend:DI (reg:SI 0 ax [orig:1162 _1076 ] [1162]))) "ETAFLD2.f":673 149 {*extendsidi2_rex64}
     (nil))
(insn 3876 3875 3877 253 (set (reg:DI 0 ax [2609])
        (reg:DI 1 dx [orig:1163 _1077 ] [1163])) "ETAFLD2.f":673 85 {*movdi_internal}
     (nil))
(insn 3877 3876 3879 253 (parallel [
            (set (reg:DI 0 ax [2610])
                (ashift:DI (reg:DI 0 ax [2609])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":673 551 {*ashldi3_1}
     (nil))
(insn 3879 3877 3880 253 (parallel [
            (set (reg:DI 0 ax [2609])
                (minus:DI (reg:DI 0 ax [2609])
                    (reg:DI 1 dx [orig:1163 _1077 ] [1163])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":673 278 {*subdi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:1163 _1077 ] [1163])
            (const_int 15 [0xf]))
        (nil)))
(insn 3880 3879 3882 253 (parallel [
            (set (reg:DI 0 ax [2611])
                (ashift:DI (reg:DI 0 ax [2609])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":673 551 {*ashldi3_1}
     (nil))
(insn 3882 3880 3883 253 (set (reg:DI 1 dx [orig:1164 _1078 ] [1164])
        (reg:DI 0 ax [2609])) "ETAFLD2.f":673 85 {*movdi_internal}
     (nil))
(insn 3883 3882 3884 253 (set (reg:SI 0 ax [orig:1165 l.143_1079 ] [1165])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":673 86 {*movsi_internal}
     (nil))
(insn 3884 3883 3885 253 (set (reg:DI 0 ax [orig:1166 _1080 ] [1166])
        (sign_extend:DI (reg:SI 0 ax [orig:1165 l.143_1079 ] [1165]))) "ETAFLD2.f":673 149 {*extendsidi2_rex64}
     (nil))
(insn 3885 3884 3886 253 (parallel [
            (set (reg:DI 0 ax [orig:1167 _1081 ] [1167])
                (plus:DI (reg:DI 0 ax [orig:1166 _1080 ] [1166])
                    (reg:DI 1 dx [orig:1164 _1078 ] [1164])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":673 222 {*adddi_1}
     (nil))
(insn 3886 3885 3887 253 (parallel [
            (set (reg:DI 0 ax [orig:1168 _1082 ] [1168])
                (plus:DI (reg:DI 0 ax [orig:1167 _1081 ] [1167])
                    (const_int -61 [0xffffffffffffffc3])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":673 222 {*adddi_1}
     (nil))
(insn 3887 3886 3888 253 (parallel [
            (set (reg:DI 0 ax [2612])
                (plus:DI (reg:DI 0 ax [orig:1168 _1082 ] [1168])
                    (const_int 1404 [0x57c])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":673 222 {*adddi_1}
     (nil))
(insn 3888 3887 3889 253 (set (reg:SI 0 ax [orig:1169 _1083 ] [1169])
        (mem:SI (plus:DI (mult:DI (reg:DI 0 ax [2612])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)) [1 rqstfld.lvls S4 A32])) "ETAFLD2.f":673 86 {*movsi_internal}
     (nil))
(insn 3889 3888 3890 253 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:1169 _1083 ] [1169])
            (const_int 0 [0]))) "ETAFLD2.f":673 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 3890 3889 3891 253 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 3988)
            (pc))) "ETAFLD2.f":673 682 {*jcc}
     (nil)
 -> 3988)
;;  succ:       254 (FALLTHRU)
;;              263
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 254, loop depth 0, maybe hot
;;  prev block 253, next block 255, flags: (RTL, MODIFIED)
;;  pred:       253 (FALLTHRU)
;; bb 254 artificial_defs: { }
;; bb 254 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1170 1171 1172 1173 1174 1175 1176 1177 1706 1707 2613 2614 2615 2616
(note 3891 3890 3892 254 [bb 254] NOTE_INSN_BASIC_BLOCK)
(insn 3892 3891 3893 254 (set (reg:SI 0 ax [orig:1170 _1084 ] [1170])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 172 [0xac]))) [1 rqstfld.iget+156 S4 A32])) "ETAFLD2.f":677 86 {*movsi_internal}
     (nil))
(insn 3893 3892 3894 254 (set (reg:DI 1 dx [orig:1171 _1085 ] [1171])
        (sign_extend:DI (reg:SI 0 ax [orig:1170 _1084 ] [1170]))) "ETAFLD2.f":677 149 {*extendsidi2_rex64}
     (nil))
(insn 3894 3893 3895 254 (set (reg:DI 0 ax [2613])
        (reg:DI 1 dx [orig:1171 _1085 ] [1171])) "ETAFLD2.f":677 85 {*movdi_internal}
     (nil))
(insn 3895 3894 3897 254 (parallel [
            (set (reg:DI 0 ax [2614])
                (ashift:DI (reg:DI 0 ax [2613])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":677 551 {*ashldi3_1}
     (nil))
(insn 3897 3895 3898 254 (parallel [
            (set (reg:DI 0 ax [2613])
                (minus:DI (reg:DI 0 ax [2613])
                    (reg:DI 1 dx [orig:1171 _1085 ] [1171])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":677 278 {*subdi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:1171 _1085 ] [1171])
            (const_int 15 [0xf]))
        (nil)))
(insn 3898 3897 3900 254 (parallel [
            (set (reg:DI 0 ax [2615])
                (ashift:DI (reg:DI 0 ax [2613])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":677 551 {*ashldi3_1}
     (nil))
(insn 3900 3898 3901 254 (set (reg:DI 1 dx [orig:1172 _1086 ] [1172])
        (reg:DI 0 ax [2613])) "ETAFLD2.f":677 85 {*movdi_internal}
     (nil))
(insn 3901 3900 3902 254 (set (reg:SI 0 ax [orig:1173 l.144_1087 ] [1173])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":677 86 {*movsi_internal}
     (nil))
(insn 3902 3901 3903 254 (set (reg:DI 0 ax [orig:1174 _1088 ] [1174])
        (sign_extend:DI (reg:SI 0 ax [orig:1173 l.144_1087 ] [1173]))) "ETAFLD2.f":677 149 {*extendsidi2_rex64}
     (nil))
(insn 3903 3902 3904 254 (parallel [
            (set (reg:DI 0 ax [orig:1175 _1089 ] [1175])
                (plus:DI (reg:DI 0 ax [orig:1174 _1088 ] [1174])
                    (reg:DI 1 dx [orig:1172 _1086 ] [1172])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":677 222 {*adddi_1}
     (nil))
(insn 3904 3903 3905 254 (parallel [
            (set (reg:DI 0 ax [orig:1176 _1090 ] [1176])
                (plus:DI (reg:DI 0 ax [orig:1175 _1089 ] [1175])
                    (const_int -61 [0xffffffffffffffc3])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":677 222 {*adddi_1}
     (nil))
(insn 3905 3904 3906 254 (parallel [
            (set (reg:DI 0 ax [2616])
                (plus:DI (reg:DI 0 ax [orig:1176 _1090 ] [1176])
                    (const_int 1404 [0x57c])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":677 222 {*adddi_1}
     (nil))
(insn 3906 3905 3907 254 (set (reg:SI 0 ax [orig:1177 _1091 ] [1177])
        (mem:SI (plus:DI (mult:DI (reg:DI 0 ax [2616])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)) [1 rqstfld.lvls S4 A32])) "ETAFLD2.f":677 86 {*movsi_internal}
     (nil))
(insn 3907 3906 3908 254 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -268 [0xfffffffffffffef4])) [1 itype+0 S4 A32])
        (reg:SI 0 ax [orig:1177 _1091 ] [1177])) "ETAFLD2.f":677 86 {*movsi_internal}
     (nil))
(insn 3908 3907 3909 254 (set (reg:SI 1 dx [orig:1706 _2107 ] [1706])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f982824fc60 parallel>)
                    (const_int 8 [0x8]))) [1 parallel.jsta+0 S4 A64])) "ETAFLD2.f":681 86 {*movsi_internal}
     (nil))
(insn 3909 3908 3910 254 (set (reg:SI 0 ax [orig:1707 _2108 ] [1707])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f982824fc60 parallel>)
                    (const_int 12 [0xc]))) [1 parallel.jend+0 S4 A32])) "ETAFLD2.f":681 86 {*movsi_internal}
     (nil))
(insn 3910 3909 3943 254 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])
        (reg:SI 1 dx [orig:1706 _2107 ] [1706])) "ETAFLD2.f":681 86 {*movsi_internal}
     (nil))
;;  succ:       255 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1707

;; basic block 255, loop depth 0, maybe hot
;;  prev block 254, next block 256, flags: (RTL, MODIFIED)
;;  pred:       254 (FALLTHRU)
;;              259 [always] 
;; bb 255 artificial_defs: { }
;; bb 255 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1707
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1707
;; lr  def 	 17 [flags] 1708 2617
(code_label 3943 3910 3911 255 138 (nil) [1 uses])
(note 3911 3943 3912 255 [bb 255] NOTE_INSN_BASIC_BLOCK)
(insn 3912 3911 3913 255 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])
            (reg:SI 0 ax [orig:1707 _2108 ] [1707]))) "ETAFLD2.f":681 11 {*cmpsi_1}
     (nil))
(insn 3913 3912 3914 255 (set (reg:QI 1 dx [2617])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "ETAFLD2.f":681 678 {*setcc_qi}
     (nil))
(insn 3914 3913 3915 255 (set (reg:SI 1 dx [orig:1708 _2110 ] [1708])
        (zero_extend:SI (reg:QI 1 dx [2617]))) "ETAFLD2.f":681 140 {*zero_extendqisi2}
     (nil))
(insn 3915 3914 3916 255 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1708 _2110 ] [1708])
            (const_int 0 [0]))) "ETAFLD2.f":681 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 3916 3915 3917 255 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 5774)
            (pc))) "ETAFLD2.f":681 682 {*jcc}
     (nil)
 -> 5774)
;;  succ:       389
;;              256 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1707

;; basic block 256, loop depth 0, maybe hot
;;  prev block 255, next block 257, flags: (RTL, MODIFIED)
;;  pred:       255 (FALLTHRU)
;; bb 256 artificial_defs: { }
;; bb 256 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1707
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 3917 3916 3918 256 [bb 256] NOTE_INSN_BASIC_BLOCK)
(insn 3918 3917 3937 256 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
        (const_int 1 [0x1])) "ETAFLD2.f":682 86 {*movsi_internal}
     (nil))
;;  succ:       257 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1707

;; basic block 257, loop depth 0, maybe hot
;;  prev block 256, next block 258, flags: (RTL, MODIFIED)
;;  pred:       256 (FALLTHRU)
;;              258 [always] 
;; bb 257 artificial_defs: { }
;; bb 257 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1707
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1709 2618
(code_label 3937 3918 3919 257 137 (nil) [1 uses])
(note 3919 3937 3920 257 [bb 257] NOTE_INSN_BASIC_BLOCK)
(insn 3920 3919 3921 257 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
            (const_int 119 [0x77]))) "ETAFLD2.f":682 11 {*cmpsi_1}
     (nil))
(insn 3921 3920 3922 257 (set (reg:QI 1 dx [2618])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "ETAFLD2.f":682 678 {*setcc_qi}
     (nil))
(insn 3922 3921 3923 257 (set (reg:SI 1 dx [orig:1709 _2112 ] [1709])
        (zero_extend:SI (reg:QI 1 dx [2618]))) "ETAFLD2.f":682 140 {*zero_extendqisi2}
     (nil))
(insn 3923 3922 3924 257 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1709 _2112 ] [1709])
            (const_int 0 [0]))) "ETAFLD2.f":682 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 3924 3923 3925 257 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 5777)
            (pc))) "ETAFLD2.f":682 682 {*jcc}
     (nil)
 -> 5777)
;;  succ:       390
;;              258 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1707

;; basic block 258, loop depth 0, maybe hot
;;  prev block 257, next block 390, flags: (RTL, MODIFIED)
;;  pred:       257 (FALLTHRU)
;; bb 258 artificial_defs: { }
;; bb 258 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1707
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1178 1179 1180 1181 1182 2619 2620 2621 2622
(note 3925 3924 3926 258 [bb 258] NOTE_INSN_BASIC_BLOCK)
(insn 3926 3925 3927 258 (set (reg:SI 1 dx [2619])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])) "ETAFLD2.f":683 86 {*movsi_internal}
     (nil))
(insn 3927 3926 3928 258 (set (reg:DI 1 dx [orig:1178 _1092 ] [1178])
        (sign_extend:DI (reg:SI 1 dx [2619]))) "ETAFLD2.f":683 149 {*extendsidi2_rex64}
     (nil))
(insn 3928 3927 3929 258 (parallel [
            (set (reg:DI 2 cx [orig:1179 _1093 ] [1179])
                (mult:DI (reg:DI 1 dx [orig:1178 _1092 ] [1178])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":683 349 {*muldi3_1}
     (nil))
(insn 3929 3928 3930 258 (set (reg:SI 1 dx [2620])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "ETAFLD2.f":683 86 {*movsi_internal}
     (nil))
(insn 3930 3929 3931 258 (set (reg:DI 1 dx [orig:1180 _1094 ] [1180])
        (sign_extend:DI (reg:SI 1 dx [2620]))) "ETAFLD2.f":683 149 {*extendsidi2_rex64}
     (nil))
(insn 3931 3930 3932 258 (parallel [
            (set (reg:DI 1 dx [orig:1181 _1095 ] [1181])
                (plus:DI (reg:DI 1 dx [orig:1180 _1094 ] [1180])
                    (reg:DI 2 cx [orig:1179 _1093 ] [1179])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":683 222 {*adddi_1}
     (nil))
(insn 3932 3931 3933 258 (parallel [
            (set (reg:DI 2 cx [orig:1182 _1096 ] [1182])
                (plus:DI (reg:DI 1 dx [orig:1181 _1095 ] [1181])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":683 222 {*adddi_1}
     (nil))
(insn 3933 3932 3934 258 (set (reg/f:DI 1 dx [2621])
        (symbol_ref:DI ("equiv.3.4378") [flags 0x202]  <var_decl 0x7f9828263750 equiv.3>)) "ETAFLD2.f":683 85 {*movdi_internal}
     (nil))
(insn 3934 3933 3935 258 (set (reg:SF 21 xmm0 [2622])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC57") [flags 0x2]) [0  S4 A32])) "ETAFLD2.f":683 131 {*movsf_internal}
     (nil))
(insn 3935 3934 3936 258 (set (mem/j:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:1182 _1096 ] [1182])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [2621])) [27 equiv.3.egrid1 S4 A32])
        (reg:SF 21 xmm0 [2622])) "ETAFLD2.f":683 131 {*movsf_internal}
     (nil))
(insn 3936 3935 5649 258 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":682 221 {*addsi_1}
     (nil))
(jump_insn 5649 3936 5650 258 (set (pc)
        (label_ref 3937)) "ETAFLD2.f":682 683 {jump}
     (nil)
 -> 3937)
;;  succ:       257 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1707

(barrier 5650 5649 5777)
;; basic block 390, loop depth 0, maybe hot
;;  prev block 258, next block 259, flags: (RTL, MODIFIED)
;;  pred:       257
;; bb 390 artificial_defs: { }
;; bb 390 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1707
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 5777 5650 5776 390 250 (nil) [1 uses])
(note 5776 5777 5778 390 [bb 390] NOTE_INSN_BASIC_BLOCK)
(insn 5778 5776 3940 390 (const_int 0 [0]) "ETAFLD2.f":683 718 {nop}
     (nil))
;;  succ:       259 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1707

;; basic block 259, loop depth 0, maybe hot
;;  prev block 390, next block 389, flags: (RTL, MODIFIED)
;;  pred:       390 [always]  (FALLTHRU)
;; bb 259 artificial_defs: { }
;; bb 259 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1707
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 3940 5778 3941 259 136 (nil) [0 uses])
(note 3941 3940 3942 259 [bb 259] NOTE_INSN_BASIC_BLOCK)
(insn 3942 3941 5651 259 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":681 221 {*addsi_1}
     (nil))
(jump_insn 5651 3942 5652 259 (set (pc)
        (label_ref 3943)) "ETAFLD2.f":681 683 {jump}
     (nil)
 -> 3943)
;;  succ:       255 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1707

(barrier 5652 5651 5774)
;; basic block 389, loop depth 0, maybe hot
;;  prev block 259, next block 260, flags: (RTL, MODIFIED)
;;  pred:       255
;; bb 389 artificial_defs: { }
;; bb 389 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 5774 5652 5773 389 249 (nil) [1 uses])
(note 5773 5774 5775 389 [bb 389] NOTE_INSN_BASIC_BLOCK)
(insn 5775 5773 3946 389 (const_int 0 [0]) "ETAFLD2.f":682 718 {nop}
     (nil))
;;  succ:       260 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 260, loop depth 0, maybe hot
;;  prev block 389, next block 261, flags: (RTL, MODIFIED)
;;  pred:       389 [always]  (FALLTHRU)
;; bb 260 artificial_defs: { }
;; bb 260 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 1183 1184 2623 2624 2625 2626 2627
(code_label 3946 5775 3947 260 135 (nil) [0 uses])
(note 3947 3946 3948 260 [bb 260] NOTE_INSN_BASIC_BLOCK)
(insn 3948 3947 3949 260 (set (reg:DI 1 dx [2623])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [4 grid2+0 S8 A64])) "ETAFLD2.f":688 85 {*movdi_internal}
     (nil))
(insn 3949 3948 3950 260 (set (reg:DI 0 ax [2624])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "ETAFLD2.f":688 85 {*movdi_internal}
     (nil))
(insn 3950 3949 3951 260 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [11  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -832 [0xfffffffffffffcc0])) [11 jmout+0 S8 A64])) "ETAFLD2.f":688 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 3951 3950 3952 260 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [11  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -824 [0xfffffffffffffcc8])) [11 imout+0 S8 A64])) "ETAFLD2.f":688 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 3952 3951 3953 260 (set (reg:DI 38 r9)
        (reg:DI 1 dx [2623])) "ETAFLD2.f":688 85 {*movdi_internal}
     (nil))
(insn 3953 3952 3954 260 (set (reg:DI 37 r8)
        (reg:DI 0 ax [2624])) "ETAFLD2.f":688 85 {*movdi_internal}
     (nil))
(insn 3954 3953 3955 260 (set (reg:DI 2 cx)
        (symbol_ref:DI ("equiv.2.4368") [flags 0x202]  <var_decl 0x7f9828263510 equiv.2>)) "ETAFLD2.f":688 85 {*movdi_internal}
     (nil))
(insn 3955 3954 3956 260 (set (reg:DI 1 dx)
        (symbol_ref:DI ("equiv.3.4378") [flags 0x202]  <var_decl 0x7f9828263750 equiv.3>)) "ETAFLD2.f":688 85 {*movdi_internal}
     (nil))
(insn 3956 3955 3957 260 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f9827f94240 *.LC3>)) "ETAFLD2.f":688 85 {*movdi_internal}
     (nil))
(insn 3957 3956 3958 260 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC58") [flags 0x2]  <var_decl 0x7f9828035360 *.LC58>)) "ETAFLD2.f":688 85 {*movdi_internal}
     (nil))
(insn 3958 3957 3959 260 (set (reg:QI 0 ax)
        (const_int 0 [0])) "ETAFLD2.f":688 88 {*movqi_internal}
     (nil))
(call_insn 3959 3958 3960 260 (call (mem:QI (symbol_ref:DI ("e2out_") [flags 0x41]  <function_decl 0x7f9828228600 e2out>) [0 e2out S1 A8])
        (const_int 16 [0x10])) "ETAFLD2.f":688 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
(insn 3960 3959 3961 260 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":688 222 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 3961 3960 3962 260 (set (reg/f:DI 1 dx [2625])
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                (const_int 55216 [0xd7b0])))) "ETAFLD2.f":689 85 {*movdi_internal}
     (nil))
(insn 3962 3961 3963 260 (set (reg:DI 0 ax [2626])
        (const_int 0 [0])) "ETAFLD2.f":689 85 {*movdi_internal}
     (nil))
(insn 3963 3962 5892 260 (set (reg:DI 2 cx [2627])
        (const_int 12 [0xc])) "ETAFLD2.f":689 85 {*movdi_internal}
     (nil))
(insn 5892 3963 3964 260 (set (reg/f:DI 5 di [2625])
        (reg/f:DI 1 dx [2625])) "ETAFLD2.f":689 85 {*movdi_internal}
     (nil))
(insn 3964 5892 5893 260 (parallel [
            (set (reg:DI 2 cx [2627])
                (const_int 0 [0]))
            (set (reg/f:DI 5 di [2625])
                (plus:DI (ashift:DI (reg:DI 2 cx [2627])
                        (const_int 3 [0x3]))
                    (reg/f:DI 5 di [2625])))
            (set (mem/c:BLK (reg/f:DI 5 di [2625]) [1 rqstfld.id+0 S96 A128])
                (const_int 0 [0]))
            (use (reg:DI 0 ax [2626]))
            (use (reg:DI 2 cx [2627]))
        ]) "ETAFLD2.f":689 984 {*rep_stosdi_rex64}
     (nil))
(insn 5893 3964 3965 260 (set (reg/f:DI 1 dx [2625])
        (reg/f:DI 5 di [2625])) "ETAFLD2.f":689 85 {*movdi_internal}
     (nil))
(insn 3965 5893 3966 260 (set (mem/c:SI (reg/f:DI 1 dx [2625]) [1 rqstfld.id+96 S4 A128])
        (reg:SI 0 ax [2626])) "ETAFLD2.f":689 86 {*movsi_internal}
     (nil))
(insn 3966 3965 3967 260 (parallel [
            (set (reg/f:DI 1 dx [2625])
                (plus:DI (reg/f:DI 1 dx [2625])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":689 222 {*adddi_1}
     (nil))
(insn 3967 3966 3968 260 (set (reg:SI 0 ax [orig:1183 l.145_1097 ] [1183])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":690 86 {*movsi_internal}
     (nil))
(insn 3968 3967 3969 260 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -276 [0xfffffffffffffeec])) [1 lyr+0 S4 A32])
        (reg:SI 0 ax [orig:1183 l.145_1097 ] [1183])) "ETAFLD2.f":690 86 {*movsi_internal}
     (nil))
(insn 3969 3968 3970 260 (set (reg:SI 0 ax [orig:1184 itype.146_1098 ] [1184])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -268 [0xfffffffffffffef4])) [1 itype+0 S4 A32])) "ETAFLD2.f":691 86 {*movsi_internal}
     (nil))
(insn 3970 3969 3971 260 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [orig:1184 itype.146_1098 ] [1184])
            (const_int 1 [0x1]))) "ETAFLD2.f":691 11 {*cmpsi_1}
     (nil))
(jump_insn 3971 3970 3972 260 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 3974)
            (pc))) "ETAFLD2.f":691 682 {*jcc}
     (nil)
 -> 3974)
;;  succ:       261 (FALLTHRU)
;;              262
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 261, loop depth 0, maybe hot
;;  prev block 260, next block 262, flags: (RTL, MODIFIED)
;;  pred:       260 (FALLTHRU)
;; bb 261 artificial_defs: { }
;; bb 261 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 3972 3971 3973 261 [bb 261] NOTE_INSN_BASIC_BLOCK)
(insn 3973 3972 3974 261 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 55248 [0xd7d0]))) [1 rqstfld.id+32 S4 A128])
        (const_int 109 [0x6d])) "ETAFLD2.f":691 86 {*movsi_internal}
     (nil))
;;  succ:       262 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 262, loop depth 0, maybe hot
;;  prev block 261, next block 263, flags: (RTL, MODIFIED)
;;  pred:       260
;;              261 (FALLTHRU)
;; bb 262 artificial_defs: { }
;; bb 262 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 2628 2629 2630 2631
(code_label 3974 3973 3975 262 139 (nil) [1 uses])
(note 3975 3974 3976 262 [bb 262] NOTE_INSN_BASIC_BLOCK)
(insn 3976 3975 3977 262 (set (reg:DI 4 si [2628])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -832 [0xfffffffffffffcc0])) [11 jmout+0 S8 A64])) "ETAFLD2.f":692 85 {*movdi_internal}
     (nil))
(insn 3977 3976 3978 262 (set (reg:DI 2 cx [2629])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -824 [0xfffffffffffffcc8])) [11 imout+0 S8 A64])) "ETAFLD2.f":692 85 {*movdi_internal}
     (nil))
(insn 3978 3977 3979 262 (set (reg:DI 1 dx [2630])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "ETAFLD2.f":692 85 {*movdi_internal}
     (nil))
(insn 3979 3978 3980 262 (parallel [
            (set (reg:DI 0 ax [2631])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -276 [0xfffffffffffffeec])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":692 222 {*adddi_1}
     (nil))
(insn 3980 3979 3981 262 (set (reg:DI 38 r9)
        (reg:DI 4 si [2628])) "ETAFLD2.f":692 85 {*movdi_internal}
     (nil))
(insn 3981 3980 3982 262 (set (reg:DI 37 r8)
        (reg:DI 2 cx [2629])) "ETAFLD2.f":692 85 {*movdi_internal}
     (nil))
(insn 3982 3981 3983 262 (set (reg:DI 2 cx)
        (reg:DI 1 dx [2630])) "ETAFLD2.f":692 85 {*movdi_internal}
     (nil))
(insn 3983 3982 3984 262 (set (reg:DI 1 dx)
        (reg:DI 0 ax [2631])) "ETAFLD2.f":692 85 {*movdi_internal}
     (nil))
(insn 3984 3983 3985 262 (set (reg:DI 4 si)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                (const_int 172 [0xac])))) "ETAFLD2.f":692 85 {*movdi_internal}
     (nil))
(insn 3985 3984 3986 262 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                (const_int 4 [0x4])))) "ETAFLD2.f":692 85 {*movdi_internal}
     (nil))
(insn 3986 3985 3987 262 (set (reg:QI 0 ax)
        (const_int 0 [0])) "ETAFLD2.f":692 88 {*movqi_internal}
     (nil))
(call_insn 3987 3986 3988 262 (call (mem:QI (symbol_ref:DI ("output_") [flags 0x41]  <function_decl 0x7f9828228700 output>) [0 output S1 A8])
        (const_int 0 [0])) "ETAFLD2.f":692 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
;;  succ:       263 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 263, loop depth 0, maybe hot
;;  prev block 262, next block 264, flags: (RTL, MODIFIED)
;;  pred:       252
;;              262 (FALLTHRU)
;;              253
;; bb 263 artificial_defs: { }
;; bb 263 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1185
(code_label 3988 3987 3989 263 134 (nil) [2 uses])
(note 3989 3988 3990 263 [bb 263] NOTE_INSN_BASIC_BLOCK)
(insn 3990 3989 3991 263 (set (reg:SI 0 ax [orig:1185 _1099 ] [1185])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 176 [0xb0]))) [1 rqstfld.iget+160 S4 A128])) "ETAFLD2.f":697 86 {*movsi_internal}
     (nil))
(insn 3991 3990 3992 263 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:1185 _1099 ] [1185])
            (const_int 0 [0]))) "ETAFLD2.f":697 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 3992 3991 3993 263 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 4108)
            (pc))) "ETAFLD2.f":697 682 {*jcc}
     (nil)
 -> 4108)
;;  succ:       264 (FALLTHRU)
;;              274
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 264, loop depth 0, maybe hot
;;  prev block 263, next block 265, flags: (RTL, MODIFIED)
;;  pred:       263 (FALLTHRU)
;; bb 264 artificial_defs: { }
;; bb 264 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1186 1187 1188 1189 1190 1191 1192 1193 2632 2633 2634 2635
(note 3993 3992 3994 264 [bb 264] NOTE_INSN_BASIC_BLOCK)
(insn 3994 3993 3995 264 (set (reg:SI 0 ax [orig:1186 _1100 ] [1186])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 176 [0xb0]))) [1 rqstfld.iget+160 S4 A128])) "ETAFLD2.f":698 86 {*movsi_internal}
     (nil))
(insn 3995 3994 3996 264 (set (reg:DI 1 dx [orig:1187 _1101 ] [1187])
        (sign_extend:DI (reg:SI 0 ax [orig:1186 _1100 ] [1186]))) "ETAFLD2.f":698 149 {*extendsidi2_rex64}
     (nil))
(insn 3996 3995 3997 264 (set (reg:DI 0 ax [2632])
        (reg:DI 1 dx [orig:1187 _1101 ] [1187])) "ETAFLD2.f":698 85 {*movdi_internal}
     (nil))
(insn 3997 3996 3999 264 (parallel [
            (set (reg:DI 0 ax [2633])
                (ashift:DI (reg:DI 0 ax [2632])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":698 551 {*ashldi3_1}
     (nil))
(insn 3999 3997 4000 264 (parallel [
            (set (reg:DI 0 ax [2632])
                (minus:DI (reg:DI 0 ax [2632])
                    (reg:DI 1 dx [orig:1187 _1101 ] [1187])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":698 278 {*subdi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:1187 _1101 ] [1187])
            (const_int 15 [0xf]))
        (nil)))
(insn 4000 3999 4002 264 (parallel [
            (set (reg:DI 0 ax [2634])
                (ashift:DI (reg:DI 0 ax [2632])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":698 551 {*ashldi3_1}
     (nil))
(insn 4002 4000 4003 264 (set (reg:DI 1 dx [orig:1188 _1102 ] [1188])
        (reg:DI 0 ax [2632])) "ETAFLD2.f":698 85 {*movdi_internal}
     (nil))
(insn 4003 4002 4004 264 (set (reg:SI 0 ax [orig:1189 l.147_1103 ] [1189])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":698 86 {*movsi_internal}
     (nil))
(insn 4004 4003 4005 264 (set (reg:DI 0 ax [orig:1190 _1104 ] [1190])
        (sign_extend:DI (reg:SI 0 ax [orig:1189 l.147_1103 ] [1189]))) "ETAFLD2.f":698 149 {*extendsidi2_rex64}
     (nil))
(insn 4005 4004 4006 264 (parallel [
            (set (reg:DI 0 ax [orig:1191 _1105 ] [1191])
                (plus:DI (reg:DI 0 ax [orig:1190 _1104 ] [1190])
                    (reg:DI 1 dx [orig:1188 _1102 ] [1188])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":698 222 {*adddi_1}
     (nil))
(insn 4006 4005 4007 264 (parallel [
            (set (reg:DI 0 ax [orig:1192 _1106 ] [1192])
                (plus:DI (reg:DI 0 ax [orig:1191 _1105 ] [1191])
                    (const_int -61 [0xffffffffffffffc3])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":698 222 {*adddi_1}
     (nil))
(insn 4007 4006 4008 264 (parallel [
            (set (reg:DI 0 ax [2635])
                (plus:DI (reg:DI 0 ax [orig:1192 _1106 ] [1192])
                    (const_int 1404 [0x57c])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":698 222 {*adddi_1}
     (nil))
(insn 4008 4007 4009 264 (set (reg:SI 0 ax [orig:1193 _1107 ] [1193])
        (mem:SI (plus:DI (mult:DI (reg:DI 0 ax [2635])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)) [1 rqstfld.lvls S4 A32])) "ETAFLD2.f":698 86 {*movsi_internal}
     (nil))
(insn 4009 4008 4010 264 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:1193 _1107 ] [1193])
            (const_int 0 [0]))) "ETAFLD2.f":698 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 4010 4009 4011 264 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 4108)
            (pc))) "ETAFLD2.f":698 682 {*jcc}
     (nil)
 -> 4108)
;;  succ:       265 (FALLTHRU)
;;              274
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 265, loop depth 0, maybe hot
;;  prev block 264, next block 266, flags: (RTL, MODIFIED)
;;  pred:       264 (FALLTHRU)
;; bb 265 artificial_defs: { }
;; bb 265 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1194 1195 1196 1197 1198 1199 1200 1201 1710 1711 2636 2637 2638 2639
(note 4011 4010 4012 265 [bb 265] NOTE_INSN_BASIC_BLOCK)
(insn 4012 4011 4013 265 (set (reg:SI 0 ax [orig:1194 _1108 ] [1194])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 176 [0xb0]))) [1 rqstfld.iget+160 S4 A128])) "ETAFLD2.f":702 86 {*movsi_internal}
     (nil))
(insn 4013 4012 4014 265 (set (reg:DI 1 dx [orig:1195 _1109 ] [1195])
        (sign_extend:DI (reg:SI 0 ax [orig:1194 _1108 ] [1194]))) "ETAFLD2.f":702 149 {*extendsidi2_rex64}
     (nil))
(insn 4014 4013 4015 265 (set (reg:DI 0 ax [2636])
        (reg:DI 1 dx [orig:1195 _1109 ] [1195])) "ETAFLD2.f":702 85 {*movdi_internal}
     (nil))
(insn 4015 4014 4017 265 (parallel [
            (set (reg:DI 0 ax [2637])
                (ashift:DI (reg:DI 0 ax [2636])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":702 551 {*ashldi3_1}
     (nil))
(insn 4017 4015 4018 265 (parallel [
            (set (reg:DI 0 ax [2636])
                (minus:DI (reg:DI 0 ax [2636])
                    (reg:DI 1 dx [orig:1195 _1109 ] [1195])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":702 278 {*subdi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:1195 _1109 ] [1195])
            (const_int 15 [0xf]))
        (nil)))
(insn 4018 4017 4020 265 (parallel [
            (set (reg:DI 0 ax [2638])
                (ashift:DI (reg:DI 0 ax [2636])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":702 551 {*ashldi3_1}
     (nil))
(insn 4020 4018 4021 265 (set (reg:DI 1 dx [orig:1196 _1110 ] [1196])
        (reg:DI 0 ax [2636])) "ETAFLD2.f":702 85 {*movdi_internal}
     (nil))
(insn 4021 4020 4022 265 (set (reg:SI 0 ax [orig:1197 l.148_1111 ] [1197])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":702 86 {*movsi_internal}
     (nil))
(insn 4022 4021 4023 265 (set (reg:DI 0 ax [orig:1198 _1112 ] [1198])
        (sign_extend:DI (reg:SI 0 ax [orig:1197 l.148_1111 ] [1197]))) "ETAFLD2.f":702 149 {*extendsidi2_rex64}
     (nil))
(insn 4023 4022 4024 265 (parallel [
            (set (reg:DI 0 ax [orig:1199 _1113 ] [1199])
                (plus:DI (reg:DI 0 ax [orig:1198 _1112 ] [1198])
                    (reg:DI 1 dx [orig:1196 _1110 ] [1196])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":702 222 {*adddi_1}
     (nil))
(insn 4024 4023 4025 265 (parallel [
            (set (reg:DI 0 ax [orig:1200 _1114 ] [1200])
                (plus:DI (reg:DI 0 ax [orig:1199 _1113 ] [1199])
                    (const_int -61 [0xffffffffffffffc3])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":702 222 {*adddi_1}
     (nil))
(insn 4025 4024 4026 265 (parallel [
            (set (reg:DI 0 ax [2639])
                (plus:DI (reg:DI 0 ax [orig:1200 _1114 ] [1200])
                    (const_int 1404 [0x57c])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":702 222 {*adddi_1}
     (nil))
(insn 4026 4025 4027 265 (set (reg:SI 0 ax [orig:1201 _1115 ] [1201])
        (mem:SI (plus:DI (mult:DI (reg:DI 0 ax [2639])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)) [1 rqstfld.lvls S4 A32])) "ETAFLD2.f":702 86 {*movsi_internal}
     (nil))
(insn 4027 4026 4028 265 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -268 [0xfffffffffffffef4])) [1 itype+0 S4 A32])
        (reg:SI 0 ax [orig:1201 _1115 ] [1201])) "ETAFLD2.f":702 86 {*movsi_internal}
     (nil))
(insn 4028 4027 4029 265 (set (reg:SI 1 dx [orig:1710 _2122 ] [1710])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f982824fc60 parallel>)
                    (const_int 8 [0x8]))) [1 parallel.jsta+0 S4 A64])) "ETAFLD2.f":706 86 {*movsi_internal}
     (nil))
(insn 4029 4028 4030 265 (set (reg:SI 0 ax [orig:1711 _2123 ] [1711])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f982824fc60 parallel>)
                    (const_int 12 [0xc]))) [1 parallel.jend+0 S4 A32])) "ETAFLD2.f":706 86 {*movsi_internal}
     (nil))
(insn 4030 4029 4063 265 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])
        (reg:SI 1 dx [orig:1710 _2122 ] [1710])) "ETAFLD2.f":706 86 {*movsi_internal}
     (nil))
;;  succ:       266 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1711

;; basic block 266, loop depth 0, maybe hot
;;  prev block 265, next block 267, flags: (RTL, MODIFIED)
;;  pred:       265 (FALLTHRU)
;;              270 [always] 
;; bb 266 artificial_defs: { }
;; bb 266 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1711
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1711
;; lr  def 	 17 [flags] 1712 2640
(code_label 4063 4030 4031 266 144 (nil) [1 uses])
(note 4031 4063 4032 266 [bb 266] NOTE_INSN_BASIC_BLOCK)
(insn 4032 4031 4033 266 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])
            (reg:SI 0 ax [orig:1711 _2123 ] [1711]))) "ETAFLD2.f":706 11 {*cmpsi_1}
     (nil))
(insn 4033 4032 4034 266 (set (reg:QI 1 dx [2640])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "ETAFLD2.f":706 678 {*setcc_qi}
     (nil))
(insn 4034 4033 4035 266 (set (reg:SI 1 dx [orig:1712 _2125 ] [1712])
        (zero_extend:SI (reg:QI 1 dx [2640]))) "ETAFLD2.f":706 140 {*zero_extendqisi2}
     (nil))
(insn 4035 4034 4036 266 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1712 _2125 ] [1712])
            (const_int 0 [0]))) "ETAFLD2.f":706 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 4036 4035 4037 266 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 5780)
            (pc))) "ETAFLD2.f":706 682 {*jcc}
     (nil)
 -> 5780)
;;  succ:       391
;;              267 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1711

;; basic block 267, loop depth 0, maybe hot
;;  prev block 266, next block 268, flags: (RTL, MODIFIED)
;;  pred:       266 (FALLTHRU)
;; bb 267 artificial_defs: { }
;; bb 267 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1711
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 4037 4036 4038 267 [bb 267] NOTE_INSN_BASIC_BLOCK)
(insn 4038 4037 4057 267 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
        (const_int 1 [0x1])) "ETAFLD2.f":707 86 {*movsi_internal}
     (nil))
;;  succ:       268 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1711

;; basic block 268, loop depth 0, maybe hot
;;  prev block 267, next block 269, flags: (RTL, MODIFIED)
;;  pred:       267 (FALLTHRU)
;;              269 [always] 
;; bb 268 artificial_defs: { }
;; bb 268 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1711
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1713 2641
(code_label 4057 4038 4039 268 143 (nil) [1 uses])
(note 4039 4057 4040 268 [bb 268] NOTE_INSN_BASIC_BLOCK)
(insn 4040 4039 4041 268 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
            (const_int 119 [0x77]))) "ETAFLD2.f":707 11 {*cmpsi_1}
     (nil))
(insn 4041 4040 4042 268 (set (reg:QI 1 dx [2641])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "ETAFLD2.f":707 678 {*setcc_qi}
     (nil))
(insn 4042 4041 4043 268 (set (reg:SI 1 dx [orig:1713 _2127 ] [1713])
        (zero_extend:SI (reg:QI 1 dx [2641]))) "ETAFLD2.f":707 140 {*zero_extendqisi2}
     (nil))
(insn 4043 4042 4044 268 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1713 _2127 ] [1713])
            (const_int 0 [0]))) "ETAFLD2.f":707 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 4044 4043 4045 268 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 5783)
            (pc))) "ETAFLD2.f":707 682 {*jcc}
     (nil)
 -> 5783)
;;  succ:       392
;;              269 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1711

;; basic block 269, loop depth 0, maybe hot
;;  prev block 268, next block 392, flags: (RTL, MODIFIED)
;;  pred:       268 (FALLTHRU)
;; bb 269 artificial_defs: { }
;; bb 269 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1711
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1202 1203 1204 1205 1206 2642 2643 2644 2645
(note 4045 4044 4046 269 [bb 269] NOTE_INSN_BASIC_BLOCK)
(insn 4046 4045 4047 269 (set (reg:SI 1 dx [2642])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])) "ETAFLD2.f":708 86 {*movsi_internal}
     (nil))
(insn 4047 4046 4048 269 (set (reg:DI 1 dx [orig:1202 _1116 ] [1202])
        (sign_extend:DI (reg:SI 1 dx [2642]))) "ETAFLD2.f":708 149 {*extendsidi2_rex64}
     (nil))
(insn 4048 4047 4049 269 (parallel [
            (set (reg:DI 2 cx [orig:1203 _1117 ] [1203])
                (mult:DI (reg:DI 1 dx [orig:1202 _1116 ] [1202])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":708 349 {*muldi3_1}
     (nil))
(insn 4049 4048 4050 269 (set (reg:SI 1 dx [2643])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "ETAFLD2.f":708 86 {*movsi_internal}
     (nil))
(insn 4050 4049 4051 269 (set (reg:DI 1 dx [orig:1204 _1118 ] [1204])
        (sign_extend:DI (reg:SI 1 dx [2643]))) "ETAFLD2.f":708 149 {*extendsidi2_rex64}
     (nil))
(insn 4051 4050 4052 269 (parallel [
            (set (reg:DI 1 dx [orig:1205 _1119 ] [1205])
                (plus:DI (reg:DI 1 dx [orig:1204 _1118 ] [1204])
                    (reg:DI 2 cx [orig:1203 _1117 ] [1203])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":708 222 {*adddi_1}
     (nil))
(insn 4052 4051 4053 269 (parallel [
            (set (reg:DI 2 cx [orig:1206 _1120 ] [1206])
                (plus:DI (reg:DI 1 dx [orig:1205 _1119 ] [1205])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":708 222 {*adddi_1}
     (nil))
(insn 4053 4052 4054 269 (set (reg/f:DI 1 dx [2644])
        (symbol_ref:DI ("equiv.3.4378") [flags 0x202]  <var_decl 0x7f9828263750 equiv.3>)) "ETAFLD2.f":708 85 {*movdi_internal}
     (nil))
(insn 4054 4053 4055 269 (set (reg:SF 21 xmm0 [2645])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC57") [flags 0x2]) [0  S4 A32])) "ETAFLD2.f":708 131 {*movsf_internal}
     (nil))
(insn 4055 4054 4056 269 (set (mem/j:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:1206 _1120 ] [1206])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [2644])) [27 equiv.3.egrid1 S4 A32])
        (reg:SF 21 xmm0 [2645])) "ETAFLD2.f":708 131 {*movsf_internal}
     (nil))
(insn 4056 4055 5653 269 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":707 221 {*addsi_1}
     (nil))
(jump_insn 5653 4056 5654 269 (set (pc)
        (label_ref 4057)) "ETAFLD2.f":707 683 {jump}
     (nil)
 -> 4057)
;;  succ:       268 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1711

(barrier 5654 5653 5783)
;; basic block 392, loop depth 0, maybe hot
;;  prev block 269, next block 270, flags: (RTL, MODIFIED)
;;  pred:       268
;; bb 392 artificial_defs: { }
;; bb 392 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1711
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 5783 5654 5782 392 252 (nil) [1 uses])
(note 5782 5783 5784 392 [bb 392] NOTE_INSN_BASIC_BLOCK)
(insn 5784 5782 4060 392 (const_int 0 [0]) "ETAFLD2.f":708 718 {nop}
     (nil))
;;  succ:       270 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1711

;; basic block 270, loop depth 0, maybe hot
;;  prev block 392, next block 391, flags: (RTL, MODIFIED)
;;  pred:       392 [always]  (FALLTHRU)
;; bb 270 artificial_defs: { }
;; bb 270 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1711
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 4060 5784 4061 270 142 (nil) [0 uses])
(note 4061 4060 4062 270 [bb 270] NOTE_INSN_BASIC_BLOCK)
(insn 4062 4061 5655 270 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":706 221 {*addsi_1}
     (nil))
(jump_insn 5655 4062 5656 270 (set (pc)
        (label_ref 4063)) "ETAFLD2.f":706 683 {jump}
     (nil)
 -> 4063)
;;  succ:       266 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1711

(barrier 5656 5655 5780)
;; basic block 391, loop depth 0, maybe hot
;;  prev block 270, next block 271, flags: (RTL, MODIFIED)
;;  pred:       266
;; bb 391 artificial_defs: { }
;; bb 391 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 5780 5656 5779 391 251 (nil) [1 uses])
(note 5779 5780 5781 391 [bb 391] NOTE_INSN_BASIC_BLOCK)
(insn 5781 5779 4066 391 (const_int 0 [0]) "ETAFLD2.f":707 718 {nop}
     (nil))
;;  succ:       271 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 271, loop depth 0, maybe hot
;;  prev block 391, next block 272, flags: (RTL, MODIFIED)
;;  pred:       391 [always]  (FALLTHRU)
;; bb 271 artificial_defs: { }
;; bb 271 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 1207 1208 2646 2647 2648 2649 2650
(code_label 4066 5781 4067 271 141 (nil) [0 uses])
(note 4067 4066 4068 271 [bb 271] NOTE_INSN_BASIC_BLOCK)
(insn 4068 4067 4069 271 (set (reg:DI 1 dx [2646])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [4 grid2+0 S8 A64])) "ETAFLD2.f":713 85 {*movdi_internal}
     (nil))
(insn 4069 4068 4070 271 (set (reg:DI 0 ax [2647])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "ETAFLD2.f":713 85 {*movdi_internal}
     (nil))
(insn 4070 4069 4071 271 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [11  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -832 [0xfffffffffffffcc0])) [11 jmout+0 S8 A64])) "ETAFLD2.f":713 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 4071 4070 4072 271 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [11  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -824 [0xfffffffffffffcc8])) [11 imout+0 S8 A64])) "ETAFLD2.f":713 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 4072 4071 4073 271 (set (reg:DI 38 r9)
        (reg:DI 1 dx [2646])) "ETAFLD2.f":713 85 {*movdi_internal}
     (nil))
(insn 4073 4072 4074 271 (set (reg:DI 37 r8)
        (reg:DI 0 ax [2647])) "ETAFLD2.f":713 85 {*movdi_internal}
     (nil))
(insn 4074 4073 4075 271 (set (reg:DI 2 cx)
        (symbol_ref:DI ("equiv.2.4368") [flags 0x202]  <var_decl 0x7f9828263510 equiv.2>)) "ETAFLD2.f":713 85 {*movdi_internal}
     (nil))
(insn 4075 4074 4076 271 (set (reg:DI 1 dx)
        (symbol_ref:DI ("equiv.3.4378") [flags 0x202]  <var_decl 0x7f9828263750 equiv.3>)) "ETAFLD2.f":713 85 {*movdi_internal}
     (nil))
(insn 4076 4075 4077 271 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f9827f94240 *.LC3>)) "ETAFLD2.f":713 85 {*movdi_internal}
     (nil))
(insn 4077 4076 4078 271 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC59") [flags 0x2]  <var_decl 0x7f98280353f0 *.LC59>)) "ETAFLD2.f":713 85 {*movdi_internal}
     (nil))
(insn 4078 4077 4079 271 (set (reg:QI 0 ax)
        (const_int 0 [0])) "ETAFLD2.f":713 88 {*movqi_internal}
     (nil))
(call_insn 4079 4078 4080 271 (call (mem:QI (symbol_ref:DI ("e2out_") [flags 0x41]  <function_decl 0x7f9828228600 e2out>) [0 e2out S1 A8])
        (const_int 16 [0x10])) "ETAFLD2.f":713 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
(insn 4080 4079 4081 271 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":713 222 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 4081 4080 4082 271 (set (reg/f:DI 1 dx [2648])
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                (const_int 55216 [0xd7b0])))) "ETAFLD2.f":714 85 {*movdi_internal}
     (nil))
(insn 4082 4081 4083 271 (set (reg:DI 0 ax [2649])
        (const_int 0 [0])) "ETAFLD2.f":714 85 {*movdi_internal}
     (nil))
(insn 4083 4082 5894 271 (set (reg:DI 2 cx [2650])
        (const_int 12 [0xc])) "ETAFLD2.f":714 85 {*movdi_internal}
     (nil))
(insn 5894 4083 4084 271 (set (reg/f:DI 5 di [2648])
        (reg/f:DI 1 dx [2648])) "ETAFLD2.f":714 85 {*movdi_internal}
     (nil))
(insn 4084 5894 5895 271 (parallel [
            (set (reg:DI 2 cx [2650])
                (const_int 0 [0]))
            (set (reg/f:DI 5 di [2648])
                (plus:DI (ashift:DI (reg:DI 2 cx [2650])
                        (const_int 3 [0x3]))
                    (reg/f:DI 5 di [2648])))
            (set (mem/c:BLK (reg/f:DI 5 di [2648]) [1 rqstfld.id+0 S96 A128])
                (const_int 0 [0]))
            (use (reg:DI 0 ax [2649]))
            (use (reg:DI 2 cx [2650]))
        ]) "ETAFLD2.f":714 984 {*rep_stosdi_rex64}
     (nil))
(insn 5895 4084 4085 271 (set (reg/f:DI 1 dx [2648])
        (reg/f:DI 5 di [2648])) "ETAFLD2.f":714 85 {*movdi_internal}
     (nil))
(insn 4085 5895 4086 271 (set (mem/c:SI (reg/f:DI 1 dx [2648]) [1 rqstfld.id+96 S4 A128])
        (reg:SI 0 ax [2649])) "ETAFLD2.f":714 86 {*movsi_internal}
     (nil))
(insn 4086 4085 4087 271 (parallel [
            (set (reg/f:DI 1 dx [2648])
                (plus:DI (reg/f:DI 1 dx [2648])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":714 222 {*adddi_1}
     (nil))
(insn 4087 4086 4088 271 (set (reg:SI 0 ax [orig:1207 l.149_1121 ] [1207])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":715 86 {*movsi_internal}
     (nil))
(insn 4088 4087 4089 271 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -276 [0xfffffffffffffeec])) [1 lyr+0 S4 A32])
        (reg:SI 0 ax [orig:1207 l.149_1121 ] [1207])) "ETAFLD2.f":715 86 {*movsi_internal}
     (nil))
(insn 4089 4088 4090 271 (set (reg:SI 0 ax [orig:1208 itype.150_1122 ] [1208])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -268 [0xfffffffffffffef4])) [1 itype+0 S4 A32])) "ETAFLD2.f":716 86 {*movsi_internal}
     (nil))
(insn 4090 4089 4091 271 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [orig:1208 itype.150_1122 ] [1208])
            (const_int 1 [0x1]))) "ETAFLD2.f":716 11 {*cmpsi_1}
     (nil))
(jump_insn 4091 4090 4092 271 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 4094)
            (pc))) "ETAFLD2.f":716 682 {*jcc}
     (nil)
 -> 4094)
;;  succ:       272 (FALLTHRU)
;;              273
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 272, loop depth 0, maybe hot
;;  prev block 271, next block 273, flags: (RTL, MODIFIED)
;;  pred:       271 (FALLTHRU)
;; bb 272 artificial_defs: { }
;; bb 272 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 4092 4091 4093 272 [bb 272] NOTE_INSN_BASIC_BLOCK)
(insn 4093 4092 4094 272 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 55248 [0xd7d0]))) [1 rqstfld.id+32 S4 A128])
        (const_int 109 [0x6d])) "ETAFLD2.f":716 86 {*movsi_internal}
     (nil))
;;  succ:       273 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 273, loop depth 0, maybe hot
;;  prev block 272, next block 274, flags: (RTL, MODIFIED)
;;  pred:       271
;;              272 (FALLTHRU)
;; bb 273 artificial_defs: { }
;; bb 273 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 2651 2652 2653 2654
(code_label 4094 4093 4095 273 145 (nil) [1 uses])
(note 4095 4094 4096 273 [bb 273] NOTE_INSN_BASIC_BLOCK)
(insn 4096 4095 4097 273 (set (reg:DI 4 si [2651])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -832 [0xfffffffffffffcc0])) [11 jmout+0 S8 A64])) "ETAFLD2.f":717 85 {*movdi_internal}
     (nil))
(insn 4097 4096 4098 273 (set (reg:DI 2 cx [2652])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -824 [0xfffffffffffffcc8])) [11 imout+0 S8 A64])) "ETAFLD2.f":717 85 {*movdi_internal}
     (nil))
(insn 4098 4097 4099 273 (set (reg:DI 1 dx [2653])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "ETAFLD2.f":717 85 {*movdi_internal}
     (nil))
(insn 4099 4098 4100 273 (parallel [
            (set (reg:DI 0 ax [2654])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -276 [0xfffffffffffffeec])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":717 222 {*adddi_1}
     (nil))
(insn 4100 4099 4101 273 (set (reg:DI 38 r9)
        (reg:DI 4 si [2651])) "ETAFLD2.f":717 85 {*movdi_internal}
     (nil))
(insn 4101 4100 4102 273 (set (reg:DI 37 r8)
        (reg:DI 2 cx [2652])) "ETAFLD2.f":717 85 {*movdi_internal}
     (nil))
(insn 4102 4101 4103 273 (set (reg:DI 2 cx)
        (reg:DI 1 dx [2653])) "ETAFLD2.f":717 85 {*movdi_internal}
     (nil))
(insn 4103 4102 4104 273 (set (reg:DI 1 dx)
        (reg:DI 0 ax [2654])) "ETAFLD2.f":717 85 {*movdi_internal}
     (nil))
(insn 4104 4103 4105 273 (set (reg:DI 4 si)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                (const_int 176 [0xb0])))) "ETAFLD2.f":717 85 {*movdi_internal}
     (nil))
(insn 4105 4104 4106 273 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                (const_int 4 [0x4])))) "ETAFLD2.f":717 85 {*movdi_internal}
     (nil))
(insn 4106 4105 4107 273 (set (reg:QI 0 ax)
        (const_int 0 [0])) "ETAFLD2.f":717 88 {*movqi_internal}
     (nil))
(call_insn 4107 4106 4108 273 (call (mem:QI (symbol_ref:DI ("output_") [flags 0x41]  <function_decl 0x7f9828228700 output>) [0 output S1 A8])
        (const_int 0 [0])) "ETAFLD2.f":717 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
;;  succ:       274 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 274, loop depth 0, maybe hot
;;  prev block 273, next block 275, flags: (RTL, MODIFIED)
;;  pred:       263
;;              273 (FALLTHRU)
;;              264
;; bb 274 artificial_defs: { }
;; bb 274 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1209
(code_label 4108 4107 4109 274 140 (nil) [2 uses])
(note 4109 4108 4110 274 [bb 274] NOTE_INSN_BASIC_BLOCK)
(insn 4110 4109 4111 274 (set (reg:SI 0 ax [orig:1209 _1123 ] [1209])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 324 [0x144]))) [1 rqstfld.iget+308 S4 A32])) "ETAFLD2.f":722 86 {*movsi_internal}
     (nil))
(insn 4111 4110 4112 274 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:1209 _1123 ] [1209])
            (const_int 0 [0]))) "ETAFLD2.f":722 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 4112 4111 4113 274 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 4313)
            (pc))) "ETAFLD2.f":722 682 {*jcc}
     (nil)
 -> 4313)
;;  succ:       275 (FALLTHRU)
;;              293
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 275, loop depth 0, maybe hot
;;  prev block 274, next block 276, flags: (RTL, MODIFIED)
;;  pred:       274 (FALLTHRU)
;; bb 275 artificial_defs: { }
;; bb 275 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1210 1211 1212 1213 1214 1215 1216 1217 2655 2656 2657 2658
(note 4113 4112 4114 275 [bb 275] NOTE_INSN_BASIC_BLOCK)
(insn 4114 4113 4115 275 (set (reg:SI 0 ax [orig:1210 _1124 ] [1210])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 324 [0x144]))) [1 rqstfld.iget+308 S4 A32])) "ETAFLD2.f":723 86 {*movsi_internal}
     (nil))
(insn 4115 4114 4116 275 (set (reg:DI 1 dx [orig:1211 _1125 ] [1211])
        (sign_extend:DI (reg:SI 0 ax [orig:1210 _1124 ] [1210]))) "ETAFLD2.f":723 149 {*extendsidi2_rex64}
     (nil))
(insn 4116 4115 4117 275 (set (reg:DI 0 ax [2655])
        (reg:DI 1 dx [orig:1211 _1125 ] [1211])) "ETAFLD2.f":723 85 {*movdi_internal}
     (nil))
(insn 4117 4116 4119 275 (parallel [
            (set (reg:DI 0 ax [2656])
                (ashift:DI (reg:DI 0 ax [2655])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":723 551 {*ashldi3_1}
     (nil))
(insn 4119 4117 4120 275 (parallel [
            (set (reg:DI 0 ax [2655])
                (minus:DI (reg:DI 0 ax [2655])
                    (reg:DI 1 dx [orig:1211 _1125 ] [1211])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":723 278 {*subdi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:1211 _1125 ] [1211])
            (const_int 15 [0xf]))
        (nil)))
(insn 4120 4119 4122 275 (parallel [
            (set (reg:DI 0 ax [2657])
                (ashift:DI (reg:DI 0 ax [2655])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":723 551 {*ashldi3_1}
     (nil))
(insn 4122 4120 4123 275 (set (reg:DI 1 dx [orig:1212 _1126 ] [1212])
        (reg:DI 0 ax [2655])) "ETAFLD2.f":723 85 {*movdi_internal}
     (nil))
(insn 4123 4122 4124 275 (set (reg:SI 0 ax [orig:1213 l.151_1127 ] [1213])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":723 86 {*movsi_internal}
     (nil))
(insn 4124 4123 4125 275 (set (reg:DI 0 ax [orig:1214 _1128 ] [1214])
        (sign_extend:DI (reg:SI 0 ax [orig:1213 l.151_1127 ] [1213]))) "ETAFLD2.f":723 149 {*extendsidi2_rex64}
     (nil))
(insn 4125 4124 4126 275 (parallel [
            (set (reg:DI 0 ax [orig:1215 _1129 ] [1215])
                (plus:DI (reg:DI 0 ax [orig:1214 _1128 ] [1214])
                    (reg:DI 1 dx [orig:1212 _1126 ] [1212])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":723 222 {*adddi_1}
     (nil))
(insn 4126 4125 4127 275 (parallel [
            (set (reg:DI 0 ax [orig:1216 _1130 ] [1216])
                (plus:DI (reg:DI 0 ax [orig:1215 _1129 ] [1215])
                    (const_int -61 [0xffffffffffffffc3])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":723 222 {*adddi_1}
     (nil))
(insn 4127 4126 4128 275 (parallel [
            (set (reg:DI 0 ax [2658])
                (plus:DI (reg:DI 0 ax [orig:1216 _1130 ] [1216])
                    (const_int 1404 [0x57c])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":723 222 {*adddi_1}
     (nil))
(insn 4128 4127 4129 275 (set (reg:SI 0 ax [orig:1217 _1131 ] [1217])
        (mem:SI (plus:DI (mult:DI (reg:DI 0 ax [2658])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)) [1 rqstfld.lvls S4 A32])) "ETAFLD2.f":723 86 {*movsi_internal}
     (nil))
(insn 4129 4128 4130 275 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:1217 _1131 ] [1217])
            (const_int 0 [0]))) "ETAFLD2.f":723 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 4130 4129 4131 275 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 4313)
            (pc))) "ETAFLD2.f":723 682 {*jcc}
     (nil)
 -> 4313)
;;  succ:       276 (FALLTHRU)
;;              293
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 276, loop depth 0, maybe hot
;;  prev block 275, next block 277, flags: (RTL, MODIFIED)
;;  pred:       275 (FALLTHRU)
;; bb 276 artificial_defs: { }
;; bb 276 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 1218 1219 1220 1221 1222 1223 1224 1225 1226 1227 1228 1229 1230 1231 1232 2659 2660 2661 2662 2663 2664 2665 2666
(note 4131 4130 4132 276 [bb 276] NOTE_INSN_BASIC_BLOCK)
(insn 4132 4131 4133 276 (set (reg:SI 0 ax [orig:1218 l.152_1132 ] [1218])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":724 86 {*movsi_internal}
     (nil))
(insn 4133 4132 4134 276 (parallel [
            (set (reg:SI 1 dx [orig:1219 _1133 ] [1219])
                (plus:SI (reg:SI 0 ax [orig:1218 l.152_1132 ] [1218])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":724 221 {*addsi_1}
     (nil))
(insn 4134 4133 4135 276 (set (reg:SI 0 ax [2659])
        (reg:SI 1 dx [orig:1219 _1133 ] [1219])) "ETAFLD2.f":724 86 {*movsi_internal}
     (nil))
(insn 4135 4134 4136 276 (parallel [
            (set (reg:SI 0 ax [2659])
                (ashift:SI (reg:SI 0 ax [2659])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":724 550 {*ashlsi3_1}
     (nil))
(insn 4136 4135 4137 276 (parallel [
            (set (reg:SI 0 ax [orig:1220 _1134 ] [1220])
                (plus:SI (reg:SI 0 ax [2659])
                    (reg:SI 1 dx [orig:1219 _1133 ] [1219])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":724 221 {*addsi_1}
     (expr_list:REG_EQUAL (mult:SI (reg:SI 1 dx [orig:1219 _1133 ] [1219])
            (const_int 9 [0x9]))
        (nil)))
(insn 4137 4136 4138 276 (parallel [
            (set (reg:SI 0 ax [orig:1221 _1135 ] [1221])
                (plus:SI (reg:SI 0 ax [orig:1220 _1134 ] [1220])
                    (const_int 51 [0x33])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":724 221 {*addsi_1}
     (nil))
(insn 4138 4137 4139 276 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -284 [0xfffffffffffffee4])) [1 nrec1+0 S4 A32])
        (reg:SI 0 ax [orig:1221 _1135 ] [1221])) "ETAFLD2.f":724 86 {*movsi_internal}
     (nil))
(insn 4139 4138 4140 276 (parallel [
            (set (reg:DI 1 dx [2660])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -284 [0xfffffffffffffee4])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":725 222 {*adddi_1}
     (nil))
(insn 4140 4139 4141 276 (parallel [
            (set (reg:DI 0 ax [2661])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -280 [0xfffffffffffffee8])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":725 222 {*adddi_1}
     (nil))
(insn 4141 4140 4142 276 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [31  S8 A64])
        (symbol_ref/f:DI ("*.LC55") [flags 0x2]  <var_decl 0x7f9828035240 *.LC55>)) "ETAFLD2.f":725 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 4142 4141 4143 276 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [8  S8 A64])
        (symbol_ref/f:DI ("*.LC20") [flags 0x2]  <var_decl 0x7f9827f94510 *.LC20>)) "ETAFLD2.f":725 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 4143 4142 4144 276 (set (reg:DI 38 r9)
        (reg:DI 1 dx [2660])) "ETAFLD2.f":725 85 {*movdi_internal}
     (nil))
(insn 4144 4143 4145 276 (set (reg:DI 37 r8)
        (reg:DI 0 ax [2661])) "ETAFLD2.f":725 85 {*movdi_internal}
     (nil))
(insn 4145 4144 4146 276 (set (reg:DI 2 cx)
        (const:DI (plus:DI (symbol_ref:DI ("outfil_") [flags 0x2]  <var_decl 0x7f982824fa20 outfil>)
                (const_int 4 [0x4])))) "ETAFLD2.f":725 85 {*movdi_internal}
     (nil))
(insn 4146 4145 4147 276 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC25") [flags 0x2]  <var_decl 0x7f9827f947e0 *.LC25>)) "ETAFLD2.f":725 85 {*movdi_internal}
     (nil))
(insn 4147 4146 4148 276 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC26") [flags 0x2]  <var_decl 0x7f9827f94870 *.LC26>)) "ETAFLD2.f":725 85 {*movdi_internal}
     (nil))
(insn 4148 4147 4149 276 (set (reg:DI 5 di)
        (symbol_ref:DI ("train.4474") [flags 0x202]  <var_decl 0x7f9827e6f3f0 train>)) "ETAFLD2.f":725 85 {*movdi_internal}
     (nil))
(insn 4149 4148 4150 276 (set (reg:QI 0 ax)
        (const_int 0 [0])) "ETAFLD2.f":725 88 {*movqi_internal}
     (nil))
(call_insn 4150 4149 4151 276 (call (mem:QI (symbol_ref:DI ("rdrst2d_") [flags 0x41]  <function_decl 0x7f9827e92300 rdrst2d>) [0 rdrst2d S1 A8])
        (const_int 16 [0x10])) "ETAFLD2.f":725 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
(insn 4151 4150 4152 276 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":725 222 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 4152 4151 4153 276 (set (reg:SI 0 ax [orig:1222 nrec1.153_1136 ] [1222])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -284 [0xfffffffffffffee4])) [1 nrec1+0 S4 A32])) "ETAFLD2.f":726 86 {*movsi_internal}
     (nil))
(insn 4153 4152 4154 276 (parallel [
            (set (reg:SI 0 ax [orig:1223 _1137 ] [1223])
                (plus:SI (reg:SI 0 ax [orig:1222 nrec1.153_1136 ] [1222])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":726 221 {*addsi_1}
     (nil))
(insn 4154 4153 4155 276 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -280 [0xfffffffffffffee8])) [1 nrec0+0 S4 A64])
        (reg:SI 0 ax [orig:1223 _1137 ] [1223])) "ETAFLD2.f":726 86 {*movsi_internal}
     (nil))
(insn 4155 4154 4156 276 (set (reg:SI 0 ax [orig:1224 _1138 ] [1224])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 324 [0x144]))) [1 rqstfld.iget+308 S4 A32])) "ETAFLD2.f":727 86 {*movsi_internal}
     (nil))
(insn 4156 4155 4157 276 (set (reg:DI 1 dx [orig:1225 _1139 ] [1225])
        (sign_extend:DI (reg:SI 0 ax [orig:1224 _1138 ] [1224]))) "ETAFLD2.f":727 149 {*extendsidi2_rex64}
     (nil))
(insn 4157 4156 4158 276 (set (reg:DI 0 ax [2662])
        (reg:DI 1 dx [orig:1225 _1139 ] [1225])) "ETAFLD2.f":727 85 {*movdi_internal}
     (nil))
(insn 4158 4157 4160 276 (parallel [
            (set (reg:DI 0 ax [2663])
                (ashift:DI (reg:DI 0 ax [2662])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":727 551 {*ashldi3_1}
     (nil))
(insn 4160 4158 4161 276 (parallel [
            (set (reg:DI 0 ax [2662])
                (minus:DI (reg:DI 0 ax [2662])
                    (reg:DI 1 dx [orig:1225 _1139 ] [1225])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":727 278 {*subdi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:1225 _1139 ] [1225])
            (const_int 15 [0xf]))
        (nil)))
(insn 4161 4160 4163 276 (parallel [
            (set (reg:DI 0 ax [2664])
                (ashift:DI (reg:DI 0 ax [2662])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":727 551 {*ashldi3_1}
     (nil))
(insn 4163 4161 4164 276 (set (reg:DI 1 dx [orig:1226 _1140 ] [1226])
        (reg:DI 0 ax [2662])) "ETAFLD2.f":727 85 {*movdi_internal}
     (nil))
(insn 4164 4163 4165 276 (set (reg:SI 0 ax [orig:1227 l.154_1141 ] [1227])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":727 86 {*movsi_internal}
     (nil))
(insn 4165 4164 4166 276 (set (reg:DI 0 ax [orig:1228 _1142 ] [1228])
        (sign_extend:DI (reg:SI 0 ax [orig:1227 l.154_1141 ] [1227]))) "ETAFLD2.f":727 149 {*extendsidi2_rex64}
     (nil))
(insn 4166 4165 4167 276 (parallel [
            (set (reg:DI 0 ax [orig:1229 _1143 ] [1229])
                (plus:DI (reg:DI 0 ax [orig:1228 _1142 ] [1228])
                    (reg:DI 1 dx [orig:1226 _1140 ] [1226])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":727 222 {*adddi_1}
     (nil))
(insn 4167 4166 4168 276 (parallel [
            (set (reg:DI 0 ax [orig:1230 _1144 ] [1230])
                (plus:DI (reg:DI 0 ax [orig:1229 _1143 ] [1229])
                    (const_int -61 [0xffffffffffffffc3])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":727 222 {*adddi_1}
     (nil))
(insn 4168 4167 4169 276 (parallel [
            (set (reg:DI 0 ax [2665])
                (plus:DI (reg:DI 0 ax [orig:1230 _1144 ] [1230])
                    (const_int 1404 [0x57c])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":727 222 {*adddi_1}
     (nil))
(insn 4169 4168 4170 276 (set (reg:SI 0 ax [orig:1231 _1145 ] [1231])
        (mem:SI (plus:DI (mult:DI (reg:DI 0 ax [2665])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)) [1 rqstfld.lvls S4 A32])) "ETAFLD2.f":727 86 {*movsi_internal}
     (nil))
(insn 4170 4169 4171 276 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -268 [0xfffffffffffffef4])) [1 itype+0 S4 A32])
        (reg:SI 0 ax [orig:1231 _1145 ] [1231])) "ETAFLD2.f":727 86 {*movsi_internal}
     (nil))
(insn 4171 4170 4172 276 (set (reg:SF 21 xmm0 [orig:1232 _1146 ] [1232])
        (mem/c:SF (const:DI (plus:DI (symbol_ref:DI ("acmclh_") [flags 0x2]  <var_decl 0x7f982f29bab0 acmclh>)
                    (const_int 8 [0x8]))) [2 acmclh.avrain+0 S4 A64])) "ETAFLD2.f":1 131 {*movsf_internal}
     (nil))
(insn 4172 4171 4173 276 (set (reg:SF 22 xmm1 [2666])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) "ETAFLD2.f":728 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 4173 4172 4174 276 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [orig:1232 _1146 ] [1232])
            (reg:SF 22 xmm1 [2666]))) "ETAFLD2.f":728 53 {*cmpisf}
     (nil))
(jump_insn 4174 4173 4178 276 (set (pc)
        (if_then_else (unle (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 5657)
            (pc))) "ETAFLD2.f":728 682 {*jcc}
     (nil)
 -> 5657)
;;  succ:       277 (FALLTHRU)
;;              278
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 277, loop depth 0, maybe hot
;;  prev block 276, next block 278, flags: (RTL, MODIFIED)
;;  pred:       276 (FALLTHRU)
;; bb 277 artificial_defs: { }
;; bb 277 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 1233 2667 2668
(note 4178 4174 4179 277 [bb 277] NOTE_INSN_BASIC_BLOCK)
(insn 4179 4178 4180 277 (set (reg:SF 22 xmm1 [orig:1233 _1147 ] [1233])
        (mem/c:SF (const:DI (plus:DI (symbol_ref:DI ("acmclh_") [flags 0x2]  <var_decl 0x7f982f29bab0 acmclh>)
                    (const_int 8 [0x8]))) [2 acmclh.avrain+0 S4 A64])) "ETAFLD2.f":1 131 {*movsf_internal}
     (nil))
(insn 4180 4179 4181 277 (set (reg:SF 21 xmm0 [2668])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0  S4 A32])) "ETAFLD2.f":729 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 4181 4180 4182 277 (set (reg:SF 21 xmm0 [2667])
        (div:SF (reg:SF 21 xmm0 [2668])
            (reg:SF 22 xmm1 [orig:1233 _1147 ] [1233]))) "ETAFLD2.f":729 841 {*fop_sf_1}
     (nil))
(insn 4182 4181 5658 277 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 rrnum+0 S4 A32])
        (reg:SF 21 xmm0 [2667])) "ETAFLD2.f":729 131 {*movsf_internal}
     (nil))
(jump_insn 5658 4182 5659 277 (set (pc)
        (label_ref 4189)) 683 {jump}
     (nil)
 -> 4189)
;;  succ:       279 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 5659 5658 5657)
;; basic block 278, loop depth 0, maybe hot
;;  prev block 277, next block 279, flags: (RTL, MODIFIED)
;;  pred:       276
;; bb 278 artificial_defs: { }
;; bb 278 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 2669
(code_label 5657 5659 4186 278 221 (nil) [1 uses])
(note 4186 5657 4187 278 [bb 278] NOTE_INSN_BASIC_BLOCK)
(insn 4187 4186 4188 278 (set (reg:SF 21 xmm0 [2669])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) "ETAFLD2.f":731 131 {*movsf_internal}
     (nil))
(insn 4188 4187 4189 278 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 rrnum+0 S4 A32])
        (reg:SF 21 xmm0 [2669])) "ETAFLD2.f":731 131 {*movsf_internal}
     (nil))
;;  succ:       279 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 279, loop depth 0, maybe hot
;;  prev block 278, next block 280, flags: (RTL, MODIFIED)
;;  pred:       278 (FALLTHRU)
;;              277 [always] 
;; bb 279 artificial_defs: { }
;; bb 279 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 1714 1715
(code_label 4189 4188 4190 279 149 (nil) [1 uses])
(note 4190 4189 4191 279 [bb 279] NOTE_INSN_BASIC_BLOCK)
(insn 4191 4190 4192 279 (set (reg:SI 1 dx [orig:1714 _2142 ] [1714])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f982824fc60 parallel>)
                    (const_int 8 [0x8]))) [1 parallel.jsta+0 S4 A64])) "ETAFLD2.f":734 86 {*movsi_internal}
     (nil))
(insn 4192 4191 4193 279 (set (reg:SI 0 ax [orig:1715 _2143 ] [1715])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f982824fc60 parallel>)
                    (const_int 12 [0xc]))) [1 parallel.jend+0 S4 A32])) "ETAFLD2.f":734 86 {*movsi_internal}
     (nil))
(insn 4193 4192 4235 279 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])
        (reg:SI 1 dx [orig:1714 _2142 ] [1714])) "ETAFLD2.f":734 86 {*movsi_internal}
     (nil))
;;  succ:       280 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1715

;; basic block 280, loop depth 0, maybe hot
;;  prev block 279, next block 281, flags: (RTL, MODIFIED)
;;  pred:       279 (FALLTHRU)
;;              284 [always] 
;; bb 280 artificial_defs: { }
;; bb 280 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1715
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1715
;; lr  def 	 17 [flags] 1716 2670
(code_label 4235 4193 4194 280 153 (nil) [1 uses])
(note 4194 4235 4195 280 [bb 280] NOTE_INSN_BASIC_BLOCK)
(insn 4195 4194 4196 280 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])
            (reg:SI 0 ax [orig:1715 _2143 ] [1715]))) "ETAFLD2.f":734 11 {*cmpsi_1}
     (nil))
(insn 4196 4195 4197 280 (set (reg:QI 1 dx [2670])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "ETAFLD2.f":734 678 {*setcc_qi}
     (nil))
(insn 4197 4196 4198 280 (set (reg:SI 1 dx [orig:1716 _2145 ] [1716])
        (zero_extend:SI (reg:QI 1 dx [2670]))) "ETAFLD2.f":734 140 {*zero_extendqisi2}
     (nil))
(insn 4198 4197 4199 280 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1716 _2145 ] [1716])
            (const_int 0 [0]))) "ETAFLD2.f":734 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 4199 4198 4200 280 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 5786)
            (pc))) "ETAFLD2.f":734 682 {*jcc}
     (nil)
 -> 5786)
;;  succ:       393
;;              281 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1715

;; basic block 281, loop depth 0, maybe hot
;;  prev block 280, next block 282, flags: (RTL, MODIFIED)
;;  pred:       280 (FALLTHRU)
;; bb 281 artificial_defs: { }
;; bb 281 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1715
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 4200 4199 4201 281 [bb 281] NOTE_INSN_BASIC_BLOCK)
(insn 4201 4200 4229 281 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
        (const_int 1 [0x1])) "ETAFLD2.f":735 86 {*movsi_internal}
     (nil))
;;  succ:       282 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1715

;; basic block 282, loop depth 0, maybe hot
;;  prev block 281, next block 283, flags: (RTL, MODIFIED)
;;  pred:       281 (FALLTHRU)
;;              283 [always] 
;; bb 282 artificial_defs: { }
;; bb 282 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1715
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1717 2671
(code_label 4229 4201 4202 282 152 (nil) [1 uses])
(note 4202 4229 4203 282 [bb 282] NOTE_INSN_BASIC_BLOCK)
(insn 4203 4202 4204 282 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
            (const_int 119 [0x77]))) "ETAFLD2.f":735 11 {*cmpsi_1}
     (nil))
(insn 4204 4203 4205 282 (set (reg:QI 1 dx [2671])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "ETAFLD2.f":735 678 {*setcc_qi}
     (nil))
(insn 4205 4204 4206 282 (set (reg:SI 1 dx [orig:1717 _2147 ] [1717])
        (zero_extend:SI (reg:QI 1 dx [2671]))) "ETAFLD2.f":735 140 {*zero_extendqisi2}
     (nil))
(insn 4206 4205 4207 282 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1717 _2147 ] [1717])
            (const_int 0 [0]))) "ETAFLD2.f":735 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 4207 4206 4208 282 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 5789)
            (pc))) "ETAFLD2.f":735 682 {*jcc}
     (nil)
 -> 5789)
;;  succ:       394
;;              283 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1715

;; basic block 283, loop depth 0, maybe hot
;;  prev block 282, next block 394, flags: (RTL, MODIFIED)
;;  pred:       282 (FALLTHRU)
;; bb 283 artificial_defs: { }
;; bb 283 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1715
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1234 1235 1236 1237 1238 1239 1240 1241 1242 1243 1244 1245 2672 2673 2674 2675 2676 2677
(note 4208 4207 4209 283 [bb 283] NOTE_INSN_BASIC_BLOCK)
(insn 4209 4208 4210 283 (set (reg:SI 1 dx [2672])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])) "ETAFLD2.f":736 86 {*movsi_internal}
     (nil))
(insn 4210 4209 4211 283 (set (reg:DI 1 dx [orig:1234 _1148 ] [1234])
        (sign_extend:DI (reg:SI 1 dx [2672]))) "ETAFLD2.f":736 149 {*extendsidi2_rex64}
     (nil))
(insn 4211 4210 4212 283 (parallel [
            (set (reg:DI 2 cx [orig:1235 _1149 ] [1235])
                (mult:DI (reg:DI 1 dx [orig:1234 _1148 ] [1234])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":736 349 {*muldi3_1}
     (nil))
(insn 4212 4211 4213 283 (set (reg:SI 1 dx [2673])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "ETAFLD2.f":736 86 {*movsi_internal}
     (nil))
(insn 4213 4212 4214 283 (set (reg:DI 1 dx [orig:1236 _1150 ] [1236])
        (sign_extend:DI (reg:SI 1 dx [2673]))) "ETAFLD2.f":736 149 {*extendsidi2_rex64}
     (nil))
(insn 4214 4213 4215 283 (parallel [
            (set (reg:DI 1 dx [orig:1237 _1151 ] [1237])
                (plus:DI (reg:DI 1 dx [orig:1236 _1150 ] [1236])
                    (reg:DI 2 cx [orig:1235 _1149 ] [1235])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":736 222 {*adddi_1}
     (nil))
(insn 4215 4214 4216 283 (parallel [
            (set (reg:DI 2 cx [orig:1238 _1152 ] [1238])
                (plus:DI (reg:DI 1 dx [orig:1237 _1151 ] [1237])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":736 222 {*adddi_1}
     (nil))
(insn 4216 4215 4217 283 (set (reg/f:DI 1 dx [2674])
        (symbol_ref:DI ("train.4474") [flags 0x202]  <var_decl 0x7f9827e6f3f0 train>)) "ETAFLD2.f":736 85 {*movdi_internal}
     (nil))
(insn 4217 4216 4218 283 (set (reg:SF 21 xmm0 [orig:1239 _1153 ] [1239])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:1238 _1152 ] [1238])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [2674])) [2 train S4 A32])) "ETAFLD2.f":736 131 {*movsf_internal}
     (nil))
(insn 4218 4217 4219 283 (set (reg:SI 1 dx [2675])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])) "ETAFLD2.f":736 86 {*movsi_internal}
     (nil))
(insn 4219 4218 4220 283 (set (reg:DI 1 dx [orig:1240 _1154 ] [1240])
        (sign_extend:DI (reg:SI 1 dx [2675]))) "ETAFLD2.f":736 149 {*extendsidi2_rex64}
     (nil))
(insn 4220 4219 4221 283 (parallel [
            (set (reg:DI 2 cx [orig:1241 _1155 ] [1241])
                (mult:DI (reg:DI 1 dx [orig:1240 _1154 ] [1240])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":736 349 {*muldi3_1}
     (nil))
(insn 4221 4220 4222 283 (set (reg:SI 1 dx [2676])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "ETAFLD2.f":736 86 {*movsi_internal}
     (nil))
(insn 4222 4221 4223 283 (set (reg:DI 1 dx [orig:1242 _1156 ] [1242])
        (sign_extend:DI (reg:SI 1 dx [2676]))) "ETAFLD2.f":736 149 {*extendsidi2_rex64}
     (nil))
(insn 4223 4222 4224 283 (parallel [
            (set (reg:DI 1 dx [orig:1243 _1157 ] [1243])
                (plus:DI (reg:DI 1 dx [orig:1242 _1156 ] [1242])
                    (reg:DI 2 cx [orig:1241 _1155 ] [1241])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":736 222 {*adddi_1}
     (nil))
(insn 4224 4223 4225 283 (parallel [
            (set (reg:DI 2 cx [orig:1244 _1158 ] [1244])
                (plus:DI (reg:DI 1 dx [orig:1243 _1157 ] [1243])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":736 222 {*adddi_1}
     (nil))
(insn 4225 4224 4226 283 (set (reg:SF 21 xmm0 [orig:1245 _1159 ] [1245])
        (mult:SF (reg:SF 21 xmm0 [orig:1239 _1153 ] [1239])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -56 [0xffffffffffffffc8])) [2 rrnum+0 S4 A32]))) "ETAFLD2.f":736 838 {*fop_sf_comm}
     (nil))
(insn 4226 4225 4227 283 (set (reg/f:DI 1 dx [2677])
        (symbol_ref:DI ("equiv.3.4378") [flags 0x202]  <var_decl 0x7f9828263750 equiv.3>)) "ETAFLD2.f":736 85 {*movdi_internal}
     (nil))
(insn 4227 4226 4228 283 (set (mem/j:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:1244 _1158 ] [1244])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [2677])) [27 equiv.3.egrid1 S4 A32])
        (reg:SF 21 xmm0 [orig:1245 _1159 ] [1245])) "ETAFLD2.f":736 131 {*movsf_internal}
     (nil))
(insn 4228 4227 5660 283 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":735 221 {*addsi_1}
     (nil))
(jump_insn 5660 4228 5661 283 (set (pc)
        (label_ref 4229)) "ETAFLD2.f":735 683 {jump}
     (nil)
 -> 4229)
;;  succ:       282 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1715

(barrier 5661 5660 5789)
;; basic block 394, loop depth 0, maybe hot
;;  prev block 283, next block 284, flags: (RTL, MODIFIED)
;;  pred:       282
;; bb 394 artificial_defs: { }
;; bb 394 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1715
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 5789 5661 5788 394 254 (nil) [1 uses])
(note 5788 5789 5790 394 [bb 394] NOTE_INSN_BASIC_BLOCK)
(insn 5790 5788 4232 394 (const_int 0 [0]) "ETAFLD2.f":736 718 {nop}
     (nil))
;;  succ:       284 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1715

;; basic block 284, loop depth 0, maybe hot
;;  prev block 394, next block 393, flags: (RTL, MODIFIED)
;;  pred:       394 [always]  (FALLTHRU)
;; bb 284 artificial_defs: { }
;; bb 284 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1715
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 4232 5790 4233 284 151 (nil) [0 uses])
(note 4233 4232 4234 284 [bb 284] NOTE_INSN_BASIC_BLOCK)
(insn 4234 4233 5662 284 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":734 221 {*addsi_1}
     (nil))
(jump_insn 5662 4234 5663 284 (set (pc)
        (label_ref 4235)) "ETAFLD2.f":734 683 {jump}
     (nil)
 -> 4235)
;;  succ:       280 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1715

(barrier 5663 5662 5786)
;; basic block 393, loop depth 0, maybe hot
;;  prev block 284, next block 285, flags: (RTL, MODIFIED)
;;  pred:       280
;; bb 393 artificial_defs: { }
;; bb 393 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 5786 5663 5785 393 253 (nil) [1 uses])
(note 5785 5786 5787 393 [bb 393] NOTE_INSN_BASIC_BLOCK)
(insn 5787 5785 4238 393 (const_int 0 [0]) "ETAFLD2.f":735 718 {nop}
     (nil))
;;  succ:       285 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 285, loop depth 0, maybe hot
;;  prev block 393, next block 286, flags: (RTL, MODIFIED)
;;  pred:       393 [always]  (FALLTHRU)
;; bb 285 artificial_defs: { }
;; bb 285 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 1246 2678 2679 2680 2681 2682 2683 2684 2686 2687 2688 2689
(code_label 4238 5787 4239 285 150 (nil) [0 uses])
(note 4239 4238 4240 285 [bb 285] NOTE_INSN_BASIC_BLOCK)
(insn 4240 4239 4241 285 (set (reg:DI 1 dx [2678])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [4 grid2+0 S8 A64])) "ETAFLD2.f":741 85 {*movdi_internal}
     (nil))
(insn 4241 4240 4242 285 (set (reg:DI 0 ax [2679])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "ETAFLD2.f":741 85 {*movdi_internal}
     (nil))
(insn 4242 4241 4243 285 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [11  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -832 [0xfffffffffffffcc0])) [11 jmout+0 S8 A64])) "ETAFLD2.f":741 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 4243 4242 4244 285 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [11  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -824 [0xfffffffffffffcc8])) [11 imout+0 S8 A64])) "ETAFLD2.f":741 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 4244 4243 4245 285 (set (reg:DI 38 r9)
        (reg:DI 1 dx [2678])) "ETAFLD2.f":741 85 {*movdi_internal}
     (nil))
(insn 4245 4244 4246 285 (set (reg:DI 37 r8)
        (reg:DI 0 ax [2679])) "ETAFLD2.f":741 85 {*movdi_internal}
     (nil))
(insn 4246 4245 4247 285 (set (reg:DI 2 cx)
        (symbol_ref:DI ("equiv.2.4368") [flags 0x202]  <var_decl 0x7f9828263510 equiv.2>)) "ETAFLD2.f":741 85 {*movdi_internal}
     (nil))
(insn 4247 4246 4248 285 (set (reg:DI 1 dx)
        (symbol_ref:DI ("equiv.3.4378") [flags 0x202]  <var_decl 0x7f9828263750 equiv.3>)) "ETAFLD2.f":741 85 {*movdi_internal}
     (nil))
(insn 4248 4247 4249 285 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f9827f94240 *.LC3>)) "ETAFLD2.f":741 85 {*movdi_internal}
     (nil))
(insn 4249 4248 4250 285 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC60") [flags 0x2]  <var_decl 0x7f9828035480 *.LC60>)) "ETAFLD2.f":741 85 {*movdi_internal}
     (nil))
(insn 4250 4249 4251 285 (set (reg:QI 0 ax)
        (const_int 0 [0])) "ETAFLD2.f":741 88 {*movqi_internal}
     (nil))
(call_insn 4251 4250 4252 285 (call (mem:QI (symbol_ref:DI ("e2out_") [flags 0x41]  <function_decl 0x7f9828228600 e2out>) [0 e2out S1 A8])
        (const_int 16 [0x10])) "ETAFLD2.f":741 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
(insn 4252 4251 4253 285 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":741 222 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 4253 4252 4254 285 (set (reg/f:DI 1 dx [2680])
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                (const_int 55216 [0xd7b0])))) "ETAFLD2.f":742 85 {*movdi_internal}
     (nil))
(insn 4254 4253 4255 285 (set (reg:DI 0 ax [2681])
        (const_int 0 [0])) "ETAFLD2.f":742 85 {*movdi_internal}
     (nil))
(insn 4255 4254 5896 285 (set (reg:DI 2 cx [2682])
        (const_int 12 [0xc])) "ETAFLD2.f":742 85 {*movdi_internal}
     (nil))
(insn 5896 4255 4256 285 (set (reg/f:DI 5 di [2680])
        (reg/f:DI 1 dx [2680])) "ETAFLD2.f":742 85 {*movdi_internal}
     (nil))
(insn 4256 5896 5897 285 (parallel [
            (set (reg:DI 2 cx [2682])
                (const_int 0 [0]))
            (set (reg/f:DI 5 di [2680])
                (plus:DI (ashift:DI (reg:DI 2 cx [2682])
                        (const_int 3 [0x3]))
                    (reg/f:DI 5 di [2680])))
            (set (mem/c:BLK (reg/f:DI 5 di [2680]) [1 rqstfld.id+0 S96 A128])
                (const_int 0 [0]))
            (use (reg:DI 0 ax [2681]))
            (use (reg:DI 2 cx [2682]))
        ]) "ETAFLD2.f":742 984 {*rep_stosdi_rex64}
     (nil))
(insn 5897 4256 4257 285 (set (reg/f:DI 1 dx [2680])
        (reg/f:DI 5 di [2680])) "ETAFLD2.f":742 85 {*movdi_internal}
     (nil))
(insn 4257 5897 4258 285 (set (mem/c:SI (reg/f:DI 1 dx [2680]) [1 rqstfld.id+96 S4 A128])
        (reg:SI 0 ax [2681])) "ETAFLD2.f":742 86 {*movsi_internal}
     (nil))
(insn 4258 4257 4259 285 (parallel [
            (set (reg/f:DI 1 dx [2680])
                (plus:DI (reg/f:DI 1 dx [2680])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":742 222 {*adddi_1}
     (nil))
(insn 4259 4258 4260 285 (set (reg:SI 0 ax [2683])
        (mem/c:SI (symbol_ref:DI ("outfil_") [flags 0x2]  <var_decl 0x7f982824fa20 outfil>) [1 outfil.itag+0 S4 A128])) "ETAFLD2.f":744 86 {*movsi_internal}
     (nil))
(insn 4260 4259 4261 285 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -216 [0xffffffffffffff28])) [1 ifhr+0 S4 A32])
        (reg:SI 0 ax [2683])) "ETAFLD2.f":744 86 {*movsi_internal}
     (nil))
(insn 4261 4260 4262 285 (set (reg:SF 21 xmm0 [orig:1246 _1160 ] [1246])
        (mem/c:SF (symbol_ref:DI ("acmclh_") [flags 0x2]  <var_decl 0x7f982f29bab0 acmclh>) [2 acmclh.theat+0 S4 A128])) "ETAFLD2.f":1 131 {*movsf_internal}
     (nil))
(insn 4262 4261 4263 285 (set (reg:SI 0 ax [2684])
        (fix:SI (reg:SF 21 xmm0 [orig:1246 _1160 ] [1246]))) "ETAFLD2.f":745 174 {fix_truncsfsi_sse}
     (nil))
(insn 4263 4262 4264 285 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -220 [0xffffffffffffff24])) [1 itheat+0 S4 A32])
        (reg:SI 0 ax [2684])) "ETAFLD2.f":745 86 {*movsi_internal}
     (nil))
(insn 4264 4263 4265 285 (set (reg:SI 0 ax [2686])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -216 [0xffffffffffffff28])) [1 ifhr+0 S4 A32])) "ETAFLD2.f":746 86 {*movsi_internal}
     (nil))
(insn 4265 4264 4266 285 (parallel [
            (set (reg:SI 0 ax [2688])
                (div:SI (reg:SI 0 ax [2686])
                    (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -220 [0xffffffffffffff24])) [1 itheat+0 S4 A32])))
            (set (reg:SI 1 dx [2687])
                (mod:SI (reg:SI 0 ax [2686])
                    (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -220 [0xffffffffffffff24])) [1 itheat+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":746 382 {*divmodsi4}
     (nil))
(insn 4266 4265 4267 285 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -224 [0xffffffffffffff20])) [1 ifincr+0 S4 A32])
        (reg:SI 1 dx [2687])) "ETAFLD2.f":746 86 {*movsi_internal}
     (nil))
(insn 4267 4266 4268 285 (set (reg:SI 0 ax [2689])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -216 [0xffffffffffffff28])) [1 ifhr+0 S4 A32])) "ETAFLD2.f":747 86 {*movsi_internal}
     (nil))
(insn 4268 4267 4269 285 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 55288 [0xd7f8]))) [1 rqstfld.id+72 S4 A64])
        (reg:SI 0 ax [2689])) "ETAFLD2.f":747 86 {*movsi_internal}
     (nil))
(insn 4269 4268 4270 285 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 55292 [0xd7fc]))) [1 rqstfld.id+76 S4 A32])
        (const_int 3 [0x3])) "ETAFLD2.f":748 86 {*movsi_internal}
     (nil))
(insn 4270 4269 4271 285 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -224 [0xffffffffffffff20])) [1 ifincr+0 S4 A32])
            (const_int 0 [0]))) "ETAFLD2.f":749 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 4271 4270 4272 285 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 4278)
            (pc))) "ETAFLD2.f":749 682 {*jcc}
     (nil)
 -> 4278)
;;  succ:       286 (FALLTHRU)
;;              287
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 286, loop depth 0, maybe hot
;;  prev block 285, next block 287, flags: (RTL, MODIFIED)
;;  pred:       285 (FALLTHRU)
;; bb 286 artificial_defs: { }
;; bb 286 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1247 2690
(note 4272 4271 4273 286 [bb 286] NOTE_INSN_BASIC_BLOCK)
(insn 4273 4272 4274 286 (set (reg:SI 0 ax [2690])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -216 [0xffffffffffffff28])) [1 ifhr+0 S4 A32])) "ETAFLD2.f":750 86 {*movsi_internal}
     (nil))
(insn 4274 4273 4275 286 (parallel [
            (set (reg:SI 0 ax [orig:1247 _1161 ] [1247])
                (minus:SI (reg:SI 0 ax [2690])
                    (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -220 [0xffffffffffffff24])) [1 itheat+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":750 277 {*subsi_1}
     (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -184 [0xffffffffffffff48])) [1 ifhr+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -188 [0xffffffffffffff44])) [1 itheat+0 S4 A32]))
        (nil)))
(insn 4275 4274 5664 286 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 55284 [0xd7f4]))) [1 rqstfld.id+68 S4 A32])
        (reg:SI 0 ax [orig:1247 _1161 ] [1247])) "ETAFLD2.f":750 86 {*movsi_internal}
     (nil))
(jump_insn 5664 4275 5665 286 (set (pc)
        (label_ref 4283)) 683 {jump}
     (nil)
 -> 4283)
;;  succ:       288 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 5665 5664 4278)
;; basic block 287, loop depth 0, maybe hot
;;  prev block 286, next block 288, flags: (RTL, MODIFIED)
;;  pred:       285
;; bb 287 artificial_defs: { }
;; bb 287 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1248 2691
(code_label 4278 5665 4279 287 154 (nil) [1 uses])
(note 4279 4278 4280 287 [bb 287] NOTE_INSN_BASIC_BLOCK)
(insn 4280 4279 4281 287 (set (reg:SI 0 ax [2691])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -216 [0xffffffffffffff28])) [1 ifhr+0 S4 A32])) "ETAFLD2.f":752 86 {*movsi_internal}
     (nil))
(insn 4281 4280 4282 287 (parallel [
            (set (reg:SI 0 ax [orig:1248 _1162 ] [1248])
                (minus:SI (reg:SI 0 ax [2691])
                    (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -224 [0xffffffffffffff20])) [1 ifincr+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":752 277 {*subsi_1}
     (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -184 [0xffffffffffffff48])) [1 ifhr+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -192 [0xffffffffffffff40])) [1 ifincr+0 S4 A32]))
        (nil)))
(insn 4282 4281 4283 287 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 55284 [0xd7f4]))) [1 rqstfld.id+68 S4 A32])
        (reg:SI 0 ax [orig:1248 _1162 ] [1248])) "ETAFLD2.f":752 86 {*movsi_internal}
     (nil))
;;  succ:       288 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 288, loop depth 0, maybe hot
;;  prev block 287, next block 289, flags: (RTL, MODIFIED)
;;  pred:       287 (FALLTHRU)
;;              286 [always] 
;; bb 288 artificial_defs: { }
;; bb 288 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1249
(code_label 4283 4282 4284 288 155 (nil) [1 uses])
(note 4284 4283 4285 288 [bb 288] NOTE_INSN_BASIC_BLOCK)
(insn 4285 4284 4286 288 (set (reg:SI 0 ax [orig:1249 _1163 ] [1249])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 55284 [0xd7f4]))) [1 rqstfld.id+68 S4 A32])) "ETAFLD2.f":754 86 {*movsi_internal}
     (nil))
(insn 4286 4285 4287 288 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 0 ax [orig:1249 _1163 ] [1249])
            (const_int 0 [0]))) "ETAFLD2.f":754 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 4287 4286 4288 288 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 4290)
            (pc))) "ETAFLD2.f":754 682 {*jcc}
     (nil)
 -> 4290)
;;  succ:       289 (FALLTHRU)
;;              290
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 289, loop depth 0, maybe hot
;;  prev block 288, next block 290, flags: (RTL, MODIFIED)
;;  pred:       288 (FALLTHRU)
;; bb 289 artificial_defs: { }
;; bb 289 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 4288 4287 4289 289 [bb 289] NOTE_INSN_BASIC_BLOCK)
(insn 4289 4288 4290 289 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 55284 [0xd7f4]))) [1 rqstfld.id+68 S4 A32])
        (const_int 0 [0])) "ETAFLD2.f":754 86 {*movsi_internal}
     (nil))
;;  succ:       290 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 290, loop depth 0, maybe hot
;;  prev block 289, next block 291, flags: (RTL, MODIFIED)
;;  pred:       288
;;              289 (FALLTHRU)
;; bb 290 artificial_defs: { }
;; bb 290 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1250 1251
(code_label 4290 4289 4291 290 156 (nil) [1 uses])
(note 4291 4290 4292 290 [bb 290] NOTE_INSN_BASIC_BLOCK)
(insn 4292 4291 4293 290 (set (reg:SI 0 ax [orig:1250 l.155_1164 ] [1250])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":755 86 {*movsi_internal}
     (nil))
(insn 4293 4292 4294 290 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -276 [0xfffffffffffffeec])) [1 lyr+0 S4 A32])
        (reg:SI 0 ax [orig:1250 l.155_1164 ] [1250])) "ETAFLD2.f":755 86 {*movsi_internal}
     (nil))
(insn 4294 4293 4295 290 (set (reg:SI 0 ax [orig:1251 itype.156_1165 ] [1251])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -268 [0xfffffffffffffef4])) [1 itype+0 S4 A32])) "ETAFLD2.f":756 86 {*movsi_internal}
     (nil))
(insn 4295 4294 4296 290 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [orig:1251 itype.156_1165 ] [1251])
            (const_int 1 [0x1]))) "ETAFLD2.f":756 11 {*cmpsi_1}
     (nil))
(jump_insn 4296 4295 4297 290 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 4299)
            (pc))) "ETAFLD2.f":756 682 {*jcc}
     (nil)
 -> 4299)
;;  succ:       291 (FALLTHRU)
;;              292
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 291, loop depth 0, maybe hot
;;  prev block 290, next block 292, flags: (RTL, MODIFIED)
;;  pred:       290 (FALLTHRU)
;; bb 291 artificial_defs: { }
;; bb 291 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 4297 4296 4298 291 [bb 291] NOTE_INSN_BASIC_BLOCK)
(insn 4298 4297 4299 291 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 55248 [0xd7d0]))) [1 rqstfld.id+32 S4 A128])
        (const_int 109 [0x6d])) "ETAFLD2.f":756 86 {*movsi_internal}
     (nil))
;;  succ:       292 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 292, loop depth 0, maybe hot
;;  prev block 291, next block 293, flags: (RTL, MODIFIED)
;;  pred:       290
;;              291 (FALLTHRU)
;; bb 292 artificial_defs: { }
;; bb 292 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 2692 2693 2694 2695
(code_label 4299 4298 4300 292 157 (nil) [1 uses])
(note 4300 4299 4301 292 [bb 292] NOTE_INSN_BASIC_BLOCK)
(insn 4301 4300 4302 292 (set (reg:DI 4 si [2692])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -832 [0xfffffffffffffcc0])) [11 jmout+0 S8 A64])) "ETAFLD2.f":757 85 {*movdi_internal}
     (nil))
(insn 4302 4301 4303 292 (set (reg:DI 2 cx [2693])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -824 [0xfffffffffffffcc8])) [11 imout+0 S8 A64])) "ETAFLD2.f":757 85 {*movdi_internal}
     (nil))
(insn 4303 4302 4304 292 (set (reg:DI 1 dx [2694])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "ETAFLD2.f":757 85 {*movdi_internal}
     (nil))
(insn 4304 4303 4305 292 (parallel [
            (set (reg:DI 0 ax [2695])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -276 [0xfffffffffffffeec])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":757 222 {*adddi_1}
     (nil))
(insn 4305 4304 4306 292 (set (reg:DI 38 r9)
        (reg:DI 4 si [2692])) "ETAFLD2.f":757 85 {*movdi_internal}
     (nil))
(insn 4306 4305 4307 292 (set (reg:DI 37 r8)
        (reg:DI 2 cx [2693])) "ETAFLD2.f":757 85 {*movdi_internal}
     (nil))
(insn 4307 4306 4308 292 (set (reg:DI 2 cx)
        (reg:DI 1 dx [2694])) "ETAFLD2.f":757 85 {*movdi_internal}
     (nil))
(insn 4308 4307 4309 292 (set (reg:DI 1 dx)
        (reg:DI 0 ax [2695])) "ETAFLD2.f":757 85 {*movdi_internal}
     (nil))
(insn 4309 4308 4310 292 (set (reg:DI 4 si)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                (const_int 324 [0x144])))) "ETAFLD2.f":757 85 {*movdi_internal}
     (nil))
(insn 4310 4309 4311 292 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                (const_int 4 [0x4])))) "ETAFLD2.f":757 85 {*movdi_internal}
     (nil))
(insn 4311 4310 4312 292 (set (reg:QI 0 ax)
        (const_int 0 [0])) "ETAFLD2.f":757 88 {*movqi_internal}
     (nil))
(call_insn 4312 4311 4313 292 (call (mem:QI (symbol_ref:DI ("output_") [flags 0x41]  <function_decl 0x7f9828228700 output>) [0 output S1 A8])
        (const_int 0 [0])) "ETAFLD2.f":757 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
;;  succ:       293 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 293, loop depth 0, maybe hot
;;  prev block 292, next block 294, flags: (RTL, MODIFIED)
;;  pred:       274
;;              292 (FALLTHRU)
;;              275
;; bb 293 artificial_defs: { }
;; bb 293 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1252
(code_label 4313 4312 4314 293 146 (nil) [2 uses])
(note 4314 4313 4315 293 [bb 293] NOTE_INSN_BASIC_BLOCK)
(insn 4315 4314 4316 293 (set (reg:SI 0 ax [orig:1252 _1166 ] [1252])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 328 [0x148]))) [1 rqstfld.iget+312 S4 A64])) "ETAFLD2.f":762 86 {*movsi_internal}
     (nil))
(insn 4316 4315 4317 293 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:1252 _1166 ] [1252])
            (const_int 0 [0]))) "ETAFLD2.f":762 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 4317 4316 4318 293 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 4518)
            (pc))) "ETAFLD2.f":762 682 {*jcc}
     (nil)
 -> 4518)
;;  succ:       294 (FALLTHRU)
;;              312
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 294, loop depth 0, maybe hot
;;  prev block 293, next block 295, flags: (RTL, MODIFIED)
;;  pred:       293 (FALLTHRU)
;; bb 294 artificial_defs: { }
;; bb 294 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1253 1254 1255 1256 1257 1258 1259 1260 2696 2697 2698 2699
(note 4318 4317 4319 294 [bb 294] NOTE_INSN_BASIC_BLOCK)
(insn 4319 4318 4320 294 (set (reg:SI 0 ax [orig:1253 _1167 ] [1253])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 328 [0x148]))) [1 rqstfld.iget+312 S4 A64])) "ETAFLD2.f":763 86 {*movsi_internal}
     (nil))
(insn 4320 4319 4321 294 (set (reg:DI 1 dx [orig:1254 _1168 ] [1254])
        (sign_extend:DI (reg:SI 0 ax [orig:1253 _1167 ] [1253]))) "ETAFLD2.f":763 149 {*extendsidi2_rex64}
     (nil))
(insn 4321 4320 4322 294 (set (reg:DI 0 ax [2696])
        (reg:DI 1 dx [orig:1254 _1168 ] [1254])) "ETAFLD2.f":763 85 {*movdi_internal}
     (nil))
(insn 4322 4321 4324 294 (parallel [
            (set (reg:DI 0 ax [2697])
                (ashift:DI (reg:DI 0 ax [2696])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":763 551 {*ashldi3_1}
     (nil))
(insn 4324 4322 4325 294 (parallel [
            (set (reg:DI 0 ax [2696])
                (minus:DI (reg:DI 0 ax [2696])
                    (reg:DI 1 dx [orig:1254 _1168 ] [1254])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":763 278 {*subdi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:1254 _1168 ] [1254])
            (const_int 15 [0xf]))
        (nil)))
(insn 4325 4324 4327 294 (parallel [
            (set (reg:DI 0 ax [2698])
                (ashift:DI (reg:DI 0 ax [2696])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":763 551 {*ashldi3_1}
     (nil))
(insn 4327 4325 4328 294 (set (reg:DI 1 dx [orig:1255 _1169 ] [1255])
        (reg:DI 0 ax [2696])) "ETAFLD2.f":763 85 {*movdi_internal}
     (nil))
(insn 4328 4327 4329 294 (set (reg:SI 0 ax [orig:1256 l.157_1170 ] [1256])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":763 86 {*movsi_internal}
     (nil))
(insn 4329 4328 4330 294 (set (reg:DI 0 ax [orig:1257 _1171 ] [1257])
        (sign_extend:DI (reg:SI 0 ax [orig:1256 l.157_1170 ] [1256]))) "ETAFLD2.f":763 149 {*extendsidi2_rex64}
     (nil))
(insn 4330 4329 4331 294 (parallel [
            (set (reg:DI 0 ax [orig:1258 _1172 ] [1258])
                (plus:DI (reg:DI 0 ax [orig:1257 _1171 ] [1257])
                    (reg:DI 1 dx [orig:1255 _1169 ] [1255])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":763 222 {*adddi_1}
     (nil))
(insn 4331 4330 4332 294 (parallel [
            (set (reg:DI 0 ax [orig:1259 _1173 ] [1259])
                (plus:DI (reg:DI 0 ax [orig:1258 _1172 ] [1258])
                    (const_int -61 [0xffffffffffffffc3])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":763 222 {*adddi_1}
     (nil))
(insn 4332 4331 4333 294 (parallel [
            (set (reg:DI 0 ax [2699])
                (plus:DI (reg:DI 0 ax [orig:1259 _1173 ] [1259])
                    (const_int 1404 [0x57c])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":763 222 {*adddi_1}
     (nil))
(insn 4333 4332 4334 294 (set (reg:SI 0 ax [orig:1260 _1174 ] [1260])
        (mem:SI (plus:DI (mult:DI (reg:DI 0 ax [2699])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)) [1 rqstfld.lvls S4 A32])) "ETAFLD2.f":763 86 {*movsi_internal}
     (nil))
(insn 4334 4333 4335 294 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:1260 _1174 ] [1260])
            (const_int 0 [0]))) "ETAFLD2.f":763 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 4335 4334 4336 294 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 4518)
            (pc))) "ETAFLD2.f":763 682 {*jcc}
     (nil)
 -> 4518)
;;  succ:       295 (FALLTHRU)
;;              312
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 295, loop depth 0, maybe hot
;;  prev block 294, next block 296, flags: (RTL, MODIFIED)
;;  pred:       294 (FALLTHRU)
;; bb 295 artificial_defs: { }
;; bb 295 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 1261 1262 1263 1264 1265 1266 1267 1268 1269 1270 1271 1272 1273 1274 1275 2700 2701 2702 2703 2704 2705 2706 2707
(note 4336 4335 4337 295 [bb 295] NOTE_INSN_BASIC_BLOCK)
(insn 4337 4336 4338 295 (set (reg:SI 0 ax [orig:1261 l.158_1175 ] [1261])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":764 86 {*movsi_internal}
     (nil))
(insn 4338 4337 4339 295 (parallel [
            (set (reg:SI 1 dx [orig:1262 _1176 ] [1262])
                (plus:SI (reg:SI 0 ax [orig:1261 l.158_1175 ] [1261])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":764 221 {*addsi_1}
     (nil))
(insn 4339 4338 4340 295 (set (reg:SI 0 ax [2700])
        (reg:SI 1 dx [orig:1262 _1176 ] [1262])) "ETAFLD2.f":764 86 {*movsi_internal}
     (nil))
(insn 4340 4339 4341 295 (parallel [
            (set (reg:SI 0 ax [2700])
                (ashift:SI (reg:SI 0 ax [2700])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":764 550 {*ashlsi3_1}
     (nil))
(insn 4341 4340 4342 295 (parallel [
            (set (reg:SI 0 ax [orig:1263 _1177 ] [1263])
                (plus:SI (reg:SI 0 ax [2700])
                    (reg:SI 1 dx [orig:1262 _1176 ] [1262])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":764 221 {*addsi_1}
     (expr_list:REG_EQUAL (mult:SI (reg:SI 1 dx [orig:1262 _1176 ] [1262])
            (const_int 9 [0x9]))
        (nil)))
(insn 4342 4341 4343 295 (parallel [
            (set (reg:SI 0 ax [orig:1264 _1178 ] [1264])
                (plus:SI (reg:SI 0 ax [orig:1263 _1177 ] [1263])
                    (const_int 52 [0x34])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":764 221 {*addsi_1}
     (nil))
(insn 4343 4342 4344 295 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -284 [0xfffffffffffffee4])) [1 nrec1+0 S4 A32])
        (reg:SI 0 ax [orig:1264 _1178 ] [1264])) "ETAFLD2.f":764 86 {*movsi_internal}
     (nil))
(insn 4344 4343 4345 295 (parallel [
            (set (reg:DI 1 dx [2701])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -284 [0xfffffffffffffee4])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":765 222 {*adddi_1}
     (nil))
(insn 4345 4344 4346 295 (parallel [
            (set (reg:DI 0 ax [2702])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -280 [0xfffffffffffffee8])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":765 222 {*adddi_1}
     (nil))
(insn 4346 4345 4347 295 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [31  S8 A64])
        (symbol_ref/f:DI ("*.LC55") [flags 0x2]  <var_decl 0x7f9828035240 *.LC55>)) "ETAFLD2.f":765 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 4347 4346 4348 295 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [8  S8 A64])
        (symbol_ref/f:DI ("*.LC20") [flags 0x2]  <var_decl 0x7f9827f94510 *.LC20>)) "ETAFLD2.f":765 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 4348 4347 4349 295 (set (reg:DI 38 r9)
        (reg:DI 1 dx [2701])) "ETAFLD2.f":765 85 {*movdi_internal}
     (nil))
(insn 4349 4348 4350 295 (set (reg:DI 37 r8)
        (reg:DI 0 ax [2702])) "ETAFLD2.f":765 85 {*movdi_internal}
     (nil))
(insn 4350 4349 4351 295 (set (reg:DI 2 cx)
        (const:DI (plus:DI (symbol_ref:DI ("outfil_") [flags 0x2]  <var_decl 0x7f982824fa20 outfil>)
                (const_int 4 [0x4])))) "ETAFLD2.f":765 85 {*movdi_internal}
     (nil))
(insn 4351 4350 4352 295 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC25") [flags 0x2]  <var_decl 0x7f9827f947e0 *.LC25>)) "ETAFLD2.f":765 85 {*movdi_internal}
     (nil))
(insn 4352 4351 4353 295 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC26") [flags 0x2]  <var_decl 0x7f9827f94870 *.LC26>)) "ETAFLD2.f":765 85 {*movdi_internal}
     (nil))
(insn 4353 4352 4354 295 (set (reg:DI 5 di)
        (symbol_ref:DI ("tcucn.4463") [flags 0x202]  <var_decl 0x7f9827e6be10 tcucn>)) "ETAFLD2.f":765 85 {*movdi_internal}
     (nil))
(insn 4354 4353 4355 295 (set (reg:QI 0 ax)
        (const_int 0 [0])) "ETAFLD2.f":765 88 {*movqi_internal}
     (nil))
(call_insn 4355 4354 4356 295 (call (mem:QI (symbol_ref:DI ("rdrst2d_") [flags 0x41]  <function_decl 0x7f9827e92300 rdrst2d>) [0 rdrst2d S1 A8])
        (const_int 16 [0x10])) "ETAFLD2.f":765 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
(insn 4356 4355 4357 295 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":765 222 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 4357 4356 4358 295 (set (reg:SI 0 ax [orig:1265 nrec1.159_1179 ] [1265])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -284 [0xfffffffffffffee4])) [1 nrec1+0 S4 A32])) "ETAFLD2.f":766 86 {*movsi_internal}
     (nil))
(insn 4358 4357 4359 295 (parallel [
            (set (reg:SI 0 ax [orig:1266 _1180 ] [1266])
                (plus:SI (reg:SI 0 ax [orig:1265 nrec1.159_1179 ] [1265])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":766 221 {*addsi_1}
     (nil))
(insn 4359 4358 4360 295 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -280 [0xfffffffffffffee8])) [1 nrec0+0 S4 A64])
        (reg:SI 0 ax [orig:1266 _1180 ] [1266])) "ETAFLD2.f":766 86 {*movsi_internal}
     (nil))
(insn 4360 4359 4361 295 (set (reg:SI 0 ax [orig:1267 _1181 ] [1267])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 328 [0x148]))) [1 rqstfld.iget+312 S4 A64])) "ETAFLD2.f":767 86 {*movsi_internal}
     (nil))
(insn 4361 4360 4362 295 (set (reg:DI 1 dx [orig:1268 _1182 ] [1268])
        (sign_extend:DI (reg:SI 0 ax [orig:1267 _1181 ] [1267]))) "ETAFLD2.f":767 149 {*extendsidi2_rex64}
     (nil))
(insn 4362 4361 4363 295 (set (reg:DI 0 ax [2703])
        (reg:DI 1 dx [orig:1268 _1182 ] [1268])) "ETAFLD2.f":767 85 {*movdi_internal}
     (nil))
(insn 4363 4362 4365 295 (parallel [
            (set (reg:DI 0 ax [2704])
                (ashift:DI (reg:DI 0 ax [2703])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":767 551 {*ashldi3_1}
     (nil))
(insn 4365 4363 4366 295 (parallel [
            (set (reg:DI 0 ax [2703])
                (minus:DI (reg:DI 0 ax [2703])
                    (reg:DI 1 dx [orig:1268 _1182 ] [1268])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":767 278 {*subdi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:1268 _1182 ] [1268])
            (const_int 15 [0xf]))
        (nil)))
(insn 4366 4365 4368 295 (parallel [
            (set (reg:DI 0 ax [2705])
                (ashift:DI (reg:DI 0 ax [2703])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":767 551 {*ashldi3_1}
     (nil))
(insn 4368 4366 4369 295 (set (reg:DI 1 dx [orig:1269 _1183 ] [1269])
        (reg:DI 0 ax [2703])) "ETAFLD2.f":767 85 {*movdi_internal}
     (nil))
(insn 4369 4368 4370 295 (set (reg:SI 0 ax [orig:1270 l.160_1184 ] [1270])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":767 86 {*movsi_internal}
     (nil))
(insn 4370 4369 4371 295 (set (reg:DI 0 ax [orig:1271 _1185 ] [1271])
        (sign_extend:DI (reg:SI 0 ax [orig:1270 l.160_1184 ] [1270]))) "ETAFLD2.f":767 149 {*extendsidi2_rex64}
     (nil))
(insn 4371 4370 4372 295 (parallel [
            (set (reg:DI 0 ax [orig:1272 _1186 ] [1272])
                (plus:DI (reg:DI 0 ax [orig:1271 _1185 ] [1271])
                    (reg:DI 1 dx [orig:1269 _1183 ] [1269])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":767 222 {*adddi_1}
     (nil))
(insn 4372 4371 4373 295 (parallel [
            (set (reg:DI 0 ax [orig:1273 _1187 ] [1273])
                (plus:DI (reg:DI 0 ax [orig:1272 _1186 ] [1272])
                    (const_int -61 [0xffffffffffffffc3])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":767 222 {*adddi_1}
     (nil))
(insn 4373 4372 4374 295 (parallel [
            (set (reg:DI 0 ax [2706])
                (plus:DI (reg:DI 0 ax [orig:1273 _1187 ] [1273])
                    (const_int 1404 [0x57c])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":767 222 {*adddi_1}
     (nil))
(insn 4374 4373 4375 295 (set (reg:SI 0 ax [orig:1274 _1188 ] [1274])
        (mem:SI (plus:DI (mult:DI (reg:DI 0 ax [2706])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)) [1 rqstfld.lvls S4 A32])) "ETAFLD2.f":767 86 {*movsi_internal}
     (nil))
(insn 4375 4374 4376 295 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -268 [0xfffffffffffffef4])) [1 itype+0 S4 A32])
        (reg:SI 0 ax [orig:1274 _1188 ] [1274])) "ETAFLD2.f":767 86 {*movsi_internal}
     (nil))
(insn 4376 4375 4377 295 (set (reg:SF 21 xmm0 [orig:1275 _1189 ] [1275])
        (mem/c:SF (const:DI (plus:DI (symbol_ref:DI ("acmclh_") [flags 0x2]  <var_decl 0x7f982f29bab0 acmclh>)
                    (const_int 12 [0xc]))) [2 acmclh.avcnvc+0 S4 A32])) "ETAFLD2.f":1 131 {*movsf_internal}
     (nil))
(insn 4377 4376 4378 295 (set (reg:SF 22 xmm1 [2707])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) "ETAFLD2.f":768 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 4378 4377 4379 295 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [orig:1275 _1189 ] [1275])
            (reg:SF 22 xmm1 [2707]))) "ETAFLD2.f":768 53 {*cmpisf}
     (nil))
(jump_insn 4379 4378 4383 295 (set (pc)
        (if_then_else (unle (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 5666)
            (pc))) "ETAFLD2.f":768 682 {*jcc}
     (nil)
 -> 5666)
;;  succ:       296 (FALLTHRU)
;;              297
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 296, loop depth 0, maybe hot
;;  prev block 295, next block 297, flags: (RTL, MODIFIED)
;;  pred:       295 (FALLTHRU)
;; bb 296 artificial_defs: { }
;; bb 296 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 1276 2708 2709
(note 4383 4379 4384 296 [bb 296] NOTE_INSN_BASIC_BLOCK)
(insn 4384 4383 4385 296 (set (reg:SF 22 xmm1 [orig:1276 _1190 ] [1276])
        (mem/c:SF (const:DI (plus:DI (symbol_ref:DI ("acmclh_") [flags 0x2]  <var_decl 0x7f982f29bab0 acmclh>)
                    (const_int 12 [0xc]))) [2 acmclh.avcnvc+0 S4 A32])) "ETAFLD2.f":1 131 {*movsf_internal}
     (nil))
(insn 4385 4384 4386 296 (set (reg:SF 21 xmm0 [2709])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0  S4 A32])) "ETAFLD2.f":769 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 4386 4385 4387 296 (set (reg:SF 21 xmm0 [2708])
        (div:SF (reg:SF 21 xmm0 [2709])
            (reg:SF 22 xmm1 [orig:1276 _1190 ] [1276]))) "ETAFLD2.f":769 841 {*fop_sf_1}
     (nil))
(insn 4387 4386 5667 296 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 rrnum+0 S4 A32])
        (reg:SF 21 xmm0 [2708])) "ETAFLD2.f":769 131 {*movsf_internal}
     (nil))
(jump_insn 5667 4387 5668 296 (set (pc)
        (label_ref 4394)) 683 {jump}
     (nil)
 -> 4394)
;;  succ:       298 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 5668 5667 5666)
;; basic block 297, loop depth 0, maybe hot
;;  prev block 296, next block 298, flags: (RTL, MODIFIED)
;;  pred:       295
;; bb 297 artificial_defs: { }
;; bb 297 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 2710
(code_label 5666 5668 4391 297 222 (nil) [1 uses])
(note 4391 5666 4392 297 [bb 297] NOTE_INSN_BASIC_BLOCK)
(insn 4392 4391 4393 297 (set (reg:SF 21 xmm0 [2710])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) "ETAFLD2.f":771 131 {*movsf_internal}
     (nil))
(insn 4393 4392 4394 297 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 rrnum+0 S4 A32])
        (reg:SF 21 xmm0 [2710])) "ETAFLD2.f":771 131 {*movsf_internal}
     (nil))
;;  succ:       298 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 298, loop depth 0, maybe hot
;;  prev block 297, next block 299, flags: (RTL, MODIFIED)
;;  pred:       297 (FALLTHRU)
;;              296 [always] 
;; bb 298 artificial_defs: { }
;; bb 298 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 1718 1719
(code_label 4394 4393 4395 298 161 (nil) [1 uses])
(note 4395 4394 4396 298 [bb 298] NOTE_INSN_BASIC_BLOCK)
(insn 4396 4395 4397 298 (set (reg:SI 1 dx [orig:1718 _2170 ] [1718])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f982824fc60 parallel>)
                    (const_int 8 [0x8]))) [1 parallel.jsta+0 S4 A64])) "ETAFLD2.f":774 86 {*movsi_internal}
     (nil))
(insn 4397 4396 4398 298 (set (reg:SI 0 ax [orig:1719 _2171 ] [1719])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f982824fc60 parallel>)
                    (const_int 12 [0xc]))) [1 parallel.jend+0 S4 A32])) "ETAFLD2.f":774 86 {*movsi_internal}
     (nil))
(insn 4398 4397 4440 298 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])
        (reg:SI 1 dx [orig:1718 _2170 ] [1718])) "ETAFLD2.f":774 86 {*movsi_internal}
     (nil))
;;  succ:       299 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1719

;; basic block 299, loop depth 0, maybe hot
;;  prev block 298, next block 300, flags: (RTL, MODIFIED)
;;  pred:       298 (FALLTHRU)
;;              303 [always] 
;; bb 299 artificial_defs: { }
;; bb 299 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1719
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1719
;; lr  def 	 17 [flags] 1720 2711
(code_label 4440 4398 4399 299 165 (nil) [1 uses])
(note 4399 4440 4400 299 [bb 299] NOTE_INSN_BASIC_BLOCK)
(insn 4400 4399 4401 299 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])
            (reg:SI 0 ax [orig:1719 _2171 ] [1719]))) "ETAFLD2.f":774 11 {*cmpsi_1}
     (nil))
(insn 4401 4400 4402 299 (set (reg:QI 1 dx [2711])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "ETAFLD2.f":774 678 {*setcc_qi}
     (nil))
(insn 4402 4401 4403 299 (set (reg:SI 1 dx [orig:1720 _2173 ] [1720])
        (zero_extend:SI (reg:QI 1 dx [2711]))) "ETAFLD2.f":774 140 {*zero_extendqisi2}
     (nil))
(insn 4403 4402 4404 299 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1720 _2173 ] [1720])
            (const_int 0 [0]))) "ETAFLD2.f":774 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 4404 4403 4405 299 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 5792)
            (pc))) "ETAFLD2.f":774 682 {*jcc}
     (nil)
 -> 5792)
;;  succ:       395
;;              300 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1719

;; basic block 300, loop depth 0, maybe hot
;;  prev block 299, next block 301, flags: (RTL, MODIFIED)
;;  pred:       299 (FALLTHRU)
;; bb 300 artificial_defs: { }
;; bb 300 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1719
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 4405 4404 4406 300 [bb 300] NOTE_INSN_BASIC_BLOCK)
(insn 4406 4405 4434 300 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
        (const_int 1 [0x1])) "ETAFLD2.f":775 86 {*movsi_internal}
     (nil))
;;  succ:       301 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1719

;; basic block 301, loop depth 0, maybe hot
;;  prev block 300, next block 302, flags: (RTL, MODIFIED)
;;  pred:       300 (FALLTHRU)
;;              302 [always] 
;; bb 301 artificial_defs: { }
;; bb 301 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1719
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1721 2712
(code_label 4434 4406 4407 301 164 (nil) [1 uses])
(note 4407 4434 4408 301 [bb 301] NOTE_INSN_BASIC_BLOCK)
(insn 4408 4407 4409 301 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
            (const_int 119 [0x77]))) "ETAFLD2.f":775 11 {*cmpsi_1}
     (nil))
(insn 4409 4408 4410 301 (set (reg:QI 1 dx [2712])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "ETAFLD2.f":775 678 {*setcc_qi}
     (nil))
(insn 4410 4409 4411 301 (set (reg:SI 1 dx [orig:1721 _2175 ] [1721])
        (zero_extend:SI (reg:QI 1 dx [2712]))) "ETAFLD2.f":775 140 {*zero_extendqisi2}
     (nil))
(insn 4411 4410 4412 301 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1721 _2175 ] [1721])
            (const_int 0 [0]))) "ETAFLD2.f":775 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 4412 4411 4413 301 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 5795)
            (pc))) "ETAFLD2.f":775 682 {*jcc}
     (nil)
 -> 5795)
;;  succ:       396
;;              302 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1719

;; basic block 302, loop depth 0, maybe hot
;;  prev block 301, next block 396, flags: (RTL, MODIFIED)
;;  pred:       301 (FALLTHRU)
;; bb 302 artificial_defs: { }
;; bb 302 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1719
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1277 1278 1279 1280 1281 1282 1283 1284 1285 1286 1287 1288 2713 2714 2715 2716 2717 2718
(note 4413 4412 4414 302 [bb 302] NOTE_INSN_BASIC_BLOCK)
(insn 4414 4413 4415 302 (set (reg:SI 1 dx [2713])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])) "ETAFLD2.f":776 86 {*movsi_internal}
     (nil))
(insn 4415 4414 4416 302 (set (reg:DI 1 dx [orig:1277 _1191 ] [1277])
        (sign_extend:DI (reg:SI 1 dx [2713]))) "ETAFLD2.f":776 149 {*extendsidi2_rex64}
     (nil))
(insn 4416 4415 4417 302 (parallel [
            (set (reg:DI 2 cx [orig:1278 _1192 ] [1278])
                (mult:DI (reg:DI 1 dx [orig:1277 _1191 ] [1277])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":776 349 {*muldi3_1}
     (nil))
(insn 4417 4416 4418 302 (set (reg:SI 1 dx [2714])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "ETAFLD2.f":776 86 {*movsi_internal}
     (nil))
(insn 4418 4417 4419 302 (set (reg:DI 1 dx [orig:1279 _1193 ] [1279])
        (sign_extend:DI (reg:SI 1 dx [2714]))) "ETAFLD2.f":776 149 {*extendsidi2_rex64}
     (nil))
(insn 4419 4418 4420 302 (parallel [
            (set (reg:DI 1 dx [orig:1280 _1194 ] [1280])
                (plus:DI (reg:DI 1 dx [orig:1279 _1193 ] [1279])
                    (reg:DI 2 cx [orig:1278 _1192 ] [1278])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":776 222 {*adddi_1}
     (nil))
(insn 4420 4419 4421 302 (parallel [
            (set (reg:DI 2 cx [orig:1281 _1195 ] [1281])
                (plus:DI (reg:DI 1 dx [orig:1280 _1194 ] [1280])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":776 222 {*adddi_1}
     (nil))
(insn 4421 4420 4422 302 (set (reg/f:DI 1 dx [2715])
        (symbol_ref:DI ("tcucn.4463") [flags 0x202]  <var_decl 0x7f9827e6be10 tcucn>)) "ETAFLD2.f":776 85 {*movdi_internal}
     (nil))
(insn 4422 4421 4423 302 (set (reg:SF 21 xmm0 [orig:1282 _1196 ] [1282])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:1281 _1195 ] [1281])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [2715])) [2 tcucn S4 A32])) "ETAFLD2.f":776 131 {*movsf_internal}
     (nil))
(insn 4423 4422 4424 302 (set (reg:SI 1 dx [2716])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])) "ETAFLD2.f":776 86 {*movsi_internal}
     (nil))
(insn 4424 4423 4425 302 (set (reg:DI 1 dx [orig:1283 _1197 ] [1283])
        (sign_extend:DI (reg:SI 1 dx [2716]))) "ETAFLD2.f":776 149 {*extendsidi2_rex64}
     (nil))
(insn 4425 4424 4426 302 (parallel [
            (set (reg:DI 2 cx [orig:1284 _1198 ] [1284])
                (mult:DI (reg:DI 1 dx [orig:1283 _1197 ] [1283])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":776 349 {*muldi3_1}
     (nil))
(insn 4426 4425 4427 302 (set (reg:SI 1 dx [2717])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "ETAFLD2.f":776 86 {*movsi_internal}
     (nil))
(insn 4427 4426 4428 302 (set (reg:DI 1 dx [orig:1285 _1199 ] [1285])
        (sign_extend:DI (reg:SI 1 dx [2717]))) "ETAFLD2.f":776 149 {*extendsidi2_rex64}
     (nil))
(insn 4428 4427 4429 302 (parallel [
            (set (reg:DI 1 dx [orig:1286 _1200 ] [1286])
                (plus:DI (reg:DI 1 dx [orig:1285 _1199 ] [1285])
                    (reg:DI 2 cx [orig:1284 _1198 ] [1284])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":776 222 {*adddi_1}
     (nil))
(insn 4429 4428 4430 302 (parallel [
            (set (reg:DI 2 cx [orig:1287 _1201 ] [1287])
                (plus:DI (reg:DI 1 dx [orig:1286 _1200 ] [1286])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":776 222 {*adddi_1}
     (nil))
(insn 4430 4429 4431 302 (set (reg:SF 21 xmm0 [orig:1288 _1202 ] [1288])
        (mult:SF (reg:SF 21 xmm0 [orig:1282 _1196 ] [1282])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -56 [0xffffffffffffffc8])) [2 rrnum+0 S4 A32]))) "ETAFLD2.f":776 838 {*fop_sf_comm}
     (nil))
(insn 4431 4430 4432 302 (set (reg/f:DI 1 dx [2718])
        (symbol_ref:DI ("equiv.3.4378") [flags 0x202]  <var_decl 0x7f9828263750 equiv.3>)) "ETAFLD2.f":776 85 {*movdi_internal}
     (nil))
(insn 4432 4431 4433 302 (set (mem/j:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:1287 _1201 ] [1287])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [2718])) [27 equiv.3.egrid1 S4 A32])
        (reg:SF 21 xmm0 [orig:1288 _1202 ] [1288])) "ETAFLD2.f":776 131 {*movsf_internal}
     (nil))
(insn 4433 4432 5669 302 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":775 221 {*addsi_1}
     (nil))
(jump_insn 5669 4433 5670 302 (set (pc)
        (label_ref 4434)) "ETAFLD2.f":775 683 {jump}
     (nil)
 -> 4434)
;;  succ:       301 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1719

(barrier 5670 5669 5795)
;; basic block 396, loop depth 0, maybe hot
;;  prev block 302, next block 303, flags: (RTL, MODIFIED)
;;  pred:       301
;; bb 396 artificial_defs: { }
;; bb 396 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1719
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 5795 5670 5794 396 256 (nil) [1 uses])
(note 5794 5795 5796 396 [bb 396] NOTE_INSN_BASIC_BLOCK)
(insn 5796 5794 4437 396 (const_int 0 [0]) "ETAFLD2.f":776 718 {nop}
     (nil))
;;  succ:       303 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1719

;; basic block 303, loop depth 0, maybe hot
;;  prev block 396, next block 395, flags: (RTL, MODIFIED)
;;  pred:       396 [always]  (FALLTHRU)
;; bb 303 artificial_defs: { }
;; bb 303 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1719
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 4437 5796 4438 303 163 (nil) [0 uses])
(note 4438 4437 4439 303 [bb 303] NOTE_INSN_BASIC_BLOCK)
(insn 4439 4438 5671 303 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":774 221 {*addsi_1}
     (nil))
(jump_insn 5671 4439 5672 303 (set (pc)
        (label_ref 4440)) "ETAFLD2.f":774 683 {jump}
     (nil)
 -> 4440)
;;  succ:       299 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1719

(barrier 5672 5671 5792)
;; basic block 395, loop depth 0, maybe hot
;;  prev block 303, next block 304, flags: (RTL, MODIFIED)
;;  pred:       299
;; bb 395 artificial_defs: { }
;; bb 395 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 5792 5672 5791 395 255 (nil) [1 uses])
(note 5791 5792 5793 395 [bb 395] NOTE_INSN_BASIC_BLOCK)
(insn 5793 5791 4443 395 (const_int 0 [0]) "ETAFLD2.f":775 718 {nop}
     (nil))
;;  succ:       304 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 304, loop depth 0, maybe hot
;;  prev block 395, next block 305, flags: (RTL, MODIFIED)
;;  pred:       395 [always]  (FALLTHRU)
;; bb 304 artificial_defs: { }
;; bb 304 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 1289 2719 2720 2721 2722 2723 2724 2725 2727 2728 2729 2730
(code_label 4443 5793 4444 304 162 (nil) [0 uses])
(note 4444 4443 4445 304 [bb 304] NOTE_INSN_BASIC_BLOCK)
(insn 4445 4444 4446 304 (set (reg:DI 1 dx [2719])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [4 grid2+0 S8 A64])) "ETAFLD2.f":781 85 {*movdi_internal}
     (nil))
(insn 4446 4445 4447 304 (set (reg:DI 0 ax [2720])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "ETAFLD2.f":781 85 {*movdi_internal}
     (nil))
(insn 4447 4446 4448 304 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [11  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -832 [0xfffffffffffffcc0])) [11 jmout+0 S8 A64])) "ETAFLD2.f":781 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 4448 4447 4449 304 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [11  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -824 [0xfffffffffffffcc8])) [11 imout+0 S8 A64])) "ETAFLD2.f":781 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 4449 4448 4450 304 (set (reg:DI 38 r9)
        (reg:DI 1 dx [2719])) "ETAFLD2.f":781 85 {*movdi_internal}
     (nil))
(insn 4450 4449 4451 304 (set (reg:DI 37 r8)
        (reg:DI 0 ax [2720])) "ETAFLD2.f":781 85 {*movdi_internal}
     (nil))
(insn 4451 4450 4452 304 (set (reg:DI 2 cx)
        (symbol_ref:DI ("equiv.2.4368") [flags 0x202]  <var_decl 0x7f9828263510 equiv.2>)) "ETAFLD2.f":781 85 {*movdi_internal}
     (nil))
(insn 4452 4451 4453 304 (set (reg:DI 1 dx)
        (symbol_ref:DI ("equiv.3.4378") [flags 0x202]  <var_decl 0x7f9828263750 equiv.3>)) "ETAFLD2.f":781 85 {*movdi_internal}
     (nil))
(insn 4453 4452 4454 304 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f9827f94240 *.LC3>)) "ETAFLD2.f":781 85 {*movdi_internal}
     (nil))
(insn 4454 4453 4455 304 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC61") [flags 0x2]  <var_decl 0x7f9828035510 *.LC61>)) "ETAFLD2.f":781 85 {*movdi_internal}
     (nil))
(insn 4455 4454 4456 304 (set (reg:QI 0 ax)
        (const_int 0 [0])) "ETAFLD2.f":781 88 {*movqi_internal}
     (nil))
(call_insn 4456 4455 4457 304 (call (mem:QI (symbol_ref:DI ("e2out_") [flags 0x41]  <function_decl 0x7f9828228600 e2out>) [0 e2out S1 A8])
        (const_int 16 [0x10])) "ETAFLD2.f":781 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
(insn 4457 4456 4458 304 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":781 222 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 4458 4457 4459 304 (set (reg/f:DI 1 dx [2721])
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                (const_int 55216 [0xd7b0])))) "ETAFLD2.f":782 85 {*movdi_internal}
     (nil))
(insn 4459 4458 4460 304 (set (reg:DI 0 ax [2722])
        (const_int 0 [0])) "ETAFLD2.f":782 85 {*movdi_internal}
     (nil))
(insn 4460 4459 5898 304 (set (reg:DI 2 cx [2723])
        (const_int 12 [0xc])) "ETAFLD2.f":782 85 {*movdi_internal}
     (nil))
(insn 5898 4460 4461 304 (set (reg/f:DI 5 di [2721])
        (reg/f:DI 1 dx [2721])) "ETAFLD2.f":782 85 {*movdi_internal}
     (nil))
(insn 4461 5898 5899 304 (parallel [
            (set (reg:DI 2 cx [2723])
                (const_int 0 [0]))
            (set (reg/f:DI 5 di [2721])
                (plus:DI (ashift:DI (reg:DI 2 cx [2723])
                        (const_int 3 [0x3]))
                    (reg/f:DI 5 di [2721])))
            (set (mem/c:BLK (reg/f:DI 5 di [2721]) [1 rqstfld.id+0 S96 A128])
                (const_int 0 [0]))
            (use (reg:DI 0 ax [2722]))
            (use (reg:DI 2 cx [2723]))
        ]) "ETAFLD2.f":782 984 {*rep_stosdi_rex64}
     (nil))
(insn 5899 4461 4462 304 (set (reg/f:DI 1 dx [2721])
        (reg/f:DI 5 di [2721])) "ETAFLD2.f":782 85 {*movdi_internal}
     (nil))
(insn 4462 5899 4463 304 (set (mem/c:SI (reg/f:DI 1 dx [2721]) [1 rqstfld.id+96 S4 A128])
        (reg:SI 0 ax [2722])) "ETAFLD2.f":782 86 {*movsi_internal}
     (nil))
(insn 4463 4462 4464 304 (parallel [
            (set (reg/f:DI 1 dx [2721])
                (plus:DI (reg/f:DI 1 dx [2721])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":782 222 {*adddi_1}
     (nil))
(insn 4464 4463 4465 304 (set (reg:SI 0 ax [2724])
        (mem/c:SI (symbol_ref:DI ("outfil_") [flags 0x2]  <var_decl 0x7f982824fa20 outfil>) [1 outfil.itag+0 S4 A128])) "ETAFLD2.f":784 86 {*movsi_internal}
     (nil))
(insn 4465 4464 4466 304 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -216 [0xffffffffffffff28])) [1 ifhr+0 S4 A32])
        (reg:SI 0 ax [2724])) "ETAFLD2.f":784 86 {*movsi_internal}
     (nil))
(insn 4466 4465 4467 304 (set (reg:SF 21 xmm0 [orig:1289 _1203 ] [1289])
        (mem/c:SF (symbol_ref:DI ("acmclh_") [flags 0x2]  <var_decl 0x7f982f29bab0 acmclh>) [2 acmclh.theat+0 S4 A128])) "ETAFLD2.f":1 131 {*movsf_internal}
     (nil))
(insn 4467 4466 4468 304 (set (reg:SI 0 ax [2725])
        (fix:SI (reg:SF 21 xmm0 [orig:1289 _1203 ] [1289]))) "ETAFLD2.f":785 174 {fix_truncsfsi_sse}
     (nil))
(insn 4468 4467 4469 304 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -220 [0xffffffffffffff24])) [1 itheat+0 S4 A32])
        (reg:SI 0 ax [2725])) "ETAFLD2.f":785 86 {*movsi_internal}
     (nil))
(insn 4469 4468 4470 304 (set (reg:SI 0 ax [2727])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -216 [0xffffffffffffff28])) [1 ifhr+0 S4 A32])) "ETAFLD2.f":786 86 {*movsi_internal}
     (nil))
(insn 4470 4469 4471 304 (parallel [
            (set (reg:SI 0 ax [2729])
                (div:SI (reg:SI 0 ax [2727])
                    (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -220 [0xffffffffffffff24])) [1 itheat+0 S4 A32])))
            (set (reg:SI 1 dx [2728])
                (mod:SI (reg:SI 0 ax [2727])
                    (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -220 [0xffffffffffffff24])) [1 itheat+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":786 382 {*divmodsi4}
     (nil))
(insn 4471 4470 4472 304 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -224 [0xffffffffffffff20])) [1 ifincr+0 S4 A32])
        (reg:SI 1 dx [2728])) "ETAFLD2.f":786 86 {*movsi_internal}
     (nil))
(insn 4472 4471 4473 304 (set (reg:SI 0 ax [2730])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -216 [0xffffffffffffff28])) [1 ifhr+0 S4 A32])) "ETAFLD2.f":787 86 {*movsi_internal}
     (nil))
(insn 4473 4472 4474 304 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 55288 [0xd7f8]))) [1 rqstfld.id+72 S4 A64])
        (reg:SI 0 ax [2730])) "ETAFLD2.f":787 86 {*movsi_internal}
     (nil))
(insn 4474 4473 4475 304 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 55292 [0xd7fc]))) [1 rqstfld.id+76 S4 A32])
        (const_int 3 [0x3])) "ETAFLD2.f":788 86 {*movsi_internal}
     (nil))
(insn 4475 4474 4476 304 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -224 [0xffffffffffffff20])) [1 ifincr+0 S4 A32])
            (const_int 0 [0]))) "ETAFLD2.f":789 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 4476 4475 4477 304 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 4483)
            (pc))) "ETAFLD2.f":789 682 {*jcc}
     (nil)
 -> 4483)
;;  succ:       305 (FALLTHRU)
;;              306
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 305, loop depth 0, maybe hot
;;  prev block 304, next block 306, flags: (RTL, MODIFIED)
;;  pred:       304 (FALLTHRU)
;; bb 305 artificial_defs: { }
;; bb 305 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1290 2731
(note 4477 4476 4478 305 [bb 305] NOTE_INSN_BASIC_BLOCK)
(insn 4478 4477 4479 305 (set (reg:SI 0 ax [2731])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -216 [0xffffffffffffff28])) [1 ifhr+0 S4 A32])) "ETAFLD2.f":790 86 {*movsi_internal}
     (nil))
(insn 4479 4478 4480 305 (parallel [
            (set (reg:SI 0 ax [orig:1290 _1204 ] [1290])
                (minus:SI (reg:SI 0 ax [2731])
                    (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -220 [0xffffffffffffff24])) [1 itheat+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":790 277 {*subsi_1}
     (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -184 [0xffffffffffffff48])) [1 ifhr+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -188 [0xffffffffffffff44])) [1 itheat+0 S4 A32]))
        (nil)))
(insn 4480 4479 5673 305 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 55284 [0xd7f4]))) [1 rqstfld.id+68 S4 A32])
        (reg:SI 0 ax [orig:1290 _1204 ] [1290])) "ETAFLD2.f":790 86 {*movsi_internal}
     (nil))
(jump_insn 5673 4480 5674 305 (set (pc)
        (label_ref 4488)) 683 {jump}
     (nil)
 -> 4488)
;;  succ:       307 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 5674 5673 4483)
;; basic block 306, loop depth 0, maybe hot
;;  prev block 305, next block 307, flags: (RTL, MODIFIED)
;;  pred:       304
;; bb 306 artificial_defs: { }
;; bb 306 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1291 2732
(code_label 4483 5674 4484 306 166 (nil) [1 uses])
(note 4484 4483 4485 306 [bb 306] NOTE_INSN_BASIC_BLOCK)
(insn 4485 4484 4486 306 (set (reg:SI 0 ax [2732])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -216 [0xffffffffffffff28])) [1 ifhr+0 S4 A32])) "ETAFLD2.f":792 86 {*movsi_internal}
     (nil))
(insn 4486 4485 4487 306 (parallel [
            (set (reg:SI 0 ax [orig:1291 _1205 ] [1291])
                (minus:SI (reg:SI 0 ax [2732])
                    (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -224 [0xffffffffffffff20])) [1 ifincr+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":792 277 {*subsi_1}
     (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -184 [0xffffffffffffff48])) [1 ifhr+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -192 [0xffffffffffffff40])) [1 ifincr+0 S4 A32]))
        (nil)))
(insn 4487 4486 4488 306 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 55284 [0xd7f4]))) [1 rqstfld.id+68 S4 A32])
        (reg:SI 0 ax [orig:1291 _1205 ] [1291])) "ETAFLD2.f":792 86 {*movsi_internal}
     (nil))
;;  succ:       307 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 307, loop depth 0, maybe hot
;;  prev block 306, next block 308, flags: (RTL, MODIFIED)
;;  pred:       306 (FALLTHRU)
;;              305 [always] 
;; bb 307 artificial_defs: { }
;; bb 307 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1292
(code_label 4488 4487 4489 307 167 (nil) [1 uses])
(note 4489 4488 4490 307 [bb 307] NOTE_INSN_BASIC_BLOCK)
(insn 4490 4489 4491 307 (set (reg:SI 0 ax [orig:1292 _1206 ] [1292])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 55284 [0xd7f4]))) [1 rqstfld.id+68 S4 A32])) "ETAFLD2.f":794 86 {*movsi_internal}
     (nil))
(insn 4491 4490 4492 307 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 0 ax [orig:1292 _1206 ] [1292])
            (const_int 0 [0]))) "ETAFLD2.f":794 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 4492 4491 4493 307 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 4495)
            (pc))) "ETAFLD2.f":794 682 {*jcc}
     (nil)
 -> 4495)
;;  succ:       308 (FALLTHRU)
;;              309
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 308, loop depth 0, maybe hot
;;  prev block 307, next block 309, flags: (RTL, MODIFIED)
;;  pred:       307 (FALLTHRU)
;; bb 308 artificial_defs: { }
;; bb 308 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 4493 4492 4494 308 [bb 308] NOTE_INSN_BASIC_BLOCK)
(insn 4494 4493 4495 308 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 55284 [0xd7f4]))) [1 rqstfld.id+68 S4 A32])
        (const_int 0 [0])) "ETAFLD2.f":794 86 {*movsi_internal}
     (nil))
;;  succ:       309 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 309, loop depth 0, maybe hot
;;  prev block 308, next block 310, flags: (RTL, MODIFIED)
;;  pred:       307
;;              308 (FALLTHRU)
;; bb 309 artificial_defs: { }
;; bb 309 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1293 1294
(code_label 4495 4494 4496 309 168 (nil) [1 uses])
(note 4496 4495 4497 309 [bb 309] NOTE_INSN_BASIC_BLOCK)
(insn 4497 4496 4498 309 (set (reg:SI 0 ax [orig:1293 l.161_1207 ] [1293])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":795 86 {*movsi_internal}
     (nil))
(insn 4498 4497 4499 309 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -276 [0xfffffffffffffeec])) [1 lyr+0 S4 A32])
        (reg:SI 0 ax [orig:1293 l.161_1207 ] [1293])) "ETAFLD2.f":795 86 {*movsi_internal}
     (nil))
(insn 4499 4498 4500 309 (set (reg:SI 0 ax [orig:1294 itype.162_1208 ] [1294])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -268 [0xfffffffffffffef4])) [1 itype+0 S4 A32])) "ETAFLD2.f":796 86 {*movsi_internal}
     (nil))
(insn 4500 4499 4501 309 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [orig:1294 itype.162_1208 ] [1294])
            (const_int 1 [0x1]))) "ETAFLD2.f":796 11 {*cmpsi_1}
     (nil))
(jump_insn 4501 4500 4502 309 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 4504)
            (pc))) "ETAFLD2.f":796 682 {*jcc}
     (nil)
 -> 4504)
;;  succ:       310 (FALLTHRU)
;;              311
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 310, loop depth 0, maybe hot
;;  prev block 309, next block 311, flags: (RTL, MODIFIED)
;;  pred:       309 (FALLTHRU)
;; bb 310 artificial_defs: { }
;; bb 310 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 4502 4501 4503 310 [bb 310] NOTE_INSN_BASIC_BLOCK)
(insn 4503 4502 4504 310 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 55248 [0xd7d0]))) [1 rqstfld.id+32 S4 A128])
        (const_int 109 [0x6d])) "ETAFLD2.f":796 86 {*movsi_internal}
     (nil))
;;  succ:       311 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 311, loop depth 0, maybe hot
;;  prev block 310, next block 312, flags: (RTL, MODIFIED)
;;  pred:       309
;;              310 (FALLTHRU)
;; bb 311 artificial_defs: { }
;; bb 311 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 2733 2734 2735 2736
(code_label 4504 4503 4505 311 169 (nil) [1 uses])
(note 4505 4504 4506 311 [bb 311] NOTE_INSN_BASIC_BLOCK)
(insn 4506 4505 4507 311 (set (reg:DI 4 si [2733])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -832 [0xfffffffffffffcc0])) [11 jmout+0 S8 A64])) "ETAFLD2.f":797 85 {*movdi_internal}
     (nil))
(insn 4507 4506 4508 311 (set (reg:DI 2 cx [2734])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -824 [0xfffffffffffffcc8])) [11 imout+0 S8 A64])) "ETAFLD2.f":797 85 {*movdi_internal}
     (nil))
(insn 4508 4507 4509 311 (set (reg:DI 1 dx [2735])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "ETAFLD2.f":797 85 {*movdi_internal}
     (nil))
(insn 4509 4508 4510 311 (parallel [
            (set (reg:DI 0 ax [2736])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -276 [0xfffffffffffffeec])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":797 222 {*adddi_1}
     (nil))
(insn 4510 4509 4511 311 (set (reg:DI 38 r9)
        (reg:DI 4 si [2733])) "ETAFLD2.f":797 85 {*movdi_internal}
     (nil))
(insn 4511 4510 4512 311 (set (reg:DI 37 r8)
        (reg:DI 2 cx [2734])) "ETAFLD2.f":797 85 {*movdi_internal}
     (nil))
(insn 4512 4511 4513 311 (set (reg:DI 2 cx)
        (reg:DI 1 dx [2735])) "ETAFLD2.f":797 85 {*movdi_internal}
     (nil))
(insn 4513 4512 4514 311 (set (reg:DI 1 dx)
        (reg:DI 0 ax [2736])) "ETAFLD2.f":797 85 {*movdi_internal}
     (nil))
(insn 4514 4513 4515 311 (set (reg:DI 4 si)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                (const_int 328 [0x148])))) "ETAFLD2.f":797 85 {*movdi_internal}
     (nil))
(insn 4515 4514 4516 311 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                (const_int 4 [0x4])))) "ETAFLD2.f":797 85 {*movdi_internal}
     (nil))
(insn 4516 4515 4517 311 (set (reg:QI 0 ax)
        (const_int 0 [0])) "ETAFLD2.f":797 88 {*movqi_internal}
     (nil))
(call_insn 4517 4516 4518 311 (call (mem:QI (symbol_ref:DI ("output_") [flags 0x41]  <function_decl 0x7f9828228700 output>) [0 output S1 A8])
        (const_int 0 [0])) "ETAFLD2.f":797 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
;;  succ:       312 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 312, loop depth 0, maybe hot
;;  prev block 311, next block 373, flags: (RTL, MODIFIED)
;;  pred:       293
;;              311 (FALLTHRU)
;;              294
;; bb 312 artificial_defs: { }
;; bb 312 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1295 1296
(code_label 4518 4517 4519 312 158 (nil) [2 uses])
(note 4519 4518 4520 312 [bb 312] NOTE_INSN_BASIC_BLOCK)
(insn 4520 4519 4521 312 (set (reg:SI 0 ax [orig:1295 l.163_1209 ] [1295])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":336 86 {*movsi_internal}
     (nil))
(insn 4521 4520 4522 312 (parallel [
            (set (reg:SI 0 ax [orig:1296 _1210 ] [1296])
                (plus:SI (reg:SI 0 ax [orig:1295 l.163_1209 ] [1295])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":336 221 {*addsi_1}
     (nil))
(insn 4522 4521 5675 312 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])
        (reg:SI 0 ax [orig:1296 _1210 ] [1296])) "ETAFLD2.f":336 86 {*movsi_internal}
     (nil))
(jump_insn 5675 4522 5676 312 (set (pc)
        (label_ref 4523)) "ETAFLD2.f":336 683 {jump}
     (nil)
 -> 4523)
;;  succ:       108 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 5676 5675 5726)
;; basic block 373, loop depth 0, maybe hot
;;  prev block 312, next block 313, flags: (RTL, MODIFIED)
;;  pred:       69
;;              108
;; bb 373 artificial_defs: { }
;; bb 373 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 5726 5676 5725 373 233 (nil) [2 uses])
(note 5725 5726 5727 373 [bb 373] NOTE_INSN_BASIC_BLOCK)
(insn 5727 5725 4526 373 (const_int 0 [0]) "ETAFLD2.f":803 718 {nop}
     (nil))
;;  succ:       313 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 313, loop depth 0, maybe hot
;;  prev block 373, next block 314, flags: (RTL, MODIFIED)
;;  pred:       373 [always]  (FALLTHRU)
;; bb 313 artificial_defs: { }
;; bb 313 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1297
(code_label 4526 5727 4527 313 33 (nil) [0 uses])
(note 4527 4526 4528 313 [bb 313] NOTE_INSN_BASIC_BLOCK)
(insn 4528 4527 4529 313 (set (reg:SI 0 ax [orig:1297 _1211 ] [1297])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 732 [0x2dc]))) [1 rqstfld.iget+716 S4 A32])) "ETAFLD2.f":809 86 {*movsi_internal}
     (nil))
(insn 4529 4528 4530 313 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:1297 _1211 ] [1297])
            (const_int 0 [0]))) "ETAFLD2.f":809 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 4530 4529 4531 313 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 5098)
            (pc))) "ETAFLD2.f":809 682 {*jcc}
     (nil)
 -> 5098)
;;  succ:       314 (FALLTHRU)
;;              325
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 314, loop depth 0, maybe hot
;;  prev block 313, next block 315, flags: (RTL, MODIFIED)
;;  pred:       313 (FALLTHRU)
;; bb 314 artificial_defs: { }
;; bb 314 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 1298 1299 1300 1301 1302 1722 1723 2737 2738
(note 4531 4530 4532 314 [bb 314] NOTE_INSN_BASIC_BLOCK)
(insn 4532 4531 4533 314 (set (reg:SI 0 ax [orig:1298 _1212 ] [1298])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("ctlblk_") [flags 0x2]  <var_decl 0x7f9828232d80 ctlblk>)
                    (const_int 84 [0x54]))) [1 ctlblk.nphs+0 S4 A32])) "ETAFLD2.f":1 86 {*movsi_internal}
     (nil))
(insn 4533 4532 4534 314 (set (reg:SF 22 xmm1 [orig:1299 _1213 ] [1299])
        (float:SF (reg:SI 0 ax [orig:1298 _1212 ] [1298]))) "ETAFLD2.f":810 203 {*floatsisf2_mixed}
     (nil))
(insn 4534 4533 4535 314 (set (reg:SF 21 xmm0 [orig:1300 _1214 ] [1300])
        (mem/c:SF (const:DI (plus:DI (symbol_ref:DI ("ctlblk_") [flags 0x2]  <var_decl 0x7f9828232d80 ctlblk>)
                    (const_int 48 [0x30]))) [2 ctlblk.dt+0 S4 A128])) "ETAFLD2.f":1 131 {*movsf_internal}
     (nil))
(insn 4535 4534 4536 314 (set (reg:SF 21 xmm0 [orig:1301 _1215 ] [1301])
        (mult:SF (reg:SF 21 xmm0 [orig:1300 _1214 ] [1300])
            (reg:SF 22 xmm1 [orig:1299 _1213 ] [1299]))) "ETAFLD2.f":810 838 {*fop_sf_comm}
     (nil))
(insn 4536 4535 4537 314 (set (reg:SF 22 xmm1 [orig:1302 _1216 ] [1302])
        (reg:SF 21 xmm0 [orig:1301 _1215 ] [1301])) "ETAFLD2.f":810 131 {*movsf_internal}
     (nil))
(insn 4537 4536 4538 314 (set (reg:SF 21 xmm0 [2738])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0  S4 A32])) "ETAFLD2.f":810 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 4538 4537 4539 314 (set (reg:SF 21 xmm0 [2737])
        (div:SF (reg:SF 21 xmm0 [2738])
            (reg:SF 22 xmm1 [orig:1302 _1216 ] [1302]))) "ETAFLD2.f":810 841 {*fop_sf_1}
     (nil))
(insn 4539 4538 4540 314 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -228 [0xffffffffffffff1c])) [2 rdtphs+0 S4 A32])
        (reg:SF 21 xmm0 [2737])) "ETAFLD2.f":810 131 {*movsf_internal}
     (nil))
(insn 4540 4539 4541 314 (set (reg:SI 0 ax [orig:1722 _2194 ] [1722])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f982824fc60 parallel>)
                    (const_int 8 [0x8]))) [1 parallel.jsta+0 S4 A64])) "ETAFLD2.f":813 86 {*movsi_internal}
     (nil))
(insn 4541 4540 4542 314 (set (reg:SI 3 bx [orig:1723 _2195 ] [1723])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f982824fc60 parallel>)
                    (const_int 12 [0xc]))) [1 parallel.jend+0 S4 A32])) "ETAFLD2.f":813 86 {*movsi_internal}
     (nil))
(insn 4542 4541 5039 314 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])
        (reg:SI 0 ax [orig:1722 _2194 ] [1722])) "ETAFLD2.f":813 86 {*movsi_internal}
     (nil))
;;  succ:       315 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1723

;; basic block 315, loop depth 0, maybe hot
;;  prev block 314, next block 316, flags: (RTL, MODIFIED)
;;  pred:       314 (FALLTHRU)
;;              323 [always] 
;; bb 315 artificial_defs: { }
;; bb 315 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1723
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1723
;; lr  def 	 17 [flags] 1724 2739
(code_label 5039 4542 4543 315 178 (nil) [1 uses])
(note 4543 5039 4544 315 [bb 315] NOTE_INSN_BASIC_BLOCK)
(insn 4544 4543 4545 315 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])
            (reg:SI 3 bx [orig:1723 _2195 ] [1723]))) "ETAFLD2.f":813 11 {*cmpsi_1}
     (nil))
(insn 4545 4544 4546 315 (set (reg:QI 0 ax [2739])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "ETAFLD2.f":813 678 {*setcc_qi}
     (nil))
(insn 4546 4545 4547 315 (set (reg:SI 0 ax [orig:1724 _2197 ] [1724])
        (zero_extend:SI (reg:QI 0 ax [2739]))) "ETAFLD2.f":813 140 {*zero_extendqisi2}
     (nil))
(insn 4547 4546 4548 315 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:1724 _2197 ] [1724])
            (const_int 0 [0]))) "ETAFLD2.f":813 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 4548 4547 4549 315 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 5798)
            (pc))) "ETAFLD2.f":813 682 {*jcc}
     (nil)
 -> 5798)
;;  succ:       397
;;              316 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1723

;; basic block 316, loop depth 0, maybe hot
;;  prev block 315, next block 317, flags: (RTL, MODIFIED)
;;  pred:       315 (FALLTHRU)
;; bb 316 artificial_defs: { }
;; bb 316 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1723
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 4549 4548 4550 316 [bb 316] NOTE_INSN_BASIC_BLOCK)
(insn 4550 4549 5033 316 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
        (const_int 1 [0x1])) "ETAFLD2.f":814 86 {*movsi_internal}
     (nil))
;;  succ:       317 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1723

;; basic block 317, loop depth 0, maybe hot
;;  prev block 316, next block 318, flags: (RTL, MODIFIED)
;;  pred:       316 (FALLTHRU)
;;              322 [always] 
;; bb 317 artificial_defs: { }
;; bb 317 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1723
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1725 2740
(code_label 5033 4550 4551 317 177 (nil) [1 uses])
(note 4551 5033 4552 317 [bb 317] NOTE_INSN_BASIC_BLOCK)
(insn 4552 4551 4553 317 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
            (const_int 119 [0x77]))) "ETAFLD2.f":814 11 {*cmpsi_1}
     (nil))
(insn 4553 4552 4554 317 (set (reg:QI 0 ax [2740])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "ETAFLD2.f":814 678 {*setcc_qi}
     (nil))
(insn 4554 4553 4555 317 (set (reg:SI 0 ax [orig:1725 _2199 ] [1725])
        (zero_extend:SI (reg:QI 0 ax [2740]))) "ETAFLD2.f":814 140 {*zero_extendqisi2}
     (nil))
(insn 4555 4554 4556 317 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:1725 _2199 ] [1725])
            (const_int 0 [0]))) "ETAFLD2.f":814 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 4556 4555 4557 317 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 5801)
            (pc))) "ETAFLD2.f":814 682 {*jcc}
     (nil)
 -> 5801)
;;  succ:       398
;;              318 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1723

;; basic block 318, loop depth 0, maybe hot
;;  prev block 317, next block 319, flags: (RTL, MODIFIED)
;;  pred:       317 (FALLTHRU)
;; bb 318 artificial_defs: { }
;; bb 318 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1723
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1303 1304 1305 1306 1307 1308 2741 2742 2743 2744 2745
(note 4557 4556 4558 318 [bb 318] NOTE_INSN_BASIC_BLOCK)
(insn 4558 4557 4559 318 (set (reg:SI 0 ax [2741])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])) "ETAFLD2.f":815 86 {*movsi_internal}
     (nil))
(insn 4559 4558 4560 318 (set (reg:DI 0 ax [orig:1303 _1217 ] [1303])
        (sign_extend:DI (reg:SI 0 ax [2741]))) "ETAFLD2.f":815 149 {*extendsidi2_rex64}
     (nil))
(insn 4560 4559 4561 318 (parallel [
            (set (reg:DI 1 dx [orig:1304 _1218 ] [1304])
                (mult:DI (reg:DI 0 ax [orig:1303 _1217 ] [1303])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":815 349 {*muldi3_1}
     (nil))
(insn 4561 4560 4562 318 (set (reg:SI 0 ax [2742])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "ETAFLD2.f":815 86 {*movsi_internal}
     (nil))
(insn 4562 4561 4563 318 (set (reg:DI 0 ax [orig:1305 _1219 ] [1305])
        (sign_extend:DI (reg:SI 0 ax [2742]))) "ETAFLD2.f":815 149 {*extendsidi2_rex64}
     (nil))
(insn 4563 4562 4564 318 (parallel [
            (set (reg:DI 0 ax [orig:1306 _1220 ] [1306])
                (plus:DI (reg:DI 0 ax [orig:1305 _1219 ] [1305])
                    (reg:DI 1 dx [orig:1304 _1218 ] [1304])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":815 222 {*adddi_1}
     (nil))
(insn 4564 4563 4565 318 (parallel [
            (set (reg:DI 1 dx [orig:1307 _1221 ] [1307])
                (plus:DI (reg:DI 0 ax [orig:1306 _1220 ] [1306])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":815 222 {*adddi_1}
     (nil))
(insn 4565 4564 4566 318 (set (reg/f:DI 0 ax [2743])
        (symbol_ref:DI ("pvrbls_") [flags 0x202]  <var_decl 0x7f9828254510 pvrbls>)) "ETAFLD2.f":815 85 {*movdi_internal}
     (nil))
(insn 4566 4565 4567 318 (parallel [
            (set (reg:DI 1 dx [2744])
                (plus:DI (reg:DI 1 dx [orig:1307 _1221 ] [1307])
                    (const_int 444465 [0x6c831])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":815 222 {*adddi_1}
     (nil))
(insn 4567 4566 4568 318 (set (reg:SF 21 xmm0 [orig:1308 _1222 ] [1308])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [2744])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [2743])) [2 pvrbls.prec S4 A32])) "ETAFLD2.f":815 131 {*movsf_internal}
     (nil))
(insn 4568 4567 4569 318 (set (reg:SF 22 xmm1 [2745])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) "ETAFLD2.f":815 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 4569 4568 4570 318 (set (reg:CCFP 17 flags)
        (unspec:CCFP [
                (compare:CCFP (reg:SF 21 xmm0 [orig:1308 _1222 ] [1308])
                    (reg:SF 22 xmm1 [2745]))
            ] UNSPEC_NOTRAP)) "ETAFLD2.f":815 54 {*cmpiusf}
     (nil))
(jump_insn 4570 4569 5557 318 (set (pc)
        (if_then_else (unordered (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref 4600)
            (pc))) "ETAFLD2.f":815 682 {*jcc}
     (nil)
 -> 4600)
;;  succ:       321
;;              319 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1308 1723

;; basic block 319, loop depth 0, maybe hot
;;  prev block 318, next block 320, flags: (RTL, MODIFIED)
;;  pred:       318 (FALLTHRU)
;; bb 319 artificial_defs: { }
;; bb 319 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1308 1723
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1308
;; lr  def 	 17 [flags] 2746
(note 5557 4570 4571 319 [bb 319] NOTE_INSN_BASIC_BLOCK)
(insn 4571 5557 4572 319 (set (reg:SF 22 xmm1 [2746])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) "ETAFLD2.f":815 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 4572 4571 4573 319 (set (reg:CCFP 17 flags)
        (unspec:CCFP [
                (compare:CCFP (reg:SF 21 xmm0 [orig:1308 _1222 ] [1308])
                    (reg:SF 22 xmm1 [2746]))
            ] UNSPEC_NOTRAP)) "ETAFLD2.f":815 54 {*cmpiusf}
     (nil))
(jump_insn 4573 4572 4577 319 (set (pc)
        (if_then_else (ltgt (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4600)
            (pc))) "ETAFLD2.f":815 682 {*jcc}
     (nil)
 -> 4600)
;;  succ:       320 (FALLTHRU)
;;              321
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1723

;; basic block 320, loop depth 0, maybe hot
;;  prev block 319, next block 321, flags: (RTL, MODIFIED)
;;  pred:       319 (FALLTHRU)
;; bb 320 artificial_defs: { }
;; bb 320 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1723
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1309 1310 1311 1312 1313 1314 1315 1316 1317 1318 2747 2748 2749 2750 2751 2752 2753 2754
(note 4577 4573 4578 320 [bb 320] NOTE_INSN_BASIC_BLOCK)
(insn 4578 4577 4579 320 (set (reg:SI 0 ax [2747])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])) "ETAFLD2.f":816 86 {*movsi_internal}
     (nil))
(insn 4579 4578 4580 320 (set (reg:DI 0 ax [orig:1309 _1223 ] [1309])
        (sign_extend:DI (reg:SI 0 ax [2747]))) "ETAFLD2.f":816 149 {*extendsidi2_rex64}
     (nil))
(insn 4580 4579 4581 320 (parallel [
            (set (reg:DI 1 dx [orig:1310 _1224 ] [1310])
                (mult:DI (reg:DI 0 ax [orig:1309 _1223 ] [1309])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":816 349 {*muldi3_1}
     (nil))
(insn 4581 4580 4582 320 (set (reg:SI 0 ax [2748])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "ETAFLD2.f":816 86 {*movsi_internal}
     (nil))
(insn 4582 4581 4583 320 (set (reg:DI 0 ax [orig:1311 _1225 ] [1311])
        (sign_extend:DI (reg:SI 0 ax [2748]))) "ETAFLD2.f":816 149 {*extendsidi2_rex64}
     (nil))
(insn 4583 4582 4584 320 (parallel [
            (set (reg:DI 0 ax [orig:1312 _1226 ] [1312])
                (plus:DI (reg:DI 0 ax [orig:1311 _1225 ] [1311])
                    (reg:DI 1 dx [orig:1310 _1224 ] [1310])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":816 222 {*adddi_1}
     (nil))
(insn 4584 4583 4585 320 (parallel [
            (set (reg:DI 1 dx [orig:1313 _1227 ] [1313])
                (plus:DI (reg:DI 0 ax [orig:1312 _1226 ] [1312])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":816 222 {*adddi_1}
     (nil))
(insn 4585 4584 4586 320 (set (reg/f:DI 0 ax [2749])
        (symbol_ref:DI ("qsno.4453") [flags 0x202]  <var_decl 0x7f9827e6b990 qsno>)) "ETAFLD2.f":816 85 {*movdi_internal}
     (nil))
(insn 4586 4585 4587 320 (set (reg:SF 21 xmm0 [2750])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) "ETAFLD2.f":816 131 {*movsf_internal}
     (nil))
(insn 4587 4586 4588 320 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:1313 _1227 ] [1313])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [2749])) [2 qsno S4 A32])
        (reg:SF 21 xmm0 [2750])) "ETAFLD2.f":816 131 {*movsf_internal}
     (nil))
(insn 4588 4587 4589 320 (set (reg:SI 0 ax [2751])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])) "ETAFLD2.f":817 86 {*movsi_internal}
     (nil))
(insn 4589 4588 4590 320 (set (reg:DI 0 ax [orig:1314 _1228 ] [1314])
        (sign_extend:DI (reg:SI 0 ax [2751]))) "ETAFLD2.f":817 149 {*extendsidi2_rex64}
     (nil))
(insn 4590 4589 4591 320 (parallel [
            (set (reg:DI 1 dx [orig:1315 _1229 ] [1315])
                (mult:DI (reg:DI 0 ax [orig:1314 _1228 ] [1314])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":817 349 {*muldi3_1}
     (nil))
(insn 4591 4590 4592 320 (set (reg:SI 0 ax [2752])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "ETAFLD2.f":817 86 {*movsi_internal}
     (nil))
(insn 4592 4591 4593 320 (set (reg:DI 0 ax [orig:1316 _1230 ] [1316])
        (sign_extend:DI (reg:SI 0 ax [2752]))) "ETAFLD2.f":817 149 {*extendsidi2_rex64}
     (nil))
(insn 4593 4592 4594 320 (parallel [
            (set (reg:DI 0 ax [orig:1317 _1231 ] [1317])
                (plus:DI (reg:DI 0 ax [orig:1316 _1230 ] [1316])
                    (reg:DI 1 dx [orig:1315 _1229 ] [1315])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":817 222 {*adddi_1}
     (nil))
(insn 4594 4593 4595 320 (parallel [
            (set (reg:DI 1 dx [orig:1318 _1232 ] [1318])
                (plus:DI (reg:DI 0 ax [orig:1317 _1231 ] [1317])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":817 222 {*adddi_1}
     (nil))
(insn 4595 4594 4596 320 (set (reg/f:DI 0 ax [2753])
        (symbol_ref:DI ("qrain.4451") [flags 0x202]  <var_decl 0x7f9827e6b900 qrain>)) "ETAFLD2.f":817 85 {*movdi_internal}
     (nil))
(insn 4596 4595 4597 320 (set (reg:SF 21 xmm0 [2754])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) "ETAFLD2.f":817 131 {*movsf_internal}
     (nil))
(insn 4597 4596 5677 320 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:1318 _1232 ] [1318])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [2753])) [2 qrain S4 A32])
        (reg:SF 21 xmm0 [2754])) "ETAFLD2.f":817 131 {*movsf_internal}
     (nil))
(jump_insn 5677 4597 5678 320 (set (pc)
        (label_ref 4860)) 683 {jump}
     (nil)
 -> 4860)
;;  succ:       322 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1723

(barrier 5678 5677 4600)
;; basic block 321, loop depth 0, maybe hot
;;  prev block 320, next block 322, flags: (RTL, MODIFIED)
;;  pred:       318
;;              319
;; bb 321 artificial_defs: { }
;; bb 321 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1723
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 1319 1320 1321 1322 1323 1324 1325 1326 1327 1328 1329 1330 1331 1332 1333 1334 1335 1336 1337 1338 1339 1340 1341 1342 1343 1344 1345 1346 1347 1348 1349 1350 1351 1352 1353 1354 1355 1356 1357 1358 1359 1360 1361 1362 1363 1364 1365 1366 1367 1368 1369 1370 1371 1372 1373 1374 1375 1376 1377 1378 1379 1380 1381 1382 1383 1384 1385 1386 1387 1388 1389 1390 1391 1392 1393 1394 1395 1396 1397 1398 1399 1400 1401 1402 1403 1404 1405 1406 1407 1408 1409 1410 1411 1412 1413 1414 1415 1416 1417 1418 1419 1420 1421 1422 1423 1424 1425 1426 1427 1428 1429 1430 1431 1432 1433 1434 1435 1436 1437 1438 1439 1440 1441 1442 1443 1444 1445 1446 1447 1448 1449 1450 1451 1726 1727 1728 1729 1730 1731 2755 2756 2757 2758 2759 2760 2761 2762 2763 2764 2765 2766 2767 2768 2769 2770 2771 2772 2773 2774 2775 2776 2777 2778 2779 2780 2781 2782 2783 2784 2785 2786 2787 2788 2789 2790 2791 2792 2793 2794 2795 2796 2797 2798 2799 2800 2801 2802 2803 2804 2805 2806 2807 2808 2809 2810 2811 2812 2813 2814 2815 2816 2817 2818 2819 2820 2821 2822 2823 2824 2825 2826 2827 2828 2829 2830 2831 2832 2833 2834 2835 2836 2837 2838 2839 2840 2841 2842 2843 2844
(code_label 4600 5678 4601 321 174 (nil) [2 uses])
(note 4601 4600 4602 321 [bb 321] NOTE_INSN_BASIC_BLOCK)
(insn 4602 4601 4603 321 (set (reg:SI 0 ax [2755])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])) "ETAFLD2.f":819 86 {*movsi_internal}
     (nil))
(insn 4603 4602 4604 321 (set (reg:DI 0 ax [orig:1319 _1233 ] [1319])
        (sign_extend:DI (reg:SI 0 ax [2755]))) "ETAFLD2.f":819 149 {*extendsidi2_rex64}
     (nil))
(insn 4604 4603 4605 321 (parallel [
            (set (reg:DI 1 dx [orig:1320 _1234 ] [1320])
                (mult:DI (reg:DI 0 ax [orig:1319 _1233 ] [1319])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":819 349 {*muldi3_1}
     (nil))
(insn 4605 4604 4606 321 (set (reg:SI 0 ax [2756])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "ETAFLD2.f":819 86 {*movsi_internal}
     (nil))
(insn 4606 4605 4607 321 (set (reg:DI 0 ax [orig:1321 _1235 ] [1321])
        (sign_extend:DI (reg:SI 0 ax [2756]))) "ETAFLD2.f":819 149 {*extendsidi2_rex64}
     (nil))
(insn 4607 4606 4608 321 (parallel [
            (set (reg:DI 0 ax [orig:1322 _1236 ] [1322])
                (plus:DI (reg:DI 0 ax [orig:1321 _1235 ] [1321])
                    (reg:DI 1 dx [orig:1320 _1234 ] [1320])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":819 222 {*adddi_1}
     (nil))
(insn 4608 4607 4609 321 (parallel [
            (set (reg:DI 1 dx [orig:1323 _1237 ] [1323])
                (plus:DI (reg:DI 0 ax [orig:1322 _1236 ] [1322])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":819 222 {*adddi_1}
     (nil))
(insn 4609 4608 4610 321 (set (reg/f:DI 0 ax [2757])
        (symbol_ref:DI ("loops_") [flags 0x202]  <var_decl 0x7f9828246c60 loops>)) "ETAFLD2.f":819 85 {*movdi_internal}
     (nil))
(insn 4610 4609 4611 321 (parallel [
            (set (reg:DI 1 dx [2758])
                (plus:DI (reg:DI 1 dx [orig:1323 _1237 ] [1323])
                    (const_int 2420 [0x974])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":819 222 {*adddi_1}
     (nil))
(insn 4611 4610 4612 321 (set (reg:SI 0 ax [2759])
        (mem:SI (plus:DI (mult:DI (reg:DI 1 dx [2758])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [2757])) [1 loops.lmh S4 A32])) "ETAFLD2.f":819 86 {*movsi_internal}
     (nil))
(insn 4612 4611 4613 321 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -232 [0xffffffffffffff18])) [1 llmh+0 S4 A32])
        (reg:SI 0 ax [2759])) "ETAFLD2.f":819 86 {*movsi_internal}
     (nil))
(insn 4613 4612 4614 321 (set (reg:SI 0 ax [2760])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])) "ETAFLD2.f":820 86 {*movsi_internal}
     (nil))
(insn 4614 4613 4615 321 (set (reg:DI 0 ax [orig:1324 _1238 ] [1324])
        (sign_extend:DI (reg:SI 0 ax [2760]))) "ETAFLD2.f":820 149 {*extendsidi2_rex64}
     (nil))
(insn 4615 4614 4616 321 (parallel [
            (set (reg:DI 1 dx [orig:1325 _1239 ] [1325])
                (mult:DI (reg:DI 0 ax [orig:1324 _1238 ] [1324])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":820 349 {*muldi3_1}
     (nil))
(insn 4616 4615 4617 321 (set (reg:SI 0 ax [2761])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "ETAFLD2.f":820 86 {*movsi_internal}
     (nil))
(insn 4617 4616 4618 321 (set (reg:DI 0 ax [orig:1326 _1240 ] [1326])
        (sign_extend:DI (reg:SI 0 ax [2761]))) "ETAFLD2.f":820 149 {*extendsidi2_rex64}
     (nil))
(insn 4618 4617 4619 321 (parallel [
            (set (reg:DI 0 ax [orig:1327 _1241 ] [1327])
                (plus:DI (reg:DI 0 ax [orig:1326 _1240 ] [1326])
                    (reg:DI 1 dx [orig:1325 _1239 ] [1325])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":820 222 {*adddi_1}
     (nil))
(insn 4619 4618 4620 321 (parallel [
            (set (reg:DI 1 dx [orig:1328 _1242 ] [1328])
                (plus:DI (reg:DI 0 ax [orig:1327 _1241 ] [1327])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":820 222 {*adddi_1}
     (nil))
(insn 4620 4619 4621 321 (set (reg/f:DI 0 ax [2762])
        (symbol_ref:DI ("cldwtr_") [flags 0x202]  <var_decl 0x7f9828232a20 cldwtr>)) "ETAFLD2.f":820 85 {*movdi_internal}
     (nil))
(insn 4621 4620 4622 321 (parallel [
            (set (reg:DI 1 dx [2763])
                (plus:DI (reg:DI 1 dx [orig:1328 _1242 ] [1328])
                    (const_int 1185316 [0x121624])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":820 222 {*adddi_1}
     (nil))
(insn 4622 4621 4623 321 (set (reg:SF 22 xmm1 [orig:1329 _1243 ] [1329])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [2763])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [2762])) [2 cldwtr.sr S4 A32])) "ETAFLD2.f":820 131 {*movsf_internal}
     (nil))
(insn 4623 4622 4624 321 (set (reg:SI 0 ax [2764])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])) "ETAFLD2.f":820 86 {*movsi_internal}
     (nil))
(insn 4624 4623 4625 321 (set (reg:DI 0 ax [orig:1330 _1244 ] [1330])
        (sign_extend:DI (reg:SI 0 ax [2764]))) "ETAFLD2.f":820 149 {*extendsidi2_rex64}
     (nil))
(insn 4625 4624 4626 321 (parallel [
            (set (reg:DI 1 dx [orig:1331 _1245 ] [1331])
                (mult:DI (reg:DI 0 ax [orig:1330 _1244 ] [1330])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":820 349 {*muldi3_1}
     (nil))
(insn 4626 4625 4627 321 (set (reg:SI 0 ax [2765])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "ETAFLD2.f":820 86 {*movsi_internal}
     (nil))
(insn 4627 4626 4628 321 (set (reg:DI 0 ax [orig:1332 _1246 ] [1332])
        (sign_extend:DI (reg:SI 0 ax [2765]))) "ETAFLD2.f":820 149 {*extendsidi2_rex64}
     (nil))
(insn 4628 4627 4629 321 (parallel [
            (set (reg:DI 0 ax [orig:1333 _1247 ] [1333])
                (plus:DI (reg:DI 0 ax [orig:1332 _1246 ] [1332])
                    (reg:DI 1 dx [orig:1331 _1245 ] [1331])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":820 222 {*adddi_1}
     (nil))
(insn 4629 4628 4630 321 (parallel [
            (set (reg:DI 1 dx [orig:1334 _1248 ] [1334])
                (plus:DI (reg:DI 0 ax [orig:1333 _1247 ] [1333])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":820 222 {*adddi_1}
     (nil))
(insn 4630 4629 4631 321 (set (reg/f:DI 0 ax [2766])
        (symbol_ref:DI ("pvrbls_") [flags 0x202]  <var_decl 0x7f9828254510 pvrbls>)) "ETAFLD2.f":820 85 {*movdi_internal}
     (nil))
(insn 4631 4630 4632 321 (parallel [
            (set (reg:DI 1 dx [2767])
                (plus:DI (reg:DI 1 dx [orig:1334 _1248 ] [1334])
                    (const_int 444465 [0x6c831])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":820 222 {*adddi_1}
     (nil))
(insn 4632 4631 4633 321 (set (reg:SF 21 xmm0 [orig:1335 _1249 ] [1335])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [2767])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [2766])) [2 pvrbls.prec S4 A32])) "ETAFLD2.f":820 131 {*movsf_internal}
     (nil))
(insn 4633 4632 4634 321 (set (reg:SF 21 xmm0 [orig:1336 _1250 ] [1336])
        (mult:SF (reg:SF 21 xmm0 [orig:1335 _1249 ] [1335])
            (reg:SF 22 xmm1 [orig:1329 _1243 ] [1329]))) "ETAFLD2.f":820 838 {*fop_sf_comm}
     (nil))
(insn 4634 4633 4635 321 (set (reg:SF 22 xmm1 [2769])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -228 [0xffffffffffffff1c])) [2 rdtphs+0 S4 A32])) "ETAFLD2.f":820 131 {*movsf_internal}
     (nil))
(insn 4635 4634 4636 321 (set (reg:SF 21 xmm0 [2768])
        (mult:SF (reg:SF 21 xmm0 [orig:1336 _1250 ] [1336])
            (reg:SF 22 xmm1 [2769]))) "ETAFLD2.f":820 838 {*fop_sf_comm}
     (nil))
(insn 4636 4635 4637 321 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -236 [0xffffffffffffff14])) [2 snorate+0 S4 A32])
        (reg:SF 21 xmm0 [2768])) "ETAFLD2.f":820 131 {*movsf_internal}
     (nil))
(insn 4637 4636 4638 321 (set (reg:SI 0 ax [2770])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])) "ETAFLD2.f":821 86 {*movsi_internal}
     (nil))
(insn 4638 4637 4639 321 (set (reg:DI 0 ax [orig:1337 _1251 ] [1337])
        (sign_extend:DI (reg:SI 0 ax [2770]))) "ETAFLD2.f":821 149 {*extendsidi2_rex64}
     (nil))
(insn 4639 4638 4640 321 (parallel [
            (set (reg:DI 1 dx [orig:1338 _1252 ] [1338])
                (mult:DI (reg:DI 0 ax [orig:1337 _1251 ] [1337])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":821 349 {*muldi3_1}
     (nil))
(insn 4640 4639 4641 321 (set (reg:SI 0 ax [2771])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "ETAFLD2.f":821 86 {*movsi_internal}
     (nil))
(insn 4641 4640 4642 321 (set (reg:DI 0 ax [orig:1339 _1253 ] [1339])
        (sign_extend:DI (reg:SI 0 ax [2771]))) "ETAFLD2.f":821 149 {*extendsidi2_rex64}
     (nil))
(insn 4642 4641 4643 321 (parallel [
            (set (reg:DI 0 ax [orig:1340 _1254 ] [1340])
                (plus:DI (reg:DI 0 ax [orig:1339 _1253 ] [1339])
                    (reg:DI 1 dx [orig:1338 _1252 ] [1338])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":821 222 {*adddi_1}
     (nil))
(insn 4643 4642 4644 321 (parallel [
            (set (reg:DI 1 dx [orig:1341 _1255 ] [1341])
                (plus:DI (reg:DI 0 ax [orig:1340 _1254 ] [1340])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":821 222 {*adddi_1}
     (nil))
(insn 4644 4643 4645 321 (set (reg/f:DI 0 ax [2772])
        (symbol_ref:DI ("cldwtr_") [flags 0x202]  <var_decl 0x7f9828232a20 cldwtr>)) "ETAFLD2.f":821 85 {*movdi_internal}
     (nil))
(insn 4645 4644 4646 321 (parallel [
            (set (reg:DI 1 dx [2773])
                (plus:DI (reg:DI 1 dx [orig:1341 _1255 ] [1341])
                    (const_int 1185316 [0x121624])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":821 222 {*adddi_1}
     (nil))
(insn 4646 4645 4647 321 (set (reg:SF 22 xmm1 [orig:1342 _1256 ] [1342])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [2773])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [2772])) [2 cldwtr.sr S4 A32])) "ETAFLD2.f":821 131 {*movsf_internal}
     (nil))
(insn 4647 4646 4648 321 (set (reg:SF 21 xmm0 [2774])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0  S4 A32])) "ETAFLD2.f":821 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 4648 4647 4649 321 (set (reg:SF 21 xmm0 [orig:1343 _1257 ] [1343])
        (minus:SF (reg:SF 21 xmm0 [2774])
            (reg:SF 22 xmm1 [orig:1342 _1256 ] [1342]))) "ETAFLD2.f":821 841 {*fop_sf_1}
     (nil))
(insn 4649 4648 4650 321 (set (reg:SF 22 xmm1 [orig:1344 _1258 ] [1344])
        (reg:SF 21 xmm0 [orig:1343 _1257 ] [1343])) "ETAFLD2.f":821 131 {*movsf_internal}
     (nil))
(insn 4650 4649 4651 321 (set (reg:SI 0 ax [2775])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])) "ETAFLD2.f":821 86 {*movsi_internal}
     (nil))
(insn 4651 4650 4652 321 (set (reg:DI 0 ax [orig:1345 _1259 ] [1345])
        (sign_extend:DI (reg:SI 0 ax [2775]))) "ETAFLD2.f":821 149 {*extendsidi2_rex64}
     (nil))
(insn 4652 4651 4653 321 (parallel [
            (set (reg:DI 1 dx [orig:1346 _1260 ] [1346])
                (mult:DI (reg:DI 0 ax [orig:1345 _1259 ] [1345])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":821 349 {*muldi3_1}
     (nil))
(insn 4653 4652 4654 321 (set (reg:SI 0 ax [2776])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "ETAFLD2.f":821 86 {*movsi_internal}
     (nil))
(insn 4654 4653 4655 321 (set (reg:DI 0 ax [orig:1347 _1261 ] [1347])
        (sign_extend:DI (reg:SI 0 ax [2776]))) "ETAFLD2.f":821 149 {*extendsidi2_rex64}
     (nil))
(insn 4655 4654 4656 321 (parallel [
            (set (reg:DI 0 ax [orig:1348 _1262 ] [1348])
                (plus:DI (reg:DI 0 ax [orig:1347 _1261 ] [1347])
                    (reg:DI 1 dx [orig:1346 _1260 ] [1346])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":821 222 {*adddi_1}
     (nil))
(insn 4656 4655 4657 321 (parallel [
            (set (reg:DI 1 dx [orig:1349 _1263 ] [1349])
                (plus:DI (reg:DI 0 ax [orig:1348 _1262 ] [1348])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":821 222 {*adddi_1}
     (nil))
(insn 4657 4656 4658 321 (set (reg/f:DI 0 ax [2777])
        (symbol_ref:DI ("pvrbls_") [flags 0x202]  <var_decl 0x7f9828254510 pvrbls>)) "ETAFLD2.f":821 85 {*movdi_internal}
     (nil))
(insn 4658 4657 4659 321 (parallel [
            (set (reg:DI 1 dx [2778])
                (plus:DI (reg:DI 1 dx [orig:1349 _1263 ] [1349])
                    (const_int 444465 [0x6c831])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":821 222 {*adddi_1}
     (nil))
(insn 4659 4658 4660 321 (set (reg:SF 21 xmm0 [orig:1350 _1264 ] [1350])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [2778])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [2777])) [2 pvrbls.prec S4 A32])) "ETAFLD2.f":821 131 {*movsf_internal}
     (nil))
(insn 4660 4659 4661 321 (set (reg:SF 21 xmm0 [orig:1351 _1265 ] [1351])
        (mult:SF (reg:SF 21 xmm0 [orig:1350 _1264 ] [1350])
            (reg:SF 22 xmm1 [orig:1344 _1258 ] [1344]))) "ETAFLD2.f":821 838 {*fop_sf_comm}
     (nil))
(insn 4661 4660 4662 321 (set (reg:SF 22 xmm1 [2780])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -228 [0xffffffffffffff1c])) [2 rdtphs+0 S4 A32])) "ETAFLD2.f":821 131 {*movsf_internal}
     (nil))
(insn 4662 4661 4663 321 (set (reg:SF 21 xmm0 [2779])
        (mult:SF (reg:SF 21 xmm0 [orig:1351 _1265 ] [1351])
            (reg:SF 22 xmm1 [2780]))) "ETAFLD2.f":821 838 {*fop_sf_comm}
     (nil))
(insn 4663 4662 4664 321 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -240 [0xffffffffffffff10])) [2 rainrate+0 S4 A32])
        (reg:SF 21 xmm0 [2779])) "ETAFLD2.f":821 131 {*movsf_internal}
     (nil))
(insn 4664 4663 4665 321 (set (reg:SI 0 ax [2781])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])) "ETAFLD2.f":822 86 {*movsi_internal}
     (nil))
(insn 4665 4664 4666 321 (set (reg:DI 0 ax [orig:1352 _1266 ] [1352])
        (sign_extend:DI (reg:SI 0 ax [2781]))) "ETAFLD2.f":822 149 {*extendsidi2_rex64}
     (nil))
(insn 4666 4665 4667 321 (parallel [
            (set (reg:DI 1 dx [orig:1353 _1267 ] [1353])
                (mult:DI (reg:DI 0 ax [orig:1352 _1266 ] [1352])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":822 349 {*muldi3_1}
     (nil))
(insn 4667 4666 4668 321 (set (reg:SI 0 ax [2782])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "ETAFLD2.f":822 86 {*movsi_internal}
     (nil))
(insn 4668 4667 4669 321 (set (reg:DI 0 ax [orig:1354 _1268 ] [1354])
        (sign_extend:DI (reg:SI 0 ax [2782]))) "ETAFLD2.f":822 149 {*extendsidi2_rex64}
     (nil))
(insn 4669 4668 4670 321 (parallel [
            (set (reg:DI 0 ax [orig:1355 _1269 ] [1355])
                (plus:DI (reg:DI 0 ax [orig:1354 _1268 ] [1354])
                    (reg:DI 1 dx [orig:1353 _1267 ] [1353])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":822 222 {*adddi_1}
     (nil))
(insn 4670 4669 4671 321 (parallel [
            (set (reg:DI 1 dx [orig:1356 _1270 ] [1356])
                (plus:DI (reg:DI 0 ax [orig:1355 _1269 ] [1355])
                    (const_int 1096227 [0x10ba23])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":822 222 {*adddi_1}
     (nil))
(insn 4671 4670 4672 321 (set (reg/f:DI 0 ax [2783])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7f982825bcf0 vrbls>)) "ETAFLD2.f":822 85 {*movdi_internal}
     (nil))
(insn 4672 4671 4673 321 (parallel [
            (set (reg:DI 1 dx [2784])
                (plus:DI (reg:DI 1 dx [orig:1356 _1270 ] [1356])
                    (const_int 2340849 [0x23b7f1])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":822 222 {*adddi_1}
     (nil))
(insn 4673 4672 4674 321 (set (reg:SF 21 xmm0 [orig:1357 _1271 ] [1357])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [2784])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [2783])) [2 vrbls.t S4 A32])) "ETAFLD2.f":822 131 {*movsf_internal}
     (nil))
(insn 4674 4673 4675 321 (set (reg:SI 0 ax [2785])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])) "ETAFLD2.f":822 86 {*movsi_internal}
     (nil))
(insn 4675 4674 4676 321 (set (reg:DI 0 ax [orig:1358 _1272 ] [1358])
        (sign_extend:DI (reg:SI 0 ax [2785]))) "ETAFLD2.f":822 149 {*extendsidi2_rex64}
     (nil))
(insn 4676 4675 4677 321 (parallel [
            (set (reg:DI 1 dx [orig:1359 _1273 ] [1359])
                (mult:DI (reg:DI 0 ax [orig:1358 _1272 ] [1358])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":822 349 {*muldi3_1}
     (nil))
(insn 4677 4676 4678 321 (set (reg:SI 0 ax [2786])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "ETAFLD2.f":822 86 {*movsi_internal}
     (nil))
(insn 4678 4677 4679 321 (set (reg:DI 0 ax [orig:1360 _1274 ] [1360])
        (sign_extend:DI (reg:SI 0 ax [2786]))) "ETAFLD2.f":822 149 {*extendsidi2_rex64}
     (nil))
(insn 4679 4678 4680 321 (parallel [
            (set (reg:DI 0 ax [orig:1361 _1275 ] [1361])
                (plus:DI (reg:DI 0 ax [orig:1360 _1274 ] [1360])
                    (reg:DI 1 dx [orig:1359 _1273 ] [1359])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":822 222 {*adddi_1}
     (nil))
(insn 4680 4679 4681 321 (parallel [
            (set (reg:DI 1 dx [orig:1362 _1276 ] [1362])
                (plus:DI (reg:DI 0 ax [orig:1361 _1275 ] [1361])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":822 222 {*adddi_1}
     (nil))
(insn 4681 4680 4682 321 (set (reg/f:DI 0 ax [2787])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f9828240b40 extra>)) "ETAFLD2.f":822 85 {*movdi_internal}
     (nil))
(insn 4682 4681 4683 321 (parallel [
            (set (reg:DI 1 dx [2788])
                (plus:DI (reg:DI 1 dx [orig:1362 _1276 ] [1362])
                    (const_int 4706655 [0x47d15f])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":822 222 {*adddi_1}
     (nil))
(insn 4683 4682 4684 321 (set (reg:SF 22 xmm1 [orig:1363 _1277 ] [1363])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [2788])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [2787])) [2 extra.pslp S4 A32])) "ETAFLD2.f":822 131 {*movsf_internal}
     (nil))
(insn 4684 4683 4686 321 (set (reg:SF 21 xmm0 [orig:1364 _1278 ] [1364])
        (div:SF (reg:SF 21 xmm0 [orig:1357 _1271 ] [1357])
            (reg:SF 22 xmm1 [orig:1363 _1277 ] [1363]))) "ETAFLD2.f":822 841 {*fop_sf_1}
     (nil))
(insn 4686 4684 4688 321 (set (reg:SF 22 xmm1)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC62") [flags 0x2]) [0  S4 A32])) "ETAFLD2.f":822 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 4.1670000553131103515625e-1 [0x0.d559b4p-1])
        (nil)))
(call_insn/u 4688 4686 4689 321 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("powf") [flags 0x41]  <function_decl 0x7f98280ad100 __builtin_powf>) [0 __builtin_powf S1 A8])
            (const_int 0 [0]))) "ETAFLD2.f":822 700 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (expr_list:SF (use (reg:SF 22 xmm1))
            (nil))))
(insn 4689 4688 4690 321 (set (reg:SF 0 ax [2789])
        (reg:SF 21 xmm0)) "ETAFLD2.f":822 131 {*movsf_internal}
     (nil))
(insn 4690 4689 4691 321 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -244 [0xffffffffffffff0c])) [2 term1+0 S4 A32])
        (reg:SF 0 ax [2789])) "ETAFLD2.f":822 131 {*movsf_internal}
     (nil))
(insn 4691 4690 4692 321 (set (reg:SI 0 ax [2790])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -232 [0xffffffffffffff18])) [1 llmh+0 S4 A32])) "ETAFLD2.f":823 86 {*movsi_internal}
     (nil))
(insn 4692 4691 4693 321 (set (reg:DI 0 ax [orig:1365 _1279 ] [1365])
        (sign_extend:DI (reg:SI 0 ax [2790]))) "ETAFLD2.f":823 149 {*extendsidi2_rex64}
     (nil))
(insn 4693 4692 4694 321 (parallel [
            (set (reg:DI 1 dx [orig:1366 _1280 ] [1366])
                (mult:DI (reg:DI 0 ax [orig:1365 _1279 ] [1365])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":823 349 {*muldi3_1}
     (nil))
(insn 4694 4693 4695 321 (set (reg:SI 0 ax [2791])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])) "ETAFLD2.f":823 86 {*movsi_internal}
     (nil))
(insn 4695 4694 4696 321 (set (reg:DI 0 ax [orig:1367 _1281 ] [1367])
        (sign_extend:DI (reg:SI 0 ax [2791]))) "ETAFLD2.f":823 149 {*extendsidi2_rex64}
     (nil))
(insn 4696 4695 4697 321 (parallel [
            (set (reg:DI 0 ax [orig:1368 _1282 ] [1368])
                (mult:DI (reg:DI 0 ax [orig:1367 _1281 ] [1367])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":823 349 {*muldi3_1}
     (nil))
(insn 4697 4696 4698 321 (parallel [
            (set (reg:DI 1 dx [orig:1369 _1283 ] [1369])
                (plus:DI (reg:DI 1 dx [orig:1366 _1280 ] [1366])
                    (reg:DI 0 ax [orig:1368 _1282 ] [1368])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":823 222 {*adddi_1}
     (nil))
(insn 4698 4697 4699 321 (set (reg:SI 0 ax [2792])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "ETAFLD2.f":823 86 {*movsi_internal}
     (nil))
(insn 4699 4698 4700 321 (set (reg:DI 0 ax [orig:1370 _1284 ] [1370])
        (sign_extend:DI (reg:SI 0 ax [2792]))) "ETAFLD2.f":823 149 {*extendsidi2_rex64}
     (nil))
(insn 4700 4699 4701 321 (parallel [
            (set (reg:DI 0 ax [orig:1371 _1285 ] [1371])
                (plus:DI (reg:DI 0 ax [orig:1370 _1284 ] [1370])
                    (reg:DI 1 dx [orig:1369 _1283 ] [1369])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":823 222 {*adddi_1}
     (nil))
(insn 4701 4700 4702 321 (parallel [
            (set (reg:DI 1 dx [orig:1372 _1286 ] [1372])
                (plus:DI (reg:DI 0 ax [orig:1371 _1285 ] [1371])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":823 222 {*adddi_1}
     (nil))
(insn 4702 4701 4703 321 (set (reg/f:DI 0 ax [2793])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7f982825bcf0 vrbls>)) "ETAFLD2.f":823 85 {*movdi_internal}
     (nil))
(insn 4703 4702 4704 321 (parallel [
            (set (reg:DI 1 dx [2794])
                (plus:DI (reg:DI 1 dx [orig:1372 _1286 ] [1372])
                    (const_int 2340849 [0x23b7f1])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":823 222 {*adddi_1}
     (nil))
(insn 4704 4703 4705 321 (set (reg:SF 21 xmm0 [orig:1373 _1287 ] [1373])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [2794])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [2793])) [2 vrbls.t S4 A32])) "ETAFLD2.f":823 131 {*movsf_internal}
     (nil))
(insn 4705 4704 4706 321 (set (reg:SI 0 ax [2795])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])) "ETAFLD2.f":823 86 {*movsi_internal}
     (nil))
(insn 4706 4705 4707 321 (set (reg:DI 0 ax [orig:1374 _1288 ] [1374])
        (sign_extend:DI (reg:SI 0 ax [2795]))) "ETAFLD2.f":823 149 {*extendsidi2_rex64}
     (nil))
(insn 4707 4706 4708 321 (parallel [
            (set (reg:DI 1 dx [orig:1375 _1289 ] [1375])
                (mult:DI (reg:DI 0 ax [orig:1374 _1288 ] [1374])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":823 349 {*muldi3_1}
     (nil))
(insn 4708 4707 4709 321 (set (reg:SI 0 ax [2796])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "ETAFLD2.f":823 86 {*movsi_internal}
     (nil))
(insn 4709 4708 4710 321 (set (reg:DI 0 ax [orig:1376 _1290 ] [1376])
        (sign_extend:DI (reg:SI 0 ax [2796]))) "ETAFLD2.f":823 149 {*extendsidi2_rex64}
     (nil))
(insn 4710 4709 4711 321 (parallel [
            (set (reg:DI 0 ax [orig:1377 _1291 ] [1377])
                (plus:DI (reg:DI 0 ax [orig:1376 _1290 ] [1376])
                    (reg:DI 1 dx [orig:1375 _1289 ] [1375])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":823 222 {*adddi_1}
     (nil))
(insn 4711 4710 4712 321 (parallel [
            (set (reg:DI 1 dx [orig:1378 _1292 ] [1378])
                (plus:DI (reg:DI 0 ax [orig:1377 _1291 ] [1377])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":823 222 {*adddi_1}
     (nil))
(insn 4712 4711 4713 321 (set (reg/f:DI 0 ax [2797])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f9828240b40 extra>)) "ETAFLD2.f":823 85 {*movdi_internal}
     (nil))
(insn 4713 4712 4714 321 (parallel [
            (set (reg:DI 1 dx [2798])
                (plus:DI (reg:DI 1 dx [orig:1378 _1292 ] [1378])
                    (const_int 4647393 [0x46e9e1])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":823 222 {*adddi_1}
     (nil))
(insn 4714 4713 4715 321 (set (reg:SF 23 xmm2 [orig:1379 _1293 ] [1379])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [2798])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [2797])) [2 extra.pdsl S4 A32])) "ETAFLD2.f":823 131 {*movsf_internal}
     (nil))
(insn 4715 4714 4716 321 (set (reg:SI 0 ax [2799])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])) "ETAFLD2.f":823 86 {*movsi_internal}
     (nil))
(insn 4716 4715 4717 321 (set (reg:DI 0 ax [orig:1380 _1294 ] [1380])
        (sign_extend:DI (reg:SI 0 ax [2799]))) "ETAFLD2.f":823 149 {*extendsidi2_rex64}
     (nil))
(insn 4717 4716 4718 321 (parallel [
            (set (reg:DI 1 dx [orig:1381 _1295 ] [1381])
                (mult:DI (reg:DI 0 ax [orig:1380 _1294 ] [1380])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":823 349 {*muldi3_1}
     (nil))
(insn 4718 4717 4719 321 (set (reg:SI 0 ax [2800])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "ETAFLD2.f":823 86 {*movsi_internal}
     (nil))
(insn 4719 4718 4720 321 (set (reg:DI 0 ax [orig:1382 _1296 ] [1382])
        (sign_extend:DI (reg:SI 0 ax [2800]))) "ETAFLD2.f":823 149 {*extendsidi2_rex64}
     (nil))
(insn 4720 4719 4721 321 (parallel [
            (set (reg:DI 0 ax [orig:1383 _1297 ] [1383])
                (plus:DI (reg:DI 0 ax [orig:1382 _1296 ] [1382])
                    (reg:DI 1 dx [orig:1381 _1295 ] [1381])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":823 222 {*adddi_1}
     (nil))
(insn 4721 4720 4722 321 (parallel [
            (set (reg:DI 1 dx [orig:1384 _1298 ] [1384])
                (plus:DI (reg:DI 0 ax [orig:1383 _1297 ] [1383])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":823 222 {*adddi_1}
     (nil))
(insn 4722 4721 4723 321 (set (reg/f:DI 0 ax [2801])
        (symbol_ref:DI ("loops_") [flags 0x202]  <var_decl 0x7f9828246c60 loops>)) "ETAFLD2.f":823 85 {*movdi_internal}
     (nil))
(insn 4723 4722 4724 321 (parallel [
            (set (reg:DI 1 dx [2802])
                (plus:DI (reg:DI 1 dx [orig:1384 _1298 ] [1384])
                    (const_int 2420 [0x974])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":823 222 {*adddi_1}
     (nil))
(insn 4724 4723 4725 321 (set (reg:SI 0 ax [orig:1385 _1299 ] [1385])
        (mem:SI (plus:DI (mult:DI (reg:DI 1 dx [2802])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [2801])) [1 loops.lmh S4 A32])) "ETAFLD2.f":823 86 {*movsi_internal}
     (nil))
(insn 4725 4724 4726 321 (set (reg:DI 0 ax [orig:1386 _1300 ] [1386])
        (sign_extend:DI (reg:SI 0 ax [orig:1385 _1299 ] [1385]))) "ETAFLD2.f":823 149 {*extendsidi2_rex64}
     (nil))
(insn 4726 4725 4727 321 (parallel [
            (set (reg:DI 1 dx [orig:1387 _1301 ] [1387])
                (plus:DI (reg:DI 0 ax [orig:1386 _1300 ] [1386])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":823 222 {*adddi_1}
     (nil))
(insn 4727 4726 4728 321 (set (reg/f:DI 0 ax [2803])
        (symbol_ref:DI ("mapot_") [flags 0x202]  <var_decl 0x7f982824b120 mapot>)) "ETAFLD2.f":823 85 {*movdi_internal}
     (nil))
(insn 4728 4727 4729 321 (parallel [
            (set (reg:DI 1 dx [2804])
                (plus:DI (reg:DI 1 dx [orig:1387 _1301 ] [1387])
                    (const_int 1000099 [0xf42a3])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":823 222 {*adddi_1}
     (nil))
(insn 4729 4728 4730 321 (set (reg:SF 22 xmm1 [orig:1388 _1302 ] [1388])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [2804])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [2803])) [2 mapot.aeta S4 A32])) "ETAFLD2.f":823 131 {*movsf_internal}
     (nil))
(insn 4730 4729 4731 321 (set (reg:SF 23 xmm2 [orig:1389 _1303 ] [1389])
        (mult:SF (reg:SF 23 xmm2 [orig:1379 _1293 ] [1379])
            (reg:SF 22 xmm1 [orig:1388 _1302 ] [1388]))) "ETAFLD2.f":823 838 {*fop_sf_comm}
     (nil))
(insn 4731 4730 4732 321 (set (reg/f:DI 0 ax [2805])
        (symbol_ref:DI ("mapot_") [flags 0x202]  <var_decl 0x7f982824b120 mapot>)) "ETAFLD2.f":1 85 {*movdi_internal}
     (nil))
(insn 4732 4731 4733 321 (set (reg:SF 22 xmm1 [orig:1390 _1304 ] [1390])
        (mem/c:SF (plus:DI (reg/f:DI 0 ax [2805])
                (const_int 4000012 [0x3d090c])) [2 mapot.pt+0 S4 A32])) "ETAFLD2.f":1 131 {*movsf_internal}
     (nil))
(insn 4733 4732 4735 321 (set (reg:SF 22 xmm1 [orig:1391 _1305 ] [1391])
        (plus:SF (reg:SF 22 xmm1 [orig:1390 _1304 ] [1390])
            (reg:SF 23 xmm2 [orig:1389 _1303 ] [1389]))) "ETAFLD2.f":823 838 {*fop_sf_comm}
     (nil))
(insn 4735 4733 4737 321 (set (reg:SF 21 xmm0 [orig:1393 _1307 ] [1393])
        (div:SF (reg:SF 21 xmm0 [orig:1373 _1287 ] [1373])
            (reg:SF 22 xmm1 [orig:1392 _1306 ] [1392]))) "ETAFLD2.f":823 841 {*fop_sf_1}
     (nil))
(insn 4737 4735 4739 321 (set (reg:SF 22 xmm1)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC63") [flags 0x2]) [0  S4 A32])) "ETAFLD2.f":823 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 5.8329999446868896484375e-1 [0x0.955326p+0])
        (nil)))
(call_insn/u 4739 4737 4740 321 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("powf") [flags 0x41]  <function_decl 0x7f98280ad100 __builtin_powf>) [0 __builtin_powf S1 A8])
            (const_int 0 [0]))) "ETAFLD2.f":823 700 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (expr_list:SF (use (reg:SF 22 xmm1))
            (nil))))
(insn 4740 4739 4741 321 (set (reg:SF 0 ax [2806])
        (reg:SF 21 xmm0)) "ETAFLD2.f":823 131 {*movsf_internal}
     (nil))
(insn 4741 4740 4742 321 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -248 [0xffffffffffffff08])) [2 term2+0 S4 A32])
        (reg:SF 0 ax [2806])) "ETAFLD2.f":823 131 {*movsf_internal}
     (nil))
(insn 4742 4741 4743 321 (set (reg:SF 21 xmm0 [orig:1728 _2209 ] [1728])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -240 [0xffffffffffffff10])) [2 rainrate+0 S4 A32])) "ETAFLD2.f":824 131 {*movsf_internal}
     (nil))
(insn 4743 4742 4745 321 (set (reg:SF 22 xmm1)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC64") [flags 0x2]) [0  S4 A32])) "ETAFLD2.f":824 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 8.3329999446868896484375e-1 [0x0.d55326p+0])
        (nil)))
(call_insn/u 4745 4743 4746 321 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("powf") [flags 0x41]  <function_decl 0x7f98280ad100 __builtin_powf>) [0 __builtin_powf S1 A8])
            (const_int 0 [0]))) "ETAFLD2.f":824 700 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (expr_list:SF (use (reg:SF 22 xmm1))
            (nil))))
(insn 4746 4745 4747 321 (set (reg:SF 0 ax [2807])
        (reg:SF 21 xmm0)) "ETAFLD2.f":824 131 {*movsf_internal}
     (nil))
(insn 4747 4746 4748 321 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -252 [0xffffffffffffff04])) [2 term3+0 S4 A32])
        (reg:SF 0 ax [2807])) "ETAFLD2.f":824 131 {*movsf_internal}
     (nil))
(insn 4748 4747 4749 321 (set (reg:SF 22 xmm1 [2808])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -244 [0xffffffffffffff0c])) [2 term1+0 S4 A32])) "ETAFLD2.f":825 131 {*movsf_internal}
     (nil))
(insn 4749 4748 4750 321 (set (reg:SF 21 xmm0 [2809])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC65") [flags 0x2]) [0  S4 A32])) "ETAFLD2.f":825 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.1787e+4 [0x0.b82cp+14])
        (nil)))
(insn 4750 4749 4751 321 (set (reg:SF 21 xmm0 [orig:1394 _1308 ] [1394])
        (mult:SF (reg:SF 21 xmm0 [2809])
            (reg:SF 22 xmm1 [2808]))) "ETAFLD2.f":825 838 {*fop_sf_comm}
     (nil))
(insn 4751 4750 4752 321 (set (reg:SF 21 xmm0 [orig:1395 _1309 ] [1395])
        (mult:SF (reg:SF 21 xmm0 [orig:1394 _1308 ] [1394])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -248 [0xffffffffffffff08])) [2 term2+0 S4 A32]))) "ETAFLD2.f":825 838 {*fop_sf_comm}
     (nil))
(insn 4752 4751 4753 321 (set (reg:SI 0 ax [2810])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])) "ETAFLD2.f":825 86 {*movsi_internal}
     (nil))
(insn 4753 4752 4754 321 (set (reg:DI 0 ax [orig:1396 _1310 ] [1396])
        (sign_extend:DI (reg:SI 0 ax [2810]))) "ETAFLD2.f":825 149 {*extendsidi2_rex64}
     (nil))
(insn 4754 4753 4755 321 (parallel [
            (set (reg:DI 1 dx [orig:1397 _1311 ] [1397])
                (mult:DI (reg:DI 0 ax [orig:1396 _1310 ] [1396])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":825 349 {*muldi3_1}
     (nil))
(insn 4755 4754 4756 321 (set (reg:SI 0 ax [2811])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "ETAFLD2.f":825 86 {*movsi_internal}
     (nil))
(insn 4756 4755 4757 321 (set (reg:DI 0 ax [orig:1398 _1312 ] [1398])
        (sign_extend:DI (reg:SI 0 ax [2811]))) "ETAFLD2.f":825 149 {*extendsidi2_rex64}
     (nil))
(insn 4757 4756 4758 321 (parallel [
            (set (reg:DI 0 ax [orig:1399 _1313 ] [1399])
                (plus:DI (reg:DI 0 ax [orig:1398 _1312 ] [1398])
                    (reg:DI 1 dx [orig:1397 _1311 ] [1397])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":825 222 {*adddi_1}
     (nil))
(insn 4758 4757 4759 321 (parallel [
            (set (reg:DI 1 dx [orig:1400 _1314 ] [1400])
                (plus:DI (reg:DI 0 ax [orig:1399 _1313 ] [1399])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":825 222 {*adddi_1}
     (nil))
(insn 4759 4758 4760 321 (set (reg:SF 21 xmm0 [orig:1401 _1315 ] [1401])
        (mult:SF (reg:SF 21 xmm0 [orig:1395 _1309 ] [1395])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -252 [0xffffffffffffff04])) [2 term3+0 S4 A32]))) "ETAFLD2.f":825 838 {*fop_sf_comm}
     (nil))
(insn 4760 4759 4761 321 (set (reg/f:DI 0 ax [2812])
        (symbol_ref:DI ("qrain.4451") [flags 0x202]  <var_decl 0x7f9827e6b900 qrain>)) "ETAFLD2.f":825 85 {*movdi_internal}
     (nil))
(insn 4761 4760 4762 321 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:1400 _1314 ] [1400])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [2812])) [2 qrain S4 A32])
        (reg:SF 21 xmm0 [orig:1401 _1315 ] [1401])) "ETAFLD2.f":825 131 {*movsf_internal}
     (nil))
(insn 4762 4761 4763 321 (set (reg:SI 0 ax [2813])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])) "ETAFLD2.f":826 86 {*movsi_internal}
     (nil))
(insn 4763 4762 4764 321 (set (reg:DI 0 ax [orig:1402 _1316 ] [1402])
        (sign_extend:DI (reg:SI 0 ax [2813]))) "ETAFLD2.f":826 149 {*extendsidi2_rex64}
     (nil))
(insn 4764 4763 4765 321 (parallel [
            (set (reg:DI 1 dx [orig:1403 _1317 ] [1403])
                (mult:DI (reg:DI 0 ax [orig:1402 _1316 ] [1402])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":826 349 {*muldi3_1}
     (nil))
(insn 4765 4764 4766 321 (set (reg:SI 0 ax [2814])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "ETAFLD2.f":826 86 {*movsi_internal}
     (nil))
(insn 4766 4765 4767 321 (set (reg:DI 0 ax [orig:1404 _1318 ] [1404])
        (sign_extend:DI (reg:SI 0 ax [2814]))) "ETAFLD2.f":826 149 {*extendsidi2_rex64}
     (nil))
(insn 4767 4766 4768 321 (parallel [
            (set (reg:DI 0 ax [orig:1405 _1319 ] [1405])
                (plus:DI (reg:DI 0 ax [orig:1404 _1318 ] [1404])
                    (reg:DI 1 dx [orig:1403 _1317 ] [1403])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":826 222 {*adddi_1}
     (nil))
(insn 4768 4767 4769 321 (parallel [
            (set (reg:DI 1 dx [orig:1406 _1320 ] [1406])
                (plus:DI (reg:DI 0 ax [orig:1405 _1319 ] [1405])
                    (const_int 1096227 [0x10ba23])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":826 222 {*adddi_1}
     (nil))
(insn 4769 4768 4770 321 (set (reg/f:DI 0 ax [2815])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7f982825bcf0 vrbls>)) "ETAFLD2.f":826 85 {*movdi_internal}
     (nil))
(insn 4770 4769 4771 321 (parallel [
            (set (reg:DI 1 dx [2816])
                (plus:DI (reg:DI 1 dx [orig:1406 _1320 ] [1406])
                    (const_int 2340849 [0x23b7f1])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":826 222 {*adddi_1}
     (nil))
(insn 4771 4770 4772 321 (set (reg:SF 21 xmm0 [orig:1407 _1321 ] [1407])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [2816])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [2815])) [2 vrbls.t S4 A32])) "ETAFLD2.f":826 131 {*movsf_internal}
     (nil))
(insn 4772 4771 4773 321 (set (reg:SI 0 ax [2817])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])) "ETAFLD2.f":826 86 {*movsi_internal}
     (nil))
(insn 4773 4772 4774 321 (set (reg:DI 0 ax [orig:1408 _1322 ] [1408])
        (sign_extend:DI (reg:SI 0 ax [2817]))) "ETAFLD2.f":826 149 {*extendsidi2_rex64}
     (nil))
(insn 4774 4773 4775 321 (parallel [
            (set (reg:DI 1 dx [orig:1409 _1323 ] [1409])
                (mult:DI (reg:DI 0 ax [orig:1408 _1322 ] [1408])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":826 349 {*muldi3_1}
     (nil))
(insn 4775 4774 4776 321 (set (reg:SI 0 ax [2818])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "ETAFLD2.f":826 86 {*movsi_internal}
     (nil))
(insn 4776 4775 4777 321 (set (reg:DI 0 ax [orig:1410 _1324 ] [1410])
        (sign_extend:DI (reg:SI 0 ax [2818]))) "ETAFLD2.f":826 149 {*extendsidi2_rex64}
     (nil))
(insn 4777 4776 4778 321 (parallel [
            (set (reg:DI 0 ax [orig:1411 _1325 ] [1411])
                (plus:DI (reg:DI 0 ax [orig:1410 _1324 ] [1410])
                    (reg:DI 1 dx [orig:1409 _1323 ] [1409])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":826 222 {*adddi_1}
     (nil))
(insn 4778 4777 4779 321 (parallel [
            (set (reg:DI 1 dx [orig:1412 _1326 ] [1412])
                (plus:DI (reg:DI 0 ax [orig:1411 _1325 ] [1411])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":826 222 {*adddi_1}
     (nil))
(insn 4779 4778 4780 321 (set (reg/f:DI 0 ax [2819])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f9828240b40 extra>)) "ETAFLD2.f":826 85 {*movdi_internal}
     (nil))
(insn 4780 4779 4781 321 (parallel [
            (set (reg:DI 1 dx [2820])
                (plus:DI (reg:DI 1 dx [orig:1412 _1326 ] [1412])
                    (const_int 4706655 [0x47d15f])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":826 222 {*adddi_1}
     (nil))
(insn 4781 4780 4782 321 (set (reg:SF 22 xmm1 [orig:1413 _1327 ] [1413])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [2820])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [2819])) [2 extra.pslp S4 A32])) "ETAFLD2.f":826 131 {*movsf_internal}
     (nil))
(insn 4782 4781 4784 321 (set (reg:SF 21 xmm0 [orig:1414 _1328 ] [1414])
        (div:SF (reg:SF 21 xmm0 [orig:1407 _1321 ] [1407])
            (reg:SF 22 xmm1 [orig:1413 _1327 ] [1413]))) "ETAFLD2.f":826 841 {*fop_sf_1}
     (nil))
(insn 4784 4782 4786 321 (set (reg:SF 22 xmm1)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC66") [flags 0x2]) [0  S4 A32])) "ETAFLD2.f":826 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 4.699999988079071044921875e-1 [0x0.f0a3d7p-1])
        (nil)))
(call_insn/u 4786 4784 4787 321 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("powf") [flags 0x41]  <function_decl 0x7f98280ad100 __builtin_powf>) [0 __builtin_powf S1 A8])
            (const_int 0 [0]))) "ETAFLD2.f":826 700 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (expr_list:SF (use (reg:SF 22 xmm1))
            (nil))))
(insn 4787 4786 4788 321 (set (reg:SF 0 ax [2821])
        (reg:SF 21 xmm0)) "ETAFLD2.f":826 131 {*movsf_internal}
     (nil))
(insn 4788 4787 4789 321 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -256 [0xffffffffffffff00])) [2 term4+0 S4 A32])
        (reg:SF 0 ax [2821])) "ETAFLD2.f":826 131 {*movsf_internal}
     (nil))
(insn 4789 4788 4790 321 (set (reg:SI 0 ax [2822])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -232 [0xffffffffffffff18])) [1 llmh+0 S4 A32])) "ETAFLD2.f":827 86 {*movsi_internal}
     (nil))
(insn 4790 4789 4791 321 (set (reg:DI 0 ax [orig:1415 _1329 ] [1415])
        (sign_extend:DI (reg:SI 0 ax [2822]))) "ETAFLD2.f":827 149 {*extendsidi2_rex64}
     (nil))
(insn 4791 4790 4792 321 (parallel [
            (set (reg:DI 1 dx [orig:1416 _1330 ] [1416])
                (mult:DI (reg:DI 0 ax [orig:1415 _1329 ] [1415])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":827 349 {*muldi3_1}
     (nil))
(insn 4792 4791 4793 321 (set (reg:SI 0 ax [2823])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])) "ETAFLD2.f":827 86 {*movsi_internal}
     (nil))
(insn 4793 4792 4794 321 (set (reg:DI 0 ax [orig:1417 _1331 ] [1417])
        (sign_extend:DI (reg:SI 0 ax [2823]))) "ETAFLD2.f":827 149 {*extendsidi2_rex64}
     (nil))
(insn 4794 4793 4795 321 (parallel [
            (set (reg:DI 0 ax [orig:1418 _1332 ] [1418])
                (mult:DI (reg:DI 0 ax [orig:1417 _1331 ] [1417])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":827 349 {*muldi3_1}
     (nil))
(insn 4795 4794 4796 321 (parallel [
            (set (reg:DI 1 dx [orig:1419 _1333 ] [1419])
                (plus:DI (reg:DI 1 dx [orig:1416 _1330 ] [1416])
                    (reg:DI 0 ax [orig:1418 _1332 ] [1418])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":827 222 {*adddi_1}
     (nil))
(insn 4796 4795 4797 321 (set (reg:SI 0 ax [2824])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "ETAFLD2.f":827 86 {*movsi_internal}
     (nil))
(insn 4797 4796 4798 321 (set (reg:DI 0 ax [orig:1420 _1334 ] [1420])
        (sign_extend:DI (reg:SI 0 ax [2824]))) "ETAFLD2.f":827 149 {*extendsidi2_rex64}
     (nil))
(insn 4798 4797 4799 321 (parallel [
            (set (reg:DI 0 ax [orig:1421 _1335 ] [1421])
                (plus:DI (reg:DI 0 ax [orig:1420 _1334 ] [1420])
                    (reg:DI 1 dx [orig:1419 _1333 ] [1419])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":827 222 {*adddi_1}
     (nil))
(insn 4799 4798 4800 321 (parallel [
            (set (reg:DI 1 dx [orig:1422 _1336 ] [1422])
                (plus:DI (reg:DI 0 ax [orig:1421 _1335 ] [1421])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":827 222 {*adddi_1}
     (nil))
(insn 4800 4799 4801 321 (set (reg/f:DI 0 ax [2825])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7f982825bcf0 vrbls>)) "ETAFLD2.f":827 85 {*movdi_internal}
     (nil))
(insn 4801 4800 4802 321 (parallel [
            (set (reg:DI 1 dx [2826])
                (plus:DI (reg:DI 1 dx [orig:1422 _1336 ] [1422])
                    (const_int 2340849 [0x23b7f1])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":827 222 {*adddi_1}
     (nil))
(insn 4802 4801 4803 321 (set (reg:SF 21 xmm0 [orig:1423 _1337 ] [1423])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [2826])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [2825])) [2 vrbls.t S4 A32])) "ETAFLD2.f":827 131 {*movsf_internal}
     (nil))
(insn 4803 4802 4804 321 (set (reg:SI 0 ax [2827])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])) "ETAFLD2.f":827 86 {*movsi_internal}
     (nil))
(insn 4804 4803 4805 321 (set (reg:DI 0 ax [orig:1424 _1338 ] [1424])
        (sign_extend:DI (reg:SI 0 ax [2827]))) "ETAFLD2.f":827 149 {*extendsidi2_rex64}
     (nil))
(insn 4805 4804 4806 321 (parallel [
            (set (reg:DI 1 dx [orig:1425 _1339 ] [1425])
                (mult:DI (reg:DI 0 ax [orig:1424 _1338 ] [1424])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":827 349 {*muldi3_1}
     (nil))
(insn 4806 4805 4807 321 (set (reg:SI 0 ax [2828])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "ETAFLD2.f":827 86 {*movsi_internal}
     (nil))
(insn 4807 4806 4808 321 (set (reg:DI 0 ax [orig:1426 _1340 ] [1426])
        (sign_extend:DI (reg:SI 0 ax [2828]))) "ETAFLD2.f":827 149 {*extendsidi2_rex64}
     (nil))
(insn 4808 4807 4809 321 (parallel [
            (set (reg:DI 0 ax [orig:1427 _1341 ] [1427])
                (plus:DI (reg:DI 0 ax [orig:1426 _1340 ] [1426])
                    (reg:DI 1 dx [orig:1425 _1339 ] [1425])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":827 222 {*adddi_1}
     (nil))
(insn 4809 4808 4810 321 (parallel [
            (set (reg:DI 1 dx [orig:1428 _1342 ] [1428])
                (plus:DI (reg:DI 0 ax [orig:1427 _1341 ] [1427])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":827 222 {*adddi_1}
     (nil))
(insn 4810 4809 4811 321 (set (reg/f:DI 0 ax [2829])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f9828240b40 extra>)) "ETAFLD2.f":827 85 {*movdi_internal}
     (nil))
(insn 4811 4810 4812 321 (parallel [
            (set (reg:DI 1 dx [2830])
                (plus:DI (reg:DI 1 dx [orig:1428 _1342 ] [1428])
                    (const_int 4647393 [0x46e9e1])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":827 222 {*adddi_1}
     (nil))
(insn 4812 4811 4813 321 (set (reg:SF 23 xmm2 [orig:1429 _1343 ] [1429])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [2830])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [2829])) [2 extra.pdsl S4 A32])) "ETAFLD2.f":827 131 {*movsf_internal}
     (nil))
(insn 4813 4812 4814 321 (set (reg:SI 0 ax [2831])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])) "ETAFLD2.f":827 86 {*movsi_internal}
     (nil))
(insn 4814 4813 4815 321 (set (reg:DI 0 ax [orig:1430 _1344 ] [1430])
        (sign_extend:DI (reg:SI 0 ax [2831]))) "ETAFLD2.f":827 149 {*extendsidi2_rex64}
     (nil))
(insn 4815 4814 4816 321 (parallel [
            (set (reg:DI 1 dx [orig:1431 _1345 ] [1431])
                (mult:DI (reg:DI 0 ax [orig:1430 _1344 ] [1430])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":827 349 {*muldi3_1}
     (nil))
(insn 4816 4815 4817 321 (set (reg:SI 0 ax [2832])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "ETAFLD2.f":827 86 {*movsi_internal}
     (nil))
(insn 4817 4816 4818 321 (set (reg:DI 0 ax [orig:1432 _1346 ] [1432])
        (sign_extend:DI (reg:SI 0 ax [2832]))) "ETAFLD2.f":827 149 {*extendsidi2_rex64}
     (nil))
(insn 4818 4817 4819 321 (parallel [
            (set (reg:DI 0 ax [orig:1433 _1347 ] [1433])
                (plus:DI (reg:DI 0 ax [orig:1432 _1346 ] [1432])
                    (reg:DI 1 dx [orig:1431 _1345 ] [1431])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":827 222 {*adddi_1}
     (nil))
(insn 4819 4818 4820 321 (parallel [
            (set (reg:DI 1 dx [orig:1434 _1348 ] [1434])
                (plus:DI (reg:DI 0 ax [orig:1433 _1347 ] [1433])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":827 222 {*adddi_1}
     (nil))
(insn 4820 4819 4821 321 (set (reg/f:DI 0 ax [2833])
        (symbol_ref:DI ("loops_") [flags 0x202]  <var_decl 0x7f9828246c60 loops>)) "ETAFLD2.f":827 85 {*movdi_internal}
     (nil))
(insn 4821 4820 4822 321 (parallel [
            (set (reg:DI 1 dx [2834])
                (plus:DI (reg:DI 1 dx [orig:1434 _1348 ] [1434])
                    (const_int 2420 [0x974])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":827 222 {*adddi_1}
     (nil))
(insn 4822 4821 4823 321 (set (reg:SI 0 ax [orig:1435 _1349 ] [1435])
        (mem:SI (plus:DI (mult:DI (reg:DI 1 dx [2834])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [2833])) [1 loops.lmh S4 A32])) "ETAFLD2.f":827 86 {*movsi_internal}
     (nil))
(insn 4823 4822 4824 321 (set (reg:DI 0 ax [orig:1436 _1350 ] [1436])
        (sign_extend:DI (reg:SI 0 ax [orig:1435 _1349 ] [1435]))) "ETAFLD2.f":827 149 {*extendsidi2_rex64}
     (nil))
(insn 4824 4823 4825 321 (parallel [
            (set (reg:DI 1 dx [orig:1437 _1351 ] [1437])
                (plus:DI (reg:DI 0 ax [orig:1436 _1350 ] [1436])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":827 222 {*adddi_1}
     (nil))
(insn 4825 4824 4826 321 (set (reg/f:DI 0 ax [2835])
        (symbol_ref:DI ("mapot_") [flags 0x202]  <var_decl 0x7f982824b120 mapot>)) "ETAFLD2.f":827 85 {*movdi_internal}
     (nil))
(insn 4826 4825 4827 321 (parallel [
            (set (reg:DI 1 dx [2836])
                (plus:DI (reg:DI 1 dx [orig:1437 _1351 ] [1437])
                    (const_int 1000099 [0xf42a3])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":827 222 {*adddi_1}
     (nil))
(insn 4827 4826 4828 321 (set (reg:SF 22 xmm1 [orig:1438 _1352 ] [1438])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [2836])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [2835])) [2 mapot.aeta S4 A32])) "ETAFLD2.f":827 131 {*movsf_internal}
     (nil))
(insn 4828 4827 4829 321 (set (reg:SF 23 xmm2 [orig:1439 _1353 ] [1439])
        (mult:SF (reg:SF 23 xmm2 [orig:1429 _1343 ] [1429])
            (reg:SF 22 xmm1 [orig:1438 _1352 ] [1438]))) "ETAFLD2.f":827 838 {*fop_sf_comm}
     (nil))
(insn 4829 4828 4830 321 (set (reg/f:DI 0 ax [2837])
        (symbol_ref:DI ("mapot_") [flags 0x202]  <var_decl 0x7f982824b120 mapot>)) "ETAFLD2.f":1 85 {*movdi_internal}
     (nil))
(insn 4830 4829 4831 321 (set (reg:SF 22 xmm1 [orig:1440 _1354 ] [1440])
        (mem/c:SF (plus:DI (reg/f:DI 0 ax [2837])
                (const_int 4000012 [0x3d090c])) [2 mapot.pt+0 S4 A32])) "ETAFLD2.f":1 131 {*movsf_internal}
     (nil))
(insn 4831 4830 4833 321 (set (reg:SF 22 xmm1 [orig:1441 _1355 ] [1441])
        (plus:SF (reg:SF 22 xmm1 [orig:1440 _1354 ] [1440])
            (reg:SF 23 xmm2 [orig:1439 _1353 ] [1439]))) "ETAFLD2.f":827 838 {*fop_sf_comm}
     (nil))
(insn 4833 4831 4835 321 (set (reg:SF 21 xmm0 [orig:1443 _1357 ] [1443])
        (div:SF (reg:SF 21 xmm0 [orig:1423 _1337 ] [1423])
            (reg:SF 22 xmm1 [orig:1442 _1356 ] [1442]))) "ETAFLD2.f":827 841 {*fop_sf_1}
     (nil))
(insn 4835 4833 4837 321 (set (reg:SF 22 xmm1)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC67") [flags 0x2]) [0  S4 A32])) "ETAFLD2.f":827 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 5.299999713897705078125e-1 [0x0.87ae14p+0])
        (nil)))
(call_insn/u 4837 4835 4838 321 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("powf") [flags 0x41]  <function_decl 0x7f98280ad100 __builtin_powf>) [0 __builtin_powf S1 A8])
            (const_int 0 [0]))) "ETAFLD2.f":827 700 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (expr_list:SF (use (reg:SF 22 xmm1))
            (nil))))
(insn 4838 4837 4839 321 (set (reg:SF 0 ax [2838])
        (reg:SF 21 xmm0)) "ETAFLD2.f":827 131 {*movsf_internal}
     (nil))
(insn 4839 4838 4840 321 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -260 [0xfffffffffffffefc])) [2 term5+0 S4 A32])
        (reg:SF 0 ax [2838])) "ETAFLD2.f":827 131 {*movsf_internal}
     (nil))
(insn 4840 4839 4841 321 (set (reg:SF 21 xmm0 [orig:1731 _2216 ] [1731])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -236 [0xffffffffffffff14])) [2 snorate+0 S4 A32])) "ETAFLD2.f":828 131 {*movsf_internal}
     (nil))
(insn 4841 4840 4843 321 (set (reg:SF 22 xmm1)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC68") [flags 0x2]) [0  S4 A32])) "ETAFLD2.f":828 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 9.39999997615814208984375e-1 [0x0.f0a3d7p+0])
        (nil)))
(call_insn/u 4843 4841 4844 321 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("powf") [flags 0x41]  <function_decl 0x7f98280ad100 __builtin_powf>) [0 __builtin_powf S1 A8])
            (const_int 0 [0]))) "ETAFLD2.f":828 700 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (expr_list:SF (use (reg:SF 22 xmm1))
            (nil))))
(insn 4844 4843 4845 321 (set (reg:SF 0 ax [2839])
        (reg:SF 21 xmm0)) "ETAFLD2.f":828 131 {*movsf_internal}
     (nil))
(insn 4845 4844 4846 321 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -264 [0xfffffffffffffef8])) [2 term6+0 S4 A32])
        (reg:SF 0 ax [2839])) "ETAFLD2.f":828 131 {*movsf_internal}
     (nil))
(insn 4846 4845 4847 321 (set (reg:SF 22 xmm1 [2840])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -256 [0xffffffffffffff00])) [2 term4+0 S4 A32])) "ETAFLD2.f":829 131 {*movsf_internal}
     (nil))
(insn 4847 4846 4848 321 (set (reg:SF 21 xmm0 [2841])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC69") [flags 0x2]) [0  S4 A32])) "ETAFLD2.f":829 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.4594e+5 [0x0.8e85p+18])
        (nil)))
(insn 4848 4847 4849 321 (set (reg:SF 21 xmm0 [orig:1444 _1358 ] [1444])
        (mult:SF (reg:SF 21 xmm0 [2841])
            (reg:SF 22 xmm1 [2840]))) "ETAFLD2.f":829 838 {*fop_sf_comm}
     (nil))
(insn 4849 4848 4850 321 (set (reg:SF 21 xmm0 [orig:1445 _1359 ] [1445])
        (mult:SF (reg:SF 21 xmm0 [orig:1444 _1358 ] [1444])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -260 [0xfffffffffffffefc])) [2 term5+0 S4 A32]))) "ETAFLD2.f":829 838 {*fop_sf_comm}
     (nil))
(insn 4850 4849 4851 321 (set (reg:SI 0 ax [2842])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])) "ETAFLD2.f":829 86 {*movsi_internal}
     (nil))
(insn 4851 4850 4852 321 (set (reg:DI 0 ax [orig:1446 _1360 ] [1446])
        (sign_extend:DI (reg:SI 0 ax [2842]))) "ETAFLD2.f":829 149 {*extendsidi2_rex64}
     (nil))
(insn 4852 4851 4853 321 (parallel [
            (set (reg:DI 1 dx [orig:1447 _1361 ] [1447])
                (mult:DI (reg:DI 0 ax [orig:1446 _1360 ] [1446])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":829 349 {*muldi3_1}
     (nil))
(insn 4853 4852 4854 321 (set (reg:SI 0 ax [2843])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "ETAFLD2.f":829 86 {*movsi_internal}
     (nil))
(insn 4854 4853 4855 321 (set (reg:DI 0 ax [orig:1448 _1362 ] [1448])
        (sign_extend:DI (reg:SI 0 ax [2843]))) "ETAFLD2.f":829 149 {*extendsidi2_rex64}
     (nil))
(insn 4855 4854 4856 321 (parallel [
            (set (reg:DI 0 ax [orig:1449 _1363 ] [1449])
                (plus:DI (reg:DI 0 ax [orig:1448 _1362 ] [1448])
                    (reg:DI 1 dx [orig:1447 _1361 ] [1447])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":829 222 {*adddi_1}
     (nil))
(insn 4856 4855 4857 321 (parallel [
            (set (reg:DI 1 dx [orig:1450 _1364 ] [1450])
                (plus:DI (reg:DI 0 ax [orig:1449 _1363 ] [1449])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":829 222 {*adddi_1}
     (nil))
(insn 4857 4856 4858 321 (set (reg:SF 21 xmm0 [orig:1451 _1365 ] [1451])
        (mult:SF (reg:SF 21 xmm0 [orig:1445 _1359 ] [1445])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -264 [0xfffffffffffffef8])) [2 term6+0 S4 A32]))) "ETAFLD2.f":829 838 {*fop_sf_comm}
     (nil))
(insn 4858 4857 4859 321 (set (reg/f:DI 0 ax [2844])
        (symbol_ref:DI ("qsno.4453") [flags 0x202]  <var_decl 0x7f9827e6b990 qsno>)) "ETAFLD2.f":829 85 {*movdi_internal}
     (nil))
(insn 4859 4858 4860 321 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:1450 _1364 ] [1450])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [2844])) [2 qsno S4 A32])
        (reg:SF 21 xmm0 [orig:1451 _1365 ] [1451])) "ETAFLD2.f":829 131 {*movsf_internal}
     (nil))
;;  succ:       322 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1723

;; basic block 322, loop depth 0, maybe hot
;;  prev block 321, next block 398, flags: (RTL, MODIFIED)
;;  pred:       321 (FALLTHRU)
;;              320 [always] 
;; bb 322 artificial_defs: { }
;; bb 322 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1723
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1452 1453 1454 1455 1456 1457 1458 1459 1460 1461 1462 1463 1464 1465 1466 1467 1468 1469 1470 1471 1472 1473 1474 1475 1476 1477 1478 1479 1480 1481 1482 1483 1484 1485 1486 1487 1488 1489 1490 1491 1492 1493 1494 1495 1496 1497 1498 1499 1500 1501 1502 1503 1504 1505 1506 1507 1508 1509 1510 1511 1512 1513 1514 1515 1516 1517 1518 1519 1520 1521 1522 1523 1524 1525 1526 1527 1528 1529 1530 1531 1532 1533 1534 1535 1536 1537 1538 1539 1540 1541 1542 1543 1544 1545 1546 1547 1548 1549 1550 1551 1552 1553 1554 1555 1556 1557 2845 2846 2847 2848 2849 2850 2851 2852 2853 2854 2855 2856 2857 2858 2859 2860 2861 2862 2863 2864 2865 2866 2867 2868 2869 2870 2871 2872 2873 2874 2875 2876 2877 2878 2879 2880 2881 2882 2883 2884 2885 2886 2887 2888 2889 2890 2891 2892 2893 2894 2895 2896 2897 2898 2899 2900 2901 2902
(code_label 4860 4859 4861 322 176 (nil) [1 uses])
(note 4861 4860 4862 322 [bb 322] NOTE_INSN_BASIC_BLOCK)
(insn 4862 4861 4863 322 (set (reg:SI 0 ax [2845])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])) "ETAFLD2.f":831 86 {*movsi_internal}
     (nil))
(insn 4863 4862 4864 322 (set (reg:DI 0 ax [orig:1452 _1366 ] [1452])
        (sign_extend:DI (reg:SI 0 ax [2845]))) "ETAFLD2.f":831 149 {*extendsidi2_rex64}
     (nil))
(insn 4864 4863 4865 322 (parallel [
            (set (reg:DI 1 dx [orig:1453 _1367 ] [1453])
                (mult:DI (reg:DI 0 ax [orig:1452 _1366 ] [1452])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":831 349 {*muldi3_1}
     (nil))
(insn 4865 4864 4866 322 (set (reg:SI 0 ax [2846])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "ETAFLD2.f":831 86 {*movsi_internal}
     (nil))
(insn 4866 4865 4867 322 (set (reg:DI 0 ax [orig:1454 _1368 ] [1454])
        (sign_extend:DI (reg:SI 0 ax [2846]))) "ETAFLD2.f":831 149 {*extendsidi2_rex64}
     (nil))
(insn 4867 4866 4868 322 (parallel [
            (set (reg:DI 0 ax [orig:1455 _1369 ] [1455])
                (plus:DI (reg:DI 0 ax [orig:1454 _1368 ] [1454])
                    (reg:DI 1 dx [orig:1453 _1367 ] [1453])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":831 222 {*adddi_1}
     (nil))
(insn 4868 4867 4869 322 (parallel [
            (set (reg:DI 1 dx [orig:1456 _1370 ] [1456])
                (plus:DI (reg:DI 0 ax [orig:1455 _1369 ] [1455])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":831 222 {*adddi_1}
     (nil))
(insn 4869 4868 4870 322 (set (reg/f:DI 0 ax [2847])
        (symbol_ref:DI ("loops_") [flags 0x202]  <var_decl 0x7f9828246c60 loops>)) "ETAFLD2.f":831 85 {*movdi_internal}
     (nil))
(insn 4870 4869 4871 322 (parallel [
            (set (reg:DI 1 dx [2848])
                (plus:DI (reg:DI 1 dx [orig:1456 _1370 ] [1456])
                    (const_int 2420 [0x974])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":831 222 {*adddi_1}
     (nil))
(insn 4871 4870 4872 322 (set (reg:SI 0 ax [2849])
        (mem:SI (plus:DI (mult:DI (reg:DI 1 dx [2848])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [2847])) [1 loops.lmh S4 A32])) "ETAFLD2.f":831 86 {*movsi_internal}
     (nil))
(insn 4872 4871 4873 322 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -232 [0xffffffffffffff18])) [1 llmh+0 S4 A32])
        (reg:SI 0 ax [2849])) "ETAFLD2.f":831 86 {*movsi_internal}
     (nil))
(insn 4873 4872 4874 322 (set (reg:SI 0 ax [2850])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -232 [0xffffffffffffff18])) [1 llmh+0 S4 A32])) "ETAFLD2.f":832 86 {*movsi_internal}
     (nil))
(insn 4874 4873 4875 322 (set (reg:DI 0 ax [orig:1457 _1371 ] [1457])
        (sign_extend:DI (reg:SI 0 ax [2850]))) "ETAFLD2.f":832 149 {*extendsidi2_rex64}
     (nil))
(insn 4875 4874 4876 322 (parallel [
            (set (reg:DI 1 dx [orig:1458 _1372 ] [1458])
                (mult:DI (reg:DI 0 ax [orig:1457 _1371 ] [1457])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":832 349 {*muldi3_1}
     (nil))
(insn 4876 4875 4877 322 (set (reg:SI 0 ax [2851])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])) "ETAFLD2.f":832 86 {*movsi_internal}
     (nil))
(insn 4877 4876 4878 322 (set (reg:DI 0 ax [orig:1459 _1373 ] [1459])
        (sign_extend:DI (reg:SI 0 ax [2851]))) "ETAFLD2.f":832 149 {*extendsidi2_rex64}
     (nil))
(insn 4878 4877 4879 322 (parallel [
            (set (reg:DI 0 ax [orig:1460 _1374 ] [1460])
                (mult:DI (reg:DI 0 ax [orig:1459 _1373 ] [1459])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":832 349 {*muldi3_1}
     (nil))
(insn 4879 4878 4880 322 (parallel [
            (set (reg:DI 1 dx [orig:1461 _1375 ] [1461])
                (plus:DI (reg:DI 1 dx [orig:1458 _1372 ] [1458])
                    (reg:DI 0 ax [orig:1460 _1374 ] [1460])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":832 222 {*adddi_1}
     (nil))
(insn 4880 4879 4881 322 (set (reg:SI 0 ax [2852])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "ETAFLD2.f":832 86 {*movsi_internal}
     (nil))
(insn 4881 4880 4882 322 (set (reg:DI 0 ax [orig:1462 _1376 ] [1462])
        (sign_extend:DI (reg:SI 0 ax [2852]))) "ETAFLD2.f":832 149 {*extendsidi2_rex64}
     (nil))
(insn 4882 4881 4883 322 (parallel [
            (set (reg:DI 0 ax [orig:1463 _1377 ] [1463])
                (plus:DI (reg:DI 0 ax [orig:1462 _1376 ] [1462])
                    (reg:DI 1 dx [orig:1461 _1375 ] [1461])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":832 222 {*adddi_1}
     (nil))
(insn 4883 4882 4884 322 (parallel [
            (set (reg:DI 2 cx [orig:1464 _1378 ] [1464])
                (plus:DI (reg:DI 0 ax [orig:1463 _1377 ] [1463])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":832 222 {*adddi_1}
     (nil))
(insn 4884 4883 4885 322 (set (reg:SI 0 ax [2853])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])) "ETAFLD2.f":832 86 {*movsi_internal}
     (nil))
(insn 4885 4884 4886 322 (set (reg:DI 0 ax [orig:1465 _1379 ] [1465])
        (sign_extend:DI (reg:SI 0 ax [2853]))) "ETAFLD2.f":832 149 {*extendsidi2_rex64}
     (nil))
(insn 4886 4885 4887 322 (parallel [
            (set (reg:DI 1 dx [orig:1466 _1380 ] [1466])
                (mult:DI (reg:DI 0 ax [orig:1465 _1379 ] [1465])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":832 349 {*muldi3_1}
     (nil))
(insn 4887 4886 4888 322 (set (reg:SI 0 ax [2854])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "ETAFLD2.f":832 86 {*movsi_internal}
     (nil))
(insn 4888 4887 4889 322 (set (reg:DI 0 ax [orig:1467 _1381 ] [1467])
        (sign_extend:DI (reg:SI 0 ax [2854]))) "ETAFLD2.f":832 149 {*extendsidi2_rex64}
     (nil))
(insn 4889 4888 4890 322 (parallel [
            (set (reg:DI 0 ax [orig:1468 _1382 ] [1468])
                (plus:DI (reg:DI 0 ax [orig:1467 _1381 ] [1467])
                    (reg:DI 1 dx [orig:1466 _1380 ] [1466])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":832 222 {*adddi_1}
     (nil))
(insn 4890 4889 4891 322 (parallel [
            (set (reg:DI 1 dx [orig:1469 _1383 ] [1469])
                (plus:DI (reg:DI 0 ax [orig:1468 _1382 ] [1468])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":832 222 {*adddi_1}
     (nil))
(insn 4891 4890 4892 322 (set (reg/f:DI 0 ax [2855])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7f982825bcf0 vrbls>)) "ETAFLD2.f":832 85 {*movdi_internal}
     (nil))
(insn 4892 4891 4893 322 (parallel [
            (set (reg:DI 2 cx [2856])
                (plus:DI (reg:DI 2 cx [orig:1464 _1378 ] [1464])
                    (const_int 2340849 [0x23b7f1])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":832 222 {*adddi_1}
     (nil))
(insn 4893 4892 4894 322 (set (reg:SF 21 xmm0 [orig:1470 _1384 ] [1470])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [2856])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [2855])) [2 vrbls.t S4 A32])) "ETAFLD2.f":832 131 {*movsf_internal}
     (nil))
(insn 4894 4893 4895 322 (set (reg/f:DI 0 ax [2857])
        (symbol_ref:DI ("tt.4476") [flags 0x202]  <var_decl 0x7f9827e6f480 tt>)) "ETAFLD2.f":832 85 {*movdi_internal}
     (nil))
(insn 4895 4894 4896 322 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:1469 _1383 ] [1469])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [2857])) [2 tt S4 A32])
        (reg:SF 21 xmm0 [orig:1470 _1384 ] [1470])) "ETAFLD2.f":832 131 {*movsf_internal}
     (nil))
(insn 4896 4895 4897 322 (set (reg:SI 0 ax [2858])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -232 [0xffffffffffffff18])) [1 llmh+0 S4 A32])) "ETAFLD2.f":833 86 {*movsi_internal}
     (nil))
(insn 4897 4896 4898 322 (set (reg:DI 0 ax [orig:1471 _1385 ] [1471])
        (sign_extend:DI (reg:SI 0 ax [2858]))) "ETAFLD2.f":833 149 {*extendsidi2_rex64}
     (nil))
(insn 4898 4897 4899 322 (parallel [
            (set (reg:DI 1 dx [orig:1472 _1386 ] [1472])
                (mult:DI (reg:DI 0 ax [orig:1471 _1385 ] [1471])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":833 349 {*muldi3_1}
     (nil))
(insn 4899 4898 4900 322 (set (reg:SI 0 ax [2859])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])) "ETAFLD2.f":833 86 {*movsi_internal}
     (nil))
(insn 4900 4899 4901 322 (set (reg:DI 0 ax [orig:1473 _1387 ] [1473])
        (sign_extend:DI (reg:SI 0 ax [2859]))) "ETAFLD2.f":833 149 {*extendsidi2_rex64}
     (nil))
(insn 4901 4900 4902 322 (parallel [
            (set (reg:DI 0 ax [orig:1474 _1388 ] [1474])
                (mult:DI (reg:DI 0 ax [orig:1473 _1387 ] [1473])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":833 349 {*muldi3_1}
     (nil))
(insn 4902 4901 4903 322 (parallel [
            (set (reg:DI 1 dx [orig:1475 _1389 ] [1475])
                (plus:DI (reg:DI 1 dx [orig:1472 _1386 ] [1472])
                    (reg:DI 0 ax [orig:1474 _1388 ] [1474])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":833 222 {*adddi_1}
     (nil))
(insn 4903 4902 4904 322 (set (reg:SI 0 ax [2860])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "ETAFLD2.f":833 86 {*movsi_internal}
     (nil))
(insn 4904 4903 4905 322 (set (reg:DI 0 ax [orig:1476 _1390 ] [1476])
        (sign_extend:DI (reg:SI 0 ax [2860]))) "ETAFLD2.f":833 149 {*extendsidi2_rex64}
     (nil))
(insn 4905 4904 4906 322 (parallel [
            (set (reg:DI 0 ax [orig:1477 _1391 ] [1477])
                (plus:DI (reg:DI 0 ax [orig:1476 _1390 ] [1476])
                    (reg:DI 1 dx [orig:1475 _1389 ] [1475])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":833 222 {*adddi_1}
     (nil))
(insn 4906 4905 4907 322 (parallel [
            (set (reg:DI 2 cx [orig:1478 _1392 ] [1478])
                (plus:DI (reg:DI 0 ax [orig:1477 _1391 ] [1477])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":833 222 {*adddi_1}
     (nil))
(insn 4907 4906 4908 322 (set (reg:SI 0 ax [2861])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])) "ETAFLD2.f":833 86 {*movsi_internal}
     (nil))
(insn 4908 4907 4909 322 (set (reg:DI 0 ax [orig:1479 _1393 ] [1479])
        (sign_extend:DI (reg:SI 0 ax [2861]))) "ETAFLD2.f":833 149 {*extendsidi2_rex64}
     (nil))
(insn 4909 4908 4910 322 (parallel [
            (set (reg:DI 1 dx [orig:1480 _1394 ] [1480])
                (mult:DI (reg:DI 0 ax [orig:1479 _1393 ] [1479])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":833 349 {*muldi3_1}
     (nil))
(insn 4910 4909 4911 322 (set (reg:SI 0 ax [2862])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "ETAFLD2.f":833 86 {*movsi_internal}
     (nil))
(insn 4911 4910 4912 322 (set (reg:DI 0 ax [orig:1481 _1395 ] [1481])
        (sign_extend:DI (reg:SI 0 ax [2862]))) "ETAFLD2.f":833 149 {*extendsidi2_rex64}
     (nil))
(insn 4912 4911 4913 322 (parallel [
            (set (reg:DI 0 ax [orig:1482 _1396 ] [1482])
                (plus:DI (reg:DI 0 ax [orig:1481 _1395 ] [1481])
                    (reg:DI 1 dx [orig:1480 _1394 ] [1480])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":833 222 {*adddi_1}
     (nil))
(insn 4913 4912 4914 322 (parallel [
            (set (reg:DI 1 dx [orig:1483 _1397 ] [1483])
                (plus:DI (reg:DI 0 ax [orig:1482 _1396 ] [1482])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":833 222 {*adddi_1}
     (nil))
(insn 4914 4913 4915 322 (set (reg/f:DI 0 ax [2863])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7f982825bcf0 vrbls>)) "ETAFLD2.f":833 85 {*movdi_internal}
     (nil))
(insn 4915 4914 4916 322 (parallel [
            (set (reg:DI 2 cx [2864])
                (plus:DI (reg:DI 2 cx [orig:1478 _1392 ] [1478])
                    (const_int 3466827 [0x34e64b])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":833 222 {*adddi_1}
     (nil))
(insn 4916 4915 4917 322 (set (reg:SF 21 xmm0 [orig:1484 _1398 ] [1484])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [2864])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [2863])) [2 vrbls.q S4 A32])) "ETAFLD2.f":833 131 {*movsf_internal}
     (nil))
(insn 4917 4916 4918 322 (set (reg/f:DI 0 ax [2865])
        (symbol_ref:DI ("qv.4455") [flags 0x202]  <var_decl 0x7f9827e6ba20 qv>)) "ETAFLD2.f":833 85 {*movdi_internal}
     (nil))
(insn 4918 4917 4919 322 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:1483 _1397 ] [1483])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [2865])) [2 qv S4 A32])
        (reg:SF 21 xmm0 [orig:1484 _1398 ] [1484])) "ETAFLD2.f":833 131 {*movsf_internal}
     (nil))
(insn 4919 4918 4920 322 (set (reg:SI 0 ax [2866])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -232 [0xffffffffffffff18])) [1 llmh+0 S4 A32])) "ETAFLD2.f":834 86 {*movsi_internal}
     (nil))
(insn 4920 4919 4921 322 (set (reg:DI 0 ax [orig:1485 _1399 ] [1485])
        (sign_extend:DI (reg:SI 0 ax [2866]))) "ETAFLD2.f":834 149 {*extendsidi2_rex64}
     (nil))
(insn 4921 4920 4922 322 (parallel [
            (set (reg:DI 1 dx [orig:1486 _1400 ] [1486])
                (mult:DI (reg:DI 0 ax [orig:1485 _1399 ] [1485])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":834 349 {*muldi3_1}
     (nil))
(insn 4922 4921 4923 322 (set (reg:SI 0 ax [2867])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])) "ETAFLD2.f":834 86 {*movsi_internal}
     (nil))
(insn 4923 4922 4924 322 (set (reg:DI 0 ax [orig:1487 _1401 ] [1487])
        (sign_extend:DI (reg:SI 0 ax [2867]))) "ETAFLD2.f":834 149 {*extendsidi2_rex64}
     (nil))
(insn 4924 4923 4925 322 (parallel [
            (set (reg:DI 0 ax [orig:1488 _1402 ] [1488])
                (mult:DI (reg:DI 0 ax [orig:1487 _1401 ] [1487])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":834 349 {*muldi3_1}
     (nil))
(insn 4925 4924 4926 322 (parallel [
            (set (reg:DI 1 dx [orig:1489 _1403 ] [1489])
                (plus:DI (reg:DI 1 dx [orig:1486 _1400 ] [1486])
                    (reg:DI 0 ax [orig:1488 _1402 ] [1488])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":834 222 {*adddi_1}
     (nil))
(insn 4926 4925 4927 322 (set (reg:SI 0 ax [2868])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "ETAFLD2.f":834 86 {*movsi_internal}
     (nil))
(insn 4927 4926 4928 322 (set (reg:DI 0 ax [orig:1490 _1404 ] [1490])
        (sign_extend:DI (reg:SI 0 ax [2868]))) "ETAFLD2.f":834 149 {*extendsidi2_rex64}
     (nil))
(insn 4928 4927 4929 322 (parallel [
            (set (reg:DI 0 ax [orig:1491 _1405 ] [1491])
                (plus:DI (reg:DI 0 ax [orig:1490 _1404 ] [1490])
                    (reg:DI 1 dx [orig:1489 _1403 ] [1489])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":834 222 {*adddi_1}
     (nil))
(insn 4929 4928 4930 322 (parallel [
            (set (reg:DI 1 dx [orig:1492 _1406 ] [1492])
                (plus:DI (reg:DI 0 ax [orig:1491 _1405 ] [1491])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":834 222 {*adddi_1}
     (nil))
(insn 4930 4929 4931 322 (set (reg/f:DI 0 ax [2869])
        (symbol_ref:DI ("iw.4421") [flags 0x202]  <var_decl 0x7f9827e68bd0 iw>)) "ETAFLD2.f":834 85 {*movdi_internal}
     (nil))
(insn 4931 4930 4932 322 (set (reg:SF 22 xmm1 [orig:1493 _1407 ] [1493])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:1492 _1406 ] [1492])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [2869])) [2 iw S4 A32])) "ETAFLD2.f":834 131 {*movsf_internal}
     (nil))
(insn 4932 4931 4933 322 (set (reg:SF 21 xmm0 [2870])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0  S4 A32])) "ETAFLD2.f":834 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 4933 4932 4934 322 (set (reg:SF 21 xmm0 [orig:1494 _1408 ] [1494])
        (minus:SF (reg:SF 21 xmm0 [2870])
            (reg:SF 22 xmm1 [orig:1493 _1407 ] [1493]))) "ETAFLD2.f":834 841 {*fop_sf_1}
     (nil))
(insn 4934 4933 4935 322 (set (reg:SF 22 xmm1 [orig:1495 _1409 ] [1495])
        (reg:SF 21 xmm0 [orig:1494 _1408 ] [1494])) "ETAFLD2.f":834 131 {*movsf_internal}
     (nil))
(insn 4935 4934 4936 322 (set (reg:SI 0 ax [2871])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -232 [0xffffffffffffff18])) [1 llmh+0 S4 A32])) "ETAFLD2.f":834 86 {*movsi_internal}
     (nil))
(insn 4936 4935 4937 322 (set (reg:DI 0 ax [orig:1496 _1410 ] [1496])
        (sign_extend:DI (reg:SI 0 ax [2871]))) "ETAFLD2.f":834 149 {*extendsidi2_rex64}
     (nil))
(insn 4937 4936 4938 322 (parallel [
            (set (reg:DI 1 dx [orig:1497 _1411 ] [1497])
                (mult:DI (reg:DI 0 ax [orig:1496 _1410 ] [1496])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":834 349 {*muldi3_1}
     (nil))
(insn 4938 4937 4939 322 (set (reg:SI 0 ax [2872])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])) "ETAFLD2.f":834 86 {*movsi_internal}
     (nil))
(insn 4939 4938 4940 322 (set (reg:DI 0 ax [orig:1498 _1412 ] [1498])
        (sign_extend:DI (reg:SI 0 ax [2872]))) "ETAFLD2.f":834 149 {*extendsidi2_rex64}
     (nil))
(insn 4940 4939 4941 322 (parallel [
            (set (reg:DI 0 ax [orig:1499 _1413 ] [1499])
                (mult:DI (reg:DI 0 ax [orig:1498 _1412 ] [1498])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":834 349 {*muldi3_1}
     (nil))
(insn 4941 4940 4942 322 (parallel [
            (set (reg:DI 1 dx [orig:1500 _1414 ] [1500])
                (plus:DI (reg:DI 1 dx [orig:1497 _1411 ] [1497])
                    (reg:DI 0 ax [orig:1499 _1413 ] [1499])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":834 222 {*adddi_1}
     (nil))
(insn 4942 4941 4943 322 (set (reg:SI 0 ax [2873])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "ETAFLD2.f":834 86 {*movsi_internal}
     (nil))
(insn 4943 4942 4944 322 (set (reg:DI 0 ax [orig:1501 _1415 ] [1501])
        (sign_extend:DI (reg:SI 0 ax [2873]))) "ETAFLD2.f":834 149 {*extendsidi2_rex64}
     (nil))
(insn 4944 4943 4945 322 (parallel [
            (set (reg:DI 0 ax [orig:1502 _1416 ] [1502])
                (plus:DI (reg:DI 0 ax [orig:1501 _1415 ] [1501])
                    (reg:DI 1 dx [orig:1500 _1414 ] [1500])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":834 222 {*adddi_1}
     (nil))
(insn 4945 4944 4946 322 (parallel [
            (set (reg:DI 1 dx [orig:1503 _1417 ] [1503])
                (plus:DI (reg:DI 0 ax [orig:1502 _1416 ] [1502])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":834 222 {*adddi_1}
     (nil))
(insn 4946 4945 4947 322 (set (reg/f:DI 0 ax [2874])
        (symbol_ref:DI ("cldwtr_") [flags 0x202]  <var_decl 0x7f9828232a20 cldwtr>)) "ETAFLD2.f":834 85 {*movdi_internal}
     (nil))
(insn 4947 4946 4948 322 (set (reg:SF 21 xmm0 [orig:1504 _1418 ] [1504])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:1503 _1417 ] [1503])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [2874])) [2 cldwtr.cwm S4 A32])) "ETAFLD2.f":834 131 {*movsf_internal}
     (nil))
(insn 4948 4947 4949 322 (set (reg:SI 0 ax [2875])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])) "ETAFLD2.f":834 86 {*movsi_internal}
     (nil))
(insn 4949 4948 4950 322 (set (reg:DI 0 ax [orig:1505 _1419 ] [1505])
        (sign_extend:DI (reg:SI 0 ax [2875]))) "ETAFLD2.f":834 149 {*extendsidi2_rex64}
     (nil))
(insn 4950 4949 4951 322 (parallel [
            (set (reg:DI 1 dx [orig:1506 _1420 ] [1506])
                (mult:DI (reg:DI 0 ax [orig:1505 _1419 ] [1505])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":834 349 {*muldi3_1}
     (nil))
(insn 4951 4950 4952 322 (set (reg:SI 0 ax [2876])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "ETAFLD2.f":834 86 {*movsi_internal}
     (nil))
(insn 4952 4951 4953 322 (set (reg:DI 0 ax [orig:1507 _1421 ] [1507])
        (sign_extend:DI (reg:SI 0 ax [2876]))) "ETAFLD2.f":834 149 {*extendsidi2_rex64}
     (nil))
(insn 4953 4952 4954 322 (parallel [
            (set (reg:DI 0 ax [orig:1508 _1422 ] [1508])
                (plus:DI (reg:DI 0 ax [orig:1507 _1421 ] [1507])
                    (reg:DI 1 dx [orig:1506 _1420 ] [1506])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":834 222 {*adddi_1}
     (nil))
(insn 4954 4953 4955 322 (parallel [
            (set (reg:DI 1 dx [orig:1509 _1423 ] [1509])
                (plus:DI (reg:DI 0 ax [orig:1508 _1422 ] [1508])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":834 222 {*adddi_1}
     (nil))
(insn 4955 4954 4956 322 (set (reg:SF 21 xmm0 [orig:1510 _1424 ] [1510])
        (mult:SF (reg:SF 21 xmm0 [orig:1504 _1418 ] [1504])
            (reg:SF 22 xmm1 [orig:1495 _1409 ] [1495]))) "ETAFLD2.f":834 838 {*fop_sf_comm}
     (nil))
(insn 4956 4955 4957 322 (set (reg/f:DI 0 ax [2877])
        (symbol_ref:DI ("qcd.4442") [flags 0x202]  <var_decl 0x7f9827e6b630 qcd>)) "ETAFLD2.f":834 85 {*movdi_internal}
     (nil))
(insn 4957 4956 4958 322 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:1509 _1423 ] [1509])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [2877])) [2 qcd S4 A32])
        (reg:SF 21 xmm0 [orig:1510 _1424 ] [1510])) "ETAFLD2.f":834 131 {*movsf_internal}
     (nil))
(insn 4958 4957 4959 322 (set (reg:SI 0 ax [2878])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -232 [0xffffffffffffff18])) [1 llmh+0 S4 A32])) "ETAFLD2.f":835 86 {*movsi_internal}
     (nil))
(insn 4959 4958 4960 322 (set (reg:DI 0 ax [orig:1511 _1425 ] [1511])
        (sign_extend:DI (reg:SI 0 ax [2878]))) "ETAFLD2.f":835 149 {*extendsidi2_rex64}
     (nil))
(insn 4960 4959 4961 322 (parallel [
            (set (reg:DI 1 dx [orig:1512 _1426 ] [1512])
                (mult:DI (reg:DI 0 ax [orig:1511 _1425 ] [1511])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":835 349 {*muldi3_1}
     (nil))
(insn 4961 4960 4962 322 (set (reg:SI 0 ax [2879])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])) "ETAFLD2.f":835 86 {*movsi_internal}
     (nil))
(insn 4962 4961 4963 322 (set (reg:DI 0 ax [orig:1513 _1427 ] [1513])
        (sign_extend:DI (reg:SI 0 ax [2879]))) "ETAFLD2.f":835 149 {*extendsidi2_rex64}
     (nil))
(insn 4963 4962 4964 322 (parallel [
            (set (reg:DI 0 ax [orig:1514 _1428 ] [1514])
                (mult:DI (reg:DI 0 ax [orig:1513 _1427 ] [1513])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":835 349 {*muldi3_1}
     (nil))
(insn 4964 4963 4965 322 (parallel [
            (set (reg:DI 1 dx [orig:1515 _1429 ] [1515])
                (plus:DI (reg:DI 1 dx [orig:1512 _1426 ] [1512])
                    (reg:DI 0 ax [orig:1514 _1428 ] [1514])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":835 222 {*adddi_1}
     (nil))
(insn 4965 4964 4966 322 (set (reg:SI 0 ax [2880])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "ETAFLD2.f":835 86 {*movsi_internal}
     (nil))
(insn 4966 4965 4967 322 (set (reg:DI 0 ax [orig:1516 _1430 ] [1516])
        (sign_extend:DI (reg:SI 0 ax [2880]))) "ETAFLD2.f":835 149 {*extendsidi2_rex64}
     (nil))
(insn 4967 4966 4968 322 (parallel [
            (set (reg:DI 0 ax [orig:1517 _1431 ] [1517])
                (plus:DI (reg:DI 0 ax [orig:1516 _1430 ] [1516])
                    (reg:DI 1 dx [orig:1515 _1429 ] [1515])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":835 222 {*adddi_1}
     (nil))
(insn 4968 4967 4969 322 (parallel [
            (set (reg:DI 1 dx [orig:1518 _1432 ] [1518])
                (plus:DI (reg:DI 0 ax [orig:1517 _1431 ] [1517])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":835 222 {*adddi_1}
     (nil))
(insn 4969 4968 4970 322 (set (reg/f:DI 0 ax [2881])
        (symbol_ref:DI ("iw.4421") [flags 0x202]  <var_decl 0x7f9827e68bd0 iw>)) "ETAFLD2.f":835 85 {*movdi_internal}
     (nil))
(insn 4970 4969 4971 322 (set (reg:SF 22 xmm1 [orig:1519 _1433 ] [1519])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:1518 _1432 ] [1518])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [2881])) [2 iw S4 A32])) "ETAFLD2.f":835 131 {*movsf_internal}
     (nil))
(insn 4971 4970 4972 322 (set (reg:SI 0 ax [2882])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -232 [0xffffffffffffff18])) [1 llmh+0 S4 A32])) "ETAFLD2.f":835 86 {*movsi_internal}
     (nil))
(insn 4972 4971 4973 322 (set (reg:DI 0 ax [orig:1520 _1434 ] [1520])
        (sign_extend:DI (reg:SI 0 ax [2882]))) "ETAFLD2.f":835 149 {*extendsidi2_rex64}
     (nil))
(insn 4973 4972 4974 322 (parallel [
            (set (reg:DI 1 dx [orig:1521 _1435 ] [1521])
                (mult:DI (reg:DI 0 ax [orig:1520 _1434 ] [1520])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":835 349 {*muldi3_1}
     (nil))
(insn 4974 4973 4975 322 (set (reg:SI 0 ax [2883])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])) "ETAFLD2.f":835 86 {*movsi_internal}
     (nil))
(insn 4975 4974 4976 322 (set (reg:DI 0 ax [orig:1522 _1436 ] [1522])
        (sign_extend:DI (reg:SI 0 ax [2883]))) "ETAFLD2.f":835 149 {*extendsidi2_rex64}
     (nil))
(insn 4976 4975 4977 322 (parallel [
            (set (reg:DI 0 ax [orig:1523 _1437 ] [1523])
                (mult:DI (reg:DI 0 ax [orig:1522 _1436 ] [1522])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":835 349 {*muldi3_1}
     (nil))
(insn 4977 4976 4978 322 (parallel [
            (set (reg:DI 1 dx [orig:1524 _1438 ] [1524])
                (plus:DI (reg:DI 1 dx [orig:1521 _1435 ] [1521])
                    (reg:DI 0 ax [orig:1523 _1437 ] [1523])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":835 222 {*adddi_1}
     (nil))
(insn 4978 4977 4979 322 (set (reg:SI 0 ax [2884])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "ETAFLD2.f":835 86 {*movsi_internal}
     (nil))
(insn 4979 4978 4980 322 (set (reg:DI 0 ax [orig:1525 _1439 ] [1525])
        (sign_extend:DI (reg:SI 0 ax [2884]))) "ETAFLD2.f":835 149 {*extendsidi2_rex64}
     (nil))
(insn 4980 4979 4981 322 (parallel [
            (set (reg:DI 0 ax [orig:1526 _1440 ] [1526])
                (plus:DI (reg:DI 0 ax [orig:1525 _1439 ] [1525])
                    (reg:DI 1 dx [orig:1524 _1438 ] [1524])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":835 222 {*adddi_1}
     (nil))
(insn 4981 4980 4982 322 (parallel [
            (set (reg:DI 1 dx [orig:1527 _1441 ] [1527])
                (plus:DI (reg:DI 0 ax [orig:1526 _1440 ] [1526])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":835 222 {*adddi_1}
     (nil))
(insn 4982 4981 4983 322 (set (reg/f:DI 0 ax [2885])
        (symbol_ref:DI ("cldwtr_") [flags 0x202]  <var_decl 0x7f9828232a20 cldwtr>)) "ETAFLD2.f":835 85 {*movdi_internal}
     (nil))
(insn 4983 4982 4984 322 (set (reg:SF 21 xmm0 [orig:1528 _1442 ] [1528])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:1527 _1441 ] [1527])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [2885])) [2 cldwtr.cwm S4 A32])) "ETAFLD2.f":835 131 {*movsf_internal}
     (nil))
(insn 4984 4983 4985 322 (set (reg:SI 0 ax [2886])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])) "ETAFLD2.f":835 86 {*movsi_internal}
     (nil))
(insn 4985 4984 4986 322 (set (reg:DI 0 ax [orig:1529 _1443 ] [1529])
        (sign_extend:DI (reg:SI 0 ax [2886]))) "ETAFLD2.f":835 149 {*extendsidi2_rex64}
     (nil))
(insn 4986 4985 4987 322 (parallel [
            (set (reg:DI 1 dx [orig:1530 _1444 ] [1530])
                (mult:DI (reg:DI 0 ax [orig:1529 _1443 ] [1529])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":835 349 {*muldi3_1}
     (nil))
(insn 4987 4986 4988 322 (set (reg:SI 0 ax [2887])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "ETAFLD2.f":835 86 {*movsi_internal}
     (nil))
(insn 4988 4987 4989 322 (set (reg:DI 0 ax [orig:1531 _1445 ] [1531])
        (sign_extend:DI (reg:SI 0 ax [2887]))) "ETAFLD2.f":835 149 {*extendsidi2_rex64}
     (nil))
(insn 4989 4988 4990 322 (parallel [
            (set (reg:DI 0 ax [orig:1532 _1446 ] [1532])
                (plus:DI (reg:DI 0 ax [orig:1531 _1445 ] [1531])
                    (reg:DI 1 dx [orig:1530 _1444 ] [1530])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":835 222 {*adddi_1}
     (nil))
(insn 4990 4989 4991 322 (parallel [
            (set (reg:DI 1 dx [orig:1533 _1447 ] [1533])
                (plus:DI (reg:DI 0 ax [orig:1532 _1446 ] [1532])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":835 222 {*adddi_1}
     (nil))
(insn 4991 4990 4992 322 (set (reg:SF 21 xmm0 [orig:1534 _1448 ] [1534])
        (mult:SF (reg:SF 21 xmm0 [orig:1528 _1442 ] [1528])
            (reg:SF 22 xmm1 [orig:1519 _1433 ] [1519]))) "ETAFLD2.f":835 838 {*fop_sf_comm}
     (nil))
(insn 4992 4991 4993 322 (set (reg/f:DI 0 ax [2888])
        (symbol_ref:DI ("qice.4446") [flags 0x202]  <var_decl 0x7f9827e6b750 qice>)) "ETAFLD2.f":835 85 {*movdi_internal}
     (nil))
(insn 4993 4992 4994 322 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:1533 _1447 ] [1533])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [2888])) [2 qice S4 A32])
        (reg:SF 21 xmm0 [orig:1534 _1448 ] [1534])) "ETAFLD2.f":835 131 {*movsf_internal}
     (nil))
(insn 4994 4993 4995 322 (set (reg:SI 0 ax [2889])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])) "ETAFLD2.f":836 86 {*movsi_internal}
     (nil))
(insn 4995 4994 4996 322 (set (reg:DI 0 ax [orig:1535 _1449 ] [1535])
        (sign_extend:DI (reg:SI 0 ax [2889]))) "ETAFLD2.f":836 149 {*extendsidi2_rex64}
     (nil))
(insn 4996 4995 4997 322 (parallel [
            (set (reg:DI 1 dx [orig:1536 _1450 ] [1536])
                (mult:DI (reg:DI 0 ax [orig:1535 _1449 ] [1535])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":836 349 {*muldi3_1}
     (nil))
(insn 4997 4996 4998 322 (set (reg:SI 0 ax [2890])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "ETAFLD2.f":836 86 {*movsi_internal}
     (nil))
(insn 4998 4997 4999 322 (set (reg:DI 0 ax [orig:1537 _1451 ] [1537])
        (sign_extend:DI (reg:SI 0 ax [2890]))) "ETAFLD2.f":836 149 {*extendsidi2_rex64}
     (nil))
(insn 4999 4998 5000 322 (parallel [
            (set (reg:DI 0 ax [orig:1538 _1452 ] [1538])
                (plus:DI (reg:DI 0 ax [orig:1537 _1451 ] [1537])
                    (reg:DI 1 dx [orig:1536 _1450 ] [1536])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":836 222 {*adddi_1}
     (nil))
(insn 5000 4999 5001 322 (parallel [
            (set (reg:DI 1 dx [orig:1539 _1453 ] [1539])
                (plus:DI (reg:DI 0 ax [orig:1538 _1452 ] [1538])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":836 222 {*adddi_1}
     (nil))
(insn 5001 5000 5002 322 (set (reg/f:DI 0 ax [2891])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f9828240b40 extra>)) "ETAFLD2.f":836 85 {*movdi_internal}
     (nil))
(insn 5002 5001 5003 322 (parallel [
            (set (reg:DI 1 dx [2892])
                (plus:DI (reg:DI 1 dx [orig:1539 _1453 ] [1539])
                    (const_int 4647393 [0x46e9e1])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":836 222 {*adddi_1}
     (nil))
(insn 5003 5002 5004 322 (set (reg:SF 22 xmm1 [orig:1540 _1454 ] [1540])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [2892])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [2891])) [2 extra.pdsl S4 A32])) "ETAFLD2.f":836 131 {*movsf_internal}
     (nil))
(insn 5004 5003 5005 322 (set (reg:SI 0 ax [2893])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])) "ETAFLD2.f":836 86 {*movsi_internal}
     (nil))
(insn 5005 5004 5006 322 (set (reg:DI 0 ax [orig:1541 _1455 ] [1541])
        (sign_extend:DI (reg:SI 0 ax [2893]))) "ETAFLD2.f":836 149 {*extendsidi2_rex64}
     (nil))
(insn 5006 5005 5007 322 (parallel [
            (set (reg:DI 1 dx [orig:1542 _1456 ] [1542])
                (mult:DI (reg:DI 0 ax [orig:1541 _1455 ] [1541])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":836 349 {*muldi3_1}
     (nil))
(insn 5007 5006 5008 322 (set (reg:SI 0 ax [2894])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "ETAFLD2.f":836 86 {*movsi_internal}
     (nil))
(insn 5008 5007 5009 322 (set (reg:DI 0 ax [orig:1543 _1457 ] [1543])
        (sign_extend:DI (reg:SI 0 ax [2894]))) "ETAFLD2.f":836 149 {*extendsidi2_rex64}
     (nil))
(insn 5009 5008 5010 322 (parallel [
            (set (reg:DI 0 ax [orig:1544 _1458 ] [1544])
                (plus:DI (reg:DI 0 ax [orig:1543 _1457 ] [1543])
                    (reg:DI 1 dx [orig:1542 _1456 ] [1542])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":836 222 {*adddi_1}
     (nil))
(insn 5010 5009 5011 322 (parallel [
            (set (reg:DI 1 dx [orig:1545 _1459 ] [1545])
                (plus:DI (reg:DI 0 ax [orig:1544 _1458 ] [1544])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":836 222 {*adddi_1}
     (nil))
(insn 5011 5010 5012 322 (set (reg/f:DI 0 ax [2895])
        (symbol_ref:DI ("loops_") [flags 0x202]  <var_decl 0x7f9828246c60 loops>)) "ETAFLD2.f":836 85 {*movdi_internal}
     (nil))
(insn 5012 5011 5013 322 (parallel [
            (set (reg:DI 1 dx [2896])
                (plus:DI (reg:DI 1 dx [orig:1545 _1459 ] [1545])
                    (const_int 2420 [0x974])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":836 222 {*adddi_1}
     (nil))
(insn 5013 5012 5014 322 (set (reg:SI 0 ax [orig:1546 _1460 ] [1546])
        (mem:SI (plus:DI (mult:DI (reg:DI 1 dx [2896])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [2895])) [1 loops.lmh S4 A32])) "ETAFLD2.f":836 86 {*movsi_internal}
     (nil))
(insn 5014 5013 5015 322 (set (reg:DI 0 ax [orig:1547 _1461 ] [1547])
        (sign_extend:DI (reg:SI 0 ax [orig:1546 _1460 ] [1546]))) "ETAFLD2.f":836 149 {*extendsidi2_rex64}
     (nil))
(insn 5015 5014 5016 322 (parallel [
            (set (reg:DI 1 dx [orig:1548 _1462 ] [1548])
                (plus:DI (reg:DI 0 ax [orig:1547 _1461 ] [1547])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":836 222 {*adddi_1}
     (nil))
(insn 5016 5015 5017 322 (set (reg/f:DI 0 ax [2897])
        (symbol_ref:DI ("mapot_") [flags 0x202]  <var_decl 0x7f982824b120 mapot>)) "ETAFLD2.f":836 85 {*movdi_internal}
     (nil))
(insn 5017 5016 5018 322 (parallel [
            (set (reg:DI 1 dx [2898])
                (plus:DI (reg:DI 1 dx [orig:1548 _1462 ] [1548])
                    (const_int 1000099 [0xf42a3])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":836 222 {*adddi_1}
     (nil))
(insn 5018 5017 5019 322 (set (reg:SF 21 xmm0 [orig:1549 _1463 ] [1549])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [2898])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [2897])) [2 mapot.aeta S4 A32])) "ETAFLD2.f":836 131 {*movsf_internal}
     (nil))
(insn 5019 5018 5020 322 (set (reg:SF 22 xmm1 [orig:1550 _1464 ] [1550])
        (mult:SF (reg:SF 22 xmm1 [orig:1540 _1454 ] [1540])
            (reg:SF 21 xmm0 [orig:1549 _1463 ] [1549]))) "ETAFLD2.f":836 838 {*fop_sf_comm}
     (nil))
(insn 5020 5019 5021 322 (set (reg/f:DI 0 ax [2899])
        (symbol_ref:DI ("mapot_") [flags 0x202]  <var_decl 0x7f982824b120 mapot>)) "ETAFLD2.f":1 85 {*movdi_internal}
     (nil))
(insn 5021 5020 5022 322 (set (reg:SF 21 xmm0 [orig:1551 _1465 ] [1551])
        (mem/c:SF (plus:DI (reg/f:DI 0 ax [2899])
                (const_int 4000012 [0x3d090c])) [2 mapot.pt+0 S4 A32])) "ETAFLD2.f":1 131 {*movsf_internal}
     (nil))
(insn 5022 5021 5023 322 (set (reg:SI 0 ax [2900])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])) "ETAFLD2.f":836 86 {*movsi_internal}
     (nil))
(insn 5023 5022 5024 322 (set (reg:DI 0 ax [orig:1552 _1466 ] [1552])
        (sign_extend:DI (reg:SI 0 ax [2900]))) "ETAFLD2.f":836 149 {*extendsidi2_rex64}
     (nil))
(insn 5024 5023 5025 322 (parallel [
            (set (reg:DI 1 dx [orig:1553 _1467 ] [1553])
                (mult:DI (reg:DI 0 ax [orig:1552 _1466 ] [1552])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":836 349 {*muldi3_1}
     (nil))
(insn 5025 5024 5026 322 (set (reg:SI 0 ax [2901])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "ETAFLD2.f":836 86 {*movsi_internal}
     (nil))
(insn 5026 5025 5027 322 (set (reg:DI 0 ax [orig:1554 _1468 ] [1554])
        (sign_extend:DI (reg:SI 0 ax [2901]))) "ETAFLD2.f":836 149 {*extendsidi2_rex64}
     (nil))
(insn 5027 5026 5028 322 (parallel [
            (set (reg:DI 0 ax [orig:1555 _1469 ] [1555])
                (plus:DI (reg:DI 0 ax [orig:1554 _1468 ] [1554])
                    (reg:DI 1 dx [orig:1553 _1467 ] [1553])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":836 222 {*adddi_1}
     (nil))
(insn 5028 5027 5029 322 (parallel [
            (set (reg:DI 1 dx [orig:1556 _1470 ] [1556])
                (plus:DI (reg:DI 0 ax [orig:1555 _1469 ] [1555])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":836 222 {*adddi_1}
     (nil))
(insn 5029 5028 5030 322 (set (reg:SF 21 xmm0 [orig:1557 _1471 ] [1557])
        (plus:SF (reg:SF 21 xmm0 [orig:1551 _1465 ] [1551])
            (reg:SF 22 xmm1 [orig:1550 _1464 ] [1550]))) "ETAFLD2.f":836 838 {*fop_sf_comm}
     (nil))
(insn 5030 5029 5031 322 (set (reg/f:DI 0 ax [2902])
        (symbol_ref:DI ("ppp.4437") [flags 0x202]  <var_decl 0x7f9827e6b480 ppp>)) "ETAFLD2.f":836 85 {*movdi_internal}
     (nil))
(insn 5031 5030 5032 322 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:1556 _1470 ] [1556])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [2902])) [2 ppp S4 A32])
        (reg:SF 21 xmm0 [orig:1557 _1471 ] [1557])) "ETAFLD2.f":836 131 {*movsf_internal}
     (nil))
(insn 5032 5031 5679 322 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":814 221 {*addsi_1}
     (nil))
(jump_insn 5679 5032 5680 322 (set (pc)
        (label_ref 5033)) "ETAFLD2.f":814 683 {jump}
     (nil)
 -> 5033)
;;  succ:       317 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1723

(barrier 5680 5679 5801)
;; basic block 398, loop depth 0, maybe hot
;;  prev block 322, next block 323, flags: (RTL, MODIFIED)
;;  pred:       317
;; bb 398 artificial_defs: { }
;; bb 398 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1723
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 5801 5680 5800 398 258 (nil) [1 uses])
(note 5800 5801 5802 398 [bb 398] NOTE_INSN_BASIC_BLOCK)
(insn 5802 5800 5036 398 (const_int 0 [0]) "ETAFLD2.f":836 718 {nop}
     (nil))
;;  succ:       323 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1723

;; basic block 323, loop depth 0, maybe hot
;;  prev block 398, next block 397, flags: (RTL, MODIFIED)
;;  pred:       398 [always]  (FALLTHRU)
;; bb 323 artificial_defs: { }
;; bb 323 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1723
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 5036 5802 5037 323 173 (nil) [0 uses])
(note 5037 5036 5038 323 [bb 323] NOTE_INSN_BASIC_BLOCK)
(insn 5038 5037 5681 323 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":813 221 {*addsi_1}
     (nil))
(jump_insn 5681 5038 5682 323 (set (pc)
        (label_ref 5039)) "ETAFLD2.f":813 683 {jump}
     (nil)
 -> 5039)
;;  succ:       315 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1723

(barrier 5682 5681 5798)
;; basic block 397, loop depth 0, maybe hot
;;  prev block 323, next block 324, flags: (RTL, MODIFIED)
;;  pred:       315
;; bb 397 artificial_defs: { }
;; bb 397 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 5798 5682 5797 397 257 (nil) [1 uses])
(note 5797 5798 5799 397 [bb 397] NOTE_INSN_BASIC_BLOCK)
(insn 5799 5797 5042 397 (const_int 0 [0]) "ETAFLD2.f":814 718 {nop}
     (nil))
;;  succ:       324 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 324, loop depth 0, maybe hot
;;  prev block 397, next block 325, flags: (RTL, MODIFIED)
;;  pred:       397 [always]  (FALLTHRU)
;; bb 324 artificial_defs: { }
;; bb 324 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 1558 1559 1560 1561 1562 2903 2904 2905 2906 2907 2908 2909 2910 2911 2912 2913 2914 2915
(code_label 5042 5799 5043 324 172 (nil) [0 uses])
(note 5043 5042 5900 324 [bb 324] NOTE_INSN_BASIC_BLOCK)
(insn 5900 5043 5044 324 (set (reg:DI 0 ax [3024])
        (symbol_ref:DI ("vis.4483") [flags 0x202]  <var_decl 0x7f9827e6f750 vis>)) "ETAFLD2.f":840 85 {*movdi_internal}
     (nil))
(insn 5044 5900 5901 324 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [4  S8 A64])
        (reg:DI 0 ax [3024])) "ETAFLD2.f":840 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 5901 5044 5045 324 (set (reg:DI 0 ax [3025])
        (symbol_ref:DI ("ppp.4437") [flags 0x202]  <var_decl 0x7f9827e6b480 ppp>)) "ETAFLD2.f":840 85 {*movdi_internal}
     (nil))
(insn 5045 5901 5046 324 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [4  S8 A64])
        (reg:DI 0 ax [3025])) "ETAFLD2.f":840 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 5046 5045 5047 324 (set (reg:DI 38 r9)
        (symbol_ref:DI ("tt.4476") [flags 0x202]  <var_decl 0x7f9827e6f480 tt>)) "ETAFLD2.f":840 85 {*movdi_internal}
     (nil))
(insn 5047 5046 5048 324 (set (reg:DI 37 r8)
        (symbol_ref:DI ("qsno.4453") [flags 0x202]  <var_decl 0x7f9827e6b990 qsno>)) "ETAFLD2.f":840 85 {*movdi_internal}
     (nil))
(insn 5048 5047 5049 324 (set (reg:DI 2 cx)
        (symbol_ref:DI ("qice.4446") [flags 0x202]  <var_decl 0x7f9827e6b750 qice>)) "ETAFLD2.f":840 85 {*movdi_internal}
     (nil))
(insn 5049 5048 5050 324 (set (reg:DI 1 dx)
        (symbol_ref:DI ("qrain.4451") [flags 0x202]  <var_decl 0x7f9827e6b900 qrain>)) "ETAFLD2.f":840 85 {*movdi_internal}
     (nil))
(insn 5050 5049 5051 324 (set (reg:DI 4 si)
        (symbol_ref:DI ("qcd.4442") [flags 0x202]  <var_decl 0x7f9827e6b630 qcd>)) "ETAFLD2.f":840 85 {*movdi_internal}
     (nil))
(insn 5051 5050 5052 324 (set (reg:DI 5 di)
        (symbol_ref:DI ("qv.4455") [flags 0x202]  <var_decl 0x7f9827e6ba20 qv>)) "ETAFLD2.f":840 85 {*movdi_internal}
     (nil))
(insn 5052 5051 5053 324 (set (reg:QI 0 ax)
        (const_int 0 [0])) "ETAFLD2.f":840 88 {*movqi_internal}
     (nil))
(call_insn 5053 5052 5054 324 (call (mem:QI (symbol_ref:DI ("calvis_") [flags 0x41]  <function_decl 0x7f9827e92400 calvis>) [0 calvis S1 A8])
        (const_int 16 [0x10])) "ETAFLD2.f":840 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
(insn 5054 5053 5055 324 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":840 222 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 5055 5054 5056 324 (set (reg:DI 1 dx [2903])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [4 grid2+0 S8 A64])) "ETAFLD2.f":841 85 {*movdi_internal}
     (nil))
(insn 5056 5055 5057 324 (set (reg:DI 0 ax [2904])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "ETAFLD2.f":841 85 {*movdi_internal}
     (nil))
(insn 5057 5056 5058 324 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [11  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -832 [0xfffffffffffffcc0])) [11 jmout+0 S8 A64])) "ETAFLD2.f":841 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 5058 5057 5059 324 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [11  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -824 [0xfffffffffffffcc8])) [11 imout+0 S8 A64])) "ETAFLD2.f":841 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 5059 5058 5060 324 (set (reg:DI 38 r9)
        (reg:DI 1 dx [2903])) "ETAFLD2.f":841 85 {*movdi_internal}
     (nil))
(insn 5060 5059 5061 324 (set (reg:DI 37 r8)
        (reg:DI 0 ax [2904])) "ETAFLD2.f":841 85 {*movdi_internal}
     (nil))
(insn 5061 5060 5062 324 (set (reg:DI 2 cx)
        (symbol_ref:DI ("equiv.2.4368") [flags 0x202]  <var_decl 0x7f9828263510 equiv.2>)) "ETAFLD2.f":841 85 {*movdi_internal}
     (nil))
(insn 5062 5061 5063 324 (set (reg:DI 1 dx)
        (symbol_ref:DI ("vis.4483") [flags 0x202]  <var_decl 0x7f9827e6f750 vis>)) "ETAFLD2.f":841 85 {*movdi_internal}
     (nil))
(insn 5063 5062 5064 324 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f9827f94240 *.LC3>)) "ETAFLD2.f":841 85 {*movdi_internal}
     (nil))
(insn 5064 5063 5065 324 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC70") [flags 0x2]  <var_decl 0x7f98280355a0 *.LC70>)) "ETAFLD2.f":841 85 {*movdi_internal}
     (nil))
(insn 5065 5064 5066 324 (set (reg:QI 0 ax)
        (const_int 0 [0])) "ETAFLD2.f":841 88 {*movqi_internal}
     (nil))
(call_insn 5066 5065 5067 324 (call (mem:QI (symbol_ref:DI ("e2out_") [flags 0x41]  <function_decl 0x7f9828228600 e2out>) [0 e2out S1 A8])
        (const_int 16 [0x10])) "ETAFLD2.f":841 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
(insn 5067 5066 5068 324 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":841 222 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 5068 5067 5069 324 (set (reg/f:DI 1 dx [2905])
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                (const_int 55216 [0xd7b0])))) "ETAFLD2.f":842 85 {*movdi_internal}
     (nil))
(insn 5069 5068 5070 324 (set (reg:DI 0 ax [2906])
        (const_int 0 [0])) "ETAFLD2.f":842 85 {*movdi_internal}
     (nil))
(insn 5070 5069 5902 324 (set (reg:DI 2 cx [2907])
        (const_int 12 [0xc])) "ETAFLD2.f":842 85 {*movdi_internal}
     (nil))
(insn 5902 5070 5071 324 (set (reg/f:DI 5 di [2905])
        (reg/f:DI 1 dx [2905])) "ETAFLD2.f":842 85 {*movdi_internal}
     (nil))
(insn 5071 5902 5903 324 (parallel [
            (set (reg:DI 2 cx [2907])
                (const_int 0 [0]))
            (set (reg/f:DI 5 di [2905])
                (plus:DI (ashift:DI (reg:DI 2 cx [2907])
                        (const_int 3 [0x3]))
                    (reg/f:DI 5 di [2905])))
            (set (mem/c:BLK (reg/f:DI 5 di [2905]) [1 rqstfld.id+0 S96 A128])
                (const_int 0 [0]))
            (use (reg:DI 0 ax [2906]))
            (use (reg:DI 2 cx [2907]))
        ]) "ETAFLD2.f":842 984 {*rep_stosdi_rex64}
     (nil))
(insn 5903 5071 5072 324 (set (reg/f:DI 1 dx [2905])
        (reg/f:DI 5 di [2905])) "ETAFLD2.f":842 85 {*movdi_internal}
     (nil))
(insn 5072 5903 5073 324 (set (mem/c:SI (reg/f:DI 1 dx [2905]) [1 rqstfld.id+96 S4 A128])
        (reg:SI 0 ax [2906])) "ETAFLD2.f":842 86 {*movsi_internal}
     (nil))
(insn 5073 5072 5074 324 (parallel [
            (set (reg/f:DI 1 dx [2905])
                (plus:DI (reg/f:DI 1 dx [2905])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":842 222 {*adddi_1}
     (nil))
(insn 5074 5073 5075 324 (set (reg:SI 0 ax [orig:1558 _1472 ] [1558])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 732 [0x2dc]))) [1 rqstfld.iget+716 S4 A32])) "ETAFLD2.f":844 86 {*movsi_internal}
     (nil))
(insn 5075 5074 5076 324 (set (reg:DI 0 ax [orig:1559 _1473 ] [1559])
        (sign_extend:DI (reg:SI 0 ax [orig:1558 _1472 ] [1558]))) "ETAFLD2.f":844 149 {*extendsidi2_rex64}
     (nil))
(insn 5076 5075 5077 324 (parallel [
            (set (reg:DI 1 dx [orig:1560 _1474 ] [1560])
                (plus:DI (reg:DI 0 ax [orig:1559 _1473 ] [1559])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":844 222 {*adddi_1}
     (nil))
(insn 5077 5076 5078 324 (set (reg:DI 0 ax [2908])
        (reg:DI 1 dx [orig:1560 _1474 ] [1560])) "ETAFLD2.f":844 85 {*movdi_internal}
     (nil))
(insn 5078 5077 5080 324 (parallel [
            (set (reg:DI 0 ax [2909])
                (ashift:DI (reg:DI 0 ax [2908])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":844 551 {*ashldi3_1}
     (nil))
(insn 5080 5078 5081 324 (parallel [
            (set (reg:DI 0 ax [2908])
                (minus:DI (reg:DI 0 ax [2908])
                    (reg:DI 1 dx [orig:1560 _1474 ] [1560])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":844 278 {*subdi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:1560 _1474 ] [1560])
            (const_int 15 [0xf]))
        (nil)))
(insn 5081 5080 5084 324 (parallel [
            (set (reg:DI 0 ax [2910])
                (ashift:DI (reg:DI 0 ax [2908])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":844 551 {*ashldi3_1}
     (nil))
(insn 5084 5081 5085 324 (parallel [
            (set (reg:DI 0 ax [2911])
                (plus:DI (reg:DI 0 ax [orig:1561 _1475 ] [1561])
                    (const_int 1404 [0x57c])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":844 222 {*adddi_1}
     (nil))
(insn 5085 5084 5086 324 (parallel [
            (set (reg:DI 0 ax [2912])
                (ashift:DI (reg:DI 0 ax [2911])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":844 551 {*ashldi3_1}
     (nil))
(insn 5086 5085 5087 324 (parallel [
            (set (reg/f:DI 1 dx [orig:1562 _1476 ] [1562])
                (plus:DI (reg:DI 0 ax [2912])
                    (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":844 222 {*adddi_1}
     (nil))
(insn 5087 5086 5088 324 (set (reg:DI 4 si [2913])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -832 [0xfffffffffffffcc0])) [11 jmout+0 S8 A64])) "ETAFLD2.f":844 85 {*movdi_internal}
     (nil))
(insn 5088 5087 5089 324 (set (reg:DI 2 cx [2914])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -824 [0xfffffffffffffcc8])) [11 imout+0 S8 A64])) "ETAFLD2.f":844 85 {*movdi_internal}
     (nil))
(insn 5089 5088 5090 324 (set (reg:DI 0 ax [2915])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "ETAFLD2.f":844 85 {*movdi_internal}
     (nil))
(insn 5090 5089 5091 324 (set (reg:DI 38 r9)
        (reg:DI 4 si [2913])) "ETAFLD2.f":844 85 {*movdi_internal}
     (nil))
(insn 5091 5090 5092 324 (set (reg:DI 37 r8)
        (reg:DI 2 cx [2914])) "ETAFLD2.f":844 85 {*movdi_internal}
     (nil))
(insn 5092 5091 5094 324 (set (reg:DI 2 cx)
        (reg:DI 0 ax [2915])) "ETAFLD2.f":844 85 {*movdi_internal}
     (nil))
(insn 5094 5092 5095 324 (set (reg:DI 4 si)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                (const_int 732 [0x2dc])))) "ETAFLD2.f":844 85 {*movdi_internal}
     (nil))
(insn 5095 5094 5096 324 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                (const_int 4 [0x4])))) "ETAFLD2.f":844 85 {*movdi_internal}
     (nil))
(insn 5096 5095 5097 324 (set (reg:QI 0 ax)
        (const_int 0 [0])) "ETAFLD2.f":844 88 {*movqi_internal}
     (nil))
(call_insn 5097 5096 5098 324 (call (mem:QI (symbol_ref:DI ("output_") [flags 0x41]  <function_decl 0x7f9828228700 output>) [0 output S1 A8])
        (const_int 0 [0])) "ETAFLD2.f":844 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
;;  succ:       325 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 325, loop depth 0, maybe hot
;;  prev block 324, next block 326, flags: (RTL, MODIFIED)
;;  pred:       313
;;              324 (FALLTHRU)
;; bb 325 artificial_defs: { }
;; bb 325 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1563
(code_label 5098 5097 5099 325 171 (nil) [1 uses])
(note 5099 5098 5100 325 [bb 325] NOTE_INSN_BASIC_BLOCK)
(insn 5100 5099 5101 325 (set (reg:SI 0 ax [orig:1563 _1477 ] [1563])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 456 [0x1c8]))) [1 rqstfld.iget+440 S4 A64])) "ETAFLD2.f":854 86 {*movsi_internal}
     (nil))
(insn 5101 5100 5102 325 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:1563 _1477 ] [1563])
            (const_int 0 [0]))) "ETAFLD2.f":854 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 5102 5101 5103 325 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 5111)
            (pc))) "ETAFLD2.f":854 682 {*jcc}
     (nil)
 -> 5111)
;;  succ:       328
;;              326 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 326, loop depth 0, maybe hot
;;  prev block 325, next block 327, flags: (RTL, MODIFIED)
;;  pred:       325 (FALLTHRU)
;; bb 326 artificial_defs: { }
;; bb 326 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1564
(note 5103 5102 5104 326 [bb 326] NOTE_INSN_BASIC_BLOCK)
(insn 5104 5103 5105 326 (set (reg:SI 0 ax [orig:1564 _1478 ] [1564])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 596 [0x254]))) [1 rqstfld.iget+580 S4 A32])) "ETAFLD2.f":854 86 {*movsi_internal}
     (nil))
(insn 5105 5104 5106 326 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:1564 _1478 ] [1564])
            (const_int 0 [0]))) "ETAFLD2.f":854 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 5106 5105 5107 326 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 5111)
            (pc))) "ETAFLD2.f":854 682 {*jcc}
     (nil)
 -> 5111)
;;  succ:       328
;;              327 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 327, loop depth 0, maybe hot
;;  prev block 326, next block 328, flags: (RTL, MODIFIED)
;;  pred:       326 (FALLTHRU)
;; bb 327 artificial_defs: { }
;; bb 327 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1565
(note 5107 5106 5108 327 [bb 327] NOTE_INSN_BASIC_BLOCK)
(insn 5108 5107 5109 327 (set (reg:SI 0 ax [orig:1565 _1479 ] [1565])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 600 [0x258]))) [1 rqstfld.iget+584 S4 A64])) "ETAFLD2.f":854 86 {*movsi_internal}
     (nil))
(insn 5109 5108 5110 327 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:1565 _1479 ] [1565])
            (const_int 0 [0]))) "ETAFLD2.f":854 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 5110 5109 5111 327 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 5804)
            (pc))) "ETAFLD2.f":854 682 {*jcc}
     (nil)
 -> 5804)
;;  succ:       328 (FALLTHRU)
;;              399
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 328, loop depth 0, maybe hot
;;  prev block 327, next block 329, flags: (RTL, MODIFIED)
;;  pred:       325
;;              326
;;              327 (FALLTHRU)
;; bb 328 artificial_defs: { }
;; bb 328 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 1566
(code_label 5111 5110 5112 328 179 (nil) [2 uses])
(note 5112 5111 5113 328 [bb 328] NOTE_INSN_BASIC_BLOCK)
(insn 5113 5112 5904 328 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":860 222 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 5904 5113 5114 328 (set (reg:DI 0 ax [3027])
        (symbol_ref:DI ("egrid5.4394") [flags 0x202]  <var_decl 0x7f9828263ea0 egrid5>)) "ETAFLD2.f":860 85 {*movdi_internal}
     (nil))
(insn 5114 5904 5905 328 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [4  S8 A64])
        (reg:DI 0 ax [3027])) "ETAFLD2.f":860 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 5905 5114 5115 328 (set (reg:DI 0 ax [3028])
        (symbol_ref:DI ("egrid4.4392") [flags 0x202]  <var_decl 0x7f9828263e10 egrid4>)) "ETAFLD2.f":860 85 {*movdi_internal}
     (nil))
(insn 5115 5905 5906 328 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [4  S8 A64])
        (reg:DI 0 ax [3028])) "ETAFLD2.f":860 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 24 [0x18])
        (nil)))
(insn 5906 5115 5116 328 (set (reg:DI 0 ax [3029])
        (symbol_ref:DI ("egrid3.4390") [flags 0x202]  <var_decl 0x7f9828263d80 egrid3>)) "ETAFLD2.f":860 85 {*movdi_internal}
     (nil))
(insn 5116 5906 5907 328 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [4  S8 A64])
        (reg:DI 0 ax [3029])) "ETAFLD2.f":860 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 32 [0x20])
        (nil)))
(insn 5907 5116 5117 328 (set (reg:DI 0 ax [3030])
        (symbol_ref:DI ("equiv.2.4368") [flags 0x202]  <var_decl 0x7f9828263510 equiv.2>)) "ETAFLD2.f":860 85 {*movdi_internal}
     (nil))
(insn 5117 5907 5908 328 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [4  S8 A64])
        (reg:DI 0 ax [3030])) "ETAFLD2.f":860 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 40 [0x28])
        (nil)))
(insn 5908 5117 5118 328 (set (reg:DI 0 ax [3031])
        (symbol_ref:DI ("equiv.3.4378") [flags 0x202]  <var_decl 0x7f9828263750 equiv.3>)) "ETAFLD2.f":860 85 {*movdi_internal}
     (nil))
(insn 5118 5908 5119 328 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [4  S8 A64])
        (reg:DI 0 ax [3031])) "ETAFLD2.f":860 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 48 [0x30])
        (nil)))
(insn 5119 5118 5120 328 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [8  S8 A64])
        (symbol_ref/f:DI ("*.LC71") [flags 0x2]  <var_decl 0x7f9828035630 *.LC71>)) "ETAFLD2.f":860 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 56 [0x38])
        (nil)))
(insn 5120 5119 5121 328 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [8  S8 A64])
        (symbol_ref/f:DI ("*.LC72") [flags 0x2]  <var_decl 0x7f98280356c0 *.LC72>)) "ETAFLD2.f":860 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 64 [0x40])
        (nil)))
(insn 5121 5120 5122 328 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [8  S8 A64])
        (symbol_ref/f:DI ("*.LC25") [flags 0x2]  <var_decl 0x7f9827f947e0 *.LC25>)) "ETAFLD2.f":860 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 72 [0x48])
        (nil)))
(insn 5122 5121 5909 328 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [8  S8 A64])
        (symbol_ref/f:DI ("*.LC26") [flags 0x2]  <var_decl 0x7f9827f94870 *.LC26>)) "ETAFLD2.f":860 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 80 [0x50])
        (nil)))
(insn 5909 5122 5123 328 (set (reg:DI 0 ax [3032])
        (const:DI (plus:DI (symbol_ref:DI ("loops_") [flags 0x202]  <var_decl 0x7f9828246c60 loops>)
                (const_int 9680 [0x25d0])))) "ETAFLD2.f":860 85 {*movdi_internal}
     (nil))
(insn 5123 5909 5910 328 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [8  S8 A64])
        (reg:DI 0 ax [3032])) "ETAFLD2.f":860 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 88 [0x58])
        (nil)))
(insn 5910 5123 5124 328 (set (reg:DI 0 ax [3033])
        (const:DI (plus:DI (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f9828240b40 extra>)
                (const_int 13748784 [0xd1ca30])))) "ETAFLD2.f":860 85 {*movdi_internal}
     (nil))
(insn 5124 5910 5125 328 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [4  S8 A64])
        (reg:DI 0 ax [3033])) "ETAFLD2.f":860 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 96 [0x60])
        (nil)))
(insn 5125 5124 5126 328 (set (reg:DI 38 r9)
        (const:DI (plus:DI (symbol_ref:DI ("masks_") [flags 0x202]  <var_decl 0x7f982824f480 masks>)
                (const_int 355572 [0x56cf4])))) "ETAFLD2.f":860 85 {*movdi_internal}
     (nil))
(insn 5126 5125 5127 328 (set (reg:DI 37 r8)
        (const:DI (plus:DI (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f9828240b40 extra>)
                (const_int 9244872 [0x8d10c8])))) "ETAFLD2.f":860 85 {*movdi_internal}
     (nil))
(insn 5127 5126 5128 328 (set (reg:DI 2 cx)
        (const:DI (plus:DI (symbol_ref:DI ("pvrbls_") [flags 0x202]  <var_decl 0x7f9828254510 pvrbls>)
                (const_int 2251956 [0x225cb4])))) "ETAFLD2.f":860 85 {*movdi_internal}
     (nil))
(insn 5128 5127 5129 328 (set (reg:DI 1 dx)
        (const:DI (plus:DI (symbol_ref:DI ("masks_") [flags 0x202]  <var_decl 0x7f982824f480 masks>)
                (const_int 592620 [0x90aec])))) "ETAFLD2.f":860 85 {*movdi_internal}
     (nil))
(insn 5129 5128 5130 328 (set (reg:DI 4 si)
        (const:DI (plus:DI (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f9828240b40 extra>)
                (const_int 18589572 [0x11ba784])))) "ETAFLD2.f":860 85 {*movdi_internal}
     (nil))
(insn 5130 5129 5131 328 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("mapot_") [flags 0x202]  <var_decl 0x7f982824b120 mapot>)
                (const_int 4000244 [0x3d09f4])))) "ETAFLD2.f":860 85 {*movdi_internal}
     (nil))
(insn 5131 5130 5132 328 (set (reg:QI 0 ax)
        (const_int 0 [0])) "ETAFLD2.f":860 88 {*movqi_internal}
     (nil))
(call_insn 5132 5131 5133 328 (call (mem:QI (symbol_ref:DI ("clmax_") [flags 0x41]  <function_decl 0x7f9827e92500 clmax>) [0 clmax S1 A8])
        (const_int 96 [0x60])) "ETAFLD2.f":860 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
(insn 5133 5132 5134 328 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 96 [0x60])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":860 222 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 5134 5133 5135 328 (set (reg:SI 0 ax [orig:1566 _1480 ] [1566])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 600 [0x258]))) [1 rqstfld.iget+584 S4 A64])) "ETAFLD2.f":863 86 {*movsi_internal}
     (nil))
(insn 5135 5134 5136 328 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:1566 _1480 ] [1566])
            (const_int 0 [0]))) "ETAFLD2.f":863 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 5136 5135 5137 328 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 5168)
            (pc))) "ETAFLD2.f":863 682 {*jcc}
     (nil)
 -> 5168)
;;  succ:       329 (FALLTHRU)
;;              330
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 329, loop depth 0, maybe hot
;;  prev block 328, next block 330, flags: (RTL, MODIFIED)
;;  pred:       328 (FALLTHRU)
;; bb 329 artificial_defs: { }
;; bb 329 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 2916 2917 2918 2919 2920 2921 2922 2923
(note 5137 5136 5138 329 [bb 329] NOTE_INSN_BASIC_BLOCK)
(insn 5138 5137 5139 329 (set (reg:DI 1 dx [2916])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [4 grid2+0 S8 A64])) "ETAFLD2.f":865 85 {*movdi_internal}
     (nil))
(insn 5139 5138 5140 329 (set (reg:DI 0 ax [2917])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "ETAFLD2.f":865 85 {*movdi_internal}
     (nil))
(insn 5140 5139 5141 329 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [11  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -832 [0xfffffffffffffcc0])) [11 jmout+0 S8 A64])) "ETAFLD2.f":865 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 5141 5140 5142 329 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [11  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -824 [0xfffffffffffffcc8])) [11 imout+0 S8 A64])) "ETAFLD2.f":865 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 5142 5141 5143 329 (set (reg:DI 38 r9)
        (reg:DI 1 dx [2916])) "ETAFLD2.f":865 85 {*movdi_internal}
     (nil))
(insn 5143 5142 5144 329 (set (reg:DI 37 r8)
        (reg:DI 0 ax [2917])) "ETAFLD2.f":865 85 {*movdi_internal}
     (nil))
(insn 5144 5143 5145 329 (set (reg:DI 2 cx)
        (symbol_ref:DI ("equiv.2.4368") [flags 0x202]  <var_decl 0x7f9828263510 equiv.2>)) "ETAFLD2.f":865 85 {*movdi_internal}
     (nil))
(insn 5145 5144 5146 329 (set (reg:DI 1 dx)
        (symbol_ref:DI ("equiv.3.4378") [flags 0x202]  <var_decl 0x7f9828263750 equiv.3>)) "ETAFLD2.f":865 85 {*movdi_internal}
     (nil))
(insn 5146 5145 5147 329 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f9827f94240 *.LC3>)) "ETAFLD2.f":865 85 {*movdi_internal}
     (nil))
(insn 5147 5146 5148 329 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC73") [flags 0x2]  <var_decl 0x7f9828035750 *.LC73>)) "ETAFLD2.f":865 85 {*movdi_internal}
     (nil))
(insn 5148 5147 5149 329 (set (reg:QI 0 ax)
        (const_int 0 [0])) "ETAFLD2.f":865 88 {*movqi_internal}
     (nil))
(call_insn 5149 5148 5150 329 (call (mem:QI (symbol_ref:DI ("e2out_") [flags 0x41]  <function_decl 0x7f9828228600 e2out>) [0 e2out S1 A8])
        (const_int 16 [0x10])) "ETAFLD2.f":865 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
(insn 5150 5149 5151 329 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":865 222 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 5151 5150 5152 329 (set (reg/f:DI 1 dx [2918])
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                (const_int 55216 [0xd7b0])))) "ETAFLD2.f":866 85 {*movdi_internal}
     (nil))
(insn 5152 5151 5153 329 (set (reg:DI 0 ax [2919])
        (const_int 0 [0])) "ETAFLD2.f":866 85 {*movdi_internal}
     (nil))
(insn 5153 5152 5911 329 (set (reg:DI 2 cx [2920])
        (const_int 12 [0xc])) "ETAFLD2.f":866 85 {*movdi_internal}
     (nil))
(insn 5911 5153 5154 329 (set (reg/f:DI 5 di [2918])
        (reg/f:DI 1 dx [2918])) "ETAFLD2.f":866 85 {*movdi_internal}
     (nil))
(insn 5154 5911 5912 329 (parallel [
            (set (reg:DI 2 cx [2920])
                (const_int 0 [0]))
            (set (reg/f:DI 5 di [2918])
                (plus:DI (ashift:DI (reg:DI 2 cx [2920])
                        (const_int 3 [0x3]))
                    (reg/f:DI 5 di [2918])))
            (set (mem/c:BLK (reg/f:DI 5 di [2918]) [1 rqstfld.id+0 S96 A128])
                (const_int 0 [0]))
            (use (reg:DI 0 ax [2919]))
            (use (reg:DI 2 cx [2920]))
        ]) "ETAFLD2.f":866 984 {*rep_stosdi_rex64}
     (nil))
(insn 5912 5154 5155 329 (set (reg/f:DI 1 dx [2918])
        (reg/f:DI 5 di [2918])) "ETAFLD2.f":866 85 {*movdi_internal}
     (nil))
(insn 5155 5912 5156 329 (set (mem/c:SI (reg/f:DI 1 dx [2918]) [1 rqstfld.id+96 S4 A128])
        (reg:SI 0 ax [2919])) "ETAFLD2.f":866 86 {*movsi_internal}
     (nil))
(insn 5156 5155 5157 329 (parallel [
            (set (reg/f:DI 1 dx [2918])
                (plus:DI (reg/f:DI 1 dx [2918])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":866 222 {*adddi_1}
     (nil))
(insn 5157 5156 5158 329 (set (reg:DI 2 cx [2921])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -832 [0xfffffffffffffcc0])) [11 jmout+0 S8 A64])) "ETAFLD2.f":867 85 {*movdi_internal}
     (nil))
(insn 5158 5157 5159 329 (set (reg:DI 1 dx [2922])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -824 [0xfffffffffffffcc8])) [11 imout+0 S8 A64])) "ETAFLD2.f":867 85 {*movdi_internal}
     (nil))
(insn 5159 5158 5160 329 (set (reg:DI 0 ax [2923])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "ETAFLD2.f":867 85 {*movdi_internal}
     (nil))
(insn 5160 5159 5161 329 (set (reg:DI 38 r9)
        (reg:DI 2 cx [2921])) "ETAFLD2.f":867 85 {*movdi_internal}
     (nil))
(insn 5161 5160 5162 329 (set (reg:DI 37 r8)
        (reg:DI 1 dx [2922])) "ETAFLD2.f":867 85 {*movdi_internal}
     (nil))
(insn 5162 5161 5163 329 (set (reg:DI 2 cx)
        (reg:DI 0 ax [2923])) "ETAFLD2.f":867 85 {*movdi_internal}
     (nil))
(insn 5163 5162 5164 329 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC72") [flags 0x2]  <var_decl 0x7f98280356c0 *.LC72>)) "ETAFLD2.f":867 85 {*movdi_internal}
     (nil))
(insn 5164 5163 5165 329 (set (reg:DI 4 si)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                (const_int 600 [0x258])))) "ETAFLD2.f":867 85 {*movdi_internal}
     (nil))
(insn 5165 5164 5166 329 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                (const_int 4 [0x4])))) "ETAFLD2.f":867 85 {*movdi_internal}
     (nil))
(insn 5166 5165 5167 329 (set (reg:QI 0 ax)
        (const_int 0 [0])) "ETAFLD2.f":867 88 {*movqi_internal}
     (nil))
(call_insn 5167 5166 5168 329 (call (mem:QI (symbol_ref:DI ("output_") [flags 0x41]  <function_decl 0x7f9828228700 output>) [0 output S1 A8])
        (const_int 0 [0])) "ETAFLD2.f":867 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
;;  succ:       330 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 330, loop depth 0, maybe hot
;;  prev block 329, next block 331, flags: (RTL, MODIFIED)
;;  pred:       328
;;              329 (FALLTHRU)
;; bb 330 artificial_defs: { }
;; bb 330 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1567
(code_label 5168 5167 5169 330 181 (nil) [1 uses])
(note 5169 5168 5170 330 [bb 330] NOTE_INSN_BASIC_BLOCK)
(insn 5170 5169 5171 330 (set (reg:SI 0 ax [orig:1567 _1481 ] [1567])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 456 [0x1c8]))) [1 rqstfld.iget+440 S4 A64])) "ETAFLD2.f":873 86 {*movsi_internal}
     (nil))
(insn 5171 5170 5172 330 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:1567 _1481 ] [1567])
            (const_int 0 [0]))) "ETAFLD2.f":873 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 5172 5171 5173 330 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 5177)
            (pc))) "ETAFLD2.f":873 682 {*jcc}
     (nil)
 -> 5177)
;;  succ:       332
;;              331 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 331, loop depth 0, maybe hot
;;  prev block 330, next block 332, flags: (RTL, MODIFIED)
;;  pred:       330 (FALLTHRU)
;; bb 331 artificial_defs: { }
;; bb 331 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1568
(note 5173 5172 5174 331 [bb 331] NOTE_INSN_BASIC_BLOCK)
(insn 5174 5173 5175 331 (set (reg:SI 0 ax [orig:1568 _1482 ] [1568])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 596 [0x254]))) [1 rqstfld.iget+580 S4 A32])) "ETAFLD2.f":873 86 {*movsi_internal}
     (nil))
(insn 5175 5174 5176 331 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:1568 _1482 ] [1568])
            (const_int 0 [0]))) "ETAFLD2.f":873 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 5176 5175 5177 331 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 5804)
            (pc))) "ETAFLD2.f":873 682 {*jcc}
     (nil)
 -> 5804)
;;  succ:       332 (FALLTHRU)
;;              399
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 332, loop depth 0, maybe hot
;;  prev block 331, next block 333, flags: (RTL, MODIFIED)
;;  pred:       330
;;              331 (FALLTHRU)
;; bb 332 artificial_defs: { }
;; bb 332 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 1732 1733
(code_label 5177 5176 5178 332 182 (nil) [1 uses])
(note 5178 5177 5179 332 [bb 332] NOTE_INSN_BASIC_BLOCK)
(insn 5179 5178 5180 332 (set (reg:SI 1 dx [orig:1732 _2235 ] [1732])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f982824fc60 parallel>)
                    (const_int 8 [0x8]))) [1 parallel.jsta+0 S4 A64])) "ETAFLD2.f":877 86 {*movsi_internal}
     (nil))
(insn 5180 5179 5181 332 (set (reg:SI 0 ax [orig:1733 _2236 ] [1733])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f982824fc60 parallel>)
                    (const_int 12 [0xc]))) [1 parallel.jend+0 S4 A32])) "ETAFLD2.f":877 86 {*movsi_internal}
     (nil))
(insn 5181 5180 5223 332 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])
        (reg:SI 1 dx [orig:1732 _2235 ] [1732])) "ETAFLD2.f":877 86 {*movsi_internal}
     (nil))
;;  succ:       333 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1733

;; basic block 333, loop depth 0, maybe hot
;;  prev block 332, next block 334, flags: (RTL, MODIFIED)
;;  pred:       332 (FALLTHRU)
;;              337 [always] 
;; bb 333 artificial_defs: { }
;; bb 333 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1733
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1733
;; lr  def 	 17 [flags] 1734 2924
(code_label 5223 5181 5182 333 186 (nil) [1 uses])
(note 5182 5223 5183 333 [bb 333] NOTE_INSN_BASIC_BLOCK)
(insn 5183 5182 5184 333 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])
            (reg:SI 0 ax [orig:1733 _2236 ] [1733]))) "ETAFLD2.f":877 11 {*cmpsi_1}
     (nil))
(insn 5184 5183 5185 333 (set (reg:QI 1 dx [2924])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "ETAFLD2.f":877 678 {*setcc_qi}
     (nil))
(insn 5185 5184 5186 333 (set (reg:SI 1 dx [orig:1734 _2238 ] [1734])
        (zero_extend:SI (reg:QI 1 dx [2924]))) "ETAFLD2.f":877 140 {*zero_extendqisi2}
     (nil))
(insn 5186 5185 5187 333 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1734 _2238 ] [1734])
            (const_int 0 [0]))) "ETAFLD2.f":877 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 5187 5186 5188 333 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 5807)
            (pc))) "ETAFLD2.f":877 682 {*jcc}
     (nil)
 -> 5807)
;;  succ:       400
;;              334 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1733

;; basic block 334, loop depth 0, maybe hot
;;  prev block 333, next block 335, flags: (RTL, MODIFIED)
;;  pred:       333 (FALLTHRU)
;; bb 334 artificial_defs: { }
;; bb 334 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1733
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 5188 5187 5189 334 [bb 334] NOTE_INSN_BASIC_BLOCK)
(insn 5189 5188 5217 334 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
        (const_int 1 [0x1])) "ETAFLD2.f":878 86 {*movsi_internal}
     (nil))
;;  succ:       335 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1733

;; basic block 335, loop depth 0, maybe hot
;;  prev block 334, next block 336, flags: (RTL, MODIFIED)
;;  pred:       334 (FALLTHRU)
;;              336 [always] 
;; bb 335 artificial_defs: { }
;; bb 335 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1733
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1735 2925
(code_label 5217 5189 5190 335 185 (nil) [1 uses])
(note 5190 5217 5191 335 [bb 335] NOTE_INSN_BASIC_BLOCK)
(insn 5191 5190 5192 335 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
            (const_int 119 [0x77]))) "ETAFLD2.f":878 11 {*cmpsi_1}
     (nil))
(insn 5192 5191 5193 335 (set (reg:QI 1 dx [2925])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "ETAFLD2.f":878 678 {*setcc_qi}
     (nil))
(insn 5193 5192 5194 335 (set (reg:SI 1 dx [orig:1735 _2240 ] [1735])
        (zero_extend:SI (reg:QI 1 dx [2925]))) "ETAFLD2.f":878 140 {*zero_extendqisi2}
     (nil))
(insn 5194 5193 5195 335 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1735 _2240 ] [1735])
            (const_int 0 [0]))) "ETAFLD2.f":878 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 5195 5194 5196 335 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 5810)
            (pc))) "ETAFLD2.f":878 682 {*jcc}
     (nil)
 -> 5810)
;;  succ:       401
;;              336 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1733

;; basic block 336, loop depth 0, maybe hot
;;  prev block 335, next block 401, flags: (RTL, MODIFIED)
;;  pred:       335 (FALLTHRU)
;; bb 336 artificial_defs: { }
;; bb 336 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1733
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1569 1570 1571 1572 1573 1574 1575 1576 1577 1578 1579 2926 2927 2928 2929 2930 2931 2932
(note 5196 5195 5197 336 [bb 336] NOTE_INSN_BASIC_BLOCK)
(insn 5197 5196 5198 336 (set (reg:SI 1 dx [2926])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])) "ETAFLD2.f":879 86 {*movsi_internal}
     (nil))
(insn 5198 5197 5199 336 (set (reg:DI 1 dx [orig:1569 _1483 ] [1569])
        (sign_extend:DI (reg:SI 1 dx [2926]))) "ETAFLD2.f":879 149 {*extendsidi2_rex64}
     (nil))
(insn 5199 5198 5200 336 (parallel [
            (set (reg:DI 2 cx [orig:1570 _1484 ] [1570])
                (mult:DI (reg:DI 1 dx [orig:1569 _1483 ] [1569])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":879 349 {*muldi3_1}
     (nil))
(insn 5200 5199 5201 336 (set (reg:SI 1 dx [2927])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "ETAFLD2.f":879 86 {*movsi_internal}
     (nil))
(insn 5201 5200 5202 336 (set (reg:DI 1 dx [orig:1571 _1485 ] [1571])
        (sign_extend:DI (reg:SI 1 dx [2927]))) "ETAFLD2.f":879 149 {*extendsidi2_rex64}
     (nil))
(insn 5202 5201 5203 336 (parallel [
            (set (reg:DI 1 dx [orig:1572 _1486 ] [1572])
                (plus:DI (reg:DI 1 dx [orig:1571 _1485 ] [1571])
                    (reg:DI 2 cx [orig:1570 _1484 ] [1570])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":879 222 {*adddi_1}
     (nil))
(insn 5203 5202 5204 336 (parallel [
            (set (reg:DI 4 si [orig:1573 _1487 ] [1573])
                (plus:DI (reg:DI 1 dx [orig:1572 _1486 ] [1572])
                    (const_int 1125858 [0x112de2])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":879 222 {*adddi_1}
     (nil))
(insn 5204 5203 5205 336 (set (reg:SI 1 dx [2928])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])) "ETAFLD2.f":879 86 {*movsi_internal}
     (nil))
(insn 5205 5204 5206 336 (set (reg:DI 1 dx [orig:1574 _1488 ] [1574])
        (sign_extend:DI (reg:SI 1 dx [2928]))) "ETAFLD2.f":879 149 {*extendsidi2_rex64}
     (nil))
(insn 5206 5205 5207 336 (parallel [
            (set (reg:DI 2 cx [orig:1575 _1489 ] [1575])
                (mult:DI (reg:DI 1 dx [orig:1574 _1488 ] [1574])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":879 349 {*muldi3_1}
     (nil))
(insn 5207 5206 5208 336 (set (reg:SI 1 dx [2929])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "ETAFLD2.f":879 86 {*movsi_internal}
     (nil))
(insn 5208 5207 5209 336 (set (reg:DI 1 dx [orig:1576 _1490 ] [1576])
        (sign_extend:DI (reg:SI 1 dx [2929]))) "ETAFLD2.f":879 149 {*extendsidi2_rex64}
     (nil))
(insn 5209 5208 5210 336 (parallel [
            (set (reg:DI 1 dx [orig:1577 _1491 ] [1577])
                (plus:DI (reg:DI 1 dx [orig:1576 _1490 ] [1576])
                    (reg:DI 2 cx [orig:1575 _1489 ] [1575])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":879 222 {*adddi_1}
     (nil))
(insn 5210 5209 5211 336 (parallel [
            (set (reg:DI 2 cx [orig:1578 _1492 ] [1578])
                (plus:DI (reg:DI 1 dx [orig:1577 _1491 ] [1577])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":879 222 {*adddi_1}
     (nil))
(insn 5211 5210 5212 336 (set (reg/f:DI 1 dx [2930])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f9828240b40 extra>)) "ETAFLD2.f":879 85 {*movdi_internal}
     (nil))
(insn 5212 5211 5213 336 (parallel [
            (set (reg:DI 4 si [2931])
                (plus:DI (reg:DI 4 si [orig:1573 _1487 ] [1573])
                    (const_int 2311218 [0x234432])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":879 222 {*adddi_1}
     (nil))
(insn 5213 5212 5214 336 (set (reg:SF 21 xmm0 [orig:1579 _1493 ] [1579])
        (mem:SF (plus:DI (mult:DI (reg:DI 4 si [2931])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [2930])) [2 extra.zint S4 A32])) "ETAFLD2.f":879 131 {*movsf_internal}
     (nil))
(insn 5214 5213 5215 336 (set (reg/f:DI 1 dx [2932])
        (symbol_ref:DI ("equiv.2.4368") [flags 0x202]  <var_decl 0x7f9828263510 equiv.2>)) "ETAFLD2.f":879 85 {*movdi_internal}
     (nil))
(insn 5215 5214 5216 336 (set (mem/j:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:1578 _1492 ] [1578])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [2932])) [16 equiv.2.hgt S4 A32])
        (reg:SF 21 xmm0 [orig:1579 _1493 ] [1579])) "ETAFLD2.f":879 131 {*movsf_internal}
     (nil))
(insn 5216 5215 5683 336 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":878 221 {*addsi_1}
     (nil))
(jump_insn 5683 5216 5684 336 (set (pc)
        (label_ref 5217)) "ETAFLD2.f":878 683 {jump}
     (nil)
 -> 5217)
;;  succ:       335 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1733

(barrier 5684 5683 5810)
;; basic block 401, loop depth 0, maybe hot
;;  prev block 336, next block 337, flags: (RTL, MODIFIED)
;;  pred:       335
;; bb 401 artificial_defs: { }
;; bb 401 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1733
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 5810 5684 5809 401 261 (nil) [1 uses])
(note 5809 5810 5811 401 [bb 401] NOTE_INSN_BASIC_BLOCK)
(insn 5811 5809 5220 401 (const_int 0 [0]) "ETAFLD2.f":879 718 {nop}
     (nil))
;;  succ:       337 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1733

;; basic block 337, loop depth 0, maybe hot
;;  prev block 401, next block 400, flags: (RTL, MODIFIED)
;;  pred:       401 [always]  (FALLTHRU)
;; bb 337 artificial_defs: { }
;; bb 337 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1733
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 5220 5811 5221 337 184 (nil) [0 uses])
(note 5221 5220 5222 337 [bb 337] NOTE_INSN_BASIC_BLOCK)
(insn 5222 5221 5685 337 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":877 221 {*addsi_1}
     (nil))
(jump_insn 5685 5222 5686 337 (set (pc)
        (label_ref 5223)) "ETAFLD2.f":877 683 {jump}
     (nil)
 -> 5223)
;;  succ:       333 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1733

(barrier 5686 5685 5807)
;; basic block 400, loop depth 0, maybe hot
;;  prev block 337, next block 338, flags: (RTL, MODIFIED)
;;  pred:       333
;; bb 400 artificial_defs: { }
;; bb 400 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 5807 5686 5806 400 260 (nil) [1 uses])
(note 5806 5807 5808 400 [bb 400] NOTE_INSN_BASIC_BLOCK)
(insn 5808 5806 5226 400 (const_int 0 [0]) "ETAFLD2.f":878 718 {nop}
     (nil))
;;  succ:       338 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 338, loop depth 0, maybe hot
;;  prev block 400, next block 339, flags: (RTL, MODIFIED)
;;  pred:       400 [always]  (FALLTHRU)
;; bb 338 artificial_defs: { }
;; bb 338 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 5226 5808 5227 338 183 (nil) [0 uses])
(note 5227 5226 5228 338 [bb 338] NOTE_INSN_BASIC_BLOCK)
(insn 5228 5227 5284 338 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])
        (const_int 1 [0x1])) "ETAFLD2.f":883 86 {*movsi_internal}
     (nil))
;;  succ:       339 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 339, loop depth 0, maybe hot
;;  prev block 338, next block 340, flags: (RTL, MODIFIED)
;;  pred:       338 (FALLTHRU)
;;              346 [always] 
;; bb 339 artificial_defs: { }
;; bb 339 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1580 1736 2933
(code_label 5284 5228 5229 339 192 (nil) [1 uses])
(note 5229 5284 5230 339 [bb 339] NOTE_INSN_BASIC_BLOCK)
(insn 5230 5229 5231 339 (set (reg:SI 0 ax [orig:1580 l.164_1494 ] [1580])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":883 86 {*movsi_internal}
     (nil))
(insn 5231 5230 5232 339 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [orig:1580 l.164_1494 ] [1580])
            (const_int 38 [0x26]))) "ETAFLD2.f":883 11 {*cmpsi_1}
     (nil))
(insn 5232 5231 5233 339 (set (reg:QI 0 ax [2933])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "ETAFLD2.f":883 678 {*setcc_qi}
     (nil))
(insn 5233 5232 5234 339 (set (reg:SI 0 ax [orig:1736 _2245 ] [1736])
        (zero_extend:SI (reg:QI 0 ax [2933]))) "ETAFLD2.f":883 140 {*zero_extendqisi2}
     (nil))
(insn 5234 5233 5235 339 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:1736 _2245 ] [1736])
            (const_int 0 [0]))) "ETAFLD2.f":883 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 5235 5234 5236 339 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 5813)
            (pc))) "ETAFLD2.f":883 682 {*jcc}
     (nil)
 -> 5813)
;;  succ:       402
;;              340 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 340, loop depth 0, maybe hot
;;  prev block 339, next block 341, flags: (RTL, MODIFIED)
;;  pred:       339 (FALLTHRU)
;; bb 340 artificial_defs: { }
;; bb 340 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 1737 1738
(note 5236 5235 5237 340 [bb 340] NOTE_INSN_BASIC_BLOCK)
(insn 5237 5236 5238 340 (set (reg:SI 1 dx [orig:1737 _2246 ] [1737])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f982824fc60 parallel>)
                    (const_int 8 [0x8]))) [1 parallel.jsta+0 S4 A64])) "ETAFLD2.f":884 86 {*movsi_internal}
     (nil))
(insn 5238 5237 5239 340 (set (reg:SI 0 ax [orig:1738 _2247 ] [1738])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f982824fc60 parallel>)
                    (const_int 12 [0xc]))) [1 parallel.jend+0 S4 A32])) "ETAFLD2.f":884 86 {*movsi_internal}
     (nil))
(insn 5239 5238 5276 340 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])
        (reg:SI 1 dx [orig:1737 _2246 ] [1737])) "ETAFLD2.f":884 86 {*movsi_internal}
     (nil))
;;  succ:       341 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1738

;; basic block 341, loop depth 0, maybe hot
;;  prev block 340, next block 342, flags: (RTL, MODIFIED)
;;  pred:       340 (FALLTHRU)
;;              345 [always] 
;; bb 341 artificial_defs: { }
;; bb 341 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1738
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1738
;; lr  def 	 17 [flags] 1739 2934
(code_label 5276 5239 5240 341 191 (nil) [1 uses])
(note 5240 5276 5241 341 [bb 341] NOTE_INSN_BASIC_BLOCK)
(insn 5241 5240 5242 341 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])
            (reg:SI 0 ax [orig:1738 _2247 ] [1738]))) "ETAFLD2.f":884 11 {*cmpsi_1}
     (nil))
(insn 5242 5241 5243 341 (set (reg:QI 1 dx [2934])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "ETAFLD2.f":884 678 {*setcc_qi}
     (nil))
(insn 5243 5242 5244 341 (set (reg:SI 1 dx [orig:1739 _2249 ] [1739])
        (zero_extend:SI (reg:QI 1 dx [2934]))) "ETAFLD2.f":884 140 {*zero_extendqisi2}
     (nil))
(insn 5244 5243 5245 341 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1739 _2249 ] [1739])
            (const_int 0 [0]))) "ETAFLD2.f":884 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 5245 5244 5246 341 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 5816)
            (pc))) "ETAFLD2.f":884 682 {*jcc}
     (nil)
 -> 5816)
;;  succ:       403
;;              342 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1738

;; basic block 342, loop depth 0, maybe hot
;;  prev block 341, next block 343, flags: (RTL, MODIFIED)
;;  pred:       341 (FALLTHRU)
;; bb 342 artificial_defs: { }
;; bb 342 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1738
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 5246 5245 5247 342 [bb 342] NOTE_INSN_BASIC_BLOCK)
(insn 5247 5246 5270 342 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
        (const_int 1 [0x1])) "ETAFLD2.f":885 86 {*movsi_internal}
     (nil))
;;  succ:       343 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1738

;; basic block 343, loop depth 0, maybe hot
;;  prev block 342, next block 344, flags: (RTL, MODIFIED)
;;  pred:       342 (FALLTHRU)
;;              344 [always] 
;; bb 343 artificial_defs: { }
;; bb 343 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1738
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1740 2935
(code_label 5270 5247 5248 343 190 (nil) [1 uses])
(note 5248 5270 5249 343 [bb 343] NOTE_INSN_BASIC_BLOCK)
(insn 5249 5248 5250 343 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
            (const_int 119 [0x77]))) "ETAFLD2.f":885 11 {*cmpsi_1}
     (nil))
(insn 5250 5249 5251 343 (set (reg:QI 1 dx [2935])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "ETAFLD2.f":885 678 {*setcc_qi}
     (nil))
(insn 5251 5250 5252 343 (set (reg:SI 1 dx [orig:1740 _2251 ] [1740])
        (zero_extend:SI (reg:QI 1 dx [2935]))) "ETAFLD2.f":885 140 {*zero_extendqisi2}
     (nil))
(insn 5252 5251 5253 343 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1740 _2251 ] [1740])
            (const_int 0 [0]))) "ETAFLD2.f":885 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 5253 5252 5254 343 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 5819)
            (pc))) "ETAFLD2.f":885 682 {*jcc}
     (nil)
 -> 5819)
;;  succ:       404
;;              344 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1738

;; basic block 344, loop depth 0, maybe hot
;;  prev block 343, next block 404, flags: (RTL, MODIFIED)
;;  pred:       343 (FALLTHRU)
;; bb 344 artificial_defs: { }
;; bb 344 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1738
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1581 1582 1583 1584 1585 1586 1587 1588 1589 2936 2937 2938 2939
(note 5254 5253 5255 344 [bb 344] NOTE_INSN_BASIC_BLOCK)
(insn 5255 5254 5256 344 (set (reg:SI 1 dx [orig:1581 l.165_1495 ] [1581])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":886 86 {*movsi_internal}
     (nil))
(insn 5256 5255 5257 344 (set (reg:DI 1 dx [orig:1582 _1496 ] [1582])
        (sign_extend:DI (reg:SI 1 dx [orig:1581 l.165_1495 ] [1581]))) "ETAFLD2.f":886 149 {*extendsidi2_rex64}
     (nil))
(insn 5257 5256 5258 344 (parallel [
            (set (reg:DI 2 cx [orig:1583 _1497 ] [1583])
                (mult:DI (reg:DI 1 dx [orig:1582 _1496 ] [1582])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":886 349 {*muldi3_1}
     (nil))
(insn 5258 5257 5259 344 (set (reg:SI 1 dx [2936])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])) "ETAFLD2.f":886 86 {*movsi_internal}
     (nil))
(insn 5259 5258 5260 344 (set (reg:DI 1 dx [orig:1584 _1498 ] [1584])
        (sign_extend:DI (reg:SI 1 dx [2936]))) "ETAFLD2.f":886 149 {*extendsidi2_rex64}
     (nil))
(insn 5260 5259 5261 344 (parallel [
            (set (reg:DI 1 dx [orig:1585 _1499 ] [1585])
                (mult:DI (reg:DI 1 dx [orig:1584 _1498 ] [1584])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":886 349 {*muldi3_1}
     (nil))
(insn 5261 5260 5262 344 (parallel [
            (set (reg:DI 2 cx [orig:1586 _1500 ] [1586])
                (plus:DI (reg:DI 2 cx [orig:1583 _1497 ] [1583])
                    (reg:DI 1 dx [orig:1585 _1499 ] [1585])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":886 222 {*adddi_1}
     (nil))
(insn 5262 5261 5263 344 (set (reg:SI 1 dx [2937])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "ETAFLD2.f":886 86 {*movsi_internal}
     (nil))
(insn 5263 5262 5264 344 (set (reg:DI 1 dx [orig:1587 _1501 ] [1587])
        (sign_extend:DI (reg:SI 1 dx [2937]))) "ETAFLD2.f":886 149 {*extendsidi2_rex64}
     (nil))
(insn 5264 5263 5265 344 (parallel [
            (set (reg:DI 1 dx [orig:1588 _1502 ] [1588])
                (plus:DI (reg:DI 1 dx [orig:1587 _1501 ] [1587])
                    (reg:DI 2 cx [orig:1586 _1500 ] [1586])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":886 222 {*adddi_1}
     (nil))
(insn 5265 5264 5266 344 (parallel [
            (set (reg:DI 2 cx [orig:1589 _1503 ] [1589])
                (plus:DI (reg:DI 1 dx [orig:1588 _1502 ] [1588])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":886 222 {*adddi_1}
     (nil))
(insn 5266 5265 5267 344 (set (reg/f:DI 1 dx [2938])
        (symbol_ref:DI ("equiv.1.4359") [flags 0x202]  <var_decl 0x7f9828263360 equiv.1>)) "ETAFLD2.f":886 85 {*movdi_internal}
     (nil))
(insn 5267 5266 5268 344 (set (reg:SF 21 xmm0 [2939])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) "ETAFLD2.f":886 131 {*movsf_internal}
     (nil))
(insn 5268 5267 5269 344 (set (mem/j:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:1589 _1503 ] [1589])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [2938])) [24 equiv.1.el S4 A32])
        (reg:SF 21 xmm0 [2939])) "ETAFLD2.f":886 131 {*movsf_internal}
     (nil))
(insn 5269 5268 5687 344 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":885 221 {*addsi_1}
     (nil))
(jump_insn 5687 5269 5688 344 (set (pc)
        (label_ref 5270)) "ETAFLD2.f":885 683 {jump}
     (nil)
 -> 5270)
;;  succ:       343 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1738

(barrier 5688 5687 5819)
;; basic block 404, loop depth 0, maybe hot
;;  prev block 344, next block 345, flags: (RTL, MODIFIED)
;;  pred:       343
;; bb 404 artificial_defs: { }
;; bb 404 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1738
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 5819 5688 5818 404 264 (nil) [1 uses])
(note 5818 5819 5820 404 [bb 404] NOTE_INSN_BASIC_BLOCK)
(insn 5820 5818 5273 404 (const_int 0 [0]) "ETAFLD2.f":886 718 {nop}
     (nil))
;;  succ:       345 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1738

;; basic block 345, loop depth 0, maybe hot
;;  prev block 404, next block 403, flags: (RTL, MODIFIED)
;;  pred:       404 [always]  (FALLTHRU)
;; bb 345 artificial_defs: { }
;; bb 345 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1738
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 5273 5820 5274 345 189 (nil) [0 uses])
(note 5274 5273 5275 345 [bb 345] NOTE_INSN_BASIC_BLOCK)
(insn 5275 5274 5689 345 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -44 [0xffffffffffffffd4])) [1 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":884 221 {*addsi_1}
     (nil))
(jump_insn 5689 5275 5690 345 (set (pc)
        (label_ref 5276)) "ETAFLD2.f":884 683 {jump}
     (nil)
 -> 5276)
;;  succ:       341 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 1738

(barrier 5690 5689 5816)
;; basic block 403, loop depth 0, maybe hot
;;  prev block 345, next block 346, flags: (RTL, MODIFIED)
;;  pred:       341
;; bb 403 artificial_defs: { }
;; bb 403 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 5816 5690 5815 403 263 (nil) [1 uses])
(note 5815 5816 5817 403 [bb 403] NOTE_INSN_BASIC_BLOCK)
(insn 5817 5815 5279 403 (const_int 0 [0]) "ETAFLD2.f":885 718 {nop}
     (nil))
;;  succ:       346 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 346, loop depth 0, maybe hot
;;  prev block 403, next block 402, flags: (RTL, MODIFIED)
;;  pred:       403 [always]  (FALLTHRU)
;; bb 346 artificial_defs: { }
;; bb 346 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1590 1591
(code_label 5279 5817 5280 346 188 (nil) [0 uses])
(note 5280 5279 5281 346 [bb 346] NOTE_INSN_BASIC_BLOCK)
(insn 5281 5280 5282 346 (set (reg:SI 0 ax [orig:1590 l.166_1504 ] [1590])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":883 86 {*movsi_internal}
     (nil))
(insn 5282 5281 5283 346 (parallel [
            (set (reg:SI 0 ax [orig:1591 _1505 ] [1591])
                (plus:SI (reg:SI 0 ax [orig:1590 l.166_1504 ] [1590])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":883 221 {*addsi_1}
     (nil))
(insn 5283 5282 5691 346 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])
        (reg:SI 0 ax [orig:1591 _1505 ] [1591])) "ETAFLD2.f":883 86 {*movsi_internal}
     (nil))
(jump_insn 5691 5283 5692 346 (set (pc)
        (label_ref 5284)) "ETAFLD2.f":883 683 {jump}
     (nil)
 -> 5284)
;;  succ:       339 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 5692 5691 5813)
;; basic block 402, loop depth 0, maybe hot
;;  prev block 346, next block 347, flags: (RTL, MODIFIED)
;;  pred:       339
;; bb 402 artificial_defs: { }
;; bb 402 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 5813 5692 5812 402 262 (nil) [1 uses])
(note 5812 5813 5814 402 [bb 402] NOTE_INSN_BASIC_BLOCK)
(insn 5814 5812 5287 402 (const_int 0 [0]) "ETAFLD2.f":884 718 {nop}
     (nil))
;;  succ:       347 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 347, loop depth 0, maybe hot
;;  prev block 402, next block 348, flags: (RTL, MODIFIED)
;;  pred:       402 [always]  (FALLTHRU)
;; bb 347 artificial_defs: { }
;; bb 347 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 1592
(code_label 5287 5814 5288 347 187 (nil) [0 uses])
(note 5288 5287 5289 347 [bb 347] NOTE_INSN_BASIC_BLOCK)
(insn 5289 5288 5913 347 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":892 222 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 5913 5289 5290 347 (set (reg:DI 0 ax [3035])
        (symbol_ref:DI ("equiv.1.4359") [flags 0x202]  <var_decl 0x7f9828263360 equiv.1>)) "ETAFLD2.f":892 85 {*movdi_internal}
     (nil))
(insn 5290 5913 5291 347 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [4  S8 A64])
        (reg:DI 0 ax [3035])) "ETAFLD2.f":892 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 5291 5290 5292 347 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [8  S8 A64])
        (symbol_ref/f:DI ("*.LC25") [flags 0x2]  <var_decl 0x7f9827f947e0 *.LC25>)) "ETAFLD2.f":892 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 24 [0x18])
        (nil)))
(insn 5292 5291 5293 347 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [8  S8 A64])
        (symbol_ref/f:DI ("*.LC26") [flags 0x2]  <var_decl 0x7f9827f94870 *.LC26>)) "ETAFLD2.f":892 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 32 [0x20])
        (nil)))
(insn 5293 5292 5294 347 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [8  S8 A64])
        (symbol_ref/f:DI ("*.LC71") [flags 0x2]  <var_decl 0x7f9828035630 *.LC71>)) "ETAFLD2.f":892 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 40 [0x28])
        (nil)))
(insn 5294 5293 5295 347 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [8  S8 A64])
        (symbol_ref/f:DI ("*.LC74") [flags 0x2]  <var_decl 0x7f98280357e0 *.LC74>)) "ETAFLD2.f":892 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 48 [0x30])
        (nil)))
(insn 5295 5294 5914 347 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [8  S8 A64])
        (symbol_ref/f:DI ("*.LC72") [flags 0x2]  <var_decl 0x7f98280356c0 *.LC72>)) "ETAFLD2.f":892 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 56 [0x38])
        (nil)))
(insn 5914 5295 5296 347 (set (reg:DI 0 ax [3036])
        (symbol_ref:DI ("equiv.3.4378") [flags 0x202]  <var_decl 0x7f9828263750 equiv.3>)) "ETAFLD2.f":892 85 {*movdi_internal}
     (nil))
(insn 5296 5914 5915 347 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [4  S8 A64])
        (reg:DI 0 ax [3036])) "ETAFLD2.f":892 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 64 [0x40])
        (nil)))
(insn 5915 5296 5297 347 (set (reg:DI 0 ax [3037])
        (const:DI (plus:DI (symbol_ref:DI ("masks_") [flags 0x202]  <var_decl 0x7f982824f480 masks>)
                (const_int 592620 [0x90aec])))) "ETAFLD2.f":892 85 {*movdi_internal}
     (nil))
(insn 5297 5915 5916 347 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [4  S8 A64])
        (reg:DI 0 ax [3037])) "ETAFLD2.f":892 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 72 [0x48])
        (nil)))
(insn 5916 5297 5298 347 (set (reg:DI 0 ax [3038])
        (symbol_ref:DI ("equiv.2.4368") [flags 0x202]  <var_decl 0x7f9828263510 equiv.2>)) "ETAFLD2.f":892 85 {*movdi_internal}
     (nil))
(insn 5298 5916 5299 347 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [4  S8 A64])
        (reg:DI 0 ax [3038])) "ETAFLD2.f":892 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 80 [0x50])
        (nil)))
(insn 5299 5298 5300 347 (set (reg:DI 38 r9)
        (const:DI (plus:DI (symbol_ref:DI ("pvrbls_") [flags 0x202]  <var_decl 0x7f9828254510 pvrbls>)
                (const_int 2251956 [0x225cb4])))) "ETAFLD2.f":892 85 {*movdi_internal}
     (nil))
(insn 5300 5299 5301 347 (set (reg:DI 37 r8)
        (const:DI (plus:DI (symbol_ref:DI ("mapot_") [flags 0x202]  <var_decl 0x7f982824b120 mapot>)
                (const_int 4000012 [0x3d090c])))) "ETAFLD2.f":892 85 {*movdi_internal}
     (nil))
(insn 5301 5300 5302 347 (set (reg:DI 2 cx)
        (const:DI (plus:DI (symbol_ref:DI ("mapot_") [flags 0x202]  <var_decl 0x7f982824b120 mapot>)
                (const_int 4000396 [0x3d0a8c])))) "ETAFLD2.f":892 85 {*movdi_internal}
     (nil))
(insn 5302 5301 5303 347 (set (reg:DI 1 dx)
        (const:DI (plus:DI (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f9828240b40 extra>)
                (const_int 18589572 [0x11ba784])))) "ETAFLD2.f":892 85 {*movdi_internal}
     (nil))
(insn 5303 5302 5304 347 (set (reg:DI 4 si)
        (const:DI (plus:DI (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7f982825bcf0 vrbls>)
                (const_int 9363396 [0x8edfc4])))) "ETAFLD2.f":892 85 {*movdi_internal}
     (nil))
(insn 5304 5303 5305 347 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f9828240b40 extra>)
                (const_int 9244872 [0x8d10c8])))) "ETAFLD2.f":892 85 {*movdi_internal}
     (nil))
(insn 5305 5304 5306 347 (set (reg:QI 0 ax)
        (const_int 0 [0])) "ETAFLD2.f":892 88 {*movqi_internal}
     (nil))
(call_insn 5306 5305 5307 347 (call (mem:QI (symbol_ref:DI ("mixlen_") [flags 0x41]  <function_decl 0x7f9827e92700 mixlen>) [0 mixlen S1 A8])
        (const_int 80 [0x50])) "ETAFLD2.f":892 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
(insn 5307 5306 5308 347 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 80 [0x50])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":892 222 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 5308 5307 5309 347 (set (reg:SI 0 ax [orig:1592 _1506 ] [1592])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 456 [0x1c8]))) [1 rqstfld.iget+440 S4 A64])) "ETAFLD2.f":896 86 {*movsi_internal}
     (nil))
(insn 5309 5308 5310 347 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:1592 _1506 ] [1592])
            (const_int 0 [0]))) "ETAFLD2.f":896 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 5310 5309 5311 347 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 5316)
            (pc))) "ETAFLD2.f":896 682 {*jcc}
     (nil)
 -> 5316)
;;  succ:       348 (FALLTHRU)
;;              349
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 348, loop depth 0, maybe hot
;;  prev block 347, next block 349, flags: (RTL, MODIFIED)
;;  pred:       347 (FALLTHRU)
;; bb 348 artificial_defs: { }
;; bb 348 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 5311 5310 5312 348 [bb 348] NOTE_INSN_BASIC_BLOCK)
(insn 5312 5311 5313 348 (set (reg:DI 4 si)
        (symbol_ref:DI ("equiv.0.4352") [flags 0x202]  <var_decl 0x7f98282631b0 equiv.0>)) "ETAFLD2.f":896 85 {*movdi_internal}
     (nil))
(insn 5313 5312 5314 348 (set (reg:DI 5 di)
        (symbol_ref:DI ("equiv.1.4359") [flags 0x202]  <var_decl 0x7f9828263360 equiv.1>)) "ETAFLD2.f":896 85 {*movdi_internal}
     (nil))
(insn 5314 5313 5315 348 (set (reg:QI 0 ax)
        (const_int 0 [0])) "ETAFLD2.f":896 88 {*movqi_internal}
     (nil))
(call_insn 5315 5314 5316 348 (call (mem:QI (symbol_ref:DI ("calrch_") [flags 0x41]  <function_decl 0x7f9827e92800 calrch>) [0 calrch S1 A8])
        (const_int 0 [0])) "ETAFLD2.f":896 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
;;  succ:       349 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 349, loop depth 0, maybe hot
;;  prev block 348, next block 350, flags: (RTL, MODIFIED)
;;  pred:       347
;;              348 (FALLTHRU)
;; bb 349 artificial_defs: { }
;; bb 349 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 5316 5315 5317 349 193 (nil) [1 uses])
(note 5317 5316 5318 349 [bb 349] NOTE_INSN_BASIC_BLOCK)
(insn 5318 5317 5508 349 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])
        (const_int 1 [0x1])) "ETAFLD2.f":899 86 {*movsi_internal}
     (nil))
;;  succ:       350 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 350, loop depth 0, maybe hot
;;  prev block 349, next block 351, flags: (RTL, MODIFIED)
;;  pred:       349 (FALLTHRU)
;;              361 [always] 
;; bb 350 artificial_defs: { }
;; bb 350 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1593 1741 2940
(code_label 5508 5318 5319 350 198 (nil) [1 uses])
(note 5319 5508 5320 350 [bb 350] NOTE_INSN_BASIC_BLOCK)
(insn 5320 5319 5321 350 (set (reg:SI 0 ax [orig:1593 l.167_1507 ] [1593])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":899 86 {*movsi_internal}
     (nil))
(insn 5321 5320 5322 350 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [orig:1593 l.167_1507 ] [1593])
            (const_int 38 [0x26]))) "ETAFLD2.f":899 11 {*cmpsi_1}
     (nil))
(insn 5322 5321 5323 350 (set (reg:QI 0 ax [2940])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "ETAFLD2.f":899 678 {*setcc_qi}
     (nil))
(insn 5323 5322 5324 350 (set (reg:SI 0 ax [orig:1741 _2259 ] [1741])
        (zero_extend:SI (reg:QI 0 ax [2940]))) "ETAFLD2.f":899 140 {*zero_extendqisi2}
     (nil))
(insn 5324 5323 5325 350 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:1741 _2259 ] [1741])
            (const_int 0 [0]))) "ETAFLD2.f":899 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 5325 5324 5326 350 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 5804)
            (pc))) "ETAFLD2.f":899 682 {*jcc}
     (nil)
 -> 5804)
;;  succ:       399
;;              351 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 351, loop depth 0, maybe hot
;;  prev block 350, next block 352, flags: (RTL, MODIFIED)
;;  pred:       350 (FALLTHRU)
;; bb 351 artificial_defs: { }
;; bb 351 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1594
(note 5326 5325 5327 351 [bb 351] NOTE_INSN_BASIC_BLOCK)
(insn 5327 5326 5328 351 (set (reg:SI 0 ax [orig:1594 _1508 ] [1594])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 596 [0x254]))) [1 rqstfld.iget+580 S4 A32])) "ETAFLD2.f":903 86 {*movsi_internal}
     (nil))
(insn 5328 5327 5329 351 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:1594 _1508 ] [1594])
            (const_int 0 [0]))) "ETAFLD2.f":903 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 5329 5328 5330 351 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 5414)
            (pc))) "ETAFLD2.f":903 682 {*jcc}
     (nil)
 -> 5414)
;;  succ:       352 (FALLTHRU)
;;              356
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 352, loop depth 0, maybe hot
;;  prev block 351, next block 353, flags: (RTL, MODIFIED)
;;  pred:       351 (FALLTHRU)
;; bb 352 artificial_defs: { }
;; bb 352 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1595 1596 1597 1598 1599 1600 1601 1602 2941 2942 2943 2944
(note 5330 5329 5331 352 [bb 352] NOTE_INSN_BASIC_BLOCK)
(insn 5331 5330 5332 352 (set (reg:SI 0 ax [orig:1595 _1509 ] [1595])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 596 [0x254]))) [1 rqstfld.iget+580 S4 A32])) "ETAFLD2.f":904 86 {*movsi_internal}
     (nil))
(insn 5332 5331 5333 352 (set (reg:DI 1 dx [orig:1596 _1510 ] [1596])
        (sign_extend:DI (reg:SI 0 ax [orig:1595 _1509 ] [1595]))) "ETAFLD2.f":904 149 {*extendsidi2_rex64}
     (nil))
(insn 5333 5332 5334 352 (set (reg:DI 0 ax [2941])
        (reg:DI 1 dx [orig:1596 _1510 ] [1596])) "ETAFLD2.f":904 85 {*movdi_internal}
     (nil))
(insn 5334 5333 5336 352 (parallel [
            (set (reg:DI 0 ax [2942])
                (ashift:DI (reg:DI 0 ax [2941])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":904 551 {*ashldi3_1}
     (nil))
(insn 5336 5334 5337 352 (parallel [
            (set (reg:DI 0 ax [2941])
                (minus:DI (reg:DI 0 ax [2941])
                    (reg:DI 1 dx [orig:1596 _1510 ] [1596])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":904 278 {*subdi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:1596 _1510 ] [1596])
            (const_int 15 [0xf]))
        (nil)))
(insn 5337 5336 5339 352 (parallel [
            (set (reg:DI 0 ax [2943])
                (ashift:DI (reg:DI 0 ax [2941])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":904 551 {*ashldi3_1}
     (nil))
(insn 5339 5337 5340 352 (set (reg:DI 1 dx [orig:1597 _1511 ] [1597])
        (reg:DI 0 ax [2941])) "ETAFLD2.f":904 85 {*movdi_internal}
     (nil))
(insn 5340 5339 5341 352 (set (reg:SI 0 ax [orig:1598 l.168_1512 ] [1598])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":904 86 {*movsi_internal}
     (nil))
(insn 5341 5340 5342 352 (set (reg:DI 0 ax [orig:1599 _1513 ] [1599])
        (sign_extend:DI (reg:SI 0 ax [orig:1598 l.168_1512 ] [1598]))) "ETAFLD2.f":904 149 {*extendsidi2_rex64}
     (nil))
(insn 5342 5341 5343 352 (parallel [
            (set (reg:DI 0 ax [orig:1600 _1514 ] [1600])
                (plus:DI (reg:DI 0 ax [orig:1599 _1513 ] [1599])
                    (reg:DI 1 dx [orig:1597 _1511 ] [1597])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":904 222 {*adddi_1}
     (nil))
(insn 5343 5342 5344 352 (parallel [
            (set (reg:DI 0 ax [orig:1601 _1515 ] [1601])
                (plus:DI (reg:DI 0 ax [orig:1600 _1514 ] [1600])
                    (const_int -61 [0xffffffffffffffc3])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":904 222 {*adddi_1}
     (nil))
(insn 5344 5343 5345 352 (parallel [
            (set (reg:DI 0 ax [2944])
                (plus:DI (reg:DI 0 ax [orig:1601 _1515 ] [1601])
                    (const_int 1404 [0x57c])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":904 222 {*adddi_1}
     (nil))
(insn 5345 5344 5346 352 (set (reg:SI 0 ax [orig:1602 _1516 ] [1602])
        (mem:SI (plus:DI (mult:DI (reg:DI 0 ax [2944])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)) [1 rqstfld.lvls S4 A32])) "ETAFLD2.f":904 86 {*movsi_internal}
     (nil))
(insn 5346 5345 5347 352 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:1602 _1516 ] [1602])
            (const_int 0 [0]))) "ETAFLD2.f":904 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 5347 5346 5348 352 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 5414)
            (pc))) "ETAFLD2.f":904 682 {*jcc}
     (nil)
 -> 5414)
;;  succ:       353 (FALLTHRU)
;;              356
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 353, loop depth 0, maybe hot
;;  prev block 352, next block 354, flags: (RTL, MODIFIED)
;;  pred:       352 (FALLTHRU)
;; bb 353 artificial_defs: { }
;; bb 353 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 1603 1604 1605 1606 1607 1608 1609 1610 1611 1612 2945 2946 2947 2948 2949 2950 2951 2952 2953 2954 2955
(note 5348 5347 5349 353 [bb 353] NOTE_INSN_BASIC_BLOCK)
(insn 5349 5348 5350 353 (set (reg:SI 0 ax [orig:1603 _1517 ] [1603])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 596 [0x254]))) [1 rqstfld.iget+580 S4 A32])) "ETAFLD2.f":905 86 {*movsi_internal}
     (nil))
(insn 5350 5349 5351 353 (set (reg:DI 1 dx [orig:1604 _1518 ] [1604])
        (sign_extend:DI (reg:SI 0 ax [orig:1603 _1517 ] [1603]))) "ETAFLD2.f":905 149 {*extendsidi2_rex64}
     (nil))
(insn 5351 5350 5352 353 (set (reg:DI 0 ax [2945])
        (reg:DI 1 dx [orig:1604 _1518 ] [1604])) "ETAFLD2.f":905 85 {*movdi_internal}
     (nil))
(insn 5352 5351 5354 353 (parallel [
            (set (reg:DI 0 ax [2946])
                (ashift:DI (reg:DI 0 ax [2945])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":905 551 {*ashldi3_1}
     (nil))
(insn 5354 5352 5355 353 (parallel [
            (set (reg:DI 0 ax [2945])
                (minus:DI (reg:DI 0 ax [2945])
                    (reg:DI 1 dx [orig:1604 _1518 ] [1604])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":905 278 {*subdi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:1604 _1518 ] [1604])
            (const_int 15 [0xf]))
        (nil)))
(insn 5355 5354 5357 353 (parallel [
            (set (reg:DI 0 ax [2947])
                (ashift:DI (reg:DI 0 ax [2945])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":905 551 {*ashldi3_1}
     (nil))
(insn 5357 5355 5358 353 (set (reg:DI 1 dx [orig:1605 _1519 ] [1605])
        (reg:DI 0 ax [2945])) "ETAFLD2.f":905 85 {*movdi_internal}
     (nil))
(insn 5358 5357 5359 353 (set (reg:SI 0 ax [orig:1606 l.169_1520 ] [1606])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":905 86 {*movsi_internal}
     (nil))
(insn 5359 5358 5360 353 (set (reg:DI 0 ax [orig:1607 _1521 ] [1607])
        (sign_extend:DI (reg:SI 0 ax [orig:1606 l.169_1520 ] [1606]))) "ETAFLD2.f":905 149 {*extendsidi2_rex64}
     (nil))
(insn 5360 5359 5361 353 (parallel [
            (set (reg:DI 0 ax [orig:1608 _1522 ] [1608])
                (plus:DI (reg:DI 0 ax [orig:1607 _1521 ] [1607])
                    (reg:DI 1 dx [orig:1605 _1519 ] [1605])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":905 222 {*adddi_1}
     (nil))
(insn 5361 5360 5362 353 (parallel [
            (set (reg:DI 0 ax [orig:1609 _1523 ] [1609])
                (plus:DI (reg:DI 0 ax [orig:1608 _1522 ] [1608])
                    (const_int -61 [0xffffffffffffffc3])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":905 222 {*adddi_1}
     (nil))
(insn 5362 5361 5363 353 (parallel [
            (set (reg:DI 0 ax [2948])
                (plus:DI (reg:DI 0 ax [orig:1609 _1523 ] [1609])
                    (const_int 1404 [0x57c])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":905 222 {*adddi_1}
     (nil))
(insn 5363 5362 5364 353 (set (reg:SI 0 ax [orig:1610 _1524 ] [1610])
        (mem:SI (plus:DI (mult:DI (reg:DI 0 ax [2948])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)) [1 rqstfld.lvls S4 A32])) "ETAFLD2.f":905 86 {*movsi_internal}
     (nil))
(insn 5364 5363 5365 353 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -268 [0xfffffffffffffef4])) [1 itype+0 S4 A32])
        (reg:SI 0 ax [orig:1610 _1524 ] [1610])) "ETAFLD2.f":905 86 {*movsi_internal}
     (nil))
(insn 5365 5364 5366 353 (parallel [
            (set (reg:DI 1 dx [2949])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -272 [0xfffffffffffffef0])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":906 222 {*adddi_1}
     (nil))
(insn 5366 5365 5367 353 (parallel [
            (set (reg:DI 0 ax [2950])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -268 [0xfffffffffffffef4])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":906 222 {*adddi_1}
     (nil))
(insn 5367 5366 5368 353 (set (reg:DI 37 r8)
        (symbol_ref:DI ("equiv.3.4378") [flags 0x202]  <var_decl 0x7f9828263750 equiv.3>)) "ETAFLD2.f":906 85 {*movdi_internal}
     (nil))
(insn 5368 5367 5370 353 (set (reg:DI 2 cx)
        (const:DI (plus:DI (symbol_ref:DI ("loops_") [flags 0x202]  <var_decl 0x7f9828246c60 loops>)
                (const_int 9680 [0x25d0])))) "ETAFLD2.f":906 85 {*movdi_internal}
     (nil))
(insn 5370 5368 5371 353 (set (reg:DI 4 si)
        (reg:DI 0 ax [2950])) "ETAFLD2.f":906 85 {*movdi_internal}
     (nil))
(insn 5371 5370 5372 353 (set (reg:DI 5 di)
        (symbol_ref:DI ("equiv.1.4359") [flags 0x202]  <var_decl 0x7f9828263360 equiv.1>)) "ETAFLD2.f":906 85 {*movdi_internal}
     (nil))
(insn 5372 5371 5373 353 (set (reg:QI 0 ax)
        (const_int 0 [0])) "ETAFLD2.f":906 88 {*movqi_internal}
     (nil))
(call_insn 5373 5372 5374 353 (call (mem:QI (symbol_ref:DI ("netal_") [flags 0x41]  <function_decl 0x7f9828228a00 netal>) [0 netal S1 A8])
        (const_int 0 [0])) "ETAFLD2.f":906 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (nil))))))))
(insn 5374 5373 5375 353 (set (reg:DI 1 dx [2951])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [4 grid2+0 S8 A64])) "ETAFLD2.f":908 85 {*movdi_internal}
     (nil))
(insn 5375 5374 5376 353 (set (reg:DI 0 ax [2952])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "ETAFLD2.f":908 85 {*movdi_internal}
     (nil))
(insn 5376 5375 5377 353 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [11  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -832 [0xfffffffffffffcc0])) [11 jmout+0 S8 A64])) "ETAFLD2.f":908 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 5377 5376 5378 353 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [11  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -824 [0xfffffffffffffcc8])) [11 imout+0 S8 A64])) "ETAFLD2.f":908 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 5378 5377 5379 353 (set (reg:DI 38 r9)
        (reg:DI 1 dx [2951])) "ETAFLD2.f":908 85 {*movdi_internal}
     (nil))
(insn 5379 5378 5380 353 (set (reg:DI 37 r8)
        (reg:DI 0 ax [2952])) "ETAFLD2.f":908 85 {*movdi_internal}
     (nil))
(insn 5380 5379 5381 353 (set (reg:DI 2 cx)
        (symbol_ref:DI ("equiv.2.4368") [flags 0x202]  <var_decl 0x7f9828263510 equiv.2>)) "ETAFLD2.f":908 85 {*movdi_internal}
     (nil))
(insn 5381 5380 5382 353 (set (reg:DI 1 dx)
        (symbol_ref:DI ("equiv.3.4378") [flags 0x202]  <var_decl 0x7f9828263750 equiv.3>)) "ETAFLD2.f":908 85 {*movdi_internal}
     (nil))
(insn 5382 5381 5383 353 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f9827f94240 *.LC3>)) "ETAFLD2.f":908 85 {*movdi_internal}
     (nil))
(insn 5383 5382 5384 353 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC75") [flags 0x2]  <var_decl 0x7f9828035870 *.LC75>)) "ETAFLD2.f":908 85 {*movdi_internal}
     (nil))
(insn 5384 5383 5385 353 (set (reg:QI 0 ax)
        (const_int 0 [0])) "ETAFLD2.f":908 88 {*movqi_internal}
     (nil))
(call_insn 5385 5384 5386 353 (call (mem:QI (symbol_ref:DI ("e2out_") [flags 0x41]  <function_decl 0x7f9828228600 e2out>) [0 e2out S1 A8])
        (const_int 16 [0x10])) "ETAFLD2.f":908 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
(insn 5386 5385 5387 353 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":908 222 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 5387 5386 5388 353 (set (reg/f:DI 1 dx [2953])
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                (const_int 55216 [0xd7b0])))) "ETAFLD2.f":909 85 {*movdi_internal}
     (nil))
(insn 5388 5387 5389 353 (set (reg:DI 0 ax [2954])
        (const_int 0 [0])) "ETAFLD2.f":909 85 {*movdi_internal}
     (nil))
(insn 5389 5388 5917 353 (set (reg:DI 2 cx [2955])
        (const_int 12 [0xc])) "ETAFLD2.f":909 85 {*movdi_internal}
     (nil))
(insn 5917 5389 5390 353 (set (reg/f:DI 5 di [2953])
        (reg/f:DI 1 dx [2953])) "ETAFLD2.f":909 85 {*movdi_internal}
     (nil))
(insn 5390 5917 5918 353 (parallel [
            (set (reg:DI 2 cx [2955])
                (const_int 0 [0]))
            (set (reg/f:DI 5 di [2953])
                (plus:DI (ashift:DI (reg:DI 2 cx [2955])
                        (const_int 3 [0x3]))
                    (reg/f:DI 5 di [2953])))
            (set (mem/c:BLK (reg/f:DI 5 di [2953]) [1 rqstfld.id+0 S96 A128])
                (const_int 0 [0]))
            (use (reg:DI 0 ax [2954]))
            (use (reg:DI 2 cx [2955]))
        ]) "ETAFLD2.f":909 984 {*rep_stosdi_rex64}
     (nil))
(insn 5918 5390 5391 353 (set (reg/f:DI 1 dx [2953])
        (reg/f:DI 5 di [2953])) "ETAFLD2.f":909 85 {*movdi_internal}
     (nil))
(insn 5391 5918 5392 353 (set (mem/c:SI (reg/f:DI 1 dx [2953]) [1 rqstfld.id+96 S4 A128])
        (reg:SI 0 ax [2954])) "ETAFLD2.f":909 86 {*movsi_internal}
     (nil))
(insn 5392 5391 5393 353 (parallel [
            (set (reg/f:DI 1 dx [2953])
                (plus:DI (reg/f:DI 1 dx [2953])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":909 222 {*adddi_1}
     (nil))
(insn 5393 5392 5394 353 (set (reg:SI 0 ax [orig:1611 l.170_1525 ] [1611])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":910 86 {*movsi_internal}
     (nil))
(insn 5394 5393 5395 353 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -276 [0xfffffffffffffeec])) [1 lyr+0 S4 A32])
        (reg:SI 0 ax [orig:1611 l.170_1525 ] [1611])) "ETAFLD2.f":910 86 {*movsi_internal}
     (nil))
(insn 5395 5394 5396 353 (set (reg:SI 0 ax [orig:1612 itype.171_1526 ] [1612])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -268 [0xfffffffffffffef4])) [1 itype+0 S4 A32])) "ETAFLD2.f":911 86 {*movsi_internal}
     (nil))
(insn 5396 5395 5397 353 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [orig:1612 itype.171_1526 ] [1612])
            (const_int 1 [0x1]))) "ETAFLD2.f":911 11 {*cmpsi_1}
     (nil))
(jump_insn 5397 5396 5398 353 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 5400)
            (pc))) "ETAFLD2.f":911 682 {*jcc}
     (nil)
 -> 5400)
;;  succ:       354 (FALLTHRU)
;;              355
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 354, loop depth 0, maybe hot
;;  prev block 353, next block 355, flags: (RTL, MODIFIED)
;;  pred:       353 (FALLTHRU)
;; bb 354 artificial_defs: { }
;; bb 354 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 5398 5397 5399 354 [bb 354] NOTE_INSN_BASIC_BLOCK)
(insn 5399 5398 5400 354 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 55248 [0xd7d0]))) [1 rqstfld.id+32 S4 A128])
        (const_int 109 [0x6d])) "ETAFLD2.f":911 86 {*movsi_internal}
     (nil))
;;  succ:       355 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 355, loop depth 0, maybe hot
;;  prev block 354, next block 356, flags: (RTL, MODIFIED)
;;  pred:       353
;;              354 (FALLTHRU)
;; bb 355 artificial_defs: { }
;; bb 355 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 2956 2957 2958 2959
(code_label 5400 5399 5401 355 195 (nil) [1 uses])
(note 5401 5400 5402 355 [bb 355] NOTE_INSN_BASIC_BLOCK)
(insn 5402 5401 5403 355 (set (reg:DI 4 si [2956])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -832 [0xfffffffffffffcc0])) [11 jmout+0 S8 A64])) "ETAFLD2.f":912 85 {*movdi_internal}
     (nil))
(insn 5403 5402 5404 355 (set (reg:DI 2 cx [2957])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -824 [0xfffffffffffffcc8])) [11 imout+0 S8 A64])) "ETAFLD2.f":912 85 {*movdi_internal}
     (nil))
(insn 5404 5403 5405 355 (set (reg:DI 1 dx [2958])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "ETAFLD2.f":912 85 {*movdi_internal}
     (nil))
(insn 5405 5404 5406 355 (parallel [
            (set (reg:DI 0 ax [2959])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -276 [0xfffffffffffffeec])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":912 222 {*adddi_1}
     (nil))
(insn 5406 5405 5407 355 (set (reg:DI 38 r9)
        (reg:DI 4 si [2956])) "ETAFLD2.f":912 85 {*movdi_internal}
     (nil))
(insn 5407 5406 5408 355 (set (reg:DI 37 r8)
        (reg:DI 2 cx [2957])) "ETAFLD2.f":912 85 {*movdi_internal}
     (nil))
(insn 5408 5407 5409 355 (set (reg:DI 2 cx)
        (reg:DI 1 dx [2958])) "ETAFLD2.f":912 85 {*movdi_internal}
     (nil))
(insn 5409 5408 5410 355 (set (reg:DI 1 dx)
        (reg:DI 0 ax [2959])) "ETAFLD2.f":912 85 {*movdi_internal}
     (nil))
(insn 5410 5409 5411 355 (set (reg:DI 4 si)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                (const_int 596 [0x254])))) "ETAFLD2.f":912 85 {*movdi_internal}
     (nil))
(insn 5411 5410 5412 355 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                (const_int 4 [0x4])))) "ETAFLD2.f":912 85 {*movdi_internal}
     (nil))
(insn 5412 5411 5413 355 (set (reg:QI 0 ax)
        (const_int 0 [0])) "ETAFLD2.f":912 88 {*movqi_internal}
     (nil))
(call_insn 5413 5412 5414 355 (call (mem:QI (symbol_ref:DI ("output_") [flags 0x41]  <function_decl 0x7f9828228700 output>) [0 output S1 A8])
        (const_int 0 [0])) "ETAFLD2.f":912 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
;;  succ:       356 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 356, loop depth 0, maybe hot
;;  prev block 355, next block 357, flags: (RTL, MODIFIED)
;;  pred:       351
;;              355 (FALLTHRU)
;;              352
;; bb 356 artificial_defs: { }
;; bb 356 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1613
(code_label 5414 5413 5415 356 194 (nil) [2 uses])
(note 5415 5414 5416 356 [bb 356] NOTE_INSN_BASIC_BLOCK)
(insn 5416 5415 5417 356 (set (reg:SI 0 ax [orig:1613 _1527 ] [1613])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 456 [0x1c8]))) [1 rqstfld.iget+440 S4 A64])) "ETAFLD2.f":918 86 {*movsi_internal}
     (nil))
(insn 5417 5416 5418 356 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:1613 _1527 ] [1613])
            (const_int 0 [0]))) "ETAFLD2.f":918 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 5418 5417 5419 356 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 5503)
            (pc))) "ETAFLD2.f":918 682 {*jcc}
     (nil)
 -> 5503)
;;  succ:       357 (FALLTHRU)
;;              361
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 357, loop depth 0, maybe hot
;;  prev block 356, next block 358, flags: (RTL, MODIFIED)
;;  pred:       356 (FALLTHRU)
;; bb 357 artificial_defs: { }
;; bb 357 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1614 1615 1616 1617 1618 1619 1620 1621 2960 2961 2962 2963
(note 5419 5418 5420 357 [bb 357] NOTE_INSN_BASIC_BLOCK)
(insn 5420 5419 5421 357 (set (reg:SI 0 ax [orig:1614 _1528 ] [1614])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 456 [0x1c8]))) [1 rqstfld.iget+440 S4 A64])) "ETAFLD2.f":919 86 {*movsi_internal}
     (nil))
(insn 5421 5420 5422 357 (set (reg:DI 1 dx [orig:1615 _1529 ] [1615])
        (sign_extend:DI (reg:SI 0 ax [orig:1614 _1528 ] [1614]))) "ETAFLD2.f":919 149 {*extendsidi2_rex64}
     (nil))
(insn 5422 5421 5423 357 (set (reg:DI 0 ax [2960])
        (reg:DI 1 dx [orig:1615 _1529 ] [1615])) "ETAFLD2.f":919 85 {*movdi_internal}
     (nil))
(insn 5423 5422 5425 357 (parallel [
            (set (reg:DI 0 ax [2961])
                (ashift:DI (reg:DI 0 ax [2960])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":919 551 {*ashldi3_1}
     (nil))
(insn 5425 5423 5426 357 (parallel [
            (set (reg:DI 0 ax [2960])
                (minus:DI (reg:DI 0 ax [2960])
                    (reg:DI 1 dx [orig:1615 _1529 ] [1615])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":919 278 {*subdi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:1615 _1529 ] [1615])
            (const_int 15 [0xf]))
        (nil)))
(insn 5426 5425 5428 357 (parallel [
            (set (reg:DI 0 ax [2962])
                (ashift:DI (reg:DI 0 ax [2960])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":919 551 {*ashldi3_1}
     (nil))
(insn 5428 5426 5429 357 (set (reg:DI 1 dx [orig:1616 _1530 ] [1616])
        (reg:DI 0 ax [2960])) "ETAFLD2.f":919 85 {*movdi_internal}
     (nil))
(insn 5429 5428 5430 357 (set (reg:SI 0 ax [orig:1617 l.172_1531 ] [1617])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":919 86 {*movsi_internal}
     (nil))
(insn 5430 5429 5431 357 (set (reg:DI 0 ax [orig:1618 _1532 ] [1618])
        (sign_extend:DI (reg:SI 0 ax [orig:1617 l.172_1531 ] [1617]))) "ETAFLD2.f":919 149 {*extendsidi2_rex64}
     (nil))
(insn 5431 5430 5432 357 (parallel [
            (set (reg:DI 0 ax [orig:1619 _1533 ] [1619])
                (plus:DI (reg:DI 0 ax [orig:1618 _1532 ] [1618])
                    (reg:DI 1 dx [orig:1616 _1530 ] [1616])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":919 222 {*adddi_1}
     (nil))
(insn 5432 5431 5433 357 (parallel [
            (set (reg:DI 0 ax [orig:1620 _1534 ] [1620])
                (plus:DI (reg:DI 0 ax [orig:1619 _1533 ] [1619])
                    (const_int -61 [0xffffffffffffffc3])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":919 222 {*adddi_1}
     (nil))
(insn 5433 5432 5434 357 (parallel [
            (set (reg:DI 0 ax [2963])
                (plus:DI (reg:DI 0 ax [orig:1620 _1534 ] [1620])
                    (const_int 1404 [0x57c])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":919 222 {*adddi_1}
     (nil))
(insn 5434 5433 5435 357 (set (reg:SI 0 ax [orig:1621 _1535 ] [1621])
        (mem:SI (plus:DI (mult:DI (reg:DI 0 ax [2963])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)) [1 rqstfld.lvls S4 A32])) "ETAFLD2.f":919 86 {*movsi_internal}
     (nil))
(insn 5435 5434 5436 357 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:1621 _1535 ] [1621])
            (const_int 0 [0]))) "ETAFLD2.f":919 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 5436 5435 5437 357 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 5503)
            (pc))) "ETAFLD2.f":919 682 {*jcc}
     (nil)
 -> 5503)
;;  succ:       358 (FALLTHRU)
;;              361
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 358, loop depth 0, maybe hot
;;  prev block 357, next block 359, flags: (RTL, MODIFIED)
;;  pred:       357 (FALLTHRU)
;; bb 358 artificial_defs: { }
;; bb 358 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 1622 1623 1624 1625 1626 1627 1628 1629 1630 1631 2964 2965 2966 2967 2968 2969 2970 2971 2972 2973 2974
(note 5437 5436 5438 358 [bb 358] NOTE_INSN_BASIC_BLOCK)
(insn 5438 5437 5439 358 (set (reg:SI 0 ax [orig:1622 _1536 ] [1622])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 456 [0x1c8]))) [1 rqstfld.iget+440 S4 A64])) "ETAFLD2.f":920 86 {*movsi_internal}
     (nil))
(insn 5439 5438 5440 358 (set (reg:DI 1 dx [orig:1623 _1537 ] [1623])
        (sign_extend:DI (reg:SI 0 ax [orig:1622 _1536 ] [1622]))) "ETAFLD2.f":920 149 {*extendsidi2_rex64}
     (nil))
(insn 5440 5439 5441 358 (set (reg:DI 0 ax [2964])
        (reg:DI 1 dx [orig:1623 _1537 ] [1623])) "ETAFLD2.f":920 85 {*movdi_internal}
     (nil))
(insn 5441 5440 5443 358 (parallel [
            (set (reg:DI 0 ax [2965])
                (ashift:DI (reg:DI 0 ax [2964])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":920 551 {*ashldi3_1}
     (nil))
(insn 5443 5441 5444 358 (parallel [
            (set (reg:DI 0 ax [2964])
                (minus:DI (reg:DI 0 ax [2964])
                    (reg:DI 1 dx [orig:1623 _1537 ] [1623])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":920 278 {*subdi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:1623 _1537 ] [1623])
            (const_int 15 [0xf]))
        (nil)))
(insn 5444 5443 5446 358 (parallel [
            (set (reg:DI 0 ax [2966])
                (ashift:DI (reg:DI 0 ax [2964])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":920 551 {*ashldi3_1}
     (nil))
(insn 5446 5444 5447 358 (set (reg:DI 1 dx [orig:1624 _1538 ] [1624])
        (reg:DI 0 ax [2964])) "ETAFLD2.f":920 85 {*movdi_internal}
     (nil))
(insn 5447 5446 5448 358 (set (reg:SI 0 ax [orig:1625 l.173_1539 ] [1625])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":920 86 {*movsi_internal}
     (nil))
(insn 5448 5447 5449 358 (set (reg:DI 0 ax [orig:1626 _1540 ] [1626])
        (sign_extend:DI (reg:SI 0 ax [orig:1625 l.173_1539 ] [1625]))) "ETAFLD2.f":920 149 {*extendsidi2_rex64}
     (nil))
(insn 5449 5448 5450 358 (parallel [
            (set (reg:DI 0 ax [orig:1627 _1541 ] [1627])
                (plus:DI (reg:DI 0 ax [orig:1626 _1540 ] [1626])
                    (reg:DI 1 dx [orig:1624 _1538 ] [1624])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":920 222 {*adddi_1}
     (nil))
(insn 5450 5449 5451 358 (parallel [
            (set (reg:DI 0 ax [orig:1628 _1542 ] [1628])
                (plus:DI (reg:DI 0 ax [orig:1627 _1541 ] [1627])
                    (const_int -61 [0xffffffffffffffc3])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":920 222 {*adddi_1}
     (nil))
(insn 5451 5450 5452 358 (parallel [
            (set (reg:DI 0 ax [2967])
                (plus:DI (reg:DI 0 ax [orig:1628 _1542 ] [1628])
                    (const_int 1404 [0x57c])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":920 222 {*adddi_1}
     (nil))
(insn 5452 5451 5453 358 (set (reg:SI 0 ax [orig:1629 _1543 ] [1629])
        (mem:SI (plus:DI (mult:DI (reg:DI 0 ax [2967])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)) [1 rqstfld.lvls S4 A32])) "ETAFLD2.f":920 86 {*movsi_internal}
     (nil))
(insn 5453 5452 5454 358 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -268 [0xfffffffffffffef4])) [1 itype+0 S4 A32])
        (reg:SI 0 ax [orig:1629 _1543 ] [1629])) "ETAFLD2.f":920 86 {*movsi_internal}
     (nil))
(insn 5454 5453 5455 358 (parallel [
            (set (reg:DI 1 dx [2968])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -272 [0xfffffffffffffef0])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":921 222 {*adddi_1}
     (nil))
(insn 5455 5454 5456 358 (parallel [
            (set (reg:DI 0 ax [2969])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -268 [0xfffffffffffffef4])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":921 222 {*adddi_1}
     (nil))
(insn 5456 5455 5457 358 (set (reg:DI 37 r8)
        (symbol_ref:DI ("equiv.3.4378") [flags 0x202]  <var_decl 0x7f9828263750 equiv.3>)) "ETAFLD2.f":921 85 {*movdi_internal}
     (nil))
(insn 5457 5456 5459 358 (set (reg:DI 2 cx)
        (const:DI (plus:DI (symbol_ref:DI ("loops_") [flags 0x202]  <var_decl 0x7f9828246c60 loops>)
                (const_int 9680 [0x25d0])))) "ETAFLD2.f":921 85 {*movdi_internal}
     (nil))
(insn 5459 5457 5460 358 (set (reg:DI 4 si)
        (reg:DI 0 ax [2969])) "ETAFLD2.f":921 85 {*movdi_internal}
     (nil))
(insn 5460 5459 5461 358 (set (reg:DI 5 di)
        (symbol_ref:DI ("equiv.0.4352") [flags 0x202]  <var_decl 0x7f98282631b0 equiv.0>)) "ETAFLD2.f":921 85 {*movdi_internal}
     (nil))
(insn 5461 5460 5462 358 (set (reg:QI 0 ax)
        (const_int 0 [0])) "ETAFLD2.f":921 88 {*movqi_internal}
     (nil))
(call_insn 5462 5461 5463 358 (call (mem:QI (symbol_ref:DI ("netal_") [flags 0x41]  <function_decl 0x7f9828228a00 netal>) [0 netal S1 A8])
        (const_int 0 [0])) "ETAFLD2.f":921 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (nil))))))))
(insn 5463 5462 5464 358 (set (reg:DI 1 dx [2970])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [4 grid2+0 S8 A64])) "ETAFLD2.f":923 85 {*movdi_internal}
     (nil))
(insn 5464 5463 5465 358 (set (reg:DI 0 ax [2971])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "ETAFLD2.f":923 85 {*movdi_internal}
     (nil))
(insn 5465 5464 5466 358 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [11  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -832 [0xfffffffffffffcc0])) [11 jmout+0 S8 A64])) "ETAFLD2.f":923 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 5466 5465 5467 358 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [11  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -824 [0xfffffffffffffcc8])) [11 imout+0 S8 A64])) "ETAFLD2.f":923 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 5467 5466 5468 358 (set (reg:DI 38 r9)
        (reg:DI 1 dx [2970])) "ETAFLD2.f":923 85 {*movdi_internal}
     (nil))
(insn 5468 5467 5469 358 (set (reg:DI 37 r8)
        (reg:DI 0 ax [2971])) "ETAFLD2.f":923 85 {*movdi_internal}
     (nil))
(insn 5469 5468 5470 358 (set (reg:DI 2 cx)
        (symbol_ref:DI ("equiv.2.4368") [flags 0x202]  <var_decl 0x7f9828263510 equiv.2>)) "ETAFLD2.f":923 85 {*movdi_internal}
     (nil))
(insn 5470 5469 5471 358 (set (reg:DI 1 dx)
        (symbol_ref:DI ("equiv.3.4378") [flags 0x202]  <var_decl 0x7f9828263750 equiv.3>)) "ETAFLD2.f":923 85 {*movdi_internal}
     (nil))
(insn 5471 5470 5472 358 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f9827f94240 *.LC3>)) "ETAFLD2.f":923 85 {*movdi_internal}
     (nil))
(insn 5472 5471 5473 358 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC76") [flags 0x2]  <var_decl 0x7f9828035900 *.LC76>)) "ETAFLD2.f":923 85 {*movdi_internal}
     (nil))
(insn 5473 5472 5474 358 (set (reg:QI 0 ax)
        (const_int 0 [0])) "ETAFLD2.f":923 88 {*movqi_internal}
     (nil))
(call_insn 5474 5473 5475 358 (call (mem:QI (symbol_ref:DI ("e2out_") [flags 0x41]  <function_decl 0x7f9828228600 e2out>) [0 e2out S1 A8])
        (const_int 16 [0x10])) "ETAFLD2.f":923 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
(insn 5475 5474 5476 358 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":923 222 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 5476 5475 5477 358 (set (reg/f:DI 1 dx [2972])
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                (const_int 55216 [0xd7b0])))) "ETAFLD2.f":924 85 {*movdi_internal}
     (nil))
(insn 5477 5476 5478 358 (set (reg:DI 0 ax [2973])
        (const_int 0 [0])) "ETAFLD2.f":924 85 {*movdi_internal}
     (nil))
(insn 5478 5477 5919 358 (set (reg:DI 2 cx [2974])
        (const_int 12 [0xc])) "ETAFLD2.f":924 85 {*movdi_internal}
     (nil))
(insn 5919 5478 5479 358 (set (reg/f:DI 5 di [2972])
        (reg/f:DI 1 dx [2972])) "ETAFLD2.f":924 85 {*movdi_internal}
     (nil))
(insn 5479 5919 5920 358 (parallel [
            (set (reg:DI 2 cx [2974])
                (const_int 0 [0]))
            (set (reg/f:DI 5 di [2972])
                (plus:DI (ashift:DI (reg:DI 2 cx [2974])
                        (const_int 3 [0x3]))
                    (reg/f:DI 5 di [2972])))
            (set (mem/c:BLK (reg/f:DI 5 di [2972]) [1 rqstfld.id+0 S96 A128])
                (const_int 0 [0]))
            (use (reg:DI 0 ax [2973]))
            (use (reg:DI 2 cx [2974]))
        ]) "ETAFLD2.f":924 984 {*rep_stosdi_rex64}
     (nil))
(insn 5920 5479 5480 358 (set (reg/f:DI 1 dx [2972])
        (reg/f:DI 5 di [2972])) "ETAFLD2.f":924 85 {*movdi_internal}
     (nil))
(insn 5480 5920 5481 358 (set (mem/c:SI (reg/f:DI 1 dx [2972]) [1 rqstfld.id+96 S4 A128])
        (reg:SI 0 ax [2973])) "ETAFLD2.f":924 86 {*movsi_internal}
     (nil))
(insn 5481 5480 5482 358 (parallel [
            (set (reg/f:DI 1 dx [2972])
                (plus:DI (reg/f:DI 1 dx [2972])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":924 222 {*adddi_1}
     (nil))
(insn 5482 5481 5483 358 (set (reg:SI 0 ax [orig:1630 l.174_1544 ] [1630])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":925 86 {*movsi_internal}
     (nil))
(insn 5483 5482 5484 358 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -276 [0xfffffffffffffeec])) [1 lyr+0 S4 A32])
        (reg:SI 0 ax [orig:1630 l.174_1544 ] [1630])) "ETAFLD2.f":925 86 {*movsi_internal}
     (nil))
(insn 5484 5483 5485 358 (set (reg:SI 0 ax [orig:1631 itype.175_1545 ] [1631])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -268 [0xfffffffffffffef4])) [1 itype+0 S4 A32])) "ETAFLD2.f":926 86 {*movsi_internal}
     (nil))
(insn 5485 5484 5486 358 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [orig:1631 itype.175_1545 ] [1631])
            (const_int 1 [0x1]))) "ETAFLD2.f":926 11 {*cmpsi_1}
     (nil))
(jump_insn 5486 5485 5487 358 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 5489)
            (pc))) "ETAFLD2.f":926 682 {*jcc}
     (nil)
 -> 5489)
;;  succ:       359 (FALLTHRU)
;;              360
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 359, loop depth 0, maybe hot
;;  prev block 358, next block 360, flags: (RTL, MODIFIED)
;;  pred:       358 (FALLTHRU)
;; bb 359 artificial_defs: { }
;; bb 359 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 5487 5486 5488 359 [bb 359] NOTE_INSN_BASIC_BLOCK)
(insn 5488 5487 5489 359 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                    (const_int 55248 [0xd7d0]))) [1 rqstfld.id+32 S4 A128])
        (const_int 109 [0x6d])) "ETAFLD2.f":926 86 {*movsi_internal}
     (nil))
;;  succ:       360 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 360, loop depth 0, maybe hot
;;  prev block 359, next block 361, flags: (RTL, MODIFIED)
;;  pred:       358
;;              359 (FALLTHRU)
;; bb 360 artificial_defs: { }
;; bb 360 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 2975 2976 2977 2978
(code_label 5489 5488 5490 360 197 (nil) [1 uses])
(note 5490 5489 5491 360 [bb 360] NOTE_INSN_BASIC_BLOCK)
(insn 5491 5490 5492 360 (set (reg:DI 4 si [2975])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -832 [0xfffffffffffffcc0])) [11 jmout+0 S8 A64])) "ETAFLD2.f":927 85 {*movdi_internal}
     (nil))
(insn 5492 5491 5493 360 (set (reg:DI 2 cx [2976])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -824 [0xfffffffffffffcc8])) [11 imout+0 S8 A64])) "ETAFLD2.f":927 85 {*movdi_internal}
     (nil))
(insn 5493 5492 5494 360 (set (reg:DI 1 dx [2977])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "ETAFLD2.f":927 85 {*movdi_internal}
     (nil))
(insn 5494 5493 5495 360 (parallel [
            (set (reg:DI 0 ax [2978])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -276 [0xfffffffffffffeec])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":927 222 {*adddi_1}
     (nil))
(insn 5495 5494 5496 360 (set (reg:DI 38 r9)
        (reg:DI 4 si [2975])) "ETAFLD2.f":927 85 {*movdi_internal}
     (nil))
(insn 5496 5495 5497 360 (set (reg:DI 37 r8)
        (reg:DI 2 cx [2976])) "ETAFLD2.f":927 85 {*movdi_internal}
     (nil))
(insn 5497 5496 5498 360 (set (reg:DI 2 cx)
        (reg:DI 1 dx [2977])) "ETAFLD2.f":927 85 {*movdi_internal}
     (nil))
(insn 5498 5497 5499 360 (set (reg:DI 1 dx)
        (reg:DI 0 ax [2978])) "ETAFLD2.f":927 85 {*movdi_internal}
     (nil))
(insn 5499 5498 5500 360 (set (reg:DI 4 si)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                (const_int 456 [0x1c8])))) "ETAFLD2.f":927 85 {*movdi_internal}
     (nil))
(insn 5500 5499 5501 360 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f982825b120 rqstfld>)
                (const_int 4 [0x4])))) "ETAFLD2.f":927 85 {*movdi_internal}
     (nil))
(insn 5501 5500 5502 360 (set (reg:QI 0 ax)
        (const_int 0 [0])) "ETAFLD2.f":927 88 {*movqi_internal}
     (nil))
(call_insn 5502 5501 5503 360 (call (mem:QI (symbol_ref:DI ("output_") [flags 0x41]  <function_decl 0x7f9828228700 output>) [0 output S1 A8])
        (const_int 0 [0])) "ETAFLD2.f":927 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
;;  succ:       361 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 361, loop depth 0, maybe hot
;;  prev block 360, next block 399, flags: (RTL, MODIFIED)
;;  pred:       356
;;              360 (FALLTHRU)
;;              357
;; bb 361 artificial_defs: { }
;; bb 361 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1632 1633
(code_label 5503 5502 5504 361 196 (nil) [2 uses])
(note 5504 5503 5505 361 [bb 361] NOTE_INSN_BASIC_BLOCK)
(insn 5505 5504 5506 361 (set (reg:SI 0 ax [orig:1632 l.176_1546 ] [1632])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])) "ETAFLD2.f":899 86 {*movsi_internal}
     (nil))
(insn 5506 5505 5507 361 (parallel [
            (set (reg:SI 0 ax [orig:1633 _1547 ] [1633])
                (plus:SI (reg:SI 0 ax [orig:1632 l.176_1546 ] [1632])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "ETAFLD2.f":899 221 {*addsi_1}
     (nil))
(insn 5507 5506 5693 361 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [1 l+0 S4 A128])
        (reg:SI 0 ax [orig:1633 _1547 ] [1633])) "ETAFLD2.f":899 86 {*movsi_internal}
     (nil))
(jump_insn 5693 5507 5694 361 (set (pc)
        (label_ref 5508)) "ETAFLD2.f":899 683 {jump}
     (nil)
 -> 5508)
;;  succ:       350 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 5694 5693 5804)
;; basic block 399, loop depth 0, maybe hot
;;  prev block 361, next block 362, flags: (RTL, MODIFIED)
;;  pred:       327
;;              331
;;              350
;; bb 399 artificial_defs: { }
;; bb 399 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 5804 5694 5803 399 259 (nil) [3 uses])
(note 5803 5804 5805 399 [bb 399] NOTE_INSN_BASIC_BLOCK)
(insn 5805 5803 5511 399 (const_int 0 [0]) "ETAFLD2.f":930 718 {nop}
     (nil))
;;  succ:       362 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 362, loop depth 0, maybe hot
;;  prev block 399, next block 1, flags: (RTL, MODIFIED)
;;  pred:       399 [always]  (FALLTHRU)
;; bb 362 artificial_defs: { }
;; bb 362 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 2979 2980
(code_label 5511 5805 5512 362 180 (nil) [0 uses])
(note 5512 5511 5576 362 [bb 362] NOTE_INSN_BASIC_BLOCK)
(insn 5576 5512 5514 362 (const_int 0 [0]) "ETAFLD2.f":938 718 {nop}
     (nil))
(insn 5514 5576 5515 362 (set (reg:DI 0 ax [2979])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [4 grid2+0 S8 A64])) "ETAFLD2.f":106 85 {*movdi_internal}
     (nil))
(insn 5515 5514 5516 362 (set (reg:DI 5 di)
        (reg:DI 0 ax [2979])) "ETAFLD2.f":106 85 {*movdi_internal}
     (nil))
(call_insn 5516 5515 5517 362 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f98280aee00 __builtin_free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) "ETAFLD2.f":106 689 {*call}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 5517 5516 5518 362 (set (reg:DI 0 ax [2980])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "ETAFLD2.f":106 85 {*movdi_internal}
     (nil))
(insn 5518 5517 5519 362 (set (reg:DI 5 di)
        (reg:DI 0 ax [2980])) "ETAFLD2.f":106 85 {*movdi_internal}
     (nil))
(call_insn 5519 5518 5577 362 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f98280aee00 __builtin_free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) "ETAFLD2.f":106 689 {*call}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 5577 5519 5821 362 (const_int 0 [0]) "ETAFLD2.f":938 718 {nop}
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(note 5821 5577 0 NOTE_INSN_DELETED)
