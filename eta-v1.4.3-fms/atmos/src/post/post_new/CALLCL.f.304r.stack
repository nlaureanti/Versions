
;; Function callcl (callcl_, funcdef_no=0, decl_uid=3773, cgraph_uid=0, symbol_order=0)

starting the processing of deferred insns
ending the processing of deferred insns


callcl

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 37 [r8]
;;  ref usage 	r0={199d,194u} r1={96d,92u} r2={11d,7u} r3={3d,3u} r4={5d,1u} r5={5d,1u} r6={3d,163u} r7={7d,37u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r17={113d,17u} r18={4d} r19={4d} r20={1d,1u,4e} r21={56d,59u} r22={33d,29u} r23={8d,3u} r24={6d,1u} r25={5d} r26={5d} r27={5d} r28={5d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={5d,1u} r38={5d} r39={4d} r40={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} 
;;    total ref usage 1413{800d,609u,4e} in 462{458 regular + 4 call} insns.
(note 1 0 9 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 37 [r8]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 37 [r8]
;; lr  def 	 0 [ax] 1 [dx]
(note 9 1 577 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 577 9 578 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg/f:DI 6 bp)) "CALLCL.f":1 -1
     (nil))
(insn/f 578 577 579 2 (set (reg/f:DI 6 bp)
        (reg/f:DI 7 sp)) "CALLCL.f":1 -1
     (nil))
(insn/f 579 578 580 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 3 bx)) "CALLCL.f":1 -1
     (nil))
(insn/f 580 579 581 2 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) "CALLCL.f":1 -1
     (nil))
(note 581 580 2 2 NOTE_INSN_PROLOGUE_END)
(insn 2 581 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [3 p1d+0 S8 A64])
        (reg:DI 5 di [ p1d ])) "CALLCL.f":1 85 {*movdi_internal}
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [3 t1d+0 S8 A64])
        (reg:DI 4 si [ t1d ])) "CALLCL.f":1 85 {*movdi_internal}
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [3 q1d+0 S8 A64])
        (reg:DI 1 dx [ q1d ])) "CALLCL.f":1 85 {*movdi_internal}
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [3 plcl+0 S8 A64])
        (reg:DI 2 cx [ plcl ])) "CALLCL.f":1 85 {*movdi_internal}
     (nil))
(insn 6 5 7 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [3 zlcl+0 S8 A64])
        (reg:DI 37 r8 [ zlcl ])) "CALLCL.f":1 85 {*movdi_internal}
     (nil))
(note 7 6 11 2 NOTE_INSN_FUNCTION_BEG)
(insn 11 7 12 2 (set (reg:SI 1 dx [orig:304 _229 ] [304])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f3d6bcc1ea0 parallel>)
                    (const_int 8 [0x8]))) [1 parallel.jsta+0 S4 A64])) "CALLCL.f":81 86 {*movsi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:SI 0 ax [orig:305 _230 ] [305])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f3d6bcc1ea0 parallel>)
                    (const_int 12 [0xc]))) [1 parallel.jend+0 S4 A32])) "CALLCL.f":81 86 {*movsi_internal}
     (nil))
(insn 13 12 66 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])
        (reg:SI 1 dx [orig:304 _229 ] [304])) "CALLCL.f":81 86 {*movsi_internal}
     (nil))
;;  succ:       3 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;;              7 [always] 
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 17 [flags]
(code_label 66 13 14 3 5 (nil) [1 uses])
(note 14 66 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 3 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])
            (reg:SI 0 ax [orig:305 _230 ] [305]))) "CALLCL.f":81 11 {*cmpsi_1}
     (nil))
(insn 16 15 17 3 (set (reg:QI 1 dx [316])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALLCL.f":81 678 {*setcc_qi}
     (nil))
(insn 17 16 18 3 (set (reg:SI 1 dx [orig:306 _232 ] [306])
        (zero_extend:SI (reg:QI 1 dx [316]))) "CALLCL.f":81 140 {*zero_extendqisi2}
     (nil))
(insn 18 17 19 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:306 _232 ] [306])
            (const_int 0 [0]))) "CALLCL.f":81 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 19 18 20 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 520)
            (pc))) "CALLCL.f":81 682 {*jcc}
     (nil)
 -> 520)
;;  succ:       8
;;              4 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(note 20 19 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 60 4 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
        (const_int 1 [0x1])) "CALLCL.f":82 86 {*movsi_internal}
     (nil))
;;  succ:       5 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;;              6 [always] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 17 [flags]
(code_label 60 21 22 5 4 (nil) [1 uses])
(note 22 60 23 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 24 5 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
            (const_int 119 [0x77]))) "CALLCL.f":82 11 {*cmpsi_1}
     (nil))
(insn 24 23 25 5 (set (reg:QI 1 dx [317])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALLCL.f":82 678 {*setcc_qi}
     (nil))
(insn 25 24 26 5 (set (reg:SI 1 dx [orig:307 _234 ] [307])
        (zero_extend:SI (reg:QI 1 dx [317]))) "CALLCL.f":82 140 {*zero_extendqisi2}
     (nil))
(insn 26 25 27 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:307 _234 ] [307])
            (const_int 0 [0]))) "CALLCL.f":82 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 27 26 28 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 523)
            (pc))) "CALLCL.f":82 682 {*jcc}
     (nil)
 -> 523)
;;  succ:       7
;;              6 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 7, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 2 [cx] 17 [flags] 21 [xmm0]
(note 28 27 29 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 30 6 (set (reg:SI 1 dx [318])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALLCL.f":83 86 {*movsi_internal}
     (nil))
(insn 30 29 31 6 (set (reg:DI 1 dx [orig:87 _1 ] [87])
        (sign_extend:DI (reg:SI 1 dx [318]))) "CALLCL.f":83 149 {*extendsidi2_rex64}
     (nil))
(insn 31 30 32 6 (parallel [
            (set (reg:DI 2 cx [orig:88 _2 ] [88])
                (mult:DI (reg:DI 1 dx [orig:87 _1 ] [87])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALLCL.f":83 349 {*muldi3_1}
     (nil))
(insn 32 31 33 6 (set (reg:SI 1 dx [319])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALLCL.f":83 86 {*movsi_internal}
     (nil))
(insn 33 32 34 6 (set (reg:DI 1 dx [orig:89 _3 ] [89])
        (sign_extend:DI (reg:SI 1 dx [319]))) "CALLCL.f":83 149 {*extendsidi2_rex64}
     (nil))
(insn 34 33 574 6 (parallel [
            (set (reg:DI 1 dx [orig:90 _4 ] [90])
                (plus:DI (reg:DI 1 dx [orig:89 _3 ] [89])
                    (reg:DI 2 cx [orig:88 _2 ] [88])))
            (clobber (reg:CC 17 flags))
        ]) "CALLCL.f":83 222 {*adddi_1}
     (nil))
(insn 574 34 36 6 (set (reg:DI 2 cx [orig:91 _5 ] [91])
        (plus:DI (reg:DI 1 dx [orig:90 _4 ] [90])
            (const_int -120 [0xffffffffffffff88]))) "CALLCL.f":83 218 {*leadi}
     (nil))
(insn 36 574 37 6 (set (reg:SF 21 xmm0 [orig:92 _6 ] [92])
        (mem/c:SF (symbol_ref:DI ("options_") [flags 0x2]  <var_decl 0x7f3d6bcc1ab0 options>) [2 options.spval+0 S4 A128])) "CALLCL.f":1 131 {*movsf_internal}
     (nil))
(insn 37 36 38 6 (set (reg/f:DI 1 dx [320])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [3 plcl+0 S8 A64])) "CALLCL.f":83 85 {*movdi_internal}
     (nil))
(insn 38 37 39 6 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:91 _5 ] [91])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [320])) [2 *plcl_235(D) S4 A32])
        (reg:SF 21 xmm0 [orig:92 _6 ] [92])) "CALLCL.f":83 131 {*movsf_internal}
     (nil))
(insn 39 38 40 6 (set (reg:SI 1 dx [321])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALLCL.f":84 86 {*movsi_internal}
     (nil))
(insn 40 39 41 6 (set (reg:DI 1 dx [orig:93 _7 ] [93])
        (sign_extend:DI (reg:SI 1 dx [321]))) "CALLCL.f":84 149 {*extendsidi2_rex64}
     (nil))
(insn 41 40 42 6 (parallel [
            (set (reg:DI 2 cx [orig:94 _8 ] [94])
                (mult:DI (reg:DI 1 dx [orig:93 _7 ] [93])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALLCL.f":84 349 {*muldi3_1}
     (nil))
(insn 42 41 43 6 (set (reg:SI 1 dx [322])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALLCL.f":84 86 {*movsi_internal}
     (nil))
(insn 43 42 44 6 (set (reg:DI 1 dx [orig:95 _9 ] [95])
        (sign_extend:DI (reg:SI 1 dx [322]))) "CALLCL.f":84 149 {*extendsidi2_rex64}
     (nil))
(insn 44 43 575 6 (parallel [
            (set (reg:DI 1 dx [orig:96 _10 ] [96])
                (plus:DI (reg:DI 1 dx [orig:95 _9 ] [95])
                    (reg:DI 2 cx [orig:94 _8 ] [94])))
            (clobber (reg:CC 17 flags))
        ]) "CALLCL.f":84 222 {*adddi_1}
     (nil))
(insn 575 44 46 6 (set (reg:DI 2 cx [orig:97 _11 ] [97])
        (plus:DI (reg:DI 1 dx [orig:96 _10 ] [96])
            (const_int -120 [0xffffffffffffff88]))) "CALLCL.f":84 218 {*leadi}
     (nil))
(insn 46 575 47 6 (set (reg:SF 21 xmm0 [orig:98 _12 ] [98])
        (mem/c:SF (symbol_ref:DI ("options_") [flags 0x2]  <var_decl 0x7f3d6bcc1ab0 options>) [2 options.spval+0 S4 A128])) "CALLCL.f":1 131 {*movsf_internal}
     (nil))
(insn 47 46 48 6 (set (reg/f:DI 1 dx [323])
        (symbol_ref:DI ("tlcl.3999") [flags 0x202]  <var_decl 0x7f3d6bcc83f0 tlcl>)) "CALLCL.f":84 85 {*movdi_internal}
     (nil))
(insn 48 47 49 6 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:97 _11 ] [97])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [323])) [2 tlcl S4 A32])
        (reg:SF 21 xmm0 [orig:98 _12 ] [98])) "CALLCL.f":84 131 {*movsf_internal}
     (nil))
(insn 49 48 50 6 (set (reg:SI 1 dx [324])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALLCL.f":85 86 {*movsi_internal}
     (nil))
(insn 50 49 51 6 (set (reg:DI 1 dx [orig:99 _13 ] [99])
        (sign_extend:DI (reg:SI 1 dx [324]))) "CALLCL.f":85 149 {*extendsidi2_rex64}
     (nil))
(insn 51 50 52 6 (parallel [
            (set (reg:DI 2 cx [orig:100 _14 ] [100])
                (mult:DI (reg:DI 1 dx [orig:99 _13 ] [99])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALLCL.f":85 349 {*muldi3_1}
     (nil))
(insn 52 51 53 6 (set (reg:SI 1 dx [325])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALLCL.f":85 86 {*movsi_internal}
     (nil))
(insn 53 52 54 6 (set (reg:DI 1 dx [orig:101 _15 ] [101])
        (sign_extend:DI (reg:SI 1 dx [325]))) "CALLCL.f":85 149 {*extendsidi2_rex64}
     (nil))
(insn 54 53 576 6 (parallel [
            (set (reg:DI 1 dx [orig:102 _16 ] [102])
                (plus:DI (reg:DI 1 dx [orig:101 _15 ] [101])
                    (reg:DI 2 cx [orig:100 _14 ] [100])))
            (clobber (reg:CC 17 flags))
        ]) "CALLCL.f":85 222 {*adddi_1}
     (nil))
(insn 576 54 56 6 (set (reg:DI 2 cx [orig:103 _17 ] [103])
        (plus:DI (reg:DI 1 dx [orig:102 _16 ] [102])
            (const_int -120 [0xffffffffffffff88]))) "CALLCL.f":85 218 {*leadi}
     (nil))
(insn 56 576 57 6 (set (reg:SF 21 xmm0 [orig:104 _18 ] [104])
        (mem/c:SF (symbol_ref:DI ("options_") [flags 0x2]  <var_decl 0x7f3d6bcc1ab0 options>) [2 options.spval+0 S4 A128])) "CALLCL.f":1 131 {*movsf_internal}
     (nil))
(insn 57 56 58 6 (set (reg/f:DI 1 dx [326])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [3 zlcl+0 S8 A64])) "CALLCL.f":85 85 {*movdi_internal}
     (nil))
(insn 58 57 59 6 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:103 _17 ] [103])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [326])) [2 *zlcl_238(D) S4 A32])
        (reg:SF 21 xmm0 [orig:104 _18 ] [104])) "CALLCL.f":85 131 {*movsf_internal}
     (nil))
(insn 59 58 506 6 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALLCL.f":82 221 {*addsi_1}
     (nil))
(jump_insn 506 59 507 6 (set (pc)
        (label_ref 60)) "CALLCL.f":82 683 {jump}
     (nil)
 -> 60)
;;  succ:       5 [always] 
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

(barrier 507 506 523)
;; basic block 7, loop depth 0, maybe hot
;;  prev block 6, next block 8, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       5
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 523 507 522 7 20 (nil) [1 uses])
(note 522 523 524 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 524 522 65 7 (const_int 0 [0]) "CALLCL.f":85 718 {nop}
     (nil))
(insn 65 524 508 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALLCL.f":81 221 {*addsi_1}
     (nil))
(jump_insn 508 65 509 7 (set (pc)
        (label_ref 66)) "CALLCL.f":81 683 {jump}
     (nil)
 -> 66)
;;  succ:       3 [always] 
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

(barrier 509 508 520)
;; basic block 8, loop depth 0, maybe hot
;;  prev block 7, next block 9, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 520 509 519 8 19 (nil) [1 uses])
(note 519 520 521 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 521 519 71 8 (const_int 0 [0]) "CALLCL.f":82 718 {nop}
     (nil))
(insn 71 521 72 8 (set (reg:SI 0 ax [orig:308 _242 ] [308])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f3d6bcc1ea0 parallel>)
                    (const_int 16 [0x10]))) [1 parallel.jsta_m+0 S4 A128])) "CALLCL.f":109 86 {*movsi_internal}
     (nil))
(insn 72 71 73 8 (set (reg:SI 3 bx [orig:309 _243 ] [309])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f3d6bcc1ea0 parallel>)
                    (const_int 20 [0x14]))) [1 parallel.jend_m+0 S4 A32])) "CALLCL.f":109 86 {*movsi_internal}
     (nil))
(insn 73 72 493 8 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])
        (reg:SI 0 ax [orig:308 _242 ] [308])) "CALLCL.f":109 86 {*movsi_internal}
     (nil))
;;  succ:       9 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 9, loop depth 0, maybe hot
;;  prev block 8, next block 10, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;;              23 [always] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 493 73 74 9 15 (nil) [1 uses])
(note 74 493 75 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 75 74 76 9 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])
            (reg:SI 3 bx [orig:309 _243 ] [309]))) "CALLCL.f":109 11 {*cmpsi_1}
     (nil))
(insn 76 75 77 9 (set (reg:QI 0 ax [327])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALLCL.f":109 678 {*setcc_qi}
     (nil))
(insn 77 76 78 9 (set (reg:SI 0 ax [orig:310 _245 ] [310])
        (zero_extend:SI (reg:QI 0 ax [327]))) "CALLCL.f":109 140 {*zero_extendqisi2}
     (nil))
(insn 78 77 79 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:310 _245 ] [310])
            (const_int 0 [0]))) "CALLCL.f":109 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 79 78 80 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 526)
            (pc))) "CALLCL.f":109 682 {*jcc}
     (nil)
 -> 526)
;;  succ:       24
;;              10 (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

;; basic block 10, loop depth 0, maybe hot
;;  prev block 9, next block 11, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       9 (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(note 80 79 81 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 81 80 487 10 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
        (const_int 2 [0x2])) "CALLCL.f":110 86 {*movsi_internal}
     (nil))
;;  succ:       11 (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

;; basic block 11, loop depth 0, maybe hot
;;  prev block 10, next block 12, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       10 (FALLTHRU)
;;              22 [always] 
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 487 81 82 11 14 (nil) [1 uses])
(note 82 487 83 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 83 82 84 11 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
            (const_int 118 [0x76]))) "CALLCL.f":110 11 {*cmpsi_1}
     (nil))
(insn 84 83 85 11 (set (reg:QI 0 ax [328])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALLCL.f":110 678 {*setcc_qi}
     (nil))
(insn 85 84 86 11 (set (reg:SI 0 ax [orig:311 _247 ] [311])
        (zero_extend:SI (reg:QI 0 ax [328]))) "CALLCL.f":110 140 {*zero_extendqisi2}
     (nil))
(insn 86 85 87 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:311 _247 ] [311])
            (const_int 0 [0]))) "CALLCL.f":110 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 87 86 88 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 529)
            (pc))) "CALLCL.f":110 682 {*jcc}
     (nil)
 -> 529)
;;  succ:       23
;;              12 (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

;; basic block 12, loop depth 0, maybe hot
;;  prev block 11, next block 13, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       11 (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags] 21 [xmm0] 22 [xmm1] 23 [xmm2]
(note 88 87 89 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 89 88 90 12 (set (reg:SI 0 ax [329])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALLCL.f":111 86 {*movsi_internal}
     (nil))
(insn 90 89 91 12 (set (reg:DI 0 ax [orig:105 _19 ] [105])
        (sign_extend:DI (reg:SI 0 ax [329]))) "CALLCL.f":111 149 {*extendsidi2_rex64}
     (nil))
(insn 91 90 92 12 (parallel [
            (set (reg:DI 1 dx [orig:106 _20 ] [106])
                (mult:DI (reg:DI 0 ax [orig:105 _19 ] [105])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALLCL.f":111 349 {*muldi3_1}
     (nil))
(insn 92 91 93 12 (set (reg:SI 0 ax [330])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALLCL.f":111 86 {*movsi_internal}
     (nil))
(insn 93 92 94 12 (set (reg:DI 0 ax [orig:107 _21 ] [107])
        (sign_extend:DI (reg:SI 0 ax [330]))) "CALLCL.f":111 149 {*extendsidi2_rex64}
     (nil))
(insn 94 93 570 12 (parallel [
            (set (reg:DI 0 ax [orig:108 _22 ] [108])
                (plus:DI (reg:DI 0 ax [orig:107 _21 ] [107])
                    (reg:DI 1 dx [orig:106 _20 ] [106])))
            (clobber (reg:CC 17 flags))
        ]) "CALLCL.f":111 222 {*adddi_1}
     (nil))
(insn 570 94 96 12 (set (reg:DI 1 dx [orig:109 _23 ] [109])
        (plus:DI (reg:DI 0 ax [orig:108 _22 ] [108])
            (const_int -120 [0xffffffffffffff88]))) "CALLCL.f":111 218 {*leadi}
     (nil))
(insn 96 570 97 12 (set (reg/f:DI 0 ax [331])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [3 p1d+0 S8 A64])) "CALLCL.f":111 85 {*movdi_internal}
     (nil))
(insn 97 96 98 12 (set (reg:SF 22 xmm1 [orig:110 _24 ] [110])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:109 _23 ] [109])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [331])) [2 *p1d_248(D) S4 A32])) "CALLCL.f":111 131 {*movsf_internal}
     (nil))
(insn 98 97 99 12 (set (reg:SI 0 ax [332])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALLCL.f":111 86 {*movsi_internal}
     (nil))
(insn 99 98 100 12 (set (reg:DI 0 ax [orig:111 _25 ] [111])
        (sign_extend:DI (reg:SI 0 ax [332]))) "CALLCL.f":111 149 {*extendsidi2_rex64}
     (nil))
(insn 100 99 101 12 (parallel [
            (set (reg:DI 1 dx [orig:112 _26 ] [112])
                (mult:DI (reg:DI 0 ax [orig:111 _25 ] [111])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALLCL.f":111 349 {*muldi3_1}
     (nil))
(insn 101 100 102 12 (set (reg:SI 0 ax [333])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALLCL.f":111 86 {*movsi_internal}
     (nil))
(insn 102 101 103 12 (set (reg:DI 0 ax [orig:113 _27 ] [113])
        (sign_extend:DI (reg:SI 0 ax [333]))) "CALLCL.f":111 149 {*extendsidi2_rex64}
     (nil))
(insn 103 102 571 12 (parallel [
            (set (reg:DI 0 ax [orig:114 _28 ] [114])
                (plus:DI (reg:DI 0 ax [orig:113 _27 ] [113])
                    (reg:DI 1 dx [orig:112 _26 ] [112])))
            (clobber (reg:CC 17 flags))
        ]) "CALLCL.f":111 222 {*adddi_1}
     (nil))
(insn 571 103 105 12 (set (reg:DI 1 dx [orig:115 _29 ] [115])
        (plus:DI (reg:DI 0 ax [orig:114 _28 ] [114])
            (const_int -120 [0xffffffffffffff88]))) "CALLCL.f":111 218 {*leadi}
     (nil))
(insn 105 571 106 12 (set (reg/f:DI 0 ax [334])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [3 q1d+0 S8 A64])) "CALLCL.f":111 85 {*movdi_internal}
     (nil))
(insn 106 105 107 12 (set (reg:SF 21 xmm0 [orig:116 _30 ] [116])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:115 _29 ] [115])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [334])) [2 *q1d_249(D) S4 A32])) "CALLCL.f":111 131 {*movsf_internal}
     (nil))
(insn 107 106 108 12 (set (reg:SF 21 xmm0 [orig:117 _31 ] [117])
        (mult:SF (reg:SF 21 xmm0 [orig:116 _30 ] [116])
            (reg:SF 22 xmm1 [orig:110 _24 ] [110]))) "CALLCL.f":111 838 {*fop_sf_comm}
     (nil))
(insn 108 107 109 12 (set (reg:SI 0 ax [335])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALLCL.f":111 86 {*movsi_internal}
     (nil))
(insn 109 108 110 12 (set (reg:DI 0 ax [orig:118 _32 ] [118])
        (sign_extend:DI (reg:SI 0 ax [335]))) "CALLCL.f":111 149 {*extendsidi2_rex64}
     (nil))
(insn 110 109 111 12 (parallel [
            (set (reg:DI 1 dx [orig:119 _33 ] [119])
                (mult:DI (reg:DI 0 ax [orig:118 _32 ] [118])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALLCL.f":111 349 {*muldi3_1}
     (nil))
(insn 111 110 112 12 (set (reg:SI 0 ax [336])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALLCL.f":111 86 {*movsi_internal}
     (nil))
(insn 112 111 113 12 (set (reg:DI 0 ax [orig:120 _34 ] [120])
        (sign_extend:DI (reg:SI 0 ax [336]))) "CALLCL.f":111 149 {*extendsidi2_rex64}
     (nil))
(insn 113 112 572 12 (parallel [
            (set (reg:DI 0 ax [orig:121 _35 ] [121])
                (plus:DI (reg:DI 0 ax [orig:120 _34 ] [120])
                    (reg:DI 1 dx [orig:119 _33 ] [119])))
            (clobber (reg:CC 17 flags))
        ]) "CALLCL.f":111 222 {*adddi_1}
     (nil))
(insn 572 113 115 12 (set (reg:DI 1 dx [orig:122 _36 ] [122])
        (plus:DI (reg:DI 0 ax [orig:121 _35 ] [121])
            (const_int -120 [0xffffffffffffff88]))) "CALLCL.f":111 218 {*leadi}
     (nil))
(insn 115 572 116 12 (set (reg/f:DI 0 ax [337])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [3 q1d+0 S8 A64])) "CALLCL.f":111 85 {*movdi_internal}
     (nil))
(insn 116 115 117 12 (set (reg:SF 23 xmm2 [orig:123 _37 ] [123])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:122 _36 ] [122])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [337])) [2 *q1d_249(D) S4 A32])) "CALLCL.f":111 131 {*movsf_internal}
     (nil))
(insn 117 116 118 12 (set (reg:SF 22 xmm1 [338])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) "CALLCL.f":111 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 3.780210018157958984375e-1 [0x0.c18bf8p-1])
        (nil)))
(insn 118 117 119 12 (set (reg:SF 23 xmm2 [orig:124 _38 ] [124])
        (mult:SF (reg:SF 23 xmm2 [orig:123 _37 ] [123])
            (reg:SF 22 xmm1 [338]))) "CALLCL.f":111 838 {*fop_sf_comm}
     (nil))
(insn 119 118 120 12 (set (reg:SF 22 xmm1 [339])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S4 A32])) "CALLCL.f":111 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 6.219789981842041015625e-1 [0x0.9f3a04p+0])
        (nil)))
(insn 120 119 122 12 (set (reg:SF 22 xmm1 [orig:125 _39 ] [125])
        (plus:SF (reg:SF 22 xmm1 [339])
            (reg:SF 23 xmm2 [orig:124 _38 ] [124]))) "CALLCL.f":111 838 {*fop_sf_comm}
     (nil))
(insn 122 120 123 12 (set (reg:SF 21 xmm0 [340])
        (div:SF (reg:SF 21 xmm0 [orig:117 _31 ] [117])
            (reg:SF 22 xmm1 [orig:126 _40 ] [126]))) "CALLCL.f":111 841 {*fop_sf_1}
     (nil))
(insn 123 122 124 12 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 evp+0 S4 A32])
        (reg:SF 21 xmm0 [340])) "CALLCL.f":111 131 {*movsf_internal}
     (nil))
(insn 124 123 125 12 (set (reg:SF 22 xmm1 [341])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 evp+0 S4 A32])) "CALLCL.f":112 131 {*movsf_internal}
     (nil))
(insn 125 124 126 12 (set (reg:SF 21 xmm0 [342])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S4 A32])) "CALLCL.f":112 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 6.219789981842041015625e-1 [0x0.9f3a04p+0])
        (nil)))
(insn 126 125 127 12 (set (reg:SF 21 xmm0 [orig:127 _41 ] [127])
        (mult:SF (reg:SF 21 xmm0 [342])
            (reg:SF 22 xmm1 [341]))) "CALLCL.f":112 838 {*fop_sf_comm}
     (nil))
(insn 127 126 128 12 (set (reg:SI 0 ax [343])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALLCL.f":112 86 {*movsi_internal}
     (nil))
(insn 128 127 129 12 (set (reg:DI 0 ax [orig:128 _42 ] [128])
        (sign_extend:DI (reg:SI 0 ax [343]))) "CALLCL.f":112 149 {*extendsidi2_rex64}
     (nil))
(insn 129 128 130 12 (parallel [
            (set (reg:DI 1 dx [orig:129 _43 ] [129])
                (mult:DI (reg:DI 0 ax [orig:128 _42 ] [128])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALLCL.f":112 349 {*muldi3_1}
     (nil))
(insn 130 129 131 12 (set (reg:SI 0 ax [344])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALLCL.f":112 86 {*movsi_internal}
     (nil))
(insn 131 130 132 12 (set (reg:DI 0 ax [orig:130 _44 ] [130])
        (sign_extend:DI (reg:SI 0 ax [344]))) "CALLCL.f":112 149 {*extendsidi2_rex64}
     (nil))
(insn 132 131 573 12 (parallel [
            (set (reg:DI 0 ax [orig:131 _45 ] [131])
                (plus:DI (reg:DI 0 ax [orig:130 _44 ] [130])
                    (reg:DI 1 dx [orig:129 _43 ] [129])))
            (clobber (reg:CC 17 flags))
        ]) "CALLCL.f":112 222 {*adddi_1}
     (nil))
(insn 573 132 134 12 (set (reg:DI 1 dx [orig:132 _46 ] [132])
        (plus:DI (reg:DI 0 ax [orig:131 _45 ] [131])
            (const_int -120 [0xffffffffffffff88]))) "CALLCL.f":112 218 {*leadi}
     (nil))
(insn 134 573 135 12 (set (reg/f:DI 0 ax [345])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [3 p1d+0 S8 A64])) "CALLCL.f":112 85 {*movdi_internal}
     (nil))
(insn 135 134 136 12 (set (reg:SF 22 xmm1 [orig:133 _47 ] [133])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:132 _46 ] [132])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [345])) [2 *p1d_248(D) S4 A32])) "CALLCL.f":112 131 {*movsf_internal}
     (nil))
(insn 136 135 138 12 (set (reg:SF 22 xmm1 [orig:134 _48 ] [134])
        (minus:SF (reg:SF 22 xmm1 [orig:133 _47 ] [133])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -32 [0xffffffffffffffe0])) [2 evp+0 S4 A32]))) "CALLCL.f":112 841 {*fop_sf_1}
     (nil))
(insn 138 136 139 12 (set (reg:SF 21 xmm0 [346])
        (div:SF (reg:SF 21 xmm0 [orig:127 _41 ] [127])
            (reg:SF 22 xmm1 [orig:135 _49 ] [135]))) "CALLCL.f":112 841 {*fop_sf_1}
     (nil))
(insn 139 138 140 12 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 rmx+0 S4 A32])
        (reg:SF 21 xmm0 [346])) "CALLCL.f":112 131 {*movsf_internal}
     (nil))
(insn 140 139 141 12 (set (reg:SF 22 xmm1 [347])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 rmx+0 S4 A32])) "CALLCL.f":113 131 {*movsf_internal}
     (nil))
(insn 141 140 142 12 (set (reg:SF 21 xmm0 [348])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0  S4 A32])) "CALLCL.f":113 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 2.800000011920928955078125e-1 [0x0.8f5c29p-1])
        (nil)))
(insn 142 141 143 12 (set (reg:SF 22 xmm1 [orig:136 _50 ] [136])
        (mult:SF (reg:SF 22 xmm1 [347])
            (reg:SF 21 xmm0 [348]))) "CALLCL.f":113 838 {*fop_sf_comm}
     (nil))
(insn 143 142 144 12 (set (reg:SF 21 xmm0 [349])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC3") [flags 0x2]) [0  S4 A32])) "CALLCL.f":113 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 144 143 145 12 (set (reg:SF 21 xmm0 [orig:137 _51 ] [137])
        (minus:SF (reg:SF 21 xmm0 [349])
            (reg:SF 22 xmm1 [orig:136 _50 ] [136]))) "CALLCL.f":113 841 {*fop_sf_1}
     (nil))
(insn 145 144 146 12 (set (reg:SF 22 xmm1 [orig:138 _52 ] [138])
        (reg:SF 21 xmm0 [orig:137 _51 ] [137])) "CALLCL.f":113 131 {*movsf_internal}
     (nil))
(insn 146 145 147 12 (set (reg:SF 21 xmm0 [351])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC4") [flags 0x2]) [0  S4 A32])) "CALLCL.f":113 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 2.8450000286102294921875e-1 [0x0.91a9fcp-1])
        (nil)))
(insn 147 146 148 12 (set (reg:SF 21 xmm0 [350])
        (mult:SF (reg:SF 21 xmm0 [351])
            (reg:SF 22 xmm1 [orig:138 _52 ] [138]))) "CALLCL.f":113 838 {*fop_sf_comm}
     (nil))
(insn 148 147 149 12 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 ckapa+0 S4 A32])
        (reg:SF 21 xmm0 [350])) "CALLCL.f":113 131 {*movsf_internal}
     (nil))
(insn 149 148 150 12 (set (reg:SF 21 xmm0 [353])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC3") [flags 0x2]) [0  S4 A32])) "CALLCL.f":114 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 150 149 151 12 (set (reg:SF 21 xmm0 [352])
        (div:SF (reg:SF 21 xmm0 [353])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -40 [0xffffffffffffffd8])) [2 ckapa+0 S4 A32]))) "CALLCL.f":114 841 {*fop_sf_1}
     (nil))
(insn 151 150 152 12 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [2 rkapa+0 S4 A32])
        (reg:SF 21 xmm0 [352])) "CALLCL.f":114 131 {*movsf_internal}
     (nil))
(insn 152 151 153 12 (set (reg:SF 22 xmm1 [355])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 evp+0 S4 A32])) "CALLCL.f":115 131 {*movsf_internal}
     (nil))
(insn 153 152 154 12 (set (reg:SF 21 xmm0 [356])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [0  S4 A32])) "CALLCL.f":115 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 9.99999977648258209228515625e-3 [0x0.a3d70ap-6])
        (nil)))
(insn 154 153 155 12 (set (reg:SF 21 xmm0 [354])
        (mult:SF (reg:SF 21 xmm0 [356])
            (reg:SF 22 xmm1 [355]))) "CALLCL.f":115 838 {*fop_sf_comm}
     (nil))
(insn 155 154 156 12 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [2 arg+0 S4 A32])
        (reg:SF 21 xmm0 [354])) "CALLCL.f":115 131 {*movsf_internal}
     (nil))
(insn 156 155 157 12 (set (reg:SF 21 xmm0 [orig:302 M.0_221 ] [302])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC6") [flags 0x2]) [0  S4 A32])) "CALLCL.f":116 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 9.999999960041972002500187954865396022796630859375e-13 [0x0.8cbcccp-39])
        (nil)))
(insn 157 156 158 12 (set (reg:SF 22 xmm1 [358])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [2 arg+0 S4 A32])) "CALLCL.f":116 131 {*movsf_internal}
     (nil))
(insn 158 157 159 12 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 22 xmm1 [358])
            (reg:SF 21 xmm0 [orig:302 M.0_221 ] [302]))) "CALLCL.f":116 53 {*cmpisf}
     (nil))
(insn 159 158 160 12 (set (reg:QI 0 ax [357])
        (gt:QI (reg:CCFP 17 flags)
            (const_int 0 [0]))) "CALLCL.f":116 678 {*setcc_qi}
     (nil))
(insn 160 159 161 12 (set (reg:SI 1 dx [orig:139 _53 ] [139])
        (zero_extend:SI (reg:QI 0 ax [357]))) "CALLCL.f":116 140 {*zero_extendqisi2}
     (nil))
(insn 161 160 162 12 (set (reg:CCFP 17 flags)
        (unspec:CCFP [
                (compare:CCFP (reg:SF 21 xmm0 [orig:302 M.0_221 ] [302])
                    (reg:SF 21 xmm0 [orig:302 M.0_221 ] [302]))
            ] UNSPEC_NOTRAP)) "CALLCL.f":116 54 {*cmpiusf}
     (nil))
(insn 162 161 163 12 (set (reg:QI 0 ax [359])
        (unordered:QI (reg:CCFP 17 flags)
            (const_int 0 [0]))) "CALLCL.f":116 678 {*setcc_qi}
     (nil))
(insn 163 162 164 12 (set (reg:SI 0 ax [orig:140 _54 ] [140])
        (zero_extend:SI (reg:QI 0 ax [359]))) "CALLCL.f":116 140 {*zero_extendqisi2}
     (nil))
(insn 164 163 165 12 (parallel [
            (set (reg:SI 0 ax [orig:141 _55 ] [141])
                (ior:SI (reg:SI 0 ax [orig:140 _54 ] [140])
                    (reg:SI 1 dx [orig:139 _53 ] [139])))
            (clobber (reg:CC 17 flags))
        ]) "CALLCL.f":116 450 {*iorsi_1}
     (nil))
(insn 165 164 166 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:141 _55 ] [141])
            (const_int 0 [0]))) "CALLCL.f":116 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 166 165 167 12 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 169)
            (pc))) "CALLCL.f":116 682 {*jcc}
     (nil)
 -> 169)
;;  succ:       13 (FALLTHRU)
;;              14
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0]

;; basic block 13, loop depth 0, maybe hot
;;  prev block 12, next block 14, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       12 (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 21 [xmm0]
(note 167 166 168 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 168 167 169 13 (set (reg:SF 21 xmm0 [orig:302 M.0_221 ] [302])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [2 arg+0 S4 A32])) "CALLCL.f":116 131 {*movsf_internal}
     (nil))
;;  succ:       14 (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0]

;; basic block 14, loop depth 0, maybe hot
;;  prev block 13, next block 15, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       12
;;              13 (FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0]
;; lr  use 	 6 [bp] 7 [sp] 21 [xmm0]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 169 168 170 14 8 (nil) [1 uses])
(note 170 169 171 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 171 170 172 14 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [2 arg+0 S4 A32])
        (reg:SF 21 xmm0 [orig:302 M.0_221 ] [302])) "CALLCL.f":116 131 {*movsf_internal}
     (nil))
(insn 172 171 173 14 (set (reg:SI 0 ax [360])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALLCL.f":117 86 {*movsi_internal}
     (nil))
(insn 173 172 174 14 (set (reg:DI 0 ax [orig:142 _56 ] [142])
        (sign_extend:DI (reg:SI 0 ax [360]))) "CALLCL.f":117 149 {*extendsidi2_rex64}
     (nil))
(insn 174 173 175 14 (parallel [
            (set (reg:DI 1 dx [orig:143 _57 ] [143])
                (mult:DI (reg:DI 0 ax [orig:142 _56 ] [142])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALLCL.f":117 349 {*muldi3_1}
     (nil))
(insn 175 174 176 14 (set (reg:SI 0 ax [361])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALLCL.f":117 86 {*movsi_internal}
     (nil))
(insn 176 175 177 14 (set (reg:DI 0 ax [orig:144 _58 ] [144])
        (sign_extend:DI (reg:SI 0 ax [361]))) "CALLCL.f":117 149 {*extendsidi2_rex64}
     (nil))
(insn 177 176 562 14 (parallel [
            (set (reg:DI 0 ax [orig:145 _59 ] [145])
                (plus:DI (reg:DI 0 ax [orig:144 _58 ] [144])
                    (reg:DI 1 dx [orig:143 _57 ] [143])))
            (clobber (reg:CC 17 flags))
        ]) "CALLCL.f":117 222 {*adddi_1}
     (nil))
(insn 562 177 179 14 (set (reg:DI 1 dx [orig:146 _60 ] [146])
        (plus:DI (reg:DI 0 ax [orig:145 _59 ] [145])
            (const_int -120 [0xffffffffffffff88]))) "CALLCL.f":117 218 {*leadi}
     (nil))
(insn 179 562 180 14 (set (reg/f:DI 0 ax [362])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [3 t1d+0 S8 A64])) "CALLCL.f":117 85 {*movdi_internal}
     (nil))
(insn 180 179 182 14 (set (reg:SF 21 xmm0 [orig:147 _61 ] [147])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:146 _60 ] [146])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [362])) [2 *t1d_258(D) S4 A32])) "CALLCL.f":117 131 {*movsf_internal}
     (nil))
(call_insn/u 182 180 183 14 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("logf") [flags 0x41]  <function_decl 0x7f3d6bb28900 __builtin_logf>) [0 __builtin_logf S1 A8])
            (const_int 0 [0]))) "CALLCL.f":117 700 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (nil)))
(insn 183 182 184 14 (set (reg:SF 22 xmm1 [orig:148 _62 ] [148])
        (reg:SF 21 xmm0)) "CALLCL.f":117 131 {*movsf_internal}
     (nil))
(insn 184 183 185 14 (set (reg:SF 21 xmm0 [363])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC7") [flags 0x2]) [0  S4 A32])) "CALLCL.f":117 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 3.5e+0 [0x0.ep+2])
        (nil)))
(insn 185 184 536 14 (set (reg:SF 22 xmm1 [orig:148 _62 ] [148])
        (mult:SF (reg:SF 22 xmm1 [orig:148 _62 ] [148])
            (reg:SF 21 xmm0 [363]))) "CALLCL.f":117 838 {*fop_sf_comm}
     (nil))
(insn 536 185 547 14 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -124 [0xffffffffffffff84])) [10 %sfp+-108 S4 A32])
        (reg:SF 22 xmm1 [orig:148 _62 ] [148])) "CALLCL.f":117 131 {*movsf_internal}
     (nil))
(note 547 536 544 14 NOTE_INSN_DELETED)
(note 544 547 186 14 NOTE_INSN_DELETED)
(insn 186 544 188 14 (set (reg:SF 21 xmm0 [364])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [2 arg+0 S4 A32])) "CALLCL.f":117 131 {*movsf_internal}
     (nil))
(call_insn/u 188 186 537 14 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("logf") [flags 0x41]  <function_decl 0x7f3d6bb28900 __builtin_logf>) [0 __builtin_logf S1 A8])
            (const_int 0 [0]))) "CALLCL.f":117 700 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (nil)))
(insn 537 188 190 14 (set (reg:SF 22 xmm1 [orig:149 _63 ] [149])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -124 [0xffffffffffffff84])) [10 %sfp+-108 S4 A32])) "CALLCL.f":117 131 {*movsf_internal}
     (nil))
(insn 190 537 538 14 (set (reg:SF 22 xmm1 [orig:149 _63 ] [149])
        (minus:SF (reg:SF 22 xmm1 [orig:149 _63 ] [149])
            (reg:SF 21 xmm0 [orig:150 _64 ] [150]))) "CALLCL.f":117 841 {*fop_sf_1}
     (nil))
(insn 538 190 191 14 (set (reg:SF 21 xmm0 [orig:151 _65 ] [151])
        (reg:SF 22 xmm1 [orig:149 _63 ] [149])) "CALLCL.f":117 131 {*movsf_internal}
     (nil))
(insn 191 538 192 14 (set (reg:SF 22 xmm1 [366])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC8") [flags 0x2]) [0  S4 A32])) "CALLCL.f":117 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 4.804999828338623046875e+0 [0x0.99c28fp+3])
        (nil)))
(insn 192 191 193 14 (set (reg:SF 21 xmm0 [365])
        (minus:SF (reg:SF 21 xmm0 [orig:151 _65 ] [151])
            (reg:SF 22 xmm1 [366]))) "CALLCL.f":117 841 {*fop_sf_1}
     (nil))
(insn 193 192 194 14 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 denom+0 S4 A32])
        (reg:SF 21 xmm0 [365])) "CALLCL.f":117 131 {*movsf_internal}
     (nil))
(insn 194 193 539 14 (set (reg:SF 21 xmm0 [367])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC9") [flags 0x2]) [0  S4 A32])) "CALLCL.f":118 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 2.84e+3 [0x0.b18p+12])
        (nil)))
(insn 539 194 195 14 (set (reg:SF 22 xmm1 [367])
        (reg:SF 21 xmm0 [367])) "CALLCL.f":118 131 {*movsf_internal}
     (nil))
(insn 195 539 196 14 (set (reg:SF 22 xmm1 [367])
        (div:SF (reg:SF 22 xmm1 [367])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -52 [0xffffffffffffffcc])) [2 denom+0 S4 A32]))) "CALLCL.f":118 841 {*fop_sf_1}
     (nil))
(insn 196 195 197 14 (set (reg:SI 0 ax [368])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALLCL.f":118 86 {*movsi_internal}
     (nil))
(insn 197 196 198 14 (set (reg:DI 0 ax [orig:153 _67 ] [153])
        (sign_extend:DI (reg:SI 0 ax [368]))) "CALLCL.f":118 149 {*extendsidi2_rex64}
     (nil))
(insn 198 197 199 14 (parallel [
            (set (reg:DI 1 dx [orig:154 _68 ] [154])
                (mult:DI (reg:DI 0 ax [orig:153 _67 ] [153])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALLCL.f":118 349 {*muldi3_1}
     (nil))
(insn 199 198 200 14 (set (reg:SI 0 ax [369])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALLCL.f":118 86 {*movsi_internal}
     (nil))
(insn 200 199 201 14 (set (reg:DI 0 ax [orig:155 _69 ] [155])
        (sign_extend:DI (reg:SI 0 ax [369]))) "CALLCL.f":118 149 {*extendsidi2_rex64}
     (nil))
(insn 201 200 563 14 (parallel [
            (set (reg:DI 0 ax [orig:156 _70 ] [156])
                (plus:DI (reg:DI 0 ax [orig:155 _69 ] [155])
                    (reg:DI 1 dx [orig:154 _68 ] [154])))
            (clobber (reg:CC 17 flags))
        ]) "CALLCL.f":118 222 {*adddi_1}
     (nil))
(insn 563 201 203 14 (set (reg:DI 1 dx [orig:157 _71 ] [157])
        (plus:DI (reg:DI 0 ax [orig:156 _70 ] [156])
            (const_int -120 [0xffffffffffffff88]))) "CALLCL.f":118 218 {*leadi}
     (nil))
(insn 203 563 204 14 (set (reg:SF 21 xmm0 [370])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC10") [flags 0x2]) [0  S4 A32])) "CALLCL.f":118 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 5.5e+1 [0x0.dcp+6])
        (nil)))
(insn 204 203 205 14 (set (reg:SF 21 xmm0 [orig:158 _72 ] [158])
        (plus:SF (reg:SF 21 xmm0 [370])
            (reg:SF 22 xmm1 [orig:152 _66 ] [152]))) "CALLCL.f":118 838 {*fop_sf_comm}
     (nil))
(insn 205 204 206 14 (set (reg/f:DI 0 ax [371])
        (symbol_ref:DI ("tlcl.3999") [flags 0x202]  <var_decl 0x7f3d6bcc83f0 tlcl>)) "CALLCL.f":118 85 {*movdi_internal}
     (nil))
(insn 206 205 207 14 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:157 _71 ] [157])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [371])) [2 tlcl S4 A32])
        (reg:SF 21 xmm0 [orig:158 _72 ] [158])) "CALLCL.f":118 131 {*movsf_internal}
     (nil))
(insn 207 206 208 14 (set (reg:SI 0 ax [372])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALLCL.f":119 86 {*movsi_internal}
     (nil))
(insn 208 207 209 14 (set (reg:DI 0 ax [orig:159 _73 ] [159])
        (sign_extend:DI (reg:SI 0 ax [372]))) "CALLCL.f":119 149 {*extendsidi2_rex64}
     (nil))
(insn 209 208 210 14 (parallel [
            (set (reg:DI 1 dx [orig:160 _74 ] [160])
                (mult:DI (reg:DI 0 ax [orig:159 _73 ] [159])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALLCL.f":119 349 {*muldi3_1}
     (nil))
(insn 210 209 211 14 (set (reg:SI 0 ax [373])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALLCL.f":119 86 {*movsi_internal}
     (nil))
(insn 211 210 212 14 (set (reg:DI 0 ax [orig:161 _75 ] [161])
        (sign_extend:DI (reg:SI 0 ax [373]))) "CALLCL.f":119 149 {*extendsidi2_rex64}
     (nil))
(insn 212 211 564 14 (parallel [
            (set (reg:DI 0 ax [orig:162 _76 ] [162])
                (plus:DI (reg:DI 0 ax [orig:161 _75 ] [161])
                    (reg:DI 1 dx [orig:160 _74 ] [160])))
            (clobber (reg:CC 17 flags))
        ]) "CALLCL.f":119 222 {*adddi_1}
     (nil))
(insn 564 212 214 14 (set (reg:DI 1 dx [orig:163 _77 ] [163])
        (plus:DI (reg:DI 0 ax [orig:162 _76 ] [162])
            (const_int -120 [0xffffffffffffff88]))) "CALLCL.f":119 218 {*leadi}
     (nil))
(insn 214 564 215 14 (set (reg/f:DI 0 ax [374])
        (symbol_ref:DI ("tlcl.3999") [flags 0x202]  <var_decl 0x7f3d6bcc83f0 tlcl>)) "CALLCL.f":119 85 {*movdi_internal}
     (nil))
(insn 215 214 216 14 (set (reg:SF 21 xmm0 [orig:164 _78 ] [164])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:163 _77 ] [163])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [374])) [2 tlcl S4 A32])) "CALLCL.f":119 131 {*movsf_internal}
     (nil))
(insn 216 215 217 14 (set (reg:SI 0 ax [375])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALLCL.f":119 86 {*movsi_internal}
     (nil))
(insn 217 216 218 14 (set (reg:DI 0 ax [orig:165 _79 ] [165])
        (sign_extend:DI (reg:SI 0 ax [375]))) "CALLCL.f":119 149 {*extendsidi2_rex64}
     (nil))
(insn 218 217 219 14 (parallel [
            (set (reg:DI 1 dx [orig:166 _80 ] [166])
                (mult:DI (reg:DI 0 ax [orig:165 _79 ] [165])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALLCL.f":119 349 {*muldi3_1}
     (nil))
(insn 219 218 220 14 (set (reg:SI 0 ax [376])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALLCL.f":119 86 {*movsi_internal}
     (nil))
(insn 220 219 221 14 (set (reg:DI 0 ax [orig:167 _81 ] [167])
        (sign_extend:DI (reg:SI 0 ax [376]))) "CALLCL.f":119 149 {*extendsidi2_rex64}
     (nil))
(insn 221 220 565 14 (parallel [
            (set (reg:DI 0 ax [orig:168 _82 ] [168])
                (plus:DI (reg:DI 0 ax [orig:167 _81 ] [167])
                    (reg:DI 1 dx [orig:166 _80 ] [166])))
            (clobber (reg:CC 17 flags))
        ]) "CALLCL.f":119 222 {*adddi_1}
     (nil))
(insn 565 221 223 14 (set (reg:DI 1 dx [orig:169 _83 ] [169])
        (plus:DI (reg:DI 0 ax [orig:168 _82 ] [168])
            (const_int -120 [0xffffffffffffff88]))) "CALLCL.f":119 218 {*leadi}
     (nil))
(insn 223 565 224 14 (set (reg/f:DI 0 ax [377])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [3 t1d+0 S8 A64])) "CALLCL.f":119 85 {*movdi_internal}
     (nil))
(insn 224 223 225 14 (set (reg:SF 22 xmm1 [orig:170 _84 ] [170])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:169 _83 ] [169])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [377])) [2 *t1d_258(D) S4 A32])) "CALLCL.f":119 131 {*movsf_internal}
     (nil))
(insn 225 224 226 14 (set (reg:SF 21 xmm0 [orig:171 _85 ] [171])
        (div:SF (reg:SF 21 xmm0 [orig:164 _78 ] [164])
            (reg:SF 22 xmm1 [orig:170 _84 ] [170]))) "CALLCL.f":119 841 {*fop_sf_1}
     (nil))
(insn 226 225 227 14 (set (reg:SF 23 xmm2 [orig:312 _261 ] [312])
        (reg:SF 21 xmm0 [orig:171 _85 ] [171])) "CALLCL.f":119 131 {*movsf_internal}
     (nil))
(insn 227 226 228 14 (set (reg:SI 0 ax [378])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALLCL.f":119 86 {*movsi_internal}
     (nil))
(insn 228 227 229 14 (set (reg:DI 0 ax [orig:172 _86 ] [172])
        (sign_extend:DI (reg:SI 0 ax [378]))) "CALLCL.f":119 149 {*extendsidi2_rex64}
     (nil))
(insn 229 228 230 14 (parallel [
            (set (reg:DI 1 dx [orig:173 _87 ] [173])
                (mult:DI (reg:DI 0 ax [orig:172 _86 ] [172])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALLCL.f":119 349 {*muldi3_1}
     (nil))
(insn 230 229 231 14 (set (reg:SI 0 ax [379])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALLCL.f":119 86 {*movsi_internal}
     (nil))
(insn 231 230 232 14 (set (reg:DI 0 ax [orig:174 _88 ] [174])
        (sign_extend:DI (reg:SI 0 ax [379]))) "CALLCL.f":119 149 {*extendsidi2_rex64}
     (nil))
(insn 232 231 566 14 (parallel [
            (set (reg:DI 0 ax [orig:175 _89 ] [175])
                (plus:DI (reg:DI 0 ax [orig:174 _88 ] [174])
                    (reg:DI 1 dx [orig:173 _87 ] [173])))
            (clobber (reg:CC 17 flags))
        ]) "CALLCL.f":119 222 {*adddi_1}
     (nil))
(insn 566 232 234 14 (set (reg:DI 1 dx [orig:176 _90 ] [176])
        (plus:DI (reg:DI 0 ax [orig:175 _89 ] [175])
            (const_int -120 [0xffffffffffffff88]))) "CALLCL.f":119 218 {*leadi}
     (nil))
(insn 234 566 235 14 (set (reg/f:DI 0 ax [380])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [3 p1d+0 S8 A64])) "CALLCL.f":119 85 {*movdi_internal}
     (nil))
(insn 235 234 541 14 (set (reg:SF 24 xmm3 [orig:177 _91 ] [177])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:176 _90 ] [176])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [380])) [2 *p1d_248(D) S4 A32])) "CALLCL.f":119 131 {*movsf_internal}
     (nil))
(insn 541 235 546 14 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -124 [0xffffffffffffff84])) [10 %sfp+-108 S4 A32])
        (reg:SF 24 xmm3 [orig:177 _91 ] [177])) "CALLCL.f":119 131 {*movsf_internal}
     (nil))
(note 546 541 543 14 NOTE_INSN_DELETED)
(note 543 546 236 14 NOTE_INSN_DELETED)
(insn 236 543 237 14 (set (reg:SF 21 xmm0 [381])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [2 rkapa+0 S4 A32])) "CALLCL.f":119 131 {*movsf_internal}
     (nil))
(insn 237 236 238 14 (set (reg:SF 22 xmm1)
        (reg:SF 21 xmm0 [381])) "CALLCL.f":119 131 {*movsf_internal}
     (nil))
(insn 238 237 239 14 (set (reg:SF 21 xmm0)
        (reg:SF 23 xmm2 [orig:312 _261 ] [312])) "CALLCL.f":119 131 {*movsf_internal}
     (nil))
(call_insn/u 239 238 241 14 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("powf") [flags 0x41]  <function_decl 0x7f3d6bb35100 __builtin_powf>) [0 __builtin_powf S1 A8])
            (const_int 0 [0]))) "CALLCL.f":119 700 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (expr_list:SF (use (reg:SF 22 xmm1))
            (nil))))
(insn 241 239 242 14 (set (reg:SI 0 ax [382])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALLCL.f":119 86 {*movsi_internal}
     (nil))
(insn 242 241 243 14 (set (reg:DI 0 ax [orig:179 _93 ] [179])
        (sign_extend:DI (reg:SI 0 ax [382]))) "CALLCL.f":119 149 {*extendsidi2_rex64}
     (nil))
(insn 243 242 244 14 (parallel [
            (set (reg:DI 1 dx [orig:180 _94 ] [180])
                (mult:DI (reg:DI 0 ax [orig:179 _93 ] [179])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALLCL.f":119 349 {*muldi3_1}
     (nil))
(insn 244 243 245 14 (set (reg:SI 0 ax [383])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALLCL.f":119 86 {*movsi_internal}
     (nil))
(insn 245 244 246 14 (set (reg:DI 0 ax [orig:181 _95 ] [181])
        (sign_extend:DI (reg:SI 0 ax [383]))) "CALLCL.f":119 149 {*extendsidi2_rex64}
     (nil))
(insn 246 245 567 14 (parallel [
            (set (reg:DI 0 ax [orig:182 _96 ] [182])
                (plus:DI (reg:DI 0 ax [orig:181 _95 ] [181])
                    (reg:DI 1 dx [orig:180 _94 ] [180])))
            (clobber (reg:CC 17 flags))
        ]) "CALLCL.f":119 222 {*adddi_1}
     (nil))
(insn 567 246 542 14 (set (reg:DI 1 dx [orig:183 _97 ] [183])
        (plus:DI (reg:DI 0 ax [orig:182 _96 ] [182])
            (const_int -120 [0xffffffffffffff88]))) "CALLCL.f":119 218 {*leadi}
     (nil))
(note 542 567 545 14 NOTE_INSN_DELETED)
(note 545 542 248 14 NOTE_INSN_DELETED)
(insn 248 545 249 14 (set (reg:SF 21 xmm0 [orig:184 _98 ] [184])
        (mult:SF (reg:SF 21 xmm0 [orig:178 _92 ] [178])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -124 [0xffffffffffffff84])) [10 %sfp+-108 S4 A32]))) "CALLCL.f":119 838 {*fop_sf_comm}
     (nil))
(insn 249 248 250 14 (set (reg/f:DI 0 ax [384])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [3 plcl+0 S8 A64])) "CALLCL.f":119 85 {*movdi_internal}
     (nil))
(insn 250 249 251 14 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:183 _97 ] [183])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [384])) [2 *plcl_235(D) S4 A32])
        (reg:SF 21 xmm0 [orig:184 _98 ] [184])) "CALLCL.f":119 131 {*movsf_internal}
     (nil))
(insn 251 250 252 14 (set (reg:SI 0 ax [385])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALLCL.f":120 86 {*movsi_internal}
     (nil))
(insn 252 251 253 14 (set (reg:DI 0 ax [orig:185 _99 ] [185])
        (sign_extend:DI (reg:SI 0 ax [385]))) "CALLCL.f":120 149 {*extendsidi2_rex64}
     (nil))
(insn 253 252 254 14 (parallel [
            (set (reg:DI 1 dx [orig:186 _100 ] [186])
                (mult:DI (reg:DI 0 ax [orig:185 _99 ] [185])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALLCL.f":120 349 {*muldi3_1}
     (nil))
(insn 254 253 255 14 (set (reg:SI 0 ax [386])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALLCL.f":120 86 {*movsi_internal}
     (nil))
(insn 255 254 256 14 (set (reg:DI 0 ax [orig:187 _101 ] [187])
        (sign_extend:DI (reg:SI 0 ax [386]))) "CALLCL.f":120 149 {*extendsidi2_rex64}
     (nil))
(insn 256 255 568 14 (parallel [
            (set (reg:DI 0 ax [orig:188 _102 ] [188])
                (plus:DI (reg:DI 0 ax [orig:187 _101 ] [187])
                    (reg:DI 1 dx [orig:186 _100 ] [186])))
            (clobber (reg:CC 17 flags))
        ]) "CALLCL.f":120 222 {*adddi_1}
     (nil))
(insn 568 256 258 14 (set (reg:DI 1 dx [orig:189 _103 ] [189])
        (plus:DI (reg:DI 0 ax [orig:188 _102 ] [188])
            (const_int -120 [0xffffffffffffff88]))) "CALLCL.f":120 218 {*leadi}
     (nil))
(insn 258 568 259 14 (set (reg/f:DI 0 ax [387])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [3 plcl+0 S8 A64])) "CALLCL.f":120 85 {*movdi_internal}
     (nil))
(insn 259 258 261 14 (set (reg:SF 21 xmm0 [orig:190 _104 ] [190])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:189 _103 ] [189])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [387])) [2 *plcl_235(D) S4 A32])) "CALLCL.f":120 131 {*movsf_internal}
     (nil))
(call_insn/u 261 259 262 14 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("logf") [flags 0x41]  <function_decl 0x7f3d6bb28900 __builtin_logf>) [0 __builtin_logf S1 A8])
            (const_int 0 [0]))) "CALLCL.f":120 700 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (nil)))
(insn 262 261 263 14 (set (reg:SF 0 ax [388])
        (reg:SF 21 xmm0)) "CALLCL.f":120 131 {*movsf_internal}
     (nil))
(insn 263 262 264 14 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 alplcl+0 S4 A32])
        (reg:SF 0 ax [388])) "CALLCL.f":120 131 {*movsf_internal}
     (nil))
(insn 264 263 265 14 (set (reg:SI 0 ax [389])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALLCL.f":121 86 {*movsi_internal}
     (nil))
(insn 265 264 266 14 (set (reg:DI 0 ax [orig:191 _105 ] [191])
        (sign_extend:DI (reg:SI 0 ax [389]))) "CALLCL.f":121 149 {*extendsidi2_rex64}
     (nil))
(insn 266 265 267 14 (parallel [
            (set (reg:DI 1 dx [orig:192 _106 ] [192])
                (mult:DI (reg:DI 0 ax [orig:191 _105 ] [191])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALLCL.f":121 349 {*muldi3_1}
     (nil))
(insn 267 266 268 14 (set (reg:SI 0 ax [390])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALLCL.f":121 86 {*movsi_internal}
     (nil))
(insn 268 267 269 14 (set (reg:DI 0 ax [orig:193 _107 ] [193])
        (sign_extend:DI (reg:SI 0 ax [390]))) "CALLCL.f":121 149 {*extendsidi2_rex64}
     (nil))
(insn 269 268 569 14 (parallel [
            (set (reg:DI 0 ax [orig:194 _108 ] [194])
                (plus:DI (reg:DI 0 ax [orig:193 _107 ] [193])
                    (reg:DI 1 dx [orig:192 _106 ] [192])))
            (clobber (reg:CC 17 flags))
        ]) "CALLCL.f":121 222 {*adddi_1}
     (nil))
(insn 569 269 271 14 (set (reg:DI 1 dx [orig:195 _109 ] [195])
        (plus:DI (reg:DI 0 ax [orig:194 _108 ] [194])
            (const_int -120 [0xffffffffffffff88]))) "CALLCL.f":121 218 {*leadi}
     (nil))
(insn 271 569 272 14 (set (reg/f:DI 0 ax [391])
        (symbol_ref:DI ("loops_") [flags 0x202]  <var_decl 0x7f3d6bcc1630 loops>)) "CALLCL.f":121 85 {*movdi_internal}
     (nil))
(insn 272 271 273 14 (parallel [
            (set (reg:DI 1 dx [392])
                (plus:DI (reg:DI 1 dx [orig:195 _109 ] [195])
                    (const_int 2420 [0x974])))
            (clobber (reg:CC 17 flags))
        ]) "CALLCL.f":121 222 {*adddi_1}
     (nil))
(insn 273 272 274 14 (set (reg:SI 0 ax [393])
        (mem:SI (plus:DI (mult:DI (reg:DI 1 dx [392])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [391])) [1 loops.lmh S4 A32])) "CALLCL.f":121 86 {*movsi_internal}
     (nil))
(insn 274 273 275 14 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [1 llmh+0 S4 A32])
        (reg:SI 0 ax [393])) "CALLCL.f":121 86 {*movsi_internal}
     (nil))
(insn 275 274 276 14 (set (reg:SI 0 ax [orig:313 _265 ] [313])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [1 llmh+0 S4 A32])) "CALLCL.f":123 86 {*movsi_internal}
     (nil))
(insn 276 275 481 14 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])
        (reg:SI 0 ax [orig:313 _265 ] [313])) "CALLCL.f":123 86 {*movsi_internal}
     (nil))
;;  succ:       15 (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

;; basic block 15, loop depth 0, maybe hot
;;  prev block 14, next block 16, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       14 (FALLTHRU)
;;              20 [always] 
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 481 276 277 15 13 (nil) [1 uses])
(note 277 481 278 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 278 277 279 15 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])
            (const_int 0 [0]))) "CALLCL.f":123 7 {*cmpsi_ccno_1}
     (nil))
(insn 279 278 280 15 (set (reg:QI 0 ax [394])
        (le:QI (reg:CCNO 17 flags)
            (const_int 0 [0]))) "CALLCL.f":123 678 {*setcc_qi}
     (nil))
(insn 280 279 281 15 (set (reg:SI 0 ax [orig:314 _267 ] [314])
        (zero_extend:SI (reg:QI 0 ax [394]))) "CALLCL.f":123 140 {*zero_extendqisi2}
     (nil))
(insn 281 280 282 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:314 _267 ] [314])
            (const_int 0 [0]))) "CALLCL.f":123 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 282 281 283 15 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 532)
            (pc))) "CALLCL.f":123 682 {*jcc}
     (nil)
 -> 532)
;;  succ:       21
;;              16 (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

;; basic block 16, loop depth 0, maybe hot
;;  prev block 15, next block 17, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       15 (FALLTHRU)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags] 21 [xmm0] 22 [xmm1]
(note 283 282 284 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 284 283 285 16 (set (reg:SI 0 ax [395])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALLCL.f":124 86 {*movsi_internal}
     (nil))
(insn 285 284 286 16 (set (reg:DI 0 ax [orig:196 _110 ] [196])
        (sign_extend:DI (reg:SI 0 ax [395]))) "CALLCL.f":124 149 {*extendsidi2_rex64}
     (nil))
(insn 286 285 287 16 (parallel [
            (set (reg:DI 1 dx [orig:197 _111 ] [197])
                (mult:DI (reg:DI 0 ax [orig:196 _110 ] [196])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALLCL.f":124 349 {*muldi3_1}
     (nil))
(insn 287 286 288 16 (set (reg:SI 0 ax [396])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALLCL.f":124 86 {*movsi_internal}
     (nil))
(insn 288 287 289 16 (set (reg:DI 0 ax [orig:198 _112 ] [198])
        (sign_extend:DI (reg:SI 0 ax [396]))) "CALLCL.f":124 149 {*extendsidi2_rex64}
     (nil))
(insn 289 288 290 16 (parallel [
            (set (reg:DI 0 ax [orig:199 _113 ] [199])
                (mult:DI (reg:DI 0 ax [orig:198 _112 ] [198])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALLCL.f":124 349 {*muldi3_1}
     (nil))
(insn 290 289 291 16 (parallel [
            (set (reg:DI 1 dx [orig:200 _114 ] [200])
                (plus:DI (reg:DI 1 dx [orig:197 _111 ] [197])
                    (reg:DI 0 ax [orig:199 _113 ] [199])))
            (clobber (reg:CC 17 flags))
        ]) "CALLCL.f":124 222 {*adddi_1}
     (nil))
(insn 291 290 292 16 (set (reg:SI 0 ax [397])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALLCL.f":124 86 {*movsi_internal}
     (nil))
(insn 292 291 293 16 (set (reg:DI 0 ax [orig:201 _115 ] [201])
        (sign_extend:DI (reg:SI 0 ax [397]))) "CALLCL.f":124 149 {*extendsidi2_rex64}
     (nil))
(insn 293 292 561 16 (parallel [
            (set (reg:DI 0 ax [orig:202 _116 ] [202])
                (plus:DI (reg:DI 0 ax [orig:201 _115 ] [201])
                    (reg:DI 1 dx [orig:200 _114 ] [200])))
            (clobber (reg:CC 17 flags))
        ]) "CALLCL.f":124 222 {*adddi_1}
     (nil))
(insn 561 293 295 16 (set (reg:DI 1 dx [orig:203 _117 ] [203])
        (plus:DI (reg:DI 0 ax [orig:202 _116 ] [202])
            (const_int -29751 [0xffffffffffff8bc9]))) "CALLCL.f":124 218 {*leadi}
     (nil))
(insn 295 561 296 16 (set (reg/f:DI 0 ax [398])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f3d6bcb8870 extra>)) "CALLCL.f":124 85 {*movdi_internal}
     (nil))
(insn 296 295 297 16 (parallel [
            (set (reg:DI 1 dx [399])
                (plus:DI (reg:DI 1 dx [orig:203 _117 ] [203])
                    (const_int 1155609 [0x11a219])))
            (clobber (reg:CC 17 flags))
        ]) "CALLCL.f":124 222 {*adddi_1}
     (nil))
(insn 297 296 298 16 (set (reg:SF 22 xmm1 [orig:204 _118 ] [204])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [399])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [398])) [2 extra.alpint S4 A32])) "CALLCL.f":124 131 {*movsf_internal}
     (nil))
(insn 298 297 299 16 (set (reg:SF 21 xmm0 [400])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 alplcl+0 S4 A32])) "CALLCL.f":124 131 {*movsf_internal}
     (nil))
(insn 299 298 300 16 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [400])
            (reg:SF 22 xmm1 [orig:204 _118 ] [204]))) "CALLCL.f":124 53 {*cmpisf}
     (nil))
(jump_insn 300 299 304 16 (set (pc)
        (if_then_else (unle (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 510)
            (pc))) "CALLCL.f":124 682 {*jcc}
     (nil)
 -> 510)
;;  succ:       17 (FALLTHRU)
;;              20
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

;; basic block 17, loop depth 0, maybe hot
;;  prev block 16, next block 18, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       16 (FALLTHRU)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags] 21 [xmm0] 22 [xmm1]
(note 304 300 305 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 305 304 306 17 (set (reg:SI 0 ax [401])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALLCL.f":125 86 {*movsi_internal}
     (nil))
(insn 306 305 307 17 (parallel [
            (set (reg:SI 0 ax [orig:205 _119 ] [205])
                (plus:SI (reg:SI 0 ax [401])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALLCL.f":125 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 307 306 308 17 (set (reg:DI 0 ax [orig:206 _120 ] [206])
        (sign_extend:DI (reg:SI 0 ax [orig:205 _119 ] [205]))) "CALLCL.f":125 149 {*extendsidi2_rex64}
     (nil))
(insn 308 307 309 17 (parallel [
            (set (reg:DI 1 dx [orig:207 _121 ] [207])
                (mult:DI (reg:DI 0 ax [orig:206 _120 ] [206])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALLCL.f":125 349 {*muldi3_1}
     (nil))
(insn 309 308 310 17 (set (reg:SI 0 ax [402])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALLCL.f":125 86 {*movsi_internal}
     (nil))
(insn 310 309 311 17 (set (reg:DI 0 ax [orig:208 _122 ] [208])
        (sign_extend:DI (reg:SI 0 ax [402]))) "CALLCL.f":125 149 {*extendsidi2_rex64}
     (nil))
(insn 311 310 312 17 (parallel [
            (set (reg:DI 0 ax [orig:209 _123 ] [209])
                (mult:DI (reg:DI 0 ax [orig:208 _122 ] [208])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALLCL.f":125 349 {*muldi3_1}
     (nil))
(insn 312 311 313 17 (parallel [
            (set (reg:DI 1 dx [orig:210 _124 ] [210])
                (plus:DI (reg:DI 1 dx [orig:207 _121 ] [207])
                    (reg:DI 0 ax [orig:209 _123 ] [209])))
            (clobber (reg:CC 17 flags))
        ]) "CALLCL.f":125 222 {*adddi_1}
     (nil))
(insn 313 312 314 17 (set (reg:SI 0 ax [403])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALLCL.f":125 86 {*movsi_internal}
     (nil))
(insn 314 313 315 17 (set (reg:DI 0 ax [orig:211 _125 ] [211])
        (sign_extend:DI (reg:SI 0 ax [403]))) "CALLCL.f":125 149 {*extendsidi2_rex64}
     (nil))
(insn 315 314 549 17 (parallel [
            (set (reg:DI 0 ax [orig:212 _126 ] [212])
                (plus:DI (reg:DI 0 ax [orig:211 _125 ] [211])
                    (reg:DI 1 dx [orig:210 _124 ] [210])))
            (clobber (reg:CC 17 flags))
        ]) "CALLCL.f":125 222 {*adddi_1}
     (nil))
(insn 549 315 317 17 (set (reg:DI 1 dx [orig:213 _127 ] [213])
        (plus:DI (reg:DI 0 ax [orig:212 _126 ] [212])
            (const_int -29751 [0xffffffffffff8bc9]))) "CALLCL.f":125 218 {*leadi}
     (nil))
(insn 317 549 318 17 (set (reg/f:DI 0 ax [404])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f3d6bcb8870 extra>)) "CALLCL.f":125 85 {*movdi_internal}
     (nil))
(insn 318 317 319 17 (parallel [
            (set (reg:DI 1 dx [405])
                (plus:DI (reg:DI 1 dx [orig:213 _127 ] [213])
                    (const_int 1155609 [0x11a219])))
            (clobber (reg:CC 17 flags))
        ]) "CALLCL.f":125 222 {*adddi_1}
     (nil))
(insn 319 318 320 17 (set (reg:SF 22 xmm1 [orig:214 _128 ] [214])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [405])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [404])) [2 extra.alpint S4 A32])) "CALLCL.f":125 131 {*movsf_internal}
     (nil))
(insn 320 319 321 17 (set (reg:SF 21 xmm0 [407])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 alplcl+0 S4 A32])) "CALLCL.f":125 131 {*movsf_internal}
     (nil))
(insn 321 320 322 17 (set (reg:SF 21 xmm0 [406])
        (minus:SF (reg:SF 21 xmm0 [407])
            (reg:SF 22 xmm1 [orig:214 _128 ] [214]))) "CALLCL.f":125 841 {*fop_sf_1}
     (nil))
(insn 322 321 323 17 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [2 dlplcl+0 S4 A32])
        (reg:SF 21 xmm0 [406])) "CALLCL.f":125 131 {*movsf_internal}
     (nil))
(insn 323 322 324 17 (set (reg:SI 0 ax [408])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALLCL.f":126 86 {*movsi_internal}
     (nil))
(insn 324 323 325 17 (set (reg:DI 0 ax [orig:215 _129 ] [215])
        (sign_extend:DI (reg:SI 0 ax [408]))) "CALLCL.f":126 149 {*extendsidi2_rex64}
     (nil))
(insn 325 324 326 17 (parallel [
            (set (reg:DI 1 dx [orig:216 _130 ] [216])
                (mult:DI (reg:DI 0 ax [orig:215 _129 ] [215])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALLCL.f":126 349 {*muldi3_1}
     (nil))
(insn 326 325 327 17 (set (reg:SI 0 ax [409])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALLCL.f":126 86 {*movsi_internal}
     (nil))
(insn 327 326 328 17 (set (reg:DI 0 ax [orig:217 _131 ] [217])
        (sign_extend:DI (reg:SI 0 ax [409]))) "CALLCL.f":126 149 {*extendsidi2_rex64}
     (nil))
(insn 328 327 329 17 (parallel [
            (set (reg:DI 0 ax [orig:218 _132 ] [218])
                (mult:DI (reg:DI 0 ax [orig:217 _131 ] [217])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALLCL.f":126 349 {*muldi3_1}
     (nil))
(insn 329 328 330 17 (parallel [
            (set (reg:DI 1 dx [orig:219 _133 ] [219])
                (plus:DI (reg:DI 1 dx [orig:216 _130 ] [216])
                    (reg:DI 0 ax [orig:218 _132 ] [218])))
            (clobber (reg:CC 17 flags))
        ]) "CALLCL.f":126 222 {*adddi_1}
     (nil))
(insn 330 329 331 17 (set (reg:SI 0 ax [410])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALLCL.f":126 86 {*movsi_internal}
     (nil))
(insn 331 330 332 17 (set (reg:DI 0 ax [orig:220 _134 ] [220])
        (sign_extend:DI (reg:SI 0 ax [410]))) "CALLCL.f":126 149 {*extendsidi2_rex64}
     (nil))
(insn 332 331 550 17 (parallel [
            (set (reg:DI 0 ax [orig:221 _135 ] [221])
                (plus:DI (reg:DI 0 ax [orig:220 _134 ] [220])
                    (reg:DI 1 dx [orig:219 _133 ] [219])))
            (clobber (reg:CC 17 flags))
        ]) "CALLCL.f":126 222 {*adddi_1}
     (nil))
(insn 550 332 334 17 (set (reg:DI 1 dx [orig:222 _136 ] [222])
        (plus:DI (reg:DI 0 ax [orig:221 _135 ] [221])
            (const_int -29751 [0xffffffffffff8bc9]))) "CALLCL.f":126 218 {*leadi}
     (nil))
(insn 334 550 335 17 (set (reg/f:DI 0 ax [411])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f3d6bcb8870 extra>)) "CALLCL.f":126 85 {*movdi_internal}
     (nil))
(insn 335 334 336 17 (parallel [
            (set (reg:DI 1 dx [412])
                (plus:DI (reg:DI 1 dx [orig:222 _136 ] [222])
                    (const_int 1155609 [0x11a219])))
            (clobber (reg:CC 17 flags))
        ]) "CALLCL.f":126 222 {*adddi_1}
     (nil))
(insn 336 335 337 17 (set (reg:SF 21 xmm0 [orig:223 _137 ] [223])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [412])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [411])) [2 extra.alpint S4 A32])) "CALLCL.f":126 131 {*movsf_internal}
     (nil))
(insn 337 336 338 17 (set (reg:SI 0 ax [413])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALLCL.f":126 86 {*movsi_internal}
     (nil))
(insn 338 337 339 17 (parallel [
            (set (reg:SI 0 ax [orig:224 _138 ] [224])
                (plus:SI (reg:SI 0 ax [413])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALLCL.f":126 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 339 338 340 17 (set (reg:DI 0 ax [orig:225 _139 ] [225])
        (sign_extend:DI (reg:SI 0 ax [orig:224 _138 ] [224]))) "CALLCL.f":126 149 {*extendsidi2_rex64}
     (nil))
(insn 340 339 341 17 (parallel [
            (set (reg:DI 1 dx [orig:226 _140 ] [226])
                (mult:DI (reg:DI 0 ax [orig:225 _139 ] [225])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALLCL.f":126 349 {*muldi3_1}
     (nil))
(insn 341 340 342 17 (set (reg:SI 0 ax [414])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALLCL.f":126 86 {*movsi_internal}
     (nil))
(insn 342 341 343 17 (set (reg:DI 0 ax [orig:227 _141 ] [227])
        (sign_extend:DI (reg:SI 0 ax [414]))) "CALLCL.f":126 149 {*extendsidi2_rex64}
     (nil))
(insn 343 342 344 17 (parallel [
            (set (reg:DI 0 ax [orig:228 _142 ] [228])
                (mult:DI (reg:DI 0 ax [orig:227 _141 ] [227])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALLCL.f":126 349 {*muldi3_1}
     (nil))
(insn 344 343 345 17 (parallel [
            (set (reg:DI 1 dx [orig:229 _143 ] [229])
                (plus:DI (reg:DI 1 dx [orig:226 _140 ] [226])
                    (reg:DI 0 ax [orig:228 _142 ] [228])))
            (clobber (reg:CC 17 flags))
        ]) "CALLCL.f":126 222 {*adddi_1}
     (nil))
(insn 345 344 346 17 (set (reg:SI 0 ax [415])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALLCL.f":126 86 {*movsi_internal}
     (nil))
(insn 346 345 347 17 (set (reg:DI 0 ax [orig:230 _144 ] [230])
        (sign_extend:DI (reg:SI 0 ax [415]))) "CALLCL.f":126 149 {*extendsidi2_rex64}
     (nil))
(insn 347 346 551 17 (parallel [
            (set (reg:DI 0 ax [orig:231 _145 ] [231])
                (plus:DI (reg:DI 0 ax [orig:230 _144 ] [230])
                    (reg:DI 1 dx [orig:229 _143 ] [229])))
            (clobber (reg:CC 17 flags))
        ]) "CALLCL.f":126 222 {*adddi_1}
     (nil))
(insn 551 347 349 17 (set (reg:DI 1 dx [orig:232 _146 ] [232])
        (plus:DI (reg:DI 0 ax [orig:231 _145 ] [231])
            (const_int -29751 [0xffffffffffff8bc9]))) "CALLCL.f":126 218 {*leadi}
     (nil))
(insn 349 551 350 17 (set (reg/f:DI 0 ax [416])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f3d6bcb8870 extra>)) "CALLCL.f":126 85 {*movdi_internal}
     (nil))
(insn 350 349 351 17 (parallel [
            (set (reg:DI 1 dx [417])
                (plus:DI (reg:DI 1 dx [orig:232 _146 ] [232])
                    (const_int 1155609 [0x11a219])))
            (clobber (reg:CC 17 flags))
        ]) "CALLCL.f":126 222 {*adddi_1}
     (nil))
(insn 351 350 352 17 (set (reg:SF 22 xmm1 [orig:233 _147 ] [233])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [417])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [416])) [2 extra.alpint S4 A32])) "CALLCL.f":126 131 {*movsf_internal}
     (nil))
(insn 352 351 353 17 (set (reg:SF 21 xmm0 [418])
        (minus:SF (reg:SF 21 xmm0 [orig:223 _137 ] [223])
            (reg:SF 22 xmm1 [orig:233 _147 ] [233]))) "CALLCL.f":126 841 {*fop_sf_1}
     (nil))
(insn 353 352 354 17 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -68 [0xffffffffffffffbc])) [2 dalp+0 S4 A32])
        (reg:SF 21 xmm0 [418])) "CALLCL.f":126 131 {*movsf_internal}
     (nil))
(insn 354 353 355 17 (set (reg:SI 0 ax [419])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALLCL.f":127 86 {*movsi_internal}
     (nil))
(insn 355 354 356 17 (set (reg:DI 0 ax [orig:234 _148 ] [234])
        (sign_extend:DI (reg:SI 0 ax [419]))) "CALLCL.f":127 149 {*extendsidi2_rex64}
     (nil))
(insn 356 355 357 17 (parallel [
            (set (reg:DI 1 dx [orig:235 _149 ] [235])
                (mult:DI (reg:DI 0 ax [orig:234 _148 ] [234])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALLCL.f":127 349 {*muldi3_1}
     (nil))
(insn 357 356 358 17 (set (reg:SI 0 ax [420])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALLCL.f":127 86 {*movsi_internal}
     (nil))
(insn 358 357 359 17 (set (reg:DI 0 ax [orig:236 _150 ] [236])
        (sign_extend:DI (reg:SI 0 ax [420]))) "CALLCL.f":127 149 {*extendsidi2_rex64}
     (nil))
(insn 359 358 360 17 (parallel [
            (set (reg:DI 0 ax [orig:237 _151 ] [237])
                (mult:DI (reg:DI 0 ax [orig:236 _150 ] [236])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALLCL.f":127 349 {*muldi3_1}
     (nil))
(insn 360 359 361 17 (parallel [
            (set (reg:DI 1 dx [orig:238 _152 ] [238])
                (plus:DI (reg:DI 1 dx [orig:235 _149 ] [235])
                    (reg:DI 0 ax [orig:237 _151 ] [237])))
            (clobber (reg:CC 17 flags))
        ]) "CALLCL.f":127 222 {*adddi_1}
     (nil))
(insn 361 360 362 17 (set (reg:SI 0 ax [421])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALLCL.f":127 86 {*movsi_internal}
     (nil))
(insn 362 361 363 17 (set (reg:DI 0 ax [orig:239 _153 ] [239])
        (sign_extend:DI (reg:SI 0 ax [421]))) "CALLCL.f":127 149 {*extendsidi2_rex64}
     (nil))
(insn 363 362 552 17 (parallel [
            (set (reg:DI 0 ax [orig:240 _154 ] [240])
                (plus:DI (reg:DI 0 ax [orig:239 _153 ] [239])
                    (reg:DI 1 dx [orig:238 _152 ] [238])))
            (clobber (reg:CC 17 flags))
        ]) "CALLCL.f":127 222 {*adddi_1}
     (nil))
(insn 552 363 365 17 (set (reg:DI 1 dx [orig:241 _155 ] [241])
        (plus:DI (reg:DI 0 ax [orig:240 _154 ] [240])
            (const_int -29751 [0xffffffffffff8bc9]))) "CALLCL.f":127 218 {*leadi}
     (nil))
(insn 365 552 366 17 (set (reg/f:DI 0 ax [422])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f3d6bcb8870 extra>)) "CALLCL.f":127 85 {*movdi_internal}
     (nil))
(insn 366 365 367 17 (parallel [
            (set (reg:DI 1 dx [423])
                (plus:DI (reg:DI 1 dx [orig:241 _155 ] [241])
                    (const_int 2311218 [0x234432])))
            (clobber (reg:CC 17 flags))
        ]) "CALLCL.f":127 222 {*adddi_1}
     (nil))
(insn 367 366 368 17 (set (reg:SF 21 xmm0 [orig:242 _156 ] [242])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [423])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [422])) [2 extra.zint S4 A32])) "CALLCL.f":127 131 {*movsf_internal}
     (nil))
(insn 368 367 369 17 (set (reg:SI 0 ax [424])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALLCL.f":127 86 {*movsi_internal}
     (nil))
(insn 369 368 370 17 (parallel [
            (set (reg:SI 0 ax [orig:243 _157 ] [243])
                (plus:SI (reg:SI 0 ax [424])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALLCL.f":127 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 370 369 371 17 (set (reg:DI 0 ax [orig:244 _158 ] [244])
        (sign_extend:DI (reg:SI 0 ax [orig:243 _157 ] [243]))) "CALLCL.f":127 149 {*extendsidi2_rex64}
     (nil))
(insn 371 370 372 17 (parallel [
            (set (reg:DI 1 dx [orig:245 _159 ] [245])
                (mult:DI (reg:DI 0 ax [orig:244 _158 ] [244])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALLCL.f":127 349 {*muldi3_1}
     (nil))
(insn 372 371 373 17 (set (reg:SI 0 ax [425])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALLCL.f":127 86 {*movsi_internal}
     (nil))
(insn 373 372 374 17 (set (reg:DI 0 ax [orig:246 _160 ] [246])
        (sign_extend:DI (reg:SI 0 ax [425]))) "CALLCL.f":127 149 {*extendsidi2_rex64}
     (nil))
(insn 374 373 375 17 (parallel [
            (set (reg:DI 0 ax [orig:247 _161 ] [247])
                (mult:DI (reg:DI 0 ax [orig:246 _160 ] [246])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALLCL.f":127 349 {*muldi3_1}
     (nil))
(insn 375 374 376 17 (parallel [
            (set (reg:DI 1 dx [orig:248 _162 ] [248])
                (plus:DI (reg:DI 1 dx [orig:245 _159 ] [245])
                    (reg:DI 0 ax [orig:247 _161 ] [247])))
            (clobber (reg:CC 17 flags))
        ]) "CALLCL.f":127 222 {*adddi_1}
     (nil))
(insn 376 375 377 17 (set (reg:SI 0 ax [426])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALLCL.f":127 86 {*movsi_internal}
     (nil))
(insn 377 376 378 17 (set (reg:DI 0 ax [orig:249 _163 ] [249])
        (sign_extend:DI (reg:SI 0 ax [426]))) "CALLCL.f":127 149 {*extendsidi2_rex64}
     (nil))
(insn 378 377 553 17 (parallel [
            (set (reg:DI 0 ax [orig:250 _164 ] [250])
                (plus:DI (reg:DI 0 ax [orig:249 _163 ] [249])
                    (reg:DI 1 dx [orig:248 _162 ] [248])))
            (clobber (reg:CC 17 flags))
        ]) "CALLCL.f":127 222 {*adddi_1}
     (nil))
(insn 553 378 380 17 (set (reg:DI 1 dx [orig:251 _165 ] [251])
        (plus:DI (reg:DI 0 ax [orig:250 _164 ] [250])
            (const_int -29751 [0xffffffffffff8bc9]))) "CALLCL.f":127 218 {*leadi}
     (nil))
(insn 380 553 381 17 (set (reg/f:DI 0 ax [427])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f3d6bcb8870 extra>)) "CALLCL.f":127 85 {*movdi_internal}
     (nil))
(insn 381 380 382 17 (parallel [
            (set (reg:DI 1 dx [428])
                (plus:DI (reg:DI 1 dx [orig:251 _165 ] [251])
                    (const_int 2311218 [0x234432])))
            (clobber (reg:CC 17 flags))
        ]) "CALLCL.f":127 222 {*adddi_1}
     (nil))
(insn 382 381 383 17 (set (reg:SF 22 xmm1 [orig:252 _166 ] [252])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [428])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [427])) [2 extra.zint S4 A32])) "CALLCL.f":127 131 {*movsf_internal}
     (nil))
(insn 383 382 384 17 (set (reg:SF 21 xmm0 [429])
        (minus:SF (reg:SF 21 xmm0 [orig:242 _156 ] [242])
            (reg:SF 22 xmm1 [orig:252 _166 ] [252]))) "CALLCL.f":127 841 {*fop_sf_1}
     (nil))
(insn 384 383 385 17 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [2 dz+0 S4 A32])
        (reg:SF 21 xmm0 [429])) "CALLCL.f":127 131 {*movsf_internal}
     (nil))
(insn 385 384 386 17 (set (reg:SI 0 ax [430])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALLCL.f":128 86 {*movsi_internal}
     (nil))
(insn 386 385 387 17 (parallel [
            (set (reg:SI 0 ax [orig:253 _167 ] [253])
                (plus:SI (reg:SI 0 ax [430])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALLCL.f":128 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 387 386 388 17 (set (reg:DI 0 ax [orig:254 _168 ] [254])
        (sign_extend:DI (reg:SI 0 ax [orig:253 _167 ] [253]))) "CALLCL.f":128 149 {*extendsidi2_rex64}
     (nil))
(insn 388 387 389 17 (parallel [
            (set (reg:DI 1 dx [orig:255 _169 ] [255])
                (mult:DI (reg:DI 0 ax [orig:254 _168 ] [254])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALLCL.f":128 349 {*muldi3_1}
     (nil))
(insn 389 388 390 17 (set (reg:SI 0 ax [431])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALLCL.f":128 86 {*movsi_internal}
     (nil))
(insn 390 389 391 17 (set (reg:DI 0 ax [orig:256 _170 ] [256])
        (sign_extend:DI (reg:SI 0 ax [431]))) "CALLCL.f":128 149 {*extendsidi2_rex64}
     (nil))
(insn 391 390 392 17 (parallel [
            (set (reg:DI 0 ax [orig:257 _171 ] [257])
                (mult:DI (reg:DI 0 ax [orig:256 _170 ] [256])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALLCL.f":128 349 {*muldi3_1}
     (nil))
(insn 392 391 393 17 (parallel [
            (set (reg:DI 1 dx [orig:258 _172 ] [258])
                (plus:DI (reg:DI 1 dx [orig:255 _169 ] [255])
                    (reg:DI 0 ax [orig:257 _171 ] [257])))
            (clobber (reg:CC 17 flags))
        ]) "CALLCL.f":128 222 {*adddi_1}
     (nil))
(insn 393 392 394 17 (set (reg:SI 0 ax [432])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALLCL.f":128 86 {*movsi_internal}
     (nil))
(insn 394 393 395 17 (set (reg:DI 0 ax [orig:259 _173 ] [259])
        (sign_extend:DI (reg:SI 0 ax [432]))) "CALLCL.f":128 149 {*extendsidi2_rex64}
     (nil))
(insn 395 394 554 17 (parallel [
            (set (reg:DI 0 ax [orig:260 _174 ] [260])
                (plus:DI (reg:DI 0 ax [orig:259 _173 ] [259])
                    (reg:DI 1 dx [orig:258 _172 ] [258])))
            (clobber (reg:CC 17 flags))
        ]) "CALLCL.f":128 222 {*adddi_1}
     (nil))
(insn 554 395 397 17 (set (reg:DI 1 dx [orig:261 _175 ] [261])
        (plus:DI (reg:DI 0 ax [orig:260 _174 ] [260])
            (const_int -29751 [0xffffffffffff8bc9]))) "CALLCL.f":128 218 {*leadi}
     (nil))
(insn 397 554 398 17 (set (reg/f:DI 0 ax [433])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f3d6bcb8870 extra>)) "CALLCL.f":128 85 {*movdi_internal}
     (nil))
(insn 398 397 399 17 (parallel [
            (set (reg:DI 1 dx [434])
                (plus:DI (reg:DI 1 dx [orig:261 _175 ] [261])
                    (const_int 2311218 [0x234432])))
            (clobber (reg:CC 17 flags))
        ]) "CALLCL.f":128 222 {*adddi_1}
     (nil))
(insn 399 398 400 17 (set (reg:SF 22 xmm1 [orig:262 _176 ] [262])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [434])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [433])) [2 extra.zint S4 A32])) "CALLCL.f":128 131 {*movsf_internal}
     (nil))
(insn 400 399 401 17 (set (reg:SF 21 xmm0 [435])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [2 dz+0 S4 A32])) "CALLCL.f":128 131 {*movsf_internal}
     (nil))
(insn 401 400 402 17 (set (reg:SF 21 xmm0 [orig:263 _177 ] [263])
        (mult:SF (reg:SF 21 xmm0 [435])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -64 [0xffffffffffffffc0])) [2 dlplcl+0 S4 A32]))) "CALLCL.f":128 838 {*fop_sf_comm}
     (nil))
(insn 402 401 403 17 (set (reg:SF 21 xmm0 [orig:264 _178 ] [264])
        (div:SF (reg:SF 21 xmm0 [orig:263 _177 ] [263])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -68 [0xffffffffffffffbc])) [2 dalp+0 S4 A32]))) "CALLCL.f":128 841 {*fop_sf_1}
     (nil))
(insn 403 402 404 17 (set (reg:SI 0 ax [436])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALLCL.f":128 86 {*movsi_internal}
     (nil))
(insn 404 403 405 17 (set (reg:DI 0 ax [orig:265 _179 ] [265])
        (sign_extend:DI (reg:SI 0 ax [436]))) "CALLCL.f":128 149 {*extendsidi2_rex64}
     (nil))
(insn 405 404 406 17 (parallel [
            (set (reg:DI 1 dx [orig:266 _180 ] [266])
                (mult:DI (reg:DI 0 ax [orig:265 _179 ] [265])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALLCL.f":128 349 {*muldi3_1}
     (nil))
(insn 406 405 407 17 (set (reg:SI 0 ax [437])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALLCL.f":128 86 {*movsi_internal}
     (nil))
(insn 407 406 408 17 (set (reg:DI 0 ax [orig:267 _181 ] [267])
        (sign_extend:DI (reg:SI 0 ax [437]))) "CALLCL.f":128 149 {*extendsidi2_rex64}
     (nil))
(insn 408 407 555 17 (parallel [
            (set (reg:DI 0 ax [orig:268 _182 ] [268])
                (plus:DI (reg:DI 0 ax [orig:267 _181 ] [267])
                    (reg:DI 1 dx [orig:266 _180 ] [266])))
            (clobber (reg:CC 17 flags))
        ]) "CALLCL.f":128 222 {*adddi_1}
     (nil))
(insn 555 408 410 17 (set (reg:DI 1 dx [orig:269 _183 ] [269])
        (plus:DI (reg:DI 0 ax [orig:268 _182 ] [268])
            (const_int -120 [0xffffffffffffff88]))) "CALLCL.f":128 218 {*leadi}
     (nil))
(insn 410 555 411 17 (set (reg:SF 21 xmm0 [orig:270 _184 ] [270])
        (plus:SF (reg:SF 21 xmm0 [orig:264 _178 ] [264])
            (reg:SF 22 xmm1 [orig:262 _176 ] [262]))) "CALLCL.f":128 838 {*fop_sf_comm}
     (nil))
(insn 411 410 412 17 (set (reg/f:DI 0 ax [438])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [3 zlcl+0 S8 A64])) "CALLCL.f":128 85 {*movdi_internal}
     (nil))
(insn 412 411 413 17 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:269 _183 ] [269])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [438])) [2 *zlcl_238(D) S4 A32])
        (reg:SF 21 xmm0 [orig:270 _184 ] [270])) "CALLCL.f":128 131 {*movsf_internal}
     (nil))
(insn 413 412 414 17 (set (reg:SI 0 ax [439])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALLCL.f":129 86 {*movsi_internal}
     (nil))
(insn 414 413 415 17 (set (reg:DI 0 ax [orig:271 _185 ] [271])
        (sign_extend:DI (reg:SI 0 ax [439]))) "CALLCL.f":129 149 {*extendsidi2_rex64}
     (nil))
(insn 415 414 416 17 (parallel [
            (set (reg:DI 1 dx [orig:272 _186 ] [272])
                (mult:DI (reg:DI 0 ax [orig:271 _185 ] [271])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALLCL.f":129 349 {*muldi3_1}
     (nil))
(insn 416 415 417 17 (set (reg:SI 0 ax [440])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALLCL.f":129 86 {*movsi_internal}
     (nil))
(insn 417 416 418 17 (set (reg:DI 0 ax [orig:273 _187 ] [273])
        (sign_extend:DI (reg:SI 0 ax [440]))) "CALLCL.f":129 149 {*extendsidi2_rex64}
     (nil))
(insn 418 417 556 17 (parallel [
            (set (reg:DI 0 ax [orig:274 _188 ] [274])
                (plus:DI (reg:DI 0 ax [orig:273 _187 ] [273])
                    (reg:DI 1 dx [orig:272 _186 ] [272])))
            (clobber (reg:CC 17 flags))
        ]) "CALLCL.f":129 222 {*adddi_1}
     (nil))
(insn 556 418 420 17 (set (reg:DI 1 dx [orig:275 _189 ] [275])
        (plus:DI (reg:DI 0 ax [orig:274 _188 ] [274])
            (const_int -120 [0xffffffffffffff88]))) "CALLCL.f":129 218 {*leadi}
     (nil))
(insn 420 556 421 17 (set (reg/f:DI 0 ax [441])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7f3d6bcc6750 vrbls>)) "CALLCL.f":129 85 {*movdi_internal}
     (nil))
(insn 421 420 422 17 (parallel [
            (set (reg:DI 1 dx [442])
                (plus:DI (reg:DI 1 dx [orig:275 _189 ] [275])
                    (const_int 59262 [0xe77e])))
            (clobber (reg:CC 17 flags))
        ]) "CALLCL.f":129 222 {*adddi_1}
     (nil))
(insn 422 421 423 17 (set (reg:SF 22 xmm1 [orig:276 _190 ] [276])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [442])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [441])) [2 vrbls.fis S4 A32])) "CALLCL.f":129 131 {*movsf_internal}
     (nil))
(insn 423 422 424 17 (set (reg:SF 21 xmm0 [444])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC11") [flags 0x2]) [0  S4 A32])) "CALLCL.f":129 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0204081237316131591796875e-1 [0x0.d0fac6p-3])
        (nil)))
(insn 424 423 425 17 (set (reg:SF 21 xmm0 [443])
        (mult:SF (reg:SF 21 xmm0 [444])
            (reg:SF 22 xmm1 [orig:276 _190 ] [276]))) "CALLCL.f":129 838 {*fop_sf_comm}
     (nil))
(insn 425 424 426 17 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -76 [0xffffffffffffffb4])) [2 zsfc+0 S4 A32])
        (reg:SF 21 xmm0 [443])) "CALLCL.f":129 131 {*movsf_internal}
     (nil))
(insn 426 425 427 17 (set (reg:SI 0 ax [445])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALLCL.f":130 86 {*movsi_internal}
     (nil))
(insn 427 426 428 17 (set (reg:DI 0 ax [orig:277 _191 ] [277])
        (sign_extend:DI (reg:SI 0 ax [445]))) "CALLCL.f":130 149 {*extendsidi2_rex64}
     (nil))
(insn 428 427 429 17 (parallel [
            (set (reg:DI 1 dx [orig:278 _192 ] [278])
                (mult:DI (reg:DI 0 ax [orig:277 _191 ] [277])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALLCL.f":130 349 {*muldi3_1}
     (nil))
(insn 429 428 430 17 (set (reg:SI 0 ax [446])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALLCL.f":130 86 {*movsi_internal}
     (nil))
(insn 430 429 431 17 (set (reg:DI 0 ax [orig:279 _193 ] [279])
        (sign_extend:DI (reg:SI 0 ax [446]))) "CALLCL.f":130 149 {*extendsidi2_rex64}
     (nil))
(insn 431 430 557 17 (parallel [
            (set (reg:DI 0 ax [orig:280 _194 ] [280])
                (plus:DI (reg:DI 0 ax [orig:279 _193 ] [279])
                    (reg:DI 1 dx [orig:278 _192 ] [278])))
            (clobber (reg:CC 17 flags))
        ]) "CALLCL.f":130 222 {*adddi_1}
     (nil))
(insn 557 431 433 17 (set (reg:DI 1 dx [orig:281 _195 ] [281])
        (plus:DI (reg:DI 0 ax [orig:280 _194 ] [280])
            (const_int -120 [0xffffffffffffff88]))) "CALLCL.f":130 218 {*leadi}
     (nil))
(insn 433 557 434 17 (set (reg/f:DI 0 ax [447])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [3 zlcl+0 S8 A64])) "CALLCL.f":130 85 {*movdi_internal}
     (nil))
(insn 434 433 435 17 (set (reg:SF 21 xmm0 [orig:282 _196 ] [282])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:281 _195 ] [281])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [447])) [2 *zlcl_238(D) S4 A32])) "CALLCL.f":130 131 {*movsf_internal}
     (nil))
(insn 435 434 436 17 (set (reg:SI 0 ax [448])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALLCL.f":130 86 {*movsi_internal}
     (nil))
(insn 436 435 437 17 (set (reg:DI 0 ax [orig:283 _197 ] [283])
        (sign_extend:DI (reg:SI 0 ax [448]))) "CALLCL.f":130 149 {*extendsidi2_rex64}
     (nil))
(insn 437 436 438 17 (parallel [
            (set (reg:DI 1 dx [orig:284 _198 ] [284])
                (mult:DI (reg:DI 0 ax [orig:283 _197 ] [283])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALLCL.f":130 349 {*muldi3_1}
     (nil))
(insn 438 437 439 17 (set (reg:SI 0 ax [449])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALLCL.f":130 86 {*movsi_internal}
     (nil))
(insn 439 438 440 17 (set (reg:DI 0 ax [orig:285 _199 ] [285])
        (sign_extend:DI (reg:SI 0 ax [449]))) "CALLCL.f":130 149 {*extendsidi2_rex64}
     (nil))
(insn 440 439 558 17 (parallel [
            (set (reg:DI 0 ax [orig:286 _200 ] [286])
                (plus:DI (reg:DI 0 ax [orig:285 _199 ] [285])
                    (reg:DI 1 dx [orig:284 _198 ] [284])))
            (clobber (reg:CC 17 flags))
        ]) "CALLCL.f":130 222 {*adddi_1}
     (nil))
(insn 558 440 442 17 (set (reg:DI 1 dx [orig:287 _201 ] [287])
        (plus:DI (reg:DI 0 ax [orig:286 _200 ] [286])
            (const_int -120 [0xffffffffffffff88]))) "CALLCL.f":130 218 {*leadi}
     (nil))
(insn 442 558 443 17 (set (reg:SF 21 xmm0 [orig:288 _202 ] [288])
        (minus:SF (reg:SF 21 xmm0 [orig:282 _196 ] [282])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -76 [0xffffffffffffffb4])) [2 zsfc+0 S4 A32]))) "CALLCL.f":130 841 {*fop_sf_1}
     (nil))
(insn 443 442 444 17 (set (reg/f:DI 0 ax [450])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [3 zlcl+0 S8 A64])) "CALLCL.f":130 85 {*movdi_internal}
     (nil))
(insn 444 443 559 17 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:287 _201 ] [287])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [450])) [2 *zlcl_238(D) S4 A32])
        (reg:SF 21 xmm0 [orig:288 _202 ] [288])) "CALLCL.f":130 131 {*movsf_internal}
     (nil))
(insn 559 444 446 17 (set (reg:SF 21 xmm0 [orig:303 M.1_222 ] [303])
        (const_double:SF 0.0 [0x0.0p+0])) "CALLCL.f":131 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 446 559 447 17 (set (reg:SI 0 ax [451])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALLCL.f":131 86 {*movsi_internal}
     (nil))
(insn 447 446 448 17 (set (reg:DI 0 ax [orig:289 _203 ] [289])
        (sign_extend:DI (reg:SI 0 ax [451]))) "CALLCL.f":131 149 {*extendsidi2_rex64}
     (nil))
(insn 448 447 449 17 (parallel [
            (set (reg:DI 1 dx [orig:290 _204 ] [290])
                (mult:DI (reg:DI 0 ax [orig:289 _203 ] [289])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALLCL.f":131 349 {*muldi3_1}
     (nil))
(insn 449 448 450 17 (set (reg:SI 0 ax [452])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALLCL.f":131 86 {*movsi_internal}
     (nil))
(insn 450 449 451 17 (set (reg:DI 0 ax [orig:291 _205 ] [291])
        (sign_extend:DI (reg:SI 0 ax [452]))) "CALLCL.f":131 149 {*extendsidi2_rex64}
     (nil))
(insn 451 450 560 17 (parallel [
            (set (reg:DI 0 ax [orig:292 _206 ] [292])
                (plus:DI (reg:DI 0 ax [orig:291 _205 ] [291])
                    (reg:DI 1 dx [orig:290 _204 ] [290])))
            (clobber (reg:CC 17 flags))
        ]) "CALLCL.f":131 222 {*adddi_1}
     (nil))
(insn 560 451 453 17 (set (reg:DI 1 dx [orig:293 _207 ] [293])
        (plus:DI (reg:DI 0 ax [orig:292 _206 ] [292])
            (const_int -120 [0xffffffffffffff88]))) "CALLCL.f":131 218 {*leadi}
     (nil))
(insn 453 560 454 17 (set (reg/f:DI 0 ax [453])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [3 zlcl+0 S8 A64])) "CALLCL.f":131 85 {*movdi_internal}
     (nil))
(insn 454 453 455 17 (set (reg:SF 22 xmm1 [orig:315 _275 ] [315])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:293 _207 ] [293])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [453])) [2 *zlcl_238(D) S4 A32])) "CALLCL.f":131 131 {*movsf_internal}
     (nil))
(insn 455 454 456 17 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 22 xmm1 [orig:315 _275 ] [315])
            (reg:SF 21 xmm0 [orig:303 M.1_222 ] [303]))) "CALLCL.f":131 53 {*cmpisf}
     (nil))
(insn 456 455 457 17 (set (reg:QI 0 ax [454])
        (gt:QI (reg:CCFP 17 flags)
            (const_int 0 [0]))) "CALLCL.f":131 678 {*setcc_qi}
     (nil))
(insn 457 456 458 17 (set (reg:SI 1 dx [orig:294 _208 ] [294])
        (zero_extend:SI (reg:QI 0 ax [454]))) "CALLCL.f":131 140 {*zero_extendqisi2}
     (nil))
(insn 458 457 459 17 (set (reg:CCFP 17 flags)
        (unspec:CCFP [
                (compare:CCFP (reg:SF 21 xmm0 [orig:303 M.1_222 ] [303])
                    (reg:SF 21 xmm0 [orig:303 M.1_222 ] [303]))
            ] UNSPEC_NOTRAP)) "CALLCL.f":131 54 {*cmpiusf}
     (nil))
(insn 459 458 460 17 (set (reg:QI 0 ax [455])
        (unordered:QI (reg:CCFP 17 flags)
            (const_int 0 [0]))) "CALLCL.f":131 678 {*setcc_qi}
     (nil))
(insn 460 459 461 17 (set (reg:SI 0 ax [orig:295 _209 ] [295])
        (zero_extend:SI (reg:QI 0 ax [455]))) "CALLCL.f":131 140 {*zero_extendqisi2}
     (nil))
(insn 461 460 462 17 (parallel [
            (set (reg:SI 0 ax [orig:296 _210 ] [296])
                (ior:SI (reg:SI 0 ax [orig:295 _209 ] [295])
                    (reg:SI 1 dx [orig:294 _208 ] [294])))
            (clobber (reg:CC 17 flags))
        ]) "CALLCL.f":131 450 {*iorsi_1}
     (nil))
(insn 462 461 463 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:296 _210 ] [296])
            (const_int 0 [0]))) "CALLCL.f":131 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 463 462 464 17 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 465)
            (pc))) "CALLCL.f":131 682 {*jcc}
     (nil)
 -> 465)
;;  succ:       18 (FALLTHRU)
;;              19
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1]

;; basic block 18, loop depth 0, maybe hot
;;  prev block 17, next block 19, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       17 (FALLTHRU)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1]
;; lr  use 	 6 [bp] 7 [sp] 22 [xmm1]
;; lr  def 	 21 [xmm0]
(note 464 463 8 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 8 464 465 18 (set (reg:SF 21 xmm0 [orig:303 M.1_222 ] [303])
        (reg:SF 22 xmm1 [orig:315 _275 ] [315])) "CALLCL.f":131 131 {*movsf_internal}
     (nil))
;;  succ:       19 (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0]

;; basic block 19, loop depth 0, maybe hot
;;  prev block 18, next block 20, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       17
;;              18 (FALLTHRU)
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0]
;; lr  use 	 6 [bp] 7 [sp] 21 [xmm0]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags]
(code_label 465 8 466 19 12 (nil) [1 uses])
(note 466 465 467 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 467 466 468 19 (set (reg:SI 0 ax [456])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALLCL.f":131 86 {*movsi_internal}
     (nil))
(insn 468 467 469 19 (set (reg:DI 0 ax [orig:297 _211 ] [297])
        (sign_extend:DI (reg:SI 0 ax [456]))) "CALLCL.f":131 149 {*extendsidi2_rex64}
     (nil))
(insn 469 468 470 19 (parallel [
            (set (reg:DI 1 dx [orig:298 _212 ] [298])
                (mult:DI (reg:DI 0 ax [orig:297 _211 ] [297])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALLCL.f":131 349 {*muldi3_1}
     (nil))
(insn 470 469 471 19 (set (reg:SI 0 ax [457])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALLCL.f":131 86 {*movsi_internal}
     (nil))
(insn 471 470 472 19 (set (reg:DI 0 ax [orig:299 _213 ] [299])
        (sign_extend:DI (reg:SI 0 ax [457]))) "CALLCL.f":131 149 {*extendsidi2_rex64}
     (nil))
(insn 472 471 548 19 (parallel [
            (set (reg:DI 0 ax [orig:300 _214 ] [300])
                (plus:DI (reg:DI 0 ax [orig:299 _213 ] [299])
                    (reg:DI 1 dx [orig:298 _212 ] [298])))
            (clobber (reg:CC 17 flags))
        ]) "CALLCL.f":131 222 {*adddi_1}
     (nil))
(insn 548 472 474 19 (set (reg:DI 1 dx [orig:301 _215 ] [301])
        (plus:DI (reg:DI 0 ax [orig:300 _214 ] [300])
            (const_int -120 [0xffffffffffffff88]))) "CALLCL.f":131 218 {*leadi}
     (nil))
(insn 474 548 475 19 (set (reg/f:DI 0 ax [458])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [3 zlcl+0 S8 A64])) "CALLCL.f":131 85 {*movdi_internal}
     (nil))
(insn 475 474 511 19 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:301 _215 ] [301])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [458])) [2 *zlcl_238(D) S4 A32])
        (reg:SF 21 xmm0 [orig:303 M.1_222 ] [303])) "CALLCL.f":131 131 {*movsf_internal}
     (nil))
(jump_insn 511 475 512 19 (set (pc)
        (label_ref 484)) "CALLCL.f":138 683 {jump}
     (nil)
 -> 484)
;;  succ:       22 [always] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

(barrier 512 511 510)
;; basic block 20, loop depth 0, maybe hot
;;  prev block 19, next block 21, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       16
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
(code_label 510 512 479 20 18 (nil) [1 uses])
(note 479 510 480 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 480 479 513 20 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALLCL.f":123 221 {*addsi_1}
     (nil))
(jump_insn 513 480 514 20 (set (pc)
        (label_ref 481)) "CALLCL.f":123 683 {jump}
     (nil)
 -> 481)
;;  succ:       15 [always] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

(barrier 514 513 532)
;; basic block 21, loop depth 0, maybe hot
;;  prev block 20, next block 22, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       15
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 532 514 531 21 23 (nil) [1 uses])
(note 531 532 533 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 533 531 484 21 (const_int 0 [0]) "CALLCL.f":124 718 {nop}
     (nil))
;;  succ:       22 [always]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

;; basic block 22, loop depth 0, maybe hot
;;  prev block 21, next block 23, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       21 [always]  (FALLTHRU)
;;              19 [always] 
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
(code_label 484 533 485 22 9 (nil) [1 uses])
(note 485 484 486 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 486 485 515 22 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALLCL.f":110 221 {*addsi_1}
     (nil))
(jump_insn 515 486 516 22 (set (pc)
        (label_ref 487)) "CALLCL.f":110 683 {jump}
     (nil)
 -> 487)
;;  succ:       11 [always] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

(barrier 516 515 529)
;; basic block 23, loop depth 0, maybe hot
;;  prev block 22, next block 24, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       11
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 529 516 528 23 22 (nil) [1 uses])
(note 528 529 530 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 530 528 492 23 (const_int 0 [0]) "CALLCL.f":123 718 {nop}
     (nil))
(insn 492 530 517 23 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALLCL.f":109 221 {*addsi_1}
     (nil))
(jump_insn 517 492 518 23 (set (pc)
        (label_ref 493)) "CALLCL.f":109 683 {jump}
     (nil)
 -> 493)
;;  succ:       9 [always] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

(barrier 518 517 526)
;; basic block 24, loop depth 0, maybe hot
;;  prev block 23, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       9
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 526 518 525 24 21 (nil) [1 uses])
(note 525 526 527 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 527 525 505 24 (const_int 0 [0]) "CALLCL.f":110 718 {nop}
     (nil))
(insn 505 527 582 24 (const_int 0 [0]) "CALLCL.f":146 718 {nop}
     (nil))
(note 582 505 583 24 NOTE_INSN_EPILOGUE_BEG)
(insn 583 582 584 24 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 120 [0x78])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) "CALLCL.f":147 -1
     (nil))
(insn 584 583 585 24 (set (reg:DI 3 bx)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) "CALLCL.f":147 -1
     (nil))
(insn/f 585 584 586 24 (set (reg/f:DI 6 bp)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) "CALLCL.f":147 -1
     (expr_list:REG_CFA_DEF_CFA (plus:DI (reg/f:DI 7 sp)
            (const_int 8 [0x8]))
        (nil)))
(jump_insn 586 585 587 24 (simple_return) "CALLCL.f":147 -1
     (nil)
 -> simple_return)
;;  succ:       EXIT [always] 
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

(barrier 587 586 534)
(note 534 587 0 NOTE_INSN_DELETED)
