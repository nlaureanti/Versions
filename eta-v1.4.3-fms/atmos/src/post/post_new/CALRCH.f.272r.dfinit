
;; Function calrch (calrch_, funcdef_no=0, decl_uid=3770, cgraph_uid=0, symbol_order=0)

verify found no changes in insn with uid = 168.
verify found no changes in insn with uid = 240.
verify found no changes in insn with uid = 461.
verify found no changes in insn with uid = 464.


calrch

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 4 [si] 5 [di] 7 [sp] 17 [flags] 21 [xmm0] 22 [xmm1]
;;  ref usage 	r0={8d,3u} r1={5d} r2={5d} r4={5d,1u} r5={8d,4u} r6={1d,81u} r7={1d,85u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r16={1d,80u} r17={415d,45u} r18={4d} r19={4d} r20={1d,375u,37e} r21={6d,2u} r22={6d,1u} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={5d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={5d} r38={5d} r39={4d} r40={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r77={4d} r78={4d} r79={4d} r80={4d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u} r128={1d,1u} r129={1d,1u} r130={1d,1u} r131={1d,1u} r132={1d,1u} r133={1d,1u} r134={1d,1u} r135={1d,1u} r136={1d,1u} r137={1d,1u} r138={1d,1u} r139={1d,1u} r140={1d,1u} r141={1d,1u} r142={1d,1u} r143={1d,1u} r144={1d,1u} r145={1d,1u} r146={1d,1u} r147={1d,1u} r148={1d,1u} r149={1d,1u} r150={1d,1u} r151={1d,1u} r152={1d,1u} r153={1d,1u} r154={1d,1u} r155={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u,1e} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r171={1d,1u} r172={1d,1u} r173={1d,1u} r174={1d,1u} r175={1d,1u} r176={1d,1u} r177={1d,1u} r178={1d,1u} r179={1d,1u} r180={1d,1u} r181={1d,1u} r182={1d,1u} r183={1d,1u} r184={1d,1u} r185={1d,1u} r186={1d,1u} r187={1d,1u} r188={1d,1u} r189={1d,1u} r190={1d,1u} r191={1d,1u} r192={1d,1u} r193={1d,1u} r194={1d,1u} r195={1d,1u} r196={1d,1u} r197={1d,1u} r198={1d,1u} r199={1d,1u} r200={1d,1u} r201={1d,1u} r202={1d,1u} r203={1d,1u} r204={1d,1u} r205={1d,1u} r206={1d,1u} r207={1d,1u} r208={1d,1u} r209={1d,1u,1e} r210={1d,1u} r211={1d,1u} r212={1d,1u} r213={1d,1u} r214={1d,1u} r215={1d,1u} r216={1d,1u} r217={1d,1u} r218={1d,1u} r219={1d,1u} r220={1d,1u} r221={1d,1u} r222={1d,1u} r223={1d,1u} r224={1d,1u} r225={1d,1u} r226={1d,1u} r227={1d,1u} r228={1d,1u} r229={1d,1u} r230={1d,1u} r231={1d,1u} r232={1d,1u} r233={1d,1u} r234={1d,1u} r235={1d,1u} r236={1d,1u} r237={1d,1u} r238={1d,1u} r239={1d,1u} r240={1d,1u} r241={1d,1u} r242={1d,1u} r243={1d,1u} r244={1d,1u} r245={1d,1u} r246={1d,1u} r247={1d,1u} r248={1d,1u} r249={1d,1u} r250={1d,1u} r251={1d,1u} r252={1d,1u} r253={1d,1u} r254={1d,1u} r255={1d,1u} r256={1d,1u} r257={1d,1u} r258={1d,1u} r259={1d,1u,1e} r260={1d,1u} r261={1d,1u} r262={1d,1u} r263={1d,1u} r264={1d,1u} r265={1d,1u} r266={1d,1u} r267={1d,1u} r268={1d,1u} r269={1d,1u} r270={1d,1u} r271={1d,1u} r272={1d,1u} r273={1d,1u} r274={1d,1u} r275={1d,1u} r276={1d,1u} r277={1d,1u} r278={1d,1u} r279={1d,1u} r280={1d,1u} r281={1d,1u} r282={1d,1u} r283={1d,1u} r284={1d,1u} r285={1d,1u} r286={1d,1u} r287={1d,1u} r288={1d,1u} r289={1d,1u} r290={1d,1u} r291={1d,1u} r292={1d,1u} r293={1d,1u} r294={1d,1u} r295={1d,1u} r296={1d,1u} r297={1d,1u} r298={1d,1u} r299={1d,1u} r300={1d,1u} r301={1d,1u} r302={1d,1u} r303={1d,1u} r304={1d,1u} r305={1d,1u} r306={1d,1u} r307={1d,1u} r308={1d,1u} r309={1d,1u} r310={1d,1u} r311={1d,1u} r312={1d,1u} r313={1d,1u} r314={1d,1u} r315={1d,1u} r316={1d,1u} r317={1d,1u} r318={1d,1u,1e} r319={1d,1u} r320={1d,1u} r321={1d,1u,1e} r322={1d,1u} r323={1d,1u} r324={1d,1u} r325={1d,1u} r326={1d,1u} r327={1d,1u} r328={1d,1u} r329={1d,1u} r330={1d,1u} r331={1d,1u} r332={1d,1u} r333={1d,1u} r334={1d,1u} r335={1d,1u} r336={1d,1u} r337={1d,1u} r338={1d,1u} r339={1d,1u} r340={1d,1u} r341={1d,1u} r342={1d,1u} r343={1d,1u} r344={1d,1u} r345={1d,1u} r346={1d,1u} r347={1d,1u} r348={1d,1u} r349={1d,1u} r350={1d,1u} r351={1d,1u} r352={1d,1u} r353={1d,1u} r354={1d,1u} r355={1d,1u} r356={1d,1u} r357={1d,1u} r358={1d,1u} r359={1d,1u} r360={1d,1u} r361={1d,1u} r362={1d,1u} r363={1d,1u} r364={1d,1u} r365={1d,1u} r366={1d,1u} r367={1d,1u} r368={1d,1u} r369={1d,1u} r370={1d,1u} r371={1d,1u} r372={1d,1u} r373={1d,1u} r374={1d,1u} r375={1d,1u} r376={1d,1u} r377={1d,1u} r378={1d,1u} r379={1d,1u} r380={1d,1u} r381={1d,1u} r382={1d,1u} r383={1d,1u} r384={1d,1u} r385={1d,1u} r386={1d,1u} r387={1d,1u} r388={1d,1u} r389={1d,1u} r390={1d,1u} r391={1d,1u} r392={1d,1u} r393={1d,1u} r394={1d,1u} r395={1d,1u} r396={1d,1u} r397={1d,1u} r398={1d,1u} r399={1d,1u} r400={1d,1u} r401={1d,1u} r402={1d,1u} r403={1d,1u} r404={1d,1u} r405={1d,1u} r406={1d,1u} r407={1d,1u} r408={1d,1u} r409={1d,1u} r410={1d,1u} r411={1d,1u} r412={1d,1u} r413={1d,1u} r414={1d,1u} r415={1d,1u} r416={1d,1u} r417={1d,1u} r418={1d,1u} r419={1d,1u} r420={1d,1u} r421={1d,1u} r422={1d,1u} r423={1d,1u} r424={1d,1u} r425={1d,1u} r426={1d,1u} r427={1d,1u} r428={1d,1u} r429={1d,1u} r430={1d,1u} r431={1d,1u} r432={1d,1u} r433={1d,1u} r434={1d,1u} r435={1d,1u} r436={1d,1u} r437={1d,1u} r438={1d,1u} r439={1d,1u} r440={1d,1u} r441={1d,1u} r442={1d,1u} r443={1d,1u} r444={1d,1u} r445={1d,1u} r446={1d,1u} r447={1d,1u} r448={1d,1u} r449={1d,1u} r450={1d,1u} r451={1d,1u} r452={1d,1u} r453={1d,1u} r454={1d,1u} r455={1d,1u} r456={1d,1u} r457={1d,1u} r458={1d,1u} r459={1d,1u} r460={1d,1u} r461={1d,1u} r462={1d,1u} r463={1d,1u} r464={1d,1u} r465={1d,1u} r466={1d,1u} r467={1d,1u} r468={1d,1u} r469={1d,1u} r470={1d,1u} r471={1d,1u} r472={1d,1u} r473={1d,1u} r474={1d,1u} r475={1d,1u} r476={1d,1u} r477={1d,1u} r478={1d,1u} r479={1d,1u} r480={1d,1u} r481={1d,1u} r482={1d,1u} r483={1d,1u} r484={1d,1u} r485={1d,1u} r486={1d,1u} r487={1d,1u} r488={1d,1u} r489={1d,1u} r490={1d,1u} r491={1d,1u} r492={1d,1u} r493={1d,1u} r494={1d,1u} r495={1d,1u} r496={1d,1u} r497={1d,1u} r498={1d,1u} r499={1d,1u} r500={1d,1u} r501={1d,1u} r502={1d,1u} r503={1d,1u} r504={1d,1u} r505={1d,1u} r506={1d,1u} r507={1d,1u} r508={1d,1u} r509={1d,1u} r510={1d,1u} r511={1d,1u} r512={1d,1u} r513={1d,1u} r514={1d,1u} r515={1d,1u} r516={1d,1u} r517={1d,1u} r518={1d,1u} r519={1d,1u} r520={1d,1u} r521={1d,1u} r522={1d,1u} r523={1d,1u} r524={1d,1u} r525={1d,1u} r526={1d,1u} r527={1d,1u} r528={1d,1u} r529={1d,1u} r530={1d,1u} r531={1d,1u} r532={1d,1u} r533={1d,1u} r534={1d,1u} r535={1d,1u} r536={1d,1u} r537={1d,1u} r538={1d,1u} r539={1d,1u} r540={1d,1u} r541={1d,1u} r542={1d,1u} r543={1d,1u} r544={1d,1u} r545={1d,1u} r546={1d,1u} r547={1d,1u} r548={1d,1u} r549={1d,1u} r550={1d,1u} r551={1d,1u} r552={1d,1u} r553={1d,1u} r554={1d,1u} r555={1d,1u} r556={1d,1u} r557={1d,1u} r558={1d,1u} r559={1d,1u} r560={1d,1u} r561={1d,1u} r562={1d,1u} r563={1d,1u} r564={1d,1u} r565={1d,1u} r566={1d,1u} r567={1d,1u} r568={1d,1u} r569={1d,1u} r570={1d,1u} r571={1d,1u} r572={1d,1u} r573={1d,1u} r574={1d,1u} r575={1d,1u} r576={1d,1u} r577={1d,1u} r578={1d,1u} r579={1d,1u} r580={1d,1u} r581={1d,1u} r582={1d,1u} r583={1d,1u} r584={1d,1u} r585={1d,1u} r586={1d,1u} r587={1d,1u} r588={1d,1u} r589={1d,1u} r590={1d,1u} r591={1d,1u} r592={1d,1u} r593={1d,1u} r594={1d,1u} r595={1d,1u} r596={1d,1u} r597={1d,1u} r598={1d,1u} r599={1d,1u} r600={1d,1u} r601={1d,1u} r602={1d,1u} r603={1d,1u} r604={1d,1u} r605={1d,1u} r606={1d,1u} r607={1d,1u} r608={1d,1u} r609={1d,1u} r610={1d,1u} r611={1d,1u} r612={1d,1u} r613={1d,1u} r614={1d,1u} r615={1d,1u} r616={1d,1u} r617={1d,1u} r618={1d,1u} r619={1d,1u} r620={1d,1u} r621={1d,1u} r622={1d,1u} r623={1d,1u} r624={1d,1u} r625={1d,1u} r626={1d,1u} r627={1d,1u} r628={1d,1u} r629={1d,1u} r630={1d,1u} r631={1d,1u} r632={1d,1u} r633={1d,1u} r634={1d,1u} r635={1d,1u} r636={1d,1u} r637={1d,1u} r638={1d,1u} r639={1d,1u} r640={1d,1u} r641={1d,1u} r642={1d,1u} r643={1d,1u} r644={1d,1u} r645={1d,1u} r646={1d,1u} r647={1d,1u} r648={1d,1u} r649={1d,1u} r650={1d,1u} r651={1d,1u} r652={1d,1u} r653={1d,1u} r654={1d,1u} r655={1d,1u} r656={1d,1u} r657={1d,1u} r658={1d,1u} r659={1d,1u} r660={1d,1u,1e} r661={1d,1u} r662={1d,1u,1e} r663={1d,1u} r664={1d,1u} r665={1d,1u} r666={1d,1u} r667={1d,1u} r668={1d,1u} r669={1d,1u} r670={1d,1u} r671={2d,4u} r672={2d,4u} r673={1d,1u} r674={1d,1u} r675={1d,1u} r676={1d,1u} r677={1d,1u} r678={1d,1u} r679={1d,1u} r680={1d,1u} r681={1d,1u} r682={1d,1u} r683={1d,1u} r684={1d,1u} r685={1d,1u} r686={1d,1u} r687={1d,1u} r688={1d,1u} r689={1d,1u} r690={1d,1u} r691={1d,1u} r692={1d,1u} r693={1d,1u} r694={1d,1u} r695={1d,1u} r696={1d,1u} r697={1d,1u} r698={1d,1u} r699={1d,1u} r700={1d,1u} r701={1d,1u} r702={1d,1u} r703={1d,1u} r704={1d,1u} r705={1d,2u} r706={1d,1u} r707={1d,2u} r708={1d,1u} r709={1d,1u} r710={1d,1u} r711={1d,1u} r712={1d,1u} r713={1d,1u} r714={1d,1u} r715={1d,1u} r716={1d,1u} r717={1d,1u} r718={1d,1u} r719={1d,1u} r720={1d,1u} r721={1d,1u} r722={1d,1u} r723={1d,1u} r724={1d,1u} r725={1d,1u} r726={1d,1u} r727={1d,1u} r728={1d,1u} r729={1d,1u} r730={1d,1u} r731={1d,1u} r732={1d,1u} r733={1d,1u} r734={1d,1u} r735={1d,1u} r736={1d,1u} r737={1d,1u} r738={1d,1u} r739={1d,1u} r740={1d,1u} r741={1d,1u} r742={1d,1u} r743={1d,1u} r744={1d,1u} r745={1d,1u} r746={1d,1u} r747={1d,1u} r748={1d,1u} r749={1d,1u} r750={1d,1u} r751={1d,1u} r752={1d,1u} r753={1d,1u} r754={1d,1u} r755={1d,1u} r756={1d,1u} r757={1d,1u} r758={1d,1u} r759={1d,1u} r760={1d,1u} r763={1d,1u} r764={1d,1u} r765={1d,1u} r766={1d,1u} r767={1d,1u} r768={1d,1u} r769={1d,1u} r770={1d,1u} r771={1d,1u} r772={1d,1u} r773={1d,1u} r774={1d,1u} r775={1d,1u} r776={1d,1u} r777={1d,1u} r778={1d,1u} r779={1d,1u} r780={1d,1u} r781={1d,1u} r782={1d,1u} r783={1d,1u} r784={1d,1u} r785={1d,1u} r786={1d,1u} r787={1d,1u} r788={1d,1u} r791={1d,1u} r792={1d,1u} r793={1d,1u} r794={1d,1u} r795={1d,1u} r796={1d,1u} r797={1d,1u} r798={1d,1u} r799={1d,1u} r800={1d,1u} r801={1d,1u} r802={1d,1u} r803={1d,1u} r804={1d,1u} r805={1d,1u} r806={1d,1u} r807={1d,1u} r808={1d,1u} r809={1d,1u} r810={1d,1u} r811={1d,1u} r812={1d,1u} r813={1d,1u} r814={1d,1u} r815={1d,1u} r816={1d,1u} r817={1d,1u} r820={1d,1u} r821={1d,1u} r822={1d,1u} r823={1d,1u} r824={1d,1u} r825={1d,1u} r826={1d,1u} r827={1d,1u} r828={1d,1u} r829={1d,1u} r830={1d,1u} r831={1d,1u} r832={1d,1u} r833={1d,1u} r834={1d,1u} r835={1d,1u} r836={1d,1u} r837={1d,1u} r838={1d,1u} r839={1d,1u} r840={1d,1u} r841={1d,1u} r842={1d,1u} r843={1d,1u} r844={1d,1u} r845={1d,1u} r846={1d,1u} r847={1d,1u} r848={1d,1u} r849={1d,1u} r852={1d,1u} r853={1d,1u} r854={1d,1u} r855={1d,1u} r858={1d,1u} r859={1d,1u} r860={1d,1u} r861={1d,1u} r862={1d,1u} r863={1d,1u} r864={1d,1u} r865={1d,1u} r866={1d,1u} r867={1d,1u} r868={1d,1u} r869={1d,1u} r870={1d,1u} r871={1d,1u} r872={1d,1u} r873={1d,1u} r874={1d,1u} r875={1d,1u} r876={1d,1u} r877={1d,1u} r878={1d,1u} r879={1d,1u} r880={1d,1u} r881={1d,1u} r882={1d,1u} r883={1d,1u} r884={1d,1u} r885={1d,1u} r886={1d,1u} r887={1d,1u} r888={1d,1u} r889={1d,1u} r890={1d,1u} r891={1d,1u} r892={1d,1u} r893={1d,1u} r894={1d,1u} r895={1d,1u} r896={1d,1u} r897={1d,1u} r898={1d,1u} r899={1d,1u} r900={1d,1u} r901={1d,1u} r902={1d,1u} r903={1d,1u} r904={1d,1u} r905={1d,1u} r906={1d,1u} r907={1d,1u} r908={1d,1u} r909={1d,1u} r910={1d,1u} r911={1d,1u} r912={1d,1u} r913={1d,1u} r914={1d,1u} r915={1d,1u} r916={1d,1u} r917={1d,1u} r918={1d,1u} r919={1d,1u} r920={1d,1u} r921={1d,1u} r922={1d,1u} r923={1d,1u} r924={1d,1u} r925={1d,1u} r926={1d,1u} r927={1d,1u} r928={1d,1u} r929={1d,1u} r930={1d,1u} r931={1d,1u} r932={1d,1u} r933={1d,1u} r934={1d,1u} r935={1d,1u} r936={1d,1u} r937={1d,1u} r938={1d,1u} r939={1d,1u} r940={1d,1u} r941={1d,1u} r942={1d,1u} r943={1d,1u} r944={1d,1u} r945={1d,1u} r946={1d,1u} r947={1d,1u} r948={1d,1u} r949={1d,1u} r950={1d,1u} r951={1d,1u} r952={1d,1u} r953={1d,1u} r954={1d,1u} r955={1d,1u} r956={1d,1u} r957={1d,1u} r958={1d,1u} r959={1d,1u} r960={1d,1u} r961={1d,1u} r962={1d,1u} r963={1d,1u} r964={1d,1u} r965={1d,1u} r966={1d,1u} r967={1d,1u} r968={1d,1u} r969={1d,1u} r970={1d,1u} r971={1d,1u} r972={1d,1u} r973={1d,1u} r974={1d,1u} r975={1d,1u} r976={1d,1u} r977={1d,1u} r978={1d,1u} r979={1d,1u} r980={1d,1u} r981={1d,1u} r982={1d,1u} r983={1d,1u} r984={1d,1u} r985={1d,1u} r986={1d,1u} r987={1d,1u} r988={1d,1u} r989={1d,1u} r990={1d,1u} r991={1d,1u} r992={1d,1u} r993={1d,1u} r994={1d,1u} r995={1d,1u} r996={1d,1u} r997={1d,1u} r998={1d,1u} r999={1d,1u} r1000={1d,1u} r1001={1d,1u} r1002={1d,1u} r1003={1d,1u} r1004={1d,1u} r1005={1d,1u} r1006={1d,1u} r1007={1d,1u} r1008={1d,1u} r1010={1d,1u} r1011={1d,1u} r1012={1d,1u} r1013={1d,1u} r1014={1d,1u} r1015={1d,1u} r1016={1d,1u} r1017={1d,1u} r1018={1d,1u} r1020={1d,1u} r1021={1d,1u} r1022={1d,1u} r1023={1d,1u} r1024={1d,1u} r1025={1d,1u} r1026={1d,1u} r1027={1d,1u} r1028={1d,1u} r1029={1d,1u} r1030={1d,1u} r1031={1d,1u} r1032={1d,1u} r1033={1d,1u} r1034={1d,1u} r1035={1d,1u} r1036={1d,1u} r1037={1d,1u} r1038={1d,1u} r1039={1d,1u} r1040={1d,1u} r1041={1d,1u} r1042={1d,1u} r1043={1d,1u} r1044={1d,1u} r1045={1d,1u} r1046={1d,1u} r1047={1d,1u} r1048={1d,1u} r1049={1d,1u} r1050={1d,1u} r1051={1d,1u} r1052={1d,1u} r1053={1d,1u} r1054={1d,1u} r1055={1d,1u} r1056={1d,1u} r1057={1d,1u} 
;;    total ref usage 3375{1687d,1644u,44e} in 1147{1143 regular + 4 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -104 [0xffffffffffffff98])) [3 el+0 S8 A64])
        (reg:DI 5 di [ el ])) "CALRCH.f":1 85 {*movdi_internal}
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -112 [0xffffffffffffff90])) [3 richno+0 S8 A64])
        (reg:DI 4 si [ richno ])) "CALRCH.f":1 85 {*movdi_internal}
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 60 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
        (const_int 1 [0x1])) "CALRCH.f":76 86 {*movsi_internal}
     (nil))
;;  succ:       3 (FALLTHRU)

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;;              10 [always] 
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 60 7 8 3 7 (nil) [1 uses])
(note 8 60 9 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 9 8 10 3 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
            (const_int 38 [0x26]))) "CALRCH.f":76 11 {*cmpsi_1}
     (nil))
(insn 10 9 11 3 (set (reg:QI 709)
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALRCH.f":76 678 {*setcc_qi}
     (nil))
(insn 11 10 12 3 (set (reg:SI 673 [ _624 ])
        (zero_extend:SI (reg:QI 709))) "CALRCH.f":76 140 {*zero_extendqisi2}
     (nil))
(insn 12 11 13 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 673 [ _624 ])
            (const_int 0 [0]))) "CALRCH.f":76 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 13 12 14 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1322)
            (pc))) "CALRCH.f":76 682 {*jcc}
     (nil)
 -> 1322)
;;  succ:       65
;;              4 (FALLTHRU)

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(note 14 13 15 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 4 (set (reg:SI 674 [ _625 ])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7fe96ef06630 parallel>)
                    (const_int 8 [0x8]))) [1 parallel.jsta+0 S4 A64])) "CALRCH.f":77 86 {*movsi_internal}
     (nil))
(insn 16 15 17 4 (set (reg:SI 675 [ _626 ])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7fe96ef06630 parallel>)
                    (const_int 12 [0xc]))) [1 parallel.jend+0 S4 A32])) "CALRCH.f":77 86 {*movsi_internal}
     (nil))
(insn 17 16 54 4 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
        (reg:SI 674 [ _625 ])) "CALRCH.f":77 86 {*movsi_internal}
     (nil))
;;  succ:       5 (FALLTHRU)

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;;              9 [always] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 54 17 18 5 6 (nil) [1 uses])
(note 18 54 19 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 5 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (reg:SI 675 [ _626 ]))) "CALRCH.f":77 11 {*cmpsi_1}
     (nil))
(insn 20 19 21 5 (set (reg:QI 710)
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALRCH.f":77 678 {*setcc_qi}
     (nil))
(insn 21 20 22 5 (set (reg:SI 676 [ _628 ])
        (zero_extend:SI (reg:QI 710))) "CALRCH.f":77 140 {*zero_extendqisi2}
     (nil))
(insn 22 21 23 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 676 [ _628 ])
            (const_int 0 [0]))) "CALRCH.f":77 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 23 22 24 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1325)
            (pc))) "CALRCH.f":77 682 {*jcc}
     (nil)
 -> 1325)
;;  succ:       66
;;              6 (FALLTHRU)

;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(note 24 23 25 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 48 6 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
        (const_int 1 [0x1])) "CALRCH.f":78 86 {*movsi_internal}
     (nil))
;;  succ:       7 (FALLTHRU)

;; basic block 7, loop depth 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;;              8 [always] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 48 25 26 7 5 (nil) [1 uses])
(note 26 48 27 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 7 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
            (const_int 119 [0x77]))) "CALRCH.f":78 11 {*cmpsi_1}
     (nil))
(insn 28 27 29 7 (set (reg:QI 711)
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALRCH.f":78 678 {*setcc_qi}
     (nil))
(insn 29 28 30 7 (set (reg:SI 677 [ _630 ])
        (zero_extend:SI (reg:QI 711))) "CALRCH.f":78 140 {*zero_extendqisi2}
     (nil))
(insn 30 29 31 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 677 [ _630 ])
            (const_int 0 [0]))) "CALRCH.f":78 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 31 30 32 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1328)
            (pc))) "CALRCH.f":78 682 {*jcc}
     (nil)
 -> 1328)
;;  succ:       67
;;              8 (FALLTHRU)

;; basic block 8, loop depth 0, maybe hot
;;  prev block 7, next block 67, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7 (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(note 32 31 33 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 33 32 34 8 (set (reg:SI 712)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALRCH.f":79 86 {*movsi_internal}
     (nil))
(insn 34 33 35 8 (set (reg:DI 87 [ _1 ])
        (sign_extend:DI (reg:SI 712))) "CALRCH.f":79 149 {*extendsidi2_rex64}
     (nil))
(insn 35 34 36 8 (parallel [
            (set (reg:DI 88 [ _2 ])
                (mult:DI (reg:DI 87 [ _1 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":79 349 {*muldi3_1}
     (nil))
(insn 36 35 37 8 (set (reg:SI 713)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":79 86 {*movsi_internal}
     (nil))
(insn 37 36 38 8 (set (reg:DI 89 [ _3 ])
        (sign_extend:DI (reg:SI 713))) "CALRCH.f":79 149 {*extendsidi2_rex64}
     (nil))
(insn 38 37 39 8 (parallel [
            (set (reg:DI 90 [ _4 ])
                (mult:DI (reg:DI 89 [ _3 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":79 349 {*muldi3_1}
     (nil))
(insn 39 38 40 8 (parallel [
            (set (reg:DI 91 [ _5 ])
                (plus:DI (reg:DI 88 [ _2 ])
                    (reg:DI 90 [ _4 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":79 222 {*adddi_1}
     (nil))
(insn 40 39 41 8 (set (reg:SI 714)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALRCH.f":79 86 {*movsi_internal}
     (nil))
(insn 41 40 42 8 (set (reg:DI 92 [ _6 ])
        (sign_extend:DI (reg:SI 714))) "CALRCH.f":79 149 {*extendsidi2_rex64}
     (nil))
(insn 42 41 43 8 (parallel [
            (set (reg:DI 93 [ _7 ])
                (plus:DI (reg:DI 91 [ _5 ])
                    (reg:DI 92 [ _6 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":79 222 {*adddi_1}
     (nil))
(insn 43 42 44 8 (parallel [
            (set (reg:DI 94 [ _8 ])
                (plus:DI (reg:DI 93 [ _7 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":79 222 {*adddi_1}
     (nil))
(insn 44 43 45 8 (set (reg:SF 95 [ _9 ])
        (mem/c:SF (symbol_ref:DI ("options_") [flags 0x2]  <var_decl 0x7fe96ef06240 options>) [2 options.spval+0 S4 A128])) "CALRCH.f":1 131 {*movsf_internal}
     (nil))
(insn 45 44 46 8 (set (reg/f:DI 715)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -112 [0xffffffffffffff90])) [3 richno+0 S8 A64])) "CALRCH.f":79 85 {*movdi_internal}
     (nil))
(insn 46 45 47 8 (set (mem:SF (plus:DI (mult:DI (reg:DI 94 [ _8 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 715)) [2 *richno_631(D) S4 A32])
        (reg:SF 95 [ _9 ])) "CALRCH.f":79 131 {*movsf_internal}
     (nil))
(insn 47 46 1284 8 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":78 221 {*addsi_1}
     (nil))
(jump_insn 1284 47 1285 8 (set (pc)
        (label_ref 48)) "CALRCH.f":78 -1
     (nil)
 -> 48)
;;  succ:       7 [always] 

(barrier 1285 1284 1328)
;; basic block 67, loop depth 0, maybe hot
;;  prev block 8, next block 9, flags: (NEW, RTL, MODIFIED)
;;  pred:       7
;; bb 67 artificial_defs: { }
;; bb 67 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 1328 1285 1327 67 50 (nil) [1 uses])
(note 1327 1328 1329 67 [bb 67] NOTE_INSN_BASIC_BLOCK)
(insn 1329 1327 51 67 (const_int 0 [0]) "CALRCH.f":79 -1
     (nil))
;;  succ:       9 [always]  (FALLTHRU)

;; basic block 9, loop depth 0, maybe hot
;;  prev block 67, next block 66, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       67 [always]  (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 51 1329 52 9 4 (nil) [0 uses])
(note 52 51 53 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 53 52 1286 9 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":77 221 {*addsi_1}
     (nil))
(jump_insn 1286 53 1287 9 (set (pc)
        (label_ref 54)) "CALRCH.f":77 -1
     (nil)
 -> 54)
;;  succ:       5 [always] 

(barrier 1287 1286 1325)
;; basic block 66, loop depth 0, maybe hot
;;  prev block 9, next block 10, flags: (NEW, RTL, MODIFIED)
;;  pred:       5
;; bb 66 artificial_defs: { }
;; bb 66 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 1325 1287 1324 66 49 (nil) [1 uses])
(note 1324 1325 1326 66 [bb 66] NOTE_INSN_BASIC_BLOCK)
(insn 1326 1324 57 66 (const_int 0 [0]) "CALRCH.f":78 -1
     (nil))
;;  succ:       10 [always]  (FALLTHRU)

;; basic block 10, loop depth 0, maybe hot
;;  prev block 66, next block 65, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       66 [always]  (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 57 1326 58 10 3 (nil) [0 uses])
(note 58 57 59 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 59 58 1288 10 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":76 221 {*addsi_1}
     (nil))
(jump_insn 1288 59 1289 10 (set (pc)
        (label_ref 60)) "CALRCH.f":76 -1
     (nil)
 -> 60)
;;  succ:       3 [always] 

(barrier 1289 1288 1322)
;; basic block 65, loop depth 0, maybe hot
;;  prev block 10, next block 11, flags: (NEW, RTL, MODIFIED)
;;  pred:       3
;; bb 65 artificial_defs: { }
;; bb 65 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 1322 1289 1321 65 48 (nil) [1 uses])
(note 1321 1322 1323 65 [bb 65] NOTE_INSN_BASIC_BLOCK)
(insn 1323 1321 63 65 (const_int 0 [0]) "CALRCH.f":77 -1
     (nil))
;;  succ:       11 [always]  (FALLTHRU)

;; basic block 11, loop depth 0, maybe hot
;;  prev block 65, next block 12, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       65 [always]  (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 63 1323 64 11 2 (nil) [0 uses])
(note 64 63 65 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 65 64 66 11 (set (reg:SI 678 [ _636 ])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7fe96ef06630 parallel>)
                    (const_int 8 [0x8]))) [1 parallel.jsta+0 S4 A64])) "CALRCH.f":85 86 {*movsi_internal}
     (nil))
(insn 66 65 67 11 (set (reg:SI 679 [ _637 ])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7fe96ef06630 parallel>)
                    (const_int 12 [0xc]))) [1 parallel.jend+0 S4 A32])) "CALRCH.f":85 86 {*movsi_internal}
     (nil))
(insn 67 66 111 11 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
        (reg:SI 678 [ _636 ])) "CALRCH.f":85 86 {*movsi_internal}
     (nil))
;;  succ:       12 (FALLTHRU)

;; basic block 12, loop depth 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       11 (FALLTHRU)
;;              16 [always] 
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 111 67 68 12 11 (nil) [1 uses])
(note 68 111 69 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 69 68 70 12 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (reg:SI 679 [ _637 ]))) "CALRCH.f":85 11 {*cmpsi_1}
     (nil))
(insn 70 69 71 12 (set (reg:QI 716)
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALRCH.f":85 678 {*setcc_qi}
     (nil))
(insn 71 70 72 12 (set (reg:SI 680 [ _639 ])
        (zero_extend:SI (reg:QI 716))) "CALRCH.f":85 140 {*zero_extendqisi2}
     (nil))
(insn 72 71 73 12 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 680 [ _639 ])
            (const_int 0 [0]))) "CALRCH.f":85 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 73 72 74 12 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1331)
            (pc))) "CALRCH.f":85 682 {*jcc}
     (nil)
 -> 1331)
;;  succ:       68
;;              13 (FALLTHRU)

;; basic block 13, loop depth 0, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       12 (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(note 74 73 75 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 75 74 105 13 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
        (const_int 1 [0x1])) "CALRCH.f":86 86 {*movsi_internal}
     (nil))
;;  succ:       14 (FALLTHRU)

;; basic block 14, loop depth 0, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       13 (FALLTHRU)
;;              15 [always] 
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 105 75 76 14 10 (nil) [1 uses])
(note 76 105 77 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 77 76 78 14 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
            (const_int 119 [0x77]))) "CALRCH.f":86 11 {*cmpsi_1}
     (nil))
(insn 78 77 79 14 (set (reg:QI 717)
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALRCH.f":86 678 {*setcc_qi}
     (nil))
(insn 79 78 80 14 (set (reg:SI 681 [ _641 ])
        (zero_extend:SI (reg:QI 717))) "CALRCH.f":86 140 {*zero_extendqisi2}
     (nil))
(insn 80 79 81 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 681 [ _641 ])
            (const_int 0 [0]))) "CALRCH.f":86 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 81 80 82 14 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1334)
            (pc))) "CALRCH.f":86 682 {*jcc}
     (nil)
 -> 1334)
;;  succ:       69
;;              15 (FALLTHRU)

;; basic block 15, loop depth 0, maybe hot
;;  prev block 14, next block 69, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       14 (FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(note 82 81 83 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 83 82 84 15 (set (reg:SI 718)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":87 86 {*movsi_internal}
     (nil))
(insn 84 83 85 15 (set (reg:DI 96 [ _10 ])
        (sign_extend:DI (reg:SI 718))) "CALRCH.f":87 149 {*extendsidi2_rex64}
     (nil))
(insn 85 84 86 15 (parallel [
            (set (reg:DI 97 [ _11 ])
                (mult:DI (reg:DI 96 [ _10 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":87 349 {*muldi3_1}
     (nil))
(insn 86 85 87 15 (set (reg:SI 719)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALRCH.f":87 86 {*movsi_internal}
     (nil))
(insn 87 86 88 15 (set (reg:DI 98 [ _12 ])
        (sign_extend:DI (reg:SI 719))) "CALRCH.f":87 149 {*extendsidi2_rex64}
     (nil))
(insn 88 87 89 15 (parallel [
            (set (reg:DI 99 [ _13 ])
                (plus:DI (reg:DI 97 [ _11 ])
                    (reg:DI 98 [ _12 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":87 222 {*adddi_1}
     (nil))
(insn 89 88 90 15 (parallel [
            (set (reg:DI 100 [ _14 ])
                (plus:DI (reg:DI 99 [ _13 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":87 222 {*adddi_1}
     (nil))
(insn 90 89 91 15 (set (reg/f:DI 720)
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7fe96ef1b900 vrbls>)) "CALRCH.f":87 85 {*movdi_internal}
     (nil))
(insn 91 90 92 15 (parallel [
            (set (reg:DI 721)
                (plus:DI (reg:DI 100 [ _14 ])
                    (const_int 59262 [0xe77e])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":87 222 {*adddi_1}
     (nil))
(insn 92 91 93 15 (set (reg:SF 101 [ _15 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 721)
                    (const_int 4 [0x4]))
                (reg/f:DI 720)) [2 vrbls.fis S4 A32])) "CALRCH.f":87 131 {*movsf_internal}
     (nil))
(insn 93 92 94 15 (set (reg:SI 722)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":87 86 {*movsi_internal}
     (nil))
(insn 94 93 95 15 (set (reg:DI 102 [ _16 ])
        (sign_extend:DI (reg:SI 722))) "CALRCH.f":87 149 {*extendsidi2_rex64}
     (nil))
(insn 95 94 96 15 (parallel [
            (set (reg:DI 103 [ _17 ])
                (mult:DI (reg:DI 102 [ _16 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":87 349 {*muldi3_1}
     (nil))
(insn 96 95 97 15 (set (reg:SI 723)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALRCH.f":87 86 {*movsi_internal}
     (nil))
(insn 97 96 98 15 (set (reg:DI 104 [ _18 ])
        (sign_extend:DI (reg:SI 723))) "CALRCH.f":87 149 {*extendsidi2_rex64}
     (nil))
(insn 98 97 99 15 (parallel [
            (set (reg:DI 105 [ _19 ])
                (plus:DI (reg:DI 103 [ _17 ])
                    (reg:DI 104 [ _18 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":87 222 {*adddi_1}
     (nil))
(insn 99 98 100 15 (parallel [
            (set (reg:DI 106 [ _20 ])
                (plus:DI (reg:DI 105 [ _19 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":87 222 {*adddi_1}
     (nil))
(insn 100 99 101 15 (set (reg:SF 724)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) "CALRCH.f":87 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 9.80000019073486328125e+0 [0x0.9ccccdp+4])
        (nil)))
(insn 101 100 102 15 (set (reg:SF 107 [ _21 ])
        (mult:SF (reg:SF 101 [ _15 ])
            (reg:SF 724))) "CALRCH.f":87 838 {*fop_sf_comm}
     (nil))
(insn 102 101 103 15 (set (reg/f:DI 725)
        (symbol_ref:DI ("hgt.4223") [flags 0x202]  <var_decl 0x7fe96ef1e360 hgt>)) "CALRCH.f":87 85 {*movdi_internal}
     (nil))
(insn 103 102 104 15 (set (mem:SF (plus:DI (mult:DI (reg:DI 106 [ _20 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 725)) [2 hgt S4 A32])
        (reg:SF 107 [ _21 ])) "CALRCH.f":87 131 {*movsf_internal}
     (nil))
(insn 104 103 1290 15 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":86 221 {*addsi_1}
     (nil))
(jump_insn 1290 104 1291 15 (set (pc)
        (label_ref 105)) "CALRCH.f":86 -1
     (nil)
 -> 105)
;;  succ:       14 [always] 

(barrier 1291 1290 1334)
;; basic block 69, loop depth 0, maybe hot
;;  prev block 15, next block 16, flags: (NEW, RTL, MODIFIED)
;;  pred:       14
;; bb 69 artificial_defs: { }
;; bb 69 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 1334 1291 1333 69 52 (nil) [1 uses])
(note 1333 1334 1335 69 [bb 69] NOTE_INSN_BASIC_BLOCK)
(insn 1335 1333 108 69 (const_int 0 [0]) "CALRCH.f":87 -1
     (nil))
;;  succ:       16 [always]  (FALLTHRU)

;; basic block 16, loop depth 0, maybe hot
;;  prev block 69, next block 68, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       69 [always]  (FALLTHRU)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 108 1335 109 16 9 (nil) [0 uses])
(note 109 108 110 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 110 109 1292 16 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":85 221 {*addsi_1}
     (nil))
(jump_insn 1292 110 1293 16 (set (pc)
        (label_ref 111)) "CALRCH.f":85 -1
     (nil)
 -> 111)
;;  succ:       12 [always] 

(barrier 1293 1292 1331)
;; basic block 68, loop depth 0, maybe hot
;;  prev block 16, next block 17, flags: (NEW, RTL, MODIFIED)
;;  pred:       12
;; bb 68 artificial_defs: { }
;; bb 68 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 1331 1293 1330 68 51 (nil) [1 uses])
(note 1330 1331 1332 68 [bb 68] NOTE_INSN_BASIC_BLOCK)
(insn 1332 1330 114 68 (const_int 0 [0]) "CALRCH.f":86 -1
     (nil))
;;  succ:       17 [always]  (FALLTHRU)

;; basic block 17, loop depth 0, maybe hot
;;  prev block 68, next block 18, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       68 [always]  (FALLTHRU)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 114 1332 115 17 8 (nil) [0 uses])
(note 115 114 116 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 116 115 588 17 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
        (const_int 38 [0x26])) "CALRCH.f":95 86 {*movsi_internal}
     (nil))
;;  succ:       18 (FALLTHRU)

;; basic block 18, loop depth 0, maybe hot
;;  prev block 17, next block 19, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       17 (FALLTHRU)
;;              43 [always] 
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 588 116 117 18 29 (nil) [1 uses])
(note 117 588 118 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 118 117 119 18 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
            (const_int 0 [0]))) "CALRCH.f":95 7 {*cmpsi_ccno_1}
     (nil))
(insn 119 118 120 18 (set (reg:QI 726)
        (le:QI (reg:CCNO 17 flags)
            (const_int 0 [0]))) "CALRCH.f":95 678 {*setcc_qi}
     (nil))
(insn 120 119 121 18 (set (reg:SI 682 [ _646 ])
        (zero_extend:SI (reg:QI 726))) "CALRCH.f":95 140 {*zero_extendqisi2}
     (nil))
(insn 121 120 122 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 682 [ _646 ])
            (const_int 0 [0]))) "CALRCH.f":95 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 122 121 123 18 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1337)
            (pc))) "CALRCH.f":95 682 {*jcc}
     (nil)
 -> 1337)
;;  succ:       70
;;              19 (FALLTHRU)

;; basic block 19, loop depth 0, maybe hot
;;  prev block 18, next block 20, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       18 (FALLTHRU)
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(note 123 122 124 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 124 123 125 19 (set (reg:SI 683 [ _647 ])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7fe96ef06630 parallel>)
                    (const_int 8 [0x8]))) [1 parallel.jsta+0 S4 A64])) "CALRCH.f":96 86 {*movsi_internal}
     (nil))
(insn 125 124 126 19 (set (reg:SI 684 [ _648 ])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7fe96ef06630 parallel>)
                    (const_int 12 [0xc]))) [1 parallel.jend+0 S4 A32])) "CALRCH.f":96 86 {*movsi_internal}
     (nil))
(insn 126 125 226 19 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
        (reg:SI 683 [ _647 ])) "CALRCH.f":96 86 {*movsi_internal}
     (nil))
;;  succ:       20 (FALLTHRU)

;; basic block 20, loop depth 0, maybe hot
;;  prev block 19, next block 21, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       19 (FALLTHRU)
;;              24 [always] 
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 226 126 127 20 16 (nil) [1 uses])
(note 127 226 128 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 128 127 129 20 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (reg:SI 684 [ _648 ]))) "CALRCH.f":96 11 {*cmpsi_1}
     (nil))
(insn 129 128 130 20 (set (reg:QI 727)
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALRCH.f":96 678 {*setcc_qi}
     (nil))
(insn 130 129 131 20 (set (reg:SI 685 [ _650 ])
        (zero_extend:SI (reg:QI 727))) "CALRCH.f":96 140 {*zero_extendqisi2}
     (nil))
(insn 131 130 132 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 685 [ _650 ])
            (const_int 0 [0]))) "CALRCH.f":96 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 132 131 133 20 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1340)
            (pc))) "CALRCH.f":96 682 {*jcc}
     (nil)
 -> 1340)
;;  succ:       71
;;              21 (FALLTHRU)

;; basic block 21, loop depth 0, maybe hot
;;  prev block 20, next block 22, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       20 (FALLTHRU)
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(note 133 132 134 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 134 133 220 21 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
        (const_int 1 [0x1])) "CALRCH.f":97 86 {*movsi_internal}
     (nil))
;;  succ:       22 (FALLTHRU)

;; basic block 22, loop depth 0, maybe hot
;;  prev block 21, next block 23, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       21 (FALLTHRU)
;;              23 [always] 
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 220 134 135 22 15 (nil) [1 uses])
(note 135 220 136 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 136 135 137 22 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
            (const_int 119 [0x77]))) "CALRCH.f":97 11 {*cmpsi_1}
     (nil))
(insn 137 136 138 22 (set (reg:QI 728)
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALRCH.f":97 678 {*setcc_qi}
     (nil))
(insn 138 137 139 22 (set (reg:SI 686 [ _652 ])
        (zero_extend:SI (reg:QI 728))) "CALRCH.f":97 140 {*zero_extendqisi2}
     (nil))
(insn 139 138 140 22 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 686 [ _652 ])
            (const_int 0 [0]))) "CALRCH.f":97 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 140 139 141 22 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1343)
            (pc))) "CALRCH.f":97 682 {*jcc}
     (nil)
 -> 1343)
;;  succ:       72
;;              23 (FALLTHRU)

;; basic block 23, loop depth 0, maybe hot
;;  prev block 22, next block 72, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       22 (FALLTHRU)
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(note 141 140 142 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 142 141 143 23 (set (reg:SI 729)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":98 86 {*movsi_internal}
     (nil))
(insn 143 142 144 23 (set (reg:DI 108 [ _22 ])
        (sign_extend:DI (reg:SI 729))) "CALRCH.f":98 149 {*extendsidi2_rex64}
     (nil))
(insn 144 143 145 23 (parallel [
            (set (reg:DI 109 [ _23 ])
                (mult:DI (reg:DI 108 [ _22 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":98 349 {*muldi3_1}
     (nil))
(insn 145 144 146 23 (set (reg:SI 730)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALRCH.f":98 86 {*movsi_internal}
     (nil))
(insn 146 145 147 23 (set (reg:DI 110 [ _24 ])
        (sign_extend:DI (reg:SI 730))) "CALRCH.f":98 149 {*extendsidi2_rex64}
     (nil))
(insn 147 146 148 23 (parallel [
            (set (reg:DI 111 [ _25 ])
                (plus:DI (reg:DI 109 [ _23 ])
                    (reg:DI 110 [ _24 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":98 222 {*adddi_1}
     (nil))
(insn 148 147 149 23 (parallel [
            (set (reg:DI 112 [ _26 ])
                (plus:DI (reg:DI 111 [ _25 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":98 222 {*adddi_1}
     (nil))
(insn 149 148 150 23 (set (reg/f:DI 731)
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7fe96eef8870 extra>)) "CALRCH.f":98 85 {*movdi_internal}
     (nil))
(insn 150 149 151 23 (parallel [
            (set (reg:DI 732)
                (plus:DI (reg:DI 112 [ _26 ])
                    (const_int 4647393 [0x46e9e1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":98 222 {*adddi_1}
     (nil))
(insn 151 150 152 23 (set (reg:SF 113 [ _27 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 732)
                    (const_int 4 [0x4]))
                (reg/f:DI 731)) [2 extra.pdsl S4 A32])) "CALRCH.f":98 131 {*movsf_internal}
     (nil))
(insn 152 151 153 23 (set (reg:SI 733)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALRCH.f":98 86 {*movsi_internal}
     (nil))
(insn 153 152 154 23 (set (reg:DI 114 [ _28 ])
        (sign_extend:DI (reg:SI 733))) "CALRCH.f":98 149 {*extendsidi2_rex64}
     (nil))
(insn 154 153 155 23 (parallel [
            (set (reg:DI 115 [ _29 ])
                (plus:DI (reg:DI 114 [ _28 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":98 222 {*adddi_1}
     (nil))
(insn 155 154 156 23 (set (reg/f:DI 734)
        (symbol_ref:DI ("phys_") [flags 0x202]  <var_decl 0x7fe96ef06ea0 phys>)) "CALRCH.f":98 85 {*movdi_internal}
     (nil))
(insn 156 155 157 23 (parallel [
            (set (reg:DI 735)
                (plus:DI (reg:DI 115 [ _29 ])
                    (const_int 59 [0x3b])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":98 222 {*adddi_1}
     (nil))
(insn 157 156 158 23 (set (reg:SF 116 [ _30 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 735)
                    (const_int 4 [0x4]))
                (reg/f:DI 734)) [2 phys.aeta S4 A32])) "CALRCH.f":98 131 {*movsf_internal}
     (nil))
(insn 158 157 159 23 (set (reg:SF 117 [ _31 ])
        (mult:SF (reg:SF 113 [ _27 ])
            (reg:SF 116 [ _30 ]))) "CALRCH.f":98 838 {*fop_sf_comm}
     (nil))
(insn 159 158 160 23 (set (reg/f:DI 736)
        (symbol_ref:DI ("phys_") [flags 0x202]  <var_decl 0x7fe96ef06ea0 phys>)) "CALRCH.f":1 85 {*movdi_internal}
     (nil))
(insn 160 159 161 23 (set (reg:SF 118 [ _32 ])
        (mem/c:SF (plus:DI (reg/f:DI 736)
                (const_int 4 [0x4])) [2 phys.pt+0 S4 A32])) "CALRCH.f":1 131 {*movsf_internal}
     (nil))
(insn 161 160 162 23 (set (reg:SF 119 [ _33 ])
        (plus:SF (reg:SF 117 [ _31 ])
            (reg:SF 118 [ _32 ]))) "CALRCH.f":98 838 {*fop_sf_comm}
     (nil))
(insn 162 161 163 23 (set (reg:SF 120 [ _34 ])
        (reg:SF 119 [ _33 ])) "CALRCH.f":98 131 {*movsf_internal}
     (nil))
(insn 163 162 164 23 (set (reg:SF 737)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S4 A32])) "CALRCH.f":98 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+5 [0x0.c35p+17])
        (nil)))
(insn 164 163 165 23 (set (reg:SF 121 [ _35 ])
        (div:SF (reg:SF 737)
            (reg:SF 120 [ _34 ]))) "CALRCH.f":98 841 {*fop_sf_1}
     (nil))
(insn 165 164 166 23 (set (reg:SF 687 [ _653 ])
        (reg:SF 121 [ _35 ])) "CALRCH.f":98 131 {*movsf_internal}
     (nil))
(insn 166 165 167 23 (set (reg:SF 22 xmm1)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0  S4 A32])) "CALRCH.f":98 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 2.8589642047882080078125e-1 [0x0.926104p-1])
        (nil)))
(insn 167 166 168 23 (set (reg:SF 21 xmm0)
        (reg:SF 687 [ _653 ])) "CALRCH.f":98 131 {*movsf_internal}
     (nil))
(call_insn/u 168 167 169 23 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("powf") [flags 0x41]  <function_decl 0x7fe96ed74100 __builtin_powf>) [0 __builtin_powf S1 A8])
            (const_int 0 [0]))) "CALRCH.f":98 700 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (expr_list:SF (use (reg:SF 22 xmm1))
            (nil))))
(insn 169 168 170 23 (set (reg:SF 738)
        (reg:SF 21 xmm0)) "CALRCH.f":98 131 {*movsf_internal}
     (nil))
(insn 170 169 171 23 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 ape+0 S4 A32])
        (reg:SF 738)) "CALRCH.f":98 131 {*movsf_internal}
     (nil))
(insn 171 170 172 23 (set (reg:SI 739)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALRCH.f":99 86 {*movsi_internal}
     (nil))
(insn 172 171 173 23 (set (reg:DI 122 [ _36 ])
        (sign_extend:DI (reg:SI 739))) "CALRCH.f":99 149 {*extendsidi2_rex64}
     (nil))
(insn 173 172 174 23 (parallel [
            (set (reg:DI 123 [ _37 ])
                (mult:DI (reg:DI 122 [ _36 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":99 349 {*muldi3_1}
     (nil))
(insn 174 173 175 23 (set (reg:SI 740)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":99 86 {*movsi_internal}
     (nil))
(insn 175 174 176 23 (set (reg:DI 124 [ _38 ])
        (sign_extend:DI (reg:SI 740))) "CALRCH.f":99 149 {*extendsidi2_rex64}
     (nil))
(insn 176 175 177 23 (parallel [
            (set (reg:DI 125 [ _39 ])
                (mult:DI (reg:DI 124 [ _38 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":99 349 {*muldi3_1}
     (nil))
(insn 177 176 178 23 (parallel [
            (set (reg:DI 126 [ _40 ])
                (plus:DI (reg:DI 123 [ _37 ])
                    (reg:DI 125 [ _39 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":99 222 {*adddi_1}
     (nil))
(insn 178 177 179 23 (set (reg:SI 741)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALRCH.f":99 86 {*movsi_internal}
     (nil))
(insn 179 178 180 23 (set (reg:DI 127 [ _41 ])
        (sign_extend:DI (reg:SI 741))) "CALRCH.f":99 149 {*extendsidi2_rex64}
     (nil))
(insn 180 179 181 23 (parallel [
            (set (reg:DI 128 [ _42 ])
                (plus:DI (reg:DI 126 [ _40 ])
                    (reg:DI 127 [ _41 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":99 222 {*adddi_1}
     (nil))
(insn 181 180 182 23 (parallel [
            (set (reg:DI 129 [ _43 ])
                (plus:DI (reg:DI 128 [ _42 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":99 222 {*adddi_1}
     (nil))
(insn 182 181 183 23 (set (reg/f:DI 742)
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7fe96ef1b900 vrbls>)) "CALRCH.f":99 85 {*movdi_internal}
     (nil))
(insn 183 182 184 23 (parallel [
            (set (reg:DI 743)
                (plus:DI (reg:DI 129 [ _43 ])
                    (const_int 3466827 [0x34e64b])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":99 222 {*adddi_1}
     (nil))
(insn 184 183 185 23 (set (reg:SF 130 [ _44 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 743)
                    (const_int 4 [0x4]))
                (reg/f:DI 742)) [2 vrbls.q S4 A32])) "CALRCH.f":99 131 {*movsf_internal}
     (nil))
(insn 185 184 186 23 (set (reg:SF 744)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC3") [flags 0x2]) [0  S4 A32])) "CALRCH.f":99 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 6.07999980449676513671875e-1 [0x0.9ba5e3p+0])
        (nil)))
(insn 186 185 187 23 (set (reg:SF 131 [ _45 ])
        (mult:SF (reg:SF 130 [ _44 ])
            (reg:SF 744))) "CALRCH.f":99 838 {*fop_sf_comm}
     (nil))
(insn 187 186 188 23 (set (reg:SF 745)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC4") [flags 0x2]) [0  S4 A32])) "CALRCH.f":99 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 188 187 189 23 (set (reg:SF 132 [ _46 ])
        (plus:SF (reg:SF 131 [ _45 ])
            (reg:SF 745))) "CALRCH.f":99 838 {*fop_sf_comm}
     (nil))
(insn 189 188 190 23 (set (reg:SF 133 [ _47 ])
        (reg:SF 132 [ _46 ])) "CALRCH.f":99 131 {*movsf_internal}
     (nil))
(insn 190 189 191 23 (set (reg:SI 746)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALRCH.f":99 86 {*movsi_internal}
     (nil))
(insn 191 190 192 23 (set (reg:DI 134 [ _48 ])
        (sign_extend:DI (reg:SI 746))) "CALRCH.f":99 149 {*extendsidi2_rex64}
     (nil))
(insn 192 191 193 23 (parallel [
            (set (reg:DI 135 [ _49 ])
                (mult:DI (reg:DI 134 [ _48 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":99 349 {*muldi3_1}
     (nil))
(insn 193 192 194 23 (set (reg:SI 747)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":99 86 {*movsi_internal}
     (nil))
(insn 194 193 195 23 (set (reg:DI 136 [ _50 ])
        (sign_extend:DI (reg:SI 747))) "CALRCH.f":99 149 {*extendsidi2_rex64}
     (nil))
(insn 195 194 196 23 (parallel [
            (set (reg:DI 137 [ _51 ])
                (mult:DI (reg:DI 136 [ _50 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":99 349 {*muldi3_1}
     (nil))
(insn 196 195 197 23 (parallel [
            (set (reg:DI 138 [ _52 ])
                (plus:DI (reg:DI 135 [ _49 ])
                    (reg:DI 137 [ _51 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":99 222 {*adddi_1}
     (nil))
(insn 197 196 198 23 (set (reg:SI 748)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALRCH.f":99 86 {*movsi_internal}
     (nil))
(insn 198 197 199 23 (set (reg:DI 139 [ _53 ])
        (sign_extend:DI (reg:SI 748))) "CALRCH.f":99 149 {*extendsidi2_rex64}
     (nil))
(insn 199 198 200 23 (parallel [
            (set (reg:DI 140 [ _54 ])
                (plus:DI (reg:DI 138 [ _52 ])
                    (reg:DI 139 [ _53 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":99 222 {*adddi_1}
     (nil))
(insn 200 199 201 23 (parallel [
            (set (reg:DI 141 [ _55 ])
                (plus:DI (reg:DI 140 [ _54 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":99 222 {*adddi_1}
     (nil))
(insn 201 200 202 23 (set (reg/f:DI 749)
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7fe96ef1b900 vrbls>)) "CALRCH.f":99 85 {*movdi_internal}
     (nil))
(insn 202 201 203 23 (parallel [
            (set (reg:DI 750)
                (plus:DI (reg:DI 141 [ _55 ])
                    (const_int 2340849 [0x23b7f1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":99 222 {*adddi_1}
     (nil))
(insn 203 202 204 23 (set (reg:SF 142 [ _56 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 750)
                    (const_int 4 [0x4]))
                (reg/f:DI 749)) [2 vrbls.t S4 A32])) "CALRCH.f":99 131 {*movsf_internal}
     (nil))
(insn 204 203 205 23 (set (reg:SF 143 [ _57 ])
        (mult:SF (reg:SF 133 [ _47 ])
            (reg:SF 142 [ _56 ]))) "CALRCH.f":99 838 {*fop_sf_comm}
     (nil))
(insn 205 204 206 23 (set (reg:SI 751)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALRCH.f":99 86 {*movsi_internal}
     (nil))
(insn 206 205 207 23 (set (reg:DI 144 [ _58 ])
        (sign_extend:DI (reg:SI 751))) "CALRCH.f":99 149 {*extendsidi2_rex64}
     (nil))
(insn 207 206 208 23 (parallel [
            (set (reg:DI 145 [ _59 ])
                (mult:DI (reg:DI 144 [ _58 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":99 349 {*muldi3_1}
     (nil))
(insn 208 207 209 23 (set (reg:SI 752)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":99 86 {*movsi_internal}
     (nil))
(insn 209 208 210 23 (set (reg:DI 146 [ _60 ])
        (sign_extend:DI (reg:SI 752))) "CALRCH.f":99 149 {*extendsidi2_rex64}
     (nil))
(insn 210 209 211 23 (parallel [
            (set (reg:DI 147 [ _61 ])
                (mult:DI (reg:DI 146 [ _60 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":99 349 {*muldi3_1}
     (nil))
(insn 211 210 212 23 (parallel [
            (set (reg:DI 148 [ _62 ])
                (plus:DI (reg:DI 145 [ _59 ])
                    (reg:DI 147 [ _61 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":99 222 {*adddi_1}
     (nil))
(insn 212 211 213 23 (set (reg:SI 753)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALRCH.f":99 86 {*movsi_internal}
     (nil))
(insn 213 212 214 23 (set (reg:DI 149 [ _63 ])
        (sign_extend:DI (reg:SI 753))) "CALRCH.f":99 149 {*extendsidi2_rex64}
     (nil))
(insn 214 213 215 23 (parallel [
            (set (reg:DI 150 [ _64 ])
                (plus:DI (reg:DI 148 [ _62 ])
                    (reg:DI 149 [ _63 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":99 222 {*adddi_1}
     (nil))
(insn 215 214 216 23 (parallel [
            (set (reg:DI 151 [ _65 ])
                (plus:DI (reg:DI 150 [ _64 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":99 222 {*adddi_1}
     (nil))
(insn 216 215 217 23 (set (reg:SF 152 [ _66 ])
        (mult:SF (reg:SF 143 [ _57 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [2 ape+0 S4 A32]))) "CALRCH.f":99 838 {*fop_sf_comm}
     (nil))
(insn 217 216 218 23 (set (reg/f:DI 754)
        (symbol_ref:DI ("thv.4234") [flags 0x202]  <var_decl 0x7fe96ef1e900 thv>)) "CALRCH.f":99 85 {*movdi_internal}
     (nil))
(insn 218 217 219 23 (set (mem:SF (plus:DI (mult:DI (reg:DI 151 [ _65 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 754)) [2 thv S4 A32])
        (reg:SF 152 [ _66 ])) "CALRCH.f":99 131 {*movsf_internal}
     (nil))
(insn 219 218 1294 23 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":97 221 {*addsi_1}
     (nil))
(jump_insn 1294 219 1295 23 (set (pc)
        (label_ref 220)) "CALRCH.f":97 -1
     (nil)
 -> 220)
;;  succ:       22 [always] 

(barrier 1295 1294 1343)
;; basic block 72, loop depth 0, maybe hot
;;  prev block 23, next block 24, flags: (NEW, RTL, MODIFIED)
;;  pred:       22
;; bb 72 artificial_defs: { }
;; bb 72 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 1343 1295 1342 72 55 (nil) [1 uses])
(note 1342 1343 1344 72 [bb 72] NOTE_INSN_BASIC_BLOCK)
(insn 1344 1342 223 72 (const_int 0 [0]) "CALRCH.f":99 -1
     (nil))
;;  succ:       24 [always]  (FALLTHRU)

;; basic block 24, loop depth 0, maybe hot
;;  prev block 72, next block 71, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       72 [always]  (FALLTHRU)
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 223 1344 224 24 14 (nil) [0 uses])
(note 224 223 225 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 225 224 1296 24 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":96 221 {*addsi_1}
     (nil))
(jump_insn 1296 225 1297 24 (set (pc)
        (label_ref 226)) "CALRCH.f":96 -1
     (nil)
 -> 226)
;;  succ:       20 [always] 

(barrier 1297 1296 1340)
;; basic block 71, loop depth 0, maybe hot
;;  prev block 24, next block 25, flags: (NEW, RTL, MODIFIED)
;;  pred:       20
;; bb 71 artificial_defs: { }
;; bb 71 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 1340 1297 1339 71 54 (nil) [1 uses])
(note 1339 1340 1341 71 [bb 71] NOTE_INSN_BASIC_BLOCK)
(insn 1341 1339 229 71 (const_int 0 [0]) "CALRCH.f":97 -1
     (nil))
;;  succ:       25 [always]  (FALLTHRU)

;; basic block 25, loop depth 0, maybe hot
;;  prev block 71, next block 26, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       71 [always]  (FALLTHRU)
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 229 1341 230 25 13 (nil) [0 uses])
(note 230 229 231 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 231 230 232 25 (set (reg:SI 755)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALRCH.f":103 86 {*movsi_internal}
     (nil))
(insn 232 231 233 25 (set (reg:DI 153 [ _67 ])
        (sign_extend:DI (reg:SI 755))) "CALRCH.f":103 149 {*extendsidi2_rex64}
     (nil))
(insn 233 232 234 25 (parallel [
            (set (reg:DI 154 [ _68 ])
                (plus:DI (reg:DI 153 [ _67 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":103 222 {*adddi_1}
     (nil))
(insn 234 233 235 25 (parallel [
            (set (reg:DI 155 [ _69 ])
                (mult:DI (reg:DI 154 [ _68 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":103 349 {*muldi3_1}
     (nil))
(insn 235 234 236 25 (parallel [
            (set (reg:DI 756)
                (ashift:DI (reg:DI 155 [ _69 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":103 551 {*ashldi3_1}
     (nil))
(insn 236 235 237 25 (set (reg:DI 757)
        (symbol_ref:DI ("thv.4234") [flags 0x202]  <var_decl 0x7fe96ef1e900 thv>)) "CALRCH.f":103 85 {*movdi_internal}
     (nil))
(insn 237 236 238 25 (parallel [
            (set (reg/f:DI 156 [ _70 ])
                (plus:DI (reg:DI 756)
                    (reg:DI 757)))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":103 222 {*adddi_1}
     (nil))
(insn 238 237 239 25 (set (reg:DI 5 di)
        (reg/f:DI 156 [ _70 ])) "CALRCH.f":103 85 {*movdi_internal}
     (nil))
(insn 239 238 240 25 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CALRCH.f":103 88 {*movqi_internal}
     (nil))
(call_insn 240 239 241 25 (call (mem:QI (symbol_ref:DI ("exch_") [flags 0x41]  <function_decl 0x7fe96eeef600 exch>) [0 exch S1 A8])
        (const_int 0 [0])) "CALRCH.f":103 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 241 240 242 25 (set (reg:SI 688 [ _659 ])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7fe96ef06630 parallel>)
                    (const_int 8 [0x8]))) [1 parallel.jsta+0 S4 A64])) "CALRCH.f":107 86 {*movsi_internal}
     (nil))
(insn 242 241 243 25 (set (reg:SI 689 [ _660 ])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7fe96ef06630 parallel>)
                    (const_int 20 [0x14]))) [1 parallel.jend_m+0 S4 A32])) "CALRCH.f":107 86 {*movsi_internal}
     (nil))
(insn 243 242 345 25 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
        (reg:SI 688 [ _659 ])) "CALRCH.f":107 86 {*movsi_internal}
     (nil))
;;  succ:       26 (FALLTHRU)

;; basic block 26, loop depth 0, maybe hot
;;  prev block 25, next block 27, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       25 (FALLTHRU)
;;              30 [always] 
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 345 243 244 26 20 (nil) [1 uses])
(note 244 345 245 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 245 244 246 26 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (reg:SI 689 [ _660 ]))) "CALRCH.f":107 11 {*cmpsi_1}
     (nil))
(insn 246 245 247 26 (set (reg:QI 758)
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALRCH.f":107 678 {*setcc_qi}
     (nil))
(insn 247 246 248 26 (set (reg:SI 690 [ _662 ])
        (zero_extend:SI (reg:QI 758))) "CALRCH.f":107 140 {*zero_extendqisi2}
     (nil))
(insn 248 247 249 26 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 690 [ _662 ])
            (const_int 0 [0]))) "CALRCH.f":107 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 249 248 250 26 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1346)
            (pc))) "CALRCH.f":107 682 {*jcc}
     (nil)
 -> 1346)
;;  succ:       73
;;              27 (FALLTHRU)

;; basic block 27, loop depth 0, maybe hot
;;  prev block 26, next block 28, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       26 (FALLTHRU)
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(note 250 249 251 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 251 250 339 27 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
        (const_int 1 [0x1])) "CALRCH.f":108 86 {*movsi_internal}
     (nil))
;;  succ:       28 (FALLTHRU)

;; basic block 28, loop depth 0, maybe hot
;;  prev block 27, next block 29, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       27 (FALLTHRU)
;;              29 [always] 
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 339 251 252 28 19 (nil) [1 uses])
(note 252 339 253 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 253 252 254 28 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
            (const_int 118 [0x76]))) "CALRCH.f":108 11 {*cmpsi_1}
     (nil))
(insn 254 253 255 28 (set (reg:QI 759)
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALRCH.f":108 678 {*setcc_qi}
     (nil))
(insn 255 254 256 28 (set (reg:SI 691 [ _664 ])
        (zero_extend:SI (reg:QI 759))) "CALRCH.f":108 140 {*zero_extendqisi2}
     (nil))
(insn 256 255 257 28 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 691 [ _664 ])
            (const_int 0 [0]))) "CALRCH.f":108 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 257 256 258 28 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1349)
            (pc))) "CALRCH.f":108 682 {*jcc}
     (nil)
 -> 1349)
;;  succ:       74
;;              29 (FALLTHRU)

;; basic block 29, loop depth 0, maybe hot
;;  prev block 28, next block 74, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       28 (FALLTHRU)
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(note 258 257 259 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 259 258 260 29 (set (reg:SI 760)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":109 86 {*movsi_internal}
     (nil))
(insn 260 259 261 29 (set (reg:DI 157 [ _71 ])
        (sign_extend:DI (reg:SI 760))) "CALRCH.f":109 149 {*extendsidi2_rex64}
     (nil))
(insn 261 260 262 29 (parallel [
            (set (reg:DI 158 [ _72 ])
                (plus:DI (reg:DI 157 [ _71 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":109 222 {*adddi_1}
     (nil))
(insn 262 261 266 29 (set (reg:SI 159 [ _73 ])
        (mem:SI (plus:DI (mult:DI (reg:DI 158 [ _72 ])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("indx_") [flags 0x2]  <var_decl 0x7fe96ef00630 indx>)) [1 indx.ihe S4 A32])) "CALRCH.f":109 86 {*movsi_internal}
     (nil))
(insn 266 262 267 29 (set (reg:SI 764)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALRCH.f":109 86 {*movsi_internal}
     (nil))
(insn 267 266 268 29 (parallel [
            (set (reg:SI 763)
                (plus:SI (reg:SI 159 [ _73 ])
                    (reg:SI 764)))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":109 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (reg:SI 159 [ _73 ])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32]))
        (nil)))
(insn 268 267 269 29 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [1 ie+0 S4 A32])
        (reg:SI 763)) "CALRCH.f":109 86 {*movsi_internal}
     (nil))
(insn 269 268 270 29 (set (reg:SI 765)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALRCH.f":111 86 {*movsi_internal}
     (nil))
(insn 270 269 271 29 (set (reg:DI 160 [ _74 ])
        (sign_extend:DI (reg:SI 765))) "CALRCH.f":111 149 {*extendsidi2_rex64}
     (nil))
(insn 271 270 272 29 (parallel [
            (set (reg:DI 161 [ _75 ])
                (mult:DI (reg:DI 160 [ _74 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":111 349 {*muldi3_1}
     (nil))
(insn 272 271 273 29 (set (reg:SI 766)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":111 86 {*movsi_internal}
     (nil))
(insn 273 272 274 29 (parallel [
            (set (reg:SI 162 [ _76 ])
                (plus:SI (reg:SI 766)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":111 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 274 273 275 29 (set (reg:DI 163 [ _77 ])
        (sign_extend:DI (reg:SI 162 [ _76 ]))) "CALRCH.f":111 149 {*extendsidi2_rex64}
     (nil))
(insn 275 274 276 29 (parallel [
            (set (reg:DI 164 [ _78 ])
                (mult:DI (reg:DI 163 [ _77 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":111 349 {*muldi3_1}
     (nil))
(insn 276 275 277 29 (parallel [
            (set (reg:DI 165 [ _79 ])
                (plus:DI (reg:DI 161 [ _75 ])
                    (reg:DI 164 [ _78 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":111 222 {*adddi_1}
     (nil))
(insn 277 276 278 29 (set (reg:SI 767)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [1 ie+0 S4 A32])) "CALRCH.f":111 86 {*movsi_internal}
     (nil))
(insn 278 277 279 29 (set (reg:DI 166 [ _80 ])
        (sign_extend:DI (reg:SI 767))) "CALRCH.f":111 149 {*extendsidi2_rex64}
     (nil))
(insn 279 278 280 29 (parallel [
            (set (reg:DI 167 [ _81 ])
                (plus:DI (reg:DI 165 [ _79 ])
                    (reg:DI 166 [ _80 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":111 222 {*adddi_1}
     (nil))
(insn 280 279 281 29 (parallel [
            (set (reg:DI 168 [ _82 ])
                (plus:DI (reg:DI 167 [ _81 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":111 222 {*adddi_1}
     (nil))
(insn 281 280 282 29 (set (reg/f:DI 768)
        (symbol_ref:DI ("thv.4234") [flags 0x202]  <var_decl 0x7fe96ef1e900 thv>)) "CALRCH.f":111 85 {*movdi_internal}
     (nil))
(insn 282 281 283 29 (set (reg:SF 169 [ _83 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 168 [ _82 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 768)) [2 thv S4 A32])) "CALRCH.f":111 131 {*movsf_internal}
     (nil))
(insn 283 282 284 29 (set (reg:SI 769)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALRCH.f":111 86 {*movsi_internal}
     (nil))
(insn 284 283 285 29 (set (reg:DI 170 [ _84 ])
        (sign_extend:DI (reg:SI 769))) "CALRCH.f":111 149 {*extendsidi2_rex64}
     (nil))
(insn 285 284 286 29 (parallel [
            (set (reg:DI 171 [ _85 ])
                (mult:DI (reg:DI 170 [ _84 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":111 349 {*muldi3_1}
     (nil))
(insn 286 285 287 29 (set (reg:SI 770)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":111 86 {*movsi_internal}
     (nil))
(insn 287 286 288 29 (set (reg:DI 172 [ _86 ])
        (sign_extend:DI (reg:SI 770))) "CALRCH.f":111 149 {*extendsidi2_rex64}
     (nil))
(insn 288 287 289 29 (parallel [
            (set (reg:DI 173 [ _87 ])
                (mult:DI (reg:DI 172 [ _86 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":111 349 {*muldi3_1}
     (nil))
(insn 289 288 290 29 (parallel [
            (set (reg:DI 174 [ _88 ])
                (plus:DI (reg:DI 171 [ _85 ])
                    (reg:DI 173 [ _87 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":111 222 {*adddi_1}
     (nil))
(insn 290 289 291 29 (set (reg:SI 771)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALRCH.f":111 86 {*movsi_internal}
     (nil))
(insn 291 290 292 29 (set (reg:DI 175 [ _89 ])
        (sign_extend:DI (reg:SI 771))) "CALRCH.f":111 149 {*extendsidi2_rex64}
     (nil))
(insn 292 291 293 29 (parallel [
            (set (reg:DI 176 [ _90 ])
                (plus:DI (reg:DI 174 [ _88 ])
                    (reg:DI 175 [ _89 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":111 222 {*adddi_1}
     (nil))
(insn 293 292 294 29 (parallel [
            (set (reg:DI 177 [ _91 ])
                (plus:DI (reg:DI 176 [ _90 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":111 222 {*adddi_1}
     (nil))
(insn 294 293 295 29 (set (reg/f:DI 772)
        (symbol_ref:DI ("thv.4234") [flags 0x202]  <var_decl 0x7fe96ef1e900 thv>)) "CALRCH.f":111 85 {*movdi_internal}
     (nil))
(insn 295 294 296 29 (set (reg:SF 178 [ _92 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 177 [ _91 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 772)) [2 thv S4 A32])) "CALRCH.f":111 131 {*movsf_internal}
     (nil))
(insn 296 295 297 29 (set (reg:SF 179 [ _93 ])
        (minus:SF (reg:SF 169 [ _83 ])
            (reg:SF 178 [ _92 ]))) "CALRCH.f":111 841 {*fop_sf_1}
     (nil))
(insn 297 296 298 29 (set (reg:SF 180 [ _94 ])
        (reg:SF 179 [ _93 ])) "CALRCH.f":111 131 {*movsf_internal}
     (nil))
(insn 298 297 299 29 (set (reg:SI 773)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALRCH.f":111 86 {*movsi_internal}
     (nil))
(insn 299 298 300 29 (set (reg:DI 181 [ _95 ])
        (sign_extend:DI (reg:SI 773))) "CALRCH.f":111 149 {*extendsidi2_rex64}
     (nil))
(insn 300 299 301 29 (parallel [
            (set (reg:DI 182 [ _96 ])
                (mult:DI (reg:DI 181 [ _95 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":111 349 {*muldi3_1}
     (nil))
(insn 301 300 302 29 (set (reg:SI 774)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":111 86 {*movsi_internal}
     (nil))
(insn 302 301 303 29 (set (reg:DI 183 [ _97 ])
        (sign_extend:DI (reg:SI 774))) "CALRCH.f":111 149 {*extendsidi2_rex64}
     (nil))
(insn 303 302 304 29 (parallel [
            (set (reg:DI 184 [ _98 ])
                (mult:DI (reg:DI 183 [ _97 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":111 349 {*muldi3_1}
     (nil))
(insn 304 303 305 29 (parallel [
            (set (reg:DI 185 [ _99 ])
                (plus:DI (reg:DI 182 [ _96 ])
                    (reg:DI 184 [ _98 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":111 222 {*adddi_1}
     (nil))
(insn 305 304 306 29 (set (reg:SI 775)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALRCH.f":111 86 {*movsi_internal}
     (nil))
(insn 306 305 307 29 (set (reg:DI 186 [ _100 ])
        (sign_extend:DI (reg:SI 775))) "CALRCH.f":111 149 {*extendsidi2_rex64}
     (nil))
(insn 307 306 308 29 (parallel [
            (set (reg:DI 187 [ _101 ])
                (plus:DI (reg:DI 185 [ _99 ])
                    (reg:DI 186 [ _100 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":111 222 {*adddi_1}
     (nil))
(insn 308 307 309 29 (parallel [
            (set (reg:DI 188 [ _102 ])
                (plus:DI (reg:DI 187 [ _101 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":111 222 {*adddi_1}
     (nil))
(insn 309 308 310 29 (set (reg/f:DI 776)
        (symbol_ref:DI ("masks_") [flags 0x202]  <var_decl 0x7fe96ef00d80 masks>)) "CALRCH.f":111 85 {*movdi_internal}
     (nil))
(insn 310 309 311 29 (parallel [
            (set (reg:DI 777)
                (plus:DI (reg:DI 188 [ _102 ])
                    (const_int 148155 [0x242bb])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":111 222 {*adddi_1}
     (nil))
(insn 311 310 312 29 (set (reg:SF 189 [ _103 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 777)
                    (const_int 4 [0x4]))
                (reg/f:DI 776)) [2 masks.htm S4 A32])) "CALRCH.f":111 131 {*movsf_internal}
     (nil))
(insn 312 311 313 29 (set (reg:SF 190 [ _104 ])
        (mult:SF (reg:SF 180 [ _94 ])
            (reg:SF 189 [ _103 ]))) "CALRCH.f":111 838 {*fop_sf_comm}
     (nil))
(insn 313 312 314 29 (set (reg:SI 778)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALRCH.f":111 86 {*movsi_internal}
     (nil))
(insn 314 313 315 29 (set (reg:DI 191 [ _105 ])
        (sign_extend:DI (reg:SI 778))) "CALRCH.f":111 149 {*extendsidi2_rex64}
     (nil))
(insn 315 314 316 29 (parallel [
            (set (reg:DI 192 [ _106 ])
                (mult:DI (reg:DI 191 [ _105 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":111 349 {*muldi3_1}
     (nil))
(insn 316 315 317 29 (set (reg:SI 779)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":111 86 {*movsi_internal}
     (nil))
(insn 317 316 318 29 (parallel [
            (set (reg:SI 193 [ _107 ])
                (plus:SI (reg:SI 779)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":111 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 318 317 319 29 (set (reg:DI 194 [ _108 ])
        (sign_extend:DI (reg:SI 193 [ _107 ]))) "CALRCH.f":111 149 {*extendsidi2_rex64}
     (nil))
(insn 319 318 320 29 (parallel [
            (set (reg:DI 195 [ _109 ])
                (mult:DI (reg:DI 194 [ _108 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":111 349 {*muldi3_1}
     (nil))
(insn 320 319 321 29 (parallel [
            (set (reg:DI 196 [ _110 ])
                (plus:DI (reg:DI 192 [ _106 ])
                    (reg:DI 195 [ _109 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":111 222 {*adddi_1}
     (nil))
(insn 321 320 322 29 (set (reg:SI 780)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [1 ie+0 S4 A32])) "CALRCH.f":111 86 {*movsi_internal}
     (nil))
(insn 322 321 323 29 (set (reg:DI 197 [ _111 ])
        (sign_extend:DI (reg:SI 780))) "CALRCH.f":111 149 {*extendsidi2_rex64}
     (nil))
(insn 323 322 324 29 (parallel [
            (set (reg:DI 198 [ _112 ])
                (plus:DI (reg:DI 196 [ _110 ])
                    (reg:DI 197 [ _111 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":111 222 {*adddi_1}
     (nil))
(insn 324 323 325 29 (parallel [
            (set (reg:DI 199 [ _113 ])
                (plus:DI (reg:DI 198 [ _112 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":111 222 {*adddi_1}
     (nil))
(insn 325 324 326 29 (set (reg/f:DI 781)
        (symbol_ref:DI ("masks_") [flags 0x202]  <var_decl 0x7fe96ef00d80 masks>)) "CALRCH.f":111 85 {*movdi_internal}
     (nil))
(insn 326 325 327 29 (parallel [
            (set (reg:DI 782)
                (plus:DI (reg:DI 199 [ _113 ])
                    (const_int 148155 [0x242bb])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":111 222 {*adddi_1}
     (nil))
(insn 327 326 328 29 (set (reg:SF 200 [ _114 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 782)
                    (const_int 4 [0x4]))
                (reg/f:DI 781)) [2 masks.htm S4 A32])) "CALRCH.f":111 131 {*movsf_internal}
     (nil))
(insn 328 327 329 29 (set (reg:SI 783)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":111 86 {*movsi_internal}
     (nil))
(insn 329 328 330 29 (set (reg:DI 201 [ _115 ])
        (sign_extend:DI (reg:SI 783))) "CALRCH.f":111 149 {*extendsidi2_rex64}
     (nil))
(insn 330 329 331 29 (parallel [
            (set (reg:DI 202 [ _116 ])
                (mult:DI (reg:DI 201 [ _115 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":111 349 {*muldi3_1}
     (nil))
(insn 331 330 332 29 (set (reg:SI 784)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALRCH.f":111 86 {*movsi_internal}
     (nil))
(insn 332 331 333 29 (set (reg:DI 203 [ _117 ])
        (sign_extend:DI (reg:SI 784))) "CALRCH.f":111 149 {*extendsidi2_rex64}
     (nil))
(insn 333 332 334 29 (parallel [
            (set (reg:DI 204 [ _118 ])
                (plus:DI (reg:DI 202 [ _116 ])
                    (reg:DI 203 [ _117 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":111 222 {*adddi_1}
     (nil))
(insn 334 333 335 29 (parallel [
            (set (reg:DI 205 [ _119 ])
                (plus:DI (reg:DI 204 [ _118 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":111 222 {*adddi_1}
     (nil))
(insn 335 334 336 29 (set (reg:SF 206 [ _120 ])
        (mult:SF (reg:SF 190 [ _104 ])
            (reg:SF 200 [ _114 ]))) "CALRCH.f":111 838 {*fop_sf_comm}
     (nil))
(insn 336 335 337 29 (set (reg/f:DI 785)
        (symbol_ref:DI ("egrid1.4217") [flags 0x202]  <var_decl 0x7fe96ef1e120 egrid1>)) "CALRCH.f":111 85 {*movdi_internal}
     (nil))
(insn 337 336 338 29 (set (mem:SF (plus:DI (mult:DI (reg:DI 205 [ _119 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 785)) [2 egrid1 S4 A32])
        (reg:SF 206 [ _120 ])) "CALRCH.f":111 131 {*movsf_internal}
     (nil))
(insn 338 337 1298 29 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":108 221 {*addsi_1}
     (nil))
(jump_insn 1298 338 1299 29 (set (pc)
        (label_ref 339)) "CALRCH.f":108 -1
     (nil)
 -> 339)
;;  succ:       28 [always] 

(barrier 1299 1298 1349)
;; basic block 74, loop depth 0, maybe hot
;;  prev block 29, next block 30, flags: (NEW, RTL, MODIFIED)
;;  pred:       28
;; bb 74 artificial_defs: { }
;; bb 74 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 1349 1299 1348 74 57 (nil) [1 uses])
(note 1348 1349 1350 74 [bb 74] NOTE_INSN_BASIC_BLOCK)
(insn 1350 1348 342 74 (const_int 0 [0]) "CALRCH.f":111 -1
     (nil))
;;  succ:       30 [always]  (FALLTHRU)

;; basic block 30, loop depth 0, maybe hot
;;  prev block 74, next block 73, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       74 [always]  (FALLTHRU)
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 342 1350 343 30 18 (nil) [0 uses])
(note 343 342 344 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 344 343 1300 30 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":107 221 {*addsi_1}
     (nil))
(jump_insn 1300 344 1301 30 (set (pc)
        (label_ref 345)) "CALRCH.f":107 -1
     (nil)
 -> 345)
;;  succ:       26 [always] 

(barrier 1301 1300 1346)
;; basic block 73, loop depth 0, maybe hot
;;  prev block 30, next block 31, flags: (NEW, RTL, MODIFIED)
;;  pred:       26
;; bb 73 artificial_defs: { }
;; bb 73 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 1346 1301 1345 73 56 (nil) [1 uses])
(note 1345 1346 1347 73 [bb 73] NOTE_INSN_BASIC_BLOCK)
(insn 1347 1345 348 73 (const_int 0 [0]) "CALRCH.f":108 -1
     (nil))
;;  succ:       31 [always]  (FALLTHRU)

;; basic block 31, loop depth 0, maybe hot
;;  prev block 73, next block 32, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       73 [always]  (FALLTHRU)
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 348 1347 349 31 17 (nil) [0 uses])
(note 349 348 350 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 350 349 351 31 (set (reg:SI 692 [ _669 ])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7fe96ef06630 parallel>)
                    (const_int 16 [0x10]))) [1 parallel.jsta_m+0 S4 A128])) "CALRCH.f":115 86 {*movsi_internal}
     (nil))
(insn 351 350 352 31 (set (reg:SI 693 [ _670 ])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7fe96ef06630 parallel>)
                    (const_int 12 [0xc]))) [1 parallel.jend+0 S4 A32])) "CALRCH.f":115 86 {*movsi_internal}
     (nil))
(insn 352 351 454 31 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
        (reg:SI 692 [ _669 ])) "CALRCH.f":115 86 {*movsi_internal}
     (nil))
;;  succ:       32 (FALLTHRU)

;; basic block 32, loop depth 0, maybe hot
;;  prev block 31, next block 33, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       31 (FALLTHRU)
;;              36 [always] 
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 454 352 353 32 24 (nil) [1 uses])
(note 353 454 354 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 354 353 355 32 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (reg:SI 693 [ _670 ]))) "CALRCH.f":115 11 {*cmpsi_1}
     (nil))
(insn 355 354 356 32 (set (reg:QI 786)
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALRCH.f":115 678 {*setcc_qi}
     (nil))
(insn 356 355 357 32 (set (reg:SI 694 [ _672 ])
        (zero_extend:SI (reg:QI 786))) "CALRCH.f":115 140 {*zero_extendqisi2}
     (nil))
(insn 357 356 358 32 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 694 [ _672 ])
            (const_int 0 [0]))) "CALRCH.f":115 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 358 357 359 32 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1352)
            (pc))) "CALRCH.f":115 682 {*jcc}
     (nil)
 -> 1352)
;;  succ:       75
;;              33 (FALLTHRU)

;; basic block 33, loop depth 0, maybe hot
;;  prev block 32, next block 34, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       32 (FALLTHRU)
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(note 359 358 360 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 360 359 448 33 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
        (const_int 1 [0x1])) "CALRCH.f":116 86 {*movsi_internal}
     (nil))
;;  succ:       34 (FALLTHRU)

;; basic block 34, loop depth 0, maybe hot
;;  prev block 33, next block 35, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       33 (FALLTHRU)
;;              35 [always] 
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 448 360 361 34 23 (nil) [1 uses])
(note 361 448 362 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 362 361 363 34 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
            (const_int 118 [0x76]))) "CALRCH.f":116 11 {*cmpsi_1}
     (nil))
(insn 363 362 364 34 (set (reg:QI 787)
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALRCH.f":116 678 {*setcc_qi}
     (nil))
(insn 364 363 365 34 (set (reg:SI 695 [ _674 ])
        (zero_extend:SI (reg:QI 787))) "CALRCH.f":116 140 {*zero_extendqisi2}
     (nil))
(insn 365 364 366 34 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 695 [ _674 ])
            (const_int 0 [0]))) "CALRCH.f":116 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 366 365 367 34 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1355)
            (pc))) "CALRCH.f":116 682 {*jcc}
     (nil)
 -> 1355)
;;  succ:       76
;;              35 (FALLTHRU)

;; basic block 35, loop depth 0, maybe hot
;;  prev block 34, next block 76, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       34 (FALLTHRU)
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(note 367 366 368 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 368 367 369 35 (set (reg:SI 788)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":117 86 {*movsi_internal}
     (nil))
(insn 369 368 370 35 (set (reg:DI 207 [ _121 ])
        (sign_extend:DI (reg:SI 788))) "CALRCH.f":117 149 {*extendsidi2_rex64}
     (nil))
(insn 370 369 371 35 (parallel [
            (set (reg:DI 208 [ _122 ])
                (plus:DI (reg:DI 207 [ _121 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":117 222 {*adddi_1}
     (nil))
(insn 371 370 375 35 (set (reg:SI 209 [ _123 ])
        (mem:SI (plus:DI (mult:DI (reg:DI 208 [ _122 ])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("indx_") [flags 0x2]  <var_decl 0x7fe96ef00630 indx>)) [1 indx.ihe S4 A32])) "CALRCH.f":117 86 {*movsi_internal}
     (nil))
(insn 375 371 376 35 (set (reg:SI 792)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALRCH.f":117 86 {*movsi_internal}
     (nil))
(insn 376 375 377 35 (parallel [
            (set (reg:SI 791)
                (plus:SI (reg:SI 209 [ _123 ])
                    (reg:SI 792)))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":117 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (reg:SI 209 [ _123 ])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32]))
        (nil)))
(insn 377 376 378 35 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [1 ie+0 S4 A32])
        (reg:SI 791)) "CALRCH.f":117 86 {*movsi_internal}
     (nil))
(insn 378 377 379 35 (set (reg:SI 793)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALRCH.f":119 86 {*movsi_internal}
     (nil))
(insn 379 378 380 35 (set (reg:DI 210 [ _124 ])
        (sign_extend:DI (reg:SI 793))) "CALRCH.f":119 149 {*extendsidi2_rex64}
     (nil))
(insn 380 379 381 35 (parallel [
            (set (reg:DI 211 [ _125 ])
                (mult:DI (reg:DI 210 [ _124 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":119 349 {*muldi3_1}
     (nil))
(insn 381 380 382 35 (set (reg:SI 794)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":119 86 {*movsi_internal}
     (nil))
(insn 382 381 383 35 (parallel [
            (set (reg:SI 212 [ _126 ])
                (plus:SI (reg:SI 794)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":119 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 383 382 384 35 (set (reg:DI 213 [ _127 ])
        (sign_extend:DI (reg:SI 212 [ _126 ]))) "CALRCH.f":119 149 {*extendsidi2_rex64}
     (nil))
(insn 384 383 385 35 (parallel [
            (set (reg:DI 214 [ _128 ])
                (mult:DI (reg:DI 213 [ _127 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":119 349 {*muldi3_1}
     (nil))
(insn 385 384 386 35 (parallel [
            (set (reg:DI 215 [ _129 ])
                (plus:DI (reg:DI 211 [ _125 ])
                    (reg:DI 214 [ _128 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":119 222 {*adddi_1}
     (nil))
(insn 386 385 387 35 (set (reg:SI 795)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [1 ie+0 S4 A32])) "CALRCH.f":119 86 {*movsi_internal}
     (nil))
(insn 387 386 388 35 (set (reg:DI 216 [ _130 ])
        (sign_extend:DI (reg:SI 795))) "CALRCH.f":119 149 {*extendsidi2_rex64}
     (nil))
(insn 388 387 389 35 (parallel [
            (set (reg:DI 217 [ _131 ])
                (plus:DI (reg:DI 215 [ _129 ])
                    (reg:DI 216 [ _130 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":119 222 {*adddi_1}
     (nil))
(insn 389 388 390 35 (parallel [
            (set (reg:DI 218 [ _132 ])
                (plus:DI (reg:DI 217 [ _131 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":119 222 {*adddi_1}
     (nil))
(insn 390 389 391 35 (set (reg/f:DI 796)
        (symbol_ref:DI ("thv.4234") [flags 0x202]  <var_decl 0x7fe96ef1e900 thv>)) "CALRCH.f":119 85 {*movdi_internal}
     (nil))
(insn 391 390 392 35 (set (reg:SF 219 [ _133 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 218 [ _132 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 796)) [2 thv S4 A32])) "CALRCH.f":119 131 {*movsf_internal}
     (nil))
(insn 392 391 393 35 (set (reg:SI 797)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALRCH.f":119 86 {*movsi_internal}
     (nil))
(insn 393 392 394 35 (set (reg:DI 220 [ _134 ])
        (sign_extend:DI (reg:SI 797))) "CALRCH.f":119 149 {*extendsidi2_rex64}
     (nil))
(insn 394 393 395 35 (parallel [
            (set (reg:DI 221 [ _135 ])
                (mult:DI (reg:DI 220 [ _134 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":119 349 {*muldi3_1}
     (nil))
(insn 395 394 396 35 (set (reg:SI 798)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":119 86 {*movsi_internal}
     (nil))
(insn 396 395 397 35 (set (reg:DI 222 [ _136 ])
        (sign_extend:DI (reg:SI 798))) "CALRCH.f":119 149 {*extendsidi2_rex64}
     (nil))
(insn 397 396 398 35 (parallel [
            (set (reg:DI 223 [ _137 ])
                (mult:DI (reg:DI 222 [ _136 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":119 349 {*muldi3_1}
     (nil))
(insn 398 397 399 35 (parallel [
            (set (reg:DI 224 [ _138 ])
                (plus:DI (reg:DI 221 [ _135 ])
                    (reg:DI 223 [ _137 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":119 222 {*adddi_1}
     (nil))
(insn 399 398 400 35 (set (reg:SI 799)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALRCH.f":119 86 {*movsi_internal}
     (nil))
(insn 400 399 401 35 (set (reg:DI 225 [ _139 ])
        (sign_extend:DI (reg:SI 799))) "CALRCH.f":119 149 {*extendsidi2_rex64}
     (nil))
(insn 401 400 402 35 (parallel [
            (set (reg:DI 226 [ _140 ])
                (plus:DI (reg:DI 224 [ _138 ])
                    (reg:DI 225 [ _139 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":119 222 {*adddi_1}
     (nil))
(insn 402 401 403 35 (parallel [
            (set (reg:DI 227 [ _141 ])
                (plus:DI (reg:DI 226 [ _140 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":119 222 {*adddi_1}
     (nil))
(insn 403 402 404 35 (set (reg/f:DI 800)
        (symbol_ref:DI ("thv.4234") [flags 0x202]  <var_decl 0x7fe96ef1e900 thv>)) "CALRCH.f":119 85 {*movdi_internal}
     (nil))
(insn 404 403 405 35 (set (reg:SF 228 [ _142 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 227 [ _141 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 800)) [2 thv S4 A32])) "CALRCH.f":119 131 {*movsf_internal}
     (nil))
(insn 405 404 406 35 (set (reg:SF 229 [ _143 ])
        (minus:SF (reg:SF 219 [ _133 ])
            (reg:SF 228 [ _142 ]))) "CALRCH.f":119 841 {*fop_sf_1}
     (nil))
(insn 406 405 407 35 (set (reg:SF 230 [ _144 ])
        (reg:SF 229 [ _143 ])) "CALRCH.f":119 131 {*movsf_internal}
     (nil))
(insn 407 406 408 35 (set (reg:SI 801)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALRCH.f":119 86 {*movsi_internal}
     (nil))
(insn 408 407 409 35 (set (reg:DI 231 [ _145 ])
        (sign_extend:DI (reg:SI 801))) "CALRCH.f":119 149 {*extendsidi2_rex64}
     (nil))
(insn 409 408 410 35 (parallel [
            (set (reg:DI 232 [ _146 ])
                (mult:DI (reg:DI 231 [ _145 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":119 349 {*muldi3_1}
     (nil))
(insn 410 409 411 35 (set (reg:SI 802)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":119 86 {*movsi_internal}
     (nil))
(insn 411 410 412 35 (parallel [
            (set (reg:SI 233 [ _147 ])
                (plus:SI (reg:SI 802)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":119 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 412 411 413 35 (set (reg:DI 234 [ _148 ])
        (sign_extend:DI (reg:SI 233 [ _147 ]))) "CALRCH.f":119 149 {*extendsidi2_rex64}
     (nil))
(insn 413 412 414 35 (parallel [
            (set (reg:DI 235 [ _149 ])
                (mult:DI (reg:DI 234 [ _148 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":119 349 {*muldi3_1}
     (nil))
(insn 414 413 415 35 (parallel [
            (set (reg:DI 236 [ _150 ])
                (plus:DI (reg:DI 232 [ _146 ])
                    (reg:DI 235 [ _149 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":119 222 {*adddi_1}
     (nil))
(insn 415 414 416 35 (set (reg:SI 803)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [1 ie+0 S4 A32])) "CALRCH.f":119 86 {*movsi_internal}
     (nil))
(insn 416 415 417 35 (set (reg:DI 237 [ _151 ])
        (sign_extend:DI (reg:SI 803))) "CALRCH.f":119 149 {*extendsidi2_rex64}
     (nil))
(insn 417 416 418 35 (parallel [
            (set (reg:DI 238 [ _152 ])
                (plus:DI (reg:DI 236 [ _150 ])
                    (reg:DI 237 [ _151 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":119 222 {*adddi_1}
     (nil))
(insn 418 417 419 35 (parallel [
            (set (reg:DI 239 [ _153 ])
                (plus:DI (reg:DI 238 [ _152 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":119 222 {*adddi_1}
     (nil))
(insn 419 418 420 35 (set (reg/f:DI 804)
        (symbol_ref:DI ("masks_") [flags 0x202]  <var_decl 0x7fe96ef00d80 masks>)) "CALRCH.f":119 85 {*movdi_internal}
     (nil))
(insn 420 419 421 35 (parallel [
            (set (reg:DI 805)
                (plus:DI (reg:DI 239 [ _153 ])
                    (const_int 148155 [0x242bb])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":119 222 {*adddi_1}
     (nil))
(insn 421 420 422 35 (set (reg:SF 240 [ _154 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 805)
                    (const_int 4 [0x4]))
                (reg/f:DI 804)) [2 masks.htm S4 A32])) "CALRCH.f":119 131 {*movsf_internal}
     (nil))
(insn 422 421 423 35 (set (reg:SF 241 [ _155 ])
        (mult:SF (reg:SF 230 [ _144 ])
            (reg:SF 240 [ _154 ]))) "CALRCH.f":119 838 {*fop_sf_comm}
     (nil))
(insn 423 422 424 35 (set (reg:SI 806)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALRCH.f":119 86 {*movsi_internal}
     (nil))
(insn 424 423 425 35 (set (reg:DI 242 [ _156 ])
        (sign_extend:DI (reg:SI 806))) "CALRCH.f":119 149 {*extendsidi2_rex64}
     (nil))
(insn 425 424 426 35 (parallel [
            (set (reg:DI 243 [ _157 ])
                (mult:DI (reg:DI 242 [ _156 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":119 349 {*muldi3_1}
     (nil))
(insn 426 425 427 35 (set (reg:SI 807)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":119 86 {*movsi_internal}
     (nil))
(insn 427 426 428 35 (set (reg:DI 244 [ _158 ])
        (sign_extend:DI (reg:SI 807))) "CALRCH.f":119 149 {*extendsidi2_rex64}
     (nil))
(insn 428 427 429 35 (parallel [
            (set (reg:DI 245 [ _159 ])
                (mult:DI (reg:DI 244 [ _158 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":119 349 {*muldi3_1}
     (nil))
(insn 429 428 430 35 (parallel [
            (set (reg:DI 246 [ _160 ])
                (plus:DI (reg:DI 243 [ _157 ])
                    (reg:DI 245 [ _159 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":119 222 {*adddi_1}
     (nil))
(insn 430 429 431 35 (set (reg:SI 808)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALRCH.f":119 86 {*movsi_internal}
     (nil))
(insn 431 430 432 35 (set (reg:DI 247 [ _161 ])
        (sign_extend:DI (reg:SI 808))) "CALRCH.f":119 149 {*extendsidi2_rex64}
     (nil))
(insn 432 431 433 35 (parallel [
            (set (reg:DI 248 [ _162 ])
                (plus:DI (reg:DI 246 [ _160 ])
                    (reg:DI 247 [ _161 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":119 222 {*adddi_1}
     (nil))
(insn 433 432 434 35 (parallel [
            (set (reg:DI 249 [ _163 ])
                (plus:DI (reg:DI 248 [ _162 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":119 222 {*adddi_1}
     (nil))
(insn 434 433 435 35 (set (reg/f:DI 809)
        (symbol_ref:DI ("masks_") [flags 0x202]  <var_decl 0x7fe96ef00d80 masks>)) "CALRCH.f":119 85 {*movdi_internal}
     (nil))
(insn 435 434 436 35 (parallel [
            (set (reg:DI 810)
                (plus:DI (reg:DI 249 [ _163 ])
                    (const_int 148155 [0x242bb])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":119 222 {*adddi_1}
     (nil))
(insn 436 435 437 35 (set (reg:SF 250 [ _164 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 810)
                    (const_int 4 [0x4]))
                (reg/f:DI 809)) [2 masks.htm S4 A32])) "CALRCH.f":119 131 {*movsf_internal}
     (nil))
(insn 437 436 438 35 (set (reg:SI 811)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":119 86 {*movsi_internal}
     (nil))
(insn 438 437 439 35 (set (reg:DI 251 [ _165 ])
        (sign_extend:DI (reg:SI 811))) "CALRCH.f":119 149 {*extendsidi2_rex64}
     (nil))
(insn 439 438 440 35 (parallel [
            (set (reg:DI 252 [ _166 ])
                (mult:DI (reg:DI 251 [ _165 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":119 349 {*muldi3_1}
     (nil))
(insn 440 439 441 35 (set (reg:SI 812)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALRCH.f":119 86 {*movsi_internal}
     (nil))
(insn 441 440 442 35 (set (reg:DI 253 [ _167 ])
        (sign_extend:DI (reg:SI 812))) "CALRCH.f":119 149 {*extendsidi2_rex64}
     (nil))
(insn 442 441 443 35 (parallel [
            (set (reg:DI 254 [ _168 ])
                (plus:DI (reg:DI 252 [ _166 ])
                    (reg:DI 253 [ _167 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":119 222 {*adddi_1}
     (nil))
(insn 443 442 444 35 (parallel [
            (set (reg:DI 255 [ _169 ])
                (plus:DI (reg:DI 254 [ _168 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":119 222 {*adddi_1}
     (nil))
(insn 444 443 445 35 (set (reg:SF 256 [ _170 ])
        (mult:SF (reg:SF 241 [ _155 ])
            (reg:SF 250 [ _164 ]))) "CALRCH.f":119 838 {*fop_sf_comm}
     (nil))
(insn 445 444 446 35 (set (reg/f:DI 813)
        (symbol_ref:DI ("egrid2.4219") [flags 0x202]  <var_decl 0x7fe96ef1e1b0 egrid2>)) "CALRCH.f":119 85 {*movdi_internal}
     (nil))
(insn 446 445 447 35 (set (mem:SF (plus:DI (mult:DI (reg:DI 255 [ _169 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 813)) [2 egrid2 S4 A32])
        (reg:SF 256 [ _170 ])) "CALRCH.f":119 131 {*movsf_internal}
     (nil))
(insn 447 446 1302 35 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":116 221 {*addsi_1}
     (nil))
(jump_insn 1302 447 1303 35 (set (pc)
        (label_ref 448)) "CALRCH.f":116 -1
     (nil)
 -> 448)
;;  succ:       34 [always] 

(barrier 1303 1302 1355)
;; basic block 76, loop depth 0, maybe hot
;;  prev block 35, next block 36, flags: (NEW, RTL, MODIFIED)
;;  pred:       34
;; bb 76 artificial_defs: { }
;; bb 76 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 1355 1303 1354 76 59 (nil) [1 uses])
(note 1354 1355 1356 76 [bb 76] NOTE_INSN_BASIC_BLOCK)
(insn 1356 1354 451 76 (const_int 0 [0]) "CALRCH.f":119 -1
     (nil))
;;  succ:       36 [always]  (FALLTHRU)

;; basic block 36, loop depth 0, maybe hot
;;  prev block 76, next block 75, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       76 [always]  (FALLTHRU)
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 451 1356 452 36 22 (nil) [0 uses])
(note 452 451 453 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 453 452 1304 36 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":115 221 {*addsi_1}
     (nil))
(jump_insn 1304 453 1305 36 (set (pc)
        (label_ref 454)) "CALRCH.f":115 -1
     (nil)
 -> 454)
;;  succ:       32 [always] 

(barrier 1305 1304 1352)
;; basic block 75, loop depth 0, maybe hot
;;  prev block 36, next block 37, flags: (NEW, RTL, MODIFIED)
;;  pred:       32
;; bb 75 artificial_defs: { }
;; bb 75 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 1352 1305 1351 75 58 (nil) [1 uses])
(note 1351 1352 1353 75 [bb 75] NOTE_INSN_BASIC_BLOCK)
(insn 1353 1351 457 75 (const_int 0 [0]) "CALRCH.f":116 -1
     (nil))
;;  succ:       37 [always]  (FALLTHRU)

;; basic block 37, loop depth 0, maybe hot
;;  prev block 75, next block 38, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       75 [always]  (FALLTHRU)
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 457 1353 458 37 21 (nil) [0 uses])
(note 458 457 459 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 459 458 460 37 (set (reg:DI 5 di)
        (symbol_ref:DI ("egrid1.4217") [flags 0x202]  <var_decl 0x7fe96ef1e120 egrid1>)) "CALRCH.f":123 85 {*movdi_internal}
     (nil))
(insn 460 459 461 37 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CALRCH.f":123 88 {*movqi_internal}
     (nil))
(call_insn 461 460 462 37 (call (mem:QI (symbol_ref:DI ("exch_") [flags 0x41]  <function_decl 0x7fe96eeef600 exch>) [0 exch S1 A8])
        (const_int 0 [0])) "CALRCH.f":123 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 462 461 463 37 (set (reg:DI 5 di)
        (symbol_ref:DI ("egrid2.4219") [flags 0x202]  <var_decl 0x7fe96ef1e1b0 egrid2>)) "CALRCH.f":124 85 {*movdi_internal}
     (nil))
(insn 463 462 464 37 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CALRCH.f":124 88 {*movqi_internal}
     (nil))
(call_insn 464 463 465 37 (call (mem:QI (symbol_ref:DI ("exch_") [flags 0x41]  <function_decl 0x7fe96eeef600 exch>) [0 exch S1 A8])
        (const_int 0 [0])) "CALRCH.f":124 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 465 464 466 37 (set (reg:SI 696 [ _681 ])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7fe96ef06630 parallel>)
                    (const_int 24 [0x18]))) [1 parallel.jsta_m2+0 S4 A64])) "CALRCH.f":126 86 {*movsi_internal}
     (nil))
(insn 466 465 467 37 (set (reg:SI 697 [ _682 ])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7fe96ef06630 parallel>)
                    (const_int 28 [0x1c]))) [1 parallel.jend_m2+0 S4 A32])) "CALRCH.f":126 86 {*movsi_internal}
     (nil))
(insn 467 466 582 37 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
        (reg:SI 696 [ _681 ])) "CALRCH.f":126 86 {*movsi_internal}
     (nil))
;;  succ:       38 (FALLTHRU)

;; basic block 38, loop depth 0, maybe hot
;;  prev block 37, next block 39, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       37 (FALLTHRU)
;;              42 [always] 
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 582 467 468 38 28 (nil) [1 uses])
(note 468 582 469 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 469 468 470 38 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (reg:SI 697 [ _682 ]))) "CALRCH.f":126 11 {*cmpsi_1}
     (nil))
(insn 470 469 471 38 (set (reg:QI 814)
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALRCH.f":126 678 {*setcc_qi}
     (nil))
(insn 471 470 472 38 (set (reg:SI 698 [ _684 ])
        (zero_extend:SI (reg:QI 814))) "CALRCH.f":126 140 {*zero_extendqisi2}
     (nil))
(insn 472 471 473 38 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 698 [ _684 ])
            (const_int 0 [0]))) "CALRCH.f":126 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 473 472 474 38 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1358)
            (pc))) "CALRCH.f":126 682 {*jcc}
     (nil)
 -> 1358)
;;  succ:       77
;;              39 (FALLTHRU)

;; basic block 39, loop depth 0, maybe hot
;;  prev block 38, next block 40, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       38 (FALLTHRU)
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(note 474 473 475 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 475 474 576 39 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
        (const_int 2 [0x2])) "CALRCH.f":127 86 {*movsi_internal}
     (nil))
;;  succ:       40 (FALLTHRU)

;; basic block 40, loop depth 0, maybe hot
;;  prev block 39, next block 41, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       39 (FALLTHRU)
;;              41 [always] 
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 576 475 476 40 27 (nil) [1 uses])
(note 476 576 477 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 477 476 478 40 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
            (const_int 118 [0x76]))) "CALRCH.f":127 11 {*cmpsi_1}
     (nil))
(insn 478 477 479 40 (set (reg:QI 815)
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALRCH.f":127 678 {*setcc_qi}
     (nil))
(insn 479 478 480 40 (set (reg:SI 699 [ _686 ])
        (zero_extend:SI (reg:QI 815))) "CALRCH.f":127 140 {*zero_extendqisi2}
     (nil))
(insn 480 479 481 40 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 699 [ _686 ])
            (const_int 0 [0]))) "CALRCH.f":127 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 481 480 482 40 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1361)
            (pc))) "CALRCH.f":127 682 {*jcc}
     (nil)
 -> 1361)
;;  succ:       78
;;              41 (FALLTHRU)

;; basic block 41, loop depth 0, maybe hot
;;  prev block 40, next block 78, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       40 (FALLTHRU)
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(note 482 481 483 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 483 482 484 41 (set (reg:SI 816)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":128 86 {*movsi_internal}
     (nil))
(insn 484 483 485 41 (set (reg:DI 257 [ _171 ])
        (sign_extend:DI (reg:SI 816))) "CALRCH.f":128 149 {*extendsidi2_rex64}
     (nil))
(insn 485 484 486 41 (parallel [
            (set (reg:DI 258 [ _172 ])
                (plus:DI (reg:DI 257 [ _171 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":128 222 {*adddi_1}
     (nil))
(insn 486 485 487 41 (parallel [
            (set (reg:DI 817)
                (plus:DI (reg:DI 258 [ _172 ])
                    (const_int 249 [0xf9])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":128 222 {*adddi_1}
     (nil))
(insn 487 486 491 41 (set (reg:SI 259 [ _173 ])
        (mem:SI (plus:DI (mult:DI (reg:DI 817)
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("indx_") [flags 0x2]  <var_decl 0x7fe96ef00630 indx>)) [1 indx.ihw S4 A32])) "CALRCH.f":128 86 {*movsi_internal}
     (nil))
(insn 491 487 492 41 (set (reg:SI 821)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALRCH.f":128 86 {*movsi_internal}
     (nil))
(insn 492 491 493 41 (parallel [
            (set (reg:SI 820)
                (plus:SI (reg:SI 259 [ _173 ])
                    (reg:SI 821)))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":128 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (reg:SI 259 [ _173 ])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32]))
        (nil)))
(insn 493 492 494 41 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [1 iw+0 S4 A32])
        (reg:SI 820)) "CALRCH.f":128 86 {*movsi_internal}
     (nil))
(insn 494 493 495 41 (set (reg:SI 822)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALRCH.f":131 86 {*movsi_internal}
     (nil))
(insn 495 494 496 41 (set (reg:DI 260 [ _174 ])
        (sign_extend:DI (reg:SI 822))) "CALRCH.f":131 149 {*extendsidi2_rex64}
     (nil))
(insn 496 495 497 41 (parallel [
            (set (reg:DI 261 [ _175 ])
                (mult:DI (reg:DI 260 [ _174 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":131 349 {*muldi3_1}
     (nil))
(insn 497 496 498 41 (set (reg:SI 823)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":131 86 {*movsi_internal}
     (nil))
(insn 498 497 499 41 (set (reg:DI 262 [ _176 ])
        (sign_extend:DI (reg:SI 823))) "CALRCH.f":131 149 {*extendsidi2_rex64}
     (nil))
(insn 499 498 500 41 (parallel [
            (set (reg:DI 263 [ _177 ])
                (mult:DI (reg:DI 262 [ _176 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":131 349 {*muldi3_1}
     (nil))
(insn 500 499 501 41 (parallel [
            (set (reg:DI 264 [ _178 ])
                (plus:DI (reg:DI 261 [ _175 ])
                    (reg:DI 263 [ _177 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":131 222 {*adddi_1}
     (nil))
(insn 501 500 502 41 (set (reg:SI 824)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALRCH.f":131 86 {*movsi_internal}
     (nil))
(insn 502 501 503 41 (set (reg:DI 265 [ _179 ])
        (sign_extend:DI (reg:SI 824))) "CALRCH.f":131 149 {*extendsidi2_rex64}
     (nil))
(insn 503 502 504 41 (parallel [
            (set (reg:DI 266 [ _180 ])
                (plus:DI (reg:DI 264 [ _178 ])
                    (reg:DI 265 [ _179 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":131 222 {*adddi_1}
     (nil))
(insn 504 503 505 41 (parallel [
            (set (reg:DI 267 [ _181 ])
                (plus:DI (reg:DI 266 [ _180 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":131 222 {*adddi_1}
     (nil))
(insn 505 504 506 41 (set (reg/f:DI 825)
        (symbol_ref:DI ("thv.4234") [flags 0x202]  <var_decl 0x7fe96ef1e900 thv>)) "CALRCH.f":131 85 {*movdi_internal}
     (nil))
(insn 506 505 507 41 (set (reg:SF 268 [ _182 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 267 [ _181 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 825)) [2 thv S4 A32])) "CALRCH.f":131 131 {*movsf_internal}
     (nil))
(insn 507 506 508 41 (set (reg:SI 826)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":131 86 {*movsi_internal}
     (nil))
(insn 508 507 509 41 (set (reg:DI 269 [ _183 ])
        (sign_extend:DI (reg:SI 826))) "CALRCH.f":131 149 {*extendsidi2_rex64}
     (nil))
(insn 509 508 510 41 (parallel [
            (set (reg:DI 270 [ _184 ])
                (mult:DI (reg:DI 269 [ _183 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":131 349 {*muldi3_1}
     (nil))
(insn 510 509 511 41 (set (reg:SI 827)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALRCH.f":131 86 {*movsi_internal}
     (nil))
(insn 511 510 512 41 (set (reg:DI 271 [ _185 ])
        (sign_extend:DI (reg:SI 827))) "CALRCH.f":131 149 {*extendsidi2_rex64}
     (nil))
(insn 512 511 513 41 (parallel [
            (set (reg:DI 272 [ _186 ])
                (plus:DI (reg:DI 270 [ _184 ])
                    (reg:DI 271 [ _185 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":131 222 {*adddi_1}
     (nil))
(insn 513 512 514 41 (parallel [
            (set (reg:DI 273 [ _187 ])
                (plus:DI (reg:DI 272 [ _186 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":131 222 {*adddi_1}
     (nil))
(insn 514 513 515 41 (set (reg/f:DI 828)
        (symbol_ref:DI ("egrid1.4217") [flags 0x202]  <var_decl 0x7fe96ef1e120 egrid1>)) "CALRCH.f":131 85 {*movdi_internal}
     (nil))
(insn 515 514 516 41 (set (reg:SF 274 [ _188 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 273 [ _187 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 828)) [2 egrid1 S4 A32])) "CALRCH.f":131 131 {*movsf_internal}
     (nil))
(insn 516 515 517 41 (set (reg:SI 829)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":131 86 {*movsi_internal}
     (nil))
(insn 517 516 518 41 (parallel [
            (set (reg:SI 275 [ _189 ])
                (plus:SI (reg:SI 829)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":131 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 518 517 519 41 (set (reg:DI 276 [ _190 ])
        (sign_extend:DI (reg:SI 275 [ _189 ]))) "CALRCH.f":131 149 {*extendsidi2_rex64}
     (nil))
(insn 519 518 520 41 (parallel [
            (set (reg:DI 277 [ _191 ])
                (mult:DI (reg:DI 276 [ _190 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":131 349 {*muldi3_1}
     (nil))
(insn 520 519 521 41 (set (reg:SI 830)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [1 iw+0 S4 A32])) "CALRCH.f":131 86 {*movsi_internal}
     (nil))
(insn 521 520 522 41 (set (reg:DI 278 [ _192 ])
        (sign_extend:DI (reg:SI 830))) "CALRCH.f":131 149 {*extendsidi2_rex64}
     (nil))
(insn 522 521 523 41 (parallel [
            (set (reg:DI 279 [ _193 ])
                (plus:DI (reg:DI 277 [ _191 ])
                    (reg:DI 278 [ _192 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":131 222 {*adddi_1}
     (nil))
(insn 523 522 524 41 (parallel [
            (set (reg:DI 280 [ _194 ])
                (plus:DI (reg:DI 279 [ _193 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":131 222 {*adddi_1}
     (nil))
(insn 524 523 525 41 (set (reg/f:DI 831)
        (symbol_ref:DI ("egrid1.4217") [flags 0x202]  <var_decl 0x7fe96ef1e120 egrid1>)) "CALRCH.f":131 85 {*movdi_internal}
     (nil))
(insn 525 524 526 41 (set (reg:SF 281 [ _195 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 280 [ _194 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 831)) [2 egrid1 S4 A32])) "CALRCH.f":131 131 {*movsf_internal}
     (nil))
(insn 526 525 527 41 (set (reg:SF 282 [ _196 ])
        (minus:SF (reg:SF 274 [ _188 ])
            (reg:SF 281 [ _195 ]))) "CALRCH.f":131 841 {*fop_sf_1}
     (nil))
(insn 527 526 528 41 (set (reg:SI 832)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":131 86 {*movsi_internal}
     (nil))
(insn 528 527 529 41 (set (reg:DI 283 [ _197 ])
        (sign_extend:DI (reg:SI 832))) "CALRCH.f":131 149 {*extendsidi2_rex64}
     (nil))
(insn 529 528 530 41 (parallel [
            (set (reg:DI 284 [ _198 ])
                (mult:DI (reg:DI 283 [ _197 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":131 349 {*muldi3_1}
     (nil))
(insn 530 529 531 41 (set (reg:SI 833)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALRCH.f":131 86 {*movsi_internal}
     (nil))
(insn 531 530 532 41 (set (reg:DI 285 [ _199 ])
        (sign_extend:DI (reg:SI 833))) "CALRCH.f":131 149 {*extendsidi2_rex64}
     (nil))
(insn 532 531 533 41 (parallel [
            (set (reg:DI 286 [ _200 ])
                (plus:DI (reg:DI 284 [ _198 ])
                    (reg:DI 285 [ _199 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":131 222 {*adddi_1}
     (nil))
(insn 533 532 534 41 (parallel [
            (set (reg:DI 287 [ _201 ])
                (plus:DI (reg:DI 286 [ _200 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":131 222 {*adddi_1}
     (nil))
(insn 534 533 535 41 (set (reg/f:DI 834)
        (symbol_ref:DI ("egrid2.4219") [flags 0x202]  <var_decl 0x7fe96ef1e1b0 egrid2>)) "CALRCH.f":131 85 {*movdi_internal}
     (nil))
(insn 535 534 536 41 (set (reg:SF 288 [ _202 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 287 [ _201 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 834)) [2 egrid2 S4 A32])) "CALRCH.f":131 131 {*movsf_internal}
     (nil))
(insn 536 535 537 41 (set (reg:SF 289 [ _203 ])
        (plus:SF (reg:SF 282 [ _196 ])
            (reg:SF 288 [ _202 ]))) "CALRCH.f":131 838 {*fop_sf_comm}
     (nil))
(insn 537 536 538 41 (set (reg:SI 835)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":131 86 {*movsi_internal}
     (nil))
(insn 538 537 539 41 (parallel [
            (set (reg:SI 290 [ _204 ])
                (plus:SI (reg:SI 835)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":131 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 539 538 540 41 (set (reg:DI 291 [ _205 ])
        (sign_extend:DI (reg:SI 290 [ _204 ]))) "CALRCH.f":131 149 {*extendsidi2_rex64}
     (nil))
(insn 540 539 541 41 (parallel [
            (set (reg:DI 292 [ _206 ])
                (mult:DI (reg:DI 291 [ _205 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":131 349 {*muldi3_1}
     (nil))
(insn 541 540 542 41 (set (reg:SI 836)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [1 iw+0 S4 A32])) "CALRCH.f":131 86 {*movsi_internal}
     (nil))
(insn 542 541 543 41 (set (reg:DI 293 [ _207 ])
        (sign_extend:DI (reg:SI 836))) "CALRCH.f":131 149 {*extendsidi2_rex64}
     (nil))
(insn 543 542 544 41 (parallel [
            (set (reg:DI 294 [ _208 ])
                (plus:DI (reg:DI 292 [ _206 ])
                    (reg:DI 293 [ _207 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":131 222 {*adddi_1}
     (nil))
(insn 544 543 545 41 (parallel [
            (set (reg:DI 295 [ _209 ])
                (plus:DI (reg:DI 294 [ _208 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":131 222 {*adddi_1}
     (nil))
(insn 545 544 546 41 (set (reg/f:DI 837)
        (symbol_ref:DI ("egrid2.4219") [flags 0x202]  <var_decl 0x7fe96ef1e1b0 egrid2>)) "CALRCH.f":131 85 {*movdi_internal}
     (nil))
(insn 546 545 547 41 (set (reg:SF 296 [ _210 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 295 [ _209 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 837)) [2 egrid2 S4 A32])) "CALRCH.f":131 131 {*movsf_internal}
     (nil))
(insn 547 546 548 41 (set (reg:SF 297 [ _211 ])
        (minus:SF (reg:SF 289 [ _203 ])
            (reg:SF 296 [ _210 ]))) "CALRCH.f":131 841 {*fop_sf_1}
     (nil))
(insn 548 547 549 41 (set (reg:SF 298 [ _212 ])
        (reg:SF 297 [ _211 ])) "CALRCH.f":131 131 {*movsf_internal}
     (nil))
(insn 549 548 550 41 (set (reg:SF 838)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [0  S4 A32])) "CALRCH.f":131 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.25e-1 [0x0.8p-2])
        (nil)))
(insn 550 549 551 41 (set (reg:SF 299 [ _213 ])
        (mult:SF (reg:SF 298 [ _212 ])
            (reg:SF 838))) "CALRCH.f":131 838 {*fop_sf_comm}
     (nil))
(insn 551 550 552 41 (set (reg:SI 839)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":131 86 {*movsi_internal}
     (nil))
(insn 552 551 553 41 (set (reg:DI 300 [ _214 ])
        (sign_extend:DI (reg:SI 839))) "CALRCH.f":131 149 {*extendsidi2_rex64}
     (nil))
(insn 553 552 554 41 (parallel [
            (set (reg:DI 301 [ _215 ])
                (mult:DI (reg:DI 300 [ _214 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":131 349 {*muldi3_1}
     (nil))
(insn 554 553 555 41 (set (reg:SI 840)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALRCH.f":131 86 {*movsi_internal}
     (nil))
(insn 555 554 556 41 (set (reg:DI 302 [ _216 ])
        (sign_extend:DI (reg:SI 840))) "CALRCH.f":131 149 {*extendsidi2_rex64}
     (nil))
(insn 556 555 557 41 (parallel [
            (set (reg:DI 303 [ _217 ])
                (plus:DI (reg:DI 301 [ _215 ])
                    (reg:DI 302 [ _216 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":131 222 {*adddi_1}
     (nil))
(insn 557 556 558 41 (parallel [
            (set (reg:DI 304 [ _218 ])
                (plus:DI (reg:DI 303 [ _217 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":131 222 {*adddi_1}
     (nil))
(insn 558 557 559 41 (set (reg/f:DI 841)
        (symbol_ref:DI ("masks_") [flags 0x202]  <var_decl 0x7fe96ef00d80 masks>)) "CALRCH.f":131 85 {*movdi_internal}
     (nil))
(insn 559 558 560 41 (set (reg:SF 305 [ _219 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 304 [ _218 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 841)) [2 masks.hbm2 S4 A32])) "CALRCH.f":131 131 {*movsf_internal}
     (nil))
(insn 560 559 561 41 (set (reg:SF 306 [ _220 ])
        (mult:SF (reg:SF 299 [ _213 ])
            (reg:SF 305 [ _219 ]))) "CALRCH.f":131 838 {*fop_sf_comm}
     (nil))
(insn 561 560 562 41 (set (reg:SI 842)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALRCH.f":131 86 {*movsi_internal}
     (nil))
(insn 562 561 563 41 (set (reg:DI 307 [ _221 ])
        (sign_extend:DI (reg:SI 842))) "CALRCH.f":131 149 {*extendsidi2_rex64}
     (nil))
(insn 563 562 564 41 (parallel [
            (set (reg:DI 308 [ _222 ])
                (mult:DI (reg:DI 307 [ _221 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":131 349 {*muldi3_1}
     (nil))
(insn 564 563 565 41 (set (reg:SI 843)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":131 86 {*movsi_internal}
     (nil))
(insn 565 564 566 41 (set (reg:DI 309 [ _223 ])
        (sign_extend:DI (reg:SI 843))) "CALRCH.f":131 149 {*extendsidi2_rex64}
     (nil))
(insn 566 565 567 41 (parallel [
            (set (reg:DI 310 [ _224 ])
                (mult:DI (reg:DI 309 [ _223 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":131 349 {*muldi3_1}
     (nil))
(insn 567 566 568 41 (parallel [
            (set (reg:DI 311 [ _225 ])
                (plus:DI (reg:DI 308 [ _222 ])
                    (reg:DI 310 [ _224 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":131 222 {*adddi_1}
     (nil))
(insn 568 567 569 41 (set (reg:SI 844)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALRCH.f":131 86 {*movsi_internal}
     (nil))
(insn 569 568 570 41 (set (reg:DI 312 [ _226 ])
        (sign_extend:DI (reg:SI 844))) "CALRCH.f":131 149 {*extendsidi2_rex64}
     (nil))
(insn 570 569 571 41 (parallel [
            (set (reg:DI 313 [ _227 ])
                (plus:DI (reg:DI 311 [ _225 ])
                    (reg:DI 312 [ _226 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":131 222 {*adddi_1}
     (nil))
(insn 571 570 572 41 (parallel [
            (set (reg:DI 314 [ _228 ])
                (plus:DI (reg:DI 313 [ _227 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":131 222 {*adddi_1}
     (nil))
(insn 572 571 573 41 (set (reg:SF 315 [ _229 ])
        (plus:SF (reg:SF 268 [ _182 ])
            (reg:SF 306 [ _220 ]))) "CALRCH.f":131 838 {*fop_sf_comm}
     (nil))
(insn 573 572 574 41 (set (reg/f:DI 845)
        (symbol_ref:DI ("thv.4234") [flags 0x202]  <var_decl 0x7fe96ef1e900 thv>)) "CALRCH.f":131 85 {*movdi_internal}
     (nil))
(insn 574 573 575 41 (set (mem:SF (plus:DI (mult:DI (reg:DI 314 [ _228 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 845)) [2 thv S4 A32])
        (reg:SF 315 [ _229 ])) "CALRCH.f":131 131 {*movsf_internal}
     (nil))
(insn 575 574 1306 41 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":127 221 {*addsi_1}
     (nil))
(jump_insn 1306 575 1307 41 (set (pc)
        (label_ref 576)) "CALRCH.f":127 -1
     (nil)
 -> 576)
;;  succ:       40 [always] 

(barrier 1307 1306 1361)
;; basic block 78, loop depth 0, maybe hot
;;  prev block 41, next block 42, flags: (NEW, RTL, MODIFIED)
;;  pred:       40
;; bb 78 artificial_defs: { }
;; bb 78 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 1361 1307 1360 78 61 (nil) [1 uses])
(note 1360 1361 1362 78 [bb 78] NOTE_INSN_BASIC_BLOCK)
(insn 1362 1360 579 78 (const_int 0 [0]) "CALRCH.f":131 -1
     (nil))
;;  succ:       42 [always]  (FALLTHRU)

;; basic block 42, loop depth 0, maybe hot
;;  prev block 78, next block 77, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       78 [always]  (FALLTHRU)
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 579 1362 580 42 26 (nil) [0 uses])
(note 580 579 581 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 581 580 1308 42 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":126 221 {*addsi_1}
     (nil))
(jump_insn 1308 581 1309 42 (set (pc)
        (label_ref 582)) "CALRCH.f":126 -1
     (nil)
 -> 582)
;;  succ:       38 [always] 

(barrier 1309 1308 1358)
;; basic block 77, loop depth 0, maybe hot
;;  prev block 42, next block 43, flags: (NEW, RTL, MODIFIED)
;;  pred:       38
;; bb 77 artificial_defs: { }
;; bb 77 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 1358 1309 1357 77 60 (nil) [1 uses])
(note 1357 1358 1359 77 [bb 77] NOTE_INSN_BASIC_BLOCK)
(insn 1359 1357 585 77 (const_int 0 [0]) "CALRCH.f":127 -1
     (nil))
;;  succ:       43 [always]  (FALLTHRU)

;; basic block 43, loop depth 0, maybe hot
;;  prev block 77, next block 70, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       77 [always]  (FALLTHRU)
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 585 1359 586 43 25 (nil) [0 uses])
(note 586 585 587 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 587 586 1310 43 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":95 221 {*addsi_1}
     (nil))
(jump_insn 1310 587 1311 43 (set (pc)
        (label_ref 588)) "CALRCH.f":95 -1
     (nil)
 -> 588)
;;  succ:       18 [always] 

(barrier 1311 1310 1337)
;; basic block 70, loop depth 0, maybe hot
;;  prev block 43, next block 44, flags: (NEW, RTL, MODIFIED)
;;  pred:       18
;; bb 70 artificial_defs: { }
;; bb 70 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 1337 1311 1336 70 53 (nil) [1 uses])
(note 1336 1337 1338 70 [bb 70] NOTE_INSN_BASIC_BLOCK)
(insn 1338 1336 591 70 (const_int 0 [0]) "CALRCH.f":126 -1
     (nil))
;;  succ:       44 [always]  (FALLTHRU)

;; basic block 44, loop depth 0, maybe hot
;;  prev block 70, next block 45, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       70 [always]  (FALLTHRU)
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 591 1338 592 44 12 (nil) [0 uses])
(note 592 591 593 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 593 592 1265 44 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
        (const_int 1 [0x1])) "CALRCH.f":145 86 {*movsi_internal}
     (nil))
;;  succ:       45 (FALLTHRU)

;; basic block 45, loop depth 0, maybe hot
;;  prev block 44, next block 46, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       44 (FALLTHRU)
;;              63 [always] 
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 1265 593 594 45 42 (nil) [1 uses])
(note 594 1265 595 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 595 594 596 45 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
            (const_int 37 [0x25]))) "CALRCH.f":145 11 {*cmpsi_1}
     (nil))
(insn 596 595 597 45 (set (reg:QI 846)
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALRCH.f":145 678 {*setcc_qi}
     (nil))
(insn 597 596 598 45 (set (reg:SI 700 [ _693 ])
        (zero_extend:SI (reg:QI 846))) "CALRCH.f":145 140 {*zero_extendqisi2}
     (nil))
(insn 598 597 599 45 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 700 [ _693 ])
            (const_int 0 [0]))) "CALRCH.f":145 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 599 598 600 45 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1364)
            (pc))) "CALRCH.f":145 682 {*jcc}
     (nil)
 -> 1364)
;;  succ:       79
;;              46 (FALLTHRU)

;; basic block 46, loop depth 0, maybe hot
;;  prev block 45, next block 47, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       45 (FALLTHRU)
;; bb 46 artificial_defs: { }
;; bb 46 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(note 600 599 601 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 601 600 602 46 (set (reg:SI 701 [ _694 ])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7fe96ef06630 parallel>)
                    (const_int 24 [0x18]))) [1 parallel.jsta_m2+0 S4 A64])) "CALRCH.f":149 86 {*movsi_internal}
     (nil))
(insn 602 601 603 46 (set (reg:SI 702 [ _695 ])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7fe96ef06630 parallel>)
                    (const_int 28 [0x1c]))) [1 parallel.jend_m2+0 S4 A32])) "CALRCH.f":149 86 {*movsi_internal}
     (nil))
(insn 603 602 1259 46 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
        (reg:SI 701 [ _694 ])) "CALRCH.f":149 86 {*movsi_internal}
     (nil))
;;  succ:       47 (FALLTHRU)

;; basic block 47, loop depth 0, maybe hot
;;  prev block 46, next block 48, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       46 (FALLTHRU)
;;              62 [always] 
;; bb 47 artificial_defs: { }
;; bb 47 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 1259 603 604 47 41 (nil) [1 uses])
(note 604 1259 605 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 605 604 606 47 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (reg:SI 702 [ _695 ]))) "CALRCH.f":149 11 {*cmpsi_1}
     (nil))
(insn 606 605 607 47 (set (reg:QI 847)
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALRCH.f":149 678 {*setcc_qi}
     (nil))
(insn 607 606 608 47 (set (reg:SI 703 [ _697 ])
        (zero_extend:SI (reg:QI 847))) "CALRCH.f":149 140 {*zero_extendqisi2}
     (nil))
(insn 608 607 609 47 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 703 [ _697 ])
            (const_int 0 [0]))) "CALRCH.f":149 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 609 608 610 47 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1367)
            (pc))) "CALRCH.f":149 682 {*jcc}
     (nil)
 -> 1367)
;;  succ:       80
;;              48 (FALLTHRU)

;; basic block 48, loop depth 0, maybe hot
;;  prev block 47, next block 49, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       47 (FALLTHRU)
;; bb 48 artificial_defs: { }
;; bb 48 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(note 610 609 611 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 611 610 1253 48 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
        (const_int 2 [0x2])) "CALRCH.f":150 86 {*movsi_internal}
     (nil))
;;  succ:       49 (FALLTHRU)

;; basic block 49, loop depth 0, maybe hot
;;  prev block 48, next block 50, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       48 (FALLTHRU)
;;              61 [always] 
;; bb 49 artificial_defs: { }
;; bb 49 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 1253 611 612 49 40 (nil) [1 uses])
(note 612 1253 613 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 613 612 614 49 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
            (const_int 118 [0x76]))) "CALRCH.f":150 11 {*cmpsi_1}
     (nil))
(insn 614 613 615 49 (set (reg:QI 848)
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALRCH.f":150 678 {*setcc_qi}
     (nil))
(insn 615 614 616 49 (set (reg:SI 704 [ _699 ])
        (zero_extend:SI (reg:QI 848))) "CALRCH.f":150 140 {*zero_extendqisi2}
     (nil))
(insn 616 615 617 49 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 704 [ _699 ])
            (const_int 0 [0]))) "CALRCH.f":150 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 617 616 618 49 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1370)
            (pc))) "CALRCH.f":150 682 {*jcc}
     (nil)
 -> 1370)
;;  succ:       81
;;              50 (FALLTHRU)

;; basic block 50, loop depth 0, maybe hot
;;  prev block 49, next block 51, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       49 (FALLTHRU)
;; bb 50 artificial_defs: { }
;; bb 50 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(note 618 617 619 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 619 618 620 50 (set (reg:SI 849)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":151 86 {*movsi_internal}
     (nil))
(insn 620 619 621 50 (set (reg:DI 316 [ _230 ])
        (sign_extend:DI (reg:SI 849))) "CALRCH.f":151 149 {*extendsidi2_rex64}
     (nil))
(insn 621 620 622 50 (parallel [
            (set (reg:DI 317 [ _231 ])
                (plus:DI (reg:DI 316 [ _230 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":151 222 {*adddi_1}
     (nil))
(insn 622 621 626 50 (set (reg:SI 318 [ _232 ])
        (mem:SI (plus:DI (mult:DI (reg:DI 317 [ _231 ])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("indx_") [flags 0x2]  <var_decl 0x7fe96ef00630 indx>)) [1 indx.ihe S4 A32])) "CALRCH.f":151 86 {*movsi_internal}
     (nil))
(insn 626 622 627 50 (set (reg:SI 853)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALRCH.f":151 86 {*movsi_internal}
     (nil))
(insn 627 626 628 50 (parallel [
            (set (reg:SI 852)
                (plus:SI (reg:SI 318 [ _232 ])
                    (reg:SI 853)))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":151 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (reg:SI 318 [ _232 ])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32]))
        (nil)))
(insn 628 627 629 50 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [1 ie+0 S4 A32])
        (reg:SI 852)) "CALRCH.f":151 86 {*movsi_internal}
     (nil))
(insn 629 628 630 50 (set (reg:SI 854)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":152 86 {*movsi_internal}
     (nil))
(insn 630 629 631 50 (set (reg:DI 319 [ _233 ])
        (sign_extend:DI (reg:SI 854))) "CALRCH.f":152 149 {*extendsidi2_rex64}
     (nil))
(insn 631 630 632 50 (parallel [
            (set (reg:DI 320 [ _234 ])
                (plus:DI (reg:DI 319 [ _233 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":152 222 {*adddi_1}
     (nil))
(insn 632 631 633 50 (parallel [
            (set (reg:DI 855)
                (plus:DI (reg:DI 320 [ _234 ])
                    (const_int 249 [0xf9])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":152 222 {*adddi_1}
     (nil))
(insn 633 632 637 50 (set (reg:SI 321 [ _235 ])
        (mem:SI (plus:DI (mult:DI (reg:DI 855)
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("indx_") [flags 0x2]  <var_decl 0x7fe96ef00630 indx>)) [1 indx.ihw S4 A32])) "CALRCH.f":152 86 {*movsi_internal}
     (nil))
(insn 637 633 638 50 (set (reg:SI 859)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALRCH.f":152 86 {*movsi_internal}
     (nil))
(insn 638 637 639 50 (parallel [
            (set (reg:SI 858)
                (plus:SI (reg:SI 321 [ _235 ])
                    (reg:SI 859)))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":152 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (reg:SI 321 [ _235 ])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32]))
        (nil)))
(insn 639 638 640 50 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [1 iw+0 S4 A32])
        (reg:SI 858)) "CALRCH.f":152 86 {*movsi_internal}
     (nil))
(insn 640 639 641 50 (set (reg:SI 860)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALRCH.f":160 86 {*movsi_internal}
     (nil))
(insn 641 640 642 50 (set (reg:DI 322 [ _236 ])
        (sign_extend:DI (reg:SI 860))) "CALRCH.f":160 149 {*extendsidi2_rex64}
     (nil))
(insn 642 641 643 50 (parallel [
            (set (reg:DI 323 [ _237 ])
                (mult:DI (reg:DI 322 [ _236 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":160 349 {*muldi3_1}
     (nil))
(insn 643 642 644 50 (set (reg:SI 861)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":160 86 {*movsi_internal}
     (nil))
(insn 644 643 645 50 (parallel [
            (set (reg:SI 324 [ _238 ])
                (plus:SI (reg:SI 861)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":160 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 645 644 646 50 (set (reg:DI 325 [ _239 ])
        (sign_extend:DI (reg:SI 324 [ _238 ]))) "CALRCH.f":160 149 {*extendsidi2_rex64}
     (nil))
(insn 646 645 647 50 (parallel [
            (set (reg:DI 326 [ _240 ])
                (mult:DI (reg:DI 325 [ _239 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":160 349 {*muldi3_1}
     (nil))
(insn 647 646 648 50 (parallel [
            (set (reg:DI 327 [ _241 ])
                (plus:DI (reg:DI 323 [ _237 ])
                    (reg:DI 326 [ _240 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":160 222 {*adddi_1}
     (nil))
(insn 648 647 649 50 (set (reg:SI 862)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALRCH.f":160 86 {*movsi_internal}
     (nil))
(insn 649 648 650 50 (set (reg:DI 328 [ _242 ])
        (sign_extend:DI (reg:SI 862))) "CALRCH.f":160 149 {*extendsidi2_rex64}
     (nil))
(insn 650 649 651 50 (parallel [
            (set (reg:DI 329 [ _243 ])
                (plus:DI (reg:DI 327 [ _241 ])
                    (reg:DI 328 [ _242 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":160 222 {*adddi_1}
     (nil))
(insn 651 650 652 50 (parallel [
            (set (reg:DI 330 [ _244 ])
                (plus:DI (reg:DI 329 [ _243 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":160 222 {*adddi_1}
     (nil))
(insn 652 651 653 50 (set (reg/f:DI 863)
        (symbol_ref:DI ("masks_") [flags 0x202]  <var_decl 0x7fe96ef00d80 masks>)) "CALRCH.f":160 85 {*movdi_internal}
     (nil))
(insn 653 652 654 50 (parallel [
            (set (reg:DI 864)
                (plus:DI (reg:DI 330 [ _244 ])
                    (const_int 1274133 [0x137115])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":160 222 {*adddi_1}
     (nil))
(insn 654 653 655 50 (set (reg:SF 331 [ _245 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 864)
                    (const_int 4 [0x4]))
                (reg/f:DI 863)) [2 masks.vtm S4 A32])) "CALRCH.f":160 131 {*movsf_internal}
     (nil))
(insn 655 654 656 50 (set (reg:SI 865)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALRCH.f":160 86 {*movsi_internal}
     (nil))
(insn 656 655 657 50 (set (reg:DI 332 [ _246 ])
        (sign_extend:DI (reg:SI 865))) "CALRCH.f":160 149 {*extendsidi2_rex64}
     (nil))
(insn 657 656 658 50 (parallel [
            (set (reg:DI 333 [ _247 ])
                (mult:DI (reg:DI 332 [ _246 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":160 349 {*muldi3_1}
     (nil))
(insn 658 657 659 50 (set (reg:SI 866)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":160 86 {*movsi_internal}
     (nil))
(insn 659 658 660 50 (set (reg:DI 334 [ _248 ])
        (sign_extend:DI (reg:SI 866))) "CALRCH.f":160 149 {*extendsidi2_rex64}
     (nil))
(insn 660 659 661 50 (parallel [
            (set (reg:DI 335 [ _249 ])
                (mult:DI (reg:DI 334 [ _248 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":160 349 {*muldi3_1}
     (nil))
(insn 661 660 662 50 (parallel [
            (set (reg:DI 336 [ _250 ])
                (plus:DI (reg:DI 333 [ _247 ])
                    (reg:DI 335 [ _249 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":160 222 {*adddi_1}
     (nil))
(insn 662 661 663 50 (set (reg:SI 867)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [1 iw+0 S4 A32])) "CALRCH.f":160 86 {*movsi_internal}
     (nil))
(insn 663 662 664 50 (set (reg:DI 337 [ _251 ])
        (sign_extend:DI (reg:SI 867))) "CALRCH.f":160 149 {*extendsidi2_rex64}
     (nil))
(insn 664 663 665 50 (parallel [
            (set (reg:DI 338 [ _252 ])
                (plus:DI (reg:DI 336 [ _250 ])
                    (reg:DI 337 [ _251 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":160 222 {*adddi_1}
     (nil))
(insn 665 664 666 50 (parallel [
            (set (reg:DI 339 [ _253 ])
                (plus:DI (reg:DI 338 [ _252 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":160 222 {*adddi_1}
     (nil))
(insn 666 665 667 50 (set (reg/f:DI 868)
        (symbol_ref:DI ("masks_") [flags 0x202]  <var_decl 0x7fe96ef00d80 masks>)) "CALRCH.f":160 85 {*movdi_internal}
     (nil))
(insn 667 666 668 50 (parallel [
            (set (reg:DI 869)
                (plus:DI (reg:DI 339 [ _253 ])
                    (const_int 1274133 [0x137115])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":160 222 {*adddi_1}
     (nil))
(insn 668 667 669 50 (set (reg:SF 340 [ _254 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 869)
                    (const_int 4 [0x4]))
                (reg/f:DI 868)) [2 masks.vtm S4 A32])) "CALRCH.f":160 131 {*movsf_internal}
     (nil))
(insn 669 668 670 50 (set (reg:SF 341 [ _255 ])
        (plus:SF (reg:SF 331 [ _245 ])
            (reg:SF 340 [ _254 ]))) "CALRCH.f":160 838 {*fop_sf_comm}
     (nil))
(insn 670 669 671 50 (set (reg:SI 870)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALRCH.f":160 86 {*movsi_internal}
     (nil))
(insn 671 670 672 50 (set (reg:DI 342 [ _256 ])
        (sign_extend:DI (reg:SI 870))) "CALRCH.f":160 149 {*extendsidi2_rex64}
     (nil))
(insn 672 671 673 50 (parallel [
            (set (reg:DI 343 [ _257 ])
                (mult:DI (reg:DI 342 [ _256 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":160 349 {*muldi3_1}
     (nil))
(insn 673 672 674 50 (set (reg:SI 871)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":160 86 {*movsi_internal}
     (nil))
(insn 674 673 675 50 (set (reg:DI 344 [ _258 ])
        (sign_extend:DI (reg:SI 871))) "CALRCH.f":160 149 {*extendsidi2_rex64}
     (nil))
(insn 675 674 676 50 (parallel [
            (set (reg:DI 345 [ _259 ])
                (mult:DI (reg:DI 344 [ _258 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":160 349 {*muldi3_1}
     (nil))
(insn 676 675 677 50 (parallel [
            (set (reg:DI 346 [ _260 ])
                (plus:DI (reg:DI 343 [ _257 ])
                    (reg:DI 345 [ _259 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":160 222 {*adddi_1}
     (nil))
(insn 677 676 678 50 (set (reg:SI 872)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [1 ie+0 S4 A32])) "CALRCH.f":160 86 {*movsi_internal}
     (nil))
(insn 678 677 679 50 (set (reg:DI 347 [ _261 ])
        (sign_extend:DI (reg:SI 872))) "CALRCH.f":160 149 {*extendsidi2_rex64}
     (nil))
(insn 679 678 680 50 (parallel [
            (set (reg:DI 348 [ _262 ])
                (plus:DI (reg:DI 346 [ _260 ])
                    (reg:DI 347 [ _261 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":160 222 {*adddi_1}
     (nil))
(insn 680 679 681 50 (parallel [
            (set (reg:DI 349 [ _263 ])
                (plus:DI (reg:DI 348 [ _262 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":160 222 {*adddi_1}
     (nil))
(insn 681 680 682 50 (set (reg/f:DI 873)
        (symbol_ref:DI ("masks_") [flags 0x202]  <var_decl 0x7fe96ef00d80 masks>)) "CALRCH.f":160 85 {*movdi_internal}
     (nil))
(insn 682 681 683 50 (parallel [
            (set (reg:DI 874)
                (plus:DI (reg:DI 349 [ _263 ])
                    (const_int 1274133 [0x137115])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":160 222 {*adddi_1}
     (nil))
(insn 683 682 684 50 (set (reg:SF 350 [ _264 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 874)
                    (const_int 4 [0x4]))
                (reg/f:DI 873)) [2 masks.vtm S4 A32])) "CALRCH.f":160 131 {*movsf_internal}
     (nil))
(insn 684 683 685 50 (set (reg:SF 351 [ _265 ])
        (plus:SF (reg:SF 341 [ _255 ])
            (reg:SF 350 [ _264 ]))) "CALRCH.f":160 838 {*fop_sf_comm}
     (nil))
(insn 685 684 686 50 (set (reg:SI 875)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALRCH.f":160 86 {*movsi_internal}
     (nil))
(insn 686 685 687 50 (set (reg:DI 352 [ _266 ])
        (sign_extend:DI (reg:SI 875))) "CALRCH.f":160 149 {*extendsidi2_rex64}
     (nil))
(insn 687 686 688 50 (parallel [
            (set (reg:DI 353 [ _267 ])
                (mult:DI (reg:DI 352 [ _266 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":160 349 {*muldi3_1}
     (nil))
(insn 688 687 689 50 (set (reg:SI 876)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":160 86 {*movsi_internal}
     (nil))
(insn 689 688 690 50 (parallel [
            (set (reg:SI 354 [ _268 ])
                (plus:SI (reg:SI 876)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":160 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 690 689 691 50 (set (reg:DI 355 [ _269 ])
        (sign_extend:DI (reg:SI 354 [ _268 ]))) "CALRCH.f":160 149 {*extendsidi2_rex64}
     (nil))
(insn 691 690 692 50 (parallel [
            (set (reg:DI 356 [ _270 ])
                (mult:DI (reg:DI 355 [ _269 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":160 349 {*muldi3_1}
     (nil))
(insn 692 691 693 50 (parallel [
            (set (reg:DI 357 [ _271 ])
                (plus:DI (reg:DI 353 [ _267 ])
                    (reg:DI 356 [ _270 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":160 222 {*adddi_1}
     (nil))
(insn 693 692 694 50 (set (reg:SI 877)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALRCH.f":160 86 {*movsi_internal}
     (nil))
(insn 694 693 695 50 (set (reg:DI 358 [ _272 ])
        (sign_extend:DI (reg:SI 877))) "CALRCH.f":160 149 {*extendsidi2_rex64}
     (nil))
(insn 695 694 696 50 (parallel [
            (set (reg:DI 359 [ _273 ])
                (plus:DI (reg:DI 357 [ _271 ])
                    (reg:DI 358 [ _272 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":160 222 {*adddi_1}
     (nil))
(insn 696 695 697 50 (parallel [
            (set (reg:DI 360 [ _274 ])
                (plus:DI (reg:DI 359 [ _273 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":160 222 {*adddi_1}
     (nil))
(insn 697 696 698 50 (set (reg/f:DI 878)
        (symbol_ref:DI ("masks_") [flags 0x202]  <var_decl 0x7fe96ef00d80 masks>)) "CALRCH.f":160 85 {*movdi_internal}
     (nil))
(insn 698 697 699 50 (parallel [
            (set (reg:DI 879)
                (plus:DI (reg:DI 360 [ _274 ])
                    (const_int 1274133 [0x137115])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":160 222 {*adddi_1}
     (nil))
(insn 699 698 700 50 (set (reg:SF 361 [ _275 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 879)
                    (const_int 4 [0x4]))
                (reg/f:DI 878)) [2 masks.vtm S4 A32])) "CALRCH.f":160 131 {*movsf_internal}
     (nil))
(insn 700 699 701 50 (set (reg:SF 880)
        (plus:SF (reg:SF 351 [ _265 ])
            (reg:SF 361 [ _275 ]))) "CALRCH.f":160 838 {*fop_sf_comm}
     (nil))
(insn 701 700 702 50 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -28 [0xffffffffffffffe4])) [2 wndsl+0 S4 A32])
        (reg:SF 880)) "CALRCH.f":160 131 {*movsf_internal}
     (nil))
(insn 702 701 703 50 (set (reg:SI 881)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALRCH.f":162 86 {*movsi_internal}
     (nil))
(insn 703 702 704 50 (parallel [
            (set (reg:SI 362 [ _276 ])
                (plus:SI (reg:SI 881)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":162 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 704 703 705 50 (set (reg:DI 363 [ _277 ])
        (sign_extend:DI (reg:SI 362 [ _276 ]))) "CALRCH.f":162 149 {*extendsidi2_rex64}
     (nil))
(insn 705 704 706 50 (parallel [
            (set (reg:DI 364 [ _278 ])
                (mult:DI (reg:DI 363 [ _277 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":162 349 {*muldi3_1}
     (nil))
(insn 706 705 707 50 (set (reg:SI 882)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":162 86 {*movsi_internal}
     (nil))
(insn 707 706 708 50 (parallel [
            (set (reg:SI 365 [ _279 ])
                (plus:SI (reg:SI 882)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":162 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 708 707 709 50 (set (reg:DI 366 [ _280 ])
        (sign_extend:DI (reg:SI 365 [ _279 ]))) "CALRCH.f":162 149 {*extendsidi2_rex64}
     (nil))
(insn 709 708 710 50 (parallel [
            (set (reg:DI 367 [ _281 ])
                (mult:DI (reg:DI 366 [ _280 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":162 349 {*muldi3_1}
     (nil))
(insn 710 709 711 50 (parallel [
            (set (reg:DI 368 [ _282 ])
                (plus:DI (reg:DI 364 [ _278 ])
                    (reg:DI 367 [ _281 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":162 222 {*adddi_1}
     (nil))
(insn 711 710 712 50 (set (reg:SI 883)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALRCH.f":162 86 {*movsi_internal}
     (nil))
(insn 712 711 713 50 (set (reg:DI 369 [ _283 ])
        (sign_extend:DI (reg:SI 883))) "CALRCH.f":162 149 {*extendsidi2_rex64}
     (nil))
(insn 713 712 714 50 (parallel [
            (set (reg:DI 370 [ _284 ])
                (plus:DI (reg:DI 368 [ _282 ])
                    (reg:DI 369 [ _283 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":162 222 {*adddi_1}
     (nil))
(insn 714 713 715 50 (parallel [
            (set (reg:DI 371 [ _285 ])
                (plus:DI (reg:DI 370 [ _284 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":162 222 {*adddi_1}
     (nil))
(insn 715 714 716 50 (set (reg/f:DI 884)
        (symbol_ref:DI ("masks_") [flags 0x202]  <var_decl 0x7fe96ef00d80 masks>)) "CALRCH.f":162 85 {*movdi_internal}
     (nil))
(insn 716 715 717 50 (parallel [
            (set (reg:DI 885)
                (plus:DI (reg:DI 371 [ _285 ])
                    (const_int 1274133 [0x137115])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":162 222 {*adddi_1}
     (nil))
(insn 717 716 718 50 (set (reg:SF 372 [ _286 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 885)
                    (const_int 4 [0x4]))
                (reg/f:DI 884)) [2 masks.vtm S4 A32])) "CALRCH.f":162 131 {*movsf_internal}
     (nil))
(insn 718 717 719 50 (set (reg:SI 886)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALRCH.f":162 86 {*movsi_internal}
     (nil))
(insn 719 718 720 50 (parallel [
            (set (reg:SI 373 [ _287 ])
                (plus:SI (reg:SI 886)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":162 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 720 719 721 50 (set (reg:DI 374 [ _288 ])
        (sign_extend:DI (reg:SI 373 [ _287 ]))) "CALRCH.f":162 149 {*extendsidi2_rex64}
     (nil))
(insn 721 720 722 50 (parallel [
            (set (reg:DI 375 [ _289 ])
                (mult:DI (reg:DI 374 [ _288 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":162 349 {*muldi3_1}
     (nil))
(insn 722 721 723 50 (set (reg:SI 887)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":162 86 {*movsi_internal}
     (nil))
(insn 723 722 724 50 (set (reg:DI 376 [ _290 ])
        (sign_extend:DI (reg:SI 887))) "CALRCH.f":162 149 {*extendsidi2_rex64}
     (nil))
(insn 724 723 725 50 (parallel [
            (set (reg:DI 377 [ _291 ])
                (mult:DI (reg:DI 376 [ _290 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":162 349 {*muldi3_1}
     (nil))
(insn 725 724 726 50 (parallel [
            (set (reg:DI 378 [ _292 ])
                (plus:DI (reg:DI 375 [ _289 ])
                    (reg:DI 377 [ _291 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":162 222 {*adddi_1}
     (nil))
(insn 726 725 727 50 (set (reg:SI 888)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [1 iw+0 S4 A32])) "CALRCH.f":162 86 {*movsi_internal}
     (nil))
(insn 727 726 728 50 (set (reg:DI 379 [ _293 ])
        (sign_extend:DI (reg:SI 888))) "CALRCH.f":162 149 {*extendsidi2_rex64}
     (nil))
(insn 728 727 729 50 (parallel [
            (set (reg:DI 380 [ _294 ])
                (plus:DI (reg:DI 378 [ _292 ])
                    (reg:DI 379 [ _293 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":162 222 {*adddi_1}
     (nil))
(insn 729 728 730 50 (parallel [
            (set (reg:DI 381 [ _295 ])
                (plus:DI (reg:DI 380 [ _294 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":162 222 {*adddi_1}
     (nil))
(insn 730 729 731 50 (set (reg/f:DI 889)
        (symbol_ref:DI ("masks_") [flags 0x202]  <var_decl 0x7fe96ef00d80 masks>)) "CALRCH.f":162 85 {*movdi_internal}
     (nil))
(insn 731 730 732 50 (parallel [
            (set (reg:DI 890)
                (plus:DI (reg:DI 381 [ _295 ])
                    (const_int 1274133 [0x137115])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":162 222 {*adddi_1}
     (nil))
(insn 732 731 733 50 (set (reg:SF 382 [ _296 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 890)
                    (const_int 4 [0x4]))
                (reg/f:DI 889)) [2 masks.vtm S4 A32])) "CALRCH.f":162 131 {*movsf_internal}
     (nil))
(insn 733 732 734 50 (set (reg:SF 383 [ _297 ])
        (plus:SF (reg:SF 372 [ _286 ])
            (reg:SF 382 [ _296 ]))) "CALRCH.f":162 838 {*fop_sf_comm}
     (nil))
(insn 734 733 735 50 (set (reg:SI 891)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALRCH.f":162 86 {*movsi_internal}
     (nil))
(insn 735 734 736 50 (parallel [
            (set (reg:SI 384 [ _298 ])
                (plus:SI (reg:SI 891)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":162 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 736 735 737 50 (set (reg:DI 385 [ _299 ])
        (sign_extend:DI (reg:SI 384 [ _298 ]))) "CALRCH.f":162 149 {*extendsidi2_rex64}
     (nil))
(insn 737 736 738 50 (parallel [
            (set (reg:DI 386 [ _300 ])
                (mult:DI (reg:DI 385 [ _299 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":162 349 {*muldi3_1}
     (nil))
(insn 738 737 739 50 (set (reg:SI 892)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":162 86 {*movsi_internal}
     (nil))
(insn 739 738 740 50 (set (reg:DI 387 [ _301 ])
        (sign_extend:DI (reg:SI 892))) "CALRCH.f":162 149 {*extendsidi2_rex64}
     (nil))
(insn 740 739 741 50 (parallel [
            (set (reg:DI 388 [ _302 ])
                (mult:DI (reg:DI 387 [ _301 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":162 349 {*muldi3_1}
     (nil))
(insn 741 740 742 50 (parallel [
            (set (reg:DI 389 [ _303 ])
                (plus:DI (reg:DI 386 [ _300 ])
                    (reg:DI 388 [ _302 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":162 222 {*adddi_1}
     (nil))
(insn 742 741 743 50 (set (reg:SI 893)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [1 ie+0 S4 A32])) "CALRCH.f":162 86 {*movsi_internal}
     (nil))
(insn 743 742 744 50 (set (reg:DI 390 [ _304 ])
        (sign_extend:DI (reg:SI 893))) "CALRCH.f":162 149 {*extendsidi2_rex64}
     (nil))
(insn 744 743 745 50 (parallel [
            (set (reg:DI 391 [ _305 ])
                (plus:DI (reg:DI 389 [ _303 ])
                    (reg:DI 390 [ _304 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":162 222 {*adddi_1}
     (nil))
(insn 745 744 746 50 (parallel [
            (set (reg:DI 392 [ _306 ])
                (plus:DI (reg:DI 391 [ _305 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":162 222 {*adddi_1}
     (nil))
(insn 746 745 747 50 (set (reg/f:DI 894)
        (symbol_ref:DI ("masks_") [flags 0x202]  <var_decl 0x7fe96ef00d80 masks>)) "CALRCH.f":162 85 {*movdi_internal}
     (nil))
(insn 747 746 748 50 (parallel [
            (set (reg:DI 895)
                (plus:DI (reg:DI 392 [ _306 ])
                    (const_int 1274133 [0x137115])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":162 222 {*adddi_1}
     (nil))
(insn 748 747 749 50 (set (reg:SF 393 [ _307 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 895)
                    (const_int 4 [0x4]))
                (reg/f:DI 894)) [2 masks.vtm S4 A32])) "CALRCH.f":162 131 {*movsf_internal}
     (nil))
(insn 749 748 750 50 (set (reg:SF 394 [ _308 ])
        (plus:SF (reg:SF 383 [ _297 ])
            (reg:SF 393 [ _307 ]))) "CALRCH.f":162 838 {*fop_sf_comm}
     (nil))
(insn 750 749 751 50 (set (reg:SI 896)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALRCH.f":162 86 {*movsi_internal}
     (nil))
(insn 751 750 752 50 (parallel [
            (set (reg:SI 395 [ _309 ])
                (plus:SI (reg:SI 896)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":162 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 752 751 753 50 (set (reg:DI 396 [ _310 ])
        (sign_extend:DI (reg:SI 395 [ _309 ]))) "CALRCH.f":162 149 {*extendsidi2_rex64}
     (nil))
(insn 753 752 754 50 (parallel [
            (set (reg:DI 397 [ _311 ])
                (mult:DI (reg:DI 396 [ _310 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":162 349 {*muldi3_1}
     (nil))
(insn 754 753 755 50 (set (reg:SI 897)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":162 86 {*movsi_internal}
     (nil))
(insn 755 754 756 50 (parallel [
            (set (reg:SI 398 [ _312 ])
                (plus:SI (reg:SI 897)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":162 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 756 755 757 50 (set (reg:DI 399 [ _313 ])
        (sign_extend:DI (reg:SI 398 [ _312 ]))) "CALRCH.f":162 149 {*extendsidi2_rex64}
     (nil))
(insn 757 756 758 50 (parallel [
            (set (reg:DI 400 [ _314 ])
                (mult:DI (reg:DI 399 [ _313 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":162 349 {*muldi3_1}
     (nil))
(insn 758 757 759 50 (parallel [
            (set (reg:DI 401 [ _315 ])
                (plus:DI (reg:DI 397 [ _311 ])
                    (reg:DI 400 [ _314 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":162 222 {*adddi_1}
     (nil))
(insn 759 758 760 50 (set (reg:SI 898)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALRCH.f":162 86 {*movsi_internal}
     (nil))
(insn 760 759 761 50 (set (reg:DI 402 [ _316 ])
        (sign_extend:DI (reg:SI 898))) "CALRCH.f":162 149 {*extendsidi2_rex64}
     (nil))
(insn 761 760 762 50 (parallel [
            (set (reg:DI 403 [ _317 ])
                (plus:DI (reg:DI 401 [ _315 ])
                    (reg:DI 402 [ _316 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":162 222 {*adddi_1}
     (nil))
(insn 762 761 763 50 (parallel [
            (set (reg:DI 404 [ _318 ])
                (plus:DI (reg:DI 403 [ _317 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":162 222 {*adddi_1}
     (nil))
(insn 763 762 764 50 (set (reg/f:DI 899)
        (symbol_ref:DI ("masks_") [flags 0x202]  <var_decl 0x7fe96ef00d80 masks>)) "CALRCH.f":162 85 {*movdi_internal}
     (nil))
(insn 764 763 765 50 (parallel [
            (set (reg:DI 900)
                (plus:DI (reg:DI 404 [ _318 ])
                    (const_int 1274133 [0x137115])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":162 222 {*adddi_1}
     (nil))
(insn 765 764 766 50 (set (reg:SF 405 [ _319 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 900)
                    (const_int 4 [0x4]))
                (reg/f:DI 899)) [2 masks.vtm S4 A32])) "CALRCH.f":162 131 {*movsf_internal}
     (nil))
(insn 766 765 767 50 (set (reg:SF 901)
        (plus:SF (reg:SF 394 [ _308 ])
            (reg:SF 405 [ _319 ]))) "CALRCH.f":162 838 {*fop_sf_comm}
     (nil))
(insn 767 766 768 50 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [2 wndslp+0 S4 A32])
        (reg:SF 901)) "CALRCH.f":162 131 {*movsf_internal}
     (nil))
(insn 768 767 769 50 (set (reg:SF 902)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC6") [flags 0x2]) [0  S4 A32])) "CALRCH.f":163 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 769 768 770 50 (set (reg:CCFP 17 flags)
        (unspec:CCFP [
                (compare:CCFP (reg:SF 902)
                    (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                            (const_int -28 [0xffffffffffffffe4])) [2 wndsl+0 S4 A32]))
            ] UNSPEC_NOTRAP)) "CALRCH.f":163 54 {*cmpiusf}
     (nil))
(jump_insn 770 769 1274 50 (set (pc)
        (if_then_else (unordered (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1280)
            (pc))) "CALRCH.f":163 682 {*jcc}
     (nil)
 -> 1280)
;;  succ:       52
;;              51 (FALLTHRU)

;; basic block 51, loop depth 0, maybe hot
;;  prev block 50, next block 52, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       50 (FALLTHRU)
;; bb 51 artificial_defs: { }
;; bb 51 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(note 1274 770 771 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 771 1274 772 51 (set (reg:SF 903)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC6") [flags 0x2]) [0  S4 A32])) "CALRCH.f":163 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 772 771 773 51 (set (reg:CCFP 17 flags)
        (unspec:CCFP [
                (compare:CCFP (reg:SF 903)
                    (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                            (const_int -28 [0xffffffffffffffe4])) [2 wndsl+0 S4 A32]))
            ] UNSPEC_NOTRAP)) "CALRCH.f":163 54 {*cmpiusf}
     (nil))
(jump_insn 773 772 1280 51 (set (pc)
        (if_then_else (uneq (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref 1250)
            (pc))) "CALRCH.f":163 682 {*jcc}
     (nil)
 -> 1250)
;;  succ:       61
;;              52 (FALLTHRU)

;; basic block 52, loop depth 0, maybe hot
;;  prev block 51, next block 53, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       51 (FALLTHRU)
;;              50
;; bb 52 artificial_defs: { }
;; bb 52 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 1280 773 775 52 44 (nil) [1 uses])
(note 775 1280 776 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 776 775 777 52 (set (reg:SF 904)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC6") [flags 0x2]) [0  S4 A32])) "CALRCH.f":163 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 777 776 778 52 (set (reg:CCFP 17 flags)
        (unspec:CCFP [
                (compare:CCFP (reg:SF 904)
                    (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                            (const_int -32 [0xffffffffffffffe0])) [2 wndslp+0 S4 A32]))
            ] UNSPEC_NOTRAP)) "CALRCH.f":163 54 {*cmpiusf}
     (nil))
(jump_insn 778 777 1276 52 (set (pc)
        (if_then_else (unordered (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1281)
            (pc))) "CALRCH.f":163 682 {*jcc}
     (nil)
 -> 1281)
;;  succ:       54
;;              53 (FALLTHRU)

;; basic block 53, loop depth 0, maybe hot
;;  prev block 52, next block 54, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       52 (FALLTHRU)
;; bb 53 artificial_defs: { }
;; bb 53 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(note 1276 778 779 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(insn 779 1276 780 53 (set (reg:SF 905)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC6") [flags 0x2]) [0  S4 A32])) "CALRCH.f":163 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 780 779 781 53 (set (reg:CCFP 17 flags)
        (unspec:CCFP [
                (compare:CCFP (reg:SF 905)
                    (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                            (const_int -32 [0xffffffffffffffe0])) [2 wndslp+0 S4 A32]))
            ] UNSPEC_NOTRAP)) "CALRCH.f":163 54 {*cmpiusf}
     (nil))
(jump_insn 781 780 1281 53 (set (pc)
        (if_then_else (uneq (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref 1250)
            (pc))) "CALRCH.f":163 682 {*jcc}
     (nil)
 -> 1250)
;;  succ:       61
;;              54 (FALLTHRU)

;; basic block 54, loop depth 0, maybe hot
;;  prev block 53, next block 55, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       53 (FALLTHRU)
;;              52
;; bb 54 artificial_defs: { }
;; bb 54 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 1281 781 783 54 45 (nil) [1 uses])
(note 783 1281 784 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(insn 784 783 785 54 (set (reg:SI 906)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALRCH.f":164 86 {*movsi_internal}
     (nil))
(insn 785 784 786 54 (set (reg:DI 406 [ _320 ])
        (sign_extend:DI (reg:SI 906))) "CALRCH.f":164 149 {*extendsidi2_rex64}
     (nil))
(insn 786 785 787 54 (parallel [
            (set (reg:DI 407 [ _321 ])
                (mult:DI (reg:DI 406 [ _320 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":164 349 {*muldi3_1}
     (nil))
(insn 787 786 788 54 (set (reg:SI 907)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":164 86 {*movsi_internal}
     (nil))
(insn 788 787 789 54 (parallel [
            (set (reg:SI 408 [ _322 ])
                (plus:SI (reg:SI 907)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":164 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 789 788 790 54 (set (reg:DI 409 [ _323 ])
        (sign_extend:DI (reg:SI 408 [ _322 ]))) "CALRCH.f":164 149 {*extendsidi2_rex64}
     (nil))
(insn 790 789 791 54 (parallel [
            (set (reg:DI 410 [ _324 ])
                (mult:DI (reg:DI 409 [ _323 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":164 349 {*muldi3_1}
     (nil))
(insn 791 790 792 54 (parallel [
            (set (reg:DI 411 [ _325 ])
                (plus:DI (reg:DI 407 [ _321 ])
                    (reg:DI 410 [ _324 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":164 222 {*adddi_1}
     (nil))
(insn 792 791 793 54 (set (reg:SI 908)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALRCH.f":164 86 {*movsi_internal}
     (nil))
(insn 793 792 794 54 (set (reg:DI 412 [ _326 ])
        (sign_extend:DI (reg:SI 908))) "CALRCH.f":164 149 {*extendsidi2_rex64}
     (nil))
(insn 794 793 795 54 (parallel [
            (set (reg:DI 413 [ _327 ])
                (plus:DI (reg:DI 411 [ _325 ])
                    (reg:DI 412 [ _326 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":164 222 {*adddi_1}
     (nil))
(insn 795 794 796 54 (parallel [
            (set (reg:DI 414 [ _328 ])
                (plus:DI (reg:DI 413 [ _327 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":164 222 {*adddi_1}
     (nil))
(insn 796 795 797 54 (set (reg/f:DI 909)
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7fe96ef1b900 vrbls>)) "CALRCH.f":164 85 {*movdi_internal}
     (nil))
(insn 797 796 798 54 (parallel [
            (set (reg:DI 910)
                (plus:DI (reg:DI 414 [ _328 ])
                    (const_int 88893 [0x15b3d])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":164 222 {*adddi_1}
     (nil))
(insn 798 797 799 54 (set (reg:SF 415 [ _329 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 910)
                    (const_int 4 [0x4]))
                (reg/f:DI 909)) [2 vrbls.u S4 A32])) "CALRCH.f":164 131 {*movsf_internal}
     (nil))
(insn 799 798 800 54 (set (reg:SI 911)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALRCH.f":164 86 {*movsi_internal}
     (nil))
(insn 800 799 801 54 (set (reg:DI 416 [ _330 ])
        (sign_extend:DI (reg:SI 911))) "CALRCH.f":164 149 {*extendsidi2_rex64}
     (nil))
(insn 801 800 802 54 (parallel [
            (set (reg:DI 417 [ _331 ])
                (mult:DI (reg:DI 416 [ _330 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":164 349 {*muldi3_1}
     (nil))
(insn 802 801 803 54 (set (reg:SI 912)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":164 86 {*movsi_internal}
     (nil))
(insn 803 802 804 54 (set (reg:DI 418 [ _332 ])
        (sign_extend:DI (reg:SI 912))) "CALRCH.f":164 149 {*extendsidi2_rex64}
     (nil))
(insn 804 803 805 54 (parallel [
            (set (reg:DI 419 [ _333 ])
                (mult:DI (reg:DI 418 [ _332 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":164 349 {*muldi3_1}
     (nil))
(insn 805 804 806 54 (parallel [
            (set (reg:DI 420 [ _334 ])
                (plus:DI (reg:DI 417 [ _331 ])
                    (reg:DI 419 [ _333 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":164 222 {*adddi_1}
     (nil))
(insn 806 805 807 54 (set (reg:SI 913)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [1 iw+0 S4 A32])) "CALRCH.f":164 86 {*movsi_internal}
     (nil))
(insn 807 806 808 54 (set (reg:DI 421 [ _335 ])
        (sign_extend:DI (reg:SI 913))) "CALRCH.f":164 149 {*extendsidi2_rex64}
     (nil))
(insn 808 807 809 54 (parallel [
            (set (reg:DI 422 [ _336 ])
                (plus:DI (reg:DI 420 [ _334 ])
                    (reg:DI 421 [ _335 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":164 222 {*adddi_1}
     (nil))
(insn 809 808 810 54 (parallel [
            (set (reg:DI 423 [ _337 ])
                (plus:DI (reg:DI 422 [ _336 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":164 222 {*adddi_1}
     (nil))
(insn 810 809 811 54 (set (reg/f:DI 914)
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7fe96ef1b900 vrbls>)) "CALRCH.f":164 85 {*movdi_internal}
     (nil))
(insn 811 810 812 54 (parallel [
            (set (reg:DI 915)
                (plus:DI (reg:DI 423 [ _337 ])
                    (const_int 88893 [0x15b3d])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":164 222 {*adddi_1}
     (nil))
(insn 812 811 813 54 (set (reg:SF 424 [ _338 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 915)
                    (const_int 4 [0x4]))
                (reg/f:DI 914)) [2 vrbls.u S4 A32])) "CALRCH.f":164 131 {*movsf_internal}
     (nil))
(insn 813 812 814 54 (set (reg:SF 425 [ _339 ])
        (plus:SF (reg:SF 415 [ _329 ])
            (reg:SF 424 [ _338 ]))) "CALRCH.f":164 838 {*fop_sf_comm}
     (nil))
(insn 814 813 815 54 (set (reg:SI 916)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALRCH.f":164 86 {*movsi_internal}
     (nil))
(insn 815 814 816 54 (set (reg:DI 426 [ _340 ])
        (sign_extend:DI (reg:SI 916))) "CALRCH.f":164 149 {*extendsidi2_rex64}
     (nil))
(insn 816 815 817 54 (parallel [
            (set (reg:DI 427 [ _341 ])
                (mult:DI (reg:DI 426 [ _340 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":164 349 {*muldi3_1}
     (nil))
(insn 817 816 818 54 (set (reg:SI 917)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":164 86 {*movsi_internal}
     (nil))
(insn 818 817 819 54 (set (reg:DI 428 [ _342 ])
        (sign_extend:DI (reg:SI 917))) "CALRCH.f":164 149 {*extendsidi2_rex64}
     (nil))
(insn 819 818 820 54 (parallel [
            (set (reg:DI 429 [ _343 ])
                (mult:DI (reg:DI 428 [ _342 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":164 349 {*muldi3_1}
     (nil))
(insn 820 819 821 54 (parallel [
            (set (reg:DI 430 [ _344 ])
                (plus:DI (reg:DI 427 [ _341 ])
                    (reg:DI 429 [ _343 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":164 222 {*adddi_1}
     (nil))
(insn 821 820 822 54 (set (reg:SI 918)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [1 ie+0 S4 A32])) "CALRCH.f":164 86 {*movsi_internal}
     (nil))
(insn 822 821 823 54 (set (reg:DI 431 [ _345 ])
        (sign_extend:DI (reg:SI 918))) "CALRCH.f":164 149 {*extendsidi2_rex64}
     (nil))
(insn 823 822 824 54 (parallel [
            (set (reg:DI 432 [ _346 ])
                (plus:DI (reg:DI 430 [ _344 ])
                    (reg:DI 431 [ _345 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":164 222 {*adddi_1}
     (nil))
(insn 824 823 825 54 (parallel [
            (set (reg:DI 433 [ _347 ])
                (plus:DI (reg:DI 432 [ _346 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":164 222 {*adddi_1}
     (nil))
(insn 825 824 826 54 (set (reg/f:DI 919)
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7fe96ef1b900 vrbls>)) "CALRCH.f":164 85 {*movdi_internal}
     (nil))
(insn 826 825 827 54 (parallel [
            (set (reg:DI 920)
                (plus:DI (reg:DI 433 [ _347 ])
                    (const_int 88893 [0x15b3d])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":164 222 {*adddi_1}
     (nil))
(insn 827 826 828 54 (set (reg:SF 434 [ _348 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 920)
                    (const_int 4 [0x4]))
                (reg/f:DI 919)) [2 vrbls.u S4 A32])) "CALRCH.f":164 131 {*movsf_internal}
     (nil))
(insn 828 827 829 54 (set (reg:SF 435 [ _349 ])
        (plus:SF (reg:SF 425 [ _339 ])
            (reg:SF 434 [ _348 ]))) "CALRCH.f":164 838 {*fop_sf_comm}
     (nil))
(insn 829 828 830 54 (set (reg:SI 921)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALRCH.f":164 86 {*movsi_internal}
     (nil))
(insn 830 829 831 54 (set (reg:DI 436 [ _350 ])
        (sign_extend:DI (reg:SI 921))) "CALRCH.f":164 149 {*extendsidi2_rex64}
     (nil))
(insn 831 830 832 54 (parallel [
            (set (reg:DI 437 [ _351 ])
                (mult:DI (reg:DI 436 [ _350 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":164 349 {*muldi3_1}
     (nil))
(insn 832 831 833 54 (set (reg:SI 922)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":164 86 {*movsi_internal}
     (nil))
(insn 833 832 834 54 (parallel [
            (set (reg:SI 438 [ _352 ])
                (plus:SI (reg:SI 922)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":164 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 834 833 835 54 (set (reg:DI 439 [ _353 ])
        (sign_extend:DI (reg:SI 438 [ _352 ]))) "CALRCH.f":164 149 {*extendsidi2_rex64}
     (nil))
(insn 835 834 836 54 (parallel [
            (set (reg:DI 440 [ _354 ])
                (mult:DI (reg:DI 439 [ _353 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":164 349 {*muldi3_1}
     (nil))
(insn 836 835 837 54 (parallel [
            (set (reg:DI 441 [ _355 ])
                (plus:DI (reg:DI 437 [ _351 ])
                    (reg:DI 440 [ _354 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":164 222 {*adddi_1}
     (nil))
(insn 837 836 838 54 (set (reg:SI 923)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALRCH.f":164 86 {*movsi_internal}
     (nil))
(insn 838 837 839 54 (set (reg:DI 442 [ _356 ])
        (sign_extend:DI (reg:SI 923))) "CALRCH.f":164 149 {*extendsidi2_rex64}
     (nil))
(insn 839 838 840 54 (parallel [
            (set (reg:DI 443 [ _357 ])
                (plus:DI (reg:DI 441 [ _355 ])
                    (reg:DI 442 [ _356 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":164 222 {*adddi_1}
     (nil))
(insn 840 839 841 54 (parallel [
            (set (reg:DI 444 [ _358 ])
                (plus:DI (reg:DI 443 [ _357 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":164 222 {*adddi_1}
     (nil))
(insn 841 840 842 54 (set (reg/f:DI 924)
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7fe96ef1b900 vrbls>)) "CALRCH.f":164 85 {*movdi_internal}
     (nil))
(insn 842 841 843 54 (parallel [
            (set (reg:DI 925)
                (plus:DI (reg:DI 444 [ _358 ])
                    (const_int 88893 [0x15b3d])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":164 222 {*adddi_1}
     (nil))
(insn 843 842 844 54 (set (reg:SF 445 [ _359 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 925)
                    (const_int 4 [0x4]))
                (reg/f:DI 924)) [2 vrbls.u S4 A32])) "CALRCH.f":164 131 {*movsf_internal}
     (nil))
(insn 844 843 845 54 (set (reg:SF 446 [ _360 ])
        (plus:SF (reg:SF 435 [ _349 ])
            (reg:SF 445 [ _359 ]))) "CALRCH.f":164 838 {*fop_sf_comm}
     (nil))
(insn 845 844 846 54 (set (reg:SF 447 [ _361 ])
        (reg:SF 446 [ _360 ])) "CALRCH.f":164 131 {*movsf_internal}
     (nil))
(insn 846 845 847 54 (set (reg:SF 926)
        (div:SF (reg:SF 447 [ _361 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -28 [0xffffffffffffffe4])) [2 wndsl+0 S4 A32]))) "CALRCH.f":164 841 {*fop_sf_1}
     (nil))
(insn 847 846 848 54 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [2 uhkl+0 S4 A32])
        (reg:SF 926)) "CALRCH.f":164 131 {*movsf_internal}
     (nil))
(insn 848 847 849 54 (set (reg:SI 927)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALRCH.f":166 86 {*movsi_internal}
     (nil))
(insn 849 848 850 54 (parallel [
            (set (reg:SI 448 [ _362 ])
                (plus:SI (reg:SI 927)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":166 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 850 849 851 54 (set (reg:DI 449 [ _363 ])
        (sign_extend:DI (reg:SI 448 [ _362 ]))) "CALRCH.f":166 149 {*extendsidi2_rex64}
     (nil))
(insn 851 850 852 54 (parallel [
            (set (reg:DI 450 [ _364 ])
                (mult:DI (reg:DI 449 [ _363 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":166 349 {*muldi3_1}
     (nil))
(insn 852 851 853 54 (set (reg:SI 928)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":166 86 {*movsi_internal}
     (nil))
(insn 853 852 854 54 (parallel [
            (set (reg:SI 451 [ _365 ])
                (plus:SI (reg:SI 928)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":166 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 854 853 855 54 (set (reg:DI 452 [ _366 ])
        (sign_extend:DI (reg:SI 451 [ _365 ]))) "CALRCH.f":166 149 {*extendsidi2_rex64}
     (nil))
(insn 855 854 856 54 (parallel [
            (set (reg:DI 453 [ _367 ])
                (mult:DI (reg:DI 452 [ _366 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":166 349 {*muldi3_1}
     (nil))
(insn 856 855 857 54 (parallel [
            (set (reg:DI 454 [ _368 ])
                (plus:DI (reg:DI 450 [ _364 ])
                    (reg:DI 453 [ _367 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":166 222 {*adddi_1}
     (nil))
(insn 857 856 858 54 (set (reg:SI 929)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALRCH.f":166 86 {*movsi_internal}
     (nil))
(insn 858 857 859 54 (set (reg:DI 455 [ _369 ])
        (sign_extend:DI (reg:SI 929))) "CALRCH.f":166 149 {*extendsidi2_rex64}
     (nil))
(insn 859 858 860 54 (parallel [
            (set (reg:DI 456 [ _370 ])
                (plus:DI (reg:DI 454 [ _368 ])
                    (reg:DI 455 [ _369 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":166 222 {*adddi_1}
     (nil))
(insn 860 859 861 54 (parallel [
            (set (reg:DI 457 [ _371 ])
                (plus:DI (reg:DI 456 [ _370 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":166 222 {*adddi_1}
     (nil))
(insn 861 860 862 54 (set (reg/f:DI 930)
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7fe96ef1b900 vrbls>)) "CALRCH.f":166 85 {*movdi_internal}
     (nil))
(insn 862 861 863 54 (parallel [
            (set (reg:DI 931)
                (plus:DI (reg:DI 457 [ _371 ])
                    (const_int 88893 [0x15b3d])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":166 222 {*adddi_1}
     (nil))
(insn 863 862 864 54 (set (reg:SF 458 [ _372 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 931)
                    (const_int 4 [0x4]))
                (reg/f:DI 930)) [2 vrbls.u S4 A32])) "CALRCH.f":166 131 {*movsf_internal}
     (nil))
(insn 864 863 865 54 (set (reg:SI 932)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALRCH.f":166 86 {*movsi_internal}
     (nil))
(insn 865 864 866 54 (parallel [
            (set (reg:SI 459 [ _373 ])
                (plus:SI (reg:SI 932)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":166 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 866 865 867 54 (set (reg:DI 460 [ _374 ])
        (sign_extend:DI (reg:SI 459 [ _373 ]))) "CALRCH.f":166 149 {*extendsidi2_rex64}
     (nil))
(insn 867 866 868 54 (parallel [
            (set (reg:DI 461 [ _375 ])
                (mult:DI (reg:DI 460 [ _374 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":166 349 {*muldi3_1}
     (nil))
(insn 868 867 869 54 (set (reg:SI 933)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":166 86 {*movsi_internal}
     (nil))
(insn 869 868 870 54 (set (reg:DI 462 [ _376 ])
        (sign_extend:DI (reg:SI 933))) "CALRCH.f":166 149 {*extendsidi2_rex64}
     (nil))
(insn 870 869 871 54 (parallel [
            (set (reg:DI 463 [ _377 ])
                (mult:DI (reg:DI 462 [ _376 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":166 349 {*muldi3_1}
     (nil))
(insn 871 870 872 54 (parallel [
            (set (reg:DI 464 [ _378 ])
                (plus:DI (reg:DI 461 [ _375 ])
                    (reg:DI 463 [ _377 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":166 222 {*adddi_1}
     (nil))
(insn 872 871 873 54 (set (reg:SI 934)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [1 iw+0 S4 A32])) "CALRCH.f":166 86 {*movsi_internal}
     (nil))
(insn 873 872 874 54 (set (reg:DI 465 [ _379 ])
        (sign_extend:DI (reg:SI 934))) "CALRCH.f":166 149 {*extendsidi2_rex64}
     (nil))
(insn 874 873 875 54 (parallel [
            (set (reg:DI 466 [ _380 ])
                (plus:DI (reg:DI 464 [ _378 ])
                    (reg:DI 465 [ _379 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":166 222 {*adddi_1}
     (nil))
(insn 875 874 876 54 (parallel [
            (set (reg:DI 467 [ _381 ])
                (plus:DI (reg:DI 466 [ _380 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":166 222 {*adddi_1}
     (nil))
(insn 876 875 877 54 (set (reg/f:DI 935)
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7fe96ef1b900 vrbls>)) "CALRCH.f":166 85 {*movdi_internal}
     (nil))
(insn 877 876 878 54 (parallel [
            (set (reg:DI 936)
                (plus:DI (reg:DI 467 [ _381 ])
                    (const_int 88893 [0x15b3d])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":166 222 {*adddi_1}
     (nil))
(insn 878 877 879 54 (set (reg:SF 468 [ _382 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 936)
                    (const_int 4 [0x4]))
                (reg/f:DI 935)) [2 vrbls.u S4 A32])) "CALRCH.f":166 131 {*movsf_internal}
     (nil))
(insn 879 878 880 54 (set (reg:SF 469 [ _383 ])
        (plus:SF (reg:SF 458 [ _372 ])
            (reg:SF 468 [ _382 ]))) "CALRCH.f":166 838 {*fop_sf_comm}
     (nil))
(insn 880 879 881 54 (set (reg:SI 937)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALRCH.f":166 86 {*movsi_internal}
     (nil))
(insn 881 880 882 54 (parallel [
            (set (reg:SI 470 [ _384 ])
                (plus:SI (reg:SI 937)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":166 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 882 881 883 54 (set (reg:DI 471 [ _385 ])
        (sign_extend:DI (reg:SI 470 [ _384 ]))) "CALRCH.f":166 149 {*extendsidi2_rex64}
     (nil))
(insn 883 882 884 54 (parallel [
            (set (reg:DI 472 [ _386 ])
                (mult:DI (reg:DI 471 [ _385 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":166 349 {*muldi3_1}
     (nil))
(insn 884 883 885 54 (set (reg:SI 938)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":166 86 {*movsi_internal}
     (nil))
(insn 885 884 886 54 (set (reg:DI 473 [ _387 ])
        (sign_extend:DI (reg:SI 938))) "CALRCH.f":166 149 {*extendsidi2_rex64}
     (nil))
(insn 886 885 887 54 (parallel [
            (set (reg:DI 474 [ _388 ])
                (mult:DI (reg:DI 473 [ _387 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":166 349 {*muldi3_1}
     (nil))
(insn 887 886 888 54 (parallel [
            (set (reg:DI 475 [ _389 ])
                (plus:DI (reg:DI 472 [ _386 ])
                    (reg:DI 474 [ _388 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":166 222 {*adddi_1}
     (nil))
(insn 888 887 889 54 (set (reg:SI 939)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [1 ie+0 S4 A32])) "CALRCH.f":166 86 {*movsi_internal}
     (nil))
(insn 889 888 890 54 (set (reg:DI 476 [ _390 ])
        (sign_extend:DI (reg:SI 939))) "CALRCH.f":166 149 {*extendsidi2_rex64}
     (nil))
(insn 890 889 891 54 (parallel [
            (set (reg:DI 477 [ _391 ])
                (plus:DI (reg:DI 475 [ _389 ])
                    (reg:DI 476 [ _390 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":166 222 {*adddi_1}
     (nil))
(insn 891 890 892 54 (parallel [
            (set (reg:DI 478 [ _392 ])
                (plus:DI (reg:DI 477 [ _391 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":166 222 {*adddi_1}
     (nil))
(insn 892 891 893 54 (set (reg/f:DI 940)
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7fe96ef1b900 vrbls>)) "CALRCH.f":166 85 {*movdi_internal}
     (nil))
(insn 893 892 894 54 (parallel [
            (set (reg:DI 941)
                (plus:DI (reg:DI 478 [ _392 ])
                    (const_int 88893 [0x15b3d])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":166 222 {*adddi_1}
     (nil))
(insn 894 893 895 54 (set (reg:SF 479 [ _393 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 941)
                    (const_int 4 [0x4]))
                (reg/f:DI 940)) [2 vrbls.u S4 A32])) "CALRCH.f":166 131 {*movsf_internal}
     (nil))
(insn 895 894 896 54 (set (reg:SF 480 [ _394 ])
        (plus:SF (reg:SF 469 [ _383 ])
            (reg:SF 479 [ _393 ]))) "CALRCH.f":166 838 {*fop_sf_comm}
     (nil))
(insn 896 895 897 54 (set (reg:SI 942)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALRCH.f":166 86 {*movsi_internal}
     (nil))
(insn 897 896 898 54 (parallel [
            (set (reg:SI 481 [ _395 ])
                (plus:SI (reg:SI 942)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":166 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 898 897 899 54 (set (reg:DI 482 [ _396 ])
        (sign_extend:DI (reg:SI 481 [ _395 ]))) "CALRCH.f":166 149 {*extendsidi2_rex64}
     (nil))
(insn 899 898 900 54 (parallel [
            (set (reg:DI 483 [ _397 ])
                (mult:DI (reg:DI 482 [ _396 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":166 349 {*muldi3_1}
     (nil))
(insn 900 899 901 54 (set (reg:SI 943)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":166 86 {*movsi_internal}
     (nil))
(insn 901 900 902 54 (parallel [
            (set (reg:SI 484 [ _398 ])
                (plus:SI (reg:SI 943)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":166 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 902 901 903 54 (set (reg:DI 485 [ _399 ])
        (sign_extend:DI (reg:SI 484 [ _398 ]))) "CALRCH.f":166 149 {*extendsidi2_rex64}
     (nil))
(insn 903 902 904 54 (parallel [
            (set (reg:DI 486 [ _400 ])
                (mult:DI (reg:DI 485 [ _399 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":166 349 {*muldi3_1}
     (nil))
(insn 904 903 905 54 (parallel [
            (set (reg:DI 487 [ _401 ])
                (plus:DI (reg:DI 483 [ _397 ])
                    (reg:DI 486 [ _400 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":166 222 {*adddi_1}
     (nil))
(insn 905 904 906 54 (set (reg:SI 944)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALRCH.f":166 86 {*movsi_internal}
     (nil))
(insn 906 905 907 54 (set (reg:DI 488 [ _402 ])
        (sign_extend:DI (reg:SI 944))) "CALRCH.f":166 149 {*extendsidi2_rex64}
     (nil))
(insn 907 906 908 54 (parallel [
            (set (reg:DI 489 [ _403 ])
                (plus:DI (reg:DI 487 [ _401 ])
                    (reg:DI 488 [ _402 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":166 222 {*adddi_1}
     (nil))
(insn 908 907 909 54 (parallel [
            (set (reg:DI 490 [ _404 ])
                (plus:DI (reg:DI 489 [ _403 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":166 222 {*adddi_1}
     (nil))
(insn 909 908 910 54 (set (reg/f:DI 945)
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7fe96ef1b900 vrbls>)) "CALRCH.f":166 85 {*movdi_internal}
     (nil))
(insn 910 909 911 54 (parallel [
            (set (reg:DI 946)
                (plus:DI (reg:DI 490 [ _404 ])
                    (const_int 88893 [0x15b3d])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":166 222 {*adddi_1}
     (nil))
(insn 911 910 912 54 (set (reg:SF 491 [ _405 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 946)
                    (const_int 4 [0x4]))
                (reg/f:DI 945)) [2 vrbls.u S4 A32])) "CALRCH.f":166 131 {*movsf_internal}
     (nil))
(insn 912 911 913 54 (set (reg:SF 492 [ _406 ])
        (plus:SF (reg:SF 480 [ _394 ])
            (reg:SF 491 [ _405 ]))) "CALRCH.f":166 838 {*fop_sf_comm}
     (nil))
(insn 913 912 914 54 (set (reg:SF 493 [ _407 ])
        (reg:SF 492 [ _406 ])) "CALRCH.f":166 131 {*movsf_internal}
     (nil))
(insn 914 913 915 54 (set (reg:SF 947)
        (div:SF (reg:SF 493 [ _407 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -32 [0xffffffffffffffe0])) [2 wndslp+0 S4 A32]))) "CALRCH.f":166 841 {*fop_sf_1}
     (nil))
(insn 915 914 916 54 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [2 ulkl+0 S4 A32])
        (reg:SF 947)) "CALRCH.f":166 131 {*movsf_internal}
     (nil))
(insn 916 915 917 54 (set (reg:SI 948)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALRCH.f":167 86 {*movsi_internal}
     (nil))
(insn 917 916 918 54 (set (reg:DI 494 [ _408 ])
        (sign_extend:DI (reg:SI 948))) "CALRCH.f":167 149 {*extendsidi2_rex64}
     (nil))
(insn 918 917 919 54 (parallel [
            (set (reg:DI 495 [ _409 ])
                (mult:DI (reg:DI 494 [ _408 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":167 349 {*muldi3_1}
     (nil))
(insn 919 918 920 54 (set (reg:SI 949)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":167 86 {*movsi_internal}
     (nil))
(insn 920 919 921 54 (parallel [
            (set (reg:SI 496 [ _410 ])
                (plus:SI (reg:SI 949)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":167 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 921 920 922 54 (set (reg:DI 497 [ _411 ])
        (sign_extend:DI (reg:SI 496 [ _410 ]))) "CALRCH.f":167 149 {*extendsidi2_rex64}
     (nil))
(insn 922 921 923 54 (parallel [
            (set (reg:DI 498 [ _412 ])
                (mult:DI (reg:DI 497 [ _411 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":167 349 {*muldi3_1}
     (nil))
(insn 923 922 924 54 (parallel [
            (set (reg:DI 499 [ _413 ])
                (plus:DI (reg:DI 495 [ _409 ])
                    (reg:DI 498 [ _412 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":167 222 {*adddi_1}
     (nil))
(insn 924 923 925 54 (set (reg:SI 950)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALRCH.f":167 86 {*movsi_internal}
     (nil))
(insn 925 924 926 54 (set (reg:DI 500 [ _414 ])
        (sign_extend:DI (reg:SI 950))) "CALRCH.f":167 149 {*extendsidi2_rex64}
     (nil))
(insn 926 925 927 54 (parallel [
            (set (reg:DI 501 [ _415 ])
                (plus:DI (reg:DI 499 [ _413 ])
                    (reg:DI 500 [ _414 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":167 222 {*adddi_1}
     (nil))
(insn 927 926 928 54 (parallel [
            (set (reg:DI 502 [ _416 ])
                (plus:DI (reg:DI 501 [ _415 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":167 222 {*adddi_1}
     (nil))
(insn 928 927 929 54 (set (reg/f:DI 951)
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7fe96ef1b900 vrbls>)) "CALRCH.f":167 85 {*movdi_internal}
     (nil))
(insn 929 928 930 54 (parallel [
            (set (reg:DI 952)
                (plus:DI (reg:DI 502 [ _416 ])
                    (const_int 1214871 [0x128997])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":167 222 {*adddi_1}
     (nil))
(insn 930 929 931 54 (set (reg:SF 503 [ _417 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 952)
                    (const_int 4 [0x4]))
                (reg/f:DI 951)) [2 vrbls.v S4 A32])) "CALRCH.f":167 131 {*movsf_internal}
     (nil))
(insn 931 930 932 54 (set (reg:SI 953)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALRCH.f":167 86 {*movsi_internal}
     (nil))
(insn 932 931 933 54 (set (reg:DI 504 [ _418 ])
        (sign_extend:DI (reg:SI 953))) "CALRCH.f":167 149 {*extendsidi2_rex64}
     (nil))
(insn 933 932 934 54 (parallel [
            (set (reg:DI 505 [ _419 ])
                (mult:DI (reg:DI 504 [ _418 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":167 349 {*muldi3_1}
     (nil))
(insn 934 933 935 54 (set (reg:SI 954)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":167 86 {*movsi_internal}
     (nil))
(insn 935 934 936 54 (set (reg:DI 506 [ _420 ])
        (sign_extend:DI (reg:SI 954))) "CALRCH.f":167 149 {*extendsidi2_rex64}
     (nil))
(insn 936 935 937 54 (parallel [
            (set (reg:DI 507 [ _421 ])
                (mult:DI (reg:DI 506 [ _420 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":167 349 {*muldi3_1}
     (nil))
(insn 937 936 938 54 (parallel [
            (set (reg:DI 508 [ _422 ])
                (plus:DI (reg:DI 505 [ _419 ])
                    (reg:DI 507 [ _421 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":167 222 {*adddi_1}
     (nil))
(insn 938 937 939 54 (set (reg:SI 955)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [1 iw+0 S4 A32])) "CALRCH.f":167 86 {*movsi_internal}
     (nil))
(insn 939 938 940 54 (set (reg:DI 509 [ _423 ])
        (sign_extend:DI (reg:SI 955))) "CALRCH.f":167 149 {*extendsidi2_rex64}
     (nil))
(insn 940 939 941 54 (parallel [
            (set (reg:DI 510 [ _424 ])
                (plus:DI (reg:DI 508 [ _422 ])
                    (reg:DI 509 [ _423 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":167 222 {*adddi_1}
     (nil))
(insn 941 940 942 54 (parallel [
            (set (reg:DI 511 [ _425 ])
                (plus:DI (reg:DI 510 [ _424 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":167 222 {*adddi_1}
     (nil))
(insn 942 941 943 54 (set (reg/f:DI 956)
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7fe96ef1b900 vrbls>)) "CALRCH.f":167 85 {*movdi_internal}
     (nil))
(insn 943 942 944 54 (parallel [
            (set (reg:DI 957)
                (plus:DI (reg:DI 511 [ _425 ])
                    (const_int 1214871 [0x128997])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":167 222 {*adddi_1}
     (nil))
(insn 944 943 945 54 (set (reg:SF 512 [ _426 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 957)
                    (const_int 4 [0x4]))
                (reg/f:DI 956)) [2 vrbls.v S4 A32])) "CALRCH.f":167 131 {*movsf_internal}
     (nil))
(insn 945 944 946 54 (set (reg:SF 513 [ _427 ])
        (plus:SF (reg:SF 503 [ _417 ])
            (reg:SF 512 [ _426 ]))) "CALRCH.f":167 838 {*fop_sf_comm}
     (nil))
(insn 946 945 947 54 (set (reg:SI 958)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALRCH.f":167 86 {*movsi_internal}
     (nil))
(insn 947 946 948 54 (set (reg:DI 514 [ _428 ])
        (sign_extend:DI (reg:SI 958))) "CALRCH.f":167 149 {*extendsidi2_rex64}
     (nil))
(insn 948 947 949 54 (parallel [
            (set (reg:DI 515 [ _429 ])
                (mult:DI (reg:DI 514 [ _428 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":167 349 {*muldi3_1}
     (nil))
(insn 949 948 950 54 (set (reg:SI 959)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":167 86 {*movsi_internal}
     (nil))
(insn 950 949 951 54 (set (reg:DI 516 [ _430 ])
        (sign_extend:DI (reg:SI 959))) "CALRCH.f":167 149 {*extendsidi2_rex64}
     (nil))
(insn 951 950 952 54 (parallel [
            (set (reg:DI 517 [ _431 ])
                (mult:DI (reg:DI 516 [ _430 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":167 349 {*muldi3_1}
     (nil))
(insn 952 951 953 54 (parallel [
            (set (reg:DI 518 [ _432 ])
                (plus:DI (reg:DI 515 [ _429 ])
                    (reg:DI 517 [ _431 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":167 222 {*adddi_1}
     (nil))
(insn 953 952 954 54 (set (reg:SI 960)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [1 ie+0 S4 A32])) "CALRCH.f":167 86 {*movsi_internal}
     (nil))
(insn 954 953 955 54 (set (reg:DI 519 [ _433 ])
        (sign_extend:DI (reg:SI 960))) "CALRCH.f":167 149 {*extendsidi2_rex64}
     (nil))
(insn 955 954 956 54 (parallel [
            (set (reg:DI 520 [ _434 ])
                (plus:DI (reg:DI 518 [ _432 ])
                    (reg:DI 519 [ _433 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":167 222 {*adddi_1}
     (nil))
(insn 956 955 957 54 (parallel [
            (set (reg:DI 521 [ _435 ])
                (plus:DI (reg:DI 520 [ _434 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":167 222 {*adddi_1}
     (nil))
(insn 957 956 958 54 (set (reg/f:DI 961)
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7fe96ef1b900 vrbls>)) "CALRCH.f":167 85 {*movdi_internal}
     (nil))
(insn 958 957 959 54 (parallel [
            (set (reg:DI 962)
                (plus:DI (reg:DI 521 [ _435 ])
                    (const_int 1214871 [0x128997])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":167 222 {*adddi_1}
     (nil))
(insn 959 958 960 54 (set (reg:SF 522 [ _436 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 962)
                    (const_int 4 [0x4]))
                (reg/f:DI 961)) [2 vrbls.v S4 A32])) "CALRCH.f":167 131 {*movsf_internal}
     (nil))
(insn 960 959 961 54 (set (reg:SF 523 [ _437 ])
        (plus:SF (reg:SF 513 [ _427 ])
            (reg:SF 522 [ _436 ]))) "CALRCH.f":167 838 {*fop_sf_comm}
     (nil))
(insn 961 960 962 54 (set (reg:SI 963)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALRCH.f":167 86 {*movsi_internal}
     (nil))
(insn 962 961 963 54 (set (reg:DI 524 [ _438 ])
        (sign_extend:DI (reg:SI 963))) "CALRCH.f":167 149 {*extendsidi2_rex64}
     (nil))
(insn 963 962 964 54 (parallel [
            (set (reg:DI 525 [ _439 ])
                (mult:DI (reg:DI 524 [ _438 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":167 349 {*muldi3_1}
     (nil))
(insn 964 963 965 54 (set (reg:SI 964)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":167 86 {*movsi_internal}
     (nil))
(insn 965 964 966 54 (parallel [
            (set (reg:SI 526 [ _440 ])
                (plus:SI (reg:SI 964)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":167 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 966 965 967 54 (set (reg:DI 527 [ _441 ])
        (sign_extend:DI (reg:SI 526 [ _440 ]))) "CALRCH.f":167 149 {*extendsidi2_rex64}
     (nil))
(insn 967 966 968 54 (parallel [
            (set (reg:DI 528 [ _442 ])
                (mult:DI (reg:DI 527 [ _441 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":167 349 {*muldi3_1}
     (nil))
(insn 968 967 969 54 (parallel [
            (set (reg:DI 529 [ _443 ])
                (plus:DI (reg:DI 525 [ _439 ])
                    (reg:DI 528 [ _442 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":167 222 {*adddi_1}
     (nil))
(insn 969 968 970 54 (set (reg:SI 965)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALRCH.f":167 86 {*movsi_internal}
     (nil))
(insn 970 969 971 54 (set (reg:DI 530 [ _444 ])
        (sign_extend:DI (reg:SI 965))) "CALRCH.f":167 149 {*extendsidi2_rex64}
     (nil))
(insn 971 970 972 54 (parallel [
            (set (reg:DI 531 [ _445 ])
                (plus:DI (reg:DI 529 [ _443 ])
                    (reg:DI 530 [ _444 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":167 222 {*adddi_1}
     (nil))
(insn 972 971 973 54 (parallel [
            (set (reg:DI 532 [ _446 ])
                (plus:DI (reg:DI 531 [ _445 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":167 222 {*adddi_1}
     (nil))
(insn 973 972 974 54 (set (reg/f:DI 966)
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7fe96ef1b900 vrbls>)) "CALRCH.f":167 85 {*movdi_internal}
     (nil))
(insn 974 973 975 54 (parallel [
            (set (reg:DI 967)
                (plus:DI (reg:DI 532 [ _446 ])
                    (const_int 1214871 [0x128997])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":167 222 {*adddi_1}
     (nil))
(insn 975 974 976 54 (set (reg:SF 533 [ _447 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 967)
                    (const_int 4 [0x4]))
                (reg/f:DI 966)) [2 vrbls.v S4 A32])) "CALRCH.f":167 131 {*movsf_internal}
     (nil))
(insn 976 975 977 54 (set (reg:SF 534 [ _448 ])
        (plus:SF (reg:SF 523 [ _437 ])
            (reg:SF 533 [ _447 ]))) "CALRCH.f":167 838 {*fop_sf_comm}
     (nil))
(insn 977 976 978 54 (set (reg:SF 535 [ _449 ])
        (reg:SF 534 [ _448 ])) "CALRCH.f":167 131 {*movsf_internal}
     (nil))
(insn 978 977 979 54 (set (reg:SF 968)
        (div:SF (reg:SF 535 [ _449 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -28 [0xffffffffffffffe4])) [2 wndsl+0 S4 A32]))) "CALRCH.f":167 841 {*fop_sf_1}
     (nil))
(insn 979 978 980 54 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -44 [0xffffffffffffffd4])) [2 vhkl+0 S4 A32])
        (reg:SF 968)) "CALRCH.f":167 131 {*movsf_internal}
     (nil))
(insn 980 979 981 54 (set (reg:SI 969)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALRCH.f":169 86 {*movsi_internal}
     (nil))
(insn 981 980 982 54 (parallel [
            (set (reg:SI 536 [ _450 ])
                (plus:SI (reg:SI 969)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":169 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 982 981 983 54 (set (reg:DI 537 [ _451 ])
        (sign_extend:DI (reg:SI 536 [ _450 ]))) "CALRCH.f":169 149 {*extendsidi2_rex64}
     (nil))
(insn 983 982 984 54 (parallel [
            (set (reg:DI 538 [ _452 ])
                (mult:DI (reg:DI 537 [ _451 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":169 349 {*muldi3_1}
     (nil))
(insn 984 983 985 54 (set (reg:SI 970)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":169 86 {*movsi_internal}
     (nil))
(insn 985 984 986 54 (parallel [
            (set (reg:SI 539 [ _453 ])
                (plus:SI (reg:SI 970)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":169 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 986 985 987 54 (set (reg:DI 540 [ _454 ])
        (sign_extend:DI (reg:SI 539 [ _453 ]))) "CALRCH.f":169 149 {*extendsidi2_rex64}
     (nil))
(insn 987 986 988 54 (parallel [
            (set (reg:DI 541 [ _455 ])
                (mult:DI (reg:DI 540 [ _454 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":169 349 {*muldi3_1}
     (nil))
(insn 988 987 989 54 (parallel [
            (set (reg:DI 542 [ _456 ])
                (plus:DI (reg:DI 538 [ _452 ])
                    (reg:DI 541 [ _455 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":169 222 {*adddi_1}
     (nil))
(insn 989 988 990 54 (set (reg:SI 971)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALRCH.f":169 86 {*movsi_internal}
     (nil))
(insn 990 989 991 54 (set (reg:DI 543 [ _457 ])
        (sign_extend:DI (reg:SI 971))) "CALRCH.f":169 149 {*extendsidi2_rex64}
     (nil))
(insn 991 990 992 54 (parallel [
            (set (reg:DI 544 [ _458 ])
                (plus:DI (reg:DI 542 [ _456 ])
                    (reg:DI 543 [ _457 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":169 222 {*adddi_1}
     (nil))
(insn 992 991 993 54 (parallel [
            (set (reg:DI 545 [ _459 ])
                (plus:DI (reg:DI 544 [ _458 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":169 222 {*adddi_1}
     (nil))
(insn 993 992 994 54 (set (reg/f:DI 972)
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7fe96ef1b900 vrbls>)) "CALRCH.f":169 85 {*movdi_internal}
     (nil))
(insn 994 993 995 54 (parallel [
            (set (reg:DI 973)
                (plus:DI (reg:DI 545 [ _459 ])
                    (const_int 1214871 [0x128997])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":169 222 {*adddi_1}
     (nil))
(insn 995 994 996 54 (set (reg:SF 546 [ _460 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 973)
                    (const_int 4 [0x4]))
                (reg/f:DI 972)) [2 vrbls.v S4 A32])) "CALRCH.f":169 131 {*movsf_internal}
     (nil))
(insn 996 995 997 54 (set (reg:SI 974)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALRCH.f":169 86 {*movsi_internal}
     (nil))
(insn 997 996 998 54 (parallel [
            (set (reg:SI 547 [ _461 ])
                (plus:SI (reg:SI 974)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":169 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 998 997 999 54 (set (reg:DI 548 [ _462 ])
        (sign_extend:DI (reg:SI 547 [ _461 ]))) "CALRCH.f":169 149 {*extendsidi2_rex64}
     (nil))
(insn 999 998 1000 54 (parallel [
            (set (reg:DI 549 [ _463 ])
                (mult:DI (reg:DI 548 [ _462 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":169 349 {*muldi3_1}
     (nil))
(insn 1000 999 1001 54 (set (reg:SI 975)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":169 86 {*movsi_internal}
     (nil))
(insn 1001 1000 1002 54 (set (reg:DI 550 [ _464 ])
        (sign_extend:DI (reg:SI 975))) "CALRCH.f":169 149 {*extendsidi2_rex64}
     (nil))
(insn 1002 1001 1003 54 (parallel [
            (set (reg:DI 551 [ _465 ])
                (mult:DI (reg:DI 550 [ _464 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":169 349 {*muldi3_1}
     (nil))
(insn 1003 1002 1004 54 (parallel [
            (set (reg:DI 552 [ _466 ])
                (plus:DI (reg:DI 549 [ _463 ])
                    (reg:DI 551 [ _465 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":169 222 {*adddi_1}
     (nil))
(insn 1004 1003 1005 54 (set (reg:SI 976)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [1 iw+0 S4 A32])) "CALRCH.f":169 86 {*movsi_internal}
     (nil))
(insn 1005 1004 1006 54 (set (reg:DI 553 [ _467 ])
        (sign_extend:DI (reg:SI 976))) "CALRCH.f":169 149 {*extendsidi2_rex64}
     (nil))
(insn 1006 1005 1007 54 (parallel [
            (set (reg:DI 554 [ _468 ])
                (plus:DI (reg:DI 552 [ _466 ])
                    (reg:DI 553 [ _467 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":169 222 {*adddi_1}
     (nil))
(insn 1007 1006 1008 54 (parallel [
            (set (reg:DI 555 [ _469 ])
                (plus:DI (reg:DI 554 [ _468 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":169 222 {*adddi_1}
     (nil))
(insn 1008 1007 1009 54 (set (reg/f:DI 977)
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7fe96ef1b900 vrbls>)) "CALRCH.f":169 85 {*movdi_internal}
     (nil))
(insn 1009 1008 1010 54 (parallel [
            (set (reg:DI 978)
                (plus:DI (reg:DI 555 [ _469 ])
                    (const_int 1214871 [0x128997])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":169 222 {*adddi_1}
     (nil))
(insn 1010 1009 1011 54 (set (reg:SF 556 [ _470 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 978)
                    (const_int 4 [0x4]))
                (reg/f:DI 977)) [2 vrbls.v S4 A32])) "CALRCH.f":169 131 {*movsf_internal}
     (nil))
(insn 1011 1010 1012 54 (set (reg:SF 557 [ _471 ])
        (plus:SF (reg:SF 546 [ _460 ])
            (reg:SF 556 [ _470 ]))) "CALRCH.f":169 838 {*fop_sf_comm}
     (nil))
(insn 1012 1011 1013 54 (set (reg:SI 979)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALRCH.f":169 86 {*movsi_internal}
     (nil))
(insn 1013 1012 1014 54 (parallel [
            (set (reg:SI 558 [ _472 ])
                (plus:SI (reg:SI 979)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":169 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 1014 1013 1015 54 (set (reg:DI 559 [ _473 ])
        (sign_extend:DI (reg:SI 558 [ _472 ]))) "CALRCH.f":169 149 {*extendsidi2_rex64}
     (nil))
(insn 1015 1014 1016 54 (parallel [
            (set (reg:DI 560 [ _474 ])
                (mult:DI (reg:DI 559 [ _473 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":169 349 {*muldi3_1}
     (nil))
(insn 1016 1015 1017 54 (set (reg:SI 980)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":169 86 {*movsi_internal}
     (nil))
(insn 1017 1016 1018 54 (set (reg:DI 561 [ _475 ])
        (sign_extend:DI (reg:SI 980))) "CALRCH.f":169 149 {*extendsidi2_rex64}
     (nil))
(insn 1018 1017 1019 54 (parallel [
            (set (reg:DI 562 [ _476 ])
                (mult:DI (reg:DI 561 [ _475 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":169 349 {*muldi3_1}
     (nil))
(insn 1019 1018 1020 54 (parallel [
            (set (reg:DI 563 [ _477 ])
                (plus:DI (reg:DI 560 [ _474 ])
                    (reg:DI 562 [ _476 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":169 222 {*adddi_1}
     (nil))
(insn 1020 1019 1021 54 (set (reg:SI 981)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [1 ie+0 S4 A32])) "CALRCH.f":169 86 {*movsi_internal}
     (nil))
(insn 1021 1020 1022 54 (set (reg:DI 564 [ _478 ])
        (sign_extend:DI (reg:SI 981))) "CALRCH.f":169 149 {*extendsidi2_rex64}
     (nil))
(insn 1022 1021 1023 54 (parallel [
            (set (reg:DI 565 [ _479 ])
                (plus:DI (reg:DI 563 [ _477 ])
                    (reg:DI 564 [ _478 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":169 222 {*adddi_1}
     (nil))
(insn 1023 1022 1024 54 (parallel [
            (set (reg:DI 566 [ _480 ])
                (plus:DI (reg:DI 565 [ _479 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":169 222 {*adddi_1}
     (nil))
(insn 1024 1023 1025 54 (set (reg/f:DI 982)
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7fe96ef1b900 vrbls>)) "CALRCH.f":169 85 {*movdi_internal}
     (nil))
(insn 1025 1024 1026 54 (parallel [
            (set (reg:DI 983)
                (plus:DI (reg:DI 566 [ _480 ])
                    (const_int 1214871 [0x128997])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":169 222 {*adddi_1}
     (nil))
(insn 1026 1025 1027 54 (set (reg:SF 567 [ _481 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 983)
                    (const_int 4 [0x4]))
                (reg/f:DI 982)) [2 vrbls.v S4 A32])) "CALRCH.f":169 131 {*movsf_internal}
     (nil))
(insn 1027 1026 1028 54 (set (reg:SF 568 [ _482 ])
        (plus:SF (reg:SF 557 [ _471 ])
            (reg:SF 567 [ _481 ]))) "CALRCH.f":169 838 {*fop_sf_comm}
     (nil))
(insn 1028 1027 1029 54 (set (reg:SI 984)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALRCH.f":169 86 {*movsi_internal}
     (nil))
(insn 1029 1028 1030 54 (parallel [
            (set (reg:SI 569 [ _483 ])
                (plus:SI (reg:SI 984)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":169 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 1030 1029 1031 54 (set (reg:DI 570 [ _484 ])
        (sign_extend:DI (reg:SI 569 [ _483 ]))) "CALRCH.f":169 149 {*extendsidi2_rex64}
     (nil))
(insn 1031 1030 1032 54 (parallel [
            (set (reg:DI 571 [ _485 ])
                (mult:DI (reg:DI 570 [ _484 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":169 349 {*muldi3_1}
     (nil))
(insn 1032 1031 1033 54 (set (reg:SI 985)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":169 86 {*movsi_internal}
     (nil))
(insn 1033 1032 1034 54 (parallel [
            (set (reg:SI 572 [ _486 ])
                (plus:SI (reg:SI 985)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":169 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 1034 1033 1035 54 (set (reg:DI 573 [ _487 ])
        (sign_extend:DI (reg:SI 572 [ _486 ]))) "CALRCH.f":169 149 {*extendsidi2_rex64}
     (nil))
(insn 1035 1034 1036 54 (parallel [
            (set (reg:DI 574 [ _488 ])
                (mult:DI (reg:DI 573 [ _487 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":169 349 {*muldi3_1}
     (nil))
(insn 1036 1035 1037 54 (parallel [
            (set (reg:DI 575 [ _489 ])
                (plus:DI (reg:DI 571 [ _485 ])
                    (reg:DI 574 [ _488 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":169 222 {*adddi_1}
     (nil))
(insn 1037 1036 1038 54 (set (reg:SI 986)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALRCH.f":169 86 {*movsi_internal}
     (nil))
(insn 1038 1037 1039 54 (set (reg:DI 576 [ _490 ])
        (sign_extend:DI (reg:SI 986))) "CALRCH.f":169 149 {*extendsidi2_rex64}
     (nil))
(insn 1039 1038 1040 54 (parallel [
            (set (reg:DI 577 [ _491 ])
                (plus:DI (reg:DI 575 [ _489 ])
                    (reg:DI 576 [ _490 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":169 222 {*adddi_1}
     (nil))
(insn 1040 1039 1041 54 (parallel [
            (set (reg:DI 578 [ _492 ])
                (plus:DI (reg:DI 577 [ _491 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":169 222 {*adddi_1}
     (nil))
(insn 1041 1040 1042 54 (set (reg/f:DI 987)
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7fe96ef1b900 vrbls>)) "CALRCH.f":169 85 {*movdi_internal}
     (nil))
(insn 1042 1041 1043 54 (parallel [
            (set (reg:DI 988)
                (plus:DI (reg:DI 578 [ _492 ])
                    (const_int 1214871 [0x128997])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":169 222 {*adddi_1}
     (nil))
(insn 1043 1042 1044 54 (set (reg:SF 579 [ _493 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 988)
                    (const_int 4 [0x4]))
                (reg/f:DI 987)) [2 vrbls.v S4 A32])) "CALRCH.f":169 131 {*movsf_internal}
     (nil))
(insn 1044 1043 1045 54 (set (reg:SF 580 [ _494 ])
        (plus:SF (reg:SF 568 [ _482 ])
            (reg:SF 579 [ _493 ]))) "CALRCH.f":169 838 {*fop_sf_comm}
     (nil))
(insn 1045 1044 1046 54 (set (reg:SF 581 [ _495 ])
        (reg:SF 580 [ _494 ])) "CALRCH.f":169 131 {*movsf_internal}
     (nil))
(insn 1046 1045 1047 54 (set (reg:SF 989)
        (div:SF (reg:SF 581 [ _495 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -32 [0xffffffffffffffe0])) [2 wndslp+0 S4 A32]))) "CALRCH.f":169 841 {*fop_sf_1}
     (nil))
(insn 1047 1046 1048 54 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [2 vlkl+0 S4 A32])
        (reg:SF 989)) "CALRCH.f":169 131 {*movsf_internal}
     (nil))
(insn 1048 1047 1049 54 (set (reg:SI 990)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALRCH.f":170 86 {*movsi_internal}
     (nil))
(insn 1049 1048 1050 54 (set (reg:DI 582 [ _496 ])
        (sign_extend:DI (reg:SI 990))) "CALRCH.f":170 149 {*extendsidi2_rex64}
     (nil))
(insn 1050 1049 1051 54 (parallel [
            (set (reg:DI 583 [ _497 ])
                (mult:DI (reg:DI 582 [ _496 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":170 349 {*muldi3_1}
     (nil))
(insn 1051 1050 1052 54 (set (reg:SI 991)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":170 86 {*movsi_internal}
     (nil))
(insn 1052 1051 1053 54 (set (reg:DI 584 [ _498 ])
        (sign_extend:DI (reg:SI 991))) "CALRCH.f":170 149 {*extendsidi2_rex64}
     (nil))
(insn 1053 1052 1054 54 (parallel [
            (set (reg:DI 585 [ _499 ])
                (mult:DI (reg:DI 584 [ _498 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":170 349 {*muldi3_1}
     (nil))
(insn 1054 1053 1055 54 (parallel [
            (set (reg:DI 586 [ _500 ])
                (plus:DI (reg:DI 583 [ _497 ])
                    (reg:DI 585 [ _499 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":170 222 {*adddi_1}
     (nil))
(insn 1055 1054 1056 54 (set (reg:SI 992)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALRCH.f":170 86 {*movsi_internal}
     (nil))
(insn 1056 1055 1057 54 (set (reg:DI 587 [ _501 ])
        (sign_extend:DI (reg:SI 992))) "CALRCH.f":170 149 {*extendsidi2_rex64}
     (nil))
(insn 1057 1056 1058 54 (parallel [
            (set (reg:DI 588 [ _502 ])
                (plus:DI (reg:DI 586 [ _500 ])
                    (reg:DI 587 [ _501 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":170 222 {*adddi_1}
     (nil))
(insn 1058 1057 1059 54 (parallel [
            (set (reg:DI 589 [ _503 ])
                (plus:DI (reg:DI 588 [ _502 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":170 222 {*adddi_1}
     (nil))
(insn 1059 1058 1060 54 (set (reg/f:DI 993)
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7fe96eef8870 extra>)) "CALRCH.f":170 85 {*movdi_internal}
     (nil))
(insn 1060 1059 1061 54 (parallel [
            (set (reg:DI 994)
                (plus:DI (reg:DI 589 [ _503 ])
                    (const_int 2311218 [0x234432])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":170 222 {*adddi_1}
     (nil))
(insn 1061 1060 1062 54 (set (reg:SF 590 [ _504 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 994)
                    (const_int 4 [0x4]))
                (reg/f:DI 993)) [2 extra.zint S4 A32])) "CALRCH.f":170 131 {*movsf_internal}
     (nil))
(insn 1062 1061 1063 54 (set (reg:SI 995)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALRCH.f":170 86 {*movsi_internal}
     (nil))
(insn 1063 1062 1064 54 (parallel [
            (set (reg:SI 591 [ _505 ])
                (plus:SI (reg:SI 995)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":170 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
            (const_int 2 [0x2]))
        (nil)))
(insn 1064 1063 1065 54 (set (reg:DI 592 [ _506 ])
        (sign_extend:DI (reg:SI 591 [ _505 ]))) "CALRCH.f":170 149 {*extendsidi2_rex64}
     (nil))
(insn 1065 1064 1066 54 (parallel [
            (set (reg:DI 593 [ _507 ])
                (mult:DI (reg:DI 592 [ _506 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":170 349 {*muldi3_1}
     (nil))
(insn 1066 1065 1067 54 (set (reg:SI 996)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":170 86 {*movsi_internal}
     (nil))
(insn 1067 1066 1068 54 (set (reg:DI 594 [ _508 ])
        (sign_extend:DI (reg:SI 996))) "CALRCH.f":170 149 {*extendsidi2_rex64}
     (nil))
(insn 1068 1067 1069 54 (parallel [
            (set (reg:DI 595 [ _509 ])
                (mult:DI (reg:DI 594 [ _508 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":170 349 {*muldi3_1}
     (nil))
(insn 1069 1068 1070 54 (parallel [
            (set (reg:DI 596 [ _510 ])
                (plus:DI (reg:DI 593 [ _507 ])
                    (reg:DI 595 [ _509 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":170 222 {*adddi_1}
     (nil))
(insn 1070 1069 1071 54 (set (reg:SI 997)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALRCH.f":170 86 {*movsi_internal}
     (nil))
(insn 1071 1070 1072 54 (set (reg:DI 597 [ _511 ])
        (sign_extend:DI (reg:SI 997))) "CALRCH.f":170 149 {*extendsidi2_rex64}
     (nil))
(insn 1072 1071 1073 54 (parallel [
            (set (reg:DI 598 [ _512 ])
                (plus:DI (reg:DI 596 [ _510 ])
                    (reg:DI 597 [ _511 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":170 222 {*adddi_1}
     (nil))
(insn 1073 1072 1074 54 (parallel [
            (set (reg:DI 599 [ _513 ])
                (plus:DI (reg:DI 598 [ _512 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":170 222 {*adddi_1}
     (nil))
(insn 1074 1073 1075 54 (set (reg/f:DI 998)
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7fe96eef8870 extra>)) "CALRCH.f":170 85 {*movdi_internal}
     (nil))
(insn 1075 1074 1076 54 (parallel [
            (set (reg:DI 999)
                (plus:DI (reg:DI 599 [ _513 ])
                    (const_int 2311218 [0x234432])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":170 222 {*adddi_1}
     (nil))
(insn 1076 1075 1077 54 (set (reg:SF 600 [ _514 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 999)
                    (const_int 4 [0x4]))
                (reg/f:DI 998)) [2 extra.zint S4 A32])) "CALRCH.f":170 131 {*movsf_internal}
     (nil))
(insn 1077 1076 1078 54 (set (reg:SF 601 [ _515 ])
        (minus:SF (reg:SF 590 [ _504 ])
            (reg:SF 600 [ _514 ]))) "CALRCH.f":170 841 {*fop_sf_1}
     (nil))
(insn 1078 1077 1079 54 (set (reg:SF 602 [ _516 ])
        (reg:SF 601 [ _515 ])) "CALRCH.f":170 131 {*movsf_internal}
     (nil))
(insn 1079 1078 1080 54 (set (reg:SF 1001)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC7") [flags 0x2]) [0  S4 A32])) "CALRCH.f":170 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 5.0e-1 [0x0.8p+0])
        (nil)))
(insn 1080 1079 1081 54 (set (reg:SF 1000)
        (mult:SF (reg:SF 602 [ _516 ])
            (reg:SF 1001))) "CALRCH.f":170 838 {*fop_sf_comm}
     (nil))
(insn 1081 1080 1082 54 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -52 [0xffffffffffffffcc])) [2 dzkl+0 S4 A32])
        (reg:SF 1000)) "CALRCH.f":170 131 {*movsf_internal}
     (nil))
(insn 1082 1081 1083 54 (set (reg:SF 1003)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC4") [flags 0x2]) [0  S4 A32])) "CALRCH.f":171 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 1083 1082 1084 54 (set (reg:SF 1002)
        (div:SF (reg:SF 1003)
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -52 [0xffffffffffffffcc])) [2 dzkl+0 S4 A32]))) "CALRCH.f":171 841 {*fop_sf_1}
     (nil))
(insn 1084 1083 1085 54 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [2 rdzkl+0 S4 A32])
        (reg:SF 1002)) "CALRCH.f":171 131 {*movsf_internal}
     (nil))
(insn 1085 1084 1086 54 (set (reg:SI 1004)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALRCH.f":172 86 {*movsi_internal}
     (nil))
(insn 1086 1085 1087 54 (set (reg:DI 603 [ _517 ])
        (sign_extend:DI (reg:SI 1004))) "CALRCH.f":172 149 {*extendsidi2_rex64}
     (nil))
(insn 1087 1086 1088 54 (parallel [
            (set (reg:DI 604 [ _518 ])
                (mult:DI (reg:DI 603 [ _517 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":172 349 {*muldi3_1}
     (nil))
(insn 1088 1087 1089 54 (set (reg:SI 1005)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":172 86 {*movsi_internal}
     (nil))
(insn 1089 1088 1090 54 (set (reg:DI 605 [ _519 ])
        (sign_extend:DI (reg:SI 1005))) "CALRCH.f":172 149 {*extendsidi2_rex64}
     (nil))
(insn 1090 1089 1091 54 (parallel [
            (set (reg:DI 606 [ _520 ])
                (mult:DI (reg:DI 605 [ _519 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":172 349 {*muldi3_1}
     (nil))
(insn 1091 1090 1092 54 (parallel [
            (set (reg:DI 607 [ _521 ])
                (plus:DI (reg:DI 604 [ _518 ])
                    (reg:DI 606 [ _520 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":172 222 {*adddi_1}
     (nil))
(insn 1092 1091 1093 54 (set (reg:SI 1006)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALRCH.f":172 86 {*movsi_internal}
     (nil))
(insn 1093 1092 1094 54 (set (reg:DI 608 [ _522 ])
        (sign_extend:DI (reg:SI 1006))) "CALRCH.f":172 149 {*extendsidi2_rex64}
     (nil))
(insn 1094 1093 1095 54 (parallel [
            (set (reg:DI 609 [ _523 ])
                (plus:DI (reg:DI 607 [ _521 ])
                    (reg:DI 608 [ _522 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":172 222 {*adddi_1}
     (nil))
(insn 1095 1094 1096 54 (parallel [
            (set (reg:DI 610 [ _524 ])
                (plus:DI (reg:DI 609 [ _523 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":172 222 {*adddi_1}
     (nil))
(insn 1096 1095 1097 54 (set (reg/f:DI 1007)
        (symbol_ref:DI ("pvrbls_") [flags 0x202]  <var_decl 0x7fe96ef14cf0 pvrbls>)) "CALRCH.f":172 85 {*movdi_internal}
     (nil))
(insn 1097 1096 1098 54 (parallel [
            (set (reg:DI 1008)
                (plus:DI (reg:DI 610 [ _524 ])
                    (const_int 562989 [0x8972d])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":172 222 {*adddi_1}
     (nil))
(insn 1098 1097 1099 54 (set (reg:SF 671 [ M.0_602 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 1008)
                    (const_int 4 [0x4]))
                (reg/f:DI 1007)) [2 pvrbls.q2 S4 A32])) "CALRCH.f":172 131 {*movsf_internal}
     (nil))
(insn 1099 1098 1100 54 (set (reg:SF 1011)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC8") [flags 0x2]) [0  S4 A32])) "CALRCH.f":172 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 9.99999974737875163555145263671875e-6 [0x0.a7c5acp-16])
        (nil)))
(insn 1100 1099 1101 54 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 1011)
            (reg:SF 671 [ M.0_602 ]))) "CALRCH.f":172 53 {*cmpisf}
     (nil))
(insn 1101 1100 1102 54 (set (reg:QI 1010)
        (gt:QI (reg:CCFP 17 flags)
            (const_int 0 [0]))) "CALRCH.f":172 678 {*setcc_qi}
     (nil))
(insn 1102 1101 1103 54 (set (reg:SI 611 [ _525 ])
        (zero_extend:SI (reg:QI 1010))) "CALRCH.f":172 140 {*zero_extendqisi2}
     (nil))
(insn 1103 1102 1104 54 (set (reg:CCFP 17 flags)
        (unspec:CCFP [
                (compare:CCFP (reg:SF 671 [ M.0_602 ])
                    (reg:SF 671 [ M.0_602 ]))
            ] UNSPEC_NOTRAP)) "CALRCH.f":172 54 {*cmpiusf}
     (nil))
(insn 1104 1103 1105 54 (set (reg:QI 1012)
        (unordered:QI (reg:CCFP 17 flags)
            (const_int 0 [0]))) "CALRCH.f":172 678 {*setcc_qi}
     (nil))
(insn 1105 1104 1106 54 (set (reg:SI 612 [ _526 ])
        (zero_extend:SI (reg:QI 1012))) "CALRCH.f":172 140 {*zero_extendqisi2}
     (nil))
(insn 1106 1105 1107 54 (parallel [
            (set (reg:SI 613 [ _527 ])
                (ior:SI (reg:SI 611 [ _525 ])
                    (reg:SI 612 [ _526 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":172 450 {*iorsi_1}
     (nil))
(insn 1107 1106 1108 54 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 613 [ _527 ])
            (const_int 0 [0]))) "CALRCH.f":172 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1108 1107 1109 54 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1111)
            (pc))) "CALRCH.f":172 682 {*jcc}
     (nil)
 -> 1111)
;;  succ:       55 (FALLTHRU)
;;              56

;; basic block 55, loop depth 0, maybe hot
;;  prev block 54, next block 56, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       54 (FALLTHRU)
;; bb 55 artificial_defs: { }
;; bb 55 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(note 1109 1108 1110 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(insn 1110 1109 1111 55 (set (reg:SF 671 [ M.0_602 ])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC8") [flags 0x2]) [0  S4 A32])) "CALRCH.f":172 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 9.99999974737875163555145263671875e-6 [0x0.a7c5acp-16])
        (nil)))
;;  succ:       56 (FALLTHRU)

;; basic block 56, loop depth 0, maybe hot
;;  prev block 55, next block 57, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       54
;;              55 (FALLTHRU)
;; bb 56 artificial_defs: { }
;; bb 56 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 1111 1110 1112 56 36 (nil) [1 uses])
(note 1112 1111 1113 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(insn 1113 1112 1114 56 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -60 [0xffffffffffffffc4])) [2 q2kl+0 S4 A32])
        (reg:SF 671 [ M.0_602 ])) "CALRCH.f":172 131 {*movsf_internal}
     (nil))
(insn 1114 1113 1115 56 (set (reg:SF 1013)
        (sqrt:SF (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -60 [0xffffffffffffffc4])) [2 q2kl+0 S4 A32]))) "CALRCH.f":173 872 {*sqrtsf2_sse}
     (nil))
(insn 1115 1114 1116 56 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [2 qroot+0 S4 A32])
        (reg:SF 1013)) "CALRCH.f":173 131 {*movsf_internal}
     (nil))
(insn 1116 1115 1117 56 (set (reg:SI 1014)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALRCH.f":174 86 {*movsi_internal}
     (nil))
(insn 1117 1116 1118 56 (set (reg:DI 614 [ _528 ])
        (sign_extend:DI (reg:SI 1014))) "CALRCH.f":174 149 {*extendsidi2_rex64}
     (nil))
(insn 1118 1117 1119 56 (parallel [
            (set (reg:DI 615 [ _529 ])
                (mult:DI (reg:DI 614 [ _528 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":174 349 {*muldi3_1}
     (nil))
(insn 1119 1118 1120 56 (set (reg:SI 1015)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":174 86 {*movsi_internal}
     (nil))
(insn 1120 1119 1121 56 (set (reg:DI 616 [ _530 ])
        (sign_extend:DI (reg:SI 1015))) "CALRCH.f":174 149 {*extendsidi2_rex64}
     (nil))
(insn 1121 1120 1122 56 (parallel [
            (set (reg:DI 617 [ _531 ])
                (mult:DI (reg:DI 616 [ _530 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":174 349 {*muldi3_1}
     (nil))
(insn 1122 1121 1123 56 (parallel [
            (set (reg:DI 618 [ _532 ])
                (plus:DI (reg:DI 615 [ _529 ])
                    (reg:DI 617 [ _531 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":174 222 {*adddi_1}
     (nil))
(insn 1123 1122 1124 56 (set (reg:SI 1016)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALRCH.f":174 86 {*movsi_internal}
     (nil))
(insn 1124 1123 1125 56 (set (reg:DI 619 [ _533 ])
        (sign_extend:DI (reg:SI 1016))) "CALRCH.f":174 149 {*extendsidi2_rex64}
     (nil))
(insn 1125 1124 1126 56 (parallel [
            (set (reg:DI 620 [ _534 ])
                (plus:DI (reg:DI 618 [ _532 ])
                    (reg:DI 619 [ _533 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":174 222 {*adddi_1}
     (nil))
(insn 1126 1125 1127 56 (parallel [
            (set (reg:DI 621 [ _535 ])
                (plus:DI (reg:DI 620 [ _534 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":174 222 {*adddi_1}
     (nil))
(insn 1127 1126 1128 56 (set (reg/f:DI 1017)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -104 [0xffffffffffffff98])) [3 el+0 S8 A64])) "CALRCH.f":174 85 {*movdi_internal}
     (nil))
(insn 1128 1127 1129 56 (set (reg:SF 1018)
        (mem:SF (plus:DI (mult:DI (reg:DI 621 [ _535 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 1017)) [2 *el_715(D) S4 A32])) "CALRCH.f":174 131 {*movsf_internal}
     (nil))
(insn 1129 1128 1130 56 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -68 [0xffffffffffffffbc])) [2 elkl+0 S4 A32])
        (reg:SF 1018)) "CALRCH.f":174 131 {*movsf_internal}
     (nil))
(insn 1130 1129 1131 56 (set (reg:SF 672 [ M.1_603 ])
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -68 [0xffffffffffffffbc])) [2 elkl+0 S4 A32])) "CALRCH.f":175 131 {*movsf_internal}
     (nil))
(insn 1131 1130 1132 56 (set (reg:SF 1021)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC9") [flags 0x2]) [0  S4 A32])) "CALRCH.f":175 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 2.0000000298023223876953125e-1 [0x0.cccccdp-2])
        (nil)))
(insn 1132 1131 1133 56 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 1021)
            (reg:SF 672 [ M.1_603 ]))) "CALRCH.f":175 53 {*cmpisf}
     (nil))
(insn 1133 1132 1134 56 (set (reg:QI 1020)
        (gt:QI (reg:CCFP 17 flags)
            (const_int 0 [0]))) "CALRCH.f":175 678 {*setcc_qi}
     (nil))
(insn 1134 1133 1135 56 (set (reg:SI 622 [ _536 ])
        (zero_extend:SI (reg:QI 1020))) "CALRCH.f":175 140 {*zero_extendqisi2}
     (nil))
(insn 1135 1134 1136 56 (set (reg:CCFP 17 flags)
        (unspec:CCFP [
                (compare:CCFP (reg:SF 672 [ M.1_603 ])
                    (reg:SF 672 [ M.1_603 ]))
            ] UNSPEC_NOTRAP)) "CALRCH.f":175 54 {*cmpiusf}
     (nil))
(insn 1136 1135 1137 56 (set (reg:QI 1022)
        (unordered:QI (reg:CCFP 17 flags)
            (const_int 0 [0]))) "CALRCH.f":175 678 {*setcc_qi}
     (nil))
(insn 1137 1136 1138 56 (set (reg:SI 623 [ _537 ])
        (zero_extend:SI (reg:QI 1022))) "CALRCH.f":175 140 {*zero_extendqisi2}
     (nil))
(insn 1138 1137 1139 56 (parallel [
            (set (reg:SI 624 [ _538 ])
                (ior:SI (reg:SI 622 [ _536 ])
                    (reg:SI 623 [ _537 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":175 450 {*iorsi_1}
     (nil))
(insn 1139 1138 1140 56 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 624 [ _538 ])
            (const_int 0 [0]))) "CALRCH.f":175 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1140 1139 1141 56 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1143)
            (pc))) "CALRCH.f":175 682 {*jcc}
     (nil)
 -> 1143)
;;  succ:       57 (FALLTHRU)
;;              58

;; basic block 57, loop depth 0, maybe hot
;;  prev block 56, next block 58, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       56 (FALLTHRU)
;; bb 57 artificial_defs: { }
;; bb 57 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(note 1141 1140 1142 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(insn 1142 1141 1143 57 (set (reg:SF 672 [ M.1_603 ])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC9") [flags 0x2]) [0  S4 A32])) "CALRCH.f":175 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 2.0000000298023223876953125e-1 [0x0.cccccdp-2])
        (nil)))
;;  succ:       58 (FALLTHRU)

;; basic block 58, loop depth 0, maybe hot
;;  prev block 57, next block 59, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       56
;;              57 (FALLTHRU)
;; bb 58 artificial_defs: { }
;; bb 58 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 1143 1142 1144 58 37 (nil) [1 uses])
(note 1144 1143 1145 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(insn 1145 1144 1146 58 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -68 [0xffffffffffffffbc])) [2 elkl+0 S4 A32])
        (reg:SF 672 [ M.1_603 ])) "CALRCH.f":175 131 {*movsf_internal}
     (nil))
(insn 1146 1145 1147 58 (set (reg:SF 1024)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -68 [0xffffffffffffffbc])) [2 elkl+0 S4 A32])) "CALRCH.f":176 131 {*movsf_internal}
     (nil))
(insn 1147 1146 1148 58 (set (reg:SF 1023)
        (mult:SF (reg:SF 1024)
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -68 [0xffffffffffffffbc])) [2 elkl+0 S4 A32]))) "CALRCH.f":176 838 {*fop_sf_comm}
     (nil))
(insn 1148 1147 1149 58 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [2 elklsq+0 S4 A32])
        (reg:SF 1023)) "CALRCH.f":176 131 {*movsf_internal}
     (nil))
(insn 1149 1148 1150 58 (set (reg:SI 1025)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALRCH.f":177 86 {*movsi_internal}
     (nil))
(insn 1150 1149 1151 58 (set (reg:DI 625 [ _539 ])
        (sign_extend:DI (reg:SI 1025))) "CALRCH.f":177 149 {*extendsidi2_rex64}
     (nil))
(insn 1151 1150 1152 58 (parallel [
            (set (reg:DI 626 [ _540 ])
                (mult:DI (reg:DI 625 [ _539 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":177 349 {*muldi3_1}
     (nil))
(insn 1152 1151 1153 58 (set (reg:SI 1026)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":177 86 {*movsi_internal}
     (nil))
(insn 1153 1152 1154 58 (set (reg:DI 627 [ _541 ])
        (sign_extend:DI (reg:SI 1026))) "CALRCH.f":177 149 {*extendsidi2_rex64}
     (nil))
(insn 1154 1153 1155 58 (parallel [
            (set (reg:DI 628 [ _542 ])
                (mult:DI (reg:DI 627 [ _541 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":177 349 {*muldi3_1}
     (nil))
(insn 1155 1154 1156 58 (parallel [
            (set (reg:DI 629 [ _543 ])
                (plus:DI (reg:DI 626 [ _540 ])
                    (reg:DI 628 [ _542 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":177 222 {*adddi_1}
     (nil))
(insn 1156 1155 1157 58 (set (reg:SI 1027)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALRCH.f":177 86 {*movsi_internal}
     (nil))
(insn 1157 1156 1158 58 (set (reg:DI 630 [ _544 ])
        (sign_extend:DI (reg:SI 1027))) "CALRCH.f":177 149 {*extendsidi2_rex64}
     (nil))
(insn 1158 1157 1159 58 (parallel [
            (set (reg:DI 631 [ _545 ])
                (plus:DI (reg:DI 629 [ _543 ])
                    (reg:DI 630 [ _544 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":177 222 {*adddi_1}
     (nil))
(insn 1159 1158 1160 58 (parallel [
            (set (reg:DI 632 [ _546 ])
                (plus:DI (reg:DI 631 [ _545 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":177 222 {*adddi_1}
     (nil))
(insn 1160 1159 1161 58 (set (reg/f:DI 1028)
        (symbol_ref:DI ("thv.4234") [flags 0x202]  <var_decl 0x7fe96ef1e900 thv>)) "CALRCH.f":177 85 {*movdi_internal}
     (nil))
(insn 1161 1160 1162 58 (set (reg:SF 633 [ _547 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 632 [ _546 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 1028)) [2 thv S4 A32])) "CALRCH.f":177 131 {*movsf_internal}
     (nil))
(insn 1162 1161 1163 58 (set (reg:SI 1029)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALRCH.f":177 86 {*movsi_internal}
     (nil))
(insn 1163 1162 1164 58 (parallel [
            (set (reg:SI 634 [ _548 ])
                (plus:SI (reg:SI 1029)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":177 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 1164 1163 1165 58 (set (reg:DI 635 [ _549 ])
        (sign_extend:DI (reg:SI 634 [ _548 ]))) "CALRCH.f":177 149 {*extendsidi2_rex64}
     (nil))
(insn 1165 1164 1166 58 (parallel [
            (set (reg:DI 636 [ _550 ])
                (mult:DI (reg:DI 635 [ _549 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":177 349 {*muldi3_1}
     (nil))
(insn 1166 1165 1167 58 (set (reg:SI 1030)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":177 86 {*movsi_internal}
     (nil))
(insn 1167 1166 1168 58 (set (reg:DI 637 [ _551 ])
        (sign_extend:DI (reg:SI 1030))) "CALRCH.f":177 149 {*extendsidi2_rex64}
     (nil))
(insn 1168 1167 1169 58 (parallel [
            (set (reg:DI 638 [ _552 ])
                (mult:DI (reg:DI 637 [ _551 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":177 349 {*muldi3_1}
     (nil))
(insn 1169 1168 1170 58 (parallel [
            (set (reg:DI 639 [ _553 ])
                (plus:DI (reg:DI 636 [ _550 ])
                    (reg:DI 638 [ _552 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":177 222 {*adddi_1}
     (nil))
(insn 1170 1169 1171 58 (set (reg:SI 1031)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALRCH.f":177 86 {*movsi_internal}
     (nil))
(insn 1171 1170 1172 58 (set (reg:DI 640 [ _554 ])
        (sign_extend:DI (reg:SI 1031))) "CALRCH.f":177 149 {*extendsidi2_rex64}
     (nil))
(insn 1172 1171 1173 58 (parallel [
            (set (reg:DI 641 [ _555 ])
                (plus:DI (reg:DI 639 [ _553 ])
                    (reg:DI 640 [ _554 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":177 222 {*adddi_1}
     (nil))
(insn 1173 1172 1174 58 (parallel [
            (set (reg:DI 642 [ _556 ])
                (plus:DI (reg:DI 641 [ _555 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":177 222 {*adddi_1}
     (nil))
(insn 1174 1173 1175 58 (set (reg/f:DI 1032)
        (symbol_ref:DI ("thv.4234") [flags 0x202]  <var_decl 0x7fe96ef1e900 thv>)) "CALRCH.f":177 85 {*movdi_internal}
     (nil))
(insn 1175 1174 1176 58 (set (reg:SF 643 [ _557 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 642 [ _556 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 1032)) [2 thv S4 A32])) "CALRCH.f":177 131 {*movsf_internal}
     (nil))
(insn 1176 1175 1177 58 (set (reg:SF 1033)
        (minus:SF (reg:SF 633 [ _547 ])
            (reg:SF 643 [ _557 ]))) "CALRCH.f":177 841 {*fop_sf_1}
     (nil))
(insn 1177 1176 1178 58 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -76 [0xffffffffffffffb4])) [2 dthvkl+0 S4 A32])
        (reg:SF 1033)) "CALRCH.f":177 131 {*movsf_internal}
     (nil))
(insn 1178 1177 1179 58 (set (reg:SF 1034)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [2 uhkl+0 S4 A32])) "CALRCH.f":178 131 {*movsf_internal}
     (nil))
(insn 1179 1178 1180 58 (set (reg:SF 644 [ _558 ])
        (minus:SF (reg:SF 1034)
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -40 [0xffffffffffffffd8])) [2 ulkl+0 S4 A32]))) "CALRCH.f":178 841 {*fop_sf_1}
     (nil))
(insn 1180 1179 1181 58 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [2 dukl+0 S4 A32])
        (reg:SF 644 [ _558 ])) "CALRCH.f":178 131 {*movsf_internal}
     (nil))
(insn 1181 1180 1182 58 (set (reg:SF 1035)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -44 [0xffffffffffffffd4])) [2 vhkl+0 S4 A32])) "CALRCH.f":179 131 {*movsf_internal}
     (nil))
(insn 1182 1181 1183 58 (set (reg:SF 645 [ _559 ])
        (minus:SF (reg:SF 1035)
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])) [2 vlkl+0 S4 A32]))) "CALRCH.f":179 841 {*fop_sf_1}
     (nil))
(insn 1183 1182 1184 58 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -84 [0xffffffffffffffac])) [2 dvkl+0 S4 A32])
        (reg:SF 645 [ _559 ])) "CALRCH.f":179 131 {*movsf_internal}
     (nil))
(insn 1184 1183 1185 58 (set (reg:SF 1036)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [2 dukl+0 S4 A32])) "CALRCH.f":180 131 {*movsf_internal}
     (nil))
(insn 1185 1184 1186 58 (set (reg:SF 646 [ _560 ])
        (mult:SF (reg:SF 1036)
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -56 [0xffffffffffffffc8])) [2 rdzkl+0 S4 A32]))) "CALRCH.f":180 838 {*fop_sf_comm}
     (nil))
(insn 1186 1185 1187 58 (set (reg:SF 705 [ _724 ])
        (reg:SF 646 [ _560 ])) "CALRCH.f":180 131 {*movsf_internal}
     (nil))
(insn 1187 1186 1188 58 (set (reg:SF 706 [ _725 ])
        (mult:SF (reg:SF 705 [ _724 ])
            (reg:SF 705 [ _724 ]))) "CALRCH.f":180 838 {*fop_sf_comm}
     (nil))
(insn 1188 1187 1189 58 (set (reg:SF 1037)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -84 [0xffffffffffffffac])) [2 dvkl+0 S4 A32])) "CALRCH.f":180 131 {*movsf_internal}
     (nil))
(insn 1189 1188 1190 58 (set (reg:SF 647 [ _561 ])
        (mult:SF (reg:SF 1037)
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -56 [0xffffffffffffffc8])) [2 rdzkl+0 S4 A32]))) "CALRCH.f":180 838 {*fop_sf_comm}
     (nil))
(insn 1190 1189 1191 58 (set (reg:SF 707 [ _726 ])
        (reg:SF 647 [ _561 ])) "CALRCH.f":180 131 {*movsf_internal}
     (nil))
(insn 1191 1190 1192 58 (set (reg:SF 708 [ _727 ])
        (mult:SF (reg:SF 707 [ _726 ])
            (reg:SF 707 [ _726 ]))) "CALRCH.f":180 838 {*fop_sf_comm}
     (nil))
(insn 1192 1191 1193 58 (set (reg:SF 648 [ _562 ])
        (plus:SF (reg:SF 706 [ _725 ])
            (reg:SF 708 [ _727 ]))) "CALRCH.f":180 838 {*fop_sf_comm}
     (nil))
(insn 1193 1192 1194 58 (set (reg/f:DI 1038)
        (symbol_ref:DI ("phys_") [flags 0x202]  <var_decl 0x7fe96ef06ea0 phys>)) "CALRCH.f":180 85 {*movdi_internal}
     (nil))
(insn 1194 1193 1195 58 (set (mem/c:SF (plus:DI (reg/f:DI 1038)
                (const_int 28 [0x1c])) [2 phys.cs+0 S4 A32])
        (reg:SF 648 [ _562 ])) "CALRCH.f":180 131 {*movsf_internal}
     (nil))
(insn 1195 1194 1196 58 (set (reg/f:DI 1039)
        (symbol_ref:DI ("phys_") [flags 0x202]  <var_decl 0x7fe96ef06ea0 phys>)) "CALRCH.f":1 85 {*movdi_internal}
     (nil))
(insn 1196 1195 1197 58 (set (reg:SF 649 [ _563 ])
        (mem/c:SF (plus:DI (reg/f:DI 1039)
                (const_int 28 [0x1c])) [2 phys.cs+0 S4 A32])) "CALRCH.f":1 131 {*movsf_internal}
     (nil))
(insn 1197 1196 1198 58 (set (reg:SF 1040)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC10") [flags 0x2]) [0  S4 A32])) "CALRCH.f":184 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 9.99999993922529029077850282192230224609375e-9 [0x0.abcc77p-26])
        (nil)))
(insn 1198 1197 1199 58 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 1040)
            (reg:SF 649 [ _563 ]))) "CALRCH.f":184 53 {*cmpisf}
     (nil))
(jump_insn 1199 1198 1203 58 (set (pc)
        (if_then_else (unlt (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1312)
            (pc))) "CALRCH.f":184 682 {*jcc}
     (nil)
 -> 1312)
;;  succ:       59 (FALLTHRU)
;;              60

;; basic block 59, loop depth 0, maybe hot
;;  prev block 58, next block 60, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       58 (FALLTHRU)
;; bb 59 artificial_defs: { }
;; bb 59 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(note 1203 1199 1204 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(insn 1204 1203 1205 59 (set (reg:SI 1041)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALRCH.f":189 86 {*movsi_internal}
     (nil))
(insn 1205 1204 1206 59 (set (reg:DI 650 [ _564 ])
        (sign_extend:DI (reg:SI 1041))) "CALRCH.f":189 149 {*extendsidi2_rex64}
     (nil))
(insn 1206 1205 1207 59 (parallel [
            (set (reg:DI 651 [ _565 ])
                (mult:DI (reg:DI 650 [ _564 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":189 349 {*muldi3_1}
     (nil))
(insn 1207 1206 1208 59 (set (reg:SI 1042)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":189 86 {*movsi_internal}
     (nil))
(insn 1208 1207 1209 59 (set (reg:DI 652 [ _566 ])
        (sign_extend:DI (reg:SI 1042))) "CALRCH.f":189 149 {*extendsidi2_rex64}
     (nil))
(insn 1209 1208 1210 59 (parallel [
            (set (reg:DI 653 [ _567 ])
                (mult:DI (reg:DI 652 [ _566 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":189 349 {*muldi3_1}
     (nil))
(insn 1210 1209 1211 59 (parallel [
            (set (reg:DI 654 [ _568 ])
                (plus:DI (reg:DI 651 [ _565 ])
                    (reg:DI 653 [ _567 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":189 222 {*adddi_1}
     (nil))
(insn 1211 1210 1212 59 (set (reg:SI 1043)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALRCH.f":189 86 {*movsi_internal}
     (nil))
(insn 1212 1211 1213 59 (set (reg:DI 655 [ _569 ])
        (sign_extend:DI (reg:SI 1043))) "CALRCH.f":189 149 {*extendsidi2_rex64}
     (nil))
(insn 1213 1212 1214 59 (parallel [
            (set (reg:DI 656 [ _570 ])
                (plus:DI (reg:DI 654 [ _568 ])
                    (reg:DI 655 [ _569 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":189 222 {*adddi_1}
     (nil))
(insn 1214 1213 1215 59 (parallel [
            (set (reg:DI 657 [ _571 ])
                (plus:DI (reg:DI 656 [ _570 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":189 222 {*adddi_1}
     (nil))
(insn 1215 1214 1216 59 (set (reg:SF 658 [ _572 ])
        (mem/c:SF (symbol_ref:DI ("options_") [flags 0x2]  <var_decl 0x7fe96ef06240 options>) [2 options.spval+0 S4 A128])) "CALRCH.f":1 131 {*movsf_internal}
     (nil))
(insn 1216 1215 1217 59 (set (reg/f:DI 1044)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -112 [0xffffffffffffff90])) [3 richno+0 S8 A64])) "CALRCH.f":189 85 {*movdi_internal}
     (nil))
(insn 1217 1216 1313 59 (set (mem:SF (plus:DI (mult:DI (reg:DI 657 [ _571 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 1044)) [2 *richno_631(D) S4 A32])
        (reg:SF 658 [ _572 ])) "CALRCH.f":189 131 {*movsf_internal}
     (nil))
(jump_insn 1313 1217 1314 59 (set (pc)
        (label_ref 1250)) -1
     (nil)
 -> 1250)
;;  succ:       61 [always] 

(barrier 1314 1313 1312)
;; basic block 60, loop depth 0, maybe hot
;;  prev block 59, next block 61, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       58
;; bb 60 artificial_defs: { }
;; bb 60 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 1312 1314 1221 60 47 (nil) [1 uses])
(note 1221 1312 1222 60 [bb 60] NOTE_INSN_BASIC_BLOCK)
(insn 1222 1221 1223 60 (set (reg:SF 1045)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -76 [0xffffffffffffffb4])) [2 dthvkl+0 S4 A32])) "CALRCH.f":195 131 {*movsf_internal}
     (nil))
(insn 1223 1222 1224 60 (set (reg:SF 1046)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC11") [flags 0x2]) [0  S4 A32])) "CALRCH.f":195 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 3.5966001451015472412109375e-2 [0x0.935116p-4])
        (nil)))
(insn 1224 1223 1225 60 (set (reg:SF 659 [ _573 ])
        (mult:SF (reg:SF 1045)
            (reg:SF 1046))) "CALRCH.f":195 838 {*fop_sf_comm}
     (nil))
(insn 1225 1224 1226 60 (set (reg:SF 660 [ _574 ])
        (mult:SF (reg:SF 659 [ _573 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -56 [0xffffffffffffffc8])) [2 rdzkl+0 S4 A32]))) "CALRCH.f":195 838 {*fop_sf_comm}
     (nil))
(insn 1226 1225 1227 60 (set (reg:V4SF 1048)
        (mem/u/c:V4SF (symbol_ref/u:DI ("*.LC12") [flags 0x2]) [0  S16 A128])) "CALRCH.f":195 1282 {movv4sf_internal}
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF -0.0 [-0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 1227 1226 1228 60 (parallel [
            (set (reg:SF 1047)
                (neg:SF (reg:SF 660 [ _574 ])))
            (use (reg:V4SF 1048))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":195 507 {*absnegsf2}
     (expr_list:REG_EQUAL (neg:SF (reg:SF 660 [ _574 ]))
        (nil)))
(insn 1228 1227 1229 60 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -88 [0xffffffffffffffa8])) [2 ct+0 S4 A32])
        (reg:SF 1047)) "CALRCH.f":195 131 {*movsf_internal}
     (nil))
(insn 1229 1228 1230 60 (set (reg/f:DI 1049)
        (symbol_ref:DI ("phys_") [flags 0x202]  <var_decl 0x7fe96ef06ea0 phys>)) "CALRCH.f":1 85 {*movdi_internal}
     (nil))
(insn 1230 1229 1231 60 (set (reg:SF 661 [ _575 ])
        (mem/c:SF (plus:DI (reg/f:DI 1049)
                (const_int 28 [0x1c])) [2 phys.cs+0 S4 A32])) "CALRCH.f":1 131 {*movsf_internal}
     (nil))
(insn 1231 1230 1232 60 (set (reg:SF 1050)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -88 [0xffffffffffffffa8])) [2 ct+0 S4 A32])) "CALRCH.f":196 131 {*movsf_internal}
     (nil))
(insn 1232 1231 1233 60 (set (reg:SF 662 [ _576 ])
        (div:SF (reg:SF 1050)
            (reg:SF 661 [ _575 ]))) "CALRCH.f":196 841 {*fop_sf_1}
     (nil))
(insn 1233 1232 1234 60 (set (reg:V4SF 1052)
        (mem/u/c:V4SF (symbol_ref/u:DI ("*.LC12") [flags 0x2]) [0  S16 A128])) "CALRCH.f":196 1282 {movv4sf_internal}
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF -0.0 [-0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 1234 1233 1235 60 (parallel [
            (set (reg:SF 1051)
                (neg:SF (reg:SF 662 [ _576 ])))
            (use (reg:V4SF 1052))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":196 507 {*absnegsf2}
     (expr_list:REG_EQUAL (neg:SF (reg:SF 662 [ _576 ]))
        (nil)))
(insn 1235 1234 1236 60 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -92 [0xffffffffffffffa4])) [2 ri+0 S4 A32])
        (reg:SF 1051)) "CALRCH.f":196 131 {*movsf_internal}
     (nil))
(insn 1236 1235 1237 60 (set (reg:SI 1053)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALRCH.f":197 86 {*movsi_internal}
     (nil))
(insn 1237 1236 1238 60 (set (reg:DI 663 [ _577 ])
        (sign_extend:DI (reg:SI 1053))) "CALRCH.f":197 149 {*extendsidi2_rex64}
     (nil))
(insn 1238 1237 1239 60 (parallel [
            (set (reg:DI 664 [ _578 ])
                (mult:DI (reg:DI 663 [ _577 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":197 349 {*muldi3_1}
     (nil))
(insn 1239 1238 1240 60 (set (reg:SI 1054)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":197 86 {*movsi_internal}
     (nil))
(insn 1240 1239 1241 60 (set (reg:DI 665 [ _579 ])
        (sign_extend:DI (reg:SI 1054))) "CALRCH.f":197 149 {*extendsidi2_rex64}
     (nil))
(insn 1241 1240 1242 60 (parallel [
            (set (reg:DI 666 [ _580 ])
                (mult:DI (reg:DI 665 [ _579 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":197 349 {*muldi3_1}
     (nil))
(insn 1242 1241 1243 60 (parallel [
            (set (reg:DI 667 [ _581 ])
                (plus:DI (reg:DI 664 [ _578 ])
                    (reg:DI 666 [ _580 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":197 222 {*adddi_1}
     (nil))
(insn 1243 1242 1244 60 (set (reg:SI 1055)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALRCH.f":197 86 {*movsi_internal}
     (nil))
(insn 1244 1243 1245 60 (set (reg:DI 668 [ _582 ])
        (sign_extend:DI (reg:SI 1055))) "CALRCH.f":197 149 {*extendsidi2_rex64}
     (nil))
(insn 1245 1244 1246 60 (parallel [
            (set (reg:DI 669 [ _583 ])
                (plus:DI (reg:DI 667 [ _581 ])
                    (reg:DI 668 [ _582 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":197 222 {*adddi_1}
     (nil))
(insn 1246 1245 1247 60 (parallel [
            (set (reg:DI 670 [ _584 ])
                (plus:DI (reg:DI 669 [ _583 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":197 222 {*adddi_1}
     (nil))
(insn 1247 1246 1248 60 (set (reg/f:DI 1056)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -112 [0xffffffffffffff90])) [3 richno+0 S8 A64])) "CALRCH.f":197 85 {*movdi_internal}
     (nil))
(insn 1248 1247 1249 60 (set (reg:SF 1057)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -92 [0xffffffffffffffa4])) [2 ri+0 S4 A32])) "CALRCH.f":197 131 {*movsf_internal}
     (nil))
(insn 1249 1248 1250 60 (set (mem:SF (plus:DI (mult:DI (reg:DI 670 [ _584 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 1056)) [2 *richno_631(D) S4 A32])
        (reg:SF 1057)) "CALRCH.f":197 131 {*movsf_internal}
     (nil))
;;  succ:       61 (FALLTHRU)

;; basic block 61, loop depth 0, maybe hot
;;  prev block 60, next block 81, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       60 (FALLTHRU)
;;              53
;;              51
;;              59 [always] 
;; bb 61 artificial_defs: { }
;; bb 61 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 1250 1249 1251 61 33 (nil) [3 uses])
(note 1251 1250 1252 61 [bb 61] NOTE_INSN_BASIC_BLOCK)
(insn 1252 1251 1315 61 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":150 221 {*addsi_1}
     (nil))
(jump_insn 1315 1252 1316 61 (set (pc)
        (label_ref 1253)) "CALRCH.f":150 -1
     (nil)
 -> 1253)
;;  succ:       49 [always] 

(barrier 1316 1315 1370)
;; basic block 81, loop depth 0, maybe hot
;;  prev block 61, next block 62, flags: (NEW, RTL, MODIFIED)
;;  pred:       49
;; bb 81 artificial_defs: { }
;; bb 81 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 1370 1316 1369 81 64 (nil) [1 uses])
(note 1369 1370 1371 81 [bb 81] NOTE_INSN_BASIC_BLOCK)
(insn 1371 1369 1256 81 (const_int 0 [0]) "CALRCH.f":200 -1
     (nil))
;;  succ:       62 [always]  (FALLTHRU)

;; basic block 62, loop depth 0, maybe hot
;;  prev block 81, next block 80, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       81 [always]  (FALLTHRU)
;; bb 62 artificial_defs: { }
;; bb 62 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 1256 1371 1257 62 32 (nil) [0 uses])
(note 1257 1256 1258 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(insn 1258 1257 1317 62 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":149 221 {*addsi_1}
     (nil))
(jump_insn 1317 1258 1318 62 (set (pc)
        (label_ref 1259)) "CALRCH.f":149 -1
     (nil)
 -> 1259)
;;  succ:       47 [always] 

(barrier 1318 1317 1367)
;; basic block 80, loop depth 0, maybe hot
;;  prev block 62, next block 63, flags: (NEW, RTL, MODIFIED)
;;  pred:       47
;; bb 80 artificial_defs: { }
;; bb 80 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 1367 1318 1366 80 63 (nil) [1 uses])
(note 1366 1367 1368 80 [bb 80] NOTE_INSN_BASIC_BLOCK)
(insn 1368 1366 1262 80 (const_int 0 [0]) "CALRCH.f":150 -1
     (nil))
;;  succ:       63 [always]  (FALLTHRU)

;; basic block 63, loop depth 0, maybe hot
;;  prev block 80, next block 79, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       80 [always]  (FALLTHRU)
;; bb 63 artificial_defs: { }
;; bb 63 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 1262 1368 1263 63 31 (nil) [0 uses])
(note 1263 1262 1264 63 [bb 63] NOTE_INSN_BASIC_BLOCK)
(insn 1264 1263 1319 63 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":145 221 {*addsi_1}
     (nil))
(jump_insn 1319 1264 1320 63 (set (pc)
        (label_ref 1265)) "CALRCH.f":145 -1
     (nil)
 -> 1265)
;;  succ:       45 [always] 

(barrier 1320 1319 1364)
;; basic block 79, loop depth 0, maybe hot
;;  prev block 63, next block 64, flags: (NEW, RTL, MODIFIED)
;;  pred:       45
;; bb 79 artificial_defs: { }
;; bb 79 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 1364 1320 1363 79 62 (nil) [1 uses])
(note 1363 1364 1365 79 [bb 79] NOTE_INSN_BASIC_BLOCK)
(insn 1365 1363 1268 79 (const_int 0 [0]) "CALRCH.f":149 -1
     (nil))
;;  succ:       64 [always]  (FALLTHRU)

;; basic block 64, loop depth 0, maybe hot
;;  prev block 79, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       79 [always]  (FALLTHRU)
;; bb 64 artificial_defs: { }
;; bb 64 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 1268 1365 1269 64 30 (nil) [0 uses])
(note 1269 1268 1283 64 [bb 64] NOTE_INSN_BASIC_BLOCK)
(insn 1283 1269 0 64 (const_int 0 [0]) "CALRCH.f":207 718 {nop}
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)

