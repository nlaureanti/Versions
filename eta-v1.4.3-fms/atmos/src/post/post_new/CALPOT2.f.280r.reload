
;; Function calpot2 (calpot2_, funcdef_no=0, decl_uid=3768, cgraph_uid=0, symbol_order=0)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=176, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 20 to 7 (offset=112, prev_offset=0)
Can eliminate 20 to 6 (offset=-48, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 3:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 4:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 5:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 6:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 10:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 11:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 13:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 14:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 16:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (0) r {*cmpdi_ccno_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 17:  (0) =r  (2) rm  (3) 0 {*movdicc_noc}
      Creating newreg=204 from oldreg=165, assigning class GENERAL_REGS to r204
   17: r204:DI={(flags:CCGOC>=0)?r133:DI:r204:DI}
      REG_DEAD r165:DI
      REG_DEAD r133:DI
      REG_DEAD flags:CCGOC
    Inserting insn reload before:
  206: r204:DI=r165:DI
    Inserting insn reload after:
  207: r134:DI=r204:DI

            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 18:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 19:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 20:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 21:  (0) m  (1) re {*movdi_internal}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 2 in insn 22:  (0) r  (1) 0  (2) mr {*muldi3_1}
      Creating newreg=205 from oldreg=135, assigning class GENERAL_REGS to r205
   22: {r205:DI=r205:DI*[frame:DI-0x48];clobber flags:CC;}
      REG_UNUSED flags:CC
    Inserting insn reload before:
  208: r205:DI=r134:DI
    Inserting insn reload after:
  209: r135:DI=r205:DI

          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 24:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (0) r {*cmpdi_ccno_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 25:  (0) r  (2) 0  (3) rm {*movdicc_noc}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 28:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 29:  (0) r  (1) Z {*movdi_internal}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 33:  (0) =rm  (1) 0 {*one_cmpldi2_1}
      Creating newreg=206 from oldreg=140, assigning class GENERAL_REGS to r206
   33: r206:DI=~r206:DI
    Inserting insn reload before:
  210: r206:DI=r134:DI
    Inserting insn reload after:
  211: r140:DI=r206:DI

            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 34:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 35:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 36:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 37:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 38:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 40:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 39:  (0) r {*cmpdi_ccno_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 41:  (0) =r  (2) rm  (3) 0 {*movdicc_noc}
      Creating newreg=207 from oldreg=171, assigning class GENERAL_REGS to r207
   41: r207:DI={(flags:CCGOC>=0)?r141:DI:r207:DI}
      REG_DEAD r171:DI
      REG_DEAD r141:DI
      REG_DEAD flags:CCGOC
    Inserting insn reload before:
  212: r207:DI=r171:DI
    Inserting insn reload after:
  213: r142:DI=r207:DI

            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 42:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 43:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 44:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 45:  (0) m  (1) re {*movdi_internal}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 2 in insn 46:  (0) r  (1) 0  (2) mr {*muldi3_1}
      Creating newreg=208 from oldreg=143, assigning class GENERAL_REGS to r208
   46: {r208:DI=r208:DI*[frame:DI-0x58];clobber flags:CC;}
      REG_UNUSED flags:CC
    Inserting insn reload before:
  214: r208:DI=r142:DI
    Inserting insn reload after:
  215: r143:DI=r208:DI

          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 48:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 47:  (0) r {*cmpdi_ccno_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 49:  (0) r  (2) 0  (3) rm {*movdicc_noc}
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 52:  (0) m  (1) re {*movdi_internal}
            0 Non input pseudo reload: reject++
          alt=2,overall=7,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
          alt=3,overall=7,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
          alt=4,overall=7,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 53:  (0) m  (1) re {*movdi_internal}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 57:  (0) =rm  (1) 0 {*one_cmpldi2_1}
      Creating newreg=209 from oldreg=148, assigning class GENERAL_REGS to r209
   57: r209:DI=~r209:DI
    Inserting insn reload before:
  216: r209:DI=r142:DI
    Inserting insn reload after:
  217: r148:DI=r209:DI

            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 58:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 59:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 60:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 61:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 62:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 64:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 63:  (0) r {*cmpdi_ccno_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 65:  (0) =r  (2) rm  (3) 0 {*movdicc_noc}
      Creating newreg=210 from oldreg=177, assigning class GENERAL_REGS to r210
   65: r210:DI={(flags:CCGOC>=0)?r149:DI:r210:DI}
      REG_DEAD r177:DI
      REG_DEAD r149:DI
      REG_DEAD flags:CCGOC
    Inserting insn reload before:
  218: r210:DI=r177:DI
    Inserting insn reload after:
  219: r150:DI=r210:DI

            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 66:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 67:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 68:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 69:  (0) m  (1) re {*movdi_internal}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 2 in insn 70:  (0) r  (1) 0  (2) mr {*muldi3_1}
      Creating newreg=211 from oldreg=151, assigning class GENERAL_REGS to r211
   70: {r211:DI=r211:DI*[frame:DI-0x68];clobber flags:CC;}
      REG_UNUSED flags:CC
    Inserting insn reload before:
  220: r211:DI=r150:DI
    Inserting insn reload after:
  221: r151:DI=r211:DI

          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 72:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 71:  (0) r {*cmpdi_ccno_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 73:  (0) r  (2) 0  (3) rm {*movdicc_noc}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 76:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 77:  (0) r  (1) Z {*movdi_internal}
            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
          alt=0,overall=15,losers=2,rld_nregs=2
	 Choosing alt 0 in insn 81:  (0) =rm  (1) 0 {*one_cmpldi2_1}
      Creating newreg=212 from oldreg=156, assigning class GENERAL_REGS to r212
   81: r212:DI=~r212:DI
    Inserting insn reload before:
  222: r212:DI=r150:DI
    Inserting insn reload after:
  223: r156:DI=r212:DI

            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=5,overall=2,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 223:  (0) m  (1) re {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 82:  (0) =r  (1) g {*movsi_internal}
            0 Non input pseudo reload: reject++
          alt=0,overall=7,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=2,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=3,overall=8,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=4,overall=14,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=5,overall=17,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            alt=6,overall=13,losers=1 -- refuse
            Staticly defined alt reject+=6
            alt=7: Bad operand -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=8,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=10,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=11,overall=11,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            alt=12,overall=13,losers=1 -- refuse
            Staticly defined alt reject+=6
            alt=13: Bad operand -- refuse
            alt=14: Bad operand -- refuse
            alt=15: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=16: Bad operand -- refuse
	 Choosing alt 0 in insn 83:  (0) =r  (1) g {*movsi_internal}
      Creating newreg=213 from oldreg=158, assigning class GENERAL_REGS to r213
   83: r213:SI=[const(`parallel_'+0xc)]
    Inserting insn reload after:
  224: r158:SI=r213:SI

            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=608,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=1,overall=2,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 224:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 84:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 86:  (0) rm  (1) re {*cmpsi_1}
      Creating newreg=214 from oldreg=158, assigning class GENERAL_REGS to r214
   86: flags:CCGC=cmp([frame:DI-0x38],r214:SI)
    Inserting insn reload before:
  225: r214:SI=r158:SI

            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 225:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 87:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 88:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 89:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 92:  (0) r  (1) rem {*movdi_internal}
            0 Non input pseudo reload: reject++
          alt=0,overall=7,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=2,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=3,overall=8,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=4,overall=14,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=5,overall=17,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            alt=6,overall=13,losers=1 -- refuse
            Staticly defined alt reject+=6
            alt=7: Bad operand -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=8,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=10,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=11,overall=11,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            alt=12,overall=13,losers=1 -- refuse
            Staticly defined alt reject+=6
            alt=13: Bad operand -- refuse
            alt=14: Bad operand -- refuse
            alt=15: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=16: Bad operand -- refuse
	 Choosing alt 0 in insn 93:  (0) =r  (1) g {*movsi_internal}
      Creating newreg=215 from oldreg=160, assigning class GENERAL_REGS to r215
   93: r215:SI=[r182:DI]
      REG_DEAD r182:DI
    Inserting insn reload after:
  226: r160:SI=r215:SI

            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=608,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=1,overall=2,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 226:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 94:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 96:  (0) rm  (1) re {*cmpsi_1}
      Creating newreg=216 from oldreg=160, assigning class GENERAL_REGS to r216
   96: flags:CCGC=cmp([frame:DI-0x34],r216:SI)
    Inserting insn reload before:
  227: r216:SI=r160:SI

            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 227:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 97:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 98:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 99:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 102:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 103:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 104
	 Choosing alt 2 in insn 104:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 105:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 106:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 107:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 108:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 109:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 110:  (0) v  (1) m {*movsf_internal}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 111:  (0) v  (1) vm {movv4sf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 112:  (0) =Yv  (1) 0  (2) Yvm {*absnegsf2}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 113:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 114:  (0) v  (1) vm {*cmpisf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 120:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 121:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 122
	 Choosing alt 2 in insn 122:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 123:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 124:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 125:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 126:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 127:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 128:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 129:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 130:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=616,losers=2,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=625,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=621,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=630,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 132:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 134:  (1) rBwBz {*call_value}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
          alt=0,overall=1229,losers=4,rld_nregs=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
          alt=1,overall=628,losers=3,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=1214,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            Cycle danger: overall += LRA_MAX_REJECT
          alt=4,overall=1227,losers=2,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=7,overall=621,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
          alt=8,overall=13,losers=1,rld_nregs=0
            Staticly defined alt reject+=6
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 135:  (0) ?r  (1) Yj {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 136:  (0) ?m  (1) rF {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 137:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 138:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 139
	 Choosing alt 2 in insn 139:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
            alt=2,overall=12,losers=2 -- refuse
          alt=3,overall=6,losers=1,rld_nregs=1
            2 Non pseudo reload: reject++
            alt=0,overall=7,losers=1 -- refuse
            alt=1,overall=12,losers=2 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=6,losers=1,rld_nregs=1
	 Choosing alt 3 in insn 140:  (0) r  (1) r  (2) le {*adddi_1}
      Creating newreg=217 from oldreg=156, assigning class GENERAL_REGS to r217
  140: {r118:DI=r217:DI+r117:DI;clobber flags:CC;}
      REG_DEAD r117:DI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  228: r217:DI=r156:DI

            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=2,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 228:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 141:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 142:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 143:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 144:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 145:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 146:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 147:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 148
	 Choosing alt 2 in insn 148:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 149:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 150:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 151:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 152:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 153:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 154:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 155:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 160:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 161:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 162
	 Choosing alt 2 in insn 162:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 163:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 164:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 165:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 166:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 167:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 168:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 169:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 172:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 178:  (0) rm  (1) 0  (2) re {*addsi_1}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #1: **********

EBB 2
EBB 3 4
EBB 5 6 7
EBB 8
EBB 9
EBB 13
EBB 10
EBB 12
EBB 11

********** Pseudo live ranges #1: **********

  BB 11
   Insn 191: point = 0, n_alt = -1
  BB 12
   Insn 201: point = 0, n_alt = -1
  BB 3
   Insn 90: point = 0, n_alt = -1
   Insn 89: point = 0, n_alt = 0
   Insn 88: point = 1, n_alt = 0
   Insn 87: point = 3, n_alt = 0
   Insn 86: point = 4, n_alt = 0
   Insn 225: point = 5, n_alt = 0
  BB 10
   Insn 197: point = 7, n_alt = -1
   Insn 178: point = 7, n_alt = 1
  BB 13
   Insn 204: point = 8, n_alt = -1
  BB 5
   Insn 100: point = 9, n_alt = -1
   Insn 99: point = 9, n_alt = 0
   Insn 98: point = 10, n_alt = 0
   Insn 97: point = 12, n_alt = 0
   Insn 96: point = 13, n_alt = 0
   Insn 227: point = 14, n_alt = 0
  BB 9
   Insn 195: point = 16, n_alt = -1
   Insn 172: point = 16, n_alt = 1
  BB 7
   Insn 193: point = 17, n_alt = -1
   Insn 155: point = 17, n_alt = 8
   Insn 154: point = 18, n_alt = 3
   Insn 153: point = 19, n_alt = 1
   Insn 152: point = 21, n_alt = 0
   Insn 151: point = 23, n_alt = 0
   Insn 150: point = 25, n_alt = 0
   Insn 149: point = 26, n_alt = 3
   Insn 148: point = 28, n_alt = 2
   Insn 147: point = 30, n_alt = 0
   Insn 146: point = 32, n_alt = 0
   Insn 145: point = 33, n_alt = 7
   Insn 144: point = 35, n_alt = 3
   Insn 143: point = 36, n_alt = 0
   Insn 142: point = 38, n_alt = 0
   Insn 141: point = 40, n_alt = 0
   Insn 140: point = 41, n_alt = 3
   Insn 228: point = 43, n_alt = 3
   Insn 139: point = 44, n_alt = 2
   Insn 138: point = 46, n_alt = 0
   Insn 137: point = 48, n_alt = 0
   Insn 136: point = 49, n_alt = 4
   Insn 135: point = 50, n_alt = 9
   Insn 134: point = 51, n_alt = 0
   Insn 133: point = 51, n_alt = -2
   Insn 132: point = 52, n_alt = 7
   Insn 131: point = 52, n_alt = -2
   Insn 130: point = 54, n_alt = 2
   Insn 129: point = 56, n_alt = 7
   Insn 128: point = 57, n_alt = 7
   Insn 127: point = 59, n_alt = 3
   Insn 126: point = 60, n_alt = 0
   Insn 125: point = 62, n_alt = 0
   Insn 124: point = 64, n_alt = 0
   Insn 123: point = 65, n_alt = 3
   Insn 122: point = 67, n_alt = 2
   Insn 121: point = 69, n_alt = 0
   Insn 120: point = 71, n_alt = 0
  BB 8
   Insn 169: point = 73, n_alt = 8
   Insn 168: point = 74, n_alt = 7
   Insn 167: point = 75, n_alt = 3
   Insn 166: point = 76, n_alt = 0
   Insn 165: point = 78, n_alt = 0
   Insn 164: point = 80, n_alt = 0
   Insn 163: point = 81, n_alt = 3
   Insn 162: point = 83, n_alt = 2
   Insn 161: point = 85, n_alt = 0
   Insn 160: point = 87, n_alt = 0
  BB 6
   Insn 115: point = 89, n_alt = -1
   Insn 114: point = 89, n_alt = 1
   Insn 113: point = 90, n_alt = 7
   Insn 112: point = 91, n_alt = 0
   Insn 111: point = 93, n_alt = 2
   Insn 110: point = 94, n_alt = 7
   Insn 109: point = 96, n_alt = 3
   Insn 108: point = 97, n_alt = 0
   Insn 107: point = 99, n_alt = 0
   Insn 106: point = 101, n_alt = 0
   Insn 105: point = 102, n_alt = 3
   Insn 104: point = 104, n_alt = 2
   Insn 103: point = 106, n_alt = 0
   Insn 102: point = 108, n_alt = 0
  BB 4
   Insn 94: point = 110, n_alt = 1
   Insn 226: point = 110, n_alt = 1
   Insn 93: point = 112, n_alt = 0
   Insn 92: point = 114, n_alt = 3
  BB 2
   Insn 84: point = 116, n_alt = 1
   Insn 224: point = 117, n_alt = 1
   Insn 83: point = 119, n_alt = 0
   Insn 82: point = 120, n_alt = 0
   Insn 223: point = 121, n_alt = 5
   Insn 81: point = 123, n_alt = 0
   Insn 222: point = 123, n_alt = -2
   Insn 77: point = 124, n_alt = 2
   Insn 76: point = 125, n_alt = 3
   Insn 75: point = 126, n_alt = -2
   Insn 73: point = 128, n_alt = 1
   Insn 71: point = 130, n_alt = 0
   Insn 72: point = 130, n_alt = 2
   Insn 221: point = 131, n_alt = -2
	Hard reg 0 is preferable by r211 with profit 1000
   Insn 70: point = 133, n_alt = 2
   Insn 220: point = 133, n_alt = -2
   Insn 69: point = 134, n_alt = 5
   Insn 68: point = 135, n_alt = 0
   Insn 67: point = 137, n_alt = 0
   Insn 66: point = 139, n_alt = 3
   Insn 219: point = 140, n_alt = -2
	Hard reg 42 is preferable by r210 with profit 1000
   Insn 65: point = 142, n_alt = 0
   Insn 218: point = 143, n_alt = -2
	Hard reg 42 is preferable by r210 with profit 1000
	Hard reg 1 is preferable by r210 with profit 1000
   Insn 63: point = 145, n_alt = 0
   Insn 64: point = 145, n_alt = 2
   Insn 62: point = 146, n_alt = 3
   Insn 61: point = 147, n_alt = 5
   Insn 60: point = 148, n_alt = 0
   Insn 59: point = 150, n_alt = 0
   Insn 58: point = 152, n_alt = 3
   Insn 217: point = 153, n_alt = -2
	Hard reg 44 is preferable by r209 with profit 1000
   Insn 57: point = 155, n_alt = 0
   Insn 216: point = 155, n_alt = -2
   Insn 53: point = 156, n_alt = 5
   Insn 52: point = 157, n_alt = 5
   Insn 51: point = 158, n_alt = -2
   Insn 49: point = 160, n_alt = 1
   Insn 47: point = 162, n_alt = 0
   Insn 48: point = 162, n_alt = 2
   Insn 215: point = 163, n_alt = -2
	Hard reg 0 is preferable by r208 with profit 1000
   Insn 46: point = 165, n_alt = 2
   Insn 214: point = 165, n_alt = -2
   Insn 45: point = 166, n_alt = 5
   Insn 44: point = 167, n_alt = 0
   Insn 43: point = 169, n_alt = 0
   Insn 42: point = 171, n_alt = 3
   Insn 213: point = 172, n_alt = -2
	Hard reg 41 is preferable by r207 with profit 1000
   Insn 41: point = 174, n_alt = 0
   Insn 212: point = 175, n_alt = -2
	Hard reg 41 is preferable by r207 with profit 1000
	Hard reg 1 is preferable by r207 with profit 1000
   Insn 39: point = 177, n_alt = 0
   Insn 40: point = 177, n_alt = 2
   Insn 38: point = 178, n_alt = 3
   Insn 37: point = 179, n_alt = 5
   Insn 36: point = 180, n_alt = 0
   Insn 35: point = 182, n_alt = 0
   Insn 34: point = 184, n_alt = 3
   Insn 211: point = 185, n_alt = -2
	Hard reg 43 is preferable by r206 with profit 1000
   Insn 33: point = 187, n_alt = 0
   Insn 210: point = 187, n_alt = -2
   Insn 29: point = 188, n_alt = 2
   Insn 28: point = 189, n_alt = 3
   Insn 27: point = 190, n_alt = -2
   Insn 25: point = 192, n_alt = 1
   Insn 23: point = 194, n_alt = 0
   Insn 24: point = 194, n_alt = 2
   Insn 209: point = 195, n_alt = -2
	Hard reg 0 is preferable by r205 with profit 1000
   Insn 22: point = 197, n_alt = 2
   Insn 208: point = 197, n_alt = -2
   Insn 21: point = 198, n_alt = 5
   Insn 20: point = 199, n_alt = 0
   Insn 19: point = 201, n_alt = 0
   Insn 18: point = 203, n_alt = 3
   Insn 207: point = 204, n_alt = -2
	Hard reg 3 is preferable by r204 with profit 1000
   Insn 17: point = 206, n_alt = 0
   Insn 206: point = 207, n_alt = -2
	Hard reg 3 is preferable by r204 with profit 1000
	Hard reg 1 is preferable by r204 with profit 1000
   Insn 15: point = 209, n_alt = 0
   Insn 16: point = 209, n_alt = 2
   Insn 14: point = 210, n_alt = 3
   Insn 13: point = 211, n_alt = 5
   Insn 12: point = 212, n_alt = 0
   Insn 11: point = 214, n_alt = 0
   Insn 10: point = 216, n_alt = 3
   Insn 6: point = 217, n_alt = 5
   Insn 5: point = 217, n_alt = 5
   Insn 4: point = 217, n_alt = 5
   Insn 3: point = 217, n_alt = 5
   Insn 2: point = 217, n_alt = 5
 r87: [213..214]
 r88: [200..201]
 r89: [189..190]
 r90: [188..217]
 r92: [181..182]
 r93: [168..169]
 r94: [157..158]
 r95: [156..217]
 r97: [149..150]
 r98: [136..137]
 r99: [125..126]
 r100: [124..217]
 r102: [105..106]
 r103: [103..104]
 r104: [98..102]
 r105: [98..99]
 r106: [95..97]
 r107: [92..94]
 r108: [89..91]
 r109: [68..69]
 r110: [66..67]
 r111: [61..65]
 r112: [61..62]
 r113: [58..60]
 r114: [55..57]
 r115: [53..54]
 r116: [45..46]
 r117: [42..44]
 r118: [37..41]
 r119: [37..38]
 r120: [34..36]
 r121: [20..33]
 r122: [29..30]
 r123: [27..28]
 r124: [22..26]
 r125: [22..23]
 r126: [17..21]
 r127: [17..19]
 r128: [84..85]
 r129: [82..83]
 r130: [77..81]
 r131: [77..78]
 r132: [73..76]
 r133: [206..210]
 r134: [0..204]
 r135: [193..195]
 r136: [191..192]
 r140: [0..185]
 r141: [174..178]
 r142: [0..172]
 r143: [161..163]
 r144: [159..160]
 r148: [0..153]
 r149: [142..146]
 r150: [0..140]
 r151: [129..131]
 r152: [127..128]
 r156: [0..121]
 r157: [116..120]
 r158: [0..117]
 r159: [0..1]
 r160: [9..110]
 r161: [9..10]
 r162: [51..52]
 r163: [215..216]
 r164: [211..212]
 r165: [208..209]
 r166: [202..203]
 r167: [198..199]
 r168: [193..194]
 r169: [183..184]
 r170: [179..180]
 r171: [176..177]
 r172: [170..171]
 r173: [166..167]
 r174: [161..162]
 r175: [151..152]
 r176: [147..148]
 r177: [144..145]
 r178: [138..139]
 r179: [134..135]
 r180: [129..130]
 r181: [2..3]
 r182: [113..114]
 r183: [11..12]
 r184: [107..108]
 r185: [100..101]
 r186: [95..96]
 r187: [92..93]
 r188: [89..90]
 r189: [70..71]
 r190: [63..64]
 r191: [58..59]
 r192: [55..56]
 r193: [49..50]
 r194: [47..48]
 r195: [39..40]
 r196: [34..35]
 r197: [31..32]
 r198: [24..25]
 r199: [17..18]
 r200: [86..87]
 r201: [79..80]
 r202: [73..75]
 r203: [73..74]
 r204: [205..207]
 r205: [196..197]
 r206: [186..187]
 r207: [173..175]
 r208: [164..165]
 r209: [154..155]
 r210: [141..143]
 r211: [132..133]
 r212: [122..123]
 r213: [118..119]
 r214: [4..5]
 r215: [111..112]
 r216: [13..14]
 r217: [42..43]
Compressing live ranges: from 218 to 172 - 78%
Ranges after the compression:
 r87: [168..169]
 r88: [158..159]
 r89: [148..149]
 r90: [148..171]
 r92: [142..143]
 r93: [132..133]
 r94: [122..123]
 r95: [122..171]
 r97: [116..117]
 r98: [106..107]
 r99: [96..97]
 r100: [96..171]
 r102: [82..83]
 r103: [80..81]
 r104: [76..79]
 r105: [76..77]
 r106: [74..75]
 r107: [72..73]
 r108: [70..71]
 r109: [54..55]
 r110: [52..53]
 r111: [48..51]
 r112: [48..49]
 r113: [46..47]
 r114: [44..45]
 r115: [42..43]
 r116: [34..35]
 r117: [32..33]
 r118: [28..31]
 r119: [28..29]
 r120: [26..27]
 r121: [14..25]
 r122: [22..23]
 r123: [20..21]
 r124: [16..19]
 r125: [16..17]
 r126: [12..15]
 r127: [12..13]
 r128: [66..67]
 r129: [64..65]
 r130: [60..63]
 r131: [60..61]
 r132: [58..59]
 r133: [162..165]
 r134: [0..161]
 r135: [152..153]
 r136: [150..151]
 r140: [0..145]
 r141: [136..139]
 r142: [0..135]
 r143: [126..127]
 r144: [124..125]
 r148: [0..119]
 r149: [110..113]
 r150: [0..109]
 r151: [100..101]
 r152: [98..99]
 r156: [0..93]
 r157: [90..93]
 r158: [0..91]
 r159: [0..1]
 r160: [6..85]
 r161: [6..7]
 r162: [40..41]
 r163: [170..171]
 r164: [166..167]
 r165: [164..165]
 r166: [160..161]
 r167: [156..157]
 r168: [152..153]
 r169: [144..145]
 r170: [140..141]
 r171: [138..139]
 r172: [134..135]
 r173: [130..131]
 r174: [126..127]
 r175: [118..119]
 r176: [114..115]
 r177: [112..113]
 r178: [108..109]
 r179: [104..105]
 r180: [100..101]
 r181: [2..3]
 r182: [88..89]
 r183: [8..9]
 r184: [84..85]
 r185: [78..79]
 r186: [74..75]
 r187: [72..73]
 r188: [70..71]
 r189: [56..57]
 r190: [50..51]
 r191: [46..47]
 r192: [44..45]
 r193: [38..39]
 r194: [36..37]
 r195: [30..31]
 r196: [26..27]
 r197: [24..25]
 r198: [18..19]
 r199: [12..13]
 r200: [68..69]
 r201: [62..63]
 r202: [58..59]
 r203: [58..59]
 r204: [162..163]
 r205: [154..155]
 r206: [146..147]
 r207: [136..137]
 r208: [128..129]
 r209: [120..121]
 r210: [110..111]
 r211: [102..103]
 r212: [94..95]
 r213: [92..93]
 r214: [4..5]
 r215: [86..87]
 r216: [10..11]
 r217: [32..33]

********** Assignment #1: **********

	 Assigning to 204 (cl=GENERAL_REGS, orig=165, freq=3000, tfirst=204, tfreq=3000)...
	   Assign 3 to reload r204 (freq=3000)
	 Assigning to 205 (cl=GENERAL_REGS, orig=135, freq=3000, tfirst=205, tfreq=3000)...
	   Assign 0 to reload r205 (freq=3000)
	 Assigning to 206 (cl=GENERAL_REGS, orig=140, freq=3000, tfirst=206, tfreq=3000)...
	   Assign 43 to reload r206 (freq=3000)
	 Assigning to 207 (cl=GENERAL_REGS, orig=171, freq=3000, tfirst=207, tfreq=3000)...
	   Assign 1 to reload r207 (freq=3000)
	 Assigning to 208 (cl=GENERAL_REGS, orig=143, freq=3000, tfirst=208, tfreq=3000)...
	   Assign 0 to reload r208 (freq=3000)
	 Assigning to 209 (cl=GENERAL_REGS, orig=148, freq=3000, tfirst=209, tfreq=3000)...
	   Assign 44 to reload r209 (freq=3000)
	 Assigning to 210 (cl=GENERAL_REGS, orig=177, freq=3000, tfirst=210, tfreq=3000)...
	   Assign 1 to reload r210 (freq=3000)
	 Assigning to 211 (cl=GENERAL_REGS, orig=151, freq=3000, tfirst=211, tfreq=3000)...
	   Assign 0 to reload r211 (freq=3000)
	 Assigning to 212 (cl=GENERAL_REGS, orig=156, freq=3000, tfirst=212, tfreq=3000)...
	   Assign 0 to reload r212 (freq=3000)
	 Assigning to 213 (cl=GENERAL_REGS, orig=158, freq=2000, tfirst=213, tfreq=2000)...
	   Assign 2 to reload r213 (freq=2000)
	 Assigning to 214 (cl=GENERAL_REGS, orig=158, freq=2000, tfirst=214, tfreq=2000)...
	   Assign 0 to reload r214 (freq=2000)
	 Assigning to 215 (cl=GENERAL_REGS, orig=160, freq=2000, tfirst=215, tfreq=2000)...
	   Assign 0 to reload r215 (freq=2000)
	 Assigning to 216 (cl=GENERAL_REGS, orig=160, freq=2000, tfirst=216, tfreq=2000)...
	   Assign 0 to reload r216 (freq=2000)
	 Assigning to 217 (cl=GENERAL_REGS, orig=156, freq=2000, tfirst=217, tfreq=2000)...
	   Assign 4 to reload r217 (freq=2000)
  Reassigning non-reload pseudos

********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 6
	   Spilling non-eliminable hard regs: 6
  Slot 0 regnos (width = 0):	 95	 156
  Slot 1 regnos (width = 0):	 158
  Slot 2 regnos (width = 0):	 160
Changing spilled pseudos to memory in insn #52
Changing spilled pseudos to memory in insn #53
Changing spilled pseudos to memory in insn #223
Changing spilled pseudos to memory in insn #224
Changing spilled pseudos to memory in insn #225
Changing spilled pseudos to memory in insn #226
Changing spilled pseudos to memory in insn #227
Changing spilled pseudos to memory in insn #228
	   Spilling non-eliminable hard regs: 6

********** Local #3: **********

	   Spilling non-eliminable hard regs: 6
Reusing alternative 3 for insn #228
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 228:  (0) r  (1) rem {*movdi_internal}
Reusing alternative 0 for insn #227
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 227:  (0) =r  (1) g {*movsi_internal}
Reusing alternative 1 for insn #226
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 226:  (0) m  (1) re {*movsi_internal}
Reusing alternative 0 for insn #225
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 225:  (0) =r  (1) g {*movsi_internal}
Reusing alternative 1 for insn #224
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 224:  (0) m  (1) re {*movsi_internal}
Reusing alternative 5 for insn #223
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 223:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 53:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 52:  (0) m  (1) re {*movdi_internal}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #2: **********

EBB 2
EBB 3 4
EBB 5 6 7
EBB 8
EBB 9
EBB 13
EBB 10
EBB 12
EBB 11

********** Pseudo live ranges #2: **********

  BB 11
   Insn 191: point = 0, n_alt = -1
  BB 12
   Insn 201: point = 0, n_alt = -1
  BB 3
   Insn 90: point = 0, n_alt = -1
   Insn 89: point = 0, n_alt = 0
   Insn 88: point = 1, n_alt = 0
   Insn 87: point = 3, n_alt = 0
   Insn 86: point = 4, n_alt = 0
   Insn 225: point = 5, n_alt = 0
  BB 10
   Insn 197: point = 7, n_alt = -1
   Insn 178: point = 7, n_alt = 1
  BB 13
   Insn 204: point = 8, n_alt = -1
  BB 5
   Insn 100: point = 9, n_alt = -1
   Insn 99: point = 9, n_alt = 0
   Insn 98: point = 10, n_alt = 0
   Insn 97: point = 12, n_alt = 0
   Insn 96: point = 13, n_alt = 0
   Insn 227: point = 14, n_alt = 0
  BB 9
   Insn 195: point = 16, n_alt = -1
   Insn 172: point = 16, n_alt = 1
  BB 7
   Insn 193: point = 17, n_alt = -1
   Insn 155: point = 17, n_alt = 8
   Insn 154: point = 18, n_alt = 3
   Insn 153: point = 19, n_alt = 1
   Insn 152: point = 21, n_alt = 0
   Insn 151: point = 23, n_alt = 0
   Insn 150: point = 25, n_alt = 0
   Insn 149: point = 26, n_alt = 3
   Insn 148: point = 28, n_alt = 2
   Insn 147: point = 30, n_alt = 0
   Insn 146: point = 32, n_alt = 0
   Insn 145: point = 33, n_alt = 7
   Insn 144: point = 35, n_alt = 3
   Insn 143: point = 36, n_alt = 0
   Insn 142: point = 38, n_alt = 0
   Insn 141: point = 40, n_alt = 0
   Insn 140: point = 41, n_alt = 3
   Insn 228: point = 43, n_alt = 3
   Insn 139: point = 44, n_alt = 2
   Insn 138: point = 46, n_alt = 0
   Insn 137: point = 48, n_alt = 0
   Insn 136: point = 49, n_alt = 4
   Insn 135: point = 50, n_alt = 9
   Insn 134: point = 51, n_alt = 0
   Insn 133: point = 51, n_alt = -2
   Insn 132: point = 52, n_alt = 7
   Insn 131: point = 52, n_alt = -2
   Insn 130: point = 54, n_alt = 2
   Insn 129: point = 56, n_alt = 7
   Insn 128: point = 57, n_alt = 7
   Insn 127: point = 59, n_alt = 3
   Insn 126: point = 60, n_alt = 0
   Insn 125: point = 62, n_alt = 0
   Insn 124: point = 64, n_alt = 0
   Insn 123: point = 65, n_alt = 3
   Insn 122: point = 67, n_alt = 2
   Insn 121: point = 69, n_alt = 0
   Insn 120: point = 71, n_alt = 0
  BB 8
   Insn 169: point = 73, n_alt = 8
   Insn 168: point = 74, n_alt = 7
   Insn 167: point = 75, n_alt = 3
   Insn 166: point = 76, n_alt = 0
   Insn 165: point = 78, n_alt = 0
   Insn 164: point = 80, n_alt = 0
   Insn 163: point = 81, n_alt = 3
   Insn 162: point = 83, n_alt = 2
   Insn 161: point = 85, n_alt = 0
   Insn 160: point = 87, n_alt = 0
  BB 6
   Insn 115: point = 89, n_alt = -1
   Insn 114: point = 89, n_alt = 1
   Insn 113: point = 90, n_alt = 7
   Insn 112: point = 91, n_alt = 0
   Insn 111: point = 93, n_alt = 2
   Insn 110: point = 94, n_alt = 7
   Insn 109: point = 96, n_alt = 3
   Insn 108: point = 97, n_alt = 0
   Insn 107: point = 99, n_alt = 0
   Insn 106: point = 101, n_alt = 0
   Insn 105: point = 102, n_alt = 3
   Insn 104: point = 104, n_alt = 2
   Insn 103: point = 106, n_alt = 0
   Insn 102: point = 108, n_alt = 0
  BB 4
   Insn 94: point = 110, n_alt = 1
   Insn 226: point = 110, n_alt = 1
   Insn 93: point = 111, n_alt = 0
   Insn 92: point = 113, n_alt = 3
  BB 2
   Insn 84: point = 115, n_alt = 1
   Insn 224: point = 116, n_alt = 1
   Insn 83: point = 117, n_alt = 0
   Insn 82: point = 118, n_alt = 0
   Insn 223: point = 119, n_alt = 5
   Insn 81: point = 120, n_alt = 0
   Insn 222: point = 120, n_alt = -2
   Insn 77: point = 121, n_alt = 2
   Insn 76: point = 122, n_alt = 3
   Insn 75: point = 123, n_alt = -2
   Insn 73: point = 125, n_alt = 1
   Insn 71: point = 127, n_alt = 0
   Insn 72: point = 127, n_alt = 2
   Insn 221: point = 128, n_alt = -2
   Insn 70: point = 130, n_alt = 2
   Insn 220: point = 130, n_alt = -2
   Insn 69: point = 131, n_alt = 5
   Insn 68: point = 132, n_alt = 0
   Insn 67: point = 134, n_alt = 0
   Insn 66: point = 136, n_alt = 3
   Insn 219: point = 137, n_alt = -2
   Insn 65: point = 139, n_alt = 0
   Insn 218: point = 140, n_alt = -2
   Insn 63: point = 142, n_alt = 0
   Insn 64: point = 142, n_alt = 2
   Insn 62: point = 143, n_alt = 3
   Insn 61: point = 144, n_alt = 5
   Insn 60: point = 145, n_alt = 0
   Insn 59: point = 147, n_alt = 0
   Insn 58: point = 149, n_alt = 3
   Insn 217: point = 150, n_alt = -2
   Insn 57: point = 152, n_alt = 0
   Insn 216: point = 152, n_alt = -2
   Insn 53: point = 153, n_alt = 5
   Insn 52: point = 153, n_alt = 5
   Insn 51: point = 154, n_alt = -2
   Insn 49: point = 156, n_alt = 1
   Insn 47: point = 158, n_alt = 0
   Insn 48: point = 158, n_alt = 2
   Insn 215: point = 159, n_alt = -2
   Insn 46: point = 161, n_alt = 2
   Insn 214: point = 161, n_alt = -2
   Insn 45: point = 162, n_alt = 5
   Insn 44: point = 163, n_alt = 0
   Insn 43: point = 165, n_alt = 0
   Insn 42: point = 167, n_alt = 3
   Insn 213: point = 168, n_alt = -2
   Insn 41: point = 170, n_alt = 0
   Insn 212: point = 171, n_alt = -2
   Insn 39: point = 173, n_alt = 0
   Insn 40: point = 173, n_alt = 2
   Insn 38: point = 174, n_alt = 3
   Insn 37: point = 175, n_alt = 5
   Insn 36: point = 176, n_alt = 0
   Insn 35: point = 178, n_alt = 0
   Insn 34: point = 180, n_alt = 3
   Insn 211: point = 181, n_alt = -2
   Insn 33: point = 183, n_alt = 0
   Insn 210: point = 183, n_alt = -2
   Insn 29: point = 184, n_alt = 2
   Insn 28: point = 185, n_alt = 3
   Insn 27: point = 186, n_alt = -2
   Insn 25: point = 188, n_alt = 1
   Insn 23: point = 190, n_alt = 0
   Insn 24: point = 190, n_alt = 2
   Insn 209: point = 191, n_alt = -2
   Insn 22: point = 193, n_alt = 2
   Insn 208: point = 193, n_alt = -2
   Insn 21: point = 194, n_alt = 5
   Insn 20: point = 195, n_alt = 0
   Insn 19: point = 197, n_alt = 0
   Insn 18: point = 199, n_alt = 3
   Insn 207: point = 200, n_alt = -2
   Insn 17: point = 202, n_alt = 0
   Insn 206: point = 203, n_alt = -2
   Insn 15: point = 205, n_alt = 0
   Insn 16: point = 205, n_alt = 2
   Insn 14: point = 206, n_alt = 3
   Insn 13: point = 207, n_alt = 5
   Insn 12: point = 208, n_alt = 0
   Insn 11: point = 210, n_alt = 0
   Insn 10: point = 212, n_alt = 3
   Insn 6: point = 213, n_alt = 5
   Insn 5: point = 213, n_alt = 5
   Insn 4: point = 213, n_alt = 5
   Insn 3: point = 213, n_alt = 5
   Insn 2: point = 213, n_alt = 5
 r87: [209..210]
 r88: [196..197]
 r89: [185..186]
 r90: [184..213]
 r92: [177..178]
 r93: [164..165]
 r94: [153..154]
 r97: [146..147]
 r98: [133..134]
 r99: [122..123]
 r100: [121..213]
 r102: [105..106]
 r103: [103..104]
 r104: [98..102]
 r105: [98..99]
 r106: [95..97]
 r107: [92..94]
 r108: [89..91]
 r109: [68..69]
 r110: [66..67]
 r111: [61..65]
 r112: [61..62]
 r113: [58..60]
 r114: [55..57]
 r115: [53..54]
 r116: [45..46]
 r117: [42..44]
 r118: [37..41]
 r119: [37..38]
 r120: [34..36]
 r121: [20..33]
 r122: [29..30]
 r123: [27..28]
 r124: [22..26]
 r125: [22..23]
 r126: [17..21]
 r127: [17..19]
 r128: [84..85]
 r129: [82..83]
 r130: [77..81]
 r131: [77..78]
 r132: [73..76]
 r133: [202..206]
 r134: [0..200]
 r135: [189..191]
 r136: [187..188]
 r140: [0..181]
 r141: [170..174]
 r142: [0..168]
 r143: [157..159]
 r144: [155..156]
 r148: [0..150]
 r149: [139..143]
 r150: [0..137]
 r151: [126..128]
 r152: [124..125]
 r157: [115..118]
 r159: [0..1]
 r161: [9..10]
 r162: [51..52]
 r163: [211..212]
 r164: [207..208]
 r165: [204..205]
 r166: [198..199]
 r167: [194..195]
 r168: [189..190]
 r169: [179..180]
 r170: [175..176]
 r171: [172..173]
 r172: [166..167]
 r173: [162..163]
 r174: [157..158]
 r175: [148..149]
 r176: [144..145]
 r177: [141..142]
 r178: [135..136]
 r179: [131..132]
 r180: [126..127]
 r181: [2..3]
 r182: [112..113]
 r183: [11..12]
 r184: [107..108]
 r185: [100..101]
 r186: [95..96]
 r187: [92..93]
 r188: [89..90]
 r189: [70..71]
 r190: [63..64]
 r191: [58..59]
 r192: [55..56]
 r193: [49..50]
 r194: [47..48]
 r195: [39..40]
 r196: [34..35]
 r197: [31..32]
 r198: [24..25]
 r199: [17..18]
 r200: [86..87]
 r201: [79..80]
 r202: [73..75]
 r203: [73..74]
 r204: [201..203]
 r205: [192..193]
 r206: [182..183]
 r207: [169..171]
 r208: [160..161]
 r209: [151..152]
 r210: [138..140]
 r211: [129..130]
 r212: [119..120]
 r213: [116..117]
 r214: [4..5]
 r215: [110..111]
 r216: [13..14]
 r217: [42..43]
Compressing live ranges: from 214 to 170 - 79%
Ranges after the compression:
 r87: [166..167]
 r88: [156..157]
 r89: [146..147]
 r90: [146..169]
 r92: [140..141]
 r93: [130..131]
 r94: [120..121]
 r97: [114..115]
 r98: [104..105]
 r99: [94..95]
 r100: [94..169]
 r102: [82..83]
 r103: [80..81]
 r104: [76..79]
 r105: [76..77]
 r106: [74..75]
 r107: [72..73]
 r108: [70..71]
 r109: [54..55]
 r110: [52..53]
 r111: [48..51]
 r112: [48..49]
 r113: [46..47]
 r114: [44..45]
 r115: [42..43]
 r116: [34..35]
 r117: [32..33]
 r118: [28..31]
 r119: [28..29]
 r120: [26..27]
 r121: [14..25]
 r122: [22..23]
 r123: [20..21]
 r124: [16..19]
 r125: [16..17]
 r126: [12..15]
 r127: [12..13]
 r128: [66..67]
 r129: [64..65]
 r130: [60..63]
 r131: [60..61]
 r132: [58..59]
 r133: [160..163]
 r134: [0..159]
 r135: [150..151]
 r136: [148..149]
 r140: [0..143]
 r141: [134..137]
 r142: [0..133]
 r143: [124..125]
 r144: [122..123]
 r148: [0..117]
 r149: [108..111]
 r150: [0..107]
 r151: [98..99]
 r152: [96..97]
 r157: [90..91]
 r159: [0..1]
 r161: [6..7]
 r162: [40..41]
 r163: [168..169]
 r164: [164..165]
 r165: [162..163]
 r166: [158..159]
 r167: [154..155]
 r168: [150..151]
 r169: [142..143]
 r170: [138..139]
 r171: [136..137]
 r172: [132..133]
 r173: [128..129]
 r174: [124..125]
 r175: [116..117]
 r176: [112..113]
 r177: [110..111]
 r178: [106..107]
 r179: [102..103]
 r180: [98..99]
 r181: [2..3]
 r182: [88..89]
 r183: [8..9]
 r184: [84..85]
 r185: [78..79]
 r186: [74..75]
 r187: [72..73]
 r188: [70..71]
 r189: [56..57]
 r190: [50..51]
 r191: [46..47]
 r192: [44..45]
 r193: [38..39]
 r194: [36..37]
 r195: [30..31]
 r196: [26..27]
 r197: [24..25]
 r198: [18..19]
 r199: [12..13]
 r200: [68..69]
 r201: [62..63]
 r202: [58..59]
 r203: [58..59]
 r204: [160..161]
 r205: [152..153]
 r206: [144..145]
 r207: [134..135]
 r208: [126..127]
 r209: [118..119]
 r210: [108..109]
 r211: [100..101]
 r212: [92..93]
 r213: [90..91]
 r214: [4..5]
 r215: [86..87]
 r216: [10..11]
 r217: [32..33]

********** Assignment #2: **********


********** Undoing inheritance #2: **********


********** Local #4: **********

	   Spilling non-eliminable hard regs: 6
	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=192, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 20 to 7 (offset=128, prev_offset=0)
Can eliminate 20 to 6 (offset=-48, prev_offset=-48)
changing reg in insn 11
changing reg in insn 12
changing reg in insn 19
changing reg in insn 20
changing reg in insn 27
changing reg in insn 28
changing reg in insn 29
changing reg in insn 28
changing reg in insn 35
changing reg in insn 36
changing reg in insn 43
changing reg in insn 44
changing reg in insn 51
changing reg in insn 52
changing reg in insn 59
changing reg in insn 60
changing reg in insn 67
changing reg in insn 68
changing reg in insn 75
changing reg in insn 76
changing reg in insn 77
changing reg in insn 76
changing reg in insn 103
changing reg in insn 104
changing reg in insn 105
changing reg in insn 105
changing reg in insn 108
changing reg in insn 107
changing reg in insn 108
changing reg in insn 108
changing reg in insn 110
changing reg in insn 110
changing reg in insn 112
changing reg in insn 112
changing reg in insn 112
changing reg in insn 114
changing reg in insn 121
changing reg in insn 122
changing reg in insn 123
changing reg in insn 123
changing reg in insn 126
changing reg in insn 125
changing reg in insn 126
changing reg in insn 126
changing reg in insn 128
changing reg in insn 128
changing reg in insn 130
changing reg in insn 130
changing reg in insn 131
changing reg in insn 138
changing reg in insn 139
changing reg in insn 140
changing reg in insn 140
changing reg in insn 143
changing reg in insn 142
changing reg in insn 143
changing reg in insn 143
changing reg in insn 145
changing reg in insn 145
changing reg in insn 153
changing reg in insn 147
changing reg in insn 148
changing reg in insn 149
changing reg in insn 149
changing reg in insn 152
changing reg in insn 151
changing reg in insn 152
changing reg in insn 152
changing reg in insn 155
changing reg in insn 153
changing reg in insn 155
changing reg in insn 161
changing reg in insn 162
changing reg in insn 163
changing reg in insn 163
changing reg in insn 166
changing reg in insn 165
changing reg in insn 166
changing reg in insn 166
changing reg in insn 169
changing reg in insn 14
changing reg in insn 17
changing reg in insn 15
changing reg in insn 25
changing reg in insn 23
changing reg in insn 25
changing reg in insn 27
changing reg in insn 123
changing reg in insn 105
changing reg in insn 38
changing reg in insn 41
changing reg in insn 39
changing reg in insn 49
changing reg in insn 47
changing reg in insn 49
changing reg in insn 51
changing reg in insn 163
changing reg in insn 149
changing reg in insn 62
changing reg in insn 65
changing reg in insn 63
changing reg in insn 73
changing reg in insn 71
changing reg in insn 73
changing reg in insn 75
changing reg in insn 82
changing reg in insn 84
changing reg in insn 88
changing reg in insn 89
changing reg in insn 98
changing reg in insn 99
changing reg in insn 131
changing reg in insn 133
changing reg in insn 10
changing reg in insn 11
changing reg in insn 12
changing reg in insn 13
changing reg in insn 16
changing reg in insn 18
changing reg in insn 19
changing reg in insn 20
changing reg in insn 21
changing reg in insn 24
changing reg in insn 25
changing reg in insn 34
changing reg in insn 35
changing reg in insn 36
changing reg in insn 37
changing reg in insn 40
changing reg in insn 42
changing reg in insn 43
changing reg in insn 44
changing reg in insn 45
changing reg in insn 48
changing reg in insn 49
changing reg in insn 58
changing reg in insn 59
changing reg in insn 60
changing reg in insn 61
changing reg in insn 64
changing reg in insn 66
changing reg in insn 67
changing reg in insn 68
changing reg in insn 69
changing reg in insn 72
changing reg in insn 73
changing reg in insn 87
changing reg in insn 88
changing reg in insn 92
changing reg in insn 93
changing reg in insn 97
changing reg in insn 98
changing reg in insn 102
changing reg in insn 103
changing reg in insn 106
changing reg in insn 107
changing reg in insn 109
changing reg in insn 110
changing reg in insn 111
changing reg in insn 112
changing reg in insn 113
changing reg in insn 114
changing reg in insn 120
changing reg in insn 121
changing reg in insn 124
changing reg in insn 125
changing reg in insn 127
changing reg in insn 128
changing reg in insn 129
changing reg in insn 130
changing reg in insn 135
changing reg in insn 136
changing reg in insn 137
changing reg in insn 138
changing reg in insn 141
changing reg in insn 142
changing reg in insn 144
changing reg in insn 145
changing reg in insn 146
changing reg in insn 147
changing reg in insn 150
changing reg in insn 151
changing reg in insn 154
changing reg in insn 155
changing reg in insn 160
changing reg in insn 161
changing reg in insn 164
changing reg in insn 165
changing reg in insn 167
changing reg in insn 169
changing reg in insn 168
changing reg in insn 169
deleting insn with uid = 207.
deleting insn with uid = 209.
deleting insn with uid = 27.
deleting insn with uid = 211.
deleting insn with uid = 212.
deleting insn with uid = 215.
deleting insn with uid = 51.
deleting insn with uid = 217.
deleting insn with uid = 218.
deleting insn with uid = 221.
deleting insn with uid = 75.
deleting insn with uid = 131.
deleting insn with uid = 133.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 134.


calpot2

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 21 [xmm0] 22 [xmm1] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;;  ref usage 	r0={74d,78u} r1={20d,19u} r2={3d,2u} r3={2d,5u} r4={3d,2u} r5={2d,1u} r6={1d,70u} r7={1d,14u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r17={33d,11u} r18={1d} r19={1d} r20={1d,1u} r21={9d,8u,1e} r22={6d,4u} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d,1u} r38={3d} r39={2d} r40={2d} r41={2d,4u} r42={1d,3u} r43={2d,3u} r44={2d,3u} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} 
;;    total ref usage 467{237d,229u,1e} in 159{158 regular + 1 call} insns.
(note 1 0 8 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 90 100
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 90 95 100
;; lr  def 	 17 [flags] 87 88 89 92 93 94 97 98 99 133 134 135 136 140 141 142 143 144 148 149 150 151 152 156 157 158 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [4 p1d+0 S8 A64])
        (reg:DI 5 di [ p1d ])) "CALPOT2.f":1 85 {*movdi_internal}
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -128 [0xffffffffffffff80])) [4 t1d+0 S8 A64])
        (reg:DI 4 si [ t1d ])) "CALPOT2.f":1 85 {*movdi_internal}
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -136 [0xffffffffffffff78])) [4 theta+0 S8 A64])
        (reg:DI 1 dx [ theta ])) "CALPOT2.f":1 85 {*movdi_internal}
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -144 [0xffffffffffffff70])) [5 im+0 S8 A64])
        (reg:DI 2 cx [ im ])) "CALPOT2.f":1 85 {*movdi_internal}
     (nil))
(insn 6 5 7 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -152 [0xffffffffffffff68])) [5 jm+0 S8 A64])
        (reg:DI 37 r8 [ jm ])) "CALPOT2.f":1 85 {*movdi_internal}
     (nil))
(note 7 6 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 7 11 2 (set (reg/f:DI 0 ax [163])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -144 [0xffffffffffffff70])) [5 im+0 S8 A64])) "CALPOT2.f":1 85 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:SI 0 ax [orig:87 _1 ] [87])
        (mem:SI (reg/f:DI 0 ax [163]) [1 *im_53(D)+0 S4 A32])) "CALPOT2.f":1 86 {*movsi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:DI 0 ax [164])
        (sign_extend:DI (reg:SI 0 ax [orig:87 _1 ] [87]))) "CALPOT2.f":1 149 {*extendsidi2_rex64}
     (nil))
(insn 13 12 14 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [2 ubound.0+0 S8 A64])
        (reg:DI 0 ax [164])) "CALPOT2.f":1 85 {*movdi_internal}
     (nil))
(insn 14 13 16 2 (set (reg:DI 0 ax [orig:133 stride.2_55 ] [133])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [2 ubound.0+0 S8 A64])) "CALPOT2.f":1 85 {*movdi_internal}
     (nil))
(insn 16 14 15 2 (set (reg:DI 1 dx [165])
        (const_int 0 [0])) "CALPOT2.f":1 85 {*movdi_internal}
     (nil))
(insn 15 16 206 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 0 ax [orig:133 stride.2_55 ] [133])
            (const_int 0 [0]))) "CALPOT2.f":1 8 {*cmpdi_ccno_1}
     (nil))
(insn 206 15 17 2 (set (reg:DI 3 bx [165])
        (reg:DI 1 dx [165])) "CALPOT2.f":1 85 {*movdi_internal}
     (nil))
(insn 17 206 18 2 (set (reg:DI 3 bx [165])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 0 ax [orig:133 stride.2_55 ] [133])
            (reg:DI 3 bx [165]))) "CALPOT2.f":1 1003 {*movdicc_noc}
     (nil))
(insn 18 17 19 2 (set (reg/f:DI 0 ax [166])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -152 [0xffffffffffffff68])) [5 jm+0 S8 A64])) "CALPOT2.f":1 85 {*movdi_internal}
     (nil))
(insn 19 18 20 2 (set (reg:SI 0 ax [orig:88 _2 ] [88])
        (mem:SI (reg/f:DI 0 ax [166]) [1 *jm_57(D)+0 S4 A32])) "CALPOT2.f":1 86 {*movsi_internal}
     (nil))
(insn 20 19 21 2 (set (reg:DI 0 ax [167])
        (sign_extend:DI (reg:SI 0 ax [orig:88 _2 ] [88]))) "CALPOT2.f":1 149 {*extendsidi2_rex64}
     (nil))
(insn 21 20 208 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [2 ubound.1+0 S8 A64])
        (reg:DI 0 ax [167])) "CALPOT2.f":1 85 {*movdi_internal}
     (nil))
(insn 208 21 22 2 (set (reg:DI 0 ax [orig:135 size.4_59 ] [135])
        (reg:DI 3 bx [orig:134 stride.2_56 ] [134])) "CALPOT2.f":1 85 {*movdi_internal}
     (nil))
(insn 22 208 24 2 (parallel [
            (set (reg:DI 0 ax [orig:135 size.4_59 ] [135])
                (mult:DI (reg:DI 0 ax [orig:135 size.4_59 ] [135])
                    (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                            (const_int -72 [0xffffffffffffffb8])) [2 ubound.1+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) "CALPOT2.f":1 349 {*muldi3_1}
     (nil))
(insn 24 22 23 2 (set (reg:DI 1 dx [168])
        (const_int 0 [0])) "CALPOT2.f":1 85 {*movdi_internal}
     (nil))
(insn 23 24 25 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 0 ax [orig:135 size.4_59 ] [135])
            (const_int 0 [0]))) "CALPOT2.f":1 8 {*cmpdi_ccno_1}
     (nil))
(insn 25 23 28 2 (set (reg:DI 0 ax [orig:136 size.4_60 ] [136])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 0 ax [orig:135 size.4_59 ] [135])
            (reg:DI 1 dx [168]))) "CALPOT2.f":1 1003 {*movdicc_noc}
     (nil))
(insn 28 25 29 2 (set (reg:DI 40 r11 [orig:90 _4 ] [90])
        (reg:DI 0 ax [orig:89 size.15_3 ] [89])) "CALPOT2.f":1 85 {*movdi_internal}
     (nil))
(insn 29 28 210 2 (set (reg:DI 41 r12 [ _4+8 ])
        (const_int 0 [0])) "CALPOT2.f":1 85 {*movdi_internal}
     (nil))
(insn 210 29 33 2 (set (reg:DI 43 r14 [orig:140 offset.3_64 ] [140])
        (reg:DI 3 bx [orig:134 stride.2_56 ] [134])) "CALPOT2.f":1 85 {*movdi_internal}
     (nil))
(insn 33 210 34 2 (set (reg:DI 43 r14 [orig:140 offset.3_64 ] [140])
        (not:DI (reg:DI 43 r14 [orig:140 offset.3_64 ] [140]))) "CALPOT2.f":1 532 {*one_cmpldi2_1}
     (nil))
(insn 34 33 35 2 (set (reg/f:DI 0 ax [169])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -144 [0xffffffffffffff70])) [5 im+0 S8 A64])) "CALPOT2.f":1 85 {*movdi_internal}
     (nil))
(insn 35 34 36 2 (set (reg:SI 0 ax [orig:92 _6 ] [92])
        (mem:SI (reg/f:DI 0 ax [169]) [1 *im_53(D)+0 S4 A32])) "CALPOT2.f":1 86 {*movsi_internal}
     (nil))
(insn 36 35 37 2 (set (reg:DI 0 ax [170])
        (sign_extend:DI (reg:SI 0 ax [orig:92 _6 ] [92]))) "CALPOT2.f":1 149 {*extendsidi2_rex64}
     (nil))
(insn 37 36 38 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -80 [0xffffffffffffffb0])) [2 ubound.10+0 S8 A64])
        (reg:DI 0 ax [170])) "CALPOT2.f":1 85 {*movdi_internal}
     (nil))
(insn 38 37 40 2 (set (reg:DI 0 ax [orig:141 stride.12_66 ] [141])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -80 [0xffffffffffffffb0])) [2 ubound.10+0 S8 A64])) "CALPOT2.f":1 85 {*movdi_internal}
     (nil))
(insn 40 38 39 2 (set (reg:DI 1 dx [171])
        (const_int 0 [0])) "CALPOT2.f":1 85 {*movdi_internal}
     (nil))
(insn 39 40 41 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 0 ax [orig:141 stride.12_66 ] [141])
            (const_int 0 [0]))) "CALPOT2.f":1 8 {*cmpdi_ccno_1}
     (nil))
(insn 41 39 213 2 (set (reg:DI 1 dx [171])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 0 ax [orig:141 stride.12_66 ] [141])
            (reg:DI 1 dx [171]))) "CALPOT2.f":1 1003 {*movdicc_noc}
     (nil))
(insn 213 41 42 2 (set (reg:DI 41 r12 [orig:142 stride.12_67 ] [142])
        (reg:DI 1 dx [171])) "CALPOT2.f":1 85 {*movdi_internal}
     (nil))
(insn 42 213 43 2 (set (reg/f:DI 0 ax [172])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -152 [0xffffffffffffff68])) [5 jm+0 S8 A64])) "CALPOT2.f":1 85 {*movdi_internal}
     (nil))
(insn 43 42 44 2 (set (reg:SI 0 ax [orig:93 _7 ] [93])
        (mem:SI (reg/f:DI 0 ax [172]) [1 *jm_57(D)+0 S4 A32])) "CALPOT2.f":1 86 {*movsi_internal}
     (nil))
(insn 44 43 45 2 (set (reg:DI 0 ax [173])
        (sign_extend:DI (reg:SI 0 ax [orig:93 _7 ] [93]))) "CALPOT2.f":1 149 {*extendsidi2_rex64}
     (nil))
(insn 45 44 214 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [2 ubound.11+0 S8 A64])
        (reg:DI 0 ax [173])) "CALPOT2.f":1 85 {*movdi_internal}
     (nil))
(insn 214 45 46 2 (set (reg:DI 0 ax [orig:143 size.14_69 ] [143])
        (reg:DI 41 r12 [orig:142 stride.12_67 ] [142])) "CALPOT2.f":1 85 {*movdi_internal}
     (nil))
(insn 46 214 48 2 (parallel [
            (set (reg:DI 0 ax [orig:143 size.14_69 ] [143])
                (mult:DI (reg:DI 0 ax [orig:143 size.14_69 ] [143])
                    (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                            (const_int -88 [0xffffffffffffffa8])) [2 ubound.11+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) "CALPOT2.f":1 349 {*muldi3_1}
     (nil))
(insn 48 46 47 2 (set (reg:DI 1 dx [174])
        (const_int 0 [0])) "CALPOT2.f":1 85 {*movdi_internal}
     (nil))
(insn 47 48 49 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 0 ax [orig:143 size.14_69 ] [143])
            (const_int 0 [0]))) "CALPOT2.f":1 8 {*cmpdi_ccno_1}
     (nil))
(insn 49 47 52 2 (set (reg:DI 0 ax [orig:144 size.14_70 ] [144])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 0 ax [orig:143 size.14_69 ] [143])
            (reg:DI 1 dx [174]))) "CALPOT2.f":1 1003 {*movdicc_noc}
     (nil))
(insn 52 49 53 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -176 [0xffffffffffffff50])) [7 %sfp+-128 S8 A128])
        (reg:DI 0 ax [orig:94 size.17_8 ] [94])) "CALPOT2.f":1 85 {*movdi_internal}
     (nil))
(insn 53 52 216 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [7 %sfp+-120 S8 A64])
        (const_int 0 [0])) "CALPOT2.f":1 85 {*movdi_internal}
     (nil))
(insn 216 53 57 2 (set (reg:DI 44 r15 [orig:148 offset.13_74 ] [148])
        (reg:DI 41 r12 [orig:142 stride.12_67 ] [142])) "CALPOT2.f":1 85 {*movdi_internal}
     (nil))
(insn 57 216 58 2 (set (reg:DI 44 r15 [orig:148 offset.13_74 ] [148])
        (not:DI (reg:DI 44 r15 [orig:148 offset.13_74 ] [148]))) "CALPOT2.f":1 532 {*one_cmpldi2_1}
     (nil))
(insn 58 57 59 2 (set (reg/f:DI 0 ax [175])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -144 [0xffffffffffffff70])) [5 im+0 S8 A64])) "CALPOT2.f":1 85 {*movdi_internal}
     (nil))
(insn 59 58 60 2 (set (reg:SI 0 ax [orig:97 _11 ] [97])
        (mem:SI (reg/f:DI 0 ax [175]) [1 *im_53(D)+0 S4 A32])) "CALPOT2.f":1 86 {*movsi_internal}
     (nil))
(insn 60 59 61 2 (set (reg:DI 0 ax [176])
        (sign_extend:DI (reg:SI 0 ax [orig:97 _11 ] [97]))) "CALPOT2.f":1 149 {*extendsidi2_rex64}
     (nil))
(insn 61 60 62 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [2 ubound.5+0 S8 A64])
        (reg:DI 0 ax [176])) "CALPOT2.f":1 85 {*movdi_internal}
     (nil))
(insn 62 61 64 2 (set (reg:DI 0 ax [orig:149 stride.7_76 ] [149])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [2 ubound.5+0 S8 A64])) "CALPOT2.f":1 85 {*movdi_internal}
     (nil))
(insn 64 62 63 2 (set (reg:DI 1 dx [177])
        (const_int 0 [0])) "CALPOT2.f":1 85 {*movdi_internal}
     (nil))
(insn 63 64 65 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 0 ax [orig:149 stride.7_76 ] [149])
            (const_int 0 [0]))) "CALPOT2.f":1 8 {*cmpdi_ccno_1}
     (nil))
(insn 65 63 219 2 (set (reg:DI 1 dx [177])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 0 ax [orig:149 stride.7_76 ] [149])
            (reg:DI 1 dx [177]))) "CALPOT2.f":1 1003 {*movdicc_noc}
     (nil))
(insn 219 65 66 2 (set (reg:DI 42 r13 [orig:150 stride.7_77 ] [150])
        (reg:DI 1 dx [177])) "CALPOT2.f":1 85 {*movdi_internal}
     (nil))
(insn 66 219 67 2 (set (reg/f:DI 0 ax [178])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -152 [0xffffffffffffff68])) [5 jm+0 S8 A64])) "CALPOT2.f":1 85 {*movdi_internal}
     (nil))
(insn 67 66 68 2 (set (reg:SI 0 ax [orig:98 _12 ] [98])
        (mem:SI (reg/f:DI 0 ax [178]) [1 *jm_57(D)+0 S4 A32])) "CALPOT2.f":1 86 {*movsi_internal}
     (nil))
(insn 68 67 69 2 (set (reg:DI 0 ax [179])
        (sign_extend:DI (reg:SI 0 ax [orig:98 _12 ] [98]))) "CALPOT2.f":1 149 {*extendsidi2_rex64}
     (nil))
(insn 69 68 220 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [2 ubound.6+0 S8 A64])
        (reg:DI 0 ax [179])) "CALPOT2.f":1 85 {*movdi_internal}
     (nil))
(insn 220 69 70 2 (set (reg:DI 0 ax [orig:151 size.9_79 ] [151])
        (reg:DI 42 r13 [orig:150 stride.7_77 ] [150])) "CALPOT2.f":1 85 {*movdi_internal}
     (nil))
(insn 70 220 72 2 (parallel [
            (set (reg:DI 0 ax [orig:151 size.9_79 ] [151])
                (mult:DI (reg:DI 0 ax [orig:151 size.9_79 ] [151])
                    (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                            (const_int -104 [0xffffffffffffff98])) [2 ubound.6+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) "CALPOT2.f":1 349 {*muldi3_1}
     (nil))
(insn 72 70 71 2 (set (reg:DI 1 dx [180])
        (const_int 0 [0])) "CALPOT2.f":1 85 {*movdi_internal}
     (nil))
(insn 71 72 73 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 0 ax [orig:151 size.9_79 ] [151])
            (const_int 0 [0]))) "CALPOT2.f":1 8 {*cmpdi_ccno_1}
     (nil))
(insn 73 71 76 2 (set (reg:DI 0 ax [orig:152 size.9_80 ] [152])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 0 ax [orig:151 size.9_79 ] [151])
            (reg:DI 1 dx [180]))) "CALPOT2.f":1 1003 {*movdicc_noc}
     (nil))
(insn 76 73 77 2 (set (reg:DI 38 r9 [orig:100 _14 ] [100])
        (reg:DI 0 ax [orig:99 size.19_13 ] [99])) "CALPOT2.f":1 85 {*movdi_internal}
     (nil))
(insn 77 76 222 2 (set (reg:DI 39 r10 [ _14+8 ])
        (const_int 0 [0])) "CALPOT2.f":1 85 {*movdi_internal}
     (nil))
(insn 222 77 81 2 (set (reg:DI 0 ax [orig:156 offset.8_84 ] [156])
        (reg:DI 42 r13 [orig:150 stride.7_77 ] [150])) "CALPOT2.f":1 85 {*movdi_internal}
     (nil))
(insn 81 222 223 2 (set (reg:DI 0 ax [orig:156 offset.8_84 ] [156])
        (not:DI (reg:DI 0 ax [orig:156 offset.8_84 ] [156]))) "CALPOT2.f":1 532 {*one_cmpldi2_1}
     (nil))
(insn 223 81 82 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -176 [0xffffffffffffff50])) [7 %sfp+-128 S8 A128])
        (reg:DI 0 ax [orig:156 offset.8_84 ] [156])) "CALPOT2.f":1 85 {*movdi_internal}
     (nil))
(insn 82 223 83 2 (set (reg:SI 0 ax [orig:157 _85 ] [157])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f9ef44b8870 parallel>)
                    (const_int 8 [0x8]))) [1 parallel.jsta+0 S4 A64])) "CALPOT2.f":55 86 {*movsi_internal}
     (nil))
(insn 83 82 224 2 (set (reg:SI 2 cx [orig:158 _86 ] [158])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f9ef44b8870 parallel>)
                    (const_int 12 [0xc]))) [1 parallel.jend+0 S4 A32])) "CALPOT2.f":55 86 {*movsi_internal}
     (nil))
(insn 224 83 84 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -156 [0xffffffffffffff64])) [7 %sfp+-108 S4 A32])
        (reg:SI 2 cx [orig:158 _86 ] [158])) "CALPOT2.f":55 86 {*movsi_internal}
     (nil))
(insn 84 224 179 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [1 j+0 S4 A32])
        (reg:SI 0 ax [orig:157 _85 ] [157])) "CALPOT2.f":55 86 {*movsi_internal}
     (nil))
;;  succ:       3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 134 140 142 148 150

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;;              10 [always] 
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 134 140 142 148 150
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 158
;; lr  def 	 17 [flags] 159 181
(code_label 179 84 85 3 8 (nil) [1 uses])
(note 85 179 225 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 225 85 86 3 (set (reg:SI 0 ax [orig:158 _86 ] [158])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -156 [0xffffffffffffff64])) [7 %sfp+-108 S4 A32])) "CALPOT2.f":55 86 {*movsi_internal}
     (nil))
(insn 86 225 87 3 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -56 [0xffffffffffffffc8])) [1 j+0 S4 A32])
            (reg:SI 0 ax [orig:158 _86 ] [158]))) "CALPOT2.f":55 11 {*cmpsi_1}
     (nil))
(insn 87 86 88 3 (set (reg:QI 0 ax [181])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALPOT2.f":55 678 {*setcc_qi}
     (nil))
(insn 88 87 89 3 (set (reg:SI 0 ax [orig:159 _88 ] [159])
        (zero_extend:SI (reg:QI 0 ax [181]))) "CALPOT2.f":55 140 {*zero_extendqisi2}
     (nil))
(insn 89 88 90 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:159 _88 ] [159])
            (const_int 0 [0]))) "CALPOT2.f":55 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 90 89 91 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 200)
            (pc))) "CALPOT2.f":55 682 {*jcc}
     (nil)
 -> 200)
;;  succ:       12
;;              4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 134 140 142 148 150

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 134 140 142 148 150
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 160 182
(note 91 90 92 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 92 91 93 4 (set (reg/f:DI 0 ax [182])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -144 [0xffffffffffffff70])) [5 im+0 S8 A64])) "CALPOT2.f":56 85 {*movdi_internal}
     (nil))
(insn 93 92 226 4 (set (reg:SI 0 ax [orig:160 _89 ] [160])
        (mem:SI (reg/f:DI 0 ax [182]) [1 *im_53(D)+0 S4 A32])) "CALPOT2.f":56 86 {*movsi_internal}
     (nil))
(insn 226 93 94 4 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -160 [0xffffffffffffff60])) [7 %sfp+-112 S4 A32])
        (reg:SI 0 ax [orig:160 _89 ] [160])) "CALPOT2.f":56 86 {*movsi_internal}
     (nil))
(insn 94 226 173 4 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [1 i+0 S4 A32])
        (const_int 1 [0x1])) "CALPOT2.f":56 86 {*movsi_internal}
     (nil))
;;  succ:       5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 134 140 142 148 150

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;;              9 [always] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 134 140 142 148 150
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 160
;; lr  def 	 17 [flags] 161 183
(code_label 173 94 95 5 7 (nil) [1 uses])
(note 95 173 227 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 227 95 96 5 (set (reg:SI 0 ax [orig:160 _89 ] [160])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -160 [0xffffffffffffff60])) [7 %sfp+-112 S4 A32])) "CALPOT2.f":56 86 {*movsi_internal}
     (nil))
(insn 96 227 97 5 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -52 [0xffffffffffffffcc])) [1 i+0 S4 A32])
            (reg:SI 0 ax [orig:160 _89 ] [160]))) "CALPOT2.f":56 11 {*cmpsi_1}
     (nil))
(insn 97 96 98 5 (set (reg:QI 0 ax [183])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALPOT2.f":56 678 {*setcc_qi}
     (nil))
(insn 98 97 99 5 (set (reg:SI 0 ax [orig:161 _91 ] [161])
        (zero_extend:SI (reg:QI 0 ax [183]))) "CALPOT2.f":56 140 {*zero_extendqisi2}
     (nil))
(insn 99 98 100 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:161 _91 ] [161])
            (const_int 0 [0]))) "CALPOT2.f":56 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 100 99 101 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 203)
            (pc))) "CALPOT2.f":56 682 {*jcc}
     (nil)
 -> 203)
;;  succ:       13
;;              6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 134 140 142 148 150

;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 7, flags: (RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 134 140 142 148 150
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 134 140
;; lr  def 	 17 [flags] 102 103 104 105 106 107 108 184 185 186 187 188
(note 101 100 102 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 102 101 103 6 (set (reg:SI 0 ax [184])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [1 j+0 S4 A32])) "CALPOT2.f":57 86 {*movsi_internal}
     (nil))
(insn 103 102 104 6 (set (reg:DI 0 ax [orig:102 _16 ] [102])
        (sign_extend:DI (reg:SI 0 ax [184]))) "CALPOT2.f":57 149 {*extendsidi2_rex64}
     (nil))
(insn 104 103 105 6 (parallel [
            (set (reg:DI 0 ax [orig:103 _17 ] [103])
                (mult:DI (reg:DI 0 ax [orig:102 _16 ] [102])
                    (reg:DI 3 bx [orig:134 stride.2_56 ] [134])))
            (clobber (reg:CC 17 flags))
        ]) "CALPOT2.f":57 349 {*muldi3_1}
     (nil))
(insn 105 104 106 6 (parallel [
            (set (reg:DI 1 dx [orig:104 _18 ] [104])
                (plus:DI (reg:DI 43 r14 [orig:140 offset.3_64 ] [140])
                    (reg:DI 0 ax [orig:103 _17 ] [103])))
            (clobber (reg:CC 17 flags))
        ]) "CALPOT2.f":57 222 {*adddi_1}
     (nil))
(insn 106 105 107 6 (set (reg:SI 0 ax [185])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [1 i+0 S4 A32])) "CALPOT2.f":57 86 {*movsi_internal}
     (nil))
(insn 107 106 108 6 (set (reg:DI 0 ax [orig:105 _19 ] [105])
        (sign_extend:DI (reg:SI 0 ax [185]))) "CALPOT2.f":57 149 {*extendsidi2_rex64}
     (nil))
(insn 108 107 109 6 (parallel [
            (set (reg:DI 1 dx [orig:106 _20 ] [106])
                (plus:DI (reg:DI 1 dx [orig:104 _18 ] [104])
                    (reg:DI 0 ax [orig:105 _19 ] [105])))
            (clobber (reg:CC 17 flags))
        ]) "CALPOT2.f":57 222 {*adddi_1}
     (nil))
(insn 109 108 110 6 (set (reg/f:DI 0 ax [186])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [4 p1d+0 S8 A64])) "CALPOT2.f":57 85 {*movdi_internal}
     (nil))
(insn 110 109 111 6 (set (reg:SF 21 xmm0 [orig:107 _21 ] [107])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:106 _20 ] [106])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [186])) [3 *p1d_92(D) S4 A32])) "CALPOT2.f":57 131 {*movsf_internal}
     (nil))
(insn 111 110 112 6 (set (reg:V4SF 22 xmm1 [187])
        (mem/u/c:V4SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S16 A128])) "CALPOT2.f":57 1282 {movv4sf_internal}
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF +QNaN [+QNaN])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 112 111 113 6 (parallel [
            (set (reg:SF 21 xmm0 [orig:108 _22 ] [108])
                (abs:SF (reg:SF 21 xmm0 [orig:107 _21 ] [107])))
            (use (reg:V4SF 22 xmm1 [187]))
            (clobber (reg:CC 17 flags))
        ]) "CALPOT2.f":57 507 {*absnegsf2}
     (expr_list:REG_EQUAL (abs:SF (reg:SF 21 xmm0 [orig:107 _21 ] [107]))
        (nil)))
(insn 113 112 114 6 (set (reg:SF 22 xmm1 [188])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S4 A32])) "CALPOT2.f":57 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 114 113 115 6 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [orig:108 _22 ] [108])
            (reg:SF 22 xmm1 [188]))) "CALPOT2.f":57 53 {*cmpisf}
     (nil))
(jump_insn 115 114 119 6 (set (pc)
        (if_then_else (unle (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 192)
            (pc))) "CALPOT2.f":57 682 {*jcc}
     (nil)
 -> 192)
;;  succ:       7 (FALLTHRU)
;;              8
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 134 140 142 148 150

;; basic block 7, loop depth 0, maybe hot
;;  prev block 6, next block 8, flags: (RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 134 140 142 148 150
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 134 140 142 148 150 156
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 162 189 190 191 192 193 194 195 196 197 198 199
(note 119 115 120 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 120 119 121 7 (set (reg:SI 0 ax [189])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [1 j+0 S4 A32])) "CALPOT2.f":58 86 {*movsi_internal}
     (nil))
(insn 121 120 122 7 (set (reg:DI 0 ax [orig:109 _23 ] [109])
        (sign_extend:DI (reg:SI 0 ax [189]))) "CALPOT2.f":58 149 {*extendsidi2_rex64}
     (nil))
(insn 122 121 123 7 (parallel [
            (set (reg:DI 0 ax [orig:110 _24 ] [110])
                (mult:DI (reg:DI 0 ax [orig:109 _23 ] [109])
                    (reg:DI 3 bx [orig:134 stride.2_56 ] [134])))
            (clobber (reg:CC 17 flags))
        ]) "CALPOT2.f":58 349 {*muldi3_1}
     (nil))
(insn 123 122 124 7 (parallel [
            (set (reg:DI 1 dx [orig:111 _25 ] [111])
                (plus:DI (reg:DI 43 r14 [orig:140 offset.3_64 ] [140])
                    (reg:DI 0 ax [orig:110 _24 ] [110])))
            (clobber (reg:CC 17 flags))
        ]) "CALPOT2.f":58 222 {*adddi_1}
     (nil))
(insn 124 123 125 7 (set (reg:SI 0 ax [190])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [1 i+0 S4 A32])) "CALPOT2.f":58 86 {*movsi_internal}
     (nil))
(insn 125 124 126 7 (set (reg:DI 0 ax [orig:112 _26 ] [112])
        (sign_extend:DI (reg:SI 0 ax [190]))) "CALPOT2.f":58 149 {*extendsidi2_rex64}
     (nil))
(insn 126 125 127 7 (parallel [
            (set (reg:DI 1 dx [orig:113 _27 ] [113])
                (plus:DI (reg:DI 1 dx [orig:111 _25 ] [111])
                    (reg:DI 0 ax [orig:112 _26 ] [112])))
            (clobber (reg:CC 17 flags))
        ]) "CALPOT2.f":58 222 {*adddi_1}
     (nil))
(insn 127 126 128 7 (set (reg/f:DI 0 ax [191])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [4 p1d+0 S8 A64])) "CALPOT2.f":58 85 {*movdi_internal}
     (nil))
(insn 128 127 129 7 (set (reg:SF 22 xmm1 [orig:114 _28 ] [114])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:113 _27 ] [113])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [191])) [3 *p1d_92(D) S4 A32])) "CALPOT2.f":58 131 {*movsf_internal}
     (nil))
(insn 129 128 130 7 (set (reg:SF 21 xmm0 [192])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0  S4 A32])) "CALPOT2.f":58 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+5 [0x0.c35p+17])
        (nil)))
(insn 130 129 132 7 (set (reg:SF 21 xmm0 [orig:115 _29 ] [115])
        (div:SF (reg:SF 21 xmm0 [192])
            (reg:SF 22 xmm1 [orig:114 _28 ] [114]))) "CALPOT2.f":58 841 {*fop_sf_1}
     (nil))
(insn 132 130 134 7 (set (reg:SF 22 xmm1)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC3") [flags 0x2]) [0  S4 A32])) "CALPOT2.f":58 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 2.8589642047882080078125e-1 [0x0.926104p-1])
        (nil)))
(call_insn/u 134 132 135 7 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("powf") [flags 0x41]  <function_decl 0x7f9ef4336100 __builtin_powf>) [0 __builtin_powf S1 A8])
            (const_int 0 [0]))) "CALPOT2.f":58 700 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (expr_list:SF (use (reg:SF 22 xmm1))
            (nil))))
(insn 135 134 136 7 (set (reg:SF 0 ax [193])
        (reg:SF 21 xmm0)) "CALPOT2.f":58 131 {*movsf_internal}
     (nil))
(insn 136 135 137 7 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -108 [0xffffffffffffff94])) [3 fac+0 S4 A32])
        (reg:SF 0 ax [193])) "CALPOT2.f":58 131 {*movsf_internal}
     (nil))
(insn 137 136 138 7 (set (reg:SI 0 ax [194])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [1 j+0 S4 A32])) "CALPOT2.f":59 86 {*movsi_internal}
     (nil))
(insn 138 137 139 7 (set (reg:DI 0 ax [orig:116 _30 ] [116])
        (sign_extend:DI (reg:SI 0 ax [194]))) "CALPOT2.f":59 149 {*extendsidi2_rex64}
     (nil))
(insn 139 138 228 7 (parallel [
            (set (reg:DI 0 ax [orig:117 _31 ] [117])
                (mult:DI (reg:DI 0 ax [orig:116 _30 ] [116])
                    (reg:DI 42 r13 [orig:150 stride.7_77 ] [150])))
            (clobber (reg:CC 17 flags))
        ]) "CALPOT2.f":59 349 {*muldi3_1}
     (nil))
(insn 228 139 140 7 (set (reg:DI 4 si [orig:156 offset.8_84 ] [156])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -176 [0xffffffffffffff50])) [7 %sfp+-128 S8 A128])) "CALPOT2.f":59 85 {*movdi_internal}
     (nil))
(insn 140 228 141 7 (parallel [
            (set (reg:DI 1 dx [orig:118 _32 ] [118])
                (plus:DI (reg:DI 4 si [orig:156 offset.8_84 ] [156])
                    (reg:DI 0 ax [orig:117 _31 ] [117])))
            (clobber (reg:CC 17 flags))
        ]) "CALPOT2.f":59 222 {*adddi_1}
     (nil))
(insn 141 140 142 7 (set (reg:SI 0 ax [195])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [1 i+0 S4 A32])) "CALPOT2.f":59 86 {*movsi_internal}
     (nil))
(insn 142 141 143 7 (set (reg:DI 0 ax [orig:119 _33 ] [119])
        (sign_extend:DI (reg:SI 0 ax [195]))) "CALPOT2.f":59 149 {*extendsidi2_rex64}
     (nil))
(insn 143 142 144 7 (parallel [
            (set (reg:DI 1 dx [orig:120 _34 ] [120])
                (plus:DI (reg:DI 1 dx [orig:118 _32 ] [118])
                    (reg:DI 0 ax [orig:119 _33 ] [119])))
            (clobber (reg:CC 17 flags))
        ]) "CALPOT2.f":59 222 {*adddi_1}
     (nil))
(insn 144 143 145 7 (set (reg/f:DI 0 ax [196])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -128 [0xffffffffffffff80])) [4 t1d+0 S8 A64])) "CALPOT2.f":59 85 {*movdi_internal}
     (nil))
(insn 145 144 146 7 (set (reg:SF 21 xmm0 [orig:121 _35 ] [121])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:120 _34 ] [120])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [196])) [3 *t1d_95(D) S4 A32])) "CALPOT2.f":59 131 {*movsf_internal}
     (nil))
(insn 146 145 147 7 (set (reg:SI 0 ax [197])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [1 j+0 S4 A32])) "CALPOT2.f":59 86 {*movsi_internal}
     (nil))
(insn 147 146 148 7 (set (reg:DI 0 ax [orig:122 _36 ] [122])
        (sign_extend:DI (reg:SI 0 ax [197]))) "CALPOT2.f":59 149 {*extendsidi2_rex64}
     (nil))
(insn 148 147 149 7 (parallel [
            (set (reg:DI 0 ax [orig:123 _37 ] [123])
                (mult:DI (reg:DI 0 ax [orig:122 _36 ] [122])
                    (reg:DI 41 r12 [orig:142 stride.12_67 ] [142])))
            (clobber (reg:CC 17 flags))
        ]) "CALPOT2.f":59 349 {*muldi3_1}
     (nil))
(insn 149 148 150 7 (parallel [
            (set (reg:DI 1 dx [orig:124 _38 ] [124])
                (plus:DI (reg:DI 44 r15 [orig:148 offset.13_74 ] [148])
                    (reg:DI 0 ax [orig:123 _37 ] [123])))
            (clobber (reg:CC 17 flags))
        ]) "CALPOT2.f":59 222 {*adddi_1}
     (nil))
(insn 150 149 151 7 (set (reg:SI 0 ax [198])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [1 i+0 S4 A32])) "CALPOT2.f":59 86 {*movsi_internal}
     (nil))
(insn 151 150 152 7 (set (reg:DI 0 ax [orig:125 _39 ] [125])
        (sign_extend:DI (reg:SI 0 ax [198]))) "CALPOT2.f":59 149 {*extendsidi2_rex64}
     (nil))
(insn 152 151 153 7 (parallel [
            (set (reg:DI 1 dx [orig:126 _40 ] [126])
                (plus:DI (reg:DI 1 dx [orig:124 _38 ] [124])
                    (reg:DI 0 ax [orig:125 _39 ] [125])))
            (clobber (reg:CC 17 flags))
        ]) "CALPOT2.f":59 222 {*adddi_1}
     (nil))
(insn 153 152 154 7 (set (reg:SF 21 xmm0 [orig:127 _41 ] [127])
        (mult:SF (reg:SF 21 xmm0 [orig:121 _35 ] [121])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -108 [0xffffffffffffff94])) [3 fac+0 S4 A32]))) "CALPOT2.f":59 838 {*fop_sf_comm}
     (nil))
(insn 154 153 155 7 (set (reg/f:DI 0 ax [199])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -136 [0xffffffffffffff78])) [4 theta+0 S8 A64])) "CALPOT2.f":59 85 {*movdi_internal}
     (nil))
(insn 155 154 193 7 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:126 _40 ] [126])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [199])) [3 *theta_96(D) S4 A32])
        (reg:SF 21 xmm0 [orig:127 _41 ] [127])) "CALPOT2.f":59 131 {*movsf_internal}
     (nil))
(jump_insn 193 155 194 7 (set (pc)
        (label_ref 170)) 683 {jump}
     (nil)
 -> 170)
;;  succ:       9 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 134 140 142 148 150

(barrier 194 193 192)
;; basic block 8, loop depth 0, maybe hot
;;  prev block 7, next block 9, flags: (RTL, MODIFIED)
;;  pred:       6
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 134 140 142 148 150
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 142 148
;; lr  def 	 17 [flags] 128 129 130 131 132 200 201 202 203
(code_label 192 194 159 8 11 (nil) [1 uses])
(note 159 192 160 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 160 159 161 8 (set (reg:SI 0 ax [200])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [1 j+0 S4 A32])) "CALPOT2.f":61 86 {*movsi_internal}
     (nil))
(insn 161 160 162 8 (set (reg:DI 0 ax [orig:128 _42 ] [128])
        (sign_extend:DI (reg:SI 0 ax [200]))) "CALPOT2.f":61 149 {*extendsidi2_rex64}
     (nil))
(insn 162 161 163 8 (parallel [
            (set (reg:DI 0 ax [orig:129 _43 ] [129])
                (mult:DI (reg:DI 0 ax [orig:128 _42 ] [128])
                    (reg:DI 41 r12 [orig:142 stride.12_67 ] [142])))
            (clobber (reg:CC 17 flags))
        ]) "CALPOT2.f":61 349 {*muldi3_1}
     (nil))
(insn 163 162 164 8 (parallel [
            (set (reg:DI 1 dx [orig:130 _44 ] [130])
                (plus:DI (reg:DI 44 r15 [orig:148 offset.13_74 ] [148])
                    (reg:DI 0 ax [orig:129 _43 ] [129])))
            (clobber (reg:CC 17 flags))
        ]) "CALPOT2.f":61 222 {*adddi_1}
     (nil))
(insn 164 163 165 8 (set (reg:SI 0 ax [201])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [1 i+0 S4 A32])) "CALPOT2.f":61 86 {*movsi_internal}
     (nil))
(insn 165 164 166 8 (set (reg:DI 0 ax [orig:131 _45 ] [131])
        (sign_extend:DI (reg:SI 0 ax [201]))) "CALPOT2.f":61 149 {*extendsidi2_rex64}
     (nil))
(insn 166 165 167 8 (parallel [
            (set (reg:DI 1 dx [orig:132 _46 ] [132])
                (plus:DI (reg:DI 1 dx [orig:130 _44 ] [130])
                    (reg:DI 0 ax [orig:131 _45 ] [131])))
            (clobber (reg:CC 17 flags))
        ]) "CALPOT2.f":61 222 {*adddi_1}
     (nil))
(insn 167 166 168 8 (set (reg/f:DI 0 ax [202])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -136 [0xffffffffffffff78])) [4 theta+0 S8 A64])) "CALPOT2.f":61 85 {*movdi_internal}
     (nil))
(insn 168 167 169 8 (set (reg:SF 21 xmm0 [203])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC4") [flags 0x2]) [0  S4 A32])) "CALPOT2.f":61 131 {*movsf_internal}
     (nil))
(insn 169 168 170 8 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:132 _46 ] [132])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [202])) [3 *theta_96(D) S4 A32])
        (reg:SF 21 xmm0 [203])) "CALPOT2.f":61 131 {*movsf_internal}
     (nil))
;;  succ:       9 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 134 140 142 148 150

;; basic block 9, loop depth 0, maybe hot
;;  prev block 8, next block 13, flags: (RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;;              7 [always] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 134 140 142 148 150
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 170 169 171 9 6 (nil) [1 uses])
(note 171 170 172 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 172 171 195 9 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -52 [0xffffffffffffffcc])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -52 [0xffffffffffffffcc])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALPOT2.f":56 221 {*addsi_1}
     (nil))
(jump_insn 195 172 196 9 (set (pc)
        (label_ref 173)) "CALPOT2.f":56 683 {jump}
     (nil)
 -> 173)
;;  succ:       5 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 134 140 142 148 150

(barrier 196 195 203)
;; basic block 13, loop depth 0, maybe hot
;;  prev block 9, next block 10, flags: (RTL, MODIFIED)
;;  pred:       5
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 134 140 142 148 150
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 203 196 202 13 13 (nil) [1 uses])
(note 202 203 204 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 204 202 176 13 (const_int 0 [0]) "CALPOT2.f":57 718 {nop}
     (nil))
;;  succ:       10 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 134 140 142 148 150

;; basic block 10, loop depth 0, maybe hot
;;  prev block 13, next block 12, flags: (RTL, MODIFIED)
;;  pred:       13 [always]  (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 134 140 142 148 150
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 176 204 177 10 3 (nil) [0 uses])
(note 177 176 178 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 178 177 197 10 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -56 [0xffffffffffffffc8])) [1 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -56 [0xffffffffffffffc8])) [1 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALPOT2.f":55 221 {*addsi_1}
     (nil))
(jump_insn 197 178 198 10 (set (pc)
        (label_ref 179)) "CALPOT2.f":55 683 {jump}
     (nil)
 -> 179)
;;  succ:       3 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 134 140 142 148 150

(barrier 198 197 200)
;; basic block 12, loop depth 0, maybe hot
;;  prev block 10, next block 11, flags: (RTL, MODIFIED)
;;  pred:       3
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 200 198 199 12 12 (nil) [1 uses])
(note 199 200 201 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 201 199 182 12 (const_int 0 [0]) "CALPOT2.f":56 718 {nop}
     (nil))
;;  succ:       11 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 11, loop depth 0, maybe hot
;;  prev block 12, next block 1, flags: (RTL, MODIFIED)
;;  pred:       12 [always]  (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 182 201 183 11 2 (nil) [0 uses])
(note 183 182 191 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 191 183 205 11 (const_int 0 [0]) "CALPOT2.f":73 718 {nop}
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(note 205 191 0 NOTE_INSN_DELETED)
