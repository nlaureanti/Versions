
;; Function calvor (calvor_, funcdef_no=0, decl_uid=3771, cgraph_uid=0, symbol_order=0)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=96, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 20 to 7 (offset=64, prev_offset=0)
Can eliminate 20 to 6 (offset=-16, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 3:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 4:  (0) m  (1) re {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 8:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 10:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 14:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 18:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 20:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 21:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 22:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 27:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 28:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 29:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 30:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 31
	 Choosing alt 0 in insn 31:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 32:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 33:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 34:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 35:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 36:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 42:  (0) rm  (1) 0  (2) re {*addsi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 48:  (0) r  (1) rem {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 50:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 51:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 52:  (0) r  (1) i {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 53:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 54:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 55:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 56:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 57:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 59:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 60:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 61:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 62:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 65:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 66:  (0) =r  (1) %0  (2) rme {*addsi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 67:  (0) v  (1) r {*floatsisf2_mixed}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 68:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 69:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 70:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 71:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 72
	 Choosing alt 1 in insn 72:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 73:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 74:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 76:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 77:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 78:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 79:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 82:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 83:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 84:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 85:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 86:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 87:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 88:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 89:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 90
	 Choosing alt 0 in insn 90:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 91:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 92
	 Choosing alt 0 in insn 92:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 93:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 94:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 95:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 96:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 97:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 98:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 99:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 100:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 101:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 102:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 103:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 104:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 105
	 Choosing alt 0 in insn 105:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 106:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 107
	 Choosing alt 0 in insn 107:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 108:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 109:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 110:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 111:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 112:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 113:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 114:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 115:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 116:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 117:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 118
	 Choosing alt 0 in insn 118:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 119:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 120:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 121:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 122:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 123:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 124:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 125:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 126:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 127:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 128:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 129
	 Choosing alt 0 in insn 129:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 130:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 131:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 132:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 133
	 Choosing alt 1 in insn 133:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 135:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 136
	 Choosing alt 1 in insn 136:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 137:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 138:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 139:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 140:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 141:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 142:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 143:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 144:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 145:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 146
	 Choosing alt 0 in insn 146:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 147:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 148
	 Choosing alt 0 in insn 148:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 149:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 150:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 151:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 152:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 153:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 154:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 155:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 156:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 157:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 158:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 159:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 160:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 161:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 162
	 Choosing alt 0 in insn 162:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 163:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 164
	 Choosing alt 0 in insn 164:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 165:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 166:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 167:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 168:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 169:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 170:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 171:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 172:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 173:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 174:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 175:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 176
	 Choosing alt 0 in insn 176:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 177:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 178:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 179:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 180:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 181:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 182:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 183:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 184:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 185:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 186:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 187:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 188
	 Choosing alt 0 in insn 188:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 189:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 190:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 191:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 192:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 193
	 Choosing alt 1 in insn 193:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 195:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 196
	 Choosing alt 1 in insn 196:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 197:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 198:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 199:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 200:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 201:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 202:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 203:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 204:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 205:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 206
	 Choosing alt 0 in insn 206:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 207:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 208
	 Choosing alt 0 in insn 208:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 209:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 210:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 211:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 212:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 213:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 214:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 215:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 216:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 217:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 218:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 219:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 220:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 221
	 Choosing alt 0 in insn 221:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 222:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 223
	 Choosing alt 0 in insn 223:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 224:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 225:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 226:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 227:  (0) x  (1) 0  (2) xm {*fop_sf_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 229:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 230:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 231:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 232:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 233:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 234
	 Choosing alt 0 in insn 234:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 235:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 236:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 237:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 238:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 239:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 241:  (0) x  (1) 0  (2) xm {*fop_sf_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 242:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 243:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 244:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 245:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 246:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 247:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 248
	 Choosing alt 0 in insn 248:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 249:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 250:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 251:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 252:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 253:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 254:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 255:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 256:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 257:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 258
	 Choosing alt 0 in insn 258:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 259:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 260:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 261:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 262:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 264:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 265:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 266:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=2,overall=6,losers=1,rld_nregs=1
	 Choosing alt 2 in insn 268:  (0) x  (1) 0  (2) xm {*fop_sf_1}
      Creating newreg=333 from oldreg=218, assigning class SSE_REGS to r333
  268: r333:SF=r333:SF/r221:SF
      REG_DEAD r221:SF
      REG_DEAD r218:SF
    Inserting insn reload before:
  341: r333:SF=r218:SF
    Inserting insn reload after:
  342: r222:SF=r333:SF

            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
          alt=2,overall=8,losers=1,rld_nregs=2
	 Choosing alt 2 in insn 269:  (0) x  (1) 0  (2) xm {*fop_sf_1}
      Creating newreg=334 from oldreg=202, assigning class SSE_REGS to r334
  269: r334:SF=r334:SF-r222:SF
      REG_DEAD r222:SF
      REG_DEAD r202:SF
    Inserting insn reload before:
  343: r334:SF=r202:SF
    Inserting insn reload after:
  344: r223:SF=r334:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1221,losers=3,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=614,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=3,overall=1219,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non pseudo reload: reject++
            1 Non-prefered reload: reject+=600
          alt=4,overall=613,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=7,overall=616,losers=2,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=8,overall=2,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 344:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 270:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 272:  (1) rBwBz {*call_value}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 274:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 275:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 276:  (0) x  (1) 0  (2) xm {*fop_sf_1}
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Non pseudo reload: reject++
            alt=1,overall=7,losers=1 -- refuse
	 Choosing alt 1 in insn 277:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=335 from oldreg=223, assigning class SSE_REGS to r335
  277: r335:SF=r335:SF+r226:SF
      REG_DEAD r226:SF
      REG_DEAD r223:SF
    Inserting insn reload before:
  345: r335:SF=r223:SF
    Inserting insn reload after:
  346: r227:SF=r335:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=615,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            alt=1,overall=617,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=4,overall=622,losers=2 -- refuse
            0 Non pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=7,overall=2,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 345:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 278:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 279:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 280:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 281:  (0) x  (1) 0  (2) xm {*fop_sf_1}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 282
	 Choosing alt 1 in insn 282:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 284:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 285:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 286:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 287:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 288:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 289
	 Choosing alt 0 in insn 289:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 290:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 291:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 292:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 293:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 294:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 295:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 296:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 297:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 298
	 Choosing alt 0 in insn 298:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 299:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 300
	 Choosing alt 1 in insn 300:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 301:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 302:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 303:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 309:  (0) rm  (1) 0  (2) re {*addsi_1}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #1: **********

EBB 2
EBB 3 4
EBB 5 6
EBB 16
EBB 7
EBB 15
EBB 8
EBB 9 10
EBB 11 12
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=336 from oldreg=223, assigning class SSE_REGS to inheritance r336
    Original reg change 223->336 (bb12):
  344: r336:SF=r334:SF
    Add original<-inheritance after:
  347: r223:SF=r336:SF

    Inheritance reuse change 223->336 (bb12):
  345: r335:SF=r336:SF
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
	    Removing dead insn:
   347: r223:SF=r336:SF
deleting insn with uid = 347.
EBB 18
EBB 13
EBB 17
EBB 14

********** Pseudo live ranges #1: **********

  BB 14
   Insn 319: point = 0, n_alt = -1
  BB 17
   Insn 336: point = 0, n_alt = -1
  BB 9
   Insn 63: point = 0, n_alt = -1
   Insn 62: point = 0, n_alt = 0
   Insn 61: point = 1, n_alt = 0
   Insn 60: point = 3, n_alt = 0
   Insn 59: point = 4, n_alt = 0
  BB 13
   Insn 326: point = 5, n_alt = -1
   Insn 309: point = 5, n_alt = 1
  BB 18
   Insn 339: point = 6, n_alt = -1
  BB 11
   Insn 80: point = 7, n_alt = -1
   Insn 79: point = 7, n_alt = 0
   Insn 78: point = 8, n_alt = 0
   Insn 77: point = 10, n_alt = 0
   Insn 76: point = 11, n_alt = 0
  BB 12
   Insn 324: point = 12, n_alt = -1
   Insn 303: point = 12, n_alt = 1
   Insn 302: point = 12, n_alt = 8
   Insn 301: point = 13, n_alt = 3
   Insn 300: point = 14, n_alt = 1
   Insn 299: point = 16, n_alt = 3
   Insn 298: point = 18, n_alt = 0
   Insn 297: point = 20, n_alt = 0
   Insn 296: point = 22, n_alt = 0
   Insn 295: point = 23, n_alt = 0
   Insn 294: point = 25, n_alt = 0
   Insn 293: point = 27, n_alt = 0
   Insn 292: point = 28, n_alt = 7
   Insn 291: point = 30, n_alt = 4
   Insn 290: point = 31, n_alt = 3
   Insn 289: point = 33, n_alt = 0
   Insn 288: point = 35, n_alt = 0
   Insn 287: point = 37, n_alt = 0
   Insn 286: point = 38, n_alt = 0
   Insn 285: point = 40, n_alt = 0
   Insn 284: point = 42, n_alt = 0
   Insn 283: point = 43, n_alt = -2
   Insn 282: point = 45, n_alt = 1
   Insn 281: point = 47, n_alt = 2
   Insn 280: point = 49, n_alt = 7
   Insn 279: point = 50, n_alt = 1
   Insn 278: point = 52, n_alt = 7
   Insn 346: point = 53, n_alt = -2
	Hard reg 22 is preferable by r335 with profit 1000
   Insn 277: point = 55, n_alt = 1
   Insn 345: point = 56, n_alt = 7
	   Creating copy r335<-r336@1000
   Insn 276: point = 58, n_alt = 2
   Insn 275: point = 60, n_alt = 7
   Insn 274: point = 61, n_alt = 1
   Insn 273: point = 63, n_alt = -2
   Insn 272: point = 64, n_alt = 0
   Insn 271: point = 64, n_alt = -2
   Insn 270: point = 65, n_alt = 7
   Insn 344: point = 66, n_alt = 8
	   Creating copy r334->r336@1000
   Insn 269: point = 68, n_alt = 2
   Insn 343: point = 69, n_alt = -2
	Hard reg 22 is preferable by r334 with profit 1000
   Insn 342: point = 71, n_alt = -2
	Hard reg 21 is preferable by r333 with profit 1000
   Insn 268: point = 73, n_alt = 2
   Insn 341: point = 74, n_alt = -2
	Hard reg 21 is preferable by r333 with profit 1000
	Hard reg 23 is preferable by r333 with profit 1000
   Insn 267: point = 76, n_alt = -2
   Insn 266: point = 78, n_alt = 1
   Insn 265: point = 80, n_alt = 7
   Insn 264: point = 82, n_alt = 4
   Insn 263: point = 83, n_alt = -2
   Insn 262: point = 85, n_alt = 2
   Insn 261: point = 87, n_alt = 7
   Insn 260: point = 89, n_alt = 3
   Insn 259: point = 90, n_alt = 3
   Insn 258: point = 92, n_alt = 0
   Insn 257: point = 94, n_alt = 0
   Insn 256: point = 96, n_alt = 0
   Insn 255: point = 97, n_alt = 0
   Insn 254: point = 99, n_alt = 0
   Insn 253: point = 101, n_alt = 0
   Insn 252: point = 103, n_alt = 0
   Insn 251: point = 104, n_alt = 7
   Insn 250: point = 106, n_alt = 3
   Insn 249: point = 107, n_alt = 3
   Insn 248: point = 109, n_alt = 0
   Insn 247: point = 111, n_alt = 0
   Insn 246: point = 113, n_alt = 0
   Insn 245: point = 114, n_alt = 0
   Insn 244: point = 116, n_alt = 0
   Insn 243: point = 118, n_alt = 0
   Insn 242: point = 120, n_alt = 0
   Insn 241: point = 121, n_alt = 2
   Insn 240: point = 123, n_alt = -2
   Insn 239: point = 125, n_alt = 1
   Insn 238: point = 127, n_alt = 7
   Insn 237: point = 129, n_alt = 0
   Insn 236: point = 131, n_alt = 4
   Insn 235: point = 132, n_alt = 3
   Insn 234: point = 134, n_alt = 0
   Insn 233: point = 136, n_alt = 0
   Insn 232: point = 138, n_alt = 0
   Insn 231: point = 139, n_alt = 0
   Insn 230: point = 141, n_alt = 0
   Insn 229: point = 143, n_alt = 0
   Insn 228: point = 144, n_alt = -2
   Insn 227: point = 146, n_alt = 2
   Insn 226: point = 148, n_alt = 7
   Insn 225: point = 150, n_alt = 3
   Insn 224: point = 151, n_alt = 3
   Insn 223: point = 153, n_alt = 0
   Insn 222: point = 155, n_alt = 0
   Insn 221: point = 157, n_alt = 0
   Insn 220: point = 159, n_alt = 0
   Insn 219: point = 160, n_alt = 0
   Insn 218: point = 162, n_alt = 0
   Insn 217: point = 164, n_alt = 0
   Insn 216: point = 166, n_alt = 0
   Insn 215: point = 168, n_alt = 0
   Insn 214: point = 169, n_alt = 0
   Insn 213: point = 171, n_alt = 0
   Insn 212: point = 173, n_alt = 0
   Insn 211: point = 174, n_alt = 7
   Insn 210: point = 176, n_alt = 3
   Insn 209: point = 177, n_alt = 3
   Insn 208: point = 179, n_alt = 0
   Insn 207: point = 181, n_alt = 0
   Insn 206: point = 183, n_alt = 0
   Insn 205: point = 185, n_alt = 0
   Insn 204: point = 186, n_alt = 0
   Insn 203: point = 188, n_alt = 0
   Insn 202: point = 190, n_alt = 0
   Insn 201: point = 192, n_alt = 0
   Insn 200: point = 193, n_alt = 0
   Insn 199: point = 195, n_alt = 0
   Insn 198: point = 197, n_alt = 0
   Insn 197: point = 198, n_alt = 8
   Insn 196: point = 199, n_alt = 1
   Insn 195: point = 201, n_alt = 7
   Insn 194: point = 202, n_alt = -2
   Insn 193: point = 204, n_alt = 1
   Insn 192: point = 206, n_alt = 7
   Insn 191: point = 208, n_alt = 0
   Insn 190: point = 210, n_alt = 4
   Insn 189: point = 211, n_alt = 3
   Insn 188: point = 213, n_alt = 0
   Insn 187: point = 215, n_alt = 0
   Insn 186: point = 217, n_alt = 0
   Insn 185: point = 218, n_alt = 0
   Insn 184: point = 220, n_alt = 0
   Insn 183: point = 222, n_alt = 0
   Insn 182: point = 224, n_alt = 0
   Insn 181: point = 225, n_alt = 1
   Insn 180: point = 227, n_alt = 7
   Insn 179: point = 229, n_alt = 0
   Insn 178: point = 231, n_alt = 4
   Insn 177: point = 232, n_alt = 3
   Insn 176: point = 234, n_alt = 0
   Insn 175: point = 236, n_alt = 0
   Insn 174: point = 238, n_alt = 0
   Insn 173: point = 239, n_alt = 0
   Insn 172: point = 241, n_alt = 0
   Insn 171: point = 243, n_alt = 0
   Insn 170: point = 245, n_alt = 0
   Insn 169: point = 246, n_alt = 1
   Insn 168: point = 248, n_alt = 7
   Insn 167: point = 250, n_alt = 0
   Insn 166: point = 252, n_alt = 4
   Insn 165: point = 253, n_alt = 3
   Insn 164: point = 255, n_alt = 0
   Insn 163: point = 257, n_alt = 0
   Insn 162: point = 259, n_alt = 0
   Insn 161: point = 261, n_alt = 0
   Insn 160: point = 262, n_alt = 0
   Insn 159: point = 264, n_alt = 0
   Insn 158: point = 266, n_alt = 0
   Insn 157: point = 268, n_alt = 0
   Insn 156: point = 270, n_alt = 0
   Insn 155: point = 271, n_alt = 0
   Insn 154: point = 273, n_alt = 0
   Insn 153: point = 275, n_alt = 0
   Insn 152: point = 276, n_alt = 7
   Insn 151: point = 278, n_alt = 0
   Insn 150: point = 280, n_alt = 4
   Insn 149: point = 281, n_alt = 3
   Insn 148: point = 283, n_alt = 0
   Insn 147: point = 285, n_alt = 0
   Insn 146: point = 287, n_alt = 0
   Insn 145: point = 289, n_alt = 0
   Insn 144: point = 290, n_alt = 0
   Insn 143: point = 292, n_alt = 0
   Insn 142: point = 294, n_alt = 0
   Insn 141: point = 296, n_alt = 0
   Insn 140: point = 297, n_alt = 0
   Insn 139: point = 299, n_alt = 0
   Insn 138: point = 301, n_alt = 0
   Insn 137: point = 302, n_alt = 8
   Insn 136: point = 303, n_alt = 1
   Insn 135: point = 305, n_alt = 7
   Insn 134: point = 306, n_alt = -2
   Insn 133: point = 308, n_alt = 1
   Insn 132: point = 310, n_alt = 7
   Insn 131: point = 312, n_alt = 3
   Insn 130: point = 313, n_alt = 3
   Insn 129: point = 315, n_alt = 0
   Insn 128: point = 317, n_alt = 0
   Insn 127: point = 319, n_alt = 0
   Insn 126: point = 320, n_alt = 0
   Insn 125: point = 322, n_alt = 0
   Insn 124: point = 324, n_alt = 0
   Insn 123: point = 326, n_alt = 0
   Insn 122: point = 327, n_alt = 1
   Insn 121: point = 329, n_alt = 7
   Insn 120: point = 331, n_alt = 3
   Insn 119: point = 332, n_alt = 3
   Insn 118: point = 334, n_alt = 0
   Insn 117: point = 336, n_alt = 0
   Insn 116: point = 338, n_alt = 0
   Insn 115: point = 339, n_alt = 0
   Insn 114: point = 341, n_alt = 0
   Insn 113: point = 343, n_alt = 0
   Insn 112: point = 345, n_alt = 0
   Insn 111: point = 346, n_alt = 1
   Insn 110: point = 348, n_alt = 7
   Insn 109: point = 350, n_alt = 3
   Insn 108: point = 351, n_alt = 3
   Insn 107: point = 353, n_alt = 0
   Insn 106: point = 355, n_alt = 0
   Insn 105: point = 357, n_alt = 0
   Insn 104: point = 359, n_alt = 0
   Insn 103: point = 360, n_alt = 0
   Insn 102: point = 362, n_alt = 0
   Insn 101: point = 364, n_alt = 0
   Insn 100: point = 366, n_alt = 0
   Insn 99: point = 368, n_alt = 0
   Insn 98: point = 369, n_alt = 0
   Insn 97: point = 371, n_alt = 0
   Insn 96: point = 373, n_alt = 0
   Insn 95: point = 374, n_alt = 7
   Insn 94: point = 376, n_alt = 3
   Insn 93: point = 377, n_alt = 3
   Insn 92: point = 379, n_alt = 0
   Insn 91: point = 381, n_alt = 0
   Insn 90: point = 383, n_alt = 0
   Insn 89: point = 385, n_alt = 0
   Insn 88: point = 386, n_alt = 0
   Insn 87: point = 388, n_alt = 0
   Insn 86: point = 390, n_alt = 0
   Insn 85: point = 392, n_alt = 0
   Insn 84: point = 393, n_alt = 0
   Insn 83: point = 395, n_alt = 0
   Insn 82: point = 397, n_alt = 0
  BB 10
   Insn 74: point = 399, n_alt = 1
   Insn 73: point = 399, n_alt = 8
   Insn 72: point = 400, n_alt = 1
   Insn 71: point = 402, n_alt = 7
   Insn 70: point = 403, n_alt = 1
   Insn 69: point = 405, n_alt = 7
   Insn 68: point = 407, n_alt = 4
   Insn 67: point = 408, n_alt = 1
   Insn 66: point = 410, n_alt = 0
   Insn 65: point = 412, n_alt = 0
  BB 8
   Insn 57: point = 414, n_alt = 1
   Insn 56: point = 415, n_alt = 0
   Insn 55: point = 416, n_alt = 0
   Insn 54: point = 417, n_alt = 0
   Insn 53: point = 417, n_alt = 3
   Insn 52: point = 417, n_alt = 4
   Insn 51: point = 417, n_alt = 0
   Insn 50: point = 417, n_alt = 3
   Insn 49: point = 417, n_alt = -2
   Insn 48: point = 418, n_alt = 3
  BB 15
   Insn 330: point = 419, n_alt = -1
  BB 3
   Insn 16: point = 419, n_alt = -1
   Insn 15: point = 419, n_alt = 0
   Insn 14: point = 420, n_alt = 0
   Insn 13: point = 422, n_alt = 0
   Insn 12: point = 423, n_alt = 0
  BB 7
   Insn 322: point = 424, n_alt = -1
   Insn 42: point = 424, n_alt = 1
  BB 16
   Insn 333: point = 425, n_alt = -1
  BB 5
   Insn 24: point = 426, n_alt = -1
   Insn 23: point = 426, n_alt = 0
   Insn 22: point = 427, n_alt = 0
   Insn 21: point = 429, n_alt = 0
   Insn 20: point = 430, n_alt = 0
  BB 6
   Insn 320: point = 431, n_alt = -1
   Insn 36: point = 431, n_alt = 1
   Insn 35: point = 431, n_alt = 8
   Insn 34: point = 432, n_alt = 7
   Insn 33: point = 433, n_alt = 3
   Insn 32: point = 434, n_alt = 3
   Insn 31: point = 436, n_alt = 0
   Insn 30: point = 438, n_alt = 1
   Insn 29: point = 440, n_alt = 0
   Insn 28: point = 441, n_alt = 0
   Insn 27: point = 443, n_alt = 1
   Insn 26: point = 445, n_alt = 0
  BB 4
   Insn 18: point = 447, n_alt = 1
  BB 2
   Insn 10: point = 448, n_alt = 1
   Insn 9: point = 449, n_alt = 0
   Insn 8: point = 450, n_alt = 0
   Insn 4: point = 451, n_alt = 5
   Insn 3: point = 451, n_alt = 5
   Insn 2: point = 451, n_alt = 5
 r87: [442..443]
 r88: [437..441]
 r89: [437..438]
 r90: [435..436]
 r91: [431..434]
 r92: [409..410]
 r93: [404..408]
 r94: [404..405]
 r95: [401..403]
 r96: [394..395]
 r97: [380..393]
 r98: [389..390]
 r99: [387..388]
 r100: [384..386]
 r101: [382..383]
 r102: [380..381]
 r103: [378..379]
 r104: [375..377]
 r105: [347..374]
 r106: [370..371]
 r107: [354..369]
 r108: [365..366]
 r109: [363..364]
 r110: [358..360]
 r111: [356..357]
 r112: [354..355]
 r113: [352..353]
 r114: [349..351]
 r115: [347..348]
 r116: [328..346]
 r117: [342..343]
 r118: [340..341]
 r119: [335..339]
 r120: [335..336]
 r121: [333..334]
 r122: [330..332]
 r123: [328..329]
 r124: [309..327]
 r125: [323..324]
 r126: [321..322]
 r127: [316..320]
 r128: [316..317]
 r129: [314..315]
 r130: [311..313]
 r131: [309..310]
 r132: [307..308]
 r133: [304..306]
 r134: [298..299]
 r135: [284..297]
 r136: [293..294]
 r137: [291..292]
 r138: [288..290]
 r139: [286..287]
 r140: [284..285]
 r141: [282..283]
 r142: [279..281]
 r143: [247..276]
 r144: [272..273]
 r145: [256..271]
 r146: [267..268]
 r147: [265..266]
 r148: [260..262]
 r149: [258..259]
 r150: [256..257]
 r151: [254..255]
 r152: [251..253]
 r153: [247..248]
 r154: [226..246]
 r155: [242..243]
 r156: [240..241]
 r157: [235..239]
 r158: [235..236]
 r159: [233..234]
 r160: [230..232]
 r161: [226..227]
 r162: [205..225]
 r163: [221..222]
 r164: [219..220]
 r165: [214..218]
 r166: [214..215]
 r167: [212..213]
 r168: [209..211]
 r169: [205..206]
 r170: [203..204]
 r171: [200..202]
 r172: [194..195]
 r173: [180..193]
 r174: [189..190]
 r175: [187..188]
 r176: [184..186]
 r177: [182..183]
 r178: [180..181]
 r179: [178..179]
 r180: [175..177]
 r181: [147..174]
 r182: [170..171]
 r183: [154..169]
 r184: [165..166]
 r185: [163..164]
 r186: [158..160]
 r187: [156..157]
 r188: [154..155]
 r189: [152..153]
 r190: [149..151]
 r191: [147..148]
 r192: [145..146]
 r193: [122..144]
 r194: [140..141]
 r195: [135..139]
 r196: [135..136]
 r197: [133..134]
 r198: [130..132]
 r199: [126..127]
 r200: [124..125]
 r201: [122..123]
 r202: [70..121]
 r203: [117..118]
 r204: [115..116]
 r205: [110..114]
 r206: [110..111]
 r207: [108..109]
 r208: [105..107]
 r209: [86..104]
 r210: [100..101]
 r211: [98..99]
 r212: [93..97]
 r213: [93..94]
 r214: [91..92]
 r215: [88..90]
 r216: [86..87]
 r217: [84..85]
 r218: [75..83]
 r219: [79..80]
 r220: [77..78]
 r221: [73..76]
 r222: [68..71]
 r224: [62..63]
 r225: [59..61]
 r226: [55..58]
 r227: [46..53]
 r228: [48..50]
 r229: [48..49]
 r230: [46..47]
 r231: [44..45]
 r232: [15..43]
 r233: [39..40]
 r234: [34..38]
 r235: [34..35]
 r236: [32..33]
 r237: [29..31]
 r238: [15..28]
 r239: [24..25]
 r240: [19..23]
 r241: [19..20]
 r242: [17..18]
 r243: [12..16]
 r244: [12..14]
 r245: [448..450]
 r246: [419..449]
 r247: [419..420]
 r248: [426..427]
 r249: [414..416]
 r250: [0..415]
 r251: [0..1]
 r252: [7..8]
 r253: [421..422]
 r254: [428..429]
 r255: [444..445]
 r256: [439..440]
 r257: [431..433]
 r258: [431..432]
 r259: [417..418]
 r260: [2..3]
 r261: [411..412]
 r262: [406..407]
 r263: [399..400]
 r264: [401..402]
 r265: [9..10]
 r266: [396..397]
 r267: [391..392]
 r268: [384..385]
 r269: [375..376]
 r270: [372..373]
 r271: [367..368]
 r272: [361..362]
 r273: [358..359]
 r274: [349..350]
 r275: [344..345]
 r276: [337..338]
 r277: [330..331]
 r278: [325..326]
 r279: [318..319]
 r280: [311..312]
 r281: [302..303]
 r282: [304..305]
 r283: [300..301]
 r284: [295..296]
 r285: [288..289]
 r286: [277..280]
 r287: [277..278]
 r288: [274..275]
 r289: [269..270]
 r290: [263..264]
 r291: [260..261]
 r292: [249..252]
 r293: [249..250]
 r294: [244..245]
 r295: [237..238]
 r296: [228..231]
 r297: [228..229]
 r298: [223..224]
 r299: [216..217]
 r300: [207..210]
 r301: [207..208]
 r302: [198..199]
 r303: [200..201]
 r304: [196..197]
 r305: [191..192]
 r306: [184..185]
 r307: [175..176]
 r308: [172..173]
 r309: [167..168]
 r310: [161..162]
 r311: [158..159]
 r312: [149..150]
 r313: [142..143]
 r314: [137..138]
 r315: [128..131]
 r316: [128..129]
 r317: [119..120]
 r318: [112..113]
 r319: [105..106]
 r320: [102..103]
 r321: [95..96]
 r322: [88..89]
 r323: [81..82]
 r324: [64..65]
 r325: [59..60]
 r326: [51..52]
 r327: [41..42]
 r328: [36..37]
 r329: [29..30]
 r330: [26..27]
 r331: [21..22]
 r332: [12..13]
 r333: [72..74]
 r334: [67..69]
 r335: [54..56]
 r336: [57..66]
Compressing live ranges: from 451 to 374 - 82%
Ranges after the compression:
 r87: [368..369]
 r88: [364..367]
 r89: [364..365]
 r90: [362..363]
 r91: [360..361]
 r92: [344..345]
 r93: [340..343]
 r94: [340..341]
 r95: [338..339]
 r96: [332..333]
 r97: [320..331]
 r98: [328..329]
 r99: [326..327]
 r100: [324..325]
 r101: [322..323]
 r102: [320..321]
 r103: [318..319]
 r104: [316..317]
 r105: [292..315]
 r106: [312..313]
 r107: [298..311]
 r108: [308..309]
 r109: [306..307]
 r110: [302..303]
 r111: [300..301]
 r112: [298..299]
 r113: [296..297]
 r114: [294..295]
 r115: [292..293]
 r116: [276..291]
 r117: [288..289]
 r118: [286..287]
 r119: [282..285]
 r120: [282..283]
 r121: [280..281]
 r122: [278..279]
 r123: [276..277]
 r124: [260..275]
 r125: [272..273]
 r126: [270..271]
 r127: [266..269]
 r128: [266..267]
 r129: [264..265]
 r130: [262..263]
 r131: [260..261]
 r132: [258..259]
 r133: [256..257]
 r134: [250..251]
 r135: [238..249]
 r136: [246..247]
 r137: [244..245]
 r138: [242..243]
 r139: [240..241]
 r140: [238..239]
 r141: [236..237]
 r142: [234..235]
 r143: [206..231]
 r144: [228..229]
 r145: [214..227]
 r146: [224..225]
 r147: [222..223]
 r148: [218..219]
 r149: [216..217]
 r150: [214..215]
 r151: [212..213]
 r152: [210..211]
 r153: [206..207]
 r154: [188..205]
 r155: [202..203]
 r156: [200..201]
 r157: [196..199]
 r158: [196..197]
 r159: [194..195]
 r160: [192..193]
 r161: [188..189]
 r162: [170..187]
 r163: [184..185]
 r164: [182..183]
 r165: [178..181]
 r166: [178..179]
 r167: [176..177]
 r168: [174..175]
 r169: [170..171]
 r170: [168..169]
 r171: [166..167]
 r172: [160..161]
 r173: [148..159]
 r174: [156..157]
 r175: [154..155]
 r176: [152..153]
 r177: [150..151]
 r178: [148..149]
 r179: [146..147]
 r180: [144..145]
 r181: [120..143]
 r182: [140..141]
 r183: [126..139]
 r184: [136..137]
 r185: [134..135]
 r186: [130..131]
 r187: [128..129]
 r188: [126..127]
 r189: [124..125]
 r190: [122..123]
 r191: [120..121]
 r192: [118..119]
 r193: [98..117]
 r194: [114..115]
 r195: [110..113]
 r196: [110..111]
 r197: [108..109]
 r198: [106..107]
 r199: [102..103]
 r200: [100..101]
 r201: [98..99]
 r202: [54..97]
 r203: [94..95]
 r204: [92..93]
 r205: [88..91]
 r206: [88..89]
 r207: [86..87]
 r208: [84..85]
 r209: [68..83]
 r210: [80..81]
 r211: [78..79]
 r212: [74..77]
 r213: [74..75]
 r214: [72..73]
 r215: [70..71]
 r216: [68..69]
 r217: [66..67]
 r218: [58..65]
 r219: [62..63]
 r220: [60..61]
 r221: [56..59]
 r222: [52..55]
 r224: [48..49]
 r225: [46..47]
 r226: [42..45]
 r227: [36..41]
 r228: [38..39]
 r229: [38..39]
 r230: [36..37]
 r231: [34..35]
 r232: [10..33]
 r233: [30..31]
 r234: [26..29]
 r235: [26..27]
 r236: [24..25]
 r237: [22..23]
 r238: [10..21]
 r239: [18..19]
 r240: [14..17]
 r241: [14..15]
 r242: [12..13]
 r243: [8..11]
 r244: [8..9]
 r245: [372..373]
 r246: [352..373]
 r247: [352..353]
 r248: [356..357]
 r249: [348..349]
 r250: [0..349]
 r251: [0..1]
 r252: [4..5]
 r253: [354..355]
 r254: [358..359]
 r255: [370..371]
 r256: [366..367]
 r257: [360..361]
 r258: [360..361]
 r259: [350..351]
 r260: [2..3]
 r261: [346..347]
 r262: [342..343]
 r263: [336..337]
 r264: [338..339]
 r265: [6..7]
 r266: [334..335]
 r267: [330..331]
 r268: [324..325]
 r269: [316..317]
 r270: [314..315]
 r271: [310..311]
 r272: [304..305]
 r273: [302..303]
 r274: [294..295]
 r275: [290..291]
 r276: [284..285]
 r277: [278..279]
 r278: [274..275]
 r279: [268..269]
 r280: [262..263]
 r281: [254..255]
 r282: [256..257]
 r283: [252..253]
 r284: [248..249]
 r285: [242..243]
 r286: [232..235]
 r287: [232..233]
 r288: [230..231]
 r289: [226..227]
 r290: [220..221]
 r291: [218..219]
 r292: [208..211]
 r293: [208..209]
 r294: [204..205]
 r295: [198..199]
 r296: [190..193]
 r297: [190..191]
 r298: [186..187]
 r299: [180..181]
 r300: [172..175]
 r301: [172..173]
 r302: [164..165]
 r303: [166..167]
 r304: [162..163]
 r305: [158..159]
 r306: [152..153]
 r307: [144..145]
 r308: [142..143]
 r309: [138..139]
 r310: [132..133]
 r311: [130..131]
 r312: [122..123]
 r313: [116..117]
 r314: [112..113]
 r315: [104..107]
 r316: [104..105]
 r317: [96..97]
 r318: [90..91]
 r319: [84..85]
 r320: [82..83]
 r321: [76..77]
 r322: [70..71]
 r323: [64..65]
 r324: [50..51]
 r325: [46..47]
 r326: [40..41]
 r327: [32..33]
 r328: [28..29]
 r329: [22..23]
 r330: [20..21]
 r331: [16..17]
 r332: [8..9]
 r333: [56..57]
 r334: [52..53]
 r335: [42..43]
 r336: [44..51]

********** Assignment #1: **********

	 Assigning to 336 (cl=SSE_REGS, orig=223, freq=2000, tfirst=334, tfreq=4000)...
	 Assigning to 334 (cl=SSE_REGS, orig=202, freq=3000, tfirst=334, tfreq=4000)...
	   Assign 22 to reload r334 (freq=3000)
	Hard reg 22 is preferable by r336 with profit 1000
	Hard reg 22 is preferable by r335 with profit 1500
	 Assigning to 335 (cl=SSE_REGS, orig=223, freq=3000, tfirst=334, tfreq=4000)...
	   Assign 22 to reload r335 (freq=3000)
	Hard reg 22 is preferable by r336 with profit 2000
	 Assigning to 333 (cl=SSE_REGS, orig=218, freq=3000, tfirst=333, tfreq=3000)...
	   Assign 23 to reload r333 (freq=3000)
  Reassigning non-reload pseudos

********** Undoing inheritance #1: **********

Inherit 0 out of 1 (0.00%)
   Insn after restoring regs:
  345: r335:SF=r223:SF
      REG_DEAD r223:SF
   Insn after restoring regs:
  344: r223:SF=r334:SF
      REG_DEAD r334:SF

********** Local #2: **********

	   Spilling non-eliminable hard regs: 6
	   Spilling non-eliminable hard regs: 6

********** Pseudo live ranges #2: **********

  BB 14
   Insn 319: point = 0, n_alt = -1
  BB 17
   Insn 336: point = 0, n_alt = -1
  BB 9
   Insn 63: point = 0, n_alt = -1
   Insn 62: point = 0, n_alt = 0
   Insn 61: point = 1, n_alt = 0
   Insn 60: point = 3, n_alt = 0
   Insn 59: point = 4, n_alt = 0
  BB 13
   Insn 326: point = 5, n_alt = -1
   Insn 309: point = 5, n_alt = 1
  BB 18
   Insn 339: point = 6, n_alt = -1
  BB 11
   Insn 80: point = 7, n_alt = -1
   Insn 79: point = 7, n_alt = 0
   Insn 78: point = 8, n_alt = 0
   Insn 77: point = 10, n_alt = 0
   Insn 76: point = 11, n_alt = 0
  BB 12
   Insn 324: point = 12, n_alt = -1
   Insn 303: point = 12, n_alt = 1
   Insn 302: point = 12, n_alt = 8
   Insn 301: point = 13, n_alt = 3
   Insn 300: point = 14, n_alt = 1
   Insn 299: point = 16, n_alt = 3
   Insn 298: point = 18, n_alt = 0
   Insn 297: point = 20, n_alt = 0
   Insn 296: point = 22, n_alt = 0
   Insn 295: point = 23, n_alt = 0
   Insn 294: point = 25, n_alt = 0
   Insn 293: point = 27, n_alt = 0
   Insn 292: point = 28, n_alt = 7
   Insn 291: point = 30, n_alt = 4
   Insn 290: point = 31, n_alt = 3
   Insn 289: point = 33, n_alt = 0
   Insn 288: point = 35, n_alt = 0
   Insn 287: point = 37, n_alt = 0
   Insn 286: point = 38, n_alt = 0
   Insn 285: point = 40, n_alt = 0
   Insn 284: point = 42, n_alt = 0
   Insn 283: point = 43, n_alt = -2
   Insn 282: point = 45, n_alt = 1
   Insn 281: point = 47, n_alt = 2
   Insn 280: point = 49, n_alt = 7
   Insn 279: point = 50, n_alt = 1
   Insn 278: point = 52, n_alt = 7
   Insn 346: point = 53, n_alt = -2
   Insn 277: point = 55, n_alt = 1
   Insn 345: point = 56, n_alt = 7
   Insn 276: point = 58, n_alt = 2
   Insn 275: point = 60, n_alt = 7
   Insn 274: point = 61, n_alt = 1
   Insn 273: point = 63, n_alt = -2
   Insn 272: point = 64, n_alt = 0
   Insn 271: point = 64, n_alt = -2
   Insn 270: point = 65, n_alt = 7
   Insn 344: point = 66, n_alt = 8
   Insn 269: point = 68, n_alt = 2
   Insn 343: point = 69, n_alt = -2
   Insn 342: point = 71, n_alt = -2
   Insn 268: point = 73, n_alt = 2
   Insn 341: point = 74, n_alt = -2
   Insn 267: point = 76, n_alt = -2
   Insn 266: point = 78, n_alt = 1
   Insn 265: point = 80, n_alt = 7
   Insn 264: point = 82, n_alt = 4
   Insn 263: point = 83, n_alt = -2
   Insn 262: point = 85, n_alt = 2
   Insn 261: point = 87, n_alt = 7
   Insn 260: point = 89, n_alt = 3
   Insn 259: point = 90, n_alt = 3
   Insn 258: point = 92, n_alt = 0
   Insn 257: point = 94, n_alt = 0
   Insn 256: point = 96, n_alt = 0
   Insn 255: point = 97, n_alt = 0
   Insn 254: point = 99, n_alt = 0
   Insn 253: point = 101, n_alt = 0
   Insn 252: point = 103, n_alt = 0
   Insn 251: point = 104, n_alt = 7
   Insn 250: point = 106, n_alt = 3
   Insn 249: point = 107, n_alt = 3
   Insn 248: point = 109, n_alt = 0
   Insn 247: point = 111, n_alt = 0
   Insn 246: point = 113, n_alt = 0
   Insn 245: point = 114, n_alt = 0
   Insn 244: point = 116, n_alt = 0
   Insn 243: point = 118, n_alt = 0
   Insn 242: point = 120, n_alt = 0
   Insn 241: point = 121, n_alt = 2
   Insn 240: point = 123, n_alt = -2
   Insn 239: point = 125, n_alt = 1
   Insn 238: point = 127, n_alt = 7
   Insn 237: point = 129, n_alt = 0
   Insn 236: point = 131, n_alt = 4
   Insn 235: point = 132, n_alt = 3
   Insn 234: point = 134, n_alt = 0
   Insn 233: point = 136, n_alt = 0
   Insn 232: point = 138, n_alt = 0
   Insn 231: point = 139, n_alt = 0
   Insn 230: point = 141, n_alt = 0
   Insn 229: point = 143, n_alt = 0
   Insn 228: point = 144, n_alt = -2
   Insn 227: point = 146, n_alt = 2
   Insn 226: point = 148, n_alt = 7
   Insn 225: point = 150, n_alt = 3
   Insn 224: point = 151, n_alt = 3
   Insn 223: point = 153, n_alt = 0
   Insn 222: point = 155, n_alt = 0
   Insn 221: point = 157, n_alt = 0
   Insn 220: point = 159, n_alt = 0
   Insn 219: point = 160, n_alt = 0
   Insn 218: point = 162, n_alt = 0
   Insn 217: point = 164, n_alt = 0
   Insn 216: point = 166, n_alt = 0
   Insn 215: point = 168, n_alt = 0
   Insn 214: point = 169, n_alt = 0
   Insn 213: point = 171, n_alt = 0
   Insn 212: point = 173, n_alt = 0
   Insn 211: point = 174, n_alt = 7
   Insn 210: point = 176, n_alt = 3
   Insn 209: point = 177, n_alt = 3
   Insn 208: point = 179, n_alt = 0
   Insn 207: point = 181, n_alt = 0
   Insn 206: point = 183, n_alt = 0
   Insn 205: point = 185, n_alt = 0
   Insn 204: point = 186, n_alt = 0
   Insn 203: point = 188, n_alt = 0
   Insn 202: point = 190, n_alt = 0
   Insn 201: point = 192, n_alt = 0
   Insn 200: point = 193, n_alt = 0
   Insn 199: point = 195, n_alt = 0
   Insn 198: point = 197, n_alt = 0
   Insn 197: point = 198, n_alt = 8
   Insn 196: point = 199, n_alt = 1
   Insn 195: point = 201, n_alt = 7
   Insn 194: point = 202, n_alt = -2
   Insn 193: point = 204, n_alt = 1
   Insn 192: point = 206, n_alt = 7
   Insn 191: point = 208, n_alt = 0
   Insn 190: point = 210, n_alt = 4
   Insn 189: point = 211, n_alt = 3
   Insn 188: point = 213, n_alt = 0
   Insn 187: point = 215, n_alt = 0
   Insn 186: point = 217, n_alt = 0
   Insn 185: point = 218, n_alt = 0
   Insn 184: point = 220, n_alt = 0
   Insn 183: point = 222, n_alt = 0
   Insn 182: point = 224, n_alt = 0
   Insn 181: point = 225, n_alt = 1
   Insn 180: point = 227, n_alt = 7
   Insn 179: point = 229, n_alt = 0
   Insn 178: point = 231, n_alt = 4
   Insn 177: point = 232, n_alt = 3
   Insn 176: point = 234, n_alt = 0
   Insn 175: point = 236, n_alt = 0
   Insn 174: point = 238, n_alt = 0
   Insn 173: point = 239, n_alt = 0
   Insn 172: point = 241, n_alt = 0
   Insn 171: point = 243, n_alt = 0
   Insn 170: point = 245, n_alt = 0
   Insn 169: point = 246, n_alt = 1
   Insn 168: point = 248, n_alt = 7
   Insn 167: point = 250, n_alt = 0
   Insn 166: point = 252, n_alt = 4
   Insn 165: point = 253, n_alt = 3
   Insn 164: point = 255, n_alt = 0
   Insn 163: point = 257, n_alt = 0
   Insn 162: point = 259, n_alt = 0
   Insn 161: point = 261, n_alt = 0
   Insn 160: point = 262, n_alt = 0
   Insn 159: point = 264, n_alt = 0
   Insn 158: point = 266, n_alt = 0
   Insn 157: point = 268, n_alt = 0
   Insn 156: point = 270, n_alt = 0
   Insn 155: point = 271, n_alt = 0
   Insn 154: point = 273, n_alt = 0
   Insn 153: point = 275, n_alt = 0
   Insn 152: point = 276, n_alt = 7
   Insn 151: point = 278, n_alt = 0
   Insn 150: point = 280, n_alt = 4
   Insn 149: point = 281, n_alt = 3
   Insn 148: point = 283, n_alt = 0
   Insn 147: point = 285, n_alt = 0
   Insn 146: point = 287, n_alt = 0
   Insn 145: point = 289, n_alt = 0
   Insn 144: point = 290, n_alt = 0
   Insn 143: point = 292, n_alt = 0
   Insn 142: point = 294, n_alt = 0
   Insn 141: point = 296, n_alt = 0
   Insn 140: point = 297, n_alt = 0
   Insn 139: point = 299, n_alt = 0
   Insn 138: point = 301, n_alt = 0
   Insn 137: point = 302, n_alt = 8
   Insn 136: point = 303, n_alt = 1
   Insn 135: point = 305, n_alt = 7
   Insn 134: point = 306, n_alt = -2
   Insn 133: point = 308, n_alt = 1
   Insn 132: point = 310, n_alt = 7
   Insn 131: point = 312, n_alt = 3
   Insn 130: point = 313, n_alt = 3
   Insn 129: point = 315, n_alt = 0
   Insn 128: point = 317, n_alt = 0
   Insn 127: point = 319, n_alt = 0
   Insn 126: point = 320, n_alt = 0
   Insn 125: point = 322, n_alt = 0
   Insn 124: point = 324, n_alt = 0
   Insn 123: point = 326, n_alt = 0
   Insn 122: point = 327, n_alt = 1
   Insn 121: point = 329, n_alt = 7
   Insn 120: point = 331, n_alt = 3
   Insn 119: point = 332, n_alt = 3
   Insn 118: point = 334, n_alt = 0
   Insn 117: point = 336, n_alt = 0
   Insn 116: point = 338, n_alt = 0
   Insn 115: point = 339, n_alt = 0
   Insn 114: point = 341, n_alt = 0
   Insn 113: point = 343, n_alt = 0
   Insn 112: point = 345, n_alt = 0
   Insn 111: point = 346, n_alt = 1
   Insn 110: point = 348, n_alt = 7
   Insn 109: point = 350, n_alt = 3
   Insn 108: point = 351, n_alt = 3
   Insn 107: point = 353, n_alt = 0
   Insn 106: point = 355, n_alt = 0
   Insn 105: point = 357, n_alt = 0
   Insn 104: point = 359, n_alt = 0
   Insn 103: point = 360, n_alt = 0
   Insn 102: point = 362, n_alt = 0
   Insn 101: point = 364, n_alt = 0
   Insn 100: point = 366, n_alt = 0
   Insn 99: point = 368, n_alt = 0
   Insn 98: point = 369, n_alt = 0
   Insn 97: point = 371, n_alt = 0
   Insn 96: point = 373, n_alt = 0
   Insn 95: point = 374, n_alt = 7
   Insn 94: point = 376, n_alt = 3
   Insn 93: point = 377, n_alt = 3
   Insn 92: point = 379, n_alt = 0
   Insn 91: point = 381, n_alt = 0
   Insn 90: point = 383, n_alt = 0
   Insn 89: point = 385, n_alt = 0
   Insn 88: point = 386, n_alt = 0
   Insn 87: point = 388, n_alt = 0
   Insn 86: point = 390, n_alt = 0
   Insn 85: point = 392, n_alt = 0
   Insn 84: point = 393, n_alt = 0
   Insn 83: point = 395, n_alt = 0
   Insn 82: point = 397, n_alt = 0
  BB 10
   Insn 74: point = 399, n_alt = 1
   Insn 73: point = 399, n_alt = 8
   Insn 72: point = 400, n_alt = 1
   Insn 71: point = 402, n_alt = 7
   Insn 70: point = 403, n_alt = 1
   Insn 69: point = 405, n_alt = 7
   Insn 68: point = 407, n_alt = 4
   Insn 67: point = 408, n_alt = 1
   Insn 66: point = 410, n_alt = 0
   Insn 65: point = 412, n_alt = 0
  BB 8
   Insn 57: point = 414, n_alt = 1
   Insn 56: point = 415, n_alt = 0
   Insn 55: point = 416, n_alt = 0
   Insn 54: point = 417, n_alt = 0
   Insn 53: point = 417, n_alt = 3
   Insn 52: point = 417, n_alt = 4
   Insn 51: point = 417, n_alt = 0
   Insn 50: point = 417, n_alt = 3
   Insn 49: point = 417, n_alt = -2
   Insn 48: point = 418, n_alt = 3
  BB 15
   Insn 330: point = 419, n_alt = -1
  BB 3
   Insn 16: point = 419, n_alt = -1
   Insn 15: point = 419, n_alt = 0
   Insn 14: point = 420, n_alt = 0
   Insn 13: point = 422, n_alt = 0
   Insn 12: point = 423, n_alt = 0
  BB 7
   Insn 322: point = 424, n_alt = -1
   Insn 42: point = 424, n_alt = 1
  BB 16
   Insn 333: point = 425, n_alt = -1
  BB 5
   Insn 24: point = 426, n_alt = -1
   Insn 23: point = 426, n_alt = 0
   Insn 22: point = 427, n_alt = 0
   Insn 21: point = 429, n_alt = 0
   Insn 20: point = 430, n_alt = 0
  BB 6
   Insn 320: point = 431, n_alt = -1
   Insn 36: point = 431, n_alt = 1
   Insn 35: point = 431, n_alt = 8
   Insn 34: point = 432, n_alt = 7
   Insn 33: point = 433, n_alt = 3
   Insn 32: point = 434, n_alt = 3
   Insn 31: point = 436, n_alt = 0
   Insn 30: point = 438, n_alt = 1
   Insn 29: point = 440, n_alt = 0
   Insn 28: point = 441, n_alt = 0
   Insn 27: point = 443, n_alt = 1
   Insn 26: point = 445, n_alt = 0
  BB 4
   Insn 18: point = 447, n_alt = 1
  BB 2
   Insn 10: point = 448, n_alt = 1
   Insn 9: point = 449, n_alt = 0
   Insn 8: point = 450, n_alt = 0
   Insn 4: point = 451, n_alt = 5
   Insn 3: point = 451, n_alt = 5
   Insn 2: point = 451, n_alt = 5
 r223: [57..66]
Compressing live ranges: from 451 to 2 - 0%
Ranges after the compression:
 r223: [0..1]
  Slot 0 regnos (width = 0):	 223
Changing spilled pseudos to memory in insn #344
Changing spilled pseudos to memory in insn #345
	   Spilling non-eliminable hard regs: 6

********** Local #3: **********

	   Spilling non-eliminable hard regs: 6
Reusing alternative 7 for insn #345
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 345:  (0) v  (1) m {*movsf_internal}
Reusing alternative 8 for insn #344
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 344:  (0) m  (1) v {*movsf_internal}
	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=96, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 20 to 7 (offset=64, prev_offset=0)
Can eliminate 20 to 6 (offset=-16, prev_offset=-16)
changing reg in insn 27
changing reg in insn 28
changing reg in insn 28
changing reg in insn 30
changing reg in insn 31
changing reg in insn 32
changing reg in insn 32
changing reg in insn 35
changing reg in insn 66
changing reg in insn 67
changing reg in insn 67
changing reg in insn 70
changing reg in insn 69
changing reg in insn 70
changing reg in insn 70
changing reg in insn 83
changing reg in insn 84
changing reg in insn 84
changing reg in insn 86
changing reg in insn 87
changing reg in insn 87
changing reg in insn 88
changing reg in insn 88
changing reg in insn 90
changing reg in insn 90
changing reg in insn 91
changing reg in insn 91
changing reg in insn 92
changing reg in insn 93
changing reg in insn 93
changing reg in insn 95
changing reg in insn 95
changing reg in insn 111
changing reg in insn 97
changing reg in insn 98
changing reg in insn 98
changing reg in insn 100
changing reg in insn 101
changing reg in insn 101
changing reg in insn 102
changing reg in insn 103
changing reg in insn 105
changing reg in insn 105
changing reg in insn 106
changing reg in insn 106
changing reg in insn 107
changing reg in insn 108
changing reg in insn 108
changing reg in insn 110
changing reg in insn 110
changing reg in insn 111
changing reg in insn 111
changing reg in insn 122
changing reg in insn 113
changing reg in insn 114
changing reg in insn 114
changing reg in insn 115
changing reg in insn 115
changing reg in insn 117
changing reg in insn 118
changing reg in insn 119
changing reg in insn 119
changing reg in insn 121
changing reg in insn 121
changing reg in insn 122
changing reg in insn 122
changing reg in insn 124
changing reg in insn 125
changing reg in insn 125
changing reg in insn 126
changing reg in insn 126
changing reg in insn 128
changing reg in insn 129
changing reg in insn 130
changing reg in insn 130
changing reg in insn 132
changing reg in insn 132
changing reg in insn 133
changing reg in insn 134
changing reg in insn 134
changing reg in insn 139
changing reg in insn 140
changing reg in insn 140
changing reg in insn 142
changing reg in insn 143
changing reg in insn 143
changing reg in insn 144
changing reg in insn 144
changing reg in insn 146
changing reg in insn 146
changing reg in insn 147
changing reg in insn 147
changing reg in insn 148
changing reg in insn 149
changing reg in insn 149
changing reg in insn 151
changing reg in insn 152
changing reg in insn 169
changing reg in insn 154
changing reg in insn 155
changing reg in insn 155
changing reg in insn 157
changing reg in insn 158
changing reg in insn 158
changing reg in insn 159
changing reg in insn 160
changing reg in insn 162
changing reg in insn 162
changing reg in insn 163
changing reg in insn 163
changing reg in insn 164
changing reg in insn 165
changing reg in insn 165
changing reg in insn 167
changing reg in insn 168
changing reg in insn 169
changing reg in insn 169
changing reg in insn 181
changing reg in insn 171
changing reg in insn 172
changing reg in insn 172
changing reg in insn 173
changing reg in insn 173
changing reg in insn 175
changing reg in insn 176
changing reg in insn 177
changing reg in insn 177
changing reg in insn 179
changing reg in insn 180
changing reg in insn 181
changing reg in insn 181
changing reg in insn 183
changing reg in insn 184
changing reg in insn 184
changing reg in insn 185
changing reg in insn 185
changing reg in insn 187
changing reg in insn 188
changing reg in insn 189
changing reg in insn 189
changing reg in insn 191
changing reg in insn 192
changing reg in insn 193
changing reg in insn 194
changing reg in insn 194
changing reg in insn 199
changing reg in insn 200
changing reg in insn 200
changing reg in insn 202
changing reg in insn 203
changing reg in insn 203
changing reg in insn 204
changing reg in insn 204
changing reg in insn 206
changing reg in insn 206
changing reg in insn 207
changing reg in insn 207
changing reg in insn 208
changing reg in insn 209
changing reg in insn 209
changing reg in insn 211
changing reg in insn 211
changing reg in insn 227
changing reg in insn 213
changing reg in insn 214
changing reg in insn 214
changing reg in insn 216
changing reg in insn 217
changing reg in insn 217
changing reg in insn 218
changing reg in insn 219
changing reg in insn 221
changing reg in insn 221
changing reg in insn 222
changing reg in insn 222
changing reg in insn 223
changing reg in insn 224
changing reg in insn 224
changing reg in insn 226
changing reg in insn 226
changing reg in insn 227
changing reg in insn 227
changing reg in insn 228
changing reg in insn 228
changing reg in insn 241
changing reg in insn 230
changing reg in insn 231
changing reg in insn 231
changing reg in insn 233
changing reg in insn 234
changing reg in insn 235
changing reg in insn 235
changing reg in insn 237
changing reg in insn 238
changing reg in insn 239
changing reg in insn 239
changing reg in insn 239
changing reg in insn 240
changing reg in insn 240
changing reg in insn 241
changing reg in insn 241
changing reg in insn 243
changing reg in insn 244
changing reg in insn 244
changing reg in insn 245
changing reg in insn 245
changing reg in insn 247
changing reg in insn 248
changing reg in insn 249
changing reg in insn 249
changing reg in insn 251
changing reg in insn 251
changing reg in insn 262
changing reg in insn 253
changing reg in insn 254
changing reg in insn 254
changing reg in insn 255
changing reg in insn 255
changing reg in insn 257
changing reg in insn 258
changing reg in insn 259
changing reg in insn 259
changing reg in insn 261
changing reg in insn 261
changing reg in insn 262
changing reg in insn 262
changing reg in insn 263
changing reg in insn 263
changing reg in insn 265
changing reg in insn 266
changing reg in insn 266
changing reg in insn 266
changing reg in insn 267
changing reg in insn 267
changing reg in insn 268
changing reg in insn 269
changing reg in insn 273
changing reg in insn 274
changing reg in insn 274
changing reg in insn 276
changing reg in insn 276
changing reg in insn 277
changing reg in insn 279
changing reg in insn 281
changing reg in insn 280
changing reg in insn 281
changing reg in insn 281
changing reg in insn 282
changing reg in insn 283
changing reg in insn 283
changing reg in insn 285
changing reg in insn 286
changing reg in insn 286
changing reg in insn 288
changing reg in insn 289
changing reg in insn 290
changing reg in insn 290
changing reg in insn 292
changing reg in insn 292
changing reg in insn 294
changing reg in insn 295
changing reg in insn 295
changing reg in insn 297
changing reg in insn 298
changing reg in insn 299
changing reg in insn 299
changing reg in insn 302
changing reg in insn 300
changing reg in insn 302
changing reg in insn 8
changing reg in insn 10
changing reg in insn 9
changing reg in insn 12
changing reg in insn 14
changing reg in insn 15
changing reg in insn 22
changing reg in insn 23
changing reg in insn 55
changing reg in insn 57
changing reg in insn 56
changing reg in insn 59
changing reg in insn 61
changing reg in insn 62
changing reg in insn 78
changing reg in insn 79
changing reg in insn 13
changing reg in insn 14
changing reg in insn 21
changing reg in insn 22
changing reg in insn 26
changing reg in insn 27
changing reg in insn 29
changing reg in insn 30
changing reg in insn 33
changing reg in insn 35
changing reg in insn 34
changing reg in insn 35
changing reg in insn 48
changing reg in insn 49
changing reg in insn 60
changing reg in insn 61
changing reg in insn 65
changing reg in insn 66
changing reg in insn 68
changing reg in insn 69
changing reg in insn 72
changing reg in insn 73
changing reg in insn 71
changing reg in insn 77
changing reg in insn 78
changing reg in insn 82
changing reg in insn 83
changing reg in insn 85
changing reg in insn 86
changing reg in insn 89
changing reg in insn 94
changing reg in insn 95
changing reg in insn 96
changing reg in insn 97
changing reg in insn 99
changing reg in insn 100
changing reg in insn 102
changing reg in insn 103
changing reg in insn 104
changing reg in insn 109
changing reg in insn 110
changing reg in insn 112
changing reg in insn 113
changing reg in insn 116
changing reg in insn 117
changing reg in insn 120
changing reg in insn 121
changing reg in insn 123
changing reg in insn 124
changing reg in insn 127
changing reg in insn 128
changing reg in insn 131
changing reg in insn 132
changing reg in insn 136
changing reg in insn 137
changing reg in insn 135
changing reg in insn 138
changing reg in insn 139
changing reg in insn 141
changing reg in insn 142
changing reg in insn 145
changing reg in insn 150
changing reg in insn 152
changing reg in insn 151
changing reg in insn 152
changing reg in insn 153
changing reg in insn 154
changing reg in insn 156
changing reg in insn 157
changing reg in insn 159
changing reg in insn 160
changing reg in insn 161
changing reg in insn 166
changing reg in insn 168
changing reg in insn 167
changing reg in insn 168
changing reg in insn 170
changing reg in insn 171
changing reg in insn 174
changing reg in insn 175
changing reg in insn 178
changing reg in insn 180
changing reg in insn 179
changing reg in insn 180
changing reg in insn 182
changing reg in insn 183
changing reg in insn 186
changing reg in insn 187
changing reg in insn 190
changing reg in insn 192
changing reg in insn 191
changing reg in insn 192
changing reg in insn 196
changing reg in insn 197
changing reg in insn 195
changing reg in insn 198
changing reg in insn 199
changing reg in insn 201
changing reg in insn 202
changing reg in insn 205
changing reg in insn 210
changing reg in insn 211
changing reg in insn 212
changing reg in insn 213
changing reg in insn 215
changing reg in insn 216
changing reg in insn 218
changing reg in insn 219
changing reg in insn 220
changing reg in insn 225
changing reg in insn 226
changing reg in insn 229
changing reg in insn 230
changing reg in insn 232
changing reg in insn 233
changing reg in insn 236
changing reg in insn 238
changing reg in insn 237
changing reg in insn 238
changing reg in insn 242
changing reg in insn 243
changing reg in insn 246
changing reg in insn 247
changing reg in insn 250
changing reg in insn 251
changing reg in insn 252
changing reg in insn 253
changing reg in insn 256
changing reg in insn 257
changing reg in insn 260
changing reg in insn 261
changing reg in insn 264
changing reg in insn 265
changing reg in insn 270
changing reg in insn 271
changing reg in insn 275
changing reg in insn 276
changing reg in insn 278
changing reg in insn 279
changing reg in insn 279
changing reg in insn 284
changing reg in insn 285
changing reg in insn 287
changing reg in insn 288
changing reg in insn 291
changing reg in insn 292
changing reg in insn 293
changing reg in insn 294
changing reg in insn 296
changing reg in insn 297
changing reg in insn 301
changing reg in insn 302
deleting insn with uid = 240.
deleting insn with uid = 267.
deleting insn with uid = 341.
deleting insn with uid = 343.
deleting insn with uid = 271.
deleting insn with uid = 273.
deleting insn with uid = 346.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 51.
verify found no changes in insn with uid = 54.
verify found no changes in insn with uid = 272.


calvor

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 21 [xmm0] 22 [xmm1] 23 [xmm2]
;;  ref usage 	r0={140d,136u} r1={50d,47u} r2={12d,8u,6e} r3={1d,1u} r4={4d,1u} r5={6d,3u} r6={1d,95u} r7={1d,21u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r17={90d,8u} r18={3d} r19={3d} r20={1d,1u,13e} r21={38d,38u} r22={22d,18u} r23={8d,4u} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={4d} r38={4d} r39={3d} r40={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r77={3d} r78={3d} r79={3d} r80={3d} 
;;    total ref usage 970{570d,381u,19e} in 290{287 regular + 3 call} insns.
(note 1 0 6 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 1 [dx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 245 246
(note 6 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 6 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [3 uwnd+0 S8 A64])
        (reg:DI 5 di [ uwnd ])) "CALVOR.f":1 85 {*movdi_internal}
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [3 vwnd+0 S8 A64])
        (reg:DI 4 si [ vwnd ])) "CALVOR.f":1 85 {*movdi_internal}
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [3 absv+0 S8 A64])
        (reg:DI 1 dx [ absv ])) "CALVOR.f":1 85 {*movdi_internal}
     (nil))
(note 5 4 8 2 NOTE_INSN_FUNCTION_BEG)
(insn 8 5 9 2 (set (reg:SI 1 dx [orig:245 _168 ] [245])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f07ddce1750 parallel>)
                    (const_int 8 [0x8]))) [1 parallel.jsta+0 S4 A64])) "CALVOR.f":71 86 {*movsi_internal}
     (nil))
(insn 9 8 10 2 (set (reg:SI 0 ax [orig:246 _169 ] [246])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f07ddce1750 parallel>)
                    (const_int 12 [0xc]))) [1 parallel.jend+0 S4 A32])) "CALVOR.f":71 86 {*movsi_internal}
     (nil))
(insn 10 9 43 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])
        (reg:SI 1 dx [orig:245 _168 ] [245])) "CALVOR.f":71 86 {*movsi_internal}
     (nil))
;;  succ:       3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 246

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;;              7 [always] 
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 246
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 246
;; lr  def 	 17 [flags] 247 253
(code_label 43 10 11 3 5 (nil) [1 uses])
(note 11 43 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 12 11 13 3 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])
            (reg:SI 0 ax [orig:246 _169 ] [246]))) "CALVOR.f":71 11 {*cmpsi_1}
     (nil))
(insn 13 12 14 3 (set (reg:QI 1 dx [253])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALVOR.f":71 678 {*setcc_qi}
     (nil))
(insn 14 13 15 3 (set (reg:SI 1 dx [orig:247 _171 ] [247])
        (zero_extend:SI (reg:QI 1 dx [253]))) "CALVOR.f":71 140 {*zero_extendqisi2}
     (nil))
(insn 15 14 16 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:247 _171 ] [247])
            (const_int 0 [0]))) "CALVOR.f":71 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 16 15 17 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 329)
            (pc))) "CALVOR.f":71 682 {*jcc}
     (nil)
 -> 329)
;;  succ:       15
;;              4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 246

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 246
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 17 16 18 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 37 4 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
        (const_int 1 [0x1])) "CALVOR.f":72 86 {*movsi_internal}
     (nil))
;;  succ:       5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 246

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;;              6 [always] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 246
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 248 254
(code_label 37 18 19 5 4 (nil) [1 uses])
(note 19 37 20 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 20 19 21 5 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
            (const_int 119 [0x77]))) "CALVOR.f":72 11 {*cmpsi_1}
     (nil))
(insn 21 20 22 5 (set (reg:QI 1 dx [254])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALVOR.f":72 678 {*setcc_qi}
     (nil))
(insn 22 21 23 5 (set (reg:SI 1 dx [orig:248 _173 ] [248])
        (zero_extend:SI (reg:QI 1 dx [254]))) "CALVOR.f":72 140 {*zero_extendqisi2}
     (nil))
(insn 23 22 24 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:248 _173 ] [248])
            (const_int 0 [0]))) "CALVOR.f":72 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 24 23 25 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 332)
            (pc))) "CALVOR.f":72 682 {*jcc}
     (nil)
 -> 332)
;;  succ:       16
;;              6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 246

;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 16, flags: (RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 246
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 87 88 89 90 91 255 256 257 258
(note 25 24 26 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 6 (set (reg:SI 1 dx [255])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALVOR.f":73 86 {*movsi_internal}
     (nil))
(insn 27 26 28 6 (set (reg:DI 1 dx [orig:87 _1 ] [87])
        (sign_extend:DI (reg:SI 1 dx [255]))) "CALVOR.f":73 149 {*extendsidi2_rex64}
     (nil))
(insn 28 27 29 6 (parallel [
            (set (reg:DI 2 cx [orig:88 _2 ] [88])
                (mult:DI (reg:DI 1 dx [orig:87 _1 ] [87])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":73 349 {*muldi3_1}
     (nil))
(insn 29 28 30 6 (set (reg:SI 1 dx [256])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALVOR.f":73 86 {*movsi_internal}
     (nil))
(insn 30 29 31 6 (set (reg:DI 1 dx [orig:89 _3 ] [89])
        (sign_extend:DI (reg:SI 1 dx [256]))) "CALVOR.f":73 149 {*extendsidi2_rex64}
     (nil))
(insn 31 30 32 6 (parallel [
            (set (reg:DI 1 dx [orig:90 _4 ] [90])
                (plus:DI (reg:DI 1 dx [orig:89 _3 ] [89])
                    (reg:DI 2 cx [orig:88 _2 ] [88])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":73 222 {*adddi_1}
     (nil))
(insn 32 31 33 6 (parallel [
            (set (reg:DI 2 cx [orig:91 _5 ] [91])
                (plus:DI (reg:DI 1 dx [orig:90 _4 ] [90])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":73 222 {*adddi_1}
     (nil))
(insn 33 32 34 6 (set (reg/f:DI 1 dx [257])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [3 absv+0 S8 A64])) "CALVOR.f":73 85 {*movdi_internal}
     (nil))
(insn 34 33 35 6 (set (reg:SF 21 xmm0 [258])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) "CALVOR.f":73 131 {*movsf_internal}
     (nil))
(insn 35 34 36 6 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:91 _5 ] [91])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [257])) [2 *absv_174(D) S4 A32])
        (reg:SF 21 xmm0 [258])) "CALVOR.f":73 131 {*movsf_internal}
     (nil))
(insn 36 35 320 6 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":72 221 {*addsi_1}
     (nil))
(jump_insn 320 36 321 6 (set (pc)
        (label_ref 37)) "CALVOR.f":72 683 {jump}
     (nil)
 -> 37)
;;  succ:       5 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 246

(barrier 321 320 332)
;; basic block 16, loop depth 0, maybe hot
;;  prev block 6, next block 7, flags: (RTL, MODIFIED)
;;  pred:       5
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 246
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 332 321 331 16 12 (nil) [1 uses])
(note 331 332 333 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 333 331 40 16 (const_int 0 [0]) "CALVOR.f":73 718 {nop}
     (nil))
;;  succ:       7 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 246

;; basic block 7, loop depth 0, maybe hot
;;  prev block 16, next block 15, flags: (RTL, MODIFIED)
;;  pred:       16 [always]  (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 246
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 40 333 41 7 3 (nil) [0 uses])
(note 41 40 42 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 322 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":71 221 {*addsi_1}
     (nil))
(jump_insn 322 42 323 7 (set (pc)
        (label_ref 43)) "CALVOR.f":71 683 {jump}
     (nil)
 -> 43)
;;  succ:       3 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 246

(barrier 323 322 329)
;; basic block 15, loop depth 0, maybe hot
;;  prev block 7, next block 8, flags: (RTL, MODIFIED)
;;  pred:       3
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 329 323 328 15 11 (nil) [1 uses])
(note 328 329 330 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 330 328 46 15 (const_int 0 [0]) "CALVOR.f":72 718 {nop}
     (nil))
;;  succ:       8 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 8, loop depth 0, maybe hot
;;  prev block 15, next block 9, flags: (RTL, MODIFIED)
;;  pred:       15 [always]  (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 249 250 259
(code_label 46 330 47 8 2 (nil) [0 uses])
(note 47 46 48 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 48 47 49 8 (set (reg:DI 0 ax [259])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [3 uwnd+0 S8 A64])) "CALVOR.f":77 85 {*movdi_internal}
     (nil))
(insn 49 48 50 8 (set (reg:DI 5 di)
        (reg:DI 0 ax [259])) "CALVOR.f":77 85 {*movdi_internal}
     (nil))
(insn 50 49 51 8 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CALVOR.f":77 88 {*movqi_internal}
     (nil))
(call_insn 51 50 52 8 (call (mem:QI (symbol_ref:DI ("exch_") [flags 0x41]  <function_decl 0x7f07ddcc9600 exch>) [0 exch S1 A8])
        (const_int 0 [0])) "CALVOR.f":77 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 52 51 53 8 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("dynam_") [flags 0x202]  <var_decl 0x7f07ddcd1870 dynam>)
                (const_int 834496 [0xcbbc0])))) "CALVOR.f":78 85 {*movdi_internal}
     (nil))
(insn 53 52 54 8 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CALVOR.f":78 88 {*movqi_internal}
     (nil))
(call_insn 54 53 55 8 (call (mem:QI (symbol_ref:DI ("exch_") [flags 0x41]  <function_decl 0x7f07ddcc9600 exch>) [0 exch S1 A8])
        (const_int 0 [0])) "CALVOR.f":78 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 55 54 56 8 (set (reg:SI 0 ax [orig:249 _181 ] [249])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f07ddce1750 parallel>)
                    (const_int 24 [0x18]))) [1 parallel.jsta_m2+0 S4 A64])) "CALVOR.f":81 86 {*movsi_internal}
     (nil))
(insn 56 55 57 8 (set (reg:SI 3 bx [orig:250 _182 ] [250])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f07ddce1750 parallel>)
                    (const_int 28 [0x1c]))) [1 parallel.jend_m2+0 S4 A32])) "CALVOR.f":81 86 {*movsi_internal}
     (nil))
(insn 57 56 310 8 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])
        (reg:SI 0 ax [orig:249 _181 ] [249])) "CALVOR.f":81 86 {*movsi_internal}
     (nil))
;;  succ:       9 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 250

;; basic block 9, loop depth 0, maybe hot
;;  prev block 8, next block 10, flags: (RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;;              13 [always] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 250
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 250
;; lr  def 	 17 [flags] 251 260
(code_label 310 57 58 9 9 (nil) [1 uses])
(note 58 310 59 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 59 58 60 9 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])
            (reg:SI 3 bx [orig:250 _182 ] [250]))) "CALVOR.f":81 11 {*cmpsi_1}
     (nil))
(insn 60 59 61 9 (set (reg:QI 0 ax [260])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALVOR.f":81 678 {*setcc_qi}
     (nil))
(insn 61 60 62 9 (set (reg:SI 0 ax [orig:251 _184 ] [251])
        (zero_extend:SI (reg:QI 0 ax [260]))) "CALVOR.f":81 140 {*zero_extendqisi2}
     (nil))
(insn 62 61 63 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:251 _184 ] [251])
            (const_int 0 [0]))) "CALVOR.f":81 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 63 62 64 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 335)
            (pc))) "CALVOR.f":81 682 {*jcc}
     (nil)
 -> 335)
;;  succ:       17
;;              10 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 250

;; basic block 10, loop depth 0, maybe hot
;;  prev block 9, next block 11, flags: (RTL, MODIFIED)
;;  pred:       9 (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 250
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 92 93 94 95 261 262 263 264
(note 64 63 65 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 65 64 66 10 (set (reg:SI 0 ax [261])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALVOR.f":82 86 {*movsi_internal}
     (nil))
(insn 66 65 67 10 (parallel [
            (set (reg:SI 0 ax [orig:92 _6 ] [92])
                (plus:SI (reg:SI 0 ax [261])
                    (const_int -125 [0xffffffffffffff83])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":82 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int -125 [0xffffffffffffff83]))
        (nil)))
(insn 67 66 68 10 (set (reg:SF 22 xmm1 [orig:93 _7 ] [93])
        (float:SF (reg:SI 0 ax [orig:92 _6 ] [92]))) "CALVOR.f":82 203 {*floatsisf2_mixed}
     (nil))
(insn 68 67 69 10 (set (reg/f:DI 0 ax [262])
        (symbol_ref:DI ("mapot_") [flags 0x202]  <var_decl 0x7f07ddcd8b40 mapot>)) "CALVOR.f":1 85 {*movdi_internal}
     (nil))
(insn 69 68 70 10 (set (reg:SF 21 xmm0 [orig:94 _8 ] [94])
        (mem/c:SF (plus:DI (reg/f:DI 0 ax [262])
                (const_int 4000040 [0x3d0928])) [2 mapot.dphd+0 S4 A64])) "CALVOR.f":1 131 {*movsf_internal}
     (nil))
(insn 70 69 71 10 (set (reg:SF 22 xmm1 [orig:95 _9 ] [95])
        (mult:SF (reg:SF 22 xmm1 [orig:93 _7 ] [93])
            (reg:SF 21 xmm0 [orig:94 _8 ] [94]))) "CALVOR.f":82 838 {*fop_sf_comm}
     (nil))
(insn 71 70 72 10 (set (reg:SF 21 xmm0 [264])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S4 A32])) "CALVOR.f":82 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.7453290522098541259765625e-2 [0x0.8efa34p-5])
        (nil)))
(insn 72 71 73 10 (set (reg:SF 21 xmm0 [263])
        (mult:SF (reg:SF 21 xmm0 [264])
            (reg:SF 22 xmm1 [orig:95 _9 ] [95]))) "CALVOR.f":82 838 {*fop_sf_comm}
     (nil))
(insn 73 72 74 10 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 tphi+0 S4 A32])
        (reg:SF 21 xmm0 [263])) "CALVOR.f":82 131 {*movsf_internal}
     (nil))
(insn 74 73 304 10 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
        (const_int 2 [0x2])) "CALVOR.f":83 86 {*movsi_internal}
     (nil))
;;  succ:       11 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 250

;; basic block 11, loop depth 0, maybe hot
;;  prev block 10, next block 12, flags: (RTL, MODIFIED)
;;  pred:       10 (FALLTHRU)
;;              12 [always] 
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 250
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 252 265
(code_label 304 74 75 11 8 (nil) [1 uses])
(note 75 304 76 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 76 75 77 11 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
            (const_int 118 [0x76]))) "CALVOR.f":83 11 {*cmpsi_1}
     (nil))
(insn 77 76 78 11 (set (reg:QI 0 ax [265])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALVOR.f":83 678 {*setcc_qi}
     (nil))
(insn 78 77 79 11 (set (reg:SI 0 ax [orig:252 _187 ] [252])
        (zero_extend:SI (reg:QI 0 ax [265]))) "CALVOR.f":83 140 {*zero_extendqisi2}
     (nil))
(insn 79 78 80 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:252 _187 ] [252])
            (const_int 0 [0]))) "CALVOR.f":83 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 80 79 81 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 338)
            (pc))) "CALVOR.f":83 682 {*jcc}
     (nil)
 -> 338)
;;  succ:       18
;;              12 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 250

;; basic block 12, loop depth 0, maybe hot
;;  prev block 11, next block 18, flags: (RTL, MODIFIED)
;;  pred:       11 (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 250
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332
(note 81 80 82 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 82 81 83 12 (set (reg:SI 0 ax [266])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALVOR.f":85 86 {*movsi_internal}
     (nil))
(insn 83 82 84 12 (set (reg:DI 0 ax [orig:96 _10 ] [96])
        (sign_extend:DI (reg:SI 0 ax [266]))) "CALVOR.f":85 149 {*extendsidi2_rex64}
     (nil))
(insn 84 83 85 12 (parallel [
            (set (reg:DI 1 dx [orig:97 _11 ] [97])
                (mult:DI (reg:DI 0 ax [orig:96 _10 ] [96])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":85 349 {*muldi3_1}
     (nil))
(insn 85 84 86 12 (set (reg:SI 0 ax [267])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALVOR.f":85 86 {*movsi_internal}
     (nil))
(insn 86 85 87 12 (set (reg:DI 0 ax [orig:98 _12 ] [98])
        (sign_extend:DI (reg:SI 0 ax [267]))) "CALVOR.f":85 149 {*extendsidi2_rex64}
     (nil))
(insn 87 86 88 12 (parallel [
            (set (reg:DI 0 ax [orig:99 _13 ] [99])
                (plus:DI (reg:DI 0 ax [orig:98 _12 ] [98])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":85 222 {*adddi_1}
     (nil))
(insn 88 87 89 12 (set (reg:SI 2 cx [orig:100 _14 ] [100])
        (mem:SI (plus:DI (mult:DI (reg:DI 0 ax [orig:99 _13 ] [99])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("indx_") [flags 0x2]  <var_decl 0x7f07ddcd8870 indx>)) [1 indx.ihe S4 A32])) "CALVOR.f":85 86 {*movsi_internal}
     (nil))
(insn 89 88 90 12 (set (reg:SI 0 ax [268])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALVOR.f":85 86 {*movsi_internal}
     (nil))
(insn 90 89 91 12 (parallel [
            (set (reg:SI 0 ax [orig:101 _15 ] [101])
                (plus:SI (reg:SI 0 ax [268])
                    (reg:SI 2 cx [orig:100 _14 ] [100])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":85 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (reg:SI 2 cx [orig:100 _14 ] [100])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32]))
        (nil)))
(insn 91 90 92 12 (set (reg:DI 0 ax [orig:102 _16 ] [102])
        (sign_extend:DI (reg:SI 0 ax [orig:101 _15 ] [101]))) "CALVOR.f":85 149 {*extendsidi2_rex64}
     (nil))
(insn 92 91 93 12 (parallel [
            (set (reg:DI 0 ax [orig:103 _17 ] [103])
                (plus:DI (reg:DI 0 ax [orig:102 _16 ] [102])
                    (reg:DI 1 dx [orig:97 _11 ] [97])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":85 222 {*adddi_1}
     (nil))
(insn 93 92 94 12 (parallel [
            (set (reg:DI 1 dx [orig:104 _18 ] [104])
                (plus:DI (reg:DI 0 ax [orig:103 _17 ] [103])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":85 222 {*adddi_1}
     (nil))
(insn 94 93 95 12 (set (reg/f:DI 0 ax [269])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [3 uwnd+0 S8 A64])) "CALVOR.f":85 85 {*movdi_internal}
     (nil))
(insn 95 94 96 12 (set (reg:SF 22 xmm1 [orig:105 _19 ] [105])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:104 _18 ] [104])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [269])) [2 *uwnd_178(D) S4 A32])) "CALVOR.f":85 131 {*movsf_internal}
     (nil))
(insn 96 95 97 12 (set (reg:SI 0 ax [270])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALVOR.f":85 86 {*movsi_internal}
     (nil))
(insn 97 96 98 12 (set (reg:DI 0 ax [orig:106 _20 ] [106])
        (sign_extend:DI (reg:SI 0 ax [270]))) "CALVOR.f":85 149 {*extendsidi2_rex64}
     (nil))
(insn 98 97 99 12 (parallel [
            (set (reg:DI 1 dx [orig:107 _21 ] [107])
                (mult:DI (reg:DI 0 ax [orig:106 _20 ] [106])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":85 349 {*muldi3_1}
     (nil))
(insn 99 98 100 12 (set (reg:SI 0 ax [271])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALVOR.f":85 86 {*movsi_internal}
     (nil))
(insn 100 99 101 12 (set (reg:DI 0 ax [orig:108 _22 ] [108])
        (sign_extend:DI (reg:SI 0 ax [271]))) "CALVOR.f":85 149 {*extendsidi2_rex64}
     (nil))
(insn 101 100 102 12 (parallel [
            (set (reg:DI 0 ax [orig:109 _23 ] [109])
                (plus:DI (reg:DI 0 ax [orig:108 _22 ] [108])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":85 222 {*adddi_1}
     (nil))
(insn 102 101 103 12 (parallel [
            (set (reg:DI 0 ax [272])
                (plus:DI (reg:DI 0 ax [orig:109 _23 ] [109])
                    (const_int 249 [0xf9])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":85 222 {*adddi_1}
     (nil))
(insn 103 102 104 12 (set (reg:SI 2 cx [orig:110 _24 ] [110])
        (mem:SI (plus:DI (mult:DI (reg:DI 0 ax [272])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("indx_") [flags 0x2]  <var_decl 0x7f07ddcd8870 indx>)) [1 indx.ihw S4 A32])) "CALVOR.f":85 86 {*movsi_internal}
     (nil))
(insn 104 103 105 12 (set (reg:SI 0 ax [273])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALVOR.f":85 86 {*movsi_internal}
     (nil))
(insn 105 104 106 12 (parallel [
            (set (reg:SI 0 ax [orig:111 _25 ] [111])
                (plus:SI (reg:SI 0 ax [273])
                    (reg:SI 2 cx [orig:110 _24 ] [110])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":85 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (reg:SI 2 cx [orig:110 _24 ] [110])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32]))
        (nil)))
(insn 106 105 107 12 (set (reg:DI 0 ax [orig:112 _26 ] [112])
        (sign_extend:DI (reg:SI 0 ax [orig:111 _25 ] [111]))) "CALVOR.f":85 149 {*extendsidi2_rex64}
     (nil))
(insn 107 106 108 12 (parallel [
            (set (reg:DI 0 ax [orig:113 _27 ] [113])
                (plus:DI (reg:DI 0 ax [orig:112 _26 ] [112])
                    (reg:DI 1 dx [orig:107 _21 ] [107])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":85 222 {*adddi_1}
     (nil))
(insn 108 107 109 12 (parallel [
            (set (reg:DI 1 dx [orig:114 _28 ] [114])
                (plus:DI (reg:DI 0 ax [orig:113 _27 ] [113])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":85 222 {*adddi_1}
     (nil))
(insn 109 108 110 12 (set (reg/f:DI 0 ax [274])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [3 uwnd+0 S8 A64])) "CALVOR.f":85 85 {*movdi_internal}
     (nil))
(insn 110 109 111 12 (set (reg:SF 21 xmm0 [orig:115 _29 ] [115])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:114 _28 ] [114])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [274])) [2 *uwnd_178(D) S4 A32])) "CALVOR.f":85 131 {*movsf_internal}
     (nil))
(insn 111 110 112 12 (set (reg:SF 22 xmm1 [orig:116 _30 ] [116])
        (plus:SF (reg:SF 22 xmm1 [orig:105 _19 ] [105])
            (reg:SF 21 xmm0 [orig:115 _29 ] [115]))) "CALVOR.f":85 838 {*fop_sf_comm}
     (nil))
(insn 112 111 113 12 (set (reg:SI 0 ax [275])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALVOR.f":85 86 {*movsi_internal}
     (nil))
(insn 113 112 114 12 (parallel [
            (set (reg:SI 0 ax [orig:117 _31 ] [117])
                (plus:SI (reg:SI 0 ax [275])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":85 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 114 113 115 12 (set (reg:DI 0 ax [orig:118 _32 ] [118])
        (sign_extend:DI (reg:SI 0 ax [orig:117 _31 ] [117]))) "CALVOR.f":85 149 {*extendsidi2_rex64}
     (nil))
(insn 115 114 116 12 (parallel [
            (set (reg:DI 1 dx [orig:119 _33 ] [119])
                (mult:DI (reg:DI 0 ax [orig:118 _32 ] [118])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":85 349 {*muldi3_1}
     (nil))
(insn 116 115 117 12 (set (reg:SI 0 ax [276])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALVOR.f":85 86 {*movsi_internal}
     (nil))
(insn 117 116 118 12 (set (reg:DI 0 ax [orig:120 _34 ] [120])
        (sign_extend:DI (reg:SI 0 ax [276]))) "CALVOR.f":85 149 {*extendsidi2_rex64}
     (nil))
(insn 118 117 119 12 (parallel [
            (set (reg:DI 0 ax [orig:121 _35 ] [121])
                (plus:DI (reg:DI 0 ax [orig:120 _34 ] [120])
                    (reg:DI 1 dx [orig:119 _33 ] [119])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":85 222 {*adddi_1}
     (nil))
(insn 119 118 120 12 (parallel [
            (set (reg:DI 1 dx [orig:122 _36 ] [122])
                (plus:DI (reg:DI 0 ax [orig:121 _35 ] [121])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":85 222 {*adddi_1}
     (nil))
(insn 120 119 121 12 (set (reg/f:DI 0 ax [277])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [3 uwnd+0 S8 A64])) "CALVOR.f":85 85 {*movdi_internal}
     (nil))
(insn 121 120 122 12 (set (reg:SF 21 xmm0 [orig:123 _37 ] [123])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:122 _36 ] [122])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [277])) [2 *uwnd_178(D) S4 A32])) "CALVOR.f":85 131 {*movsf_internal}
     (nil))
(insn 122 121 123 12 (set (reg:SF 22 xmm1 [orig:124 _38 ] [124])
        (plus:SF (reg:SF 22 xmm1 [orig:116 _30 ] [116])
            (reg:SF 21 xmm0 [orig:123 _37 ] [123]))) "CALVOR.f":85 838 {*fop_sf_comm}
     (nil))
(insn 123 122 124 12 (set (reg:SI 0 ax [278])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALVOR.f":85 86 {*movsi_internal}
     (nil))
(insn 124 123 125 12 (parallel [
            (set (reg:SI 0 ax [orig:125 _39 ] [125])
                (plus:SI (reg:SI 0 ax [278])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":85 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 125 124 126 12 (set (reg:DI 0 ax [orig:126 _40 ] [126])
        (sign_extend:DI (reg:SI 0 ax [orig:125 _39 ] [125]))) "CALVOR.f":85 149 {*extendsidi2_rex64}
     (nil))
(insn 126 125 127 12 (parallel [
            (set (reg:DI 1 dx [orig:127 _41 ] [127])
                (mult:DI (reg:DI 0 ax [orig:126 _40 ] [126])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":85 349 {*muldi3_1}
     (nil))
(insn 127 126 128 12 (set (reg:SI 0 ax [279])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALVOR.f":85 86 {*movsi_internal}
     (nil))
(insn 128 127 129 12 (set (reg:DI 0 ax [orig:128 _42 ] [128])
        (sign_extend:DI (reg:SI 0 ax [279]))) "CALVOR.f":85 149 {*extendsidi2_rex64}
     (nil))
(insn 129 128 130 12 (parallel [
            (set (reg:DI 0 ax [orig:129 _43 ] [129])
                (plus:DI (reg:DI 0 ax [orig:128 _42 ] [128])
                    (reg:DI 1 dx [orig:127 _41 ] [127])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":85 222 {*adddi_1}
     (nil))
(insn 130 129 131 12 (parallel [
            (set (reg:DI 1 dx [orig:130 _44 ] [130])
                (plus:DI (reg:DI 0 ax [orig:129 _43 ] [129])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":85 222 {*adddi_1}
     (nil))
(insn 131 130 132 12 (set (reg/f:DI 0 ax [280])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [3 uwnd+0 S8 A64])) "CALVOR.f":85 85 {*movdi_internal}
     (nil))
(insn 132 131 133 12 (set (reg:SF 21 xmm0 [orig:131 _45 ] [131])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:130 _44 ] [130])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [280])) [2 *uwnd_178(D) S4 A32])) "CALVOR.f":85 131 {*movsf_internal}
     (nil))
(insn 133 132 134 12 (set (reg:SF 21 xmm0 [orig:132 _46 ] [132])
        (plus:SF (reg:SF 21 xmm0 [orig:131 _45 ] [131])
            (reg:SF 22 xmm1 [orig:124 _38 ] [124]))) "CALVOR.f":85 838 {*fop_sf_comm}
     (nil))
(insn 134 133 135 12 (set (reg:SF 22 xmm1 [orig:133 _47 ] [133])
        (reg:SF 21 xmm0 [orig:132 _46 ] [132])) "CALVOR.f":85 131 {*movsf_internal}
     (nil))
(insn 135 134 136 12 (set (reg:SF 21 xmm0 [282])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0  S4 A32])) "CALVOR.f":85 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 2.5e-1 [0x0.8p-1])
        (nil)))
(insn 136 135 137 12 (set (reg:SF 21 xmm0 [281])
        (mult:SF (reg:SF 21 xmm0 [282])
            (reg:SF 22 xmm1 [orig:133 _47 ] [133]))) "CALVOR.f":85 838 {*fop_sf_comm}
     (nil))
(insn 137 136 138 12 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 uavg+0 S4 A32])
        (reg:SF 21 xmm0 [281])) "CALVOR.f":85 131 {*movsf_internal}
     (nil))
(insn 138 137 139 12 (set (reg:SI 0 ax [283])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALVOR.f":87 86 {*movsi_internal}
     (nil))
(insn 139 138 140 12 (set (reg:DI 0 ax [orig:134 _48 ] [134])
        (sign_extend:DI (reg:SI 0 ax [283]))) "CALVOR.f":87 149 {*extendsidi2_rex64}
     (nil))
(insn 140 139 141 12 (parallel [
            (set (reg:DI 1 dx [orig:135 _49 ] [135])
                (mult:DI (reg:DI 0 ax [orig:134 _48 ] [134])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":87 349 {*muldi3_1}
     (nil))
(insn 141 140 142 12 (set (reg:SI 0 ax [284])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALVOR.f":87 86 {*movsi_internal}
     (nil))
(insn 142 141 143 12 (set (reg:DI 0 ax [orig:136 _50 ] [136])
        (sign_extend:DI (reg:SI 0 ax [284]))) "CALVOR.f":87 149 {*extendsidi2_rex64}
     (nil))
(insn 143 142 144 12 (parallel [
            (set (reg:DI 0 ax [orig:137 _51 ] [137])
                (plus:DI (reg:DI 0 ax [orig:136 _50 ] [136])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":87 222 {*adddi_1}
     (nil))
(insn 144 143 145 12 (set (reg:SI 2 cx [orig:138 _52 ] [138])
        (mem:SI (plus:DI (mult:DI (reg:DI 0 ax [orig:137 _51 ] [137])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("indx_") [flags 0x2]  <var_decl 0x7f07ddcd8870 indx>)) [1 indx.ihe S4 A32])) "CALVOR.f":87 86 {*movsi_internal}
     (nil))
(insn 145 144 146 12 (set (reg:SI 0 ax [285])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALVOR.f":87 86 {*movsi_internal}
     (nil))
(insn 146 145 147 12 (parallel [
            (set (reg:SI 0 ax [orig:139 _53 ] [139])
                (plus:SI (reg:SI 0 ax [285])
                    (reg:SI 2 cx [orig:138 _52 ] [138])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":87 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (reg:SI 2 cx [orig:138 _52 ] [138])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32]))
        (nil)))
(insn 147 146 148 12 (set (reg:DI 0 ax [orig:140 _54 ] [140])
        (sign_extend:DI (reg:SI 0 ax [orig:139 _53 ] [139]))) "CALVOR.f":87 149 {*extendsidi2_rex64}
     (nil))
(insn 148 147 149 12 (parallel [
            (set (reg:DI 0 ax [orig:141 _55 ] [141])
                (plus:DI (reg:DI 0 ax [orig:140 _54 ] [140])
                    (reg:DI 1 dx [orig:135 _49 ] [135])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":87 222 {*adddi_1}
     (nil))
(insn 149 148 150 12 (parallel [
            (set (reg:DI 1 dx [orig:142 _56 ] [142])
                (plus:DI (reg:DI 0 ax [orig:141 _55 ] [141])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":87 222 {*adddi_1}
     (nil))
(insn 150 149 151 12 (set (reg/f:DI 0 ax [286])
        (symbol_ref:DI ("dynam_") [flags 0x202]  <var_decl 0x7f07ddcd1870 dynam>)) "CALVOR.f":87 85 {*movdi_internal}
     (nil))
(insn 151 150 152 12 (parallel [
            (set (reg:DI 1 dx [287])
                (plus:DI (reg:DI 1 dx [orig:142 _56 ] [142])
                    (const_int 208624 [0x32ef0])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":87 222 {*adddi_1}
     (nil))
(insn 152 151 153 12 (set (reg:SF 22 xmm1 [orig:143 _57 ] [143])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [287])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [286])) [2 dynam.f S4 A32])) "CALVOR.f":87 131 {*movsf_internal}
     (nil))
(insn 153 152 154 12 (set (reg:SI 0 ax [288])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALVOR.f":87 86 {*movsi_internal}
     (nil))
(insn 154 153 155 12 (set (reg:DI 0 ax [orig:144 _58 ] [144])
        (sign_extend:DI (reg:SI 0 ax [288]))) "CALVOR.f":87 149 {*extendsidi2_rex64}
     (nil))
(insn 155 154 156 12 (parallel [
            (set (reg:DI 1 dx [orig:145 _59 ] [145])
                (mult:DI (reg:DI 0 ax [orig:144 _58 ] [144])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":87 349 {*muldi3_1}
     (nil))
(insn 156 155 157 12 (set (reg:SI 0 ax [289])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALVOR.f":87 86 {*movsi_internal}
     (nil))
(insn 157 156 158 12 (set (reg:DI 0 ax [orig:146 _60 ] [146])
        (sign_extend:DI (reg:SI 0 ax [289]))) "CALVOR.f":87 149 {*extendsidi2_rex64}
     (nil))
(insn 158 157 159 12 (parallel [
            (set (reg:DI 0 ax [orig:147 _61 ] [147])
                (plus:DI (reg:DI 0 ax [orig:146 _60 ] [146])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":87 222 {*adddi_1}
     (nil))
(insn 159 158 160 12 (parallel [
            (set (reg:DI 0 ax [290])
                (plus:DI (reg:DI 0 ax [orig:147 _61 ] [147])
                    (const_int 249 [0xf9])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":87 222 {*adddi_1}
     (nil))
(insn 160 159 161 12 (set (reg:SI 2 cx [orig:148 _62 ] [148])
        (mem:SI (plus:DI (mult:DI (reg:DI 0 ax [290])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("indx_") [flags 0x2]  <var_decl 0x7f07ddcd8870 indx>)) [1 indx.ihw S4 A32])) "CALVOR.f":87 86 {*movsi_internal}
     (nil))
(insn 161 160 162 12 (set (reg:SI 0 ax [291])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALVOR.f":87 86 {*movsi_internal}
     (nil))
(insn 162 161 163 12 (parallel [
            (set (reg:SI 0 ax [orig:149 _63 ] [149])
                (plus:SI (reg:SI 0 ax [291])
                    (reg:SI 2 cx [orig:148 _62 ] [148])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":87 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (reg:SI 2 cx [orig:148 _62 ] [148])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32]))
        (nil)))
(insn 163 162 164 12 (set (reg:DI 0 ax [orig:150 _64 ] [150])
        (sign_extend:DI (reg:SI 0 ax [orig:149 _63 ] [149]))) "CALVOR.f":87 149 {*extendsidi2_rex64}
     (nil))
(insn 164 163 165 12 (parallel [
            (set (reg:DI 0 ax [orig:151 _65 ] [151])
                (plus:DI (reg:DI 0 ax [orig:150 _64 ] [150])
                    (reg:DI 1 dx [orig:145 _59 ] [145])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":87 222 {*adddi_1}
     (nil))
(insn 165 164 166 12 (parallel [
            (set (reg:DI 1 dx [orig:152 _66 ] [152])
                (plus:DI (reg:DI 0 ax [orig:151 _65 ] [151])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":87 222 {*adddi_1}
     (nil))
(insn 166 165 167 12 (set (reg/f:DI 0 ax [292])
        (symbol_ref:DI ("dynam_") [flags 0x202]  <var_decl 0x7f07ddcd1870 dynam>)) "CALVOR.f":87 85 {*movdi_internal}
     (nil))
(insn 167 166 168 12 (parallel [
            (set (reg:DI 1 dx [293])
                (plus:DI (reg:DI 1 dx [orig:152 _66 ] [152])
                    (const_int 208624 [0x32ef0])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":87 222 {*adddi_1}
     (nil))
(insn 168 167 169 12 (set (reg:SF 21 xmm0 [orig:153 _67 ] [153])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [293])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [292])) [2 dynam.f S4 A32])) "CALVOR.f":87 131 {*movsf_internal}
     (nil))
(insn 169 168 170 12 (set (reg:SF 22 xmm1 [orig:154 _68 ] [154])
        (plus:SF (reg:SF 22 xmm1 [orig:143 _57 ] [143])
            (reg:SF 21 xmm0 [orig:153 _67 ] [153]))) "CALVOR.f":87 838 {*fop_sf_comm}
     (nil))
(insn 170 169 171 12 (set (reg:SI 0 ax [294])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALVOR.f":87 86 {*movsi_internal}
     (nil))
(insn 171 170 172 12 (parallel [
            (set (reg:SI 0 ax [orig:155 _69 ] [155])
                (plus:SI (reg:SI 0 ax [294])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":87 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 172 171 173 12 (set (reg:DI 0 ax [orig:156 _70 ] [156])
        (sign_extend:DI (reg:SI 0 ax [orig:155 _69 ] [155]))) "CALVOR.f":87 149 {*extendsidi2_rex64}
     (nil))
(insn 173 172 174 12 (parallel [
            (set (reg:DI 1 dx [orig:157 _71 ] [157])
                (mult:DI (reg:DI 0 ax [orig:156 _70 ] [156])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":87 349 {*muldi3_1}
     (nil))
(insn 174 173 175 12 (set (reg:SI 0 ax [295])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALVOR.f":87 86 {*movsi_internal}
     (nil))
(insn 175 174 176 12 (set (reg:DI 0 ax [orig:158 _72 ] [158])
        (sign_extend:DI (reg:SI 0 ax [295]))) "CALVOR.f":87 149 {*extendsidi2_rex64}
     (nil))
(insn 176 175 177 12 (parallel [
            (set (reg:DI 0 ax [orig:159 _73 ] [159])
                (plus:DI (reg:DI 0 ax [orig:158 _72 ] [158])
                    (reg:DI 1 dx [orig:157 _71 ] [157])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":87 222 {*adddi_1}
     (nil))
(insn 177 176 178 12 (parallel [
            (set (reg:DI 1 dx [orig:160 _74 ] [160])
                (plus:DI (reg:DI 0 ax [orig:159 _73 ] [159])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":87 222 {*adddi_1}
     (nil))
(insn 178 177 179 12 (set (reg/f:DI 0 ax [296])
        (symbol_ref:DI ("dynam_") [flags 0x202]  <var_decl 0x7f07ddcd1870 dynam>)) "CALVOR.f":87 85 {*movdi_internal}
     (nil))
(insn 179 178 180 12 (parallel [
            (set (reg:DI 1 dx [297])
                (plus:DI (reg:DI 1 dx [orig:160 _74 ] [160])
                    (const_int 208624 [0x32ef0])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":87 222 {*adddi_1}
     (nil))
(insn 180 179 181 12 (set (reg:SF 21 xmm0 [orig:161 _75 ] [161])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [297])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [296])) [2 dynam.f S4 A32])) "CALVOR.f":87 131 {*movsf_internal}
     (nil))
(insn 181 180 182 12 (set (reg:SF 22 xmm1 [orig:162 _76 ] [162])
        (plus:SF (reg:SF 22 xmm1 [orig:154 _68 ] [154])
            (reg:SF 21 xmm0 [orig:161 _75 ] [161]))) "CALVOR.f":87 838 {*fop_sf_comm}
     (nil))
(insn 182 181 183 12 (set (reg:SI 0 ax [298])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALVOR.f":87 86 {*movsi_internal}
     (nil))
(insn 183 182 184 12 (parallel [
            (set (reg:SI 0 ax [orig:163 _77 ] [163])
                (plus:SI (reg:SI 0 ax [298])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":87 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 184 183 185 12 (set (reg:DI 0 ax [orig:164 _78 ] [164])
        (sign_extend:DI (reg:SI 0 ax [orig:163 _77 ] [163]))) "CALVOR.f":87 149 {*extendsidi2_rex64}
     (nil))
(insn 185 184 186 12 (parallel [
            (set (reg:DI 1 dx [orig:165 _79 ] [165])
                (mult:DI (reg:DI 0 ax [orig:164 _78 ] [164])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":87 349 {*muldi3_1}
     (nil))
(insn 186 185 187 12 (set (reg:SI 0 ax [299])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALVOR.f":87 86 {*movsi_internal}
     (nil))
(insn 187 186 188 12 (set (reg:DI 0 ax [orig:166 _80 ] [166])
        (sign_extend:DI (reg:SI 0 ax [299]))) "CALVOR.f":87 149 {*extendsidi2_rex64}
     (nil))
(insn 188 187 189 12 (parallel [
            (set (reg:DI 0 ax [orig:167 _81 ] [167])
                (plus:DI (reg:DI 0 ax [orig:166 _80 ] [166])
                    (reg:DI 1 dx [orig:165 _79 ] [165])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":87 222 {*adddi_1}
     (nil))
(insn 189 188 190 12 (parallel [
            (set (reg:DI 1 dx [orig:168 _82 ] [168])
                (plus:DI (reg:DI 0 ax [orig:167 _81 ] [167])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":87 222 {*adddi_1}
     (nil))
(insn 190 189 191 12 (set (reg/f:DI 0 ax [300])
        (symbol_ref:DI ("dynam_") [flags 0x202]  <var_decl 0x7f07ddcd1870 dynam>)) "CALVOR.f":87 85 {*movdi_internal}
     (nil))
(insn 191 190 192 12 (parallel [
            (set (reg:DI 1 dx [301])
                (plus:DI (reg:DI 1 dx [orig:168 _82 ] [168])
                    (const_int 208624 [0x32ef0])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":87 222 {*adddi_1}
     (nil))
(insn 192 191 193 12 (set (reg:SF 21 xmm0 [orig:169 _83 ] [169])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [301])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [300])) [2 dynam.f S4 A32])) "CALVOR.f":87 131 {*movsf_internal}
     (nil))
(insn 193 192 194 12 (set (reg:SF 21 xmm0 [orig:170 _84 ] [170])
        (plus:SF (reg:SF 21 xmm0 [orig:169 _83 ] [169])
            (reg:SF 22 xmm1 [orig:162 _76 ] [162]))) "CALVOR.f":87 838 {*fop_sf_comm}
     (nil))
(insn 194 193 195 12 (set (reg:SF 22 xmm1 [orig:171 _85 ] [171])
        (reg:SF 21 xmm0 [orig:170 _84 ] [170])) "CALVOR.f":87 131 {*movsf_internal}
     (nil))
(insn 195 194 196 12 (set (reg:SF 21 xmm0 [303])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0  S4 A32])) "CALVOR.f":87 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 2.5e-1 [0x0.8p-1])
        (nil)))
(insn 196 195 197 12 (set (reg:SF 21 xmm0 [302])
        (mult:SF (reg:SF 21 xmm0 [303])
            (reg:SF 22 xmm1 [orig:171 _85 ] [171]))) "CALVOR.f":87 838 {*fop_sf_comm}
     (nil))
(insn 197 196 198 12 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 favg+0 S4 A32])
        (reg:SF 21 xmm0 [302])) "CALVOR.f":87 131 {*movsf_internal}
     (nil))
(insn 198 197 199 12 (set (reg:SI 0 ax [304])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALVOR.f":90 86 {*movsi_internal}
     (nil))
(insn 199 198 200 12 (set (reg:DI 0 ax [orig:172 _86 ] [172])
        (sign_extend:DI (reg:SI 0 ax [304]))) "CALVOR.f":90 149 {*extendsidi2_rex64}
     (nil))
(insn 200 199 201 12 (parallel [
            (set (reg:DI 1 dx [orig:173 _87 ] [173])
                (mult:DI (reg:DI 0 ax [orig:172 _86 ] [172])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":90 349 {*muldi3_1}
     (nil))
(insn 201 200 202 12 (set (reg:SI 0 ax [305])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALVOR.f":90 86 {*movsi_internal}
     (nil))
(insn 202 201 203 12 (set (reg:DI 0 ax [orig:174 _88 ] [174])
        (sign_extend:DI (reg:SI 0 ax [305]))) "CALVOR.f":90 149 {*extendsidi2_rex64}
     (nil))
(insn 203 202 204 12 (parallel [
            (set (reg:DI 0 ax [orig:175 _89 ] [175])
                (plus:DI (reg:DI 0 ax [orig:174 _88 ] [174])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":90 222 {*adddi_1}
     (nil))
(insn 204 203 205 12 (set (reg:SI 2 cx [orig:176 _90 ] [176])
        (mem:SI (plus:DI (mult:DI (reg:DI 0 ax [orig:175 _89 ] [175])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("indx_") [flags 0x2]  <var_decl 0x7f07ddcd8870 indx>)) [1 indx.ihe S4 A32])) "CALVOR.f":90 86 {*movsi_internal}
     (nil))
(insn 205 204 206 12 (set (reg:SI 0 ax [306])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALVOR.f":90 86 {*movsi_internal}
     (nil))
(insn 206 205 207 12 (parallel [
            (set (reg:SI 0 ax [orig:177 _91 ] [177])
                (plus:SI (reg:SI 0 ax [306])
                    (reg:SI 2 cx [orig:176 _90 ] [176])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":90 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (reg:SI 2 cx [orig:176 _90 ] [176])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32]))
        (nil)))
(insn 207 206 208 12 (set (reg:DI 0 ax [orig:178 _92 ] [178])
        (sign_extend:DI (reg:SI 0 ax [orig:177 _91 ] [177]))) "CALVOR.f":90 149 {*extendsidi2_rex64}
     (nil))
(insn 208 207 209 12 (parallel [
            (set (reg:DI 0 ax [orig:179 _93 ] [179])
                (plus:DI (reg:DI 0 ax [orig:178 _92 ] [178])
                    (reg:DI 1 dx [orig:173 _87 ] [173])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":90 222 {*adddi_1}
     (nil))
(insn 209 208 210 12 (parallel [
            (set (reg:DI 1 dx [orig:180 _94 ] [180])
                (plus:DI (reg:DI 0 ax [orig:179 _93 ] [179])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":90 222 {*adddi_1}
     (nil))
(insn 210 209 211 12 (set (reg/f:DI 0 ax [307])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [3 vwnd+0 S8 A64])) "CALVOR.f":90 85 {*movdi_internal}
     (nil))
(insn 211 210 212 12 (set (reg:SF 21 xmm0 [orig:181 _95 ] [181])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:180 _94 ] [180])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [307])) [2 *vwnd_190(D) S4 A32])) "CALVOR.f":90 131 {*movsf_internal}
     (nil))
(insn 212 211 213 12 (set (reg:SI 0 ax [308])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALVOR.f":90 86 {*movsi_internal}
     (nil))
(insn 213 212 214 12 (set (reg:DI 0 ax [orig:182 _96 ] [182])
        (sign_extend:DI (reg:SI 0 ax [308]))) "CALVOR.f":90 149 {*extendsidi2_rex64}
     (nil))
(insn 214 213 215 12 (parallel [
            (set (reg:DI 1 dx [orig:183 _97 ] [183])
                (mult:DI (reg:DI 0 ax [orig:182 _96 ] [182])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":90 349 {*muldi3_1}
     (nil))
(insn 215 214 216 12 (set (reg:SI 0 ax [309])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALVOR.f":90 86 {*movsi_internal}
     (nil))
(insn 216 215 217 12 (set (reg:DI 0 ax [orig:184 _98 ] [184])
        (sign_extend:DI (reg:SI 0 ax [309]))) "CALVOR.f":90 149 {*extendsidi2_rex64}
     (nil))
(insn 217 216 218 12 (parallel [
            (set (reg:DI 0 ax [orig:185 _99 ] [185])
                (plus:DI (reg:DI 0 ax [orig:184 _98 ] [184])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":90 222 {*adddi_1}
     (nil))
(insn 218 217 219 12 (parallel [
            (set (reg:DI 0 ax [310])
                (plus:DI (reg:DI 0 ax [orig:185 _99 ] [185])
                    (const_int 249 [0xf9])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":90 222 {*adddi_1}
     (nil))
(insn 219 218 220 12 (set (reg:SI 2 cx [orig:186 _100 ] [186])
        (mem:SI (plus:DI (mult:DI (reg:DI 0 ax [310])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("indx_") [flags 0x2]  <var_decl 0x7f07ddcd8870 indx>)) [1 indx.ihw S4 A32])) "CALVOR.f":90 86 {*movsi_internal}
     (nil))
(insn 220 219 221 12 (set (reg:SI 0 ax [311])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALVOR.f":90 86 {*movsi_internal}
     (nil))
(insn 221 220 222 12 (parallel [
            (set (reg:SI 0 ax [orig:187 _101 ] [187])
                (plus:SI (reg:SI 0 ax [311])
                    (reg:SI 2 cx [orig:186 _100 ] [186])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":90 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (reg:SI 2 cx [orig:186 _100 ] [186])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32]))
        (nil)))
(insn 222 221 223 12 (set (reg:DI 0 ax [orig:188 _102 ] [188])
        (sign_extend:DI (reg:SI 0 ax [orig:187 _101 ] [187]))) "CALVOR.f":90 149 {*extendsidi2_rex64}
     (nil))
(insn 223 222 224 12 (parallel [
            (set (reg:DI 0 ax [orig:189 _103 ] [189])
                (plus:DI (reg:DI 0 ax [orig:188 _102 ] [188])
                    (reg:DI 1 dx [orig:183 _97 ] [183])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":90 222 {*adddi_1}
     (nil))
(insn 224 223 225 12 (parallel [
            (set (reg:DI 1 dx [orig:190 _104 ] [190])
                (plus:DI (reg:DI 0 ax [orig:189 _103 ] [189])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":90 222 {*adddi_1}
     (nil))
(insn 225 224 226 12 (set (reg/f:DI 0 ax [312])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [3 vwnd+0 S8 A64])) "CALVOR.f":90 85 {*movdi_internal}
     (nil))
(insn 226 225 227 12 (set (reg:SF 22 xmm1 [orig:191 _105 ] [191])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:190 _104 ] [190])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [312])) [2 *vwnd_190(D) S4 A32])) "CALVOR.f":90 131 {*movsf_internal}
     (nil))
(insn 227 226 228 12 (set (reg:SF 21 xmm0 [orig:192 _106 ] [192])
        (minus:SF (reg:SF 21 xmm0 [orig:181 _95 ] [181])
            (reg:SF 22 xmm1 [orig:191 _105 ] [191]))) "CALVOR.f":90 841 {*fop_sf_1}
     (nil))
(insn 228 227 229 12 (set (reg:SF 22 xmm1 [orig:193 _107 ] [193])
        (reg:SF 21 xmm0 [orig:192 _106 ] [192])) "CALVOR.f":90 131 {*movsf_internal}
     (nil))
(insn 229 228 230 12 (set (reg:SI 0 ax [313])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALVOR.f":90 86 {*movsi_internal}
     (nil))
(insn 230 229 231 12 (set (reg:DI 0 ax [orig:194 _108 ] [194])
        (sign_extend:DI (reg:SI 0 ax [313]))) "CALVOR.f":90 149 {*extendsidi2_rex64}
     (nil))
(insn 231 230 232 12 (parallel [
            (set (reg:DI 1 dx [orig:195 _109 ] [195])
                (mult:DI (reg:DI 0 ax [orig:194 _108 ] [194])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":90 349 {*muldi3_1}
     (nil))
(insn 232 231 233 12 (set (reg:SI 0 ax [314])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALVOR.f":90 86 {*movsi_internal}
     (nil))
(insn 233 232 234 12 (set (reg:DI 0 ax [orig:196 _110 ] [196])
        (sign_extend:DI (reg:SI 0 ax [314]))) "CALVOR.f":90 149 {*extendsidi2_rex64}
     (nil))
(insn 234 233 235 12 (parallel [
            (set (reg:DI 0 ax [orig:197 _111 ] [197])
                (plus:DI (reg:DI 0 ax [orig:196 _110 ] [196])
                    (reg:DI 1 dx [orig:195 _109 ] [195])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":90 222 {*adddi_1}
     (nil))
(insn 235 234 236 12 (parallel [
            (set (reg:DI 1 dx [orig:198 _112 ] [198])
                (plus:DI (reg:DI 0 ax [orig:197 _111 ] [197])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":90 222 {*adddi_1}
     (nil))
(insn 236 235 237 12 (set (reg/f:DI 0 ax [315])
        (symbol_ref:DI ("dynam_") [flags 0x202]  <var_decl 0x7f07ddcd1870 dynam>)) "CALVOR.f":90 85 {*movdi_internal}
     (nil))
(insn 237 236 238 12 (parallel [
            (set (reg:DI 1 dx [316])
                (plus:DI (reg:DI 1 dx [orig:198 _112 ] [198])
                    (const_int 1207 [0x4b7])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":90 222 {*adddi_1}
     (nil))
(insn 238 237 239 12 (set (reg:SF 21 xmm0 [orig:199 _113 ] [199])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [316])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [315])) [2 dynam.dx S4 A32])) "CALVOR.f":90 131 {*movsf_internal}
     (nil))
(insn 239 238 241 12 (set (reg:SF 21 xmm0 [orig:200 _114 ] [200])
        (plus:SF (reg:SF 21 xmm0 [orig:199 _113 ] [199])
            (reg:SF 21 xmm0 [orig:199 _113 ] [199]))) "CALVOR.f":90 838 {*fop_sf_comm}
     (nil))
(insn 241 239 242 12 (set (reg:SF 22 xmm1 [orig:202 _116 ] [202])
        (div:SF (reg:SF 22 xmm1 [orig:193 _107 ] [193])
            (reg:SF 21 xmm0 [orig:201 _115 ] [201]))) "CALVOR.f":90 841 {*fop_sf_1}
     (nil))
(insn 242 241 243 12 (set (reg:SI 0 ax [317])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALVOR.f":90 86 {*movsi_internal}
     (nil))
(insn 243 242 244 12 (parallel [
            (set (reg:SI 0 ax [orig:203 _117 ] [203])
                (plus:SI (reg:SI 0 ax [317])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":90 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 244 243 245 12 (set (reg:DI 0 ax [orig:204 _118 ] [204])
        (sign_extend:DI (reg:SI 0 ax [orig:203 _117 ] [203]))) "CALVOR.f":90 149 {*extendsidi2_rex64}
     (nil))
(insn 245 244 246 12 (parallel [
            (set (reg:DI 1 dx [orig:205 _119 ] [205])
                (mult:DI (reg:DI 0 ax [orig:204 _118 ] [204])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":90 349 {*muldi3_1}
     (nil))
(insn 246 245 247 12 (set (reg:SI 0 ax [318])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALVOR.f":90 86 {*movsi_internal}
     (nil))
(insn 247 246 248 12 (set (reg:DI 0 ax [orig:206 _120 ] [206])
        (sign_extend:DI (reg:SI 0 ax [318]))) "CALVOR.f":90 149 {*extendsidi2_rex64}
     (nil))
(insn 248 247 249 12 (parallel [
            (set (reg:DI 0 ax [orig:207 _121 ] [207])
                (plus:DI (reg:DI 0 ax [orig:206 _120 ] [206])
                    (reg:DI 1 dx [orig:205 _119 ] [205])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":90 222 {*adddi_1}
     (nil))
(insn 249 248 250 12 (parallel [
            (set (reg:DI 1 dx [orig:208 _122 ] [208])
                (plus:DI (reg:DI 0 ax [orig:207 _121 ] [207])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":90 222 {*adddi_1}
     (nil))
(insn 250 249 251 12 (set (reg/f:DI 0 ax [319])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [3 uwnd+0 S8 A64])) "CALVOR.f":90 85 {*movdi_internal}
     (nil))
(insn 251 250 252 12 (set (reg:SF 21 xmm0 [orig:209 _123 ] [209])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:208 _122 ] [208])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [319])) [2 *uwnd_178(D) S4 A32])) "CALVOR.f":90 131 {*movsf_internal}
     (nil))
(insn 252 251 253 12 (set (reg:SI 0 ax [320])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALVOR.f":90 86 {*movsi_internal}
     (nil))
(insn 253 252 254 12 (parallel [
            (set (reg:SI 0 ax [orig:210 _124 ] [210])
                (plus:SI (reg:SI 0 ax [320])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":90 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 254 253 255 12 (set (reg:DI 0 ax [orig:211 _125 ] [211])
        (sign_extend:DI (reg:SI 0 ax [orig:210 _124 ] [210]))) "CALVOR.f":90 149 {*extendsidi2_rex64}
     (nil))
(insn 255 254 256 12 (parallel [
            (set (reg:DI 1 dx [orig:212 _126 ] [212])
                (mult:DI (reg:DI 0 ax [orig:211 _125 ] [211])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":90 349 {*muldi3_1}
     (nil))
(insn 256 255 257 12 (set (reg:SI 0 ax [321])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALVOR.f":90 86 {*movsi_internal}
     (nil))
(insn 257 256 258 12 (set (reg:DI 0 ax [orig:213 _127 ] [213])
        (sign_extend:DI (reg:SI 0 ax [321]))) "CALVOR.f":90 149 {*extendsidi2_rex64}
     (nil))
(insn 258 257 259 12 (parallel [
            (set (reg:DI 0 ax [orig:214 _128 ] [214])
                (plus:DI (reg:DI 0 ax [orig:213 _127 ] [213])
                    (reg:DI 1 dx [orig:212 _126 ] [212])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":90 222 {*adddi_1}
     (nil))
(insn 259 258 260 12 (parallel [
            (set (reg:DI 1 dx [orig:215 _129 ] [215])
                (plus:DI (reg:DI 0 ax [orig:214 _128 ] [214])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":90 222 {*adddi_1}
     (nil))
(insn 260 259 261 12 (set (reg/f:DI 0 ax [322])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [3 uwnd+0 S8 A64])) "CALVOR.f":90 85 {*movdi_internal}
     (nil))
(insn 261 260 262 12 (set (reg:SF 23 xmm2 [orig:216 _130 ] [216])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:215 _129 ] [215])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [322])) [2 *uwnd_178(D) S4 A32])) "CALVOR.f":90 131 {*movsf_internal}
     (nil))
(insn 262 261 263 12 (set (reg:SF 21 xmm0 [orig:217 _131 ] [217])
        (minus:SF (reg:SF 21 xmm0 [orig:209 _123 ] [209])
            (reg:SF 23 xmm2 [orig:216 _130 ] [216]))) "CALVOR.f":90 841 {*fop_sf_1}
     (nil))
(insn 263 262 264 12 (set (reg:SF 23 xmm2 [orig:218 _132 ] [218])
        (reg:SF 21 xmm0 [orig:217 _131 ] [217])) "CALVOR.f":90 131 {*movsf_internal}
     (nil))
(insn 264 263 265 12 (set (reg/f:DI 0 ax [323])
        (symbol_ref:DI ("dynam_") [flags 0x202]  <var_decl 0x7f07ddcd1870 dynam>)) "CALVOR.f":1 85 {*movdi_internal}
     (nil))
(insn 265 264 266 12 (set (reg:SF 21 xmm0 [orig:219 _133 ] [219])
        (mem/c:SF (reg/f:DI 0 ax [323]) [2 dynam.dy+0 S4 A128])) "CALVOR.f":1 131 {*movsf_internal}
     (nil))
(insn 266 265 268 12 (set (reg:SF 21 xmm0 [orig:220 _134 ] [220])
        (plus:SF (reg:SF 21 xmm0 [orig:219 _133 ] [219])
            (reg:SF 21 xmm0 [orig:219 _133 ] [219]))) "CALVOR.f":90 838 {*fop_sf_comm}
     (nil))
(insn 268 266 342 12 (set (reg:SF 23 xmm2 [orig:218 _132 ] [218])
        (div:SF (reg:SF 23 xmm2 [orig:218 _132 ] [218])
            (reg:SF 21 xmm0 [orig:221 _135 ] [221]))) "CALVOR.f":90 841 {*fop_sf_1}
     (nil))
(insn 342 268 269 12 (set (reg:SF 21 xmm0 [orig:222 _136 ] [222])
        (reg:SF 23 xmm2 [orig:218 _132 ] [218])) "CALVOR.f":90 131 {*movsf_internal}
     (nil))
(insn 269 342 344 12 (set (reg:SF 22 xmm1 [orig:202 _116 ] [202])
        (minus:SF (reg:SF 22 xmm1 [orig:202 _116 ] [202])
            (reg:SF 21 xmm0 [orig:222 _136 ] [222]))) "CALVOR.f":90 841 {*fop_sf_1}
     (nil))
(insn 344 269 347 12 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -76 [0xffffffffffffffb4])) [11 %sfp+-60 S4 A32])
        (reg:SF 22 xmm1 [orig:202 _116 ] [202])) "CALVOR.f":90 131 {*movsf_internal}
     (nil))
(note 347 344 270 12 NOTE_INSN_DELETED)
(insn 270 347 272 12 (set (reg:SF 21 xmm0 [324])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 tphi+0 S4 A32])) "CALVOR.f":90 131 {*movsf_internal}
     (nil))
(call_insn/u 272 270 274 12 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("tanf") [flags 0x41]  <function_decl 0x7f07ddb45700 __builtin_tanf>) [0 __builtin_tanf S1 A8])
            (const_int 0 [0]))) "CALVOR.f":90 700 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (nil)))
(insn 274 272 275 12 (set (reg:SF 21 xmm0 [orig:225 _139 ] [225])
        (mult:SF (reg:SF 21 xmm0 [orig:224 _138 ] [224])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -32 [0xffffffffffffffe0])) [2 uavg+0 S4 A32]))) "CALVOR.f":90 838 {*fop_sf_comm}
     (nil))
(insn 275 274 276 12 (set (reg:SF 22 xmm1 [325])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC3") [flags 0x2]) [0  S4 A32])) "CALVOR.f":90 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 6.376e+6 [0x0.c2948p+23])
        (nil)))
(insn 276 275 345 12 (set (reg:SF 21 xmm0 [orig:226 _140 ] [226])
        (div:SF (reg:SF 21 xmm0 [orig:225 _139 ] [225])
            (reg:SF 22 xmm1 [325]))) "CALVOR.f":90 841 {*fop_sf_1}
     (nil))
(insn 345 276 277 12 (set (reg:SF 22 xmm1 [orig:223 _137 ] [223])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -76 [0xffffffffffffffb4])) [11 %sfp+-60 S4 A32])) "CALVOR.f":90 131 {*movsf_internal}
     (nil))
(insn 277 345 278 12 (set (reg:SF 22 xmm1 [orig:223 _137 ] [223])
        (plus:SF (reg:SF 22 xmm1 [orig:223 _137 ] [223])
            (reg:SF 21 xmm0 [orig:226 _140 ] [226]))) "CALVOR.f":90 838 {*fop_sf_comm}
     (nil))
(insn 278 277 279 12 (set (reg:SF 21 xmm0 [326])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 favg+0 S4 A32])) "CALVOR.f":90 131 {*movsf_internal}
     (nil))
(insn 279 278 280 12 (set (reg:SF 21 xmm0 [orig:228 _142 ] [228])
        (plus:SF (reg:SF 21 xmm0 [326])
            (reg:SF 21 xmm0 [326]))) "CALVOR.f":90 838 {*fop_sf_comm}
     (nil))
(insn 280 279 281 12 (set (reg:SF 23 xmm2 [orig:229 _143 ] [229])
        (mem/c:SF (const:DI (plus:DI (symbol_ref:DI ("ctlblk_") [flags 0x2]  <var_decl 0x7f07e4d3cab0 ctlblk>)
                    (const_int 48 [0x30]))) [2 ctlblk.dt+0 S4 A128])) "CALVOR.f":1 131 {*movsf_internal}
     (nil))
(insn 281 280 282 12 (set (reg:SF 21 xmm0 [orig:230 _144 ] [230])
        (div:SF (reg:SF 21 xmm0 [orig:228 _142 ] [228])
            (reg:SF 23 xmm2 [orig:229 _143 ] [229]))) "CALVOR.f":90 841 {*fop_sf_1}
     (nil))
(insn 282 281 283 12 (set (reg:SF 21 xmm0 [orig:231 _145 ] [231])
        (plus:SF (reg:SF 21 xmm0 [orig:230 _144 ] [230])
            (reg:SF 22 xmm1 [orig:227 _141 ] [227]))) "CALVOR.f":90 838 {*fop_sf_comm}
     (nil))
(insn 283 282 284 12 (set (reg:SF 22 xmm1 [orig:232 _146 ] [232])
        (reg:SF 21 xmm0 [orig:231 _145 ] [231])) "CALVOR.f":90 131 {*movsf_internal}
     (nil))
(insn 284 283 285 12 (set (reg:SI 0 ax [327])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALVOR.f":90 86 {*movsi_internal}
     (nil))
(insn 285 284 286 12 (set (reg:DI 0 ax [orig:233 _147 ] [233])
        (sign_extend:DI (reg:SI 0 ax [327]))) "CALVOR.f":90 149 {*extendsidi2_rex64}
     (nil))
(insn 286 285 287 12 (parallel [
            (set (reg:DI 1 dx [orig:234 _148 ] [234])
                (mult:DI (reg:DI 0 ax [orig:233 _147 ] [233])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":90 349 {*muldi3_1}
     (nil))
(insn 287 286 288 12 (set (reg:SI 0 ax [328])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALVOR.f":90 86 {*movsi_internal}
     (nil))
(insn 288 287 289 12 (set (reg:DI 0 ax [orig:235 _149 ] [235])
        (sign_extend:DI (reg:SI 0 ax [328]))) "CALVOR.f":90 149 {*extendsidi2_rex64}
     (nil))
(insn 289 288 290 12 (parallel [
            (set (reg:DI 0 ax [orig:236 _150 ] [236])
                (plus:DI (reg:DI 0 ax [orig:235 _149 ] [235])
                    (reg:DI 1 dx [orig:234 _148 ] [234])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":90 222 {*adddi_1}
     (nil))
(insn 290 289 291 12 (parallel [
            (set (reg:DI 1 dx [orig:237 _151 ] [237])
                (plus:DI (reg:DI 0 ax [orig:236 _150 ] [236])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":90 222 {*adddi_1}
     (nil))
(insn 291 290 292 12 (set (reg/f:DI 0 ax [329])
        (symbol_ref:DI ("masks_") [flags 0x202]  <var_decl 0x7f07ddcddea0 masks>)) "CALVOR.f":90 85 {*movdi_internal}
     (nil))
(insn 292 291 293 12 (set (reg:SF 21 xmm0 [orig:238 _152 ] [238])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:237 _151 ] [237])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [329])) [2 masks.hbm2 S4 A32])) "CALVOR.f":90 131 {*movsf_internal}
     (nil))
(insn 293 292 294 12 (set (reg:SI 0 ax [330])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALVOR.f":90 86 {*movsi_internal}
     (nil))
(insn 294 293 295 12 (set (reg:DI 0 ax [orig:239 _153 ] [239])
        (sign_extend:DI (reg:SI 0 ax [330]))) "CALVOR.f":90 149 {*extendsidi2_rex64}
     (nil))
(insn 295 294 296 12 (parallel [
            (set (reg:DI 1 dx [orig:240 _154 ] [240])
                (mult:DI (reg:DI 0 ax [orig:239 _153 ] [239])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":90 349 {*muldi3_1}
     (nil))
(insn 296 295 297 12 (set (reg:SI 0 ax [331])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALVOR.f":90 86 {*movsi_internal}
     (nil))
(insn 297 296 298 12 (set (reg:DI 0 ax [orig:241 _155 ] [241])
        (sign_extend:DI (reg:SI 0 ax [331]))) "CALVOR.f":90 149 {*extendsidi2_rex64}
     (nil))
(insn 298 297 299 12 (parallel [
            (set (reg:DI 0 ax [orig:242 _156 ] [242])
                (plus:DI (reg:DI 0 ax [orig:241 _155 ] [241])
                    (reg:DI 1 dx [orig:240 _154 ] [240])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":90 222 {*adddi_1}
     (nil))
(insn 299 298 300 12 (parallel [
            (set (reg:DI 1 dx [orig:243 _157 ] [243])
                (plus:DI (reg:DI 0 ax [orig:242 _156 ] [242])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":90 222 {*adddi_1}
     (nil))
(insn 300 299 301 12 (set (reg:SF 21 xmm0 [orig:244 _158 ] [244])
        (mult:SF (reg:SF 21 xmm0 [orig:238 _152 ] [238])
            (reg:SF 22 xmm1 [orig:232 _146 ] [232]))) "CALVOR.f":90 838 {*fop_sf_comm}
     (nil))
(insn 301 300 302 12 (set (reg/f:DI 0 ax [332])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [3 absv+0 S8 A64])) "CALVOR.f":90 85 {*movdi_internal}
     (nil))
(insn 302 301 303 12 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:243 _157 ] [243])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [332])) [2 *absv_174(D) S4 A32])
        (reg:SF 21 xmm0 [orig:244 _158 ] [244])) "CALVOR.f":90 131 {*movsf_internal}
     (nil))
(insn 303 302 324 12 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":83 221 {*addsi_1}
     (nil))
(jump_insn 324 303 325 12 (set (pc)
        (label_ref 304)) "CALVOR.f":83 683 {jump}
     (nil)
 -> 304)
;;  succ:       11 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 250

(barrier 325 324 338)
;; basic block 18, loop depth 0, maybe hot
;;  prev block 12, next block 13, flags: (RTL, MODIFIED)
;;  pred:       11
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 250
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 338 325 337 18 14 (nil) [1 uses])
(note 337 338 339 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 339 337 307 18 (const_int 0 [0]) "CALVOR.f":90 718 {nop}
     (nil))
;;  succ:       13 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 250

;; basic block 13, loop depth 0, maybe hot
;;  prev block 18, next block 17, flags: (RTL, MODIFIED)
;;  pred:       18 [always]  (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 250
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 307 339 308 13 7 (nil) [0 uses])
(note 308 307 309 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 309 308 326 13 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALVOR.f":81 221 {*addsi_1}
     (nil))
(jump_insn 326 309 327 13 (set (pc)
        (label_ref 310)) "CALVOR.f":81 683 {jump}
     (nil)
 -> 310)
;;  succ:       9 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 250

(barrier 327 326 335)
;; basic block 17, loop depth 0, maybe hot
;;  prev block 13, next block 14, flags: (RTL, MODIFIED)
;;  pred:       9
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 335 327 334 17 13 (nil) [1 uses])
(note 334 335 336 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 336 334 313 17 (const_int 0 [0]) "CALVOR.f":83 718 {nop}
     (nil))
;;  succ:       14 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 14, loop depth 0, maybe hot
;;  prev block 17, next block 1, flags: (RTL, MODIFIED)
;;  pred:       17 [always]  (FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 313 336 314 14 6 (nil) [0 uses])
(note 314 313 319 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 319 314 340 14 (const_int 0 [0]) "CALVOR.f":96 718 {nop}
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(note 340 319 0 NOTE_INSN_DELETED)
