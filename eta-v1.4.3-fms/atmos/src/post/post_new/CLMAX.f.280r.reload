
;; Function clmax (clmax_, funcdef_no=0, decl_uid=3769, cgraph_uid=0, symbol_order=0)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=232, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 20 to 7 (offset=168, prev_offset=0)
Can eliminate 20 to 6 (offset=-48, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 3:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 4:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 5:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 6:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 7:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 11:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 14:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 15:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 17:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 16:  (0) r {*cmpdi_ccno_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 18:  (0) =r  (2) rm  (3) 0 {*movdicc_noc}
      Creating newreg=647 from oldreg=460, assigning class GENERAL_REGS to r647
   18: r647:DI={(flags:CCGOC>=0)?r342:DI:r647:DI}
      REG_DEAD r460:DI
      REG_DEAD r342:DI
      REG_DEAD flags:CCGOC
    Inserting insn reload before:
  804: r647:DI=r460:DI
    Inserting insn reload after:
  805: r343:DI=r647:DI

            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 19:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 20:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 21:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 22:  (0) m  (1) re {*movdi_internal}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 2 in insn 23:  (0) r  (1) 0  (2) mr {*muldi3_1}
      Creating newreg=648 from oldreg=344, assigning class GENERAL_REGS to r648
   23: {r648:DI=r648:DI*[frame:DI-0x50];clobber flags:CC;}
      REG_UNUSED flags:CC
    Inserting insn reload before:
  806: r648:DI=r343:DI
    Inserting insn reload after:
  807: r344:DI=r648:DI

          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 25:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 24:  (0) r {*cmpdi_ccno_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 26:  (0) r  (2) 0  (3) rm {*movdicc_noc}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 29:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 30:  (0) r  (1) Z {*movdi_internal}
            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
          alt=0,overall=15,losers=2,rld_nregs=2
	 Choosing alt 0 in insn 34:  (0) =rm  (1) 0 {*one_cmpldi2_1}
      Creating newreg=649 from oldreg=349, assigning class GENERAL_REGS to r649
   34: r649:DI=~r649:DI
    Inserting insn reload before:
  808: r649:DI=r343:DI
    Inserting insn reload after:
  809: r349:DI=r649:DI

            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=5,overall=2,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 809:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 35:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 36:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 37:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 38:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 39:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 41:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 40:  (0) r {*cmpdi_ccno_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 42:  (0) =r  (2) rm  (3) 0 {*movdicc_noc}
      Creating newreg=650 from oldreg=466, assigning class GENERAL_REGS to r650
   42: r650:DI={(flags:CCGOC>=0)?r350:DI:r650:DI}
      REG_DEAD r466:DI
      REG_DEAD r350:DI
      REG_DEAD flags:CCGOC
    Inserting insn reload before:
  810: r650:DI=r466:DI
    Inserting insn reload after:
  811: r351:DI=r650:DI

            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 43:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 44:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 45:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 46:  (0) m  (1) re {*movdi_internal}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 2 in insn 47:  (0) r  (1) 0  (2) mr {*muldi3_1}
      Creating newreg=651 from oldreg=352, assigning class GENERAL_REGS to r651
   47: {r651:DI=r651:DI*[frame:DI-0x60];clobber flags:CC;}
      REG_UNUSED flags:CC
    Inserting insn reload before:
  812: r651:DI=r351:DI
    Inserting insn reload after:
  813: r352:DI=r651:DI

          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 49:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 48:  (0) r {*cmpdi_ccno_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 50:  (0) r  (2) 0  (3) rm {*movdicc_noc}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 53:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 54:  (0) r  (1) Z {*movdi_internal}
            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
          alt=0,overall=15,losers=2,rld_nregs=2
	 Choosing alt 0 in insn 58:  (0) =rm  (1) 0 {*one_cmpldi2_1}
      Creating newreg=652 from oldreg=357, assigning class GENERAL_REGS to r652
   58: r652:DI=~r652:DI
    Inserting insn reload before:
  814: r652:DI=r351:DI
    Inserting insn reload after:
  815: r357:DI=r652:DI

            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=5,overall=2,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 815:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 59:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 60:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 61:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 62:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 63:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 65:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 64:  (0) r {*cmpdi_ccno_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 66:  (0) =r  (2) rm  (3) 0 {*movdicc_noc}
      Creating newreg=653 from oldreg=472, assigning class GENERAL_REGS to r653
   66: r653:DI={(flags:CCGOC>=0)?r358:DI:r653:DI}
      REG_DEAD r472:DI
      REG_DEAD r358:DI
      REG_DEAD flags:CCGOC
    Inserting insn reload before:
  816: r653:DI=r472:DI
    Inserting insn reload after:
  817: r359:DI=r653:DI

            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 67:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 68:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 69:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 70:  (0) m  (1) re {*movdi_internal}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 2 in insn 71:  (0) r  (1) 0  (2) mr {*muldi3_1}
      Creating newreg=654 from oldreg=360, assigning class GENERAL_REGS to r654
   71: {r654:DI=r654:DI*[frame:DI-0x70];clobber flags:CC;}
      REG_UNUSED flags:CC
    Inserting insn reload before:
  818: r654:DI=r359:DI
    Inserting insn reload after:
  819: r360:DI=r654:DI

          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 73:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 72:  (0) r {*cmpdi_ccno_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 74:  (0) r  (2) 0  (3) rm {*movdicc_noc}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 77:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 78:  (0) r  (1) Z {*movdi_internal}
            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
          alt=0,overall=15,losers=2,rld_nregs=2
	 Choosing alt 0 in insn 82:  (0) =rm  (1) 0 {*one_cmpldi2_1}
      Creating newreg=655 from oldreg=365, assigning class GENERAL_REGS to r655
   82: r655:DI=~r655:DI
    Inserting insn reload before:
  820: r655:DI=r359:DI
    Inserting insn reload after:
  821: r365:DI=r655:DI

            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=5,overall=2,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 821:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 83:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 84:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 85:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 86:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 87:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 89:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 88:  (0) r {*cmpdi_ccno_1}
            0 Non input pseudo reload: reject++
            3 Dying matched operand reload: reject++
          alt=0,overall=8,losers=1,rld_nregs=2
            0 Non input pseudo reload: reject++
            2 Dying matched operand reload: reject++
          alt=1,overall=8,losers=1,rld_nregs=2
	 Choosing alt 0 in insn 90:  (0) =r  (2) rm  (3) 0 {*movdicc_noc}
      Creating newreg=656 from oldreg=478, assigning class GENERAL_REGS to r656
   90: r656:DI={(flags:CCGOC>=0)?r366:DI:r656:DI}
      REG_DEAD r478:DI
      REG_DEAD r366:DI
      REG_DEAD flags:CCGOC
    Inserting insn reload before:
  822: r656:DI=r478:DI
    Inserting insn reload after:
  823: r367:DI=r656:DI

            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=5,overall=2,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 823:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 91:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 92:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 93:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 94:  (0) m  (1) re {*movdi_internal}
            1 Non pseudo reload: reject++
            alt=0: Bad operand -- refuse
            1 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 2 in insn 95:  (0) r  (1) 0  (2) mr {*muldi3_1}
      Creating newreg=657 from oldreg=368, assigning class GENERAL_REGS to r657
   95: {r657:DI=r657:DI*[frame:DI-0x80];clobber flags:CC;}
      REG_UNUSED flags:CC
    Inserting insn reload before:
  824: r657:DI=r367:DI
    Inserting insn reload after:
  825: r368:DI=r657:DI

            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=2,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 824:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 97:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 96:  (0) r {*cmpdi_ccno_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 98:  (0) =r  (2) rm  (3) 0 {*movdicc_noc}
      Creating newreg=658 from oldreg=481, assigning class GENERAL_REGS to r658
   98: r658:DI={(flags:CCGOC>=0)?r368:DI:r658:DI}
      REG_DEAD r481:DI
      REG_DEAD r368:DI
      REG_DEAD flags:CCGOC
    Inserting insn reload before:
  826: r658:DI=r481:DI
    Inserting insn reload after:
  827: r369:DI=r658:DI

            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 99:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 100:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 101:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 102:  (0) m  (1) re {*movdi_internal}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 2 in insn 103:  (0) r  (1) 0  (2) mr {*muldi3_1}
      Creating newreg=659 from oldreg=370, assigning class GENERAL_REGS to r659
  103: {r659:DI=r659:DI*[frame:DI-0x88];clobber flags:CC;}
      REG_UNUSED flags:CC
    Inserting insn reload before:
  828: r659:DI=r369:DI
    Inserting insn reload after:
  829: r370:DI=r659:DI

          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 105:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 104:  (0) r {*cmpdi_ccno_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 106:  (0) r  (2) 0  (3) rm {*movdicc_noc}
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 109:  (0) m  (1) re {*movdi_internal}
            0 Non input pseudo reload: reject++
          alt=2,overall=7,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
          alt=3,overall=7,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
          alt=4,overall=7,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 110:  (0) m  (1) re {*movdi_internal}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 114:  (0) =rm  (1) 0 {*one_cmpldi2_1}
      Creating newreg=660 from oldreg=108, assigning class GENERAL_REGS to r660
  114: r660:DI=~r660:DI
    Inserting insn reload before:
  830: r660:DI=r367:DI
    Inserting insn reload after:
  831: r108:DI=r660:DI

            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=2,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 830:  (0) r  (1) rem {*movdi_internal}
            0 Non pseudo reload: reject++
          alt=0,overall=13,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
          alt=1,overall=8,losers=1,rld_nregs=2
	 Choosing alt 1 in insn 115:  (0) r  (1) 0  (2) rm {*subdi_1}
      Creating newreg=661 from oldreg=108, assigning class GENERAL_REGS to r661
  115: {r661:DI=r661:DI-r369:DI;clobber flags:CC;}
      REG_DEAD r108:DI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  832: r661:DI=r108:DI
    Inserting insn reload after:
  833: r375:DI=r661:DI

            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=5,overall=2,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 833:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 116:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 117:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 118:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 119:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 120:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 122:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 121:  (0) r {*cmpdi_ccno_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 123:  (0) =r  (2) rm  (3) 0 {*movdicc_noc}
      Creating newreg=662 from oldreg=487, assigning class GENERAL_REGS to r662
  123: r662:DI={(flags:CCGOC>=0)?r376:DI:r662:DI}
      REG_DEAD r487:DI
      REG_DEAD r376:DI
      REG_DEAD flags:CCGOC
    Inserting insn reload before:
  834: r662:DI=r487:DI
    Inserting insn reload after:
  835: r377:DI=r662:DI

            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 124:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 125:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 126:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 127:  (0) m  (1) re {*movdi_internal}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 2 in insn 128:  (0) r  (1) 0  (2) mr {*muldi3_1}
      Creating newreg=663 from oldreg=378, assigning class GENERAL_REGS to r663
  128: {r663:DI=r663:DI*[frame:DI-0x98];clobber flags:CC;}
      REG_UNUSED flags:CC
    Inserting insn reload before:
  836: r663:DI=r377:DI
    Inserting insn reload after:
  837: r378:DI=r663:DI

          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 130:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 129:  (0) r {*cmpdi_ccno_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 131:  (0) r  (2) 0  (3) rm {*movdicc_noc}
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 134:  (0) m  (1) re {*movdi_internal}
            0 Non input pseudo reload: reject++
          alt=2,overall=7,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
          alt=3,overall=7,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
          alt=4,overall=7,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 135:  (0) m  (1) re {*movdi_internal}
            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
          alt=0,overall=15,losers=2,rld_nregs=2
	 Choosing alt 0 in insn 139:  (0) =rm  (1) 0 {*one_cmpldi2_1}
      Creating newreg=664 from oldreg=383, assigning class GENERAL_REGS to r664
  139: r664:DI=~r664:DI
    Inserting insn reload before:
  838: r664:DI=r377:DI
    Inserting insn reload after:
  839: r383:DI=r664:DI

            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=5,overall=2,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 839:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 140:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 141:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 142:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 143:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 144:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 146:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 145:  (0) r {*cmpdi_ccno_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 147:  (0) r  (2) 0  (3) rm {*movdicc_noc}
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 150:  (0) m  (1) re {*movdi_internal}
            0 Non input pseudo reload: reject++
          alt=2,overall=7,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
          alt=3,overall=7,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
          alt=4,overall=7,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 151:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 155:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 156:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 157:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 158:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 159:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 161:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 160:  (0) r {*cmpdi_ccno_1}
            0 Non input pseudo reload: reject++
            3 Dying matched operand reload: reject++
          alt=0,overall=8,losers=1,rld_nregs=2
            0 Non input pseudo reload: reject++
            2 Dying matched operand reload: reject++
          alt=1,overall=8,losers=1,rld_nregs=2
	 Choosing alt 0 in insn 162:  (0) =r  (2) rm  (3) 0 {*movdicc_noc}
      Creating newreg=665 from oldreg=496, assigning class GENERAL_REGS to r665
  162: r665:DI={(flags:CCGOC>=0)?r389:DI:r665:DI}
      REG_DEAD r496:DI
      REG_DEAD r389:DI
      REG_DEAD flags:CCGOC
    Inserting insn reload before:
  840: r665:DI=r496:DI
    Inserting insn reload after:
  841: r390:DI=r665:DI

            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=5,overall=2,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 841:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 163:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 164:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 165:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 166:  (0) m  (1) re {*movdi_internal}
            1 Non pseudo reload: reject++
            alt=0: Bad operand -- refuse
            1 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 2 in insn 167:  (0) r  (1) 0  (2) mr {*muldi3_1}
      Creating newreg=666 from oldreg=391, assigning class GENERAL_REGS to r666
  167: {r666:DI=r666:DI*[frame:DI-0xb0];clobber flags:CC;}
      REG_UNUSED flags:CC
    Inserting insn reload before:
  842: r666:DI=r390:DI
    Inserting insn reload after:
  843: r391:DI=r666:DI

            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=2,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 842:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 169:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 168:  (0) r {*cmpdi_ccno_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 170:  (0) r  (2) 0  (3) rm {*movdicc_noc}
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 173:  (0) m  (1) re {*movdi_internal}
            0 Non input pseudo reload: reject++
          alt=2,overall=7,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
          alt=3,overall=7,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
          alt=4,overall=7,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 174:  (0) m  (1) re {*movdi_internal}
            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
          alt=0,overall=15,losers=2,rld_nregs=2
	 Choosing alt 0 in insn 178:  (0) =rm  (1) 0 {*one_cmpldi2_1}
      Creating newreg=667 from oldreg=396, assigning class GENERAL_REGS to r667
  178: r667:DI=~r667:DI
    Inserting insn reload before:
  844: r667:DI=r390:DI
    Inserting insn reload after:
  845: r396:DI=r667:DI

            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=5,overall=2,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 845:  (0) m  (1) re {*movdi_internal}
            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=2,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 844:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 179:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 180:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 181:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 182:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 183:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 185:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 184:  (0) r {*cmpdi_ccno_1}
            0 Non input pseudo reload: reject++
            3 Dying matched operand reload: reject++
          alt=0,overall=8,losers=1,rld_nregs=2
            0 Non input pseudo reload: reject++
            2 Dying matched operand reload: reject++
          alt=1,overall=8,losers=1,rld_nregs=2
	 Choosing alt 0 in insn 186:  (0) =r  (2) rm  (3) 0 {*movdicc_noc}
      Creating newreg=668 from oldreg=502, assigning class GENERAL_REGS to r668
  186: r668:DI={(flags:CCGOC>=0)?r397:DI:r668:DI}
      REG_DEAD r502:DI
      REG_DEAD r397:DI
      REG_DEAD flags:CCGOC
    Inserting insn reload before:
  846: r668:DI=r502:DI
    Inserting insn reload after:
  847: r398:DI=r668:DI

            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=5,overall=2,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 847:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 187:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 188:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 189:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 190:  (0) m  (1) re {*movdi_internal}
            1 Non pseudo reload: reject++
            alt=0: Bad operand -- refuse
            1 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 2 in insn 191:  (0) r  (1) 0  (2) mr {*muldi3_1}
      Creating newreg=669 from oldreg=399, assigning class GENERAL_REGS to r669
  191: {r669:DI=r669:DI*[frame:DI-0xc0];clobber flags:CC;}
      REG_UNUSED flags:CC
    Inserting insn reload before:
  848: r669:DI=r398:DI
    Inserting insn reload after:
  849: r399:DI=r669:DI

            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=2,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 848:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 193:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 192:  (0) r {*cmpdi_ccno_1}
            0 Non input pseudo reload: reject++
            3 Dying matched operand reload: reject++
          alt=0,overall=8,losers=1,rld_nregs=2
            0 Non input pseudo reload: reject++
            2 Dying matched operand reload: reject++
          alt=1,overall=8,losers=1,rld_nregs=2
	 Choosing alt 0 in insn 194:  (0) =r  (2) rm  (3) 0 {*movdicc_noc}
      Creating newreg=670 from oldreg=505, assigning class GENERAL_REGS to r670
  194: r670:DI={(flags:CCGOC>=0)?r399:DI:r670:DI}
      REG_DEAD r505:DI
      REG_DEAD r399:DI
      REG_DEAD flags:CCGOC
    Inserting insn reload before:
  850: r670:DI=r505:DI
    Inserting insn reload after:
  851: r400:DI=r670:DI

            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=5,overall=2,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 851:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 195:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 196:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 197:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 198:  (0) m  (1) re {*movdi_internal}
            1 Non pseudo reload: reject++
            alt=0: Bad operand -- refuse
            1 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 2 in insn 199:  (0) r  (1) 0  (2) mr {*muldi3_1}
      Creating newreg=671 from oldreg=401, assigning class GENERAL_REGS to r671
  199: {r671:DI=r671:DI*[frame:DI-0xc8];clobber flags:CC;}
      REG_UNUSED flags:CC
    Inserting insn reload before:
  852: r671:DI=r400:DI
    Inserting insn reload after:
  853: r401:DI=r671:DI

            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=2,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 852:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 201:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 200:  (0) r {*cmpdi_ccno_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 202:  (0) r  (2) 0  (3) rm {*movdicc_noc}
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 205:  (0) m  (1) re {*movdi_internal}
            0 Non input pseudo reload: reject++
          alt=2,overall=7,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
          alt=3,overall=7,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
          alt=4,overall=7,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 206:  (0) m  (1) re {*movdi_internal}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 210:  (0) =rm  (1) 0 {*one_cmpldi2_1}
      Creating newreg=672 from oldreg=129, assigning class GENERAL_REGS to r672
  210: r672:DI=~r672:DI
    Inserting insn reload before:
  854: r672:DI=r398:DI
    Inserting insn reload after:
  855: r129:DI=r672:DI

            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=2,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 854:  (0) r  (1) rem {*movdi_internal}
            0 Non pseudo reload: reject++
          alt=0,overall=19,losers=3,rld_nregs=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            2 Non pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=2
	 Choosing alt 1 in insn 211:  (0) r  (1) 0  (2) rm {*subdi_1}
      Creating newreg=673 from oldreg=129, assigning class GENERAL_REGS to r673
      Creating newreg=674 from oldreg=400, assigning class GENERAL_REGS to r674
      Making reload reg 674 for reg 400 optional
  211: {r673:DI=r673:DI-r674:DI;clobber flags:CC;}
      REG_DEAD r129:DI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  856: r673:DI=r129:DI
  858: r674:DI=r400:DI
    Inserting insn reload after:
  857: r406:DI=r673:DI

            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=5,overall=2,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 857:  (0) m  (1) re {*movdi_internal}
            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=2,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 858:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 212:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 213:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 214:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 215:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 216:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 218:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 217:  (0) r {*cmpdi_ccno_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 219:  (0) =r  (2) rm  (3) 0 {*movdicc_noc}
      Creating newreg=675 from oldreg=511, assigning class GENERAL_REGS to r675
  219: r675:DI={(flags:CCGOC>=0)?r407:DI:r675:DI}
      REG_DEAD r511:DI
      REG_DEAD r407:DI
      REG_DEAD flags:CCGOC
    Inserting insn reload before:
  859: r675:DI=r511:DI
    Inserting insn reload after:
  860: r408:DI=r675:DI

            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 220:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 221:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 222:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 223:  (0) m  (1) re {*movdi_internal}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 2 in insn 224:  (0) r  (1) 0  (2) mr {*muldi3_1}
      Creating newreg=676 from oldreg=409, assigning class GENERAL_REGS to r676
  224: {r676:DI=r676:DI*[frame:DI-0xd8];clobber flags:CC;}
      REG_UNUSED flags:CC
    Inserting insn reload before:
  861: r676:DI=r408:DI
    Inserting insn reload after:
  862: r409:DI=r676:DI

          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 226:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 225:  (0) r {*cmpdi_ccno_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 227:  (0) =r  (2) rm  (3) 0 {*movdicc_noc}
      Creating newreg=677 from oldreg=514, assigning class GENERAL_REGS to r677
  227: r677:DI={(flags:CCGOC>=0)?r409:DI:r677:DI}
      REG_DEAD r514:DI
      REG_DEAD r409:DI
      REG_DEAD flags:CCGOC
    Inserting insn reload before:
  863: r677:DI=r514:DI
    Inserting insn reload after:
  864: r410:DI=r677:DI

            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 228:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 229:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 230:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 231:  (0) m  (1) re {*movdi_internal}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 2 in insn 232:  (0) r  (1) 0  (2) mr {*muldi3_1}
      Creating newreg=678 from oldreg=411, assigning class GENERAL_REGS to r678
  232: {r678:DI=r678:DI*[frame:DI-0xe0];clobber flags:CC;}
      REG_UNUSED flags:CC
    Inserting insn reload before:
  865: r678:DI=r410:DI
    Inserting insn reload after:
  866: r411:DI=r678:DI

          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 234:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 233:  (0) r {*cmpdi_ccno_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 235:  (0) r  (2) 0  (3) rm {*movdicc_noc}
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 238:  (0) m  (1) re {*movdi_internal}
            0 Non input pseudo reload: reject++
          alt=2,overall=7,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
          alt=3,overall=7,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
          alt=4,overall=7,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 239:  (0) m  (1) re {*movdi_internal}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 243:  (0) =rm  (1) 0 {*one_cmpldi2_1}
      Creating newreg=679 from oldreg=136, assigning class GENERAL_REGS to r679
  243: r679:DI=~r679:DI
    Inserting insn reload before:
  867: r679:DI=r408:DI
    Inserting insn reload after:
  868: r136:DI=r679:DI

            0 Non pseudo reload: reject++
          alt=0,overall=13,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
          alt=1,overall=8,losers=1,rld_nregs=2
	 Choosing alt 1 in insn 244:  (0) r  (1) 0  (2) rm {*subdi_1}
      Creating newreg=680 from oldreg=136, assigning class GENERAL_REGS to r680
  244: {r680:DI=r680:DI-r410:DI;clobber flags:CC;}
      REG_DEAD r136:DI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  869: r680:DI=r136:DI
    Inserting insn reload after:
  870: r416:DI=r680:DI

            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=5,overall=2,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 870:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 245:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 246:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 247:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 248:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 249:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 251:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 250:  (0) r {*cmpdi_ccno_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 252:  (0) =r  (2) rm  (3) 0 {*movdicc_noc}
      Creating newreg=681 from oldreg=520, assigning class GENERAL_REGS to r681
  252: r681:DI={(flags:CCGOC>=0)?r417:DI:r681:DI}
      REG_DEAD r520:DI
      REG_DEAD r417:DI
      REG_DEAD flags:CCGOC
    Inserting insn reload before:
  871: r681:DI=r520:DI
    Inserting insn reload after:
  872: r418:DI=r681:DI

            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 253:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 254:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 255:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 256:  (0) m  (1) re {*movdi_internal}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 2 in insn 257:  (0) r  (1) 0  (2) mr {*muldi3_1}
      Creating newreg=682 from oldreg=419, assigning class GENERAL_REGS to r682
  257: {r682:DI=r682:DI*[frame:DI-0xf0];clobber flags:CC;}
      REG_UNUSED flags:CC
    Inserting insn reload before:
  873: r682:DI=r418:DI
    Inserting insn reload after:
  874: r419:DI=r682:DI

          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 259:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 258:  (0) r {*cmpdi_ccno_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 260:  (0) r  (2) 0  (3) rm {*movdicc_noc}
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 263:  (0) m  (1) re {*movdi_internal}
            0 Non input pseudo reload: reject++
          alt=2,overall=7,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
          alt=3,overall=7,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
          alt=4,overall=7,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 264:  (0) m  (1) re {*movdi_internal}
            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
          alt=0,overall=15,losers=2,rld_nregs=2
	 Choosing alt 0 in insn 268:  (0) =rm  (1) 0 {*one_cmpldi2_1}
      Creating newreg=683 from oldreg=424, assigning class GENERAL_REGS to r683
  268: r683:DI=~r683:DI
    Inserting insn reload before:
  875: r683:DI=r418:DI
    Inserting insn reload after:
  876: r424:DI=r683:DI

            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=5,overall=2,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 876:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 269:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 270:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 271:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 272:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 273:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 275:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 274:  (0) r {*cmpdi_ccno_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 276:  (0) =r  (2) rm  (3) 0 {*movdicc_noc}
      Creating newreg=684 from oldreg=526, assigning class GENERAL_REGS to r684
  276: r684:DI={(flags:CCGOC>=0)?r425:DI:r684:DI}
      REG_DEAD r526:DI
      REG_DEAD r425:DI
      REG_DEAD flags:CCGOC
    Inserting insn reload before:
  877: r684:DI=r526:DI
    Inserting insn reload after:
  878: r426:DI=r684:DI

            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 277:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 278:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 279:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 280:  (0) m  (1) re {*movdi_internal}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 2 in insn 281:  (0) r  (1) 0  (2) mr {*muldi3_1}
      Creating newreg=685 from oldreg=427, assigning class GENERAL_REGS to r685
  281: {r685:DI=r685:DI*[frame:DI-0x100];clobber flags:CC;}
      REG_UNUSED flags:CC
    Inserting insn reload before:
  879: r685:DI=r426:DI
    Inserting insn reload after:
  880: r427:DI=r685:DI

          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 283:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 282:  (0) r {*cmpdi_ccno_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 284:  (0) r  (2) 0  (3) rm {*movdicc_noc}
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 287:  (0) m  (1) re {*movdi_internal}
            0 Non input pseudo reload: reject++
          alt=2,overall=7,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
          alt=3,overall=7,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
          alt=4,overall=7,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 288:  (0) m  (1) re {*movdi_internal}
            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
          alt=0,overall=15,losers=2,rld_nregs=2
	 Choosing alt 0 in insn 292:  (0) =rm  (1) 0 {*one_cmpldi2_1}
      Creating newreg=686 from oldreg=432, assigning class GENERAL_REGS to r686
  292: r686:DI=~r686:DI
    Inserting insn reload before:
  881: r686:DI=r426:DI
    Inserting insn reload after:
  882: r432:DI=r686:DI

            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=5,overall=2,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 882:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 293:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 294:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 295:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 296:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 297:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 299:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 298:  (0) r {*cmpdi_ccno_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 300:  (0) =r  (2) rm  (3) 0 {*movdicc_noc}
      Creating newreg=687 from oldreg=532, assigning class GENERAL_REGS to r687
  300: r687:DI={(flags:CCGOC>=0)?r433:DI:r687:DI}
      REG_DEAD r532:DI
      REG_DEAD r433:DI
      REG_DEAD flags:CCGOC
    Inserting insn reload before:
  883: r687:DI=r532:DI
    Inserting insn reload after:
  884: r434:DI=r687:DI

            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 301:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 302:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 303:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 304:  (0) m  (1) re {*movdi_internal}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 2 in insn 305:  (0) r  (1) 0  (2) mr {*muldi3_1}
      Creating newreg=688 from oldreg=435, assigning class GENERAL_REGS to r688
  305: {r688:DI=r688:DI*[frame:DI-0x110];clobber flags:CC;}
      REG_UNUSED flags:CC
    Inserting insn reload before:
  885: r688:DI=r434:DI
    Inserting insn reload after:
  886: r435:DI=r688:DI

          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 307:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 306:  (0) r {*cmpdi_ccno_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 308:  (0) r  (2) 0  (3) rm {*movdicc_noc}
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 311:  (0) m  (1) re {*movdi_internal}
            0 Non input pseudo reload: reject++
          alt=2,overall=7,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
          alt=3,overall=7,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
          alt=4,overall=7,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 312:  (0) m  (1) re {*movdi_internal}
            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
          alt=0,overall=15,losers=2,rld_nregs=2
	 Choosing alt 0 in insn 316:  (0) =rm  (1) 0 {*one_cmpldi2_1}
      Creating newreg=689 from oldreg=440, assigning class GENERAL_REGS to r689
  316: r689:DI=~r689:DI
    Inserting insn reload before:
  887: r689:DI=r434:DI
    Inserting insn reload after:
  888: r440:DI=r689:DI

            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=5,overall=2,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 888:  (0) m  (1) re {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 317:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 318:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 319:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 321:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 322:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 323:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 324:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 327:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 328:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 329:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 331:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 332:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 333:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 334:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 337:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 338:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 339
	 Choosing alt 2 in insn 339:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
            alt=2,overall=12,losers=2 -- refuse
          alt=3,overall=6,losers=1,rld_nregs=1
            2 Non pseudo reload: reject++
            alt=0,overall=7,losers=1 -- refuse
            alt=1,overall=12,losers=2 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=6,losers=1,rld_nregs=1
	 Choosing alt 3 in insn 340:  (0) r  (1) r  (2) le {*adddi_1}
      Creating newreg=690 from oldreg=349, assigning class GENERAL_REGS to r690
  340: {r154:DI=r690:DI+r153:DI;clobber flags:CC;}
      REG_DEAD r153:DI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  889: r690:DI=r349:DI

            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=2,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 889:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 341:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 342:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 343:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 344:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 345:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 346:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 347:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 348:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 349
	 Choosing alt 2 in insn 349:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
            alt=2,overall=12,losers=2 -- refuse
          alt=3,overall=6,losers=1,rld_nregs=1
            2 Non pseudo reload: reject++
            alt=0,overall=7,losers=1 -- refuse
            alt=1,overall=12,losers=2 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=6,losers=1,rld_nregs=1
	 Choosing alt 3 in insn 350:  (0) r  (1) r  (2) le {*adddi_1}
      Creating newreg=691 from oldreg=357, assigning class GENERAL_REGS to r691
  350: {r159:DI=r691:DI+r158:DI;clobber flags:CC;}
      REG_DEAD r158:DI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  890: r691:DI=r357:DI

            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=2,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 890:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 351:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 352:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 353:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 354:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 355:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 356:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 357:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 358:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 359
	 Choosing alt 2 in insn 359:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
            alt=2,overall=12,losers=2 -- refuse
          alt=3,overall=6,losers=1,rld_nregs=1
            2 Non pseudo reload: reject++
            alt=0,overall=7,losers=1 -- refuse
            alt=1,overall=12,losers=2 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=6,losers=1,rld_nregs=1
	 Choosing alt 3 in insn 360:  (0) r  (1) r  (2) le {*adddi_1}
      Creating newreg=692 from oldreg=365, assigning class GENERAL_REGS to r692
  360: {r164:DI=r692:DI+r163:DI;clobber flags:CC;}
      REG_DEAD r163:DI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  891: r692:DI=r365:DI

            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=2,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 891:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 361:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 362:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 363:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 364:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 365:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 366:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 367:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 373:  (0) rm  (1) 0  (2) re {*addsi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 379:  (0) r  (1) rem {*movdi_internal}
            0 Non input pseudo reload: reject++
          alt=0,overall=7,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=2,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=3,overall=8,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=4,overall=14,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=5,overall=17,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            alt=6,overall=13,losers=1 -- refuse
            Staticly defined alt reject+=6
            alt=7: Bad operand -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=8,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=10,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=11,overall=11,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            alt=12,overall=13,losers=1 -- refuse
            Staticly defined alt reject+=6
            alt=13: Bad operand -- refuse
            alt=14: Bad operand -- refuse
            alt=15: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=16: Bad operand -- refuse
	 Choosing alt 0 in insn 380:  (0) =r  (1) g {*movsi_internal}
      Creating newreg=693 from oldreg=446, assigning class GENERAL_REGS to r693
  380: r693:SI=[r551:DI]
      REG_DEAD r551:DI
    Inserting insn reload after:
  892: r446:SI=r693:SI

            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=608,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=1,overall=2,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 892:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 381:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 383:  (0) rm  (1) re {*cmpsi_1}
      Creating newreg=694 from oldreg=446, assigning class GENERAL_REGS to r694
  383: flags:CCGC=cmp([frame:DI-0x3c],r694:SI)
    Inserting insn reload before:
  893: r694:SI=r446:SI

            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 893:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 384:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 385:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 386:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 389:  (0) =r  (1) g {*movsi_internal}
            0 Non input pseudo reload: reject++
          alt=0,overall=7,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=2,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=3,overall=8,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=4,overall=14,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=5,overall=17,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            alt=6,overall=13,losers=1 -- refuse
            Staticly defined alt reject+=6
            alt=7: Bad operand -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=8,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=10,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=11,overall=11,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            alt=12,overall=13,losers=1 -- refuse
            Staticly defined alt reject+=6
            alt=13: Bad operand -- refuse
            alt=14: Bad operand -- refuse
            alt=15: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=16: Bad operand -- refuse
	 Choosing alt 0 in insn 390:  (0) =r  (1) g {*movsi_internal}
      Creating newreg=695 from oldreg=449, assigning class GENERAL_REGS to r695
  390: r695:SI=[const(`parallel_'+0xc)]
    Inserting insn reload after:
  894: r449:SI=r695:SI

            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=608,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=1,overall=2,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 894:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 391:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 393:  (0) rm  (1) re {*cmpsi_1}
      Creating newreg=696 from oldreg=449, assigning class GENERAL_REGS to r696
  393: flags:CCGC=cmp([frame:DI-0x38],r696:SI)
    Inserting insn reload before:
  895: r696:SI=r449:SI

            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 895:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 394:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 395:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 396:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 399:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 400:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 401:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 403:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 404:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 405:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 406:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 409:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 410:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 411
	 Choosing alt 2 in insn 411:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
            alt=2,overall=12,losers=2 -- refuse
          alt=3,overall=6,losers=1,rld_nregs=1
            2 Non pseudo reload: reject++
            alt=0,overall=7,losers=1 -- refuse
            alt=1,overall=12,losers=2 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=6,losers=1,rld_nregs=1
	 Choosing alt 3 in insn 412:  (0) r  (1) r  (2) le {*adddi_1}
      Creating newreg=697 from oldreg=375, assigning class GENERAL_REGS to r697
  412: {r169:DI=r697:DI+r168:DI;clobber flags:CC;}
      REG_DEAD r168:DI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  896: r697:DI=r375:DI

            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=2,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 896:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 413:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 414:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            1 Non pseudo reload: reject++
            alt=0: Bad operand -- refuse
            1 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            2 Non pseudo reload: reject++
          alt=2,overall=1,losers=0,rld_nregs=0
  Commutative operand exchange in insn 415
	 Choosing alt 2 in insn 415:  (0) r  (1) 0  (2) mr {*muldi3_1}
      Creating newreg=698 from oldreg=367, assigning class GENERAL_REGS to r698
      Making reload reg 698 for reg 367 optional
  415: {r171:DI=r170:DI*r698:DI;clobber flags:CC;}
      REG_DEAD r170:DI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  897: r698:DI=r367:DI

            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=2,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 897:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 416:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 417:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 418:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 419:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 420:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 421:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 422:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 423:  (0) v  (1) vm {*cmpisf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 429:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 430:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 431
	 Choosing alt 2 in insn 431:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
            alt=2,overall=12,losers=2 -- refuse
          alt=3,overall=6,losers=1,rld_nregs=1
            2 Non pseudo reload: reject++
            alt=0,overall=7,losers=1 -- refuse
            alt=1,overall=12,losers=2 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=6,losers=1,rld_nregs=1
	 Choosing alt 3 in insn 432:  (0) r  (1) r  (2) le {*adddi_1}
      Creating newreg=699 from oldreg=383, assigning class GENERAL_REGS to r699
  432: {r178:DI=r699:DI+r177:DI;clobber flags:CC;}
      REG_DEAD r177:DI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  898: r699:DI=r383:DI

            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=2,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 898:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 433:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 434:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 435:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 436:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 437:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 438:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 443:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 444:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 445
	 Choosing alt 2 in insn 445:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
            alt=2,overall=12,losers=2 -- refuse
          alt=3,overall=6,losers=1,rld_nregs=1
            2 Non pseudo reload: reject++
            alt=0,overall=7,losers=1 -- refuse
            alt=1,overall=12,losers=2 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=6,losers=1,rld_nregs=1
	 Choosing alt 3 in insn 446:  (0) r  (1) r  (2) le {*adddi_1}
      Creating newreg=700 from oldreg=375, assigning class GENERAL_REGS to r700
  446: {r183:DI=r700:DI+r182:DI;clobber flags:CC;}
      REG_DEAD r182:DI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  899: r700:DI=r375:DI

            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=2,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 899:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 447:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 448:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            1 Non pseudo reload: reject++
            alt=0: Bad operand -- refuse
            1 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            2 Non pseudo reload: reject++
          alt=2,overall=1,losers=0,rld_nregs=0
  Commutative operand exchange in insn 449
	 Choosing alt 2 in insn 449:  (0) r  (1) 0  (2) mr {*muldi3_1}
      Creating newreg=701 from oldreg=367, assigning class GENERAL_REGS to r701
      Making reload reg 701 for reg 367 optional
  449: {r185:DI=r184:DI*r701:DI;clobber flags:CC;}
      REG_DEAD r184:DI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  900: r701:DI=r367:DI

            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=2,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 900:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 450:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 451:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 452:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 453:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 454:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 455:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 456:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 457:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 458
	 Choosing alt 2 in insn 458:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
            alt=2,overall=12,losers=2 -- refuse
          alt=3,overall=6,losers=1,rld_nregs=1
            2 Non pseudo reload: reject++
            alt=0,overall=7,losers=1 -- refuse
            alt=1,overall=12,losers=2 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=6,losers=1,rld_nregs=1
	 Choosing alt 3 in insn 459:  (0) r  (1) r  (2) le {*adddi_1}
      Creating newreg=702 from oldreg=383, assigning class GENERAL_REGS to r702
  459: {r192:DI=r702:DI+r191:DI;clobber flags:CC;}
      REG_DEAD r191:DI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  901: r702:DI=r383:DI

            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=2,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 901:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 460:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 461:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 462:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 463:  (0) =v  (1) vm {*sqrtsf2_sse}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 464:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 465:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 468:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 469:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 470:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 471:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 472:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 473:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 474:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            1 Non pseudo reload: reject++
            alt=0: Bad operand -- refuse
            1 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            2 Non pseudo reload: reject++
          alt=2,overall=1,losers=0,rld_nregs=0
  Commutative operand exchange in insn 475
	 Choosing alt 2 in insn 475:  (0) r  (1) 0  (2) mr {*muldi3_1}
      Creating newreg=703 from oldreg=390, assigning class GENERAL_REGS to r703
      Making reload reg 703 for reg 390 optional
  475: {r200:DI=r199:DI*r703:DI;clobber flags:CC;}
      REG_DEAD r199:DI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  902: r703:DI=r390:DI

            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=2,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 902:  (0) r  (1) rem {*movdi_internal}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
            alt=2,overall=12,losers=2 -- refuse
          alt=3,overall=6,losers=1,rld_nregs=1
            2 Non pseudo reload: reject++
            alt=0,overall=7,losers=1 -- refuse
            alt=1,overall=12,losers=2 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=6,losers=1,rld_nregs=1
	 Choosing alt 3 in insn 476:  (0) r  (1) r  (2) le {*adddi_1}
      Creating newreg=704 from oldreg=396, assigning class GENERAL_REGS to r704
  476: {r201:DI=r704:DI+r200:DI;clobber flags:CC;}
      REG_DEAD r200:DI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  903: r704:DI=r396:DI

            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=2,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 903:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 477:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 478:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 479:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 480:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 481:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 482:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 483:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 484:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            1 Non pseudo reload: reject++
            alt=0: Bad operand -- refuse
            1 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            2 Non pseudo reload: reject++
          alt=2,overall=1,losers=0,rld_nregs=0
  Commutative operand exchange in insn 485
	 Choosing alt 2 in insn 485:  (0) r  (1) 0  (2) mr {*muldi3_1}
      Creating newreg=705 from oldreg=400, assigning class GENERAL_REGS to r705
      Making reload reg 705 for reg 400 optional
  485: {r207:DI=r206:DI*r705:DI;clobber flags:CC;}
      REG_DEAD r206:DI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  904: r705:DI=r400:DI

            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=2,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 904:  (0) r  (1) rem {*movdi_internal}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
            alt=2,overall=12,losers=2 -- refuse
          alt=3,overall=6,losers=1,rld_nregs=1
            2 Non pseudo reload: reject++
            alt=0,overall=7,losers=1 -- refuse
            alt=1,overall=12,losers=2 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=6,losers=1,rld_nregs=1
	 Choosing alt 3 in insn 486:  (0) r  (1) r  (2) le {*adddi_1}
      Creating newreg=706 from oldreg=406, assigning class GENERAL_REGS to r706
  486: {r208:DI=r706:DI+r207:DI;clobber flags:CC;}
      REG_DEAD r207:DI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  905: r706:DI=r406:DI

            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=2,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 905:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 487:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 488:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            1 Non pseudo reload: reject++
            alt=0: Bad operand -- refuse
            1 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            2 Non pseudo reload: reject++
          alt=2,overall=1,losers=0,rld_nregs=0
  Commutative operand exchange in insn 489
	 Choosing alt 2 in insn 489:  (0) r  (1) 0  (2) mr {*muldi3_1}
      Creating newreg=707 from oldreg=398, assigning class GENERAL_REGS to r707
      Making reload reg 707 for reg 398 optional
  489: {r210:DI=r209:DI*r707:DI;clobber flags:CC;}
      REG_DEAD r209:DI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  906: r707:DI=r398:DI

            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=2,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 906:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 490:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 491:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 492:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 493:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 494:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 495:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 496
	 Choosing alt 1 in insn 496:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 497:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 498:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 499:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 500
	 Choosing alt 2 in insn 500:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
            alt=2,overall=12,losers=2 -- refuse
          alt=3,overall=6,losers=1,rld_nregs=1
            2 Non pseudo reload: reject++
            alt=0,overall=7,losers=1 -- refuse
            alt=1,overall=12,losers=2 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=6,losers=1,rld_nregs=1
	 Choosing alt 3 in insn 501:  (0) r  (1) r  (2) le {*adddi_1}
      Creating newreg=708 from oldreg=365, assigning class GENERAL_REGS to r708
  501: {r217:DI=r708:DI+r216:DI;clobber flags:CC;}
      REG_DEAD r216:DI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  907: r708:DI=r365:DI

            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=2,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 907:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 502:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 503:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 504:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 505:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 506:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 507:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 508:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 509
	 Choosing alt 2 in insn 509:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
            alt=2,overall=12,losers=2 -- refuse
          alt=3,overall=6,losers=1,rld_nregs=1
            2 Non pseudo reload: reject++
            alt=0,overall=7,losers=1 -- refuse
            alt=1,overall=12,losers=2 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=6,losers=1,rld_nregs=1
	 Choosing alt 3 in insn 510:  (0) r  (1) r  (2) le {*adddi_1}
      Creating newreg=709 from oldreg=383, assigning class GENERAL_REGS to r709
  510: {r223:DI=r709:DI+r222:DI;clobber flags:CC;}
      REG_DEAD r222:DI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  908: r709:DI=r383:DI

            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=2,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 908:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 511:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 512:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 513:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 514:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 515:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 516
	 Choosing alt 1 in insn 516:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 517:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 518:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 519:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 520
	 Choosing alt 2 in insn 520:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
            alt=2,overall=12,losers=2 -- refuse
          alt=3,overall=6,losers=1,rld_nregs=1
            2 Non pseudo reload: reject++
            alt=0,overall=7,losers=1 -- refuse
            alt=1,overall=12,losers=2 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=6,losers=1,rld_nregs=1
	 Choosing alt 3 in insn 521:  (0) r  (1) r  (2) le {*adddi_1}
      Creating newreg=710 from oldreg=416, assigning class GENERAL_REGS to r710
  521: {r230:DI=r710:DI+r229:DI;clobber flags:CC;}
      REG_DEAD r229:DI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  909: r710:DI=r416:DI

            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=2,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 909:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 522:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 523:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 524
	 Choosing alt 2 in insn 524:  (0) r  (1) 0  (2) mr {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 525:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 526:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 527:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 528:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 529:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 530:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 531:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 532:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 533:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 534
	 Choosing alt 2 in insn 534:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
            alt=2,overall=12,losers=2 -- refuse
          alt=3,overall=6,losers=1,rld_nregs=1
            2 Non pseudo reload: reject++
            alt=0,overall=7,losers=1 -- refuse
            alt=1,overall=12,losers=2 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=6,losers=1,rld_nregs=1
	 Choosing alt 3 in insn 535:  (0) r  (1) r  (2) le {*adddi_1}
      Creating newreg=711 from oldreg=416, assigning class GENERAL_REGS to r711
  535: {r240:DI=r711:DI+r239:DI;clobber flags:CC;}
      REG_DEAD r239:DI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  910: r711:DI=r416:DI

            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=2,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 910:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 536:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 537:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 538
	 Choosing alt 2 in insn 538:  (0) r  (1) 0  (2) mr {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 539:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 540:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 541:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 542:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 543:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 544:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 545
	 Choosing alt 1 in insn 545:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 547:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 548
	 Choosing alt 1 in insn 548:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 549:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 550:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 551
	 Choosing alt 2 in insn 551:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
            alt=2,overall=12,losers=2 -- refuse
          alt=3,overall=6,losers=1,rld_nregs=1
            2 Non pseudo reload: reject++
            alt=0,overall=7,losers=1 -- refuse
            alt=1,overall=12,losers=2 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=6,losers=1,rld_nregs=1
	 Choosing alt 3 in insn 552:  (0) r  (1) r  (2) le {*adddi_1}
      Creating newreg=712 from oldreg=424, assigning class GENERAL_REGS to r712
  552: {r252:DI=r712:DI+r251:DI;clobber flags:CC;}
      REG_DEAD r251:DI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  911: r712:DI=r424:DI

            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=2,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 911:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 553:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 554:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 555:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 556:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 557:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 558:  (0) x  (1) 0  (2) xm {*fop_sf_1}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 560:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=6,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 561:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=713 from oldreg=258, assigning class SSE_REGS to r713
  561: r713:SF=r713:SF*[frame:DI-0x114]
      REG_DEAD r258:SF
    Inserting insn reload before:
  912: r713:SF=r258:SF
    Inserting insn reload after:
  913: r259:SF=r713:SF

          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 562:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 563:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 564
	 Choosing alt 2 in insn 564:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
            alt=2,overall=12,losers=2 -- refuse
          alt=3,overall=6,losers=1,rld_nregs=1
            2 Non pseudo reload: reject++
            alt=0,overall=7,losers=1 -- refuse
            alt=1,overall=12,losers=2 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=6,losers=1,rld_nregs=1
	 Choosing alt 3 in insn 565:  (0) r  (1) r  (2) le {*adddi_1}
      Creating newreg=714 from oldreg=349, assigning class GENERAL_REGS to r714
  565: {r262:DI=r714:DI+r261:DI;clobber flags:CC;}
      REG_DEAD r261:DI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  914: r714:DI=r349:DI

            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=2,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 914:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 566:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 567:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 568:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 569:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 570:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 571:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 572:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 573
	 Choosing alt 2 in insn 573:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
            alt=2,overall=12,losers=2 -- refuse
          alt=3,overall=6,losers=1,rld_nregs=1
            2 Non pseudo reload: reject++
            alt=0,overall=7,losers=1 -- refuse
            alt=1,overall=12,losers=2 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=6,losers=1,rld_nregs=1
	 Choosing alt 3 in insn 574:  (0) r  (1) r  (2) le {*adddi_1}
      Creating newreg=715 from oldreg=349, assigning class GENERAL_REGS to r715
  574: {r268:DI=r715:DI+r267:DI;clobber flags:CC;}
      REG_DEAD r267:DI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  915: r715:DI=r349:DI

            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=2,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 915:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 575:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 576:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 577:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 578
	 Choosing alt 1 in insn 578:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 579:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 580:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 581:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 582:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=716 from oldreg=606, assigning class SSE_REGS to r716
  582: r716:SF=r716:SF*[frame:DI-0x114]
      REG_DEAD r606:SF
    Inserting insn reload before:
  916: r716:SF=r606:SF
    Inserting insn reload after:
  917: r272:SF=r716:SF

          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 583:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 584:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 585
	 Choosing alt 2 in insn 585:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
            alt=2,overall=12,losers=2 -- refuse
          alt=3,overall=6,losers=1,rld_nregs=1
            2 Non pseudo reload: reject++
            alt=0,overall=7,losers=1 -- refuse
            alt=1,overall=12,losers=2 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=6,losers=1,rld_nregs=1
	 Choosing alt 3 in insn 586:  (0) r  (1) r  (2) le {*adddi_1}
      Creating newreg=717 from oldreg=357, assigning class GENERAL_REGS to r717
  586: {r275:DI=r717:DI+r274:DI;clobber flags:CC;}
      REG_DEAD r274:DI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  918: r717:DI=r357:DI

            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=2,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 918:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 587:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 588:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 589:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 590:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 591:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 592:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 593:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 594
	 Choosing alt 2 in insn 594:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
            alt=2,overall=12,losers=2 -- refuse
          alt=3,overall=6,losers=1,rld_nregs=1
            2 Non pseudo reload: reject++
            alt=0,overall=7,losers=1 -- refuse
            alt=1,overall=12,losers=2 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=6,losers=1,rld_nregs=1
	 Choosing alt 3 in insn 595:  (0) r  (1) r  (2) le {*adddi_1}
      Creating newreg=718 from oldreg=357, assigning class GENERAL_REGS to r718
  595: {r281:DI=r718:DI+r280:DI;clobber flags:CC;}
      REG_DEAD r280:DI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  919: r718:DI=r357:DI

            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=2,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 919:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 596:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 597:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 598:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 599
	 Choosing alt 1 in insn 599:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 600:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 601:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 602:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 603:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 604
	 Choosing alt 2 in insn 604:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
            alt=2,overall=12,losers=2 -- refuse
          alt=3,overall=6,losers=1,rld_nregs=1
            2 Non pseudo reload: reject++
            alt=0,overall=7,losers=1 -- refuse
            alt=1,overall=12,losers=2 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=6,losers=1,rld_nregs=1
	 Choosing alt 3 in insn 605:  (0) r  (1) r  (2) le {*adddi_1}
      Creating newreg=719 from oldreg=383, assigning class GENERAL_REGS to r719
  605: {r287:DI=r719:DI+r286:DI;clobber flags:CC;}
      REG_DEAD r286:DI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  920: r719:DI=r383:DI

            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=2,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 920:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 606:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 607:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            alt=2,overall=6,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 608:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 609:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 610:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 611
	 Choosing alt 2 in insn 611:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
            alt=2,overall=12,losers=2 -- refuse
          alt=3,overall=6,losers=1,rld_nregs=1
            2 Non pseudo reload: reject++
            alt=0,overall=7,losers=1 -- refuse
            alt=1,overall=12,losers=2 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=6,losers=1,rld_nregs=1
	 Choosing alt 3 in insn 612:  (0) r  (1) r  (2) le {*adddi_1}
      Creating newreg=720 from oldreg=365, assigning class GENERAL_REGS to r720
  612: {r292:DI=r720:DI+r291:DI;clobber flags:CC;}
      REG_DEAD r291:DI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  921: r720:DI=r365:DI

            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=2,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 921:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 613:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 614:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 615:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 616:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 617:  (0) v  (1) m {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 618:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 619:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 620:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 626:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 632:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 638:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 639:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 640:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 642:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 643:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 644:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 645:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 648:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 649:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 650:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 652:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 653:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 654:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 655:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 658:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 659:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 660
	 Choosing alt 2 in insn 660:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
            alt=2,overall=12,losers=2 -- refuse
          alt=3,overall=6,losers=1,rld_nregs=1
            2 Non pseudo reload: reject++
            alt=0,overall=7,losers=1 -- refuse
            alt=1,overall=12,losers=2 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=6,losers=1,rld_nregs=1
	 Choosing alt 3 in insn 661:  (0) r  (1) r  (2) le {*adddi_1}
      Creating newreg=721 from oldreg=440, assigning class GENERAL_REGS to r721
  661: {r298:DI=r721:DI+r297:DI;clobber flags:CC;}
      REG_DEAD r297:DI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  922: r721:DI=r440:DI

            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=2,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 922:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 662:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 663:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 664:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 665:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 666:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 667:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 668:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 669:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 670:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 671
	 Choosing alt 2 in insn 671:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
            alt=2,overall=12,losers=2 -- refuse
          alt=3,overall=6,losers=1,rld_nregs=1
            2 Non pseudo reload: reject++
            alt=0,overall=7,losers=1 -- refuse
            alt=1,overall=12,losers=2 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=6,losers=1,rld_nregs=1
	 Choosing alt 3 in insn 672:  (0) r  (1) r  (2) le {*adddi_1}
      Creating newreg=722 from oldreg=440, assigning class GENERAL_REGS to r722
  672: {r305:DI=r722:DI+r304:DI;clobber flags:CC;}
      REG_DEAD r304:DI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  923: r722:DI=r440:DI

            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=2,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 923:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 673:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 674:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 675:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 676:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 677:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 678:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 679:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 681:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 682
	 Choosing alt 1 in insn 682:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 683
	 Choosing alt 1 in insn 683:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 685:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 686:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 687
	 Choosing alt 2 in insn 687:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
            alt=2,overall=12,losers=2 -- refuse
          alt=3,overall=6,losers=1,rld_nregs=1
            2 Non pseudo reload: reject++
            alt=0,overall=7,losers=1 -- refuse
            alt=1,overall=12,losers=2 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=6,losers=1,rld_nregs=1
	 Choosing alt 3 in insn 688:  (0) r  (1) r  (2) le {*adddi_1}
      Creating newreg=723 from oldreg=349, assigning class GENERAL_REGS to r723
  688: {r316:DI=r723:DI+r315:DI;clobber flags:CC;}
      REG_DEAD r315:DI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  924: r723:DI=r349:DI

            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=2,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 924:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 689:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 690:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 691:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 692:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 693:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 694
	 Choosing alt 1 in insn 694:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 695:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 696:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 697
	 Choosing alt 2 in insn 697:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
            alt=2,overall=12,losers=2 -- refuse
          alt=3,overall=6,losers=1,rld_nregs=1
            2 Non pseudo reload: reject++
            alt=0,overall=7,losers=1 -- refuse
            alt=1,overall=12,losers=2 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=6,losers=1,rld_nregs=1
	 Choosing alt 3 in insn 698:  (0) r  (1) r  (2) le {*adddi_1}
      Creating newreg=724 from oldreg=357, assigning class GENERAL_REGS to r724
  698: {r323:DI=r724:DI+r322:DI;clobber flags:CC;}
      REG_DEAD r322:DI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  925: r724:DI=r357:DI

            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=2,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 925:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 699:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 700:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 701:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 702:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 703:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 704:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 705
	 Choosing alt 1 in insn 705:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 707:  (0) x  (1) 0  (2) xm {*fop_sf_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 709:  (0) v  (1) vm {*cmpisf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 710:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 711:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 712:  (0) v  (1) vm {*cmpiusf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 713:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 714:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 715
	 Choosing alt 0 in insn 715:  (0) =r  (1) %0  (2) rme {*iorsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 716:  (0) r {*cmpsi_ccno_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 719:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 722:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 723:  (0) v  (1) vm {*cmpisf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 724:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 725:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 726:  (0) v  (1) vm {*cmpiusf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 727:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 728:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 729
	 Choosing alt 0 in insn 729:  (0) =r  (1) %0  (2) rme {*iorsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 730:  (0) r {*cmpsi_ccno_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 733:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 736:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 737:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 738
	 Choosing alt 2 in insn 738:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
            alt=2,overall=12,losers=2 -- refuse
          alt=3,overall=6,losers=1,rld_nregs=1
            2 Non pseudo reload: reject++
            alt=0,overall=7,losers=1 -- refuse
            alt=1,overall=12,losers=2 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=6,losers=1,rld_nregs=1
	 Choosing alt 3 in insn 739:  (0) r  (1) r  (2) le {*adddi_1}
      Creating newreg=725 from oldreg=432, assigning class GENERAL_REGS to r725
  739: {r338:DI=r725:DI+r337:DI;clobber flags:CC;}
      REG_DEAD r337:DI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  926: r725:DI=r432:DI

            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=2,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 926:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 740:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 741:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 742:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 743:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 744:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 745:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 751:  (0) rm  (1) 0  (2) re {*addsi_1}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #1: **********

EBB 2
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=726 from oldreg=400, assigning class GENERAL_REGS to inheritance r726
    Original reg change 400->726 (bb2):
  852: r671:DI=r726:DI
    Add inheritance<-original before:
  927: r726:DI=r400:DI

    Inheritance reuse change 400->726 (bb2):
  858: r674:DI=r726:DI
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=727 from oldreg=400, assigning class GENERAL_REGS to inheritance r727
    Original reg change 400->727 (bb2):
  851: r727:DI=r670:DI
    Add original<-inheritance after:
  928: r400:DI=r727:DI

    Inheritance reuse change 400->727 (bb2):
  927: r726:DI=r727:DI
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=728 from oldreg=398, assigning class GENERAL_REGS to inheritance r728
    Original reg change 398->728 (bb2):
  848: r669:DI=r728:DI
    Add inheritance<-original before:
  929: r728:DI=r398:DI

    Inheritance reuse change 398->728 (bb2):
  854: r672:DI=r728:DI
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=729 from oldreg=398, assigning class GENERAL_REGS to inheritance r729
    Original reg change 398->729 (bb2):
  847: r729:DI=r668:DI
    Add original<-inheritance after:
  930: r398:DI=r729:DI

    Inheritance reuse change 398->729 (bb2):
  929: r728:DI=r729:DI
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=730 from oldreg=390, assigning class GENERAL_REGS to inheritance r730
    Original reg change 390->730 (bb2):
  842: r666:DI=r730:DI
    Add inheritance<-original before:
  931: r730:DI=r390:DI

    Inheritance reuse change 390->730 (bb2):
  844: r667:DI=r730:DI
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=731 from oldreg=390, assigning class GENERAL_REGS to inheritance r731
    Original reg change 390->731 (bb2):
  841: r731:DI=r665:DI
    Add original<-inheritance after:
  932: r390:DI=r731:DI

    Inheritance reuse change 390->731 (bb2):
  931: r730:DI=r731:DI
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=732 from oldreg=367, assigning class GENERAL_REGS to inheritance r732
    Original reg change 367->732 (bb2):
  824: r657:DI=r732:DI
    Add inheritance<-original before:
  933: r732:DI=r367:DI

    Inheritance reuse change 367->732 (bb2):
  830: r660:DI=r732:DI
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=733 from oldreg=367, assigning class GENERAL_REGS to inheritance r733
    Original reg change 367->733 (bb2):
  823: r733:DI=r656:DI
    Add original<-inheritance after:
  934: r367:DI=r733:DI

    Inheritance reuse change 367->733 (bb2):
  933: r732:DI=r733:DI
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
EBB 3 4
EBB 5 6
EBB 32
EBB 7
EBB 31
EBB 8
EBB 9 10
EBB 11 12
EBB 13 14 15
EBB 16
EBB 17
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=734 from oldreg=357, assigning class GENERAL_REGS to inheritance r734
    Original reg change 357->734 (bb17):
  918: r717:DI=r734:DI
    Add inheritance<-original before:
  935: r734:DI=r357:DI

    Inheritance reuse change 357->734 (bb17):
  919: r718:DI=r734:DI
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=735 from oldreg=349, assigning class GENERAL_REGS to inheritance r735
    Original reg change 349->735 (bb17):
  914: r714:DI=r735:DI
    Add inheritance<-original before:
  936: r735:DI=r349:DI

    Inheritance reuse change 349->735 (bb17):
  915: r715:DI=r735:DI
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=736 from oldreg=416, assigning class GENERAL_REGS to inheritance r736
    Original reg change 416->736 (bb17):
  909: r710:DI=r736:DI
    Add inheritance<-original before:
  937: r736:DI=r416:DI

    Inheritance reuse change 416->736 (bb17):
  910: r711:DI=r736:DI
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=737 from oldreg=383, assigning class GENERAL_REGS to inheritance r737
    Original reg change 383->737 (bb17):
  908: r709:DI=r737:DI
    Add inheritance<-original before:
  938: r737:DI=r383:DI

    Inheritance reuse change 383->737 (bb17):
  920: r719:DI=r737:DI
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=738 from oldreg=365, assigning class GENERAL_REGS to inheritance r738
    Original reg change 365->738 (bb17):
  907: r708:DI=r738:DI
    Add inheritance<-original before:
  939: r738:DI=r365:DI

    Inheritance reuse change 365->738 (bb17):
  921: r720:DI=r738:DI
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
EBB 35
EBB 18
EBB 34
EBB 19
EBB 33
EBB 20
EBB 21 22
EBB 23 24 25
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=739 from oldreg=440, assigning class GENERAL_REGS to inheritance r739
    Original reg change 440->739 (bb24):
  922: r721:DI=r739:DI
    Add inheritance<-original before:
  940: r739:DI=r440:DI

    Inheritance reuse change 440->739 (bb24):
  923: r722:DI=r739:DI
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
EBB 26 27
EBB 28
EBB 37
EBB 29
EBB 36
EBB 30

********** Pseudo live ranges #1: **********

  BB 30
   Insn 764: point = 0, n_alt = -1
  BB 36
   Insn 799: point = 0, n_alt = -1
  BB 21
   Insn 646: point = 0, n_alt = -1
   Insn 645: point = 0, n_alt = 0
   Insn 644: point = 1, n_alt = 0
   Insn 643: point = 3, n_alt = 0
   Insn 642: point = 4, n_alt = 0
  BB 29
   Insn 780: point = 5, n_alt = -1
   Insn 751: point = 5, n_alt = 1
  BB 37
   Insn 802: point = 6, n_alt = -1
  BB 23
   Insn 656: point = 7, n_alt = -1
   Insn 655: point = 7, n_alt = 0
   Insn 654: point = 8, n_alt = 0
   Insn 653: point = 10, n_alt = 0
   Insn 652: point = 11, n_alt = 0
  BB 28
   Insn 778: point = 12, n_alt = -1
   Insn 745: point = 12, n_alt = 1
   Insn 744: point = 12, n_alt = 8
   Insn 743: point = 13, n_alt = 3
   Insn 742: point = 14, n_alt = 0
   Insn 741: point = 16, n_alt = 1
   Insn 740: point = 18, n_alt = 0
   Insn 739: point = 19, n_alt = 3
   Insn 926: point = 21, n_alt = 3
   Insn 738: point = 22, n_alt = 2
   Insn 737: point = 24, n_alt = 1
   Insn 736: point = 26, n_alt = 0
  BB 27
   Insn 733: point = 28, n_alt = 7
  BB 26
   Insn 731: point = 30, n_alt = -1
   Insn 730: point = 30, n_alt = 0
   Insn 729: point = 31, n_alt = 0
   Insn 728: point = 33, n_alt = 0
   Insn 727: point = 35, n_alt = 0
   Insn 726: point = 36, n_alt = 1
   Insn 725: point = 36, n_alt = 0
   Insn 724: point = 38, n_alt = 0
   Insn 723: point = 39, n_alt = 1
   Insn 722: point = 40, n_alt = 7
  BB 25
   Insn 719: point = 42, n_alt = 7
  BB 24
   Insn 717: point = 44, n_alt = -1
   Insn 716: point = 44, n_alt = 0
   Insn 715: point = 45, n_alt = 0
   Insn 714: point = 47, n_alt = 0
   Insn 713: point = 49, n_alt = 0
   Insn 712: point = 50, n_alt = 1
   Insn 711: point = 50, n_alt = 0
   Insn 710: point = 52, n_alt = 0
   Insn 709: point = 53, n_alt = 1
   Insn 708: point = 53, n_alt = -2
   Insn 707: point = 55, n_alt = 2
   Insn 706: point = 57, n_alt = -2
   Insn 705: point = 59, n_alt = 1
   Insn 704: point = 61, n_alt = 7
   Insn 703: point = 62, n_alt = 7
   Insn 702: point = 64, n_alt = 3
   Insn 701: point = 65, n_alt = 0
   Insn 700: point = 67, n_alt = 1
   Insn 699: point = 69, n_alt = 0
   Insn 698: point = 70, n_alt = 3
   Insn 925: point = 72, n_alt = 3
   Insn 697: point = 73, n_alt = 2
   Insn 696: point = 75, n_alt = 1
   Insn 695: point = 77, n_alt = 0
   Insn 694: point = 78, n_alt = 1
   Insn 693: point = 80, n_alt = 7
   Insn 692: point = 82, n_alt = 3
   Insn 691: point = 83, n_alt = 0
   Insn 690: point = 85, n_alt = 1
   Insn 689: point = 87, n_alt = 0
   Insn 688: point = 88, n_alt = 3
   Insn 924: point = 90, n_alt = 3
   Insn 687: point = 91, n_alt = 2
   Insn 686: point = 93, n_alt = 1
   Insn 685: point = 95, n_alt = 0
   Insn 684: point = 96, n_alt = -2
   Insn 683: point = 98, n_alt = 1
   Insn 682: point = 100, n_alt = 1
   Insn 681: point = 102, n_alt = 7
   Insn 680: point = 103, n_alt = -2
   Insn 679: point = 105, n_alt = 2
   Insn 678: point = 107, n_alt = 7
   Insn 677: point = 108, n_alt = 7
   Insn 676: point = 110, n_alt = 3
   Insn 675: point = 111, n_alt = 0
   Insn 674: point = 113, n_alt = 1
   Insn 673: point = 115, n_alt = 0
   Insn 672: point = 116, n_alt = 3
   Insn 923: point = 118, n_alt = 3
	   Creating copy r722<-r739@1000
   Insn 671: point = 120, n_alt = 2
   Insn 670: point = 122, n_alt = 1
   Insn 669: point = 124, n_alt = 0
   Insn 668: point = 125, n_alt = 1
   Insn 667: point = 127, n_alt = 7
   Insn 666: point = 128, n_alt = 7
   Insn 665: point = 130, n_alt = 3
   Insn 664: point = 131, n_alt = 0
   Insn 663: point = 133, n_alt = 1
   Insn 662: point = 135, n_alt = 0
   Insn 661: point = 136, n_alt = 3
   Insn 922: point = 138, n_alt = 3
	   Creating copy r721<-r739@1000
   Insn 940: point = 139, n_alt = -1
   Insn 660: point = 140, n_alt = 2
   Insn 659: point = 142, n_alt = 1
   Insn 658: point = 144, n_alt = 0
  BB 22
   Insn 650: point = 146, n_alt = 1
   Insn 649: point = 146, n_alt = 0
   Insn 648: point = 148, n_alt = 3
  BB 20
   Insn 640: point = 150, n_alt = 1
   Insn 639: point = 151, n_alt = 0
   Insn 638: point = 152, n_alt = 0
  BB 33
   Insn 790: point = 154, n_alt = -1
  BB 9
   Insn 387: point = 155, n_alt = -1
   Insn 386: point = 155, n_alt = 0
   Insn 385: point = 156, n_alt = 0
   Insn 384: point = 158, n_alt = 0
   Insn 383: point = 159, n_alt = 0
   Insn 893: point = 160, n_alt = 0
  BB 19
   Insn 776: point = 162, n_alt = -1
   Insn 632: point = 162, n_alt = 1
  BB 34
   Insn 793: point = 163, n_alt = -1
  BB 11
   Insn 397: point = 164, n_alt = -1
   Insn 396: point = 164, n_alt = 0
   Insn 395: point = 165, n_alt = 0
   Insn 394: point = 167, n_alt = 0
   Insn 393: point = 168, n_alt = 0
   Insn 895: point = 169, n_alt = 0
  BB 18
   Insn 774: point = 171, n_alt = -1
   Insn 626: point = 171, n_alt = 1
  BB 35
   Insn 796: point = 172, n_alt = -1
  BB 13
   Insn 407: point = 173, n_alt = -1
   Insn 406: point = 173, n_alt = 0
   Insn 405: point = 174, n_alt = 0
   Insn 404: point = 176, n_alt = 0
   Insn 403: point = 177, n_alt = 0
  BB 17
   Insn 772: point = 178, n_alt = -1
   Insn 620: point = 178, n_alt = 1
   Insn 619: point = 178, n_alt = 8
   Insn 618: point = 179, n_alt = 3
   Insn 617: point = 180, n_alt = 7
   Insn 616: point = 182, n_alt = 3
   Insn 615: point = 183, n_alt = 0
   Insn 614: point = 185, n_alt = 0
   Insn 613: point = 187, n_alt = 0
   Insn 612: point = 188, n_alt = 3
   Insn 921: point = 190, n_alt = 3
	   Creating copy r720<-r738@1000
   Insn 611: point = 192, n_alt = 2
   Insn 610: point = 194, n_alt = 0
   Insn 609: point = 196, n_alt = 0
   Insn 608: point = 197, n_alt = 3
   Insn 607: point = 199, n_alt = 0
   Insn 606: point = 201, n_alt = 0
   Insn 605: point = 202, n_alt = 3
   Insn 920: point = 204, n_alt = 3
	   Creating copy r719<-r737@1000
   Insn 604: point = 206, n_alt = 2
   Insn 603: point = 208, n_alt = 0
   Insn 602: point = 210, n_alt = 0
   Insn 601: point = 211, n_alt = 8
   Insn 600: point = 212, n_alt = 3
   Insn 599: point = 213, n_alt = 1
   Insn 598: point = 215, n_alt = 0
   Insn 597: point = 217, n_alt = 0
   Insn 596: point = 219, n_alt = 0
   Insn 595: point = 220, n_alt = 3
   Insn 919: point = 222, n_alt = 3
	   Creating copy r718<-r734@1000
   Insn 594: point = 224, n_alt = 2
   Insn 593: point = 226, n_alt = 0
   Insn 592: point = 228, n_alt = 0
   Insn 591: point = 229, n_alt = 7
   Insn 590: point = 231, n_alt = 3
   Insn 589: point = 232, n_alt = 0
   Insn 588: point = 234, n_alt = 0
   Insn 587: point = 236, n_alt = 0
   Insn 586: point = 237, n_alt = 3
   Insn 918: point = 239, n_alt = 3
	   Creating copy r717<-r734@1000
   Insn 935: point = 240, n_alt = -1
   Insn 585: point = 241, n_alt = 2
   Insn 584: point = 243, n_alt = 0
   Insn 583: point = 245, n_alt = 0
   Insn 917: point = 246, n_alt = -2
	Hard reg 22 is preferable by r716 with profit 1000
   Insn 582: point = 248, n_alt = 1
   Insn 916: point = 248, n_alt = -2
	Hard reg 22 is preferable by r716 with profit 1000
	Hard reg 21 is preferable by r716 with profit 1000
   Insn 581: point = 250, n_alt = 7
   Insn 580: point = 251, n_alt = 8
   Insn 579: point = 252, n_alt = 3
   Insn 578: point = 253, n_alt = 1
   Insn 577: point = 255, n_alt = 0
   Insn 576: point = 257, n_alt = 0
   Insn 575: point = 259, n_alt = 0
   Insn 574: point = 260, n_alt = 3
   Insn 915: point = 262, n_alt = 3
	   Creating copy r715<-r735@1000
   Insn 573: point = 264, n_alt = 2
   Insn 572: point = 266, n_alt = 0
   Insn 571: point = 268, n_alt = 0
   Insn 570: point = 269, n_alt = 7
   Insn 569: point = 271, n_alt = 3
   Insn 568: point = 272, n_alt = 0
   Insn 567: point = 274, n_alt = 0
   Insn 566: point = 276, n_alt = 0
   Insn 565: point = 277, n_alt = 3
   Insn 914: point = 279, n_alt = 3
	   Creating copy r714<-r735@1000
   Insn 936: point = 280, n_alt = -1
   Insn 564: point = 281, n_alt = 2
   Insn 563: point = 283, n_alt = 0
   Insn 562: point = 285, n_alt = 0
   Insn 913: point = 286, n_alt = -2
	Hard reg 22 is preferable by r713 with profit 1000
   Insn 561: point = 288, n_alt = 1
   Insn 912: point = 288, n_alt = -2
	Hard reg 22 is preferable by r713 with profit 1000
	Hard reg 21 is preferable by r713 with profit 1000
   Insn 560: point = 290, n_alt = 1
   Insn 559: point = 292, n_alt = -2
   Insn 558: point = 294, n_alt = 2
   Insn 557: point = 296, n_alt = 7
   Insn 556: point = 298, n_alt = 3
   Insn 555: point = 299, n_alt = 0
   Insn 554: point = 301, n_alt = 0
   Insn 553: point = 303, n_alt = 0
   Insn 552: point = 304, n_alt = 3
   Insn 911: point = 306, n_alt = 3
   Insn 551: point = 307, n_alt = 2
   Insn 550: point = 309, n_alt = 0
   Insn 549: point = 311, n_alt = 0
   Insn 548: point = 312, n_alt = 1
   Insn 547: point = 314, n_alt = 7
   Insn 546: point = 315, n_alt = -2
   Insn 545: point = 317, n_alt = 1
   Insn 544: point = 319, n_alt = 7
   Insn 543: point = 321, n_alt = 3
   Insn 542: point = 322, n_alt = 0
   Insn 541: point = 324, n_alt = 0
   Insn 540: point = 326, n_alt = 0
   Insn 539: point = 327, n_alt = 0
   Insn 538: point = 329, n_alt = 2
   Insn 537: point = 331, n_alt = 0
   Insn 536: point = 333, n_alt = 0
   Insn 535: point = 334, n_alt = 3
   Insn 910: point = 336, n_alt = 3
	   Creating copy r711<-r736@1000
   Insn 534: point = 338, n_alt = 2
   Insn 533: point = 340, n_alt = 0
   Insn 532: point = 342, n_alt = 0
   Insn 531: point = 344, n_alt = 0
   Insn 530: point = 345, n_alt = 7
   Insn 529: point = 347, n_alt = 3
   Insn 528: point = 348, n_alt = 0
   Insn 527: point = 350, n_alt = 0
   Insn 526: point = 352, n_alt = 0
   Insn 525: point = 353, n_alt = 0
   Insn 524: point = 355, n_alt = 2
   Insn 523: point = 357, n_alt = 0
   Insn 522: point = 359, n_alt = 0
   Insn 521: point = 360, n_alt = 3
   Insn 909: point = 362, n_alt = 3
	   Creating copy r710<-r736@1000
   Insn 937: point = 363, n_alt = -1
   Insn 520: point = 364, n_alt = 2
   Insn 519: point = 366, n_alt = 0
   Insn 518: point = 368, n_alt = 0
   Insn 517: point = 369, n_alt = 8
   Insn 516: point = 370, n_alt = 1
   Insn 515: point = 372, n_alt = 7
   Insn 514: point = 374, n_alt = 3
   Insn 513: point = 375, n_alt = 0
   Insn 512: point = 377, n_alt = 0
   Insn 511: point = 379, n_alt = 0
   Insn 510: point = 380, n_alt = 3
   Insn 908: point = 382, n_alt = 3
	   Creating copy r709<-r737@1000
   Insn 938: point = 383, n_alt = -1
   Insn 509: point = 384, n_alt = 2
   Insn 508: point = 386, n_alt = 0
   Insn 507: point = 388, n_alt = 0
   Insn 506: point = 389, n_alt = 7
   Insn 505: point = 391, n_alt = 3
   Insn 504: point = 392, n_alt = 0
   Insn 503: point = 394, n_alt = 0
   Insn 502: point = 396, n_alt = 0
   Insn 501: point = 397, n_alt = 3
   Insn 907: point = 399, n_alt = 3
	   Creating copy r708<-r738@1000
   Insn 939: point = 400, n_alt = -1
   Insn 500: point = 401, n_alt = 2
   Insn 499: point = 403, n_alt = 0
   Insn 498: point = 405, n_alt = 0
   Insn 497: point = 406, n_alt = 8
   Insn 496: point = 407, n_alt = 1
   Insn 495: point = 409, n_alt = 7
   Insn 494: point = 411, n_alt = 3
   Insn 493: point = 412, n_alt = 0
   Insn 492: point = 414, n_alt = 0
   Insn 491: point = 416, n_alt = 0
   Insn 490: point = 417, n_alt = 0
   Insn 489: point = 419, n_alt = 2
   Insn 906: point = 421, n_alt = 3
   Insn 488: point = 422, n_alt = 0
   Insn 487: point = 424, n_alt = 0
   Insn 486: point = 425, n_alt = 3
   Insn 905: point = 427, n_alt = 3
   Insn 485: point = 428, n_alt = 2
   Insn 904: point = 430, n_alt = 3
   Insn 484: point = 431, n_alt = 0
   Insn 483: point = 433, n_alt = 0
   Insn 482: point = 434, n_alt = 1
   Insn 481: point = 436, n_alt = 7
   Insn 480: point = 438, n_alt = 3
   Insn 479: point = 439, n_alt = 0
   Insn 478: point = 441, n_alt = 0
   Insn 477: point = 443, n_alt = 0
   Insn 476: point = 444, n_alt = 3
   Insn 903: point = 446, n_alt = 3
   Insn 475: point = 447, n_alt = 2
   Insn 902: point = 449, n_alt = 3
   Insn 474: point = 450, n_alt = 0
   Insn 473: point = 452, n_alt = 0
   Insn 472: point = 453, n_alt = 7
   Insn 471: point = 455, n_alt = 3
   Insn 470: point = 456, n_alt = 3
   Insn 469: point = 458, n_alt = 0
   Insn 468: point = 460, n_alt = 0
  BB 15
   Insn 770: point = 462, n_alt = -1
   Insn 438: point = 462, n_alt = 8
   Insn 437: point = 463, n_alt = 7
   Insn 436: point = 464, n_alt = 3
   Insn 435: point = 465, n_alt = 0
   Insn 434: point = 467, n_alt = 0
   Insn 433: point = 469, n_alt = 0
   Insn 432: point = 470, n_alt = 3
   Insn 898: point = 472, n_alt = 3
   Insn 431: point = 473, n_alt = 2
   Insn 430: point = 475, n_alt = 0
   Insn 429: point = 477, n_alt = 0
  BB 16
   Insn 465: point = 479, n_alt = 8
   Insn 464: point = 480, n_alt = 3
   Insn 463: point = 481, n_alt = 0
   Insn 462: point = 483, n_alt = 0
   Insn 461: point = 485, n_alt = 0
   Insn 460: point = 487, n_alt = 0
   Insn 459: point = 488, n_alt = 3
   Insn 901: point = 490, n_alt = 3
   Insn 458: point = 491, n_alt = 2
   Insn 457: point = 493, n_alt = 0
   Insn 456: point = 495, n_alt = 0
   Insn 455: point = 496, n_alt = 7
   Insn 454: point = 498, n_alt = 3
   Insn 453: point = 499, n_alt = 0
   Insn 452: point = 501, n_alt = 0
   Insn 451: point = 503, n_alt = 0
   Insn 450: point = 504, n_alt = 0
   Insn 449: point = 506, n_alt = 2
   Insn 900: point = 508, n_alt = 3
   Insn 448: point = 509, n_alt = 0
   Insn 447: point = 511, n_alt = 0
   Insn 446: point = 512, n_alt = 3
   Insn 899: point = 514, n_alt = 3
   Insn 445: point = 515, n_alt = 2
   Insn 444: point = 517, n_alt = 0
   Insn 443: point = 519, n_alt = 0
  BB 14
   Insn 424: point = 521, n_alt = -1
   Insn 423: point = 521, n_alt = 1
   Insn 422: point = 522, n_alt = 7
   Insn 421: point = 523, n_alt = 7
   Insn 420: point = 525, n_alt = 3
   Insn 419: point = 526, n_alt = 0
   Insn 418: point = 528, n_alt = 0
   Insn 417: point = 530, n_alt = 0
   Insn 416: point = 531, n_alt = 0
   Insn 415: point = 533, n_alt = 2
   Insn 897: point = 535, n_alt = 3
   Insn 414: point = 536, n_alt = 0
   Insn 413: point = 538, n_alt = 0
   Insn 412: point = 539, n_alt = 3
   Insn 896: point = 541, n_alt = 3
   Insn 411: point = 542, n_alt = 2
   Insn 410: point = 544, n_alt = 0
   Insn 409: point = 546, n_alt = 0
  BB 12
   Insn 401: point = 548, n_alt = 1
   Insn 400: point = 548, n_alt = 0
   Insn 399: point = 550, n_alt = 3
  BB 10
   Insn 391: point = 552, n_alt = 1
   Insn 894: point = 553, n_alt = 1
   Insn 390: point = 555, n_alt = 0
   Insn 389: point = 556, n_alt = 0
  BB 8
   Insn 381: point = 558, n_alt = 1
   Insn 892: point = 558, n_alt = 1
   Insn 380: point = 560, n_alt = 0
   Insn 379: point = 562, n_alt = 3
  BB 31
   Insn 784: point = 564, n_alt = -1
  BB 3
   Insn 325: point = 565, n_alt = -1
   Insn 324: point = 565, n_alt = 0
   Insn 323: point = 566, n_alt = 0
   Insn 322: point = 568, n_alt = 0
   Insn 321: point = 569, n_alt = 0
  BB 7
   Insn 767: point = 570, n_alt = -1
   Insn 373: point = 570, n_alt = 1
  BB 32
   Insn 787: point = 571, n_alt = -1
  BB 5
   Insn 335: point = 572, n_alt = -1
   Insn 334: point = 572, n_alt = 0
   Insn 333: point = 573, n_alt = 0
   Insn 332: point = 575, n_alt = 0
   Insn 331: point = 576, n_alt = 0
  BB 6
   Insn 765: point = 577, n_alt = -1
   Insn 367: point = 577, n_alt = 1
   Insn 366: point = 577, n_alt = 8
   Insn 365: point = 578, n_alt = 7
   Insn 364: point = 579, n_alt = 3
   Insn 363: point = 580, n_alt = 0
   Insn 362: point = 582, n_alt = 0
   Insn 361: point = 584, n_alt = 0
   Insn 360: point = 585, n_alt = 3
   Insn 891: point = 587, n_alt = 3
   Insn 359: point = 588, n_alt = 2
   Insn 358: point = 590, n_alt = 0
   Insn 357: point = 592, n_alt = 0
   Insn 356: point = 593, n_alt = 8
   Insn 355: point = 594, n_alt = 7
   Insn 354: point = 595, n_alt = 3
   Insn 353: point = 596, n_alt = 0
   Insn 352: point = 598, n_alt = 0
   Insn 351: point = 600, n_alt = 0
   Insn 350: point = 601, n_alt = 3
   Insn 890: point = 603, n_alt = 3
   Insn 349: point = 604, n_alt = 2
   Insn 348: point = 606, n_alt = 0
   Insn 347: point = 608, n_alt = 0
   Insn 346: point = 609, n_alt = 8
   Insn 345: point = 610, n_alt = 7
   Insn 344: point = 611, n_alt = 3
   Insn 343: point = 612, n_alt = 0
   Insn 342: point = 614, n_alt = 0
   Insn 341: point = 616, n_alt = 0
   Insn 340: point = 617, n_alt = 3
   Insn 889: point = 619, n_alt = 3
   Insn 339: point = 620, n_alt = 2
   Insn 338: point = 622, n_alt = 0
   Insn 337: point = 624, n_alt = 0
  BB 4
   Insn 329: point = 626, n_alt = 1
   Insn 328: point = 626, n_alt = 0
   Insn 327: point = 628, n_alt = 3
  BB 2
   Insn 319: point = 630, n_alt = 1
   Insn 318: point = 631, n_alt = 0
   Insn 317: point = 632, n_alt = 0
   Insn 888: point = 633, n_alt = 5
   Insn 316: point = 635, n_alt = 0
   Insn 887: point = 635, n_alt = -2
   Insn 312: point = 636, n_alt = 5
   Insn 311: point = 637, n_alt = 5
   Insn 310: point = 638, n_alt = -2
   Insn 308: point = 640, n_alt = 1
   Insn 306: point = 642, n_alt = 0
   Insn 307: point = 642, n_alt = 2
   Insn 886: point = 643, n_alt = -2
	Hard reg 0 is preferable by r688 with profit 1000
   Insn 305: point = 645, n_alt = 2
   Insn 885: point = 645, n_alt = -2
   Insn 304: point = 646, n_alt = 5
   Insn 303: point = 647, n_alt = 0
   Insn 302: point = 649, n_alt = 0
   Insn 301: point = 651, n_alt = 3
   Insn 884: point = 652, n_alt = -2
	Hard reg 5 is preferable by r687 with profit 1000
   Insn 300: point = 654, n_alt = 0
   Insn 883: point = 655, n_alt = -2
	Hard reg 5 is preferable by r687 with profit 1000
	Hard reg 1 is preferable by r687 with profit 1000
   Insn 298: point = 657, n_alt = 0
   Insn 299: point = 657, n_alt = 2
   Insn 297: point = 658, n_alt = 3
   Insn 296: point = 659, n_alt = 5
   Insn 295: point = 660, n_alt = 0
   Insn 294: point = 662, n_alt = 0
   Insn 293: point = 664, n_alt = 3
   Insn 882: point = 665, n_alt = 5
   Insn 292: point = 667, n_alt = 0
   Insn 881: point = 667, n_alt = -2
   Insn 288: point = 668, n_alt = 5
   Insn 287: point = 669, n_alt = 5
   Insn 286: point = 670, n_alt = -2
   Insn 284: point = 672, n_alt = 1
   Insn 282: point = 674, n_alt = 0
   Insn 283: point = 674, n_alt = 2
   Insn 880: point = 675, n_alt = -2
	Hard reg 0 is preferable by r685 with profit 1000
   Insn 281: point = 677, n_alt = 2
   Insn 879: point = 677, n_alt = -2
   Insn 280: point = 678, n_alt = 5
   Insn 279: point = 679, n_alt = 0
   Insn 278: point = 681, n_alt = 0
   Insn 277: point = 683, n_alt = 3
   Insn 878: point = 684, n_alt = -2
	Hard reg 41 is preferable by r684 with profit 1000
   Insn 276: point = 686, n_alt = 0
   Insn 877: point = 687, n_alt = -2
	Hard reg 41 is preferable by r684 with profit 1000
	Hard reg 1 is preferable by r684 with profit 1000
   Insn 274: point = 689, n_alt = 0
   Insn 275: point = 689, n_alt = 2
   Insn 273: point = 690, n_alt = 3
   Insn 272: point = 691, n_alt = 5
   Insn 271: point = 692, n_alt = 0
   Insn 270: point = 694, n_alt = 0
   Insn 269: point = 696, n_alt = 3
   Insn 876: point = 697, n_alt = 5
   Insn 268: point = 699, n_alt = 0
   Insn 875: point = 699, n_alt = -2
   Insn 264: point = 700, n_alt = 5
   Insn 263: point = 701, n_alt = 5
   Insn 262: point = 702, n_alt = -2
   Insn 260: point = 704, n_alt = 1
   Insn 258: point = 706, n_alt = 0
   Insn 259: point = 706, n_alt = 2
   Insn 874: point = 707, n_alt = -2
	Hard reg 0 is preferable by r682 with profit 1000
   Insn 257: point = 709, n_alt = 2
   Insn 873: point = 709, n_alt = -2
   Insn 256: point = 710, n_alt = 5
   Insn 255: point = 711, n_alt = 0
   Insn 254: point = 713, n_alt = 0
   Insn 253: point = 715, n_alt = 3
   Insn 872: point = 716, n_alt = -2
	Hard reg 43 is preferable by r681 with profit 1000
   Insn 252: point = 718, n_alt = 0
   Insn 871: point = 719, n_alt = -2
	Hard reg 43 is preferable by r681 with profit 1000
	Hard reg 1 is preferable by r681 with profit 1000
   Insn 250: point = 721, n_alt = 0
   Insn 251: point = 721, n_alt = 2
   Insn 249: point = 722, n_alt = 3
   Insn 248: point = 723, n_alt = 5
   Insn 247: point = 724, n_alt = 0
   Insn 246: point = 726, n_alt = 0
   Insn 245: point = 728, n_alt = 3
   Insn 870: point = 729, n_alt = 5
   Insn 244: point = 731, n_alt = 1
   Insn 869: point = 731, n_alt = -2
	Hard reg 0 is preferable by r680 with profit 1000
   Insn 868: point = 733, n_alt = -2
	Hard reg 0 is preferable by r679 with profit 1000
   Insn 243: point = 735, n_alt = 0
   Insn 867: point = 735, n_alt = -2
   Insn 239: point = 736, n_alt = 5
   Insn 238: point = 737, n_alt = 5
   Insn 237: point = 738, n_alt = -2
   Insn 235: point = 740, n_alt = 1
   Insn 233: point = 742, n_alt = 0
   Insn 234: point = 742, n_alt = 2
   Insn 866: point = 743, n_alt = -2
	Hard reg 0 is preferable by r678 with profit 1000
   Insn 232: point = 745, n_alt = 2
   Insn 865: point = 745, n_alt = -2
   Insn 231: point = 746, n_alt = 5
   Insn 230: point = 747, n_alt = 0
   Insn 229: point = 749, n_alt = 0
   Insn 228: point = 751, n_alt = 3
   Insn 864: point = 752, n_alt = -2
	Hard reg 38 is preferable by r677 with profit 1000
   Insn 227: point = 754, n_alt = 0
   Insn 863: point = 755, n_alt = -2
	Hard reg 38 is preferable by r677 with profit 1000
	Hard reg 1 is preferable by r677 with profit 1000
   Insn 225: point = 757, n_alt = 0
   Insn 226: point = 757, n_alt = 2
   Insn 862: point = 758, n_alt = -2
	Hard reg 0 is preferable by r676 with profit 1000
   Insn 224: point = 760, n_alt = 2
   Insn 861: point = 760, n_alt = -2
   Insn 223: point = 761, n_alt = 5
   Insn 222: point = 762, n_alt = 0
   Insn 221: point = 764, n_alt = 0
   Insn 220: point = 766, n_alt = 3
   Insn 860: point = 767, n_alt = -2
	Hard reg 39 is preferable by r675 with profit 1000
   Insn 219: point = 769, n_alt = 0
   Insn 859: point = 770, n_alt = -2
	Hard reg 39 is preferable by r675 with profit 1000
	Hard reg 1 is preferable by r675 with profit 1000
   Insn 217: point = 772, n_alt = 0
   Insn 218: point = 772, n_alt = 2
   Insn 216: point = 773, n_alt = 3
   Insn 215: point = 774, n_alt = 5
   Insn 214: point = 775, n_alt = 0
   Insn 213: point = 777, n_alt = 0
   Insn 212: point = 779, n_alt = 3
   Insn 857: point = 780, n_alt = 5
   Insn 211: point = 782, n_alt = 1
   Insn 858: point = 783, n_alt = 3
	   Creating copy r674<-r726@1000
   Insn 856: point = 785, n_alt = -2
	Hard reg 0 is preferable by r673 with profit 1000
   Insn 855: point = 787, n_alt = -2
	Hard reg 0 is preferable by r672 with profit 1000
   Insn 210: point = 789, n_alt = 0
   Insn 854: point = 789, n_alt = 3
	   Creating copy r672<-r728@1000
   Insn 206: point = 791, n_alt = 5
   Insn 205: point = 792, n_alt = 5
   Insn 204: point = 793, n_alt = -2
   Insn 202: point = 795, n_alt = 1
   Insn 200: point = 797, n_alt = 0
   Insn 201: point = 797, n_alt = 2
   Insn 853: point = 798, n_alt = -2
	Hard reg 0 is preferable by r671 with profit 1000
   Insn 199: point = 800, n_alt = 2
   Insn 852: point = 800, n_alt = 3
	   Creating copy r671<-r726@1000
   Insn 927: point = 801, n_alt = -1
	   Creating copy r726<-r727@1000
   Insn 198: point = 803, n_alt = 5
   Insn 197: point = 804, n_alt = 0
   Insn 196: point = 806, n_alt = 0
   Insn 195: point = 808, n_alt = 3
   Insn 928: point = 809, n_alt = -1
   Insn 851: point = 810, n_alt = 5
	   Creating copy r670->r727@1000
   Insn 194: point = 812, n_alt = 0
   Insn 850: point = 813, n_alt = -2
	Hard reg 1 is preferable by r670 with profit 1000
   Insn 192: point = 815, n_alt = 0
   Insn 193: point = 815, n_alt = 2
   Insn 849: point = 816, n_alt = -2
	Hard reg 0 is preferable by r669 with profit 1000
   Insn 191: point = 818, n_alt = 2
   Insn 848: point = 818, n_alt = 3
	   Creating copy r669<-r728@1000
   Insn 929: point = 819, n_alt = -1
	   Creating copy r728<-r729@1000
   Insn 190: point = 821, n_alt = 5
   Insn 189: point = 822, n_alt = 0
   Insn 188: point = 824, n_alt = 0
   Insn 187: point = 826, n_alt = 3
   Insn 930: point = 827, n_alt = -1
   Insn 847: point = 828, n_alt = 5
	   Creating copy r668->r729@1000
   Insn 186: point = 830, n_alt = 0
   Insn 846: point = 831, n_alt = -2
	Hard reg 1 is preferable by r668 with profit 1000
   Insn 184: point = 833, n_alt = 0
   Insn 185: point = 833, n_alt = 2
   Insn 183: point = 834, n_alt = 3
   Insn 182: point = 835, n_alt = 5
   Insn 181: point = 836, n_alt = 0
   Insn 180: point = 838, n_alt = 0
   Insn 179: point = 840, n_alt = 3
   Insn 845: point = 841, n_alt = 5
   Insn 178: point = 843, n_alt = 0
   Insn 844: point = 843, n_alt = 3
	   Creating copy r667<-r730@1000
   Insn 174: point = 845, n_alt = 5
   Insn 173: point = 846, n_alt = 5
   Insn 172: point = 847, n_alt = -2
   Insn 170: point = 849, n_alt = 1
   Insn 168: point = 851, n_alt = 0
   Insn 169: point = 851, n_alt = 2
   Insn 843: point = 852, n_alt = -2
	Hard reg 0 is preferable by r666 with profit 1000
   Insn 167: point = 854, n_alt = 2
   Insn 842: point = 854, n_alt = 3
	   Creating copy r666<-r730@1000
   Insn 931: point = 855, n_alt = -1
	   Creating copy r730<-r731@1000
   Insn 166: point = 857, n_alt = 5
   Insn 165: point = 858, n_alt = 0
   Insn 164: point = 860, n_alt = 0
   Insn 163: point = 862, n_alt = 3
   Insn 932: point = 863, n_alt = -1
   Insn 841: point = 864, n_alt = 5
	   Creating copy r665->r731@1000
   Insn 162: point = 866, n_alt = 0
   Insn 840: point = 867, n_alt = -2
	Hard reg 1 is preferable by r665 with profit 1000
   Insn 160: point = 869, n_alt = 0
   Insn 161: point = 869, n_alt = 2
   Insn 159: point = 870, n_alt = 3
   Insn 158: point = 871, n_alt = 5
   Insn 157: point = 872, n_alt = 0
   Insn 156: point = 874, n_alt = 0
   Insn 155: point = 876, n_alt = 3
   Insn 151: point = 877, n_alt = 5
   Insn 150: point = 878, n_alt = 5
   Insn 149: point = 879, n_alt = -2
   Insn 147: point = 881, n_alt = 1
   Insn 145: point = 883, n_alt = 0
   Insn 146: point = 883, n_alt = 2
   Insn 144: point = 884, n_alt = 3
   Insn 143: point = 885, n_alt = 5
   Insn 142: point = 886, n_alt = 0
   Insn 141: point = 888, n_alt = 0
   Insn 140: point = 890, n_alt = 3
   Insn 839: point = 891, n_alt = 5
   Insn 139: point = 893, n_alt = 0
   Insn 838: point = 893, n_alt = -2
   Insn 135: point = 894, n_alt = 5
   Insn 134: point = 895, n_alt = 5
   Insn 133: point = 896, n_alt = -2
   Insn 131: point = 898, n_alt = 1
   Insn 129: point = 900, n_alt = 0
   Insn 130: point = 900, n_alt = 2
   Insn 837: point = 901, n_alt = -2
	Hard reg 0 is preferable by r663 with profit 1000
   Insn 128: point = 903, n_alt = 2
   Insn 836: point = 903, n_alt = -2
   Insn 127: point = 904, n_alt = 5
   Insn 126: point = 905, n_alt = 0
   Insn 125: point = 907, n_alt = 0
   Insn 124: point = 909, n_alt = 3
   Insn 835: point = 910, n_alt = -2
	Hard reg 37 is preferable by r662 with profit 1000
   Insn 123: point = 912, n_alt = 0
   Insn 834: point = 913, n_alt = -2
	Hard reg 37 is preferable by r662 with profit 1000
	Hard reg 1 is preferable by r662 with profit 1000
   Insn 121: point = 915, n_alt = 0
   Insn 122: point = 915, n_alt = 2
   Insn 120: point = 916, n_alt = 3
   Insn 119: point = 917, n_alt = 5
   Insn 118: point = 918, n_alt = 0
   Insn 117: point = 920, n_alt = 0
   Insn 116: point = 922, n_alt = 3
   Insn 833: point = 923, n_alt = 5
   Insn 115: point = 925, n_alt = 1
   Insn 832: point = 925, n_alt = -2
	Hard reg 0 is preferable by r661 with profit 1000
   Insn 831: point = 927, n_alt = -2
	Hard reg 0 is preferable by r660 with profit 1000
   Insn 114: point = 929, n_alt = 0
   Insn 830: point = 929, n_alt = 3
	   Creating copy r660<-r732@1000
   Insn 110: point = 931, n_alt = 5
   Insn 109: point = 932, n_alt = 5
   Insn 108: point = 933, n_alt = -2
   Insn 106: point = 935, n_alt = 1
   Insn 104: point = 937, n_alt = 0
   Insn 105: point = 937, n_alt = 2
   Insn 829: point = 938, n_alt = -2
	Hard reg 0 is preferable by r659 with profit 1000
   Insn 103: point = 940, n_alt = 2
   Insn 828: point = 940, n_alt = -2
   Insn 102: point = 941, n_alt = 5
   Insn 101: point = 942, n_alt = 0
   Insn 100: point = 944, n_alt = 0
   Insn 99: point = 946, n_alt = 3
   Insn 827: point = 947, n_alt = -2
	Hard reg 44 is preferable by r658 with profit 1000
   Insn 98: point = 949, n_alt = 0
   Insn 826: point = 950, n_alt = -2
	Hard reg 44 is preferable by r658 with profit 1000
	Hard reg 1 is preferable by r658 with profit 1000
   Insn 96: point = 952, n_alt = 0
   Insn 97: point = 952, n_alt = 2
   Insn 825: point = 953, n_alt = -2
	Hard reg 0 is preferable by r657 with profit 1000
   Insn 95: point = 955, n_alt = 2
   Insn 824: point = 955, n_alt = 3
	   Creating copy r657<-r732@1000
   Insn 933: point = 956, n_alt = -1
	   Creating copy r732<-r733@1000
   Insn 94: point = 958, n_alt = 5
   Insn 93: point = 959, n_alt = 0
   Insn 92: point = 961, n_alt = 0
   Insn 91: point = 963, n_alt = 3
   Insn 934: point = 964, n_alt = -1
   Insn 823: point = 965, n_alt = 5
	   Creating copy r656->r733@1000
   Insn 90: point = 967, n_alt = 0
   Insn 822: point = 968, n_alt = -2
	Hard reg 1 is preferable by r656 with profit 1000
   Insn 88: point = 970, n_alt = 0
   Insn 89: point = 970, n_alt = 2
   Insn 87: point = 971, n_alt = 3
   Insn 86: point = 972, n_alt = 5
   Insn 85: point = 973, n_alt = 0
   Insn 84: point = 975, n_alt = 0
   Insn 83: point = 977, n_alt = 3
   Insn 821: point = 978, n_alt = 5
   Insn 82: point = 980, n_alt = 0
   Insn 820: point = 980, n_alt = -2
   Insn 78: point = 981, n_alt = 2
   Insn 77: point = 982, n_alt = 3
   Insn 76: point = 983, n_alt = -2
   Insn 74: point = 985, n_alt = 1
   Insn 72: point = 987, n_alt = 0
   Insn 73: point = 987, n_alt = 2
   Insn 819: point = 988, n_alt = -2
	Hard reg 0 is preferable by r654 with profit 1000
   Insn 71: point = 990, n_alt = 2
   Insn 818: point = 990, n_alt = -2
   Insn 70: point = 991, n_alt = 5
   Insn 69: point = 992, n_alt = 0
   Insn 68: point = 994, n_alt = 0
   Insn 67: point = 996, n_alt = 3
   Insn 817: point = 997, n_alt = -2
	Hard reg 42 is preferable by r653 with profit 1000
   Insn 66: point = 999, n_alt = 0
   Insn 816: point = 1000, n_alt = -2
	Hard reg 42 is preferable by r653 with profit 1000
	Hard reg 1 is preferable by r653 with profit 1000
   Insn 64: point = 1002, n_alt = 0
   Insn 65: point = 1002, n_alt = 2
   Insn 63: point = 1003, n_alt = 3
   Insn 62: point = 1004, n_alt = 5
   Insn 61: point = 1005, n_alt = 0
   Insn 60: point = 1007, n_alt = 0
   Insn 59: point = 1009, n_alt = 3
   Insn 815: point = 1010, n_alt = 5
   Insn 58: point = 1012, n_alt = 0
   Insn 814: point = 1012, n_alt = -2
   Insn 54: point = 1013, n_alt = 2
   Insn 53: point = 1014, n_alt = 3
   Insn 52: point = 1015, n_alt = -2
   Insn 50: point = 1017, n_alt = 1
   Insn 48: point = 1019, n_alt = 0
   Insn 49: point = 1019, n_alt = 2
   Insn 813: point = 1020, n_alt = -2
	Hard reg 0 is preferable by r651 with profit 1000
   Insn 47: point = 1022, n_alt = 2
   Insn 812: point = 1022, n_alt = -2
   Insn 46: point = 1023, n_alt = 5
   Insn 45: point = 1024, n_alt = 0
   Insn 44: point = 1026, n_alt = 0
   Insn 43: point = 1028, n_alt = 3
   Insn 811: point = 1029, n_alt = -2
	Hard reg 40 is preferable by r650 with profit 1000
   Insn 42: point = 1031, n_alt = 0
   Insn 810: point = 1032, n_alt = -2
	Hard reg 40 is preferable by r650 with profit 1000
	Hard reg 1 is preferable by r650 with profit 1000
   Insn 40: point = 1034, n_alt = 0
   Insn 41: point = 1034, n_alt = 2
   Insn 39: point = 1035, n_alt = 3
   Insn 38: point = 1036, n_alt = 5
   Insn 37: point = 1037, n_alt = 0
   Insn 36: point = 1039, n_alt = 0
   Insn 35: point = 1041, n_alt = 3
   Insn 809: point = 1042, n_alt = 5
   Insn 34: point = 1044, n_alt = 0
   Insn 808: point = 1044, n_alt = -2
   Insn 30: point = 1045, n_alt = 2
   Insn 29: point = 1046, n_alt = 3
   Insn 28: point = 1047, n_alt = -2
   Insn 26: point = 1049, n_alt = 1
   Insn 24: point = 1051, n_alt = 0
   Insn 25: point = 1051, n_alt = 2
   Insn 807: point = 1052, n_alt = -2
	Hard reg 0 is preferable by r648 with profit 1000
   Insn 23: point = 1054, n_alt = 2
   Insn 806: point = 1054, n_alt = -2
   Insn 22: point = 1055, n_alt = 5
   Insn 21: point = 1056, n_alt = 0
   Insn 20: point = 1058, n_alt = 0
   Insn 19: point = 1060, n_alt = 3
   Insn 805: point = 1061, n_alt = -2
	Hard reg 3 is preferable by r647 with profit 1000
   Insn 18: point = 1063, n_alt = 0
   Insn 804: point = 1064, n_alt = -2
	Hard reg 3 is preferable by r647 with profit 1000
	Hard reg 1 is preferable by r647 with profit 1000
   Insn 16: point = 1066, n_alt = 0
   Insn 17: point = 1066, n_alt = 2
   Insn 15: point = 1067, n_alt = 3
   Insn 14: point = 1068, n_alt = 5
   Insn 13: point = 1069, n_alt = 0
   Insn 12: point = 1071, n_alt = 0
   Insn 11: point = 1073, n_alt = 3
   Insn 7: point = 1074, n_alt = 5
   Insn 6: point = 1074, n_alt = 5
   Insn 5: point = 1074, n_alt = 5
   Insn 4: point = 1074, n_alt = 5
   Insn 3: point = 1074, n_alt = 5
   Insn 2: point = 1074, n_alt = 5
 r87: [1070..1071]
 r88: [1057..1058]
 r89: [1046..1047]
 r90: [1045..1074]
 r92: [1038..1039]
 r93: [1025..1026]
 r94: [1014..1015]
 r95: [1013..1074]
 r97: [1006..1007]
 r98: [993..994]
 r99: [982..983]
 r100: [981..1074]
 r102: [974..975]
 r103: [960..961]
 r104: [943..944]
 r105: [932..933]
 r106: [931..1074]
 r108: [926..927]
 r109: [919..920]
 r110: [906..907]
 r111: [895..896]
 r112: [894..1074]
 r114: [887..888]
 r115: [878..879]
 r116: [877..1074]
 r118: [873..874]
 r119: [859..860]
 r120: [846..847]
 r121: [845..1074]
 r123: [837..838]
 r124: [823..824]
 r125: [805..806]
 r126: [792..793]
 r127: [791..1074]
 r129: [786..787]
 r130: [776..777]
 r131: [763..764]
 r132: [748..749]
 r133: [737..738]
 r134: [736..1074]
 r136: [732..733]
 r137: [725..726]
 r138: [712..713]
 r139: [701..702]
 r140: [700..1074]
 r142: [693..694]
 r143: [680..681]
 r144: [669..670]
 r145: [668..1074]
 r147: [661..662]
 r148: [648..649]
 r149: [637..638]
 r150: [636..1074]
 r152: [621..622]
 r153: [618..620]
 r154: [613..617]
 r155: [613..614]
 r156: [609..612]
 r157: [605..606]
 r158: [602..604]
 r159: [597..601]
 r160: [597..598]
 r161: [593..596]
 r162: [589..590]
 r163: [586..588]
 r164: [581..585]
 r165: [581..582]
 r166: [577..580]
 r167: [543..544]
 r168: [540..542]
 r169: [532..539]
 r170: [534..536]
 r171: [532..533]
 r172: [527..531]
 r173: [527..528]
 r174: [524..526]
 r175: [521..523]
 r176: [474..475]
 r177: [471..473]
 r178: [466..470]
 r179: [466..467]
 r180: [462..465]
 r181: [516..517]
 r182: [513..515]
 r183: [505..512]
 r184: [507..509]
 r185: [505..506]
 r186: [500..504]
 r187: [500..501]
 r188: [497..499]
 r189: [482..496]
 r190: [492..493]
 r191: [489..491]
 r192: [484..488]
 r193: [484..485]
 r194: [479..483]
 r195: [479..481]
 r196: [457..458]
 r197: [454..456]
 r198: [435..453]
 r199: [448..450]
 r200: [445..447]
 r201: [440..444]
 r202: [440..441]
 r203: [437..439]
 r204: [435..436]
 r205: [408..434]
 r206: [429..431]
 r207: [426..428]
 r208: [418..425]
 r209: [420..422]
 r210: [418..419]
 r211: [413..417]
 r212: [413..414]
 r213: [410..412]
 r214: [408..409]
 r215: [402..403]
 r216: [398..401]
 r217: [393..397]
 r218: [393..394]
 r219: [390..392]
 r220: [371..389]
 r221: [385..386]
 r222: [381..384]
 r223: [376..380]
 r224: [376..377]
 r225: [373..375]
 r226: [371..372]
 r227: [369..370]
 r228: [365..366]
 r229: [361..364]
 r230: [354..360]
 r231: [356..357]
 r232: [354..355]
 r233: [349..353]
 r234: [349..350]
 r235: [346..348]
 r236: [318..345]
 r237: [341..342]
 r238: [339..340]
 r239: [335..338]
 r240: [328..334]
 r241: [330..331]
 r242: [328..329]
 r243: [323..327]
 r244: [323..324]
 r245: [320..322]
 r246: [318..319]
 r247: [316..317]
 r248: [313..315]
 r249: [295..312]
 r250: [308..309]
 r251: [305..307]
 r252: [300..304]
 r253: [300..301]
 r254: [297..299]
 r255: [295..296]
 r256: [293..294]
 r257: [291..292]
 r258: [289..290]
 r259: [254..286]
 r260: [282..283]
 r261: [278..281]
 r262: [273..277]
 r263: [273..274]
 r264: [270..272]
 r265: [254..269]
 r266: [265..266]
 r267: [261..264]
 r268: [256..260]
 r269: [256..257]
 r270: [251..255]
 r271: [251..253]
 r272: [214..246]
 r273: [242..243]
 r274: [238..241]
 r275: [233..237]
 r276: [233..234]
 r277: [230..232]
 r278: [214..229]
 r279: [225..226]
 r280: [221..224]
 r281: [216..220]
 r282: [216..217]
 r283: [211..215]
 r284: [211..213]
 r285: [207..208]
 r286: [203..206]
 r287: [198..202]
 r288: [198..199]
 r289: [181..197]
 r290: [193..194]
 r291: [189..192]
 r292: [184..188]
 r293: [184..185]
 r294: [178..183]
 r295: [178..180]
 r296: [141..142]
 r297: [137..140]
 r298: [132..136]
 r299: [132..133]
 r300: [129..131]
 r301: [126..128]
 r302: [99..125]
 r303: [121..122]
 r304: [117..120]
 r305: [112..116]
 r306: [112..113]
 r307: [109..111]
 r308: [106..108]
 r309: [104..105]
 r310: [101..103]
 r311: [99..100]
 r312: [97..98]
 r313: [79..96]
 r314: [92..93]
 r315: [89..91]
 r316: [84..88]
 r317: [84..85]
 r318: [81..83]
 r319: [79..80]
 r320: [56..78]
 r321: [74..75]
 r322: [71..73]
 r323: [66..70]
 r324: [66..67]
 r325: [63..65]
 r326: [60..62]
 r327: [58..59]
 r328: [56..57]
 r329: [54..55]
 r330: [46..50]
 r331: [46..47]
 r332: [44..45]
 r333: [32..36]
 r334: [32..33]
 r335: [30..31]
 r336: [23..24]
 r337: [20..22]
 r338: [15..19]
 r339: [15..16]
 r340: [12..14]
 r341: [44..53] [30..42] [12..28]
 r342: [1063..1067]
 r343: [0..1061]
 r344: [1050..1052]
 r345: [1048..1049]
 r349: [0..1042]
 r350: [1031..1035]
 r351: [0..1029]
 r352: [1018..1020]
 r353: [1016..1017]
 r357: [0..1010]
 r358: [999..1003]
 r359: [155..997]
 r360: [986..988]
 r361: [984..985]
 r365: [155..978]
 r366: [967..971]
 r367: [155..964]
 r368: [949..953]
 r369: [155..947]
 r370: [936..938]
 r371: [934..935]
 r375: [155..923]
 r376: [912..916]
 r377: [155..910]
 r378: [899..901]
 r379: [897..898]
 r383: [155..891]
 r384: [882..884]
 r385: [880..881]
 r389: [866..870]
 r390: [155..863]
 r391: [850..852]
 r392: [848..849]
 r396: [155..841]
 r397: [830..834]
 r398: [155..827]
 r399: [812..816]
 r400: [155..809]
 r401: [796..798]
 r402: [794..795]
 r406: [155..780]
 r407: [769..773]
 r408: [155..767]
 r409: [754..758]
 r410: [155..752]
 r411: [741..743]
 r412: [739..740]
 r416: [155..729]
 r417: [718..722]
 r418: [155..716]
 r419: [705..707]
 r420: [703..704]
 r424: [155..697]
 r425: [686..690]
 r426: [0..684]
 r427: [673..675]
 r428: [671..672]
 r432: [0..665]
 r433: [654..658]
 r434: [0..652]
 r435: [641..643]
 r436: [639..640]
 r440: [0..633]
 r441: [630..632]
 r442: [565..631]
 r443: [565..566]
 r444: [572..626]
 r445: [572..573]
 r446: [155..558]
 r447: [155..156]
 r448: [552..556]
 r449: [164..553]
 r450: [164..165]
 r451: [173..548]
 r452: [173..174]
 r453: [150..152]
 r454: [0..151]
 r455: [0..1]
 r456: [7..146]
 r457: [7..8]
 r458: [1072..1073]
 r459: [1068..1069]
 r460: [1065..1066]
 r461: [1059..1060]
 r462: [1055..1056]
 r463: [1050..1051]
 r464: [1040..1041]
 r465: [1036..1037]
 r466: [1033..1034]
 r467: [1027..1028]
 r468: [1023..1024]
 r469: [1018..1019]
 r470: [1008..1009]
 r471: [1004..1005]
 r472: [1001..1002]
 r473: [995..996]
 r474: [991..992]
 r475: [986..987]
 r476: [976..977]
 r477: [972..973]
 r478: [969..970]
 r479: [962..963]
 r480: [958..959]
 r481: [951..952]
 r482: [945..946]
 r483: [941..942]
 r484: [936..937]
 r485: [921..922]
 r486: [917..918]
 r487: [914..915]
 r488: [908..909]
 r489: [904..905]
 r490: [899..900]
 r491: [889..890]
 r492: [885..886]
 r493: [882..883]
 r494: [875..876]
 r495: [871..872]
 r496: [868..869]
 r497: [861..862]
 r498: [857..858]
 r499: [850..851]
 r500: [839..840]
 r501: [835..836]
 r502: [832..833]
 r503: [825..826]
 r504: [821..822]
 r505: [814..815]
 r506: [807..808]
 r507: [803..804]
 r508: [796..797]
 r509: [778..779]
 r510: [774..775]
 r511: [771..772]
 r512: [765..766]
 r513: [761..762]
 r514: [756..757]
 r515: [750..751]
 r516: [746..747]
 r517: [741..742]
 r518: [727..728]
 r519: [723..724]
 r520: [720..721]
 r521: [714..715]
 r522: [710..711]
 r523: [705..706]
 r524: [695..696]
 r525: [691..692]
 r526: [688..689]
 r527: [682..683]
 r528: [678..679]
 r529: [673..674]
 r530: [663..664]
 r531: [659..660]
 r532: [656..657]
 r533: [650..651]
 r534: [646..647]
 r535: [641..642]
 r536: [567..568]
 r537: [627..628]
 r538: [574..575]
 r539: [623..624]
 r540: [615..616]
 r541: [609..611]
 r542: [609..610]
 r543: [607..608]
 r544: [599..600]
 r545: [593..595]
 r546: [593..594]
 r547: [591..592]
 r548: [583..584]
 r549: [577..579]
 r550: [577..578]
 r551: [561..562]
 r552: [157..158]
 r553: [166..167]
 r554: [549..550]
 r555: [175..176]
 r556: [545..546]
 r557: [537..538]
 r558: [529..530]
 r559: [524..525]
 r560: [521..522]
 r561: [476..477]
 r562: [468..469]
 r563: [462..464]
 r564: [462..463]
 r565: [518..519]
 r566: [510..511]
 r567: [502..503]
 r568: [497..498]
 r569: [494..495]
 r570: [486..487]
 r571: [479..480]
 r572: [459..460]
 r573: [454..455]
 r574: [451..452]
 r575: [442..443]
 r576: [437..438]
 r577: [432..433]
 r578: [423..424]
 r579: [415..416]
 r580: [410..411]
 r581: [406..407]
 r582: [404..405]
 r583: [395..396]
 r584: [390..391]
 r585: [387..388]
 r586: [378..379]
 r587: [373..374]
 r588: [367..368]
 r589: [358..359]
 r590: [351..352]
 r591: [346..347]
 r592: [343..344]
 r593: [332..333]
 r594: [325..326]
 r595: [320..321]
 r596: [313..314]
 r597: [310..311]
 r598: [302..303]
 r599: [297..298]
 r600: [284..285]
 r601: [275..276]
 r602: [270..271]
 r603: [267..268]
 r604: [258..259]
 r605: [251..252]
 r606: [249..250]
 r607: [244..245]
 r608: [235..236]
 r609: [230..231]
 r610: [227..228]
 r611: [218..219]
 r612: [211..212]
 r613: [209..210]
 r614: [200..201]
 r615: [195..196]
 r616: [186..187]
 r617: [181..182]
 r618: [178..179]
 r619: [2..3]
 r620: [147..148]
 r621: [9..10]
 r622: [143..144]
 r623: [134..135]
 r624: [129..130]
 r625: [126..127]
 r626: [123..124]
 r627: [114..115]
 r628: [109..110]
 r629: [106..107]
 r630: [101..102]
 r631: [94..95]
 r632: [86..87]
 r633: [81..82]
 r634: [76..77]
 r635: [68..69]
 r636: [63..64]
 r637: [60..61]
 r638: [51..52]
 r639: [48..49]
 r641: [37..38]
 r642: [39..40]
 r643: [34..35]
 r644: [25..26]
 r645: [17..18]
 r646: [12..13]
 r647: [1062..1064]
 r648: [1053..1054]
 r649: [1043..1044]
 r650: [1030..1032]
 r651: [1021..1022]
 r652: [1011..1012]
 r653: [998..1000]
 r654: [989..990]
 r655: [979..980]
 r656: [966..968]
 r657: [954..955]
 r658: [948..950]
 r659: [939..940]
 r660: [928..929]
 r661: [924..925]
 r662: [911..913]
 r663: [902..903]
 r664: [892..893]
 r665: [865..867]
 r666: [853..854]
 r667: [842..843]
 r668: [829..831]
 r669: [817..818]
 r670: [811..813]
 r671: [799..800]
 r672: [788..789]
 r673: [781..785]
 r674: [782..783]
 r675: [768..770]
 r676: [759..760]
 r677: [753..755]
 r678: [744..745]
 r679: [734..735]
 r680: [730..731]
 r681: [717..719]
 r682: [708..709]
 r683: [698..699]
 r684: [685..687]
 r685: [676..677]
 r686: [666..667]
 r687: [653..655]
 r688: [644..645]
 r689: [634..635]
 r690: [618..619]
 r691: [602..603]
 r692: [586..587]
 r693: [559..560]
 r694: [159..160]
 r695: [554..555]
 r696: [168..169]
 r697: [540..541]
 r698: [534..535]
 r699: [471..472]
 r700: [513..514]
 r701: [507..508]
 r702: [489..490]
 r703: [448..449]
 r704: [445..446]
 r705: [429..430]
 r706: [426..427]
 r707: [420..421]
 r708: [398..399]
 r709: [381..382]
 r710: [361..362]
 r711: [335..336]
 r712: [305..306]
 r713: [287..288]
 r714: [278..279]
 r715: [261..262]
 r716: [247..248]
 r717: [238..239]
 r718: [221..222]
 r719: [203..204]
 r720: [189..190]
 r721: [137..138]
 r722: [117..118]
 r723: [89..90]
 r724: [71..72]
 r725: [20..21]
 r726: [784..801]
 r727: [802..810]
 r728: [790..819]
 r729: [820..828]
 r730: [844..855]
 r731: [856..864]
 r732: [930..956]
 r733: [957..965]
 r734: [223..240]
 r735: [263..280]
 r736: [337..363]
 r737: [205..383]
 r738: [191..400]
 r739: [119..139]
Compressing live ranges: from 1075 to 826 - 76%
Ranges after the compression:
 r87: [822..823]
 r88: [812..813]
 r89: [802..803]
 r90: [802..825]
 r92: [796..797]
 r93: [786..787]
 r94: [776..777]
 r95: [776..825]
 r97: [770..771]
 r98: [760..761]
 r99: [750..751]
 r100: [750..825]
 r102: [744..745]
 r103: [734..735]
 r104: [722..723]
 r105: [712..713]
 r106: [712..825]
 r108: [708..709]
 r109: [702..703]
 r110: [692..693]
 r111: [682..683]
 r112: [682..825]
 r114: [676..677]
 r115: [668..669]
 r116: [668..825]
 r118: [664..665]
 r119: [654..655]
 r120: [644..645]
 r121: [644..825]
 r123: [638..639]
 r124: [628..629]
 r125: [616..617]
 r126: [606..607]
 r127: [606..825]
 r129: [602..603]
 r130: [594..595]
 r131: [584..585]
 r132: [572..573]
 r133: [562..563]
 r134: [562..825]
 r136: [558..559]
 r137: [552..553]
 r138: [542..543]
 r139: [532..533]
 r140: [532..825]
 r142: [526..527]
 r143: [516..517]
 r144: [506..507]
 r145: [506..825]
 r147: [500..501]
 r148: [490..491]
 r149: [480..481]
 r150: [480..825]
 r152: [470..471]
 r153: [468..469]
 r154: [464..467]
 r155: [464..465]
 r156: [462..463]
 r157: [458..459]
 r158: [456..457]
 r159: [452..455]
 r160: [452..453]
 r161: [450..451]
 r162: [446..447]
 r163: [444..445]
 r164: [440..443]
 r165: [440..441]
 r166: [438..439]
 r167: [416..417]
 r168: [414..415]
 r169: [408..413]
 r170: [410..411]
 r171: [408..409]
 r172: [404..407]
 r173: [404..405]
 r174: [402..403]
 r175: [400..401]
 r176: [364..365]
 r177: [362..363]
 r178: [358..361]
 r179: [358..359]
 r180: [356..357]
 r181: [396..397]
 r182: [394..395]
 r183: [388..393]
 r184: [390..391]
 r185: [388..389]
 r186: [384..387]
 r187: [384..385]
 r188: [382..383]
 r189: [370..381]
 r190: [378..379]
 r191: [376..377]
 r192: [372..375]
 r193: [372..373]
 r194: [368..371]
 r195: [368..369]
 r196: [352..353]
 r197: [350..351]
 r198: [336..349]
 r199: [346..347]
 r200: [344..345]
 r201: [340..343]
 r202: [340..341]
 r203: [338..339]
 r204: [336..337]
 r205: [316..335]
 r206: [332..333]
 r207: [330..331]
 r208: [324..329]
 r209: [326..327]
 r210: [324..325]
 r211: [320..323]
 r212: [320..321]
 r213: [318..319]
 r214: [316..317]
 r215: [310..311]
 r216: [308..309]
 r217: [304..307]
 r218: [304..305]
 r219: [302..303]
 r220: [288..301]
 r221: [298..299]
 r222: [296..297]
 r223: [292..295]
 r224: [292..293]
 r225: [290..291]
 r226: [288..289]
 r227: [286..287]
 r228: [282..283]
 r229: [280..281]
 r230: [274..279]
 r231: [276..277]
 r232: [274..275]
 r233: [270..273]
 r234: [270..271]
 r235: [268..269]
 r236: [244..267]
 r237: [264..265]
 r238: [262..263]
 r239: [258..261]
 r240: [252..257]
 r241: [254..255]
 r242: [252..253]
 r243: [248..251]
 r244: [248..249]
 r245: [246..247]
 r246: [244..245]
 r247: [242..243]
 r248: [240..241]
 r249: [226..239]
 r250: [236..237]
 r251: [234..235]
 r252: [230..233]
 r253: [230..231]
 r254: [228..229]
 r255: [226..227]
 r256: [224..225]
 r257: [222..223]
 r258: [220..221]
 r259: [192..217]
 r260: [214..215]
 r261: [212..213]
 r262: [208..211]
 r263: [208..209]
 r264: [206..207]
 r265: [192..205]
 r266: [202..203]
 r267: [198..201]
 r268: [194..197]
 r269: [194..195]
 r270: [190..193]
 r271: [190..191]
 r272: [160..185]
 r273: [182..183]
 r274: [180..181]
 r275: [176..179]
 r276: [176..177]
 r277: [174..175]
 r278: [160..173]
 r279: [170..171]
 r280: [166..169]
 r281: [162..165]
 r282: [162..163]
 r283: [158..161]
 r284: [158..159]
 r285: [154..155]
 r286: [150..153]
 r287: [146..149]
 r288: [146..147]
 r289: [132..145]
 r290: [142..143]
 r291: [138..141]
 r292: [134..137]
 r293: [134..135]
 r294: [130..133]
 r295: [130..131]
 r296: [106..107]
 r297: [104..105]
 r298: [100..103]
 r299: [100..101]
 r300: [98..99]
 r301: [96..97]
 r302: [74..95]
 r303: [92..93]
 r304: [88..91]
 r305: [84..87]
 r306: [84..85]
 r307: [82..83]
 r308: [80..81]
 r309: [78..79]
 r310: [76..77]
 r311: [74..75]
 r312: [72..73]
 r313: [58..71]
 r314: [68..69]
 r315: [66..67]
 r316: [62..65]
 r317: [62..63]
 r318: [60..61]
 r319: [58..59]
 r320: [40..57]
 r321: [54..55]
 r322: [52..53]
 r323: [48..51]
 r324: [48..49]
 r325: [46..47]
 r326: [44..45]
 r327: [42..43]
 r328: [40..41]
 r329: [38..39]
 r330: [32..35]
 r331: [32..33]
 r332: [30..31]
 r333: [22..25]
 r334: [22..23]
 r335: [20..21]
 r336: [16..17]
 r337: [14..15]
 r338: [10..13]
 r339: [10..11]
 r340: [8..9]
 r341: [8..37]
 r342: [816..819]
 r343: [0..815]
 r344: [806..807]
 r345: [804..805]
 r349: [0..799]
 r350: [790..793]
 r351: [0..789]
 r352: [780..781]
 r353: [778..779]
 r357: [0..773]
 r358: [764..767]
 r359: [114..763]
 r360: [754..755]
 r361: [752..753]
 r365: [114..747]
 r366: [738..741]
 r367: [114..737]
 r368: [726..729]
 r369: [114..725]
 r370: [716..717]
 r371: [714..715]
 r375: [114..705]
 r376: [696..699]
 r377: [114..695]
 r378: [686..687]
 r379: [684..685]
 r383: [114..679]
 r384: [672..673]
 r385: [670..671]
 r389: [658..661]
 r390: [114..657]
 r391: [648..649]
 r392: [646..647]
 r396: [114..641]
 r397: [632..635]
 r398: [114..631]
 r399: [620..623]
 r400: [114..619]
 r401: [610..611]
 r402: [608..609]
 r406: [114..597]
 r407: [588..591]
 r408: [114..587]
 r409: [576..579]
 r410: [114..575]
 r411: [566..567]
 r412: [564..565]
 r416: [114..555]
 r417: [546..549]
 r418: [114..545]
 r419: [536..537]
 r420: [534..535]
 r424: [114..529]
 r425: [520..523]
 r426: [0..519]
 r427: [510..511]
 r428: [508..509]
 r432: [0..503]
 r433: [494..497]
 r434: [0..493]
 r435: [484..485]
 r436: [482..483]
 r440: [0..477]
 r441: [476..477]
 r442: [430..477]
 r443: [430..431]
 r444: [434..473]
 r445: [434..435]
 r446: [114..425]
 r447: [114..115]
 r448: [422..425]
 r449: [120..423]
 r450: [120..121]
 r451: [126..419]
 r452: [126..127]
 r453: [112..113]
 r454: [0..113]
 r455: [0..1]
 r456: [4..109]
 r457: [4..5]
 r458: [824..825]
 r459: [820..821]
 r460: [818..819]
 r461: [814..815]
 r462: [810..811]
 r463: [806..807]
 r464: [798..799]
 r465: [794..795]
 r466: [792..793]
 r467: [788..789]
 r468: [784..785]
 r469: [780..781]
 r470: [772..773]
 r471: [768..769]
 r472: [766..767]
 r473: [762..763]
 r474: [758..759]
 r475: [754..755]
 r476: [746..747]
 r477: [742..743]
 r478: [740..741]
 r479: [736..737]
 r480: [732..733]
 r481: [728..729]
 r482: [724..725]
 r483: [720..721]
 r484: [716..717]
 r485: [704..705]
 r486: [700..701]
 r487: [698..699]
 r488: [694..695]
 r489: [690..691]
 r490: [686..687]
 r491: [678..679]
 r492: [674..675]
 r493: [672..673]
 r494: [666..667]
 r495: [662..663]
 r496: [660..661]
 r497: [656..657]
 r498: [652..653]
 r499: [648..649]
 r500: [640..641]
 r501: [636..637]
 r502: [634..635]
 r503: [630..631]
 r504: [626..627]
 r505: [622..623]
 r506: [618..619]
 r507: [614..615]
 r508: [610..611]
 r509: [596..597]
 r510: [592..593]
 r511: [590..591]
 r512: [586..587]
 r513: [582..583]
 r514: [578..579]
 r515: [574..575]
 r516: [570..571]
 r517: [566..567]
 r518: [554..555]
 r519: [550..551]
 r520: [548..549]
 r521: [544..545]
 r522: [540..541]
 r523: [536..537]
 r524: [528..529]
 r525: [524..525]
 r526: [522..523]
 r527: [518..519]
 r528: [514..515]
 r529: [510..511]
 r530: [502..503]
 r531: [498..499]
 r532: [496..497]
 r533: [492..493]
 r534: [488..489]
 r535: [484..485]
 r536: [432..433]
 r537: [474..475]
 r538: [436..437]
 r539: [472..473]
 r540: [466..467]
 r541: [462..463]
 r542: [462..463]
 r543: [460..461]
 r544: [454..455]
 r545: [450..451]
 r546: [450..451]
 r547: [448..449]
 r548: [442..443]
 r549: [438..439]
 r550: [438..439]
 r551: [428..429]
 r552: [116..117]
 r553: [122..123]
 r554: [420..421]
 r555: [128..129]
 r556: [418..419]
 r557: [412..413]
 r558: [406..407]
 r559: [402..403]
 r560: [400..401]
 r561: [366..367]
 r562: [360..361]
 r563: [356..357]
 r564: [356..357]
 r565: [398..399]
 r566: [392..393]
 r567: [386..387]
 r568: [382..383]
 r569: [380..381]
 r570: [374..375]
 r571: [368..369]
 r572: [354..355]
 r573: [350..351]
 r574: [348..349]
 r575: [342..343]
 r576: [338..339]
 r577: [334..335]
 r578: [328..329]
 r579: [322..323]
 r580: [318..319]
 r581: [314..315]
 r582: [312..313]
 r583: [306..307]
 r584: [302..303]
 r585: [300..301]
 r586: [294..295]
 r587: [290..291]
 r588: [284..285]
 r589: [278..279]
 r590: [272..273]
 r591: [268..269]
 r592: [266..267]
 r593: [256..257]
 r594: [250..251]
 r595: [246..247]
 r596: [240..241]
 r597: [238..239]
 r598: [232..233]
 r599: [228..229]
 r600: [216..217]
 r601: [210..211]
 r602: [206..207]
 r603: [204..205]
 r604: [196..197]
 r605: [190..191]
 r606: [188..189]
 r607: [184..185]
 r608: [178..179]
 r609: [174..175]
 r610: [172..173]
 r611: [164..165]
 r612: [158..159]
 r613: [156..157]
 r614: [148..149]
 r615: [144..145]
 r616: [136..137]
 r617: [132..133]
 r618: [130..131]
 r619: [2..3]
 r620: [110..111]
 r621: [6..7]
 r622: [108..109]
 r623: [102..103]
 r624: [98..99]
 r625: [96..97]
 r626: [94..95]
 r627: [86..87]
 r628: [82..83]
 r629: [80..81]
 r630: [76..77]
 r631: [70..71]
 r632: [64..65]
 r633: [60..61]
 r634: [56..57]
 r635: [50..51]
 r636: [46..47]
 r637: [44..45]
 r638: [36..37]
 r639: [34..35]
 r641: [26..27]
 r642: [28..29]
 r643: [24..25]
 r644: [18..19]
 r645: [12..13]
 r646: [8..9]
 r647: [816..817]
 r648: [808..809]
 r649: [800..801]
 r650: [790..791]
 r651: [782..783]
 r652: [774..775]
 r653: [764..765]
 r654: [756..757]
 r655: [748..749]
 r656: [738..739]
 r657: [730..731]
 r658: [726..727]
 r659: [718..719]
 r660: [710..711]
 r661: [706..707]
 r662: [696..697]
 r663: [688..689]
 r664: [680..681]
 r665: [658..659]
 r666: [650..651]
 r667: [642..643]
 r668: [632..633]
 r669: [624..625]
 r670: [620..621]
 r671: [612..613]
 r672: [604..605]
 r673: [598..601]
 r674: [598..599]
 r675: [588..589]
 r676: [580..581]
 r677: [576..577]
 r678: [568..569]
 r679: [560..561]
 r680: [556..557]
 r681: [546..547]
 r682: [538..539]
 r683: [530..531]
 r684: [520..521]
 r685: [512..513]
 r686: [504..505]
 r687: [494..495]
 r688: [486..487]
 r689: [478..479]
 r690: [468..469]
 r691: [456..457]
 r692: [444..445]
 r693: [426..427]
 r694: [118..119]
 r695: [424..425]
 r696: [124..125]
 r697: [414..415]
 r698: [410..411]
 r699: [362..363]
 r700: [394..395]
 r701: [390..391]
 r702: [376..377]
 r703: [346..347]
 r704: [344..345]
 r705: [332..333]
 r706: [330..331]
 r707: [326..327]
 r708: [308..309]
 r709: [296..297]
 r710: [280..281]
 r711: [258..259]
 r712: [234..235]
 r713: [218..219]
 r714: [212..213]
 r715: [198..199]
 r716: [186..187]
 r717: [180..181]
 r718: [166..167]
 r719: [150..151]
 r720: [138..139]
 r721: [104..105]
 r722: [88..89]
 r723: [66..67]
 r724: [52..53]
 r725: [14..15]
 r726: [600..613]
 r727: [614..619]
 r728: [606..625]
 r729: [626..631]
 r730: [644..651]
 r731: [652..657]
 r732: [712..731]
 r733: [732..737]
 r734: [168..181]
 r735: [200..213]
 r736: [260..281]
 r737: [152..297]
 r738: [140..309]
 r739: [90..105]

********** Assignment #1: **********

	 Assigning to 732 (cl=GENERAL_REGS, orig=367, freq=3000, tfirst=656, tfreq=7000)...
	   Assign 5 to inheritance r732 (freq=3000)
	Hard reg 5 is preferable by r733 with profit 1000
	Hard reg 1 is preferable by r656 with profit 1000
	Hard reg 5 is preferable by r656 with profit 500
	Hard reg 0 is preferable by r657 with profit 1000
	Hard reg 5 is preferable by r657 with profit 1000
	Hard reg 0 is preferable by r660 with profit 1000
	Hard reg 5 is preferable by r660 with profit 1000
	 Assigning to 733 (cl=GENERAL_REGS, orig=367, freq=3000, tfirst=656, tfreq=7000)...
	   Assign 5 to inheritance r733 (freq=3000)
	Hard reg 5 is preferable by r656 with profit 1500
	Hard reg 1 is preferable by r656 with profit 1000
	 Assigning to 656 (cl=GENERAL_REGS, orig=478, freq=3000, tfirst=656, tfreq=7000)...
	   Assign 5 to reload r656 (freq=3000)
	 Assigning to 657 (cl=GENERAL_REGS, orig=368, freq=3000, tfirst=656, tfreq=7000)...
	   Assign 0 to reload r657 (freq=3000)
	 Assigning to 660 (cl=GENERAL_REGS, orig=108, freq=3000, tfirst=656, tfreq=7000)...
	   Assign 0 to reload r660 (freq=3000)
	 Assigning to 730 (cl=GENERAL_REGS, orig=390, freq=3000, tfirst=665, tfreq=7000)...
	   Assign 2 to inheritance r730 (freq=3000)
	Hard reg 2 is preferable by r731 with profit 1000
	Hard reg 1 is preferable by r665 with profit 1000
	Hard reg 2 is preferable by r665 with profit 500
	Hard reg 0 is preferable by r666 with profit 1000
	Hard reg 2 is preferable by r666 with profit 1000
	Hard reg 2 is preferable by r667 with profit 1000
	 Assigning to 731 (cl=GENERAL_REGS, orig=390, freq=3000, tfirst=665, tfreq=7000)...
	   Assign 2 to inheritance r731 (freq=3000)
	Hard reg 2 is preferable by r665 with profit 1500
	Hard reg 1 is preferable by r665 with profit 1000
	 Assigning to 665 (cl=GENERAL_REGS, orig=496, freq=3000, tfirst=665, tfreq=7000)...
	   Assign 2 to reload r665 (freq=3000)
	 Assigning to 666 (cl=GENERAL_REGS, orig=391, freq=3000, tfirst=665, tfreq=7000)...
	   Assign 0 to reload r666 (freq=3000)
	 Assigning to 667 (cl=GENERAL_REGS, orig=396, freq=3000, tfirst=665, tfreq=7000)...
	   Assign 2 to reload r667 (freq=3000)
	 Assigning to 728 (cl=GENERAL_REGS, orig=398, freq=3000, tfirst=668, tfreq=7000)...
	   Assign 5 to inheritance r728 (freq=3000)
	Hard reg 5 is preferable by r729 with profit 1000
	Hard reg 1 is preferable by r668 with profit 1000
	Hard reg 5 is preferable by r668 with profit 500
	Hard reg 0 is preferable by r669 with profit 1000
	Hard reg 5 is preferable by r669 with profit 1000
	Hard reg 0 is preferable by r672 with profit 1000
	Hard reg 5 is preferable by r672 with profit 1000
	 Assigning to 729 (cl=GENERAL_REGS, orig=398, freq=3000, tfirst=668, tfreq=7000)...
	   Assign 5 to inheritance r729 (freq=3000)
	Hard reg 5 is preferable by r668 with profit 1500
	Hard reg 1 is preferable by r668 with profit 1000
	 Assigning to 668 (cl=GENERAL_REGS, orig=502, freq=3000, tfirst=668, tfreq=7000)...
	   Assign 5 to reload r668 (freq=3000)
	 Assigning to 669 (cl=GENERAL_REGS, orig=399, freq=3000, tfirst=668, tfreq=7000)...
	   Assign 0 to reload r669 (freq=3000)
	 Assigning to 672 (cl=GENERAL_REGS, orig=129, freq=3000, tfirst=668, tfreq=7000)...
	   Assign 0 to reload r672 (freq=3000)
	 Assigning to 726 (cl=GENERAL_REGS, orig=400, freq=3000, tfirst=670, tfreq=6000)...
	   Assign 2 to inheritance r726 (freq=3000)
	Hard reg 2 is preferable by r727 with profit 1000
	Hard reg 1 is preferable by r670 with profit 1000
	Hard reg 2 is preferable by r670 with profit 500
	Hard reg 0 is preferable by r671 with profit 1000
	Hard reg 2 is preferable by r671 with profit 1000
	Hard reg 2 is preferable by r674 with profit 1000
	 Assigning to 727 (cl=GENERAL_REGS, orig=400, freq=3000, tfirst=670, tfreq=6000)...
	   Assign 2 to inheritance r727 (freq=3000)
	Hard reg 2 is preferable by r670 with profit 1500
	Hard reg 1 is preferable by r670 with profit 1000
	 Assigning to 670 (cl=GENERAL_REGS, orig=505, freq=3000, tfirst=670, tfreq=6000)...
	   Assign 2 to reload r670 (freq=3000)
	 Assigning to 671 (cl=GENERAL_REGS, orig=401, freq=3000, tfirst=670, tfreq=6000)...
	   Assign 0 to reload r671 (freq=3000)
	 Assigning to 674 (cl=GENERAL_REGS, orig=400, freq=2000, tfirst=670, tfreq=6000)...
	   Assign 2 to optional reload r674 (freq=2000)
	 Assigning to 647 (cl=GENERAL_REGS, orig=460, freq=3000, tfirst=647, tfreq=3000)...
	   Assign 3 to reload r647 (freq=3000)
	 Assigning to 648 (cl=GENERAL_REGS, orig=344, freq=3000, tfirst=648, tfreq=3000)...
	   Assign 0 to reload r648 (freq=3000)
	 Assigning to 649 (cl=GENERAL_REGS, orig=349, freq=3000, tfirst=649, tfreq=3000)...
	   Assign 0 to reload r649 (freq=3000)
	 Assigning to 650 (cl=GENERAL_REGS, orig=466, freq=3000, tfirst=650, tfreq=3000)...
	   Assign 1 to reload r650 (freq=3000)
	 Assigning to 651 (cl=GENERAL_REGS, orig=352, freq=3000, tfirst=651, tfreq=3000)...
	   Assign 0 to reload r651 (freq=3000)
	 Assigning to 652 (cl=GENERAL_REGS, orig=357, freq=3000, tfirst=652, tfreq=3000)...
	   Assign 0 to reload r652 (freq=3000)
	 Assigning to 653 (cl=GENERAL_REGS, orig=472, freq=3000, tfirst=653, tfreq=3000)...
	   Assign 1 to reload r653 (freq=3000)
	 Assigning to 654 (cl=GENERAL_REGS, orig=360, freq=3000, tfirst=654, tfreq=3000)...
	   Assign 0 to reload r654 (freq=3000)
	 Assigning to 655 (cl=GENERAL_REGS, orig=365, freq=3000, tfirst=655, tfreq=3000)...
	   Assign 0 to reload r655 (freq=3000)
	 Assigning to 658 (cl=GENERAL_REGS, orig=481, freq=3000, tfirst=658, tfreq=3000)...
	   Assign 1 to reload r658 (freq=3000)
	 Assigning to 659 (cl=GENERAL_REGS, orig=370, freq=3000, tfirst=659, tfreq=3000)...
	   Assign 0 to reload r659 (freq=3000)
	 Assigning to 661 (cl=GENERAL_REGS, orig=108, freq=3000, tfirst=661, tfreq=3000)...
	   Assign 0 to reload r661 (freq=3000)
	 Assigning to 662 (cl=GENERAL_REGS, orig=487, freq=3000, tfirst=662, tfreq=3000)...
	   Assign 1 to reload r662 (freq=3000)
	 Assigning to 663 (cl=GENERAL_REGS, orig=378, freq=3000, tfirst=663, tfreq=3000)...
	   Assign 0 to reload r663 (freq=3000)
	 Assigning to 664 (cl=GENERAL_REGS, orig=383, freq=3000, tfirst=664, tfreq=3000)...
	   Assign 0 to reload r664 (freq=3000)
	 Assigning to 673 (cl=GENERAL_REGS, orig=129, freq=3000, tfirst=673, tfreq=3000)...
	   Assign 0 to reload r673 (freq=3000)
	 Assigning to 675 (cl=GENERAL_REGS, orig=511, freq=3000, tfirst=675, tfreq=3000)...
	   Assign 1 to reload r675 (freq=3000)
	 Assigning to 676 (cl=GENERAL_REGS, orig=409, freq=3000, tfirst=676, tfreq=3000)...
	   Assign 0 to reload r676 (freq=3000)
	 Assigning to 677 (cl=GENERAL_REGS, orig=514, freq=3000, tfirst=677, tfreq=3000)...
	   Assign 1 to reload r677 (freq=3000)
	 Assigning to 678 (cl=GENERAL_REGS, orig=411, freq=3000, tfirst=678, tfreq=3000)...
	   Assign 0 to reload r678 (freq=3000)
	 Assigning to 679 (cl=GENERAL_REGS, orig=136, freq=3000, tfirst=679, tfreq=3000)...
	   Assign 0 to reload r679 (freq=3000)
	 Assigning to 680 (cl=GENERAL_REGS, orig=136, freq=3000, tfirst=680, tfreq=3000)...
	   Assign 0 to reload r680 (freq=3000)
	 Assigning to 681 (cl=GENERAL_REGS, orig=520, freq=3000, tfirst=681, tfreq=3000)...
	   Assign 1 to reload r681 (freq=3000)
	 Assigning to 682 (cl=GENERAL_REGS, orig=419, freq=3000, tfirst=682, tfreq=3000)...
	   Assign 0 to reload r682 (freq=3000)
	 Assigning to 683 (cl=GENERAL_REGS, orig=424, freq=3000, tfirst=683, tfreq=3000)...
	   Assign 0 to reload r683 (freq=3000)
	 Assigning to 684 (cl=GENERAL_REGS, orig=526, freq=3000, tfirst=684, tfreq=3000)...
	   Assign 1 to reload r684 (freq=3000)
	 Assigning to 685 (cl=GENERAL_REGS, orig=427, freq=3000, tfirst=685, tfreq=3000)...
	   Assign 0 to reload r685 (freq=3000)
	 Assigning to 686 (cl=GENERAL_REGS, orig=432, freq=3000, tfirst=686, tfreq=3000)...
	   Assign 0 to reload r686 (freq=3000)
	 Assigning to 687 (cl=GENERAL_REGS, orig=532, freq=3000, tfirst=687, tfreq=3000)...
	   Assign 5 to reload r687 (freq=3000)
	 Assigning to 688 (cl=GENERAL_REGS, orig=435, freq=3000, tfirst=688, tfreq=3000)...
	   Assign 0 to reload r688 (freq=3000)
	 Assigning to 689 (cl=GENERAL_REGS, orig=440, freq=3000, tfirst=689, tfreq=3000)...
	   Assign 0 to reload r689 (freq=3000)
	 Assigning to 738 (cl=GENERAL_REGS, orig=365, freq=3000, tfirst=708, tfreq=3000)...
	 Assigning to 708 (cl=GENERAL_REGS, orig=365, freq=2000, tfirst=708, tfreq=3000)...
	   Assign 2 to reload r708 (freq=2000)
	Hard reg 2 is preferable by r738 with profit 1000
	Hard reg 2 is preferable by r720 with profit 500
	 Assigning to 720 (cl=GENERAL_REGS, orig=365, freq=2000, tfirst=708, tfreq=3000)...
	   Assign 1 to reload r720 (freq=2000)
	Hard reg 2 is preferable by r738 with profit 1000
	Hard reg 1 is preferable by r738 with profit 1000
	 Assigning to 737 (cl=GENERAL_REGS, orig=383, freq=3000, tfirst=709, tfreq=3000)...
	   Assign 2 to inheritance r737 (freq=3000)
	Hard reg 2 is preferable by r709 with profit 1000
	Hard reg 2 is preferable by r719 with profit 1000
	 Assigning to 709 (cl=GENERAL_REGS, orig=383, freq=2000, tfirst=709, tfreq=3000)...
	   Assign 2 to reload r709 (freq=2000)
	 Assigning to 719 (cl=GENERAL_REGS, orig=383, freq=2000, tfirst=709, tfreq=3000)...
	   Assign 2 to reload r719 (freq=2000)
	 Assigning to 736 (cl=GENERAL_REGS, orig=416, freq=3000, tfirst=710, tfreq=3000)...
	 Assigning to 710 (cl=GENERAL_REGS, orig=416, freq=2000, tfirst=710, tfreq=3000)...
	   Assign 1 to reload r710 (freq=2000)
	Hard reg 1 is preferable by r736 with profit 1000
	Hard reg 1 is preferable by r711 with profit 500
	 Assigning to 711 (cl=GENERAL_REGS, orig=416, freq=2000, tfirst=710, tfreq=3000)...
	   Assign 1 to reload r711 (freq=2000)
	Hard reg 1 is preferable by r736 with profit 2000
	 Assigning to 735 (cl=GENERAL_REGS, orig=349, freq=3000, tfirst=714, tfreq=3000)...
	 Assigning to 714 (cl=GENERAL_REGS, orig=349, freq=2000, tfirst=714, tfreq=3000)...
	   Assign 1 to reload r714 (freq=2000)
	Hard reg 1 is preferable by r735 with profit 1000
	Hard reg 1 is preferable by r715 with profit 500
	 Assigning to 715 (cl=GENERAL_REGS, orig=349, freq=2000, tfirst=714, tfreq=3000)...
	   Assign 1 to reload r715 (freq=2000)
	Hard reg 1 is preferable by r735 with profit 2000
	 Assigning to 734 (cl=GENERAL_REGS, orig=357, freq=3000, tfirst=717, tfreq=3000)...
	 Assigning to 717 (cl=GENERAL_REGS, orig=357, freq=2000, tfirst=717, tfreq=3000)...
	   Assign 1 to reload r717 (freq=2000)
	Hard reg 1 is preferable by r734 with profit 1000
	Hard reg 1 is preferable by r718 with profit 500
	 Assigning to 718 (cl=GENERAL_REGS, orig=357, freq=2000, tfirst=717, tfreq=3000)...
	   Assign 1 to reload r718 (freq=2000)
	Hard reg 1 is preferable by r734 with profit 2000
	 Assigning to 739 (cl=GENERAL_REGS, orig=440, freq=3000, tfirst=721, tfreq=3000)...
	   Assign 44 to inheritance r739 (freq=3000)
	Hard reg 44 is preferable by r721 with profit 1000
	Hard reg 44 is preferable by r722 with profit 1000
	 Assigning to 721 (cl=GENERAL_REGS, orig=440, freq=2000, tfirst=721, tfreq=3000)...
	   Assign 44 to reload r721 (freq=2000)
	 Assigning to 722 (cl=GENERAL_REGS, orig=440, freq=2000, tfirst=721, tfreq=3000)...
	   Assign 44 to reload r722 (freq=2000)
	 Assigning to 690 (cl=GENERAL_REGS, orig=349, freq=2000, tfirst=690, tfreq=2000)...
	   Assign 1 to reload r690 (freq=2000)
	 Assigning to 691 (cl=GENERAL_REGS, orig=357, freq=2000, tfirst=691, tfreq=2000)...
	   Assign 1 to reload r691 (freq=2000)
	 Assigning to 692 (cl=GENERAL_REGS, orig=365, freq=2000, tfirst=692, tfreq=2000)...
	   Assign 1 to reload r692 (freq=2000)
	 Assigning to 693 (cl=GENERAL_REGS, orig=446, freq=2000, tfirst=693, tfreq=2000)...
	   Assign 0 to reload r693 (freq=2000)
	 Assigning to 694 (cl=GENERAL_REGS, orig=446, freq=2000, tfirst=694, tfreq=2000)...
	   Assign 0 to reload r694 (freq=2000)
	 Assigning to 695 (cl=GENERAL_REGS, orig=449, freq=2000, tfirst=695, tfreq=2000)...
	   Assign 4 to reload r695 (freq=2000)
	 Assigning to 696 (cl=GENERAL_REGS, orig=449, freq=2000, tfirst=696, tfreq=2000)...
	   Assign 0 to reload r696 (freq=2000)
	 Assigning to 697 (cl=GENERAL_REGS, orig=375, freq=2000, tfirst=697, tfreq=2000)...
	   Assign 2 to reload r697 (freq=2000)
	 Assigning to 698 (cl=GENERAL_REGS, orig=367, freq=2000, tfirst=698, tfreq=2000)...
	   Assign 2 to optional reload r698 (freq=2000)
	 Assigning to 699 (cl=GENERAL_REGS, orig=383, freq=2000, tfirst=699, tfreq=2000)...
	   Assign 2 to reload r699 (freq=2000)
	 Assigning to 700 (cl=GENERAL_REGS, orig=375, freq=2000, tfirst=700, tfreq=2000)...
	   Assign 2 to reload r700 (freq=2000)
	 Assigning to 701 (cl=GENERAL_REGS, orig=367, freq=2000, tfirst=701, tfreq=2000)...
	   Assign 2 to optional reload r701 (freq=2000)
	 Assigning to 702 (cl=GENERAL_REGS, orig=383, freq=2000, tfirst=702, tfreq=2000)...
	   Assign 2 to reload r702 (freq=2000)
	 Assigning to 703 (cl=GENERAL_REGS, orig=390, freq=2000, tfirst=703, tfreq=2000)...
	   Assign 2 to optional reload r703 (freq=2000)
	 Assigning to 704 (cl=GENERAL_REGS, orig=396, freq=2000, tfirst=704, tfreq=2000)...
	   Assign 2 to reload r704 (freq=2000)
	 Assigning to 705 (cl=GENERAL_REGS, orig=400, freq=2000, tfirst=705, tfreq=2000)...
	   Assign 2 to optional reload r705 (freq=2000)
	 Assigning to 706 (cl=GENERAL_REGS, orig=406, freq=2000, tfirst=706, tfreq=2000)...
	   Assign 2 to reload r706 (freq=2000)
	 Assigning to 707 (cl=GENERAL_REGS, orig=398, freq=2000, tfirst=707, tfreq=2000)...
	   Assign 2 to optional reload r707 (freq=2000)
	 Assigning to 712 (cl=GENERAL_REGS, orig=424, freq=2000, tfirst=712, tfreq=2000)...
	   Assign 1 to reload r712 (freq=2000)
	 Assigning to 723 (cl=GENERAL_REGS, orig=349, freq=2000, tfirst=723, tfreq=2000)...
	   Assign 4 to reload r723 (freq=2000)
	 Assigning to 724 (cl=GENERAL_REGS, orig=357, freq=2000, tfirst=724, tfreq=2000)...
	   Assign 4 to reload r724 (freq=2000)
	 Assigning to 725 (cl=GENERAL_REGS, orig=432, freq=2000, tfirst=725, tfreq=2000)...
	   Assign 4 to reload r725 (freq=2000)
	 Assigning to 713 (cl=SSE_REGS, orig=258, freq=3000, tfirst=713, tfreq=3000)...
	   Assign 22 to reload r713 (freq=3000)
	 Assigning to 716 (cl=SSE_REGS, orig=606, freq=3000, tfirst=716, tfreq=3000)...
	   Assign 22 to reload r716 (freq=3000)
  Reassigning non-reload pseudos

********** Undoing inheritance #1: **********

Inherit 10 out of 14 (71.43%)
   Insn after restoring regs:
  921: r720:DI=r365:DI
      REG_DEAD r365:DI
   Insn after restoring regs:
  919: r718:DI=r357:DI
      REG_DEAD r357:DI
    Change reload insn:
  918: r717:DI=r357:DI
	   Removing inheritance:
  935: r734:DI=r357:DI
deleting insn with uid = 935.
   Insn after restoring regs:
  915: r715:DI=r349:DI
      REG_DEAD r349:DI
    Change reload insn:
  914: r714:DI=r349:DI
	   Removing inheritance:
  936: r735:DI=r349:DI
deleting insn with uid = 936.
   Insn after restoring regs:
  910: r711:DI=r416:DI
      REG_DEAD r416:DI
    Change reload insn:
  909: r710:DI=r416:DI
	   Removing inheritance:
  937: r736:DI=r416:DI
deleting insn with uid = 937.
    Change reload insn:
  907: r708:DI=r365:DI
	   Removing inheritance:
  939: r738:DI=r365:DI
deleting insn with uid = 939.
Keep optional reload reg 674
Remove optional reload reg 698
  Restoring original insn:
  415: {r171:DI=r170:DI*r367:DI;clobber flags:CC;}
      REG_DEAD r367:DI
      REG_DEAD r170:DI
      REG_UNUSED flags:CC
  Deleting move 897
  897: r698:DI=r367:DI
deleting insn with uid = 897.
Remove optional reload reg 701
  Restoring original insn:
  449: {r185:DI=r184:DI*r367:DI;clobber flags:CC;}
      REG_DEAD r367:DI
      REG_DEAD r184:DI
      REG_UNUSED flags:CC
  Deleting move 900
  900: r701:DI=r367:DI
deleting insn with uid = 900.
Remove optional reload reg 703
  Restoring original insn:
  475: {r200:DI=r199:DI*r390:DI;clobber flags:CC;}
      REG_DEAD r390:DI
      REG_DEAD r199:DI
      REG_UNUSED flags:CC
  Deleting move 902
  902: r703:DI=r390:DI
deleting insn with uid = 902.
Remove optional reload reg 705
  Restoring original insn:
  485: {r207:DI=r206:DI*r400:DI;clobber flags:CC;}
      REG_DEAD r400:DI
      REG_DEAD r206:DI
      REG_UNUSED flags:CC
  Deleting move 904
  904: r705:DI=r400:DI
deleting insn with uid = 904.
Remove optional reload reg 707
  Restoring original insn:
  489: {r210:DI=r209:DI*r398:DI;clobber flags:CC;}
      REG_DEAD r398:DI
      REG_DEAD r209:DI
      REG_UNUSED flags:CC
  Deleting move 906
  906: r707:DI=r398:DI
deleting insn with uid = 906.

********** Local #2: **********

	   Spilling non-eliminable hard regs: 6
            alt=2: Bad operand -- refuse
            1 Non pseudo reload: reject++
          alt=3,overall=1,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 907:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non pseudo reload: reject++
          alt=3,overall=1,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 909:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non pseudo reload: reject++
          alt=3,overall=1,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 914:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non pseudo reload: reject++
          alt=3,overall=1,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 918:  (0) r  (1) rem {*movdi_internal}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            2 Non pseudo reload: reject++
          alt=2,overall=1,losers=0,rld_nregs=0
            1 Non pseudo reload: reject++
            alt=0: Bad operand -- refuse
            1 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            alt=2,overall=6,losers=1 -- refuse
	 Choosing alt 2 in insn 489:  (0) r  (1) 0  (2) mr {*muldi3_1}
      Creating newreg=740 from oldreg=398, assigning class GENERAL_REGS to r740
      Making reload reg 740 for reg 398 optional
  489: {r210:DI=r209:DI*r740:DI;clobber flags:CC;}
      REG_DEAD r398:DI
      REG_DEAD r209:DI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  941: r740:DI=r398:DI

            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=2,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 941:  (0) r  (1) rem {*movdi_internal}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            2 Non pseudo reload: reject++
          alt=2,overall=1,losers=0,rld_nregs=0
            1 Non pseudo reload: reject++
            alt=0: Bad operand -- refuse
            1 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            alt=2,overall=6,losers=1 -- refuse
	 Choosing alt 2 in insn 485:  (0) r  (1) 0  (2) mr {*muldi3_1}
      Creating newreg=741 from oldreg=400, assigning class GENERAL_REGS to r741
      Making reload reg 741 for reg 400 optional
  485: {r207:DI=r206:DI*r741:DI;clobber flags:CC;}
      REG_DEAD r400:DI
      REG_DEAD r206:DI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  942: r741:DI=r400:DI

            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=2,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 942:  (0) r  (1) rem {*movdi_internal}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            2 Non pseudo reload: reject++
          alt=2,overall=1,losers=0,rld_nregs=0
            1 Non pseudo reload: reject++
            alt=0: Bad operand -- refuse
            1 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            alt=2,overall=6,losers=1 -- refuse
	 Choosing alt 2 in insn 475:  (0) r  (1) 0  (2) mr {*muldi3_1}
      Creating newreg=742 from oldreg=390, assigning class GENERAL_REGS to r742
      Making reload reg 742 for reg 390 optional
  475: {r200:DI=r199:DI*r742:DI;clobber flags:CC;}
      REG_DEAD r390:DI
      REG_DEAD r199:DI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  943: r742:DI=r390:DI

            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=2,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 943:  (0) r  (1) rem {*movdi_internal}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            2 Non pseudo reload: reject++
          alt=2,overall=1,losers=0,rld_nregs=0
            1 Non pseudo reload: reject++
            alt=0: Bad operand -- refuse
            1 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            alt=2,overall=6,losers=1 -- refuse
	 Choosing alt 2 in insn 449:  (0) r  (1) 0  (2) mr {*muldi3_1}
      Creating newreg=743 from oldreg=367, assigning class GENERAL_REGS to r743
      Making reload reg 743 for reg 367 optional
  449: {r185:DI=r184:DI*r743:DI;clobber flags:CC;}
      REG_DEAD r367:DI
      REG_DEAD r184:DI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  944: r743:DI=r367:DI

            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=2,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 944:  (0) r  (1) rem {*movdi_internal}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            2 Non pseudo reload: reject++
          alt=2,overall=1,losers=0,rld_nregs=0
            1 Non pseudo reload: reject++
            alt=0: Bad operand -- refuse
            1 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            alt=2,overall=6,losers=1 -- refuse
	 Choosing alt 2 in insn 415:  (0) r  (1) 0  (2) mr {*muldi3_1}
      Creating newreg=744 from oldreg=367, assigning class GENERAL_REGS to r744
      Making reload reg 744 for reg 367 optional
  415: {r171:DI=r170:DI*r744:DI;clobber flags:CC;}
      REG_DEAD r367:DI
      REG_DEAD r170:DI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  945: r744:DI=r367:DI

            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=2,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 945:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 211:  (0) =rm  (1) 0  (2) re {*subdi_1}
            alt=2: Bad operand -- refuse
            1 Non pseudo reload: reject++
          alt=3,overall=1,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 940:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non pseudo reload: reject++
          alt=3,overall=1,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 938:  (0) r  (1) rem {*movdi_internal}
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 934:  (0) m  (1) re {*movdi_internal}
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 932:  (0) m  (1) re {*movdi_internal}
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 930:  (0) m  (1) re {*movdi_internal}
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 928:  (0) m  (1) re {*movdi_internal}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #2: **********

EBB 2
EBB 3 4
EBB 5 6
EBB 32
EBB 7
EBB 31
EBB 8
EBB 9 10
EBB 11 12
EBB 13 14 15
EBB 16
EBB 17
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=745 from oldreg=357, assigning class GENERAL_REGS to inheritance r745
    Original reg change 357->745 (bb17):
  918: r717:DI=r745:DI
    Add inheritance<-original before:
  946: r745:DI=r357:DI

    Inheritance reuse change 357->745 (bb17):
  919: r718:DI=r745:DI
      REG_DEAD r745:DI
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=746 from oldreg=349, assigning class GENERAL_REGS to inheritance r746
    Original reg change 349->746 (bb17):
  914: r714:DI=r746:DI
    Add inheritance<-original before:
  947: r746:DI=r349:DI

    Inheritance reuse change 349->746 (bb17):
  915: r715:DI=r746:DI
      REG_DEAD r746:DI
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=747 from oldreg=416, assigning class GENERAL_REGS to inheritance r747
    Original reg change 416->747 (bb17):
  909: r710:DI=r747:DI
    Add inheritance<-original before:
  948: r747:DI=r416:DI

    Inheritance reuse change 416->747 (bb17):
  910: r711:DI=r747:DI
      REG_DEAD r747:DI
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=748 from oldreg=365, assigning class GENERAL_REGS to inheritance r748
    Original reg change 365->748 (bb17):
  907: r708:DI=r748:DI
    Add inheritance<-original before:
  949: r748:DI=r365:DI

    Inheritance reuse change 365->748 (bb17):
  921: r720:DI=r748:DI
      REG_DEAD r748:DI
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
EBB 35
EBB 18
EBB 34
EBB 19
EBB 33
EBB 20
EBB 21 22
EBB 23 24 25
EBB 26 27
EBB 28
EBB 37
EBB 29
EBB 36
EBB 30

********** Pseudo live ranges #2: **********

  BB 30
   Insn 764: point = 0, n_alt = -1
  BB 36
   Insn 799: point = 0, n_alt = -1
  BB 21
   Insn 646: point = 0, n_alt = -1
   Insn 645: point = 0, n_alt = 0
   Insn 644: point = 1, n_alt = 0
   Insn 643: point = 3, n_alt = 0
   Insn 642: point = 4, n_alt = 0
  BB 29
   Insn 780: point = 5, n_alt = -1
   Insn 751: point = 5, n_alt = 1
  BB 37
   Insn 802: point = 6, n_alt = -1
  BB 23
   Insn 656: point = 7, n_alt = -1
   Insn 655: point = 7, n_alt = 0
   Insn 654: point = 8, n_alt = 0
   Insn 653: point = 10, n_alt = 0
   Insn 652: point = 11, n_alt = 0
  BB 28
   Insn 778: point = 12, n_alt = -1
   Insn 745: point = 12, n_alt = 1
   Insn 744: point = 12, n_alt = 8
   Insn 743: point = 13, n_alt = 3
   Insn 742: point = 14, n_alt = 0
   Insn 741: point = 16, n_alt = 1
   Insn 740: point = 18, n_alt = 0
   Insn 739: point = 19, n_alt = 3
   Insn 926: point = 21, n_alt = 3
   Insn 738: point = 22, n_alt = 2
   Insn 737: point = 24, n_alt = 1
   Insn 736: point = 26, n_alt = 0
  BB 27
   Insn 733: point = 28, n_alt = 7
  BB 26
   Insn 731: point = 30, n_alt = -1
   Insn 730: point = 30, n_alt = 0
   Insn 729: point = 31, n_alt = 0
   Insn 728: point = 33, n_alt = 0
   Insn 727: point = 35, n_alt = 0
   Insn 726: point = 36, n_alt = 1
   Insn 725: point = 36, n_alt = 0
   Insn 724: point = 38, n_alt = 0
   Insn 723: point = 39, n_alt = 1
   Insn 722: point = 40, n_alt = 7
  BB 25
   Insn 719: point = 42, n_alt = 7
  BB 24
   Insn 717: point = 44, n_alt = -1
   Insn 716: point = 44, n_alt = 0
   Insn 715: point = 45, n_alt = 0
   Insn 714: point = 47, n_alt = 0
   Insn 713: point = 49, n_alt = 0
   Insn 712: point = 50, n_alt = 1
   Insn 711: point = 50, n_alt = 0
   Insn 710: point = 52, n_alt = 0
   Insn 709: point = 53, n_alt = 1
   Insn 708: point = 53, n_alt = -2
   Insn 707: point = 55, n_alt = 2
   Insn 706: point = 57, n_alt = -2
   Insn 705: point = 59, n_alt = 1
   Insn 704: point = 61, n_alt = 7
   Insn 703: point = 62, n_alt = 7
   Insn 702: point = 64, n_alt = 3
   Insn 701: point = 65, n_alt = 0
   Insn 700: point = 67, n_alt = 1
   Insn 699: point = 69, n_alt = 0
   Insn 698: point = 70, n_alt = 3
   Insn 925: point = 72, n_alt = 3
   Insn 697: point = 73, n_alt = 2
   Insn 696: point = 75, n_alt = 1
   Insn 695: point = 77, n_alt = 0
   Insn 694: point = 78, n_alt = 1
   Insn 693: point = 80, n_alt = 7
   Insn 692: point = 82, n_alt = 3
   Insn 691: point = 83, n_alt = 0
   Insn 690: point = 85, n_alt = 1
   Insn 689: point = 87, n_alt = 0
   Insn 688: point = 88, n_alt = 3
   Insn 924: point = 90, n_alt = 3
   Insn 687: point = 91, n_alt = 2
   Insn 686: point = 93, n_alt = 1
   Insn 685: point = 95, n_alt = 0
   Insn 684: point = 96, n_alt = -2
   Insn 683: point = 98, n_alt = 1
   Insn 682: point = 100, n_alt = 1
   Insn 681: point = 102, n_alt = 7
   Insn 680: point = 103, n_alt = -2
   Insn 679: point = 105, n_alt = 2
   Insn 678: point = 107, n_alt = 7
   Insn 677: point = 108, n_alt = 7
   Insn 676: point = 110, n_alt = 3
   Insn 675: point = 111, n_alt = 0
   Insn 674: point = 113, n_alt = 1
   Insn 673: point = 115, n_alt = 0
   Insn 672: point = 116, n_alt = 3
   Insn 923: point = 118, n_alt = -2
	   Creating copy r722<-r739@1000
   Insn 671: point = 120, n_alt = 2
   Insn 670: point = 122, n_alt = 1
   Insn 669: point = 124, n_alt = 0
   Insn 668: point = 125, n_alt = 1
   Insn 667: point = 127, n_alt = 7
   Insn 666: point = 128, n_alt = 7
   Insn 665: point = 130, n_alt = 3
   Insn 664: point = 131, n_alt = 0
   Insn 663: point = 133, n_alt = 1
   Insn 662: point = 135, n_alt = 0
   Insn 661: point = 136, n_alt = 3
   Insn 922: point = 138, n_alt = -2
	   Creating copy r721<-r739@1000
   Insn 940: point = 139, n_alt = 3
   Insn 660: point = 140, n_alt = 2
   Insn 659: point = 142, n_alt = 1
   Insn 658: point = 144, n_alt = 0
  BB 22
   Insn 650: point = 146, n_alt = 1
   Insn 649: point = 146, n_alt = 0
   Insn 648: point = 148, n_alt = 3
  BB 20
   Insn 640: point = 150, n_alt = 1
   Insn 639: point = 151, n_alt = 0
   Insn 638: point = 152, n_alt = 0
  BB 33
   Insn 790: point = 154, n_alt = -1
  BB 9
   Insn 387: point = 155, n_alt = -1
   Insn 386: point = 155, n_alt = 0
   Insn 385: point = 156, n_alt = 0
   Insn 384: point = 158, n_alt = 0
   Insn 383: point = 159, n_alt = 0
   Insn 893: point = 160, n_alt = 0
  BB 19
   Insn 776: point = 162, n_alt = -1
   Insn 632: point = 162, n_alt = 1
  BB 34
   Insn 793: point = 163, n_alt = -1
  BB 11
   Insn 397: point = 164, n_alt = -1
   Insn 396: point = 164, n_alt = 0
   Insn 395: point = 165, n_alt = 0
   Insn 394: point = 167, n_alt = 0
   Insn 393: point = 168, n_alt = 0
   Insn 895: point = 169, n_alt = 0
  BB 18
   Insn 774: point = 171, n_alt = -1
   Insn 626: point = 171, n_alt = 1
  BB 35
   Insn 796: point = 172, n_alt = -1
  BB 13
   Insn 407: point = 173, n_alt = -1
   Insn 406: point = 173, n_alt = 0
   Insn 405: point = 174, n_alt = 0
   Insn 404: point = 176, n_alt = 0
   Insn 403: point = 177, n_alt = 0
  BB 17
   Insn 772: point = 178, n_alt = -1
   Insn 620: point = 178, n_alt = 1
   Insn 619: point = 178, n_alt = 8
   Insn 618: point = 179, n_alt = 3
   Insn 617: point = 180, n_alt = 7
   Insn 616: point = 182, n_alt = 3
   Insn 615: point = 183, n_alt = 0
   Insn 614: point = 185, n_alt = 0
   Insn 613: point = 187, n_alt = 0
   Insn 612: point = 188, n_alt = 3
   Insn 921: point = 190, n_alt = 3
	   Creating copy r720<-r748@1000
   Insn 611: point = 192, n_alt = 2
   Insn 610: point = 194, n_alt = 0
   Insn 609: point = 196, n_alt = 0
   Insn 608: point = 197, n_alt = 3
   Insn 607: point = 199, n_alt = 0
   Insn 606: point = 201, n_alt = 0
   Insn 605: point = 202, n_alt = 3
   Insn 920: point = 204, n_alt = -2
	   Creating copy r719<-r737@1000
   Insn 604: point = 206, n_alt = 2
   Insn 603: point = 208, n_alt = 0
   Insn 602: point = 210, n_alt = 0
   Insn 601: point = 211, n_alt = 8
   Insn 600: point = 212, n_alt = 3
   Insn 599: point = 213, n_alt = 1
   Insn 598: point = 215, n_alt = 0
   Insn 597: point = 217, n_alt = 0
   Insn 596: point = 219, n_alt = 0
   Insn 595: point = 220, n_alt = 3
   Insn 919: point = 222, n_alt = 3
	   Creating copy r718<-r745@1000
   Insn 594: point = 224, n_alt = 2
   Insn 593: point = 226, n_alt = 0
   Insn 592: point = 228, n_alt = 0
   Insn 591: point = 229, n_alt = 7
   Insn 590: point = 231, n_alt = 3
   Insn 589: point = 232, n_alt = 0
   Insn 588: point = 234, n_alt = 0
   Insn 587: point = 236, n_alt = 0
   Insn 586: point = 237, n_alt = 3
   Insn 918: point = 239, n_alt = 3
	   Creating copy r717<-r745@1000
   Insn 946: point = 240, n_alt = -1
   Insn 585: point = 241, n_alt = 2
   Insn 584: point = 243, n_alt = 0
   Insn 583: point = 245, n_alt = 0
   Insn 917: point = 246, n_alt = -2
	Hard reg 22 is preferable by r716 with profit 1000
   Insn 582: point = 248, n_alt = 1
   Insn 916: point = 248, n_alt = -2
	Hard reg 22 is preferable by r716 with profit 1000
	Hard reg 21 is preferable by r716 with profit 1000
   Insn 581: point = 250, n_alt = 7
   Insn 580: point = 251, n_alt = 8
   Insn 579: point = 252, n_alt = 3
   Insn 578: point = 253, n_alt = 1
   Insn 577: point = 255, n_alt = 0
   Insn 576: point = 257, n_alt = 0
   Insn 575: point = 259, n_alt = 0
   Insn 574: point = 260, n_alt = 3
   Insn 915: point = 262, n_alt = 3
	   Creating copy r715<-r746@1000
   Insn 573: point = 264, n_alt = 2
   Insn 572: point = 266, n_alt = 0
   Insn 571: point = 268, n_alt = 0
   Insn 570: point = 269, n_alt = 7
   Insn 569: point = 271, n_alt = 3
   Insn 568: point = 272, n_alt = 0
   Insn 567: point = 274, n_alt = 0
   Insn 566: point = 276, n_alt = 0
   Insn 565: point = 277, n_alt = 3
   Insn 914: point = 279, n_alt = 3
	   Creating copy r714<-r746@1000
   Insn 947: point = 280, n_alt = -1
   Insn 564: point = 281, n_alt = 2
   Insn 563: point = 283, n_alt = 0
   Insn 562: point = 285, n_alt = 0
   Insn 913: point = 286, n_alt = -2
	Hard reg 22 is preferable by r713 with profit 1000
   Insn 561: point = 288, n_alt = 1
   Insn 912: point = 288, n_alt = -2
	Hard reg 22 is preferable by r713 with profit 1000
	Hard reg 21 is preferable by r713 with profit 1000
   Insn 560: point = 290, n_alt = 1
   Insn 559: point = 292, n_alt = -2
   Insn 558: point = 294, n_alt = 2
   Insn 557: point = 296, n_alt = 7
   Insn 556: point = 298, n_alt = 3
   Insn 555: point = 299, n_alt = 0
   Insn 554: point = 301, n_alt = 0
   Insn 553: point = 303, n_alt = 0
   Insn 552: point = 304, n_alt = 3
   Insn 911: point = 306, n_alt = 3
   Insn 551: point = 307, n_alt = 2
   Insn 550: point = 309, n_alt = 0
   Insn 549: point = 311, n_alt = 0
   Insn 548: point = 312, n_alt = 1
   Insn 547: point = 314, n_alt = 7
   Insn 546: point = 315, n_alt = -2
   Insn 545: point = 317, n_alt = 1
   Insn 544: point = 319, n_alt = 7
   Insn 543: point = 321, n_alt = 3
   Insn 542: point = 322, n_alt = 0
   Insn 541: point = 324, n_alt = 0
   Insn 540: point = 326, n_alt = 0
   Insn 539: point = 327, n_alt = 0
   Insn 538: point = 329, n_alt = 2
   Insn 537: point = 331, n_alt = 0
   Insn 536: point = 333, n_alt = 0
   Insn 535: point = 334, n_alt = 3
   Insn 910: point = 336, n_alt = 3
	   Creating copy r711<-r747@1000
   Insn 534: point = 338, n_alt = 2
   Insn 533: point = 340, n_alt = 0
   Insn 532: point = 342, n_alt = 0
   Insn 531: point = 344, n_alt = 0
   Insn 530: point = 345, n_alt = 7
   Insn 529: point = 347, n_alt = 3
   Insn 528: point = 348, n_alt = 0
   Insn 527: point = 350, n_alt = 0
   Insn 526: point = 352, n_alt = 0
   Insn 525: point = 353, n_alt = 0
   Insn 524: point = 355, n_alt = 2
   Insn 523: point = 357, n_alt = 0
   Insn 522: point = 359, n_alt = 0
   Insn 521: point = 360, n_alt = 3
   Insn 909: point = 362, n_alt = 3
	   Creating copy r710<-r747@1000
   Insn 948: point = 363, n_alt = -1
   Insn 520: point = 364, n_alt = 2
   Insn 519: point = 366, n_alt = 0
   Insn 518: point = 368, n_alt = 0
   Insn 517: point = 369, n_alt = 8
   Insn 516: point = 370, n_alt = 1
   Insn 515: point = 372, n_alt = 7
   Insn 514: point = 374, n_alt = 3
   Insn 513: point = 375, n_alt = 0
   Insn 512: point = 377, n_alt = 0
   Insn 511: point = 379, n_alt = 0
   Insn 510: point = 380, n_alt = 3
   Insn 908: point = 382, n_alt = -2
	   Creating copy r709<-r737@1000
   Insn 938: point = 383, n_alt = 3
   Insn 509: point = 384, n_alt = 2
   Insn 508: point = 386, n_alt = 0
   Insn 507: point = 388, n_alt = 0
   Insn 506: point = 389, n_alt = 7
   Insn 505: point = 391, n_alt = 3
   Insn 504: point = 392, n_alt = 0
   Insn 503: point = 394, n_alt = 0
   Insn 502: point = 396, n_alt = 0
   Insn 501: point = 397, n_alt = 3
   Insn 907: point = 399, n_alt = 3
	   Creating copy r708<-r748@1000
   Insn 949: point = 400, n_alt = -1
   Insn 500: point = 401, n_alt = 2
   Insn 499: point = 403, n_alt = 0
   Insn 498: point = 405, n_alt = 0
   Insn 497: point = 406, n_alt = 8
   Insn 496: point = 407, n_alt = 1
   Insn 495: point = 409, n_alt = 7
   Insn 494: point = 411, n_alt = 3
   Insn 493: point = 412, n_alt = 0
   Insn 492: point = 414, n_alt = 0
   Insn 491: point = 416, n_alt = 0
   Insn 490: point = 417, n_alt = 0
   Insn 489: point = 419, n_alt = 2
   Insn 941: point = 421, n_alt = 3
   Insn 488: point = 422, n_alt = 0
   Insn 487: point = 424, n_alt = 0
   Insn 486: point = 425, n_alt = 3
   Insn 905: point = 427, n_alt = 3
   Insn 485: point = 428, n_alt = 2
   Insn 942: point = 430, n_alt = 3
   Insn 484: point = 431, n_alt = 0
   Insn 483: point = 433, n_alt = 0
   Insn 482: point = 434, n_alt = 1
   Insn 481: point = 436, n_alt = 7
   Insn 480: point = 438, n_alt = 3
   Insn 479: point = 439, n_alt = 0
   Insn 478: point = 441, n_alt = 0
   Insn 477: point = 443, n_alt = 0
   Insn 476: point = 444, n_alt = 3
   Insn 903: point = 446, n_alt = 3
   Insn 475: point = 447, n_alt = 2
   Insn 943: point = 449, n_alt = 3
   Insn 474: point = 450, n_alt = 0
   Insn 473: point = 452, n_alt = 0
   Insn 472: point = 453, n_alt = 7
   Insn 471: point = 455, n_alt = 3
   Insn 470: point = 456, n_alt = 3
   Insn 469: point = 458, n_alt = 0
   Insn 468: point = 460, n_alt = 0
  BB 15
   Insn 770: point = 462, n_alt = -1
   Insn 438: point = 462, n_alt = 8
   Insn 437: point = 463, n_alt = 7
   Insn 436: point = 464, n_alt = 3
   Insn 435: point = 465, n_alt = 0
   Insn 434: point = 467, n_alt = 0
   Insn 433: point = 469, n_alt = 0
   Insn 432: point = 470, n_alt = 3
   Insn 898: point = 472, n_alt = 3
   Insn 431: point = 473, n_alt = 2
   Insn 430: point = 475, n_alt = 0
   Insn 429: point = 477, n_alt = 0
  BB 16
   Insn 465: point = 479, n_alt = 8
   Insn 464: point = 480, n_alt = 3
   Insn 463: point = 481, n_alt = 0
   Insn 462: point = 483, n_alt = 0
   Insn 461: point = 485, n_alt = 0
   Insn 460: point = 487, n_alt = 0
   Insn 459: point = 488, n_alt = 3
   Insn 901: point = 490, n_alt = 3
   Insn 458: point = 491, n_alt = 2
   Insn 457: point = 493, n_alt = 0
   Insn 456: point = 495, n_alt = 0
   Insn 455: point = 496, n_alt = 7
   Insn 454: point = 498, n_alt = 3
   Insn 453: point = 499, n_alt = 0
   Insn 452: point = 501, n_alt = 0
   Insn 451: point = 503, n_alt = 0
   Insn 450: point = 504, n_alt = 0
   Insn 449: point = 506, n_alt = 2
   Insn 944: point = 508, n_alt = 3
   Insn 448: point = 509, n_alt = 0
   Insn 447: point = 511, n_alt = 0
   Insn 446: point = 512, n_alt = 3
   Insn 899: point = 514, n_alt = 3
   Insn 445: point = 515, n_alt = 2
   Insn 444: point = 517, n_alt = 0
   Insn 443: point = 519, n_alt = 0
  BB 14
   Insn 424: point = 521, n_alt = -1
   Insn 423: point = 521, n_alt = 1
   Insn 422: point = 522, n_alt = 7
   Insn 421: point = 523, n_alt = 7
   Insn 420: point = 525, n_alt = 3
   Insn 419: point = 526, n_alt = 0
   Insn 418: point = 528, n_alt = 0
   Insn 417: point = 530, n_alt = 0
   Insn 416: point = 531, n_alt = 0
   Insn 415: point = 533, n_alt = 2
   Insn 945: point = 535, n_alt = 3
   Insn 414: point = 536, n_alt = 0
   Insn 413: point = 538, n_alt = 0
   Insn 412: point = 539, n_alt = 3
   Insn 896: point = 541, n_alt = 3
   Insn 411: point = 542, n_alt = 2
   Insn 410: point = 544, n_alt = 0
   Insn 409: point = 546, n_alt = 0
  BB 12
   Insn 401: point = 548, n_alt = 1
   Insn 400: point = 548, n_alt = 0
   Insn 399: point = 550, n_alt = 3
  BB 10
   Insn 391: point = 552, n_alt = 1
   Insn 894: point = 553, n_alt = 1
   Insn 390: point = 555, n_alt = 0
   Insn 389: point = 556, n_alt = 0
  BB 8
   Insn 381: point = 558, n_alt = 1
   Insn 892: point = 558, n_alt = 1
   Insn 380: point = 560, n_alt = 0
   Insn 379: point = 562, n_alt = 3
  BB 31
   Insn 784: point = 564, n_alt = -1
  BB 3
   Insn 325: point = 565, n_alt = -1
   Insn 324: point = 565, n_alt = 0
   Insn 323: point = 566, n_alt = 0
   Insn 322: point = 568, n_alt = 0
   Insn 321: point = 569, n_alt = 0
  BB 7
   Insn 767: point = 570, n_alt = -1
   Insn 373: point = 570, n_alt = 1
  BB 32
   Insn 787: point = 571, n_alt = -1
  BB 5
   Insn 335: point = 572, n_alt = -1
   Insn 334: point = 572, n_alt = 0
   Insn 333: point = 573, n_alt = 0
   Insn 332: point = 575, n_alt = 0
   Insn 331: point = 576, n_alt = 0
  BB 6
   Insn 765: point = 577, n_alt = -1
   Insn 367: point = 577, n_alt = 1
   Insn 366: point = 577, n_alt = 8
   Insn 365: point = 578, n_alt = 7
   Insn 364: point = 579, n_alt = 3
   Insn 363: point = 580, n_alt = 0
   Insn 362: point = 582, n_alt = 0
   Insn 361: point = 584, n_alt = 0
   Insn 360: point = 585, n_alt = 3
   Insn 891: point = 587, n_alt = 3
   Insn 359: point = 588, n_alt = 2
   Insn 358: point = 590, n_alt = 0
   Insn 357: point = 592, n_alt = 0
   Insn 356: point = 593, n_alt = 8
   Insn 355: point = 594, n_alt = 7
   Insn 354: point = 595, n_alt = 3
   Insn 353: point = 596, n_alt = 0
   Insn 352: point = 598, n_alt = 0
   Insn 351: point = 600, n_alt = 0
   Insn 350: point = 601, n_alt = 3
   Insn 890: point = 603, n_alt = 3
   Insn 349: point = 604, n_alt = 2
   Insn 348: point = 606, n_alt = 0
   Insn 347: point = 608, n_alt = 0
   Insn 346: point = 609, n_alt = 8
   Insn 345: point = 610, n_alt = 7
   Insn 344: point = 611, n_alt = 3
   Insn 343: point = 612, n_alt = 0
   Insn 342: point = 614, n_alt = 0
   Insn 341: point = 616, n_alt = 0
   Insn 340: point = 617, n_alt = 3
   Insn 889: point = 619, n_alt = 3
   Insn 339: point = 620, n_alt = 2
   Insn 338: point = 622, n_alt = 0
   Insn 337: point = 624, n_alt = 0
  BB 4
   Insn 329: point = 626, n_alt = 1
   Insn 328: point = 626, n_alt = 0
   Insn 327: point = 628, n_alt = 3
  BB 2
   Insn 319: point = 630, n_alt = 1
   Insn 318: point = 631, n_alt = 0
   Insn 317: point = 632, n_alt = 0
   Insn 888: point = 633, n_alt = 5
   Insn 316: point = 635, n_alt = 0
   Insn 887: point = 635, n_alt = -2
   Insn 312: point = 636, n_alt = 5
   Insn 311: point = 637, n_alt = 5
   Insn 310: point = 638, n_alt = -2
   Insn 308: point = 640, n_alt = 1
   Insn 306: point = 642, n_alt = 0
   Insn 307: point = 642, n_alt = 2
   Insn 886: point = 643, n_alt = -2
	Hard reg 0 is preferable by r688 with profit 1000
   Insn 305: point = 645, n_alt = 2
   Insn 885: point = 645, n_alt = -2
   Insn 304: point = 646, n_alt = 5
   Insn 303: point = 647, n_alt = 0
   Insn 302: point = 649, n_alt = 0
   Insn 301: point = 651, n_alt = 3
   Insn 884: point = 652, n_alt = -2
	Hard reg 5 is preferable by r687 with profit 1000
   Insn 300: point = 654, n_alt = 0
   Insn 883: point = 655, n_alt = -2
	Hard reg 5 is preferable by r687 with profit 1000
	Hard reg 1 is preferable by r687 with profit 1000
   Insn 298: point = 657, n_alt = 0
   Insn 299: point = 657, n_alt = 2
   Insn 297: point = 658, n_alt = 3
   Insn 296: point = 659, n_alt = 5
   Insn 295: point = 660, n_alt = 0
   Insn 294: point = 662, n_alt = 0
   Insn 293: point = 664, n_alt = 3
   Insn 882: point = 665, n_alt = 5
   Insn 292: point = 667, n_alt = 0
   Insn 881: point = 667, n_alt = -2
   Insn 288: point = 668, n_alt = 5
   Insn 287: point = 669, n_alt = 5
   Insn 286: point = 670, n_alt = -2
   Insn 284: point = 672, n_alt = 1
   Insn 282: point = 674, n_alt = 0
   Insn 283: point = 674, n_alt = 2
   Insn 880: point = 675, n_alt = -2
	Hard reg 0 is preferable by r685 with profit 1000
   Insn 281: point = 677, n_alt = 2
   Insn 879: point = 677, n_alt = -2
   Insn 280: point = 678, n_alt = 5
   Insn 279: point = 679, n_alt = 0
   Insn 278: point = 681, n_alt = 0
   Insn 277: point = 683, n_alt = 3
   Insn 878: point = 684, n_alt = -2
	Hard reg 41 is preferable by r684 with profit 1000
   Insn 276: point = 686, n_alt = 0
   Insn 877: point = 687, n_alt = -2
	Hard reg 41 is preferable by r684 with profit 1000
	Hard reg 1 is preferable by r684 with profit 1000
   Insn 274: point = 689, n_alt = 0
   Insn 275: point = 689, n_alt = 2
   Insn 273: point = 690, n_alt = 3
   Insn 272: point = 691, n_alt = 5
   Insn 271: point = 692, n_alt = 0
   Insn 270: point = 694, n_alt = 0
   Insn 269: point = 696, n_alt = 3
   Insn 876: point = 697, n_alt = 5
   Insn 268: point = 699, n_alt = 0
   Insn 875: point = 699, n_alt = -2
   Insn 264: point = 700, n_alt = 5
   Insn 263: point = 701, n_alt = 5
   Insn 262: point = 702, n_alt = -2
   Insn 260: point = 704, n_alt = 1
   Insn 258: point = 706, n_alt = 0
   Insn 259: point = 706, n_alt = 2
   Insn 874: point = 707, n_alt = -2
	Hard reg 0 is preferable by r682 with profit 1000
   Insn 257: point = 709, n_alt = 2
   Insn 873: point = 709, n_alt = -2
   Insn 256: point = 710, n_alt = 5
   Insn 255: point = 711, n_alt = 0
   Insn 254: point = 713, n_alt = 0
   Insn 253: point = 715, n_alt = 3
   Insn 872: point = 716, n_alt = -2
	Hard reg 43 is preferable by r681 with profit 1000
   Insn 252: point = 718, n_alt = 0
   Insn 871: point = 719, n_alt = -2
	Hard reg 43 is preferable by r681 with profit 1000
	Hard reg 1 is preferable by r681 with profit 1000
   Insn 250: point = 721, n_alt = 0
   Insn 251: point = 721, n_alt = 2
   Insn 249: point = 722, n_alt = 3
   Insn 248: point = 723, n_alt = 5
   Insn 247: point = 724, n_alt = 0
   Insn 246: point = 726, n_alt = 0
   Insn 245: point = 728, n_alt = 3
   Insn 870: point = 729, n_alt = 5
   Insn 244: point = 731, n_alt = 1
   Insn 869: point = 731, n_alt = -2
	Hard reg 0 is preferable by r680 with profit 1000
   Insn 868: point = 733, n_alt = -2
	Hard reg 0 is preferable by r679 with profit 1000
   Insn 243: point = 735, n_alt = 0
   Insn 867: point = 735, n_alt = -2
   Insn 239: point = 736, n_alt = 5
   Insn 238: point = 737, n_alt = 5
   Insn 237: point = 738, n_alt = -2
   Insn 235: point = 740, n_alt = 1
   Insn 233: point = 742, n_alt = 0
   Insn 234: point = 742, n_alt = 2
   Insn 866: point = 743, n_alt = -2
	Hard reg 0 is preferable by r678 with profit 1000
   Insn 232: point = 745, n_alt = 2
   Insn 865: point = 745, n_alt = -2
   Insn 231: point = 746, n_alt = 5
   Insn 230: point = 747, n_alt = 0
   Insn 229: point = 749, n_alt = 0
   Insn 228: point = 751, n_alt = 3
   Insn 864: point = 752, n_alt = -2
	Hard reg 38 is preferable by r677 with profit 1000
   Insn 227: point = 754, n_alt = 0
   Insn 863: point = 755, n_alt = -2
	Hard reg 38 is preferable by r677 with profit 1000
	Hard reg 1 is preferable by r677 with profit 1000
   Insn 225: point = 757, n_alt = 0
   Insn 226: point = 757, n_alt = 2
   Insn 862: point = 758, n_alt = -2
	Hard reg 0 is preferable by r676 with profit 1000
   Insn 224: point = 760, n_alt = 2
   Insn 861: point = 760, n_alt = -2
   Insn 223: point = 761, n_alt = 5
   Insn 222: point = 762, n_alt = 0
   Insn 221: point = 764, n_alt = 0
   Insn 220: point = 766, n_alt = 3
   Insn 860: point = 767, n_alt = -2
	Hard reg 39 is preferable by r675 with profit 1000
   Insn 219: point = 769, n_alt = 0
   Insn 859: point = 770, n_alt = -2
	Hard reg 39 is preferable by r675 with profit 1000
	Hard reg 1 is preferable by r675 with profit 1000
   Insn 217: point = 772, n_alt = 0
   Insn 218: point = 772, n_alt = 2
   Insn 216: point = 773, n_alt = 3
   Insn 215: point = 774, n_alt = 5
   Insn 214: point = 775, n_alt = 0
   Insn 213: point = 777, n_alt = 0
   Insn 212: point = 779, n_alt = 3
   Insn 857: point = 780, n_alt = 5
   Insn 211: point = 782, n_alt = 0
   Insn 858: point = 783, n_alt = -2
	   Creating copy r674<-r726@1000
   Insn 856: point = 785, n_alt = -2
	Hard reg 0 is preferable by r673 with profit 1000
   Insn 855: point = 787, n_alt = -2
	Hard reg 0 is preferable by r672 with profit 1000
   Insn 210: point = 789, n_alt = 0
   Insn 854: point = 789, n_alt = -2
	   Creating copy r672<-r728@1000
   Insn 206: point = 791, n_alt = 5
   Insn 205: point = 792, n_alt = 5
   Insn 204: point = 793, n_alt = -2
   Insn 202: point = 795, n_alt = 1
   Insn 200: point = 797, n_alt = 0
   Insn 201: point = 797, n_alt = 2
   Insn 853: point = 798, n_alt = -2
	Hard reg 0 is preferable by r671 with profit 1000
   Insn 199: point = 800, n_alt = 2
   Insn 852: point = 800, n_alt = -2
	   Creating copy r671<-r726@1000
   Insn 927: point = 801, n_alt = -2
	   Creating copy r726<-r727@1000
   Insn 198: point = 803, n_alt = 5
   Insn 197: point = 804, n_alt = 0
   Insn 196: point = 806, n_alt = 0
   Insn 195: point = 808, n_alt = 3
   Insn 928: point = 809, n_alt = 5
   Insn 851: point = 810, n_alt = -2
	   Creating copy r670->r727@1000
   Insn 194: point = 812, n_alt = 0
   Insn 850: point = 813, n_alt = -2
	Hard reg 1 is preferable by r670 with profit 1000
   Insn 192: point = 815, n_alt = 0
   Insn 193: point = 815, n_alt = 2
   Insn 849: point = 816, n_alt = -2
	Hard reg 0 is preferable by r669 with profit 1000
   Insn 191: point = 818, n_alt = 2
   Insn 848: point = 818, n_alt = -2
	   Creating copy r669<-r728@1000
   Insn 929: point = 819, n_alt = -2
	   Creating copy r728<-r729@1000
   Insn 190: point = 821, n_alt = 5
   Insn 189: point = 822, n_alt = 0
   Insn 188: point = 824, n_alt = 0
   Insn 187: point = 826, n_alt = 3
   Insn 930: point = 827, n_alt = 5
   Insn 847: point = 828, n_alt = -2
	   Creating copy r668->r729@1000
   Insn 186: point = 830, n_alt = 0
   Insn 846: point = 831, n_alt = -2
	Hard reg 1 is preferable by r668 with profit 1000
   Insn 184: point = 833, n_alt = 0
   Insn 185: point = 833, n_alt = 2
   Insn 183: point = 834, n_alt = 3
   Insn 182: point = 835, n_alt = 5
   Insn 181: point = 836, n_alt = 0
   Insn 180: point = 838, n_alt = 0
   Insn 179: point = 840, n_alt = 3
   Insn 845: point = 841, n_alt = 5
   Insn 178: point = 843, n_alt = 0
   Insn 844: point = 843, n_alt = -2
	   Creating copy r667<-r730@1000
   Insn 174: point = 845, n_alt = 5
   Insn 173: point = 846, n_alt = 5
   Insn 172: point = 847, n_alt = -2
   Insn 170: point = 849, n_alt = 1
   Insn 168: point = 851, n_alt = 0
   Insn 169: point = 851, n_alt = 2
   Insn 843: point = 852, n_alt = -2
	Hard reg 0 is preferable by r666 with profit 1000
   Insn 167: point = 854, n_alt = 2
   Insn 842: point = 854, n_alt = -2
	   Creating copy r666<-r730@1000
   Insn 931: point = 855, n_alt = -2
	   Creating copy r730<-r731@1000
   Insn 166: point = 857, n_alt = 5
   Insn 165: point = 858, n_alt = 0
   Insn 164: point = 860, n_alt = 0
   Insn 163: point = 862, n_alt = 3
   Insn 932: point = 863, n_alt = 5
   Insn 841: point = 864, n_alt = -2
	   Creating copy r665->r731@1000
   Insn 162: point = 866, n_alt = 0
   Insn 840: point = 867, n_alt = -2
	Hard reg 1 is preferable by r665 with profit 1000
   Insn 160: point = 869, n_alt = 0
   Insn 161: point = 869, n_alt = 2
   Insn 159: point = 870, n_alt = 3
   Insn 158: point = 871, n_alt = 5
   Insn 157: point = 872, n_alt = 0
   Insn 156: point = 874, n_alt = 0
   Insn 155: point = 876, n_alt = 3
   Insn 151: point = 877, n_alt = 5
   Insn 150: point = 878, n_alt = 5
   Insn 149: point = 879, n_alt = -2
   Insn 147: point = 881, n_alt = 1
   Insn 145: point = 883, n_alt = 0
   Insn 146: point = 883, n_alt = 2
   Insn 144: point = 884, n_alt = 3
   Insn 143: point = 885, n_alt = 5
   Insn 142: point = 886, n_alt = 0
   Insn 141: point = 888, n_alt = 0
   Insn 140: point = 890, n_alt = 3
   Insn 839: point = 891, n_alt = 5
   Insn 139: point = 893, n_alt = 0
   Insn 838: point = 893, n_alt = -2
   Insn 135: point = 894, n_alt = 5
   Insn 134: point = 895, n_alt = 5
   Insn 133: point = 896, n_alt = -2
   Insn 131: point = 898, n_alt = 1
   Insn 129: point = 900, n_alt = 0
   Insn 130: point = 900, n_alt = 2
   Insn 837: point = 901, n_alt = -2
	Hard reg 0 is preferable by r663 with profit 1000
   Insn 128: point = 903, n_alt = 2
   Insn 836: point = 903, n_alt = -2
   Insn 127: point = 904, n_alt = 5
   Insn 126: point = 905, n_alt = 0
   Insn 125: point = 907, n_alt = 0
   Insn 124: point = 909, n_alt = 3
   Insn 835: point = 910, n_alt = -2
	Hard reg 37 is preferable by r662 with profit 1000
   Insn 123: point = 912, n_alt = 0
   Insn 834: point = 913, n_alt = -2
	Hard reg 37 is preferable by r662 with profit 1000
	Hard reg 1 is preferable by r662 with profit 1000
   Insn 121: point = 915, n_alt = 0
   Insn 122: point = 915, n_alt = 2
   Insn 120: point = 916, n_alt = 3
   Insn 119: point = 917, n_alt = 5
   Insn 118: point = 918, n_alt = 0
   Insn 117: point = 920, n_alt = 0
   Insn 116: point = 922, n_alt = 3
   Insn 833: point = 923, n_alt = 5
   Insn 115: point = 925, n_alt = 1
   Insn 832: point = 925, n_alt = -2
	Hard reg 0 is preferable by r661 with profit 1000
   Insn 831: point = 927, n_alt = -2
	Hard reg 0 is preferable by r660 with profit 1000
   Insn 114: point = 929, n_alt = 0
   Insn 830: point = 929, n_alt = -2
	   Creating copy r660<-r732@1000
   Insn 110: point = 931, n_alt = 5
   Insn 109: point = 932, n_alt = 5
   Insn 108: point = 933, n_alt = -2
   Insn 106: point = 935, n_alt = 1
   Insn 104: point = 937, n_alt = 0
   Insn 105: point = 937, n_alt = 2
   Insn 829: point = 938, n_alt = -2
	Hard reg 0 is preferable by r659 with profit 1000
   Insn 103: point = 940, n_alt = 2
   Insn 828: point = 940, n_alt = -2
   Insn 102: point = 941, n_alt = 5
   Insn 101: point = 942, n_alt = 0
   Insn 100: point = 944, n_alt = 0
   Insn 99: point = 946, n_alt = 3
   Insn 827: point = 947, n_alt = -2
	Hard reg 44 is preferable by r658 with profit 1000
   Insn 98: point = 949, n_alt = 0
   Insn 826: point = 950, n_alt = -2
	Hard reg 44 is preferable by r658 with profit 1000
	Hard reg 1 is preferable by r658 with profit 1000
   Insn 96: point = 952, n_alt = 0
   Insn 97: point = 952, n_alt = 2
   Insn 825: point = 953, n_alt = -2
	Hard reg 0 is preferable by r657 with profit 1000
   Insn 95: point = 955, n_alt = 2
   Insn 824: point = 955, n_alt = -2
	   Creating copy r657<-r732@1000
   Insn 933: point = 956, n_alt = -2
	   Creating copy r732<-r733@1000
   Insn 94: point = 958, n_alt = 5
   Insn 93: point = 959, n_alt = 0
   Insn 92: point = 961, n_alt = 0
   Insn 91: point = 963, n_alt = 3
   Insn 934: point = 964, n_alt = 5
   Insn 823: point = 965, n_alt = -2
	   Creating copy r656->r733@1000
   Insn 90: point = 967, n_alt = 0
   Insn 822: point = 968, n_alt = -2
	Hard reg 1 is preferable by r656 with profit 1000
   Insn 88: point = 970, n_alt = 0
   Insn 89: point = 970, n_alt = 2
   Insn 87: point = 971, n_alt = 3
   Insn 86: point = 972, n_alt = 5
   Insn 85: point = 973, n_alt = 0
   Insn 84: point = 975, n_alt = 0
   Insn 83: point = 977, n_alt = 3
   Insn 821: point = 978, n_alt = 5
   Insn 82: point = 980, n_alt = 0
   Insn 820: point = 980, n_alt = -2
   Insn 78: point = 981, n_alt = 2
   Insn 77: point = 982, n_alt = 3
   Insn 76: point = 983, n_alt = -2
   Insn 74: point = 985, n_alt = 1
   Insn 72: point = 987, n_alt = 0
   Insn 73: point = 987, n_alt = 2
   Insn 819: point = 988, n_alt = -2
	Hard reg 0 is preferable by r654 with profit 1000
   Insn 71: point = 990, n_alt = 2
   Insn 818: point = 990, n_alt = -2
   Insn 70: point = 991, n_alt = 5
   Insn 69: point = 992, n_alt = 0
   Insn 68: point = 994, n_alt = 0
   Insn 67: point = 996, n_alt = 3
   Insn 817: point = 997, n_alt = -2
	Hard reg 42 is preferable by r653 with profit 1000
   Insn 66: point = 999, n_alt = 0
   Insn 816: point = 1000, n_alt = -2
	Hard reg 42 is preferable by r653 with profit 1000
	Hard reg 1 is preferable by r653 with profit 1000
   Insn 64: point = 1002, n_alt = 0
   Insn 65: point = 1002, n_alt = 2
   Insn 63: point = 1003, n_alt = 3
   Insn 62: point = 1004, n_alt = 5
   Insn 61: point = 1005, n_alt = 0
   Insn 60: point = 1007, n_alt = 0
   Insn 59: point = 1009, n_alt = 3
   Insn 815: point = 1010, n_alt = 5
   Insn 58: point = 1012, n_alt = 0
   Insn 814: point = 1012, n_alt = -2
   Insn 54: point = 1013, n_alt = 2
   Insn 53: point = 1014, n_alt = 3
   Insn 52: point = 1015, n_alt = -2
   Insn 50: point = 1017, n_alt = 1
   Insn 48: point = 1019, n_alt = 0
   Insn 49: point = 1019, n_alt = 2
   Insn 813: point = 1020, n_alt = -2
	Hard reg 0 is preferable by r651 with profit 1000
   Insn 47: point = 1022, n_alt = 2
   Insn 812: point = 1022, n_alt = -2
   Insn 46: point = 1023, n_alt = 5
   Insn 45: point = 1024, n_alt = 0
   Insn 44: point = 1026, n_alt = 0
   Insn 43: point = 1028, n_alt = 3
   Insn 811: point = 1029, n_alt = -2
	Hard reg 40 is preferable by r650 with profit 1000
   Insn 42: point = 1031, n_alt = 0
   Insn 810: point = 1032, n_alt = -2
	Hard reg 40 is preferable by r650 with profit 1000
	Hard reg 1 is preferable by r650 with profit 1000
   Insn 40: point = 1034, n_alt = 0
   Insn 41: point = 1034, n_alt = 2
   Insn 39: point = 1035, n_alt = 3
   Insn 38: point = 1036, n_alt = 5
   Insn 37: point = 1037, n_alt = 0
   Insn 36: point = 1039, n_alt = 0
   Insn 35: point = 1041, n_alt = 3
   Insn 809: point = 1042, n_alt = 5
   Insn 34: point = 1044, n_alt = 0
   Insn 808: point = 1044, n_alt = -2
   Insn 30: point = 1045, n_alt = 2
   Insn 29: point = 1046, n_alt = 3
   Insn 28: point = 1047, n_alt = -2
   Insn 26: point = 1049, n_alt = 1
   Insn 24: point = 1051, n_alt = 0
   Insn 25: point = 1051, n_alt = 2
   Insn 807: point = 1052, n_alt = -2
	Hard reg 0 is preferable by r648 with profit 1000
   Insn 23: point = 1054, n_alt = 2
   Insn 806: point = 1054, n_alt = -2
   Insn 22: point = 1055, n_alt = 5
   Insn 21: point = 1056, n_alt = 0
   Insn 20: point = 1058, n_alt = 0
   Insn 19: point = 1060, n_alt = 3
   Insn 805: point = 1061, n_alt = -2
	Hard reg 3 is preferable by r647 with profit 1000
   Insn 18: point = 1063, n_alt = 0
   Insn 804: point = 1064, n_alt = -2
	Hard reg 3 is preferable by r647 with profit 1000
	Hard reg 1 is preferable by r647 with profit 1000
   Insn 16: point = 1066, n_alt = 0
   Insn 17: point = 1066, n_alt = 2
   Insn 15: point = 1067, n_alt = 3
   Insn 14: point = 1068, n_alt = 5
   Insn 13: point = 1069, n_alt = 0
   Insn 12: point = 1071, n_alt = 0
   Insn 11: point = 1073, n_alt = 3
   Insn 7: point = 1074, n_alt = 5
   Insn 6: point = 1074, n_alt = 5
   Insn 5: point = 1074, n_alt = 5
   Insn 4: point = 1074, n_alt = 5
   Insn 3: point = 1074, n_alt = 5
   Insn 2: point = 1074, n_alt = 5
 r87: [1070..1071]
 r88: [1057..1058]
 r89: [1046..1047]
 r90: [1045..1074]
 r92: [1038..1039]
 r93: [1025..1026]
 r94: [1014..1015]
 r95: [1013..1074]
 r97: [1006..1007]
 r98: [993..994]
 r99: [982..983]
 r100: [981..1074]
 r102: [974..975]
 r103: [960..961]
 r104: [943..944]
 r105: [932..933]
 r106: [931..1074]
 r108: [926..927]
 r109: [919..920]
 r110: [906..907]
 r111: [895..896]
 r112: [894..1074]
 r114: [887..888]
 r115: [878..879]
 r116: [877..1074]
 r118: [873..874]
 r119: [859..860]
 r120: [846..847]
 r121: [845..1074]
 r123: [837..838]
 r124: [823..824]
 r125: [805..806]
 r126: [792..793]
 r127: [791..1074]
 r129: [786..787]
 r130: [776..777]
 r131: [763..764]
 r132: [748..749]
 r133: [737..738]
 r134: [736..1074]
 r136: [732..733]
 r137: [725..726]
 r138: [712..713]
 r139: [701..702]
 r140: [700..1074]
 r142: [693..694]
 r143: [680..681]
 r144: [669..670]
 r145: [668..1074]
 r147: [661..662]
 r148: [648..649]
 r149: [637..638]
 r150: [636..1074]
 r152: [621..622]
 r153: [618..620]
 r154: [613..617]
 r155: [613..614]
 r156: [609..612]
 r157: [605..606]
 r158: [602..604]
 r159: [597..601]
 r160: [597..598]
 r161: [593..596]
 r162: [589..590]
 r163: [586..588]
 r164: [581..585]
 r165: [581..582]
 r166: [577..580]
 r167: [543..544]
 r168: [540..542]
 r169: [532..539]
 r170: [534..536]
 r171: [532..533]
 r172: [527..531]
 r173: [527..528]
 r174: [524..526]
 r175: [521..523]
 r176: [474..475]
 r177: [471..473]
 r178: [466..470]
 r179: [466..467]
 r180: [462..465]
 r181: [516..517]
 r182: [513..515]
 r183: [505..512]
 r184: [507..509]
 r185: [505..506]
 r186: [500..504]
 r187: [500..501]
 r188: [497..499]
 r189: [482..496]
 r190: [492..493]
 r191: [489..491]
 r192: [484..488]
 r193: [484..485]
 r194: [479..483]
 r195: [479..481]
 r196: [457..458]
 r197: [454..456]
 r198: [435..453]
 r199: [448..450]
 r200: [445..447]
 r201: [440..444]
 r202: [440..441]
 r203: [437..439]
 r204: [435..436]
 r205: [408..434]
 r206: [429..431]
 r207: [426..428]
 r208: [418..425]
 r209: [420..422]
 r210: [418..419]
 r211: [413..417]
 r212: [413..414]
 r213: [410..412]
 r214: [408..409]
 r215: [402..403]
 r216: [398..401]
 r217: [393..397]
 r218: [393..394]
 r219: [390..392]
 r220: [371..389]
 r221: [385..386]
 r222: [381..384]
 r223: [376..380]
 r224: [376..377]
 r225: [373..375]
 r226: [371..372]
 r227: [369..370]
 r228: [365..366]
 r229: [361..364]
 r230: [354..360]
 r231: [356..357]
 r232: [354..355]
 r233: [349..353]
 r234: [349..350]
 r235: [346..348]
 r236: [318..345]
 r237: [341..342]
 r238: [339..340]
 r239: [335..338]
 r240: [328..334]
 r241: [330..331]
 r242: [328..329]
 r243: [323..327]
 r244: [323..324]
 r245: [320..322]
 r246: [318..319]
 r247: [316..317]
 r248: [313..315]
 r249: [295..312]
 r250: [308..309]
 r251: [305..307]
 r252: [300..304]
 r253: [300..301]
 r254: [297..299]
 r255: [295..296]
 r256: [293..294]
 r257: [291..292]
 r258: [289..290]
 r259: [254..286]
 r260: [282..283]
 r261: [278..281]
 r262: [273..277]
 r263: [273..274]
 r264: [270..272]
 r265: [254..269]
 r266: [265..266]
 r267: [261..264]
 r268: [256..260]
 r269: [256..257]
 r270: [251..255]
 r271: [251..253]
 r272: [214..246]
 r273: [242..243]
 r274: [238..241]
 r275: [233..237]
 r276: [233..234]
 r277: [230..232]
 r278: [214..229]
 r279: [225..226]
 r280: [221..224]
 r281: [216..220]
 r282: [216..217]
 r283: [211..215]
 r284: [211..213]
 r285: [207..208]
 r286: [203..206]
 r287: [198..202]
 r288: [198..199]
 r289: [181..197]
 r290: [193..194]
 r291: [189..192]
 r292: [184..188]
 r293: [184..185]
 r294: [178..183]
 r295: [178..180]
 r296: [141..142]
 r297: [137..140]
 r298: [132..136]
 r299: [132..133]
 r300: [129..131]
 r301: [126..128]
 r302: [99..125]
 r303: [121..122]
 r304: [117..120]
 r305: [112..116]
 r306: [112..113]
 r307: [109..111]
 r308: [106..108]
 r309: [104..105]
 r310: [101..103]
 r311: [99..100]
 r312: [97..98]
 r313: [79..96]
 r314: [92..93]
 r315: [89..91]
 r316: [84..88]
 r317: [84..85]
 r318: [81..83]
 r319: [79..80]
 r320: [56..78]
 r321: [74..75]
 r322: [71..73]
 r323: [66..70]
 r324: [66..67]
 r325: [63..65]
 r326: [60..62]
 r327: [58..59]
 r328: [56..57]
 r329: [54..55]
 r330: [46..50]
 r331: [46..47]
 r332: [44..45]
 r333: [32..36]
 r334: [32..33]
 r335: [30..31]
 r336: [23..24]
 r337: [20..22]
 r338: [15..19]
 r339: [15..16]
 r340: [12..14]
 r341: [44..53] [30..42] [12..28]
 r342: [1063..1067]
 r343: [0..1061]
 r344: [1050..1052]
 r345: [1048..1049]
 r349: [0..1042]
 r350: [1031..1035]
 r351: [0..1029]
 r352: [1018..1020]
 r353: [1016..1017]
 r357: [0..1010]
 r358: [999..1003]
 r359: [155..997]
 r360: [986..988]
 r361: [984..985]
 r365: [155..978]
 r366: [967..971]
 r367: [155..964]
 r368: [949..953]
 r369: [155..947]
 r370: [936..938]
 r371: [934..935]
 r375: [155..923]
 r376: [912..916]
 r377: [155..910]
 r378: [899..901]
 r379: [897..898]
 r383: [155..891]
 r384: [882..884]
 r385: [880..881]
 r389: [866..870]
 r390: [155..863]
 r391: [850..852]
 r392: [848..849]
 r396: [155..841]
 r397: [830..834]
 r398: [155..827]
 r399: [812..816]
 r400: [155..809]
 r401: [796..798]
 r402: [794..795]
 r406: [155..780]
 r407: [769..773]
 r408: [155..767]
 r409: [754..758]
 r410: [155..752]
 r411: [741..743]
 r412: [739..740]
 r416: [155..729]
 r417: [718..722]
 r418: [155..716]
 r419: [705..707]
 r420: [703..704]
 r424: [155..697]
 r425: [686..690]
 r426: [0..684]
 r427: [673..675]
 r428: [671..672]
 r432: [0..665]
 r433: [654..658]
 r434: [0..652]
 r435: [641..643]
 r436: [639..640]
 r440: [0..633]
 r441: [630..632]
 r442: [565..631]
 r443: [565..566]
 r444: [572..626]
 r445: [572..573]
 r446: [155..558]
 r447: [155..156]
 r448: [552..556]
 r449: [164..553]
 r450: [164..165]
 r451: [173..548]
 r452: [173..174]
 r453: [150..152]
 r454: [0..151]
 r455: [0..1]
 r456: [7..146]
 r457: [7..8]
 r458: [1072..1073]
 r459: [1068..1069]
 r460: [1065..1066]
 r461: [1059..1060]
 r462: [1055..1056]
 r463: [1050..1051]
 r464: [1040..1041]
 r465: [1036..1037]
 r466: [1033..1034]
 r467: [1027..1028]
 r468: [1023..1024]
 r469: [1018..1019]
 r470: [1008..1009]
 r471: [1004..1005]
 r472: [1001..1002]
 r473: [995..996]
 r474: [991..992]
 r475: [986..987]
 r476: [976..977]
 r477: [972..973]
 r478: [969..970]
 r479: [962..963]
 r480: [958..959]
 r481: [951..952]
 r482: [945..946]
 r483: [941..942]
 r484: [936..937]
 r485: [921..922]
 r486: [917..918]
 r487: [914..915]
 r488: [908..909]
 r489: [904..905]
 r490: [899..900]
 r491: [889..890]
 r492: [885..886]
 r493: [882..883]
 r494: [875..876]
 r495: [871..872]
 r496: [868..869]
 r497: [861..862]
 r498: [857..858]
 r499: [850..851]
 r500: [839..840]
 r501: [835..836]
 r502: [832..833]
 r503: [825..826]
 r504: [821..822]
 r505: [814..815]
 r506: [807..808]
 r507: [803..804]
 r508: [796..797]
 r509: [778..779]
 r510: [774..775]
 r511: [771..772]
 r512: [765..766]
 r513: [761..762]
 r514: [756..757]
 r515: [750..751]
 r516: [746..747]
 r517: [741..742]
 r518: [727..728]
 r519: [723..724]
 r520: [720..721]
 r521: [714..715]
 r522: [710..711]
 r523: [705..706]
 r524: [695..696]
 r525: [691..692]
 r526: [688..689]
 r527: [682..683]
 r528: [678..679]
 r529: [673..674]
 r530: [663..664]
 r531: [659..660]
 r532: [656..657]
 r533: [650..651]
 r534: [646..647]
 r535: [641..642]
 r536: [567..568]
 r537: [627..628]
 r538: [574..575]
 r539: [623..624]
 r540: [615..616]
 r541: [609..611]
 r542: [609..610]
 r543: [607..608]
 r544: [599..600]
 r545: [593..595]
 r546: [593..594]
 r547: [591..592]
 r548: [583..584]
 r549: [577..579]
 r550: [577..578]
 r551: [561..562]
 r552: [157..158]
 r553: [166..167]
 r554: [549..550]
 r555: [175..176]
 r556: [545..546]
 r557: [537..538]
 r558: [529..530]
 r559: [524..525]
 r560: [521..522]
 r561: [476..477]
 r562: [468..469]
 r563: [462..464]
 r564: [462..463]
 r565: [518..519]
 r566: [510..511]
 r567: [502..503]
 r568: [497..498]
 r569: [494..495]
 r570: [486..487]
 r571: [479..480]
 r572: [459..460]
 r573: [454..455]
 r574: [451..452]
 r575: [442..443]
 r576: [437..438]
 r577: [432..433]
 r578: [423..424]
 r579: [415..416]
 r580: [410..411]
 r581: [406..407]
 r582: [404..405]
 r583: [395..396]
 r584: [390..391]
 r585: [387..388]
 r586: [378..379]
 r587: [373..374]
 r588: [367..368]
 r589: [358..359]
 r590: [351..352]
 r591: [346..347]
 r592: [343..344]
 r593: [332..333]
 r594: [325..326]
 r595: [320..321]
 r596: [313..314]
 r597: [310..311]
 r598: [302..303]
 r599: [297..298]
 r600: [284..285]
 r601: [275..276]
 r602: [270..271]
 r603: [267..268]
 r604: [258..259]
 r605: [251..252]
 r606: [249..250]
 r607: [244..245]
 r608: [235..236]
 r609: [230..231]
 r610: [227..228]
 r611: [218..219]
 r612: [211..212]
 r613: [209..210]
 r614: [200..201]
 r615: [195..196]
 r616: [186..187]
 r617: [181..182]
 r618: [178..179]
 r619: [2..3]
 r620: [147..148]
 r621: [9..10]
 r622: [143..144]
 r623: [134..135]
 r624: [129..130]
 r625: [126..127]
 r626: [123..124]
 r627: [114..115]
 r628: [109..110]
 r629: [106..107]
 r630: [101..102]
 r631: [94..95]
 r632: [86..87]
 r633: [81..82]
 r634: [76..77]
 r635: [68..69]
 r636: [63..64]
 r637: [60..61]
 r638: [51..52]
 r639: [48..49]
 r641: [37..38]
 r642: [39..40]
 r643: [34..35]
 r644: [25..26]
 r645: [17..18]
 r646: [12..13]
 r647: [1062..1064]
 r648: [1053..1054]
 r649: [1043..1044]
 r650: [1030..1032]
 r651: [1021..1022]
 r652: [1011..1012]
 r653: [998..1000]
 r654: [989..990]
 r655: [979..980]
 r656: [966..968]
 r657: [954..955]
 r658: [948..950]
 r659: [939..940]
 r660: [928..929]
 r661: [924..925]
 r662: [911..913]
 r663: [902..903]
 r664: [892..893]
 r665: [865..867]
 r666: [853..854]
 r667: [842..843]
 r668: [829..831]
 r669: [817..818]
 r670: [811..813]
 r671: [799..800]
 r672: [788..789]
 r673: [781..785]
 r674: [782..783]
 r675: [768..770]
 r676: [759..760]
 r677: [753..755]
 r678: [744..745]
 r679: [734..735]
 r680: [730..731]
 r681: [717..719]
 r682: [708..709]
 r683: [698..699]
 r684: [685..687]
 r685: [676..677]
 r686: [666..667]
 r687: [653..655]
 r688: [644..645]
 r689: [634..635]
 r690: [618..619]
 r691: [602..603]
 r692: [586..587]
 r693: [559..560]
 r694: [159..160]
 r695: [554..555]
 r696: [168..169]
 r697: [540..541]
 r699: [471..472]
 r700: [513..514]
 r702: [489..490]
 r704: [445..446]
 r706: [426..427]
 r708: [398..399]
 r709: [381..382]
 r710: [361..362]
 r711: [335..336]
 r712: [305..306]
 r713: [287..288]
 r714: [278..279]
 r715: [261..262]
 r716: [247..248]
 r717: [238..239]
 r718: [221..222]
 r719: [203..204]
 r720: [189..190]
 r721: [137..138]
 r722: [117..118]
 r723: [89..90]
 r724: [71..72]
 r725: [20..21]
 r726: [784..801]
 r727: [802..810]
 r728: [790..819]
 r729: [820..828]
 r730: [844..855]
 r731: [856..864]
 r732: [930..956]
 r733: [957..965]
 r737: [205..383]
 r739: [119..139]
 r740: [420..421]
 r741: [429..430]
 r742: [448..449]
 r743: [507..508]
 r744: [534..535]
 r745: [223..240]
 r746: [263..280]
 r747: [337..363]
 r748: [191..400]
Compressing live ranges: from 1075 to 826 - 76%
Ranges after the compression:
 r87: [822..823]
 r88: [812..813]
 r89: [802..803]
 r90: [802..825]
 r92: [796..797]
 r93: [786..787]
 r94: [776..777]
 r95: [776..825]
 r97: [770..771]
 r98: [760..761]
 r99: [750..751]
 r100: [750..825]
 r102: [744..745]
 r103: [734..735]
 r104: [722..723]
 r105: [712..713]
 r106: [712..825]
 r108: [708..709]
 r109: [702..703]
 r110: [692..693]
 r111: [682..683]
 r112: [682..825]
 r114: [676..677]
 r115: [668..669]
 r116: [668..825]
 r118: [664..665]
 r119: [654..655]
 r120: [644..645]
 r121: [644..825]
 r123: [638..639]
 r124: [628..629]
 r125: [616..617]
 r126: [606..607]
 r127: [606..825]
 r129: [602..603]
 r130: [594..595]
 r131: [584..585]
 r132: [572..573]
 r133: [562..563]
 r134: [562..825]
 r136: [558..559]
 r137: [552..553]
 r138: [542..543]
 r139: [532..533]
 r140: [532..825]
 r142: [526..527]
 r143: [516..517]
 r144: [506..507]
 r145: [506..825]
 r147: [500..501]
 r148: [490..491]
 r149: [480..481]
 r150: [480..825]
 r152: [470..471]
 r153: [468..469]
 r154: [464..467]
 r155: [464..465]
 r156: [462..463]
 r157: [458..459]
 r158: [456..457]
 r159: [452..455]
 r160: [452..453]
 r161: [450..451]
 r162: [446..447]
 r163: [444..445]
 r164: [440..443]
 r165: [440..441]
 r166: [438..439]
 r167: [416..417]
 r168: [414..415]
 r169: [408..413]
 r170: [410..411]
 r171: [408..409]
 r172: [404..407]
 r173: [404..405]
 r174: [402..403]
 r175: [400..401]
 r176: [364..365]
 r177: [362..363]
 r178: [358..361]
 r179: [358..359]
 r180: [356..357]
 r181: [396..397]
 r182: [394..395]
 r183: [388..393]
 r184: [390..391]
 r185: [388..389]
 r186: [384..387]
 r187: [384..385]
 r188: [382..383]
 r189: [370..381]
 r190: [378..379]
 r191: [376..377]
 r192: [372..375]
 r193: [372..373]
 r194: [368..371]
 r195: [368..369]
 r196: [352..353]
 r197: [350..351]
 r198: [336..349]
 r199: [346..347]
 r200: [344..345]
 r201: [340..343]
 r202: [340..341]
 r203: [338..339]
 r204: [336..337]
 r205: [316..335]
 r206: [332..333]
 r207: [330..331]
 r208: [324..329]
 r209: [326..327]
 r210: [324..325]
 r211: [320..323]
 r212: [320..321]
 r213: [318..319]
 r214: [316..317]
 r215: [310..311]
 r216: [308..309]
 r217: [304..307]
 r218: [304..305]
 r219: [302..303]
 r220: [288..301]
 r221: [298..299]
 r222: [296..297]
 r223: [292..295]
 r224: [292..293]
 r225: [290..291]
 r226: [288..289]
 r227: [286..287]
 r228: [282..283]
 r229: [280..281]
 r230: [274..279]
 r231: [276..277]
 r232: [274..275]
 r233: [270..273]
 r234: [270..271]
 r235: [268..269]
 r236: [244..267]
 r237: [264..265]
 r238: [262..263]
 r239: [258..261]
 r240: [252..257]
 r241: [254..255]
 r242: [252..253]
 r243: [248..251]
 r244: [248..249]
 r245: [246..247]
 r246: [244..245]
 r247: [242..243]
 r248: [240..241]
 r249: [226..239]
 r250: [236..237]
 r251: [234..235]
 r252: [230..233]
 r253: [230..231]
 r254: [228..229]
 r255: [226..227]
 r256: [224..225]
 r257: [222..223]
 r258: [220..221]
 r259: [192..217]
 r260: [214..215]
 r261: [212..213]
 r262: [208..211]
 r263: [208..209]
 r264: [206..207]
 r265: [192..205]
 r266: [202..203]
 r267: [198..201]
 r268: [194..197]
 r269: [194..195]
 r270: [190..193]
 r271: [190..191]
 r272: [160..185]
 r273: [182..183]
 r274: [180..181]
 r275: [176..179]
 r276: [176..177]
 r277: [174..175]
 r278: [160..173]
 r279: [170..171]
 r280: [166..169]
 r281: [162..165]
 r282: [162..163]
 r283: [158..161]
 r284: [158..159]
 r285: [154..155]
 r286: [150..153]
 r287: [146..149]
 r288: [146..147]
 r289: [132..145]
 r290: [142..143]
 r291: [138..141]
 r292: [134..137]
 r293: [134..135]
 r294: [130..133]
 r295: [130..131]
 r296: [106..107]
 r297: [104..105]
 r298: [100..103]
 r299: [100..101]
 r300: [98..99]
 r301: [96..97]
 r302: [74..95]
 r303: [92..93]
 r304: [88..91]
 r305: [84..87]
 r306: [84..85]
 r307: [82..83]
 r308: [80..81]
 r309: [78..79]
 r310: [76..77]
 r311: [74..75]
 r312: [72..73]
 r313: [58..71]
 r314: [68..69]
 r315: [66..67]
 r316: [62..65]
 r317: [62..63]
 r318: [60..61]
 r319: [58..59]
 r320: [40..57]
 r321: [54..55]
 r322: [52..53]
 r323: [48..51]
 r324: [48..49]
 r325: [46..47]
 r326: [44..45]
 r327: [42..43]
 r328: [40..41]
 r329: [38..39]
 r330: [32..35]
 r331: [32..33]
 r332: [30..31]
 r333: [22..25]
 r334: [22..23]
 r335: [20..21]
 r336: [16..17]
 r337: [14..15]
 r338: [10..13]
 r339: [10..11]
 r340: [8..9]
 r341: [8..37]
 r342: [816..819]
 r343: [0..815]
 r344: [806..807]
 r345: [804..805]
 r349: [0..799]
 r350: [790..793]
 r351: [0..789]
 r352: [780..781]
 r353: [778..779]
 r357: [0..773]
 r358: [764..767]
 r359: [114..763]
 r360: [754..755]
 r361: [752..753]
 r365: [114..747]
 r366: [738..741]
 r367: [114..737]
 r368: [726..729]
 r369: [114..725]
 r370: [716..717]
 r371: [714..715]
 r375: [114..705]
 r376: [696..699]
 r377: [114..695]
 r378: [686..687]
 r379: [684..685]
 r383: [114..679]
 r384: [672..673]
 r385: [670..671]
 r389: [658..661]
 r390: [114..657]
 r391: [648..649]
 r392: [646..647]
 r396: [114..641]
 r397: [632..635]
 r398: [114..631]
 r399: [620..623]
 r400: [114..619]
 r401: [610..611]
 r402: [608..609]
 r406: [114..597]
 r407: [588..591]
 r408: [114..587]
 r409: [576..579]
 r410: [114..575]
 r411: [566..567]
 r412: [564..565]
 r416: [114..555]
 r417: [546..549]
 r418: [114..545]
 r419: [536..537]
 r420: [534..535]
 r424: [114..529]
 r425: [520..523]
 r426: [0..519]
 r427: [510..511]
 r428: [508..509]
 r432: [0..503]
 r433: [494..497]
 r434: [0..493]
 r435: [484..485]
 r436: [482..483]
 r440: [0..477]
 r441: [476..477]
 r442: [430..477]
 r443: [430..431]
 r444: [434..473]
 r445: [434..435]
 r446: [114..425]
 r447: [114..115]
 r448: [422..425]
 r449: [120..423]
 r450: [120..121]
 r451: [126..419]
 r452: [126..127]
 r453: [112..113]
 r454: [0..113]
 r455: [0..1]
 r456: [4..109]
 r457: [4..5]
 r458: [824..825]
 r459: [820..821]
 r460: [818..819]
 r461: [814..815]
 r462: [810..811]
 r463: [806..807]
 r464: [798..799]
 r465: [794..795]
 r466: [792..793]
 r467: [788..789]
 r468: [784..785]
 r469: [780..781]
 r470: [772..773]
 r471: [768..769]
 r472: [766..767]
 r473: [762..763]
 r474: [758..759]
 r475: [754..755]
 r476: [746..747]
 r477: [742..743]
 r478: [740..741]
 r479: [736..737]
 r480: [732..733]
 r481: [728..729]
 r482: [724..725]
 r483: [720..721]
 r484: [716..717]
 r485: [704..705]
 r486: [700..701]
 r487: [698..699]
 r488: [694..695]
 r489: [690..691]
 r490: [686..687]
 r491: [678..679]
 r492: [674..675]
 r493: [672..673]
 r494: [666..667]
 r495: [662..663]
 r496: [660..661]
 r497: [656..657]
 r498: [652..653]
 r499: [648..649]
 r500: [640..641]
 r501: [636..637]
 r502: [634..635]
 r503: [630..631]
 r504: [626..627]
 r505: [622..623]
 r506: [618..619]
 r507: [614..615]
 r508: [610..611]
 r509: [596..597]
 r510: [592..593]
 r511: [590..591]
 r512: [586..587]
 r513: [582..583]
 r514: [578..579]
 r515: [574..575]
 r516: [570..571]
 r517: [566..567]
 r518: [554..555]
 r519: [550..551]
 r520: [548..549]
 r521: [544..545]
 r522: [540..541]
 r523: [536..537]
 r524: [528..529]
 r525: [524..525]
 r526: [522..523]
 r527: [518..519]
 r528: [514..515]
 r529: [510..511]
 r530: [502..503]
 r531: [498..499]
 r532: [496..497]
 r533: [492..493]
 r534: [488..489]
 r535: [484..485]
 r536: [432..433]
 r537: [474..475]
 r538: [436..437]
 r539: [472..473]
 r540: [466..467]
 r541: [462..463]
 r542: [462..463]
 r543: [460..461]
 r544: [454..455]
 r545: [450..451]
 r546: [450..451]
 r547: [448..449]
 r548: [442..443]
 r549: [438..439]
 r550: [438..439]
 r551: [428..429]
 r552: [116..117]
 r553: [122..123]
 r554: [420..421]
 r555: [128..129]
 r556: [418..419]
 r557: [412..413]
 r558: [406..407]
 r559: [402..403]
 r560: [400..401]
 r561: [366..367]
 r562: [360..361]
 r563: [356..357]
 r564: [356..357]
 r565: [398..399]
 r566: [392..393]
 r567: [386..387]
 r568: [382..383]
 r569: [380..381]
 r570: [374..375]
 r571: [368..369]
 r572: [354..355]
 r573: [350..351]
 r574: [348..349]
 r575: [342..343]
 r576: [338..339]
 r577: [334..335]
 r578: [328..329]
 r579: [322..323]
 r580: [318..319]
 r581: [314..315]
 r582: [312..313]
 r583: [306..307]
 r584: [302..303]
 r585: [300..301]
 r586: [294..295]
 r587: [290..291]
 r588: [284..285]
 r589: [278..279]
 r590: [272..273]
 r591: [268..269]
 r592: [266..267]
 r593: [256..257]
 r594: [250..251]
 r595: [246..247]
 r596: [240..241]
 r597: [238..239]
 r598: [232..233]
 r599: [228..229]
 r600: [216..217]
 r601: [210..211]
 r602: [206..207]
 r603: [204..205]
 r604: [196..197]
 r605: [190..191]
 r606: [188..189]
 r607: [184..185]
 r608: [178..179]
 r609: [174..175]
 r610: [172..173]
 r611: [164..165]
 r612: [158..159]
 r613: [156..157]
 r614: [148..149]
 r615: [144..145]
 r616: [136..137]
 r617: [132..133]
 r618: [130..131]
 r619: [2..3]
 r620: [110..111]
 r621: [6..7]
 r622: [108..109]
 r623: [102..103]
 r624: [98..99]
 r625: [96..97]
 r626: [94..95]
 r627: [86..87]
 r628: [82..83]
 r629: [80..81]
 r630: [76..77]
 r631: [70..71]
 r632: [64..65]
 r633: [60..61]
 r634: [56..57]
 r635: [50..51]
 r636: [46..47]
 r637: [44..45]
 r638: [36..37]
 r639: [34..35]
 r641: [26..27]
 r642: [28..29]
 r643: [24..25]
 r644: [18..19]
 r645: [12..13]
 r646: [8..9]
 r647: [816..817]
 r648: [808..809]
 r649: [800..801]
 r650: [790..791]
 r651: [782..783]
 r652: [774..775]
 r653: [764..765]
 r654: [756..757]
 r655: [748..749]
 r656: [738..739]
 r657: [730..731]
 r658: [726..727]
 r659: [718..719]
 r660: [710..711]
 r661: [706..707]
 r662: [696..697]
 r663: [688..689]
 r664: [680..681]
 r665: [658..659]
 r666: [650..651]
 r667: [642..643]
 r668: [632..633]
 r669: [624..625]
 r670: [620..621]
 r671: [612..613]
 r672: [604..605]
 r673: [598..601]
 r674: [598..599]
 r675: [588..589]
 r676: [580..581]
 r677: [576..577]
 r678: [568..569]
 r679: [560..561]
 r680: [556..557]
 r681: [546..547]
 r682: [538..539]
 r683: [530..531]
 r684: [520..521]
 r685: [512..513]
 r686: [504..505]
 r687: [494..495]
 r688: [486..487]
 r689: [478..479]
 r690: [468..469]
 r691: [456..457]
 r692: [444..445]
 r693: [426..427]
 r694: [118..119]
 r695: [424..425]
 r696: [124..125]
 r697: [414..415]
 r699: [362..363]
 r700: [394..395]
 r702: [376..377]
 r704: [344..345]
 r706: [330..331]
 r708: [308..309]
 r709: [296..297]
 r710: [280..281]
 r711: [258..259]
 r712: [234..235]
 r713: [218..219]
 r714: [212..213]
 r715: [198..199]
 r716: [186..187]
 r717: [180..181]
 r718: [166..167]
 r719: [150..151]
 r720: [138..139]
 r721: [104..105]
 r722: [88..89]
 r723: [66..67]
 r724: [52..53]
 r725: [14..15]
 r726: [600..613]
 r727: [614..619]
 r728: [606..625]
 r729: [626..631]
 r730: [644..651]
 r731: [652..657]
 r732: [712..731]
 r733: [732..737]
 r737: [152..297]
 r739: [90..105]
 r740: [326..327]
 r741: [332..333]
 r742: [346..347]
 r743: [390..391]
 r744: [410..411]
 r745: [168..181]
 r746: [200..213]
 r747: [260..281]
 r748: [140..309]

********** Assignment #2: **********

	 Assigning to 745 (cl=GENERAL_REGS, orig=357, freq=3000, tfirst=745, tfreq=3000)...
	 Assigning to 746 (cl=GENERAL_REGS, orig=349, freq=3000, tfirst=746, tfreq=3000)...
	 Assigning to 747 (cl=GENERAL_REGS, orig=416, freq=3000, tfirst=747, tfreq=3000)...
	 Assigning to 748 (cl=GENERAL_REGS, orig=365, freq=3000, tfirst=748, tfreq=3000)...
	 Assigning to 740 (cl=GENERAL_REGS, orig=398, freq=2000, tfirst=740, tfreq=2000)...
	   Assign 2 to optional reload r740 (freq=2000)
	 Assigning to 741 (cl=GENERAL_REGS, orig=400, freq=2000, tfirst=741, tfreq=2000)...
	   Assign 2 to optional reload r741 (freq=2000)
	 Assigning to 742 (cl=GENERAL_REGS, orig=390, freq=2000, tfirst=742, tfreq=2000)...
	   Assign 2 to optional reload r742 (freq=2000)
	 Assigning to 743 (cl=GENERAL_REGS, orig=367, freq=2000, tfirst=743, tfreq=2000)...
	   Assign 2 to optional reload r743 (freq=2000)
	 Assigning to 744 (cl=GENERAL_REGS, orig=367, freq=2000, tfirst=744, tfreq=2000)...
	   Assign 2 to optional reload r744 (freq=2000)
  Reassigning non-reload pseudos

********** Undoing inheritance #2: **********

Inherit 0 out of 4 (0.00%)
   Insn after restoring regs:
  921: r720:DI=r365:DI
      REG_DEAD r365:DI
   Insn after restoring regs:
  919: r718:DI=r357:DI
      REG_DEAD r357:DI
    Change reload insn:
  918: r717:DI=r357:DI
	   Removing inheritance:
  946: r745:DI=r357:DI
deleting insn with uid = 946.
   Insn after restoring regs:
  915: r715:DI=r349:DI
      REG_DEAD r349:DI
    Change reload insn:
  914: r714:DI=r349:DI
	   Removing inheritance:
  947: r746:DI=r349:DI
deleting insn with uid = 947.
   Insn after restoring regs:
  910: r711:DI=r416:DI
      REG_DEAD r416:DI
    Change reload insn:
  909: r710:DI=r416:DI
	   Removing inheritance:
  948: r747:DI=r416:DI
deleting insn with uid = 948.
    Change reload insn:
  907: r708:DI=r365:DI
	   Removing inheritance:
  949: r748:DI=r365:DI
deleting insn with uid = 949.
Keep optional reload reg 674
Keep optional reload reg 698
Keep optional reload reg 701
Keep optional reload reg 703
Keep optional reload reg 705
Keep optional reload reg 707
Remove optional reload reg 740
  Restoring original insn:
  489: {r210:DI=r209:DI*r398:DI;clobber flags:CC;}
      REG_DEAD r398:DI
      REG_DEAD r209:DI
      REG_UNUSED flags:CC
  Deleting move 941
  941: r740:DI=r398:DI
deleting insn with uid = 941.
Remove optional reload reg 741
  Restoring original insn:
  485: {r207:DI=r206:DI*r400:DI;clobber flags:CC;}
      REG_DEAD r400:DI
      REG_DEAD r206:DI
      REG_UNUSED flags:CC
  Deleting move 942
  942: r741:DI=r400:DI
deleting insn with uid = 942.
Remove optional reload reg 742
  Restoring original insn:
  475: {r200:DI=r199:DI*r390:DI;clobber flags:CC;}
      REG_DEAD r390:DI
      REG_DEAD r199:DI
      REG_UNUSED flags:CC
  Deleting move 943
  943: r742:DI=r390:DI
deleting insn with uid = 943.
Remove optional reload reg 743
  Restoring original insn:
  449: {r185:DI=r184:DI*r367:DI;clobber flags:CC;}
      REG_DEAD r367:DI
      REG_DEAD r184:DI
      REG_UNUSED flags:CC
  Deleting move 944
  944: r743:DI=r367:DI
deleting insn with uid = 944.
Remove optional reload reg 744
  Restoring original insn:
  415: {r171:DI=r170:DI*r367:DI;clobber flags:CC;}
      REG_DEAD r367:DI
      REG_DEAD r170:DI
      REG_UNUSED flags:CC
  Deleting move 945
  945: r744:DI=r367:DI
deleting insn with uid = 945.

********** Local #3: **********

	   Spilling non-eliminable hard regs: 6
            alt=2: Bad operand -- refuse
            1 Non pseudo reload: reject++
          alt=3,overall=1,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 907:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non pseudo reload: reject++
          alt=3,overall=1,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 909:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non pseudo reload: reject++
          alt=3,overall=1,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 914:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non pseudo reload: reject++
          alt=3,overall=1,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 918:  (0) r  (1) rem {*movdi_internal}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            2 Non pseudo reload: reject++
          alt=2,overall=1,losers=0,rld_nregs=0
            1 Non pseudo reload: reject++
            alt=0: Bad operand -- refuse
            1 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            alt=2,overall=6,losers=1 -- refuse
	 Choosing alt 2 in insn 489:  (0) r  (1) 0  (2) mr {*muldi3_1}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            2 Non pseudo reload: reject++
          alt=2,overall=1,losers=0,rld_nregs=0
            1 Non pseudo reload: reject++
            alt=0: Bad operand -- refuse
            1 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            alt=2,overall=6,losers=1 -- refuse
	 Choosing alt 2 in insn 485:  (0) r  (1) 0  (2) mr {*muldi3_1}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            2 Non pseudo reload: reject++
          alt=2,overall=1,losers=0,rld_nregs=0
            1 Non pseudo reload: reject++
            alt=0: Bad operand -- refuse
            1 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            alt=2,overall=6,losers=1 -- refuse
	 Choosing alt 2 in insn 475:  (0) r  (1) 0  (2) mr {*muldi3_1}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            2 Non pseudo reload: reject++
          alt=2,overall=1,losers=0,rld_nregs=0
            1 Non pseudo reload: reject++
            alt=0: Bad operand -- refuse
            1 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            alt=2,overall=6,losers=1 -- refuse
	 Choosing alt 2 in insn 449:  (0) r  (1) 0  (2) mr {*muldi3_1}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            2 Non pseudo reload: reject++
          alt=2,overall=1,losers=0,rld_nregs=0
            1 Non pseudo reload: reject++
            alt=0: Bad operand -- refuse
            1 Non pseudo reload: reject++
            alt=1: Bad operand -- refuse
            alt=2,overall=6,losers=1 -- refuse
	 Choosing alt 2 in insn 415:  (0) r  (1) 0  (2) mr {*muldi3_1}
	   Spilling non-eliminable hard regs: 6

********** Pseudo live ranges #3: **********

  BB 30
   Insn 764: point = 0, n_alt = -1
  BB 36
   Insn 799: point = 0, n_alt = -1
  BB 21
   Insn 646: point = 0, n_alt = -1
   Insn 645: point = 0, n_alt = 0
   Insn 644: point = 1, n_alt = 0
   Insn 643: point = 3, n_alt = 0
   Insn 642: point = 4, n_alt = 0
  BB 29
   Insn 780: point = 5, n_alt = -1
   Insn 751: point = 5, n_alt = 1
  BB 37
   Insn 802: point = 6, n_alt = -1
  BB 23
   Insn 656: point = 7, n_alt = -1
   Insn 655: point = 7, n_alt = 0
   Insn 654: point = 8, n_alt = 0
   Insn 653: point = 10, n_alt = 0
   Insn 652: point = 11, n_alt = 0
  BB 28
   Insn 778: point = 12, n_alt = -1
   Insn 745: point = 12, n_alt = 1
   Insn 744: point = 12, n_alt = 8
   Insn 743: point = 13, n_alt = 3
   Insn 742: point = 14, n_alt = 0
   Insn 741: point = 16, n_alt = 1
   Insn 740: point = 18, n_alt = 0
   Insn 739: point = 19, n_alt = 3
   Insn 926: point = 21, n_alt = 3
   Insn 738: point = 22, n_alt = 2
   Insn 737: point = 24, n_alt = 1
   Insn 736: point = 26, n_alt = 0
  BB 27
   Insn 733: point = 28, n_alt = 7
  BB 26
   Insn 731: point = 30, n_alt = -1
   Insn 730: point = 30, n_alt = 0
   Insn 729: point = 31, n_alt = 0
   Insn 728: point = 33, n_alt = 0
   Insn 727: point = 35, n_alt = 0
   Insn 726: point = 36, n_alt = 1
   Insn 725: point = 36, n_alt = 0
   Insn 724: point = 38, n_alt = 0
   Insn 723: point = 39, n_alt = 1
   Insn 722: point = 40, n_alt = 7
  BB 25
   Insn 719: point = 42, n_alt = 7
  BB 24
   Insn 717: point = 44, n_alt = -1
   Insn 716: point = 44, n_alt = 0
   Insn 715: point = 45, n_alt = 0
   Insn 714: point = 47, n_alt = 0
   Insn 713: point = 49, n_alt = 0
   Insn 712: point = 50, n_alt = 1
   Insn 711: point = 50, n_alt = 0
   Insn 710: point = 52, n_alt = 0
   Insn 709: point = 53, n_alt = 1
   Insn 708: point = 53, n_alt = -2
   Insn 707: point = 55, n_alt = 2
   Insn 706: point = 57, n_alt = -2
   Insn 705: point = 59, n_alt = 1
   Insn 704: point = 61, n_alt = 7
   Insn 703: point = 62, n_alt = 7
   Insn 702: point = 64, n_alt = 3
   Insn 701: point = 65, n_alt = 0
   Insn 700: point = 67, n_alt = 1
   Insn 699: point = 69, n_alt = 0
   Insn 698: point = 70, n_alt = 3
   Insn 925: point = 72, n_alt = 3
   Insn 697: point = 73, n_alt = 2
   Insn 696: point = 75, n_alt = 1
   Insn 695: point = 77, n_alt = 0
   Insn 694: point = 78, n_alt = 1
   Insn 693: point = 80, n_alt = 7
   Insn 692: point = 82, n_alt = 3
   Insn 691: point = 83, n_alt = 0
   Insn 690: point = 85, n_alt = 1
   Insn 689: point = 87, n_alt = 0
   Insn 688: point = 88, n_alt = 3
   Insn 924: point = 90, n_alt = 3
   Insn 687: point = 91, n_alt = 2
   Insn 686: point = 93, n_alt = 1
   Insn 685: point = 95, n_alt = 0
   Insn 684: point = 96, n_alt = -2
   Insn 683: point = 98, n_alt = 1
   Insn 682: point = 100, n_alt = 1
   Insn 681: point = 102, n_alt = 7
   Insn 680: point = 103, n_alt = -2
   Insn 679: point = 105, n_alt = 2
   Insn 678: point = 107, n_alt = 7
   Insn 677: point = 108, n_alt = 7
   Insn 676: point = 110, n_alt = 3
   Insn 675: point = 111, n_alt = 0
   Insn 674: point = 113, n_alt = 1
   Insn 673: point = 115, n_alt = 0
   Insn 672: point = 116, n_alt = 3
   Insn 923: point = 118, n_alt = -2
   Insn 671: point = 120, n_alt = 2
   Insn 670: point = 122, n_alt = 1
   Insn 669: point = 124, n_alt = 0
   Insn 668: point = 125, n_alt = 1
   Insn 667: point = 127, n_alt = 7
   Insn 666: point = 128, n_alt = 7
   Insn 665: point = 130, n_alt = 3
   Insn 664: point = 131, n_alt = 0
   Insn 663: point = 133, n_alt = 1
   Insn 662: point = 135, n_alt = 0
   Insn 661: point = 136, n_alt = 3
   Insn 922: point = 138, n_alt = -2
   Insn 940: point = 139, n_alt = 3
   Insn 660: point = 140, n_alt = 2
   Insn 659: point = 142, n_alt = 1
   Insn 658: point = 144, n_alt = 0
  BB 22
   Insn 650: point = 146, n_alt = 1
   Insn 649: point = 146, n_alt = 0
   Insn 648: point = 148, n_alt = 3
  BB 20
   Insn 640: point = 150, n_alt = 1
   Insn 639: point = 151, n_alt = 0
   Insn 638: point = 152, n_alt = 0
  BB 33
   Insn 790: point = 154, n_alt = -1
  BB 9
   Insn 387: point = 155, n_alt = -1
   Insn 386: point = 155, n_alt = 0
   Insn 385: point = 156, n_alt = 0
   Insn 384: point = 158, n_alt = 0
   Insn 383: point = 159, n_alt = 0
   Insn 893: point = 160, n_alt = 0
  BB 19
   Insn 776: point = 162, n_alt = -1
   Insn 632: point = 162, n_alt = 1
  BB 34
   Insn 793: point = 163, n_alt = -1
  BB 11
   Insn 397: point = 164, n_alt = -1
   Insn 396: point = 164, n_alt = 0
   Insn 395: point = 165, n_alt = 0
   Insn 394: point = 167, n_alt = 0
   Insn 393: point = 168, n_alt = 0
   Insn 895: point = 169, n_alt = 0
  BB 18
   Insn 774: point = 171, n_alt = -1
   Insn 626: point = 171, n_alt = 1
  BB 35
   Insn 796: point = 172, n_alt = -1
  BB 13
   Insn 407: point = 173, n_alt = -1
   Insn 406: point = 173, n_alt = 0
   Insn 405: point = 174, n_alt = 0
   Insn 404: point = 176, n_alt = 0
   Insn 403: point = 177, n_alt = 0
  BB 17
   Insn 772: point = 178, n_alt = -1
   Insn 620: point = 178, n_alt = 1
   Insn 619: point = 178, n_alt = 8
   Insn 618: point = 179, n_alt = 3
   Insn 617: point = 180, n_alt = 7
   Insn 616: point = 182, n_alt = 3
   Insn 615: point = 183, n_alt = 0
   Insn 614: point = 185, n_alt = 0
   Insn 613: point = 187, n_alt = 0
   Insn 612: point = 188, n_alt = 3
   Insn 921: point = 190, n_alt = 3
   Insn 611: point = 191, n_alt = 2
   Insn 610: point = 193, n_alt = 0
   Insn 609: point = 195, n_alt = 0
   Insn 608: point = 196, n_alt = 3
   Insn 607: point = 198, n_alt = 0
   Insn 606: point = 200, n_alt = 0
   Insn 605: point = 201, n_alt = 3
   Insn 920: point = 203, n_alt = -2
   Insn 604: point = 205, n_alt = 2
   Insn 603: point = 207, n_alt = 0
   Insn 602: point = 209, n_alt = 0
   Insn 601: point = 210, n_alt = 8
   Insn 600: point = 211, n_alt = 3
   Insn 599: point = 212, n_alt = 1
   Insn 598: point = 214, n_alt = 0
   Insn 597: point = 216, n_alt = 0
   Insn 596: point = 218, n_alt = 0
   Insn 595: point = 219, n_alt = 3
   Insn 919: point = 221, n_alt = 3
   Insn 594: point = 222, n_alt = 2
   Insn 593: point = 224, n_alt = 0
   Insn 592: point = 226, n_alt = 0
   Insn 591: point = 227, n_alt = 7
   Insn 590: point = 229, n_alt = 3
   Insn 589: point = 230, n_alt = 0
   Insn 588: point = 232, n_alt = 0
   Insn 587: point = 234, n_alt = 0
   Insn 586: point = 235, n_alt = 3
   Insn 918: point = 237, n_alt = 3
   Insn 585: point = 238, n_alt = 2
   Insn 584: point = 240, n_alt = 0
   Insn 583: point = 242, n_alt = 0
   Insn 917: point = 243, n_alt = -2
   Insn 582: point = 245, n_alt = 1
   Insn 916: point = 245, n_alt = -2
   Insn 581: point = 247, n_alt = 7
   Insn 580: point = 248, n_alt = 8
   Insn 579: point = 249, n_alt = 3
   Insn 578: point = 250, n_alt = 1
   Insn 577: point = 252, n_alt = 0
   Insn 576: point = 254, n_alt = 0
   Insn 575: point = 256, n_alt = 0
   Insn 574: point = 257, n_alt = 3
   Insn 915: point = 259, n_alt = 3
   Insn 573: point = 260, n_alt = 2
   Insn 572: point = 262, n_alt = 0
   Insn 571: point = 264, n_alt = 0
   Insn 570: point = 265, n_alt = 7
   Insn 569: point = 267, n_alt = 3
   Insn 568: point = 268, n_alt = 0
   Insn 567: point = 270, n_alt = 0
   Insn 566: point = 272, n_alt = 0
   Insn 565: point = 273, n_alt = 3
   Insn 914: point = 275, n_alt = 3
   Insn 564: point = 276, n_alt = 2
   Insn 563: point = 278, n_alt = 0
   Insn 562: point = 280, n_alt = 0
   Insn 913: point = 281, n_alt = -2
   Insn 561: point = 283, n_alt = 1
   Insn 912: point = 283, n_alt = -2
   Insn 560: point = 285, n_alt = 1
   Insn 559: point = 287, n_alt = -2
   Insn 558: point = 289, n_alt = 2
   Insn 557: point = 291, n_alt = 7
   Insn 556: point = 293, n_alt = 3
   Insn 555: point = 294, n_alt = 0
   Insn 554: point = 296, n_alt = 0
   Insn 553: point = 298, n_alt = 0
   Insn 552: point = 299, n_alt = 3
   Insn 911: point = 301, n_alt = 3
   Insn 551: point = 302, n_alt = 2
   Insn 550: point = 304, n_alt = 0
   Insn 549: point = 306, n_alt = 0
   Insn 548: point = 307, n_alt = 1
   Insn 547: point = 309, n_alt = 7
   Insn 546: point = 310, n_alt = -2
   Insn 545: point = 312, n_alt = 1
   Insn 544: point = 314, n_alt = 7
   Insn 543: point = 316, n_alt = 3
   Insn 542: point = 317, n_alt = 0
   Insn 541: point = 319, n_alt = 0
   Insn 540: point = 321, n_alt = 0
   Insn 539: point = 322, n_alt = 0
   Insn 538: point = 324, n_alt = 2
   Insn 537: point = 326, n_alt = 0
   Insn 536: point = 328, n_alt = 0
   Insn 535: point = 329, n_alt = 3
   Insn 910: point = 331, n_alt = 3
   Insn 534: point = 332, n_alt = 2
   Insn 533: point = 334, n_alt = 0
   Insn 532: point = 336, n_alt = 0
   Insn 531: point = 338, n_alt = 0
   Insn 530: point = 339, n_alt = 7
   Insn 529: point = 341, n_alt = 3
   Insn 528: point = 342, n_alt = 0
   Insn 527: point = 344, n_alt = 0
   Insn 526: point = 346, n_alt = 0
   Insn 525: point = 347, n_alt = 0
   Insn 524: point = 349, n_alt = 2
   Insn 523: point = 351, n_alt = 0
   Insn 522: point = 353, n_alt = 0
   Insn 521: point = 354, n_alt = 3
   Insn 909: point = 356, n_alt = 3
   Insn 520: point = 357, n_alt = 2
   Insn 519: point = 359, n_alt = 0
   Insn 518: point = 361, n_alt = 0
   Insn 517: point = 362, n_alt = 8
   Insn 516: point = 363, n_alt = 1
   Insn 515: point = 365, n_alt = 7
   Insn 514: point = 367, n_alt = 3
   Insn 513: point = 368, n_alt = 0
   Insn 512: point = 370, n_alt = 0
   Insn 511: point = 372, n_alt = 0
   Insn 510: point = 373, n_alt = 3
   Insn 908: point = 375, n_alt = -2
   Insn 938: point = 376, n_alt = 3
   Insn 509: point = 377, n_alt = 2
   Insn 508: point = 379, n_alt = 0
   Insn 507: point = 381, n_alt = 0
   Insn 506: point = 382, n_alt = 7
   Insn 505: point = 384, n_alt = 3
   Insn 504: point = 385, n_alt = 0
   Insn 503: point = 387, n_alt = 0
   Insn 502: point = 389, n_alt = 0
   Insn 501: point = 390, n_alt = 3
   Insn 907: point = 392, n_alt = 3
   Insn 500: point = 393, n_alt = 2
   Insn 499: point = 395, n_alt = 0
   Insn 498: point = 397, n_alt = 0
   Insn 497: point = 398, n_alt = 8
   Insn 496: point = 399, n_alt = 1
   Insn 495: point = 401, n_alt = 7
   Insn 494: point = 403, n_alt = 3
   Insn 493: point = 404, n_alt = 0
   Insn 492: point = 406, n_alt = 0
   Insn 491: point = 408, n_alt = 0
   Insn 490: point = 409, n_alt = 0
   Insn 489: point = 411, n_alt = 2
   Insn 488: point = 413, n_alt = 0
   Insn 487: point = 415, n_alt = 0
   Insn 486: point = 416, n_alt = 3
   Insn 905: point = 418, n_alt = 3
   Insn 485: point = 419, n_alt = 2
   Insn 484: point = 421, n_alt = 0
   Insn 483: point = 423, n_alt = 0
   Insn 482: point = 424, n_alt = 1
   Insn 481: point = 426, n_alt = 7
   Insn 480: point = 428, n_alt = 3
   Insn 479: point = 429, n_alt = 0
   Insn 478: point = 431, n_alt = 0
   Insn 477: point = 433, n_alt = 0
   Insn 476: point = 434, n_alt = 3
   Insn 903: point = 436, n_alt = 3
   Insn 475: point = 437, n_alt = 2
   Insn 474: point = 439, n_alt = 0
   Insn 473: point = 441, n_alt = 0
   Insn 472: point = 442, n_alt = 7
   Insn 471: point = 444, n_alt = 3
   Insn 470: point = 445, n_alt = 3
   Insn 469: point = 447, n_alt = 0
   Insn 468: point = 449, n_alt = 0
  BB 15
   Insn 770: point = 451, n_alt = -1
   Insn 438: point = 451, n_alt = 8
   Insn 437: point = 452, n_alt = 7
   Insn 436: point = 453, n_alt = 3
   Insn 435: point = 454, n_alt = 0
   Insn 434: point = 456, n_alt = 0
   Insn 433: point = 458, n_alt = 0
   Insn 432: point = 459, n_alt = 3
   Insn 898: point = 461, n_alt = 3
   Insn 431: point = 462, n_alt = 2
   Insn 430: point = 464, n_alt = 0
   Insn 429: point = 466, n_alt = 0
  BB 16
   Insn 465: point = 468, n_alt = 8
   Insn 464: point = 469, n_alt = 3
   Insn 463: point = 470, n_alt = 0
   Insn 462: point = 472, n_alt = 0
   Insn 461: point = 474, n_alt = 0
   Insn 460: point = 476, n_alt = 0
   Insn 459: point = 477, n_alt = 3
   Insn 901: point = 479, n_alt = 3
   Insn 458: point = 480, n_alt = 2
   Insn 457: point = 482, n_alt = 0
   Insn 456: point = 484, n_alt = 0
   Insn 455: point = 485, n_alt = 7
   Insn 454: point = 487, n_alt = 3
   Insn 453: point = 488, n_alt = 0
   Insn 452: point = 490, n_alt = 0
   Insn 451: point = 492, n_alt = 0
   Insn 450: point = 493, n_alt = 0
   Insn 449: point = 495, n_alt = 2
   Insn 448: point = 497, n_alt = 0
   Insn 447: point = 499, n_alt = 0
   Insn 446: point = 500, n_alt = 3
   Insn 899: point = 502, n_alt = 3
   Insn 445: point = 503, n_alt = 2
   Insn 444: point = 505, n_alt = 0
   Insn 443: point = 507, n_alt = 0
  BB 14
   Insn 424: point = 509, n_alt = -1
   Insn 423: point = 509, n_alt = 1
   Insn 422: point = 510, n_alt = 7
   Insn 421: point = 511, n_alt = 7
   Insn 420: point = 513, n_alt = 3
   Insn 419: point = 514, n_alt = 0
   Insn 418: point = 516, n_alt = 0
   Insn 417: point = 518, n_alt = 0
   Insn 416: point = 519, n_alt = 0
   Insn 415: point = 521, n_alt = 2
   Insn 414: point = 523, n_alt = 0
   Insn 413: point = 525, n_alt = 0
   Insn 412: point = 526, n_alt = 3
   Insn 896: point = 528, n_alt = 3
   Insn 411: point = 529, n_alt = 2
   Insn 410: point = 531, n_alt = 0
   Insn 409: point = 533, n_alt = 0
  BB 12
   Insn 401: point = 535, n_alt = 1
   Insn 400: point = 535, n_alt = 0
   Insn 399: point = 537, n_alt = 3
  BB 10
   Insn 391: point = 539, n_alt = 1
   Insn 894: point = 540, n_alt = 1
   Insn 390: point = 542, n_alt = 0
   Insn 389: point = 543, n_alt = 0
  BB 8
   Insn 381: point = 545, n_alt = 1
   Insn 892: point = 545, n_alt = 1
   Insn 380: point = 547, n_alt = 0
   Insn 379: point = 549, n_alt = 3
  BB 31
   Insn 784: point = 551, n_alt = -1
  BB 3
   Insn 325: point = 552, n_alt = -1
   Insn 324: point = 552, n_alt = 0
   Insn 323: point = 553, n_alt = 0
   Insn 322: point = 555, n_alt = 0
   Insn 321: point = 556, n_alt = 0
  BB 7
   Insn 767: point = 557, n_alt = -1
   Insn 373: point = 557, n_alt = 1
  BB 32
   Insn 787: point = 558, n_alt = -1
  BB 5
   Insn 335: point = 559, n_alt = -1
   Insn 334: point = 559, n_alt = 0
   Insn 333: point = 560, n_alt = 0
   Insn 332: point = 562, n_alt = 0
   Insn 331: point = 563, n_alt = 0
  BB 6
   Insn 765: point = 564, n_alt = -1
   Insn 367: point = 564, n_alt = 1
   Insn 366: point = 564, n_alt = 8
   Insn 365: point = 565, n_alt = 7
   Insn 364: point = 566, n_alt = 3
   Insn 363: point = 567, n_alt = 0
   Insn 362: point = 569, n_alt = 0
   Insn 361: point = 571, n_alt = 0
   Insn 360: point = 572, n_alt = 3
   Insn 891: point = 574, n_alt = 3
   Insn 359: point = 575, n_alt = 2
   Insn 358: point = 577, n_alt = 0
   Insn 357: point = 579, n_alt = 0
   Insn 356: point = 580, n_alt = 8
   Insn 355: point = 581, n_alt = 7
   Insn 354: point = 582, n_alt = 3
   Insn 353: point = 583, n_alt = 0
   Insn 352: point = 585, n_alt = 0
   Insn 351: point = 587, n_alt = 0
   Insn 350: point = 588, n_alt = 3
   Insn 890: point = 590, n_alt = 3
   Insn 349: point = 591, n_alt = 2
   Insn 348: point = 593, n_alt = 0
   Insn 347: point = 595, n_alt = 0
   Insn 346: point = 596, n_alt = 8
   Insn 345: point = 597, n_alt = 7
   Insn 344: point = 598, n_alt = 3
   Insn 343: point = 599, n_alt = 0
   Insn 342: point = 601, n_alt = 0
   Insn 341: point = 603, n_alt = 0
   Insn 340: point = 604, n_alt = 3
   Insn 889: point = 606, n_alt = 3
   Insn 339: point = 607, n_alt = 2
   Insn 338: point = 609, n_alt = 0
   Insn 337: point = 611, n_alt = 0
  BB 4
   Insn 329: point = 613, n_alt = 1
   Insn 328: point = 613, n_alt = 0
   Insn 327: point = 615, n_alt = 3
  BB 2
   Insn 319: point = 617, n_alt = 1
   Insn 318: point = 618, n_alt = 0
   Insn 317: point = 619, n_alt = 0
   Insn 888: point = 620, n_alt = 5
   Insn 316: point = 622, n_alt = 0
   Insn 887: point = 622, n_alt = -2
   Insn 312: point = 623, n_alt = 5
   Insn 311: point = 624, n_alt = 5
   Insn 310: point = 625, n_alt = -2
   Insn 308: point = 627, n_alt = 1
   Insn 306: point = 629, n_alt = 0
   Insn 307: point = 629, n_alt = 2
   Insn 886: point = 630, n_alt = -2
   Insn 305: point = 632, n_alt = 2
   Insn 885: point = 632, n_alt = -2
   Insn 304: point = 633, n_alt = 5
   Insn 303: point = 634, n_alt = 0
   Insn 302: point = 636, n_alt = 0
   Insn 301: point = 638, n_alt = 3
   Insn 884: point = 639, n_alt = -2
   Insn 300: point = 641, n_alt = 0
   Insn 883: point = 642, n_alt = -2
   Insn 298: point = 644, n_alt = 0
   Insn 299: point = 644, n_alt = 2
   Insn 297: point = 645, n_alt = 3
   Insn 296: point = 646, n_alt = 5
   Insn 295: point = 647, n_alt = 0
   Insn 294: point = 649, n_alt = 0
   Insn 293: point = 651, n_alt = 3
   Insn 882: point = 652, n_alt = 5
   Insn 292: point = 654, n_alt = 0
   Insn 881: point = 654, n_alt = -2
   Insn 288: point = 655, n_alt = 5
   Insn 287: point = 656, n_alt = 5
   Insn 286: point = 657, n_alt = -2
   Insn 284: point = 659, n_alt = 1
   Insn 282: point = 661, n_alt = 0
   Insn 283: point = 661, n_alt = 2
   Insn 880: point = 662, n_alt = -2
   Insn 281: point = 664, n_alt = 2
   Insn 879: point = 664, n_alt = -2
   Insn 280: point = 665, n_alt = 5
   Insn 279: point = 666, n_alt = 0
   Insn 278: point = 668, n_alt = 0
   Insn 277: point = 670, n_alt = 3
   Insn 878: point = 671, n_alt = -2
   Insn 276: point = 673, n_alt = 0
   Insn 877: point = 674, n_alt = -2
   Insn 274: point = 676, n_alt = 0
   Insn 275: point = 676, n_alt = 2
   Insn 273: point = 677, n_alt = 3
   Insn 272: point = 678, n_alt = 5
   Insn 271: point = 679, n_alt = 0
   Insn 270: point = 681, n_alt = 0
   Insn 269: point = 683, n_alt = 3
   Insn 876: point = 684, n_alt = 5
   Insn 268: point = 686, n_alt = 0
   Insn 875: point = 686, n_alt = -2
   Insn 264: point = 687, n_alt = 5
   Insn 263: point = 688, n_alt = 5
   Insn 262: point = 689, n_alt = -2
   Insn 260: point = 691, n_alt = 1
   Insn 258: point = 693, n_alt = 0
   Insn 259: point = 693, n_alt = 2
   Insn 874: point = 694, n_alt = -2
   Insn 257: point = 696, n_alt = 2
   Insn 873: point = 696, n_alt = -2
   Insn 256: point = 697, n_alt = 5
   Insn 255: point = 698, n_alt = 0
   Insn 254: point = 700, n_alt = 0
   Insn 253: point = 702, n_alt = 3
   Insn 872: point = 703, n_alt = -2
   Insn 252: point = 705, n_alt = 0
   Insn 871: point = 706, n_alt = -2
   Insn 250: point = 708, n_alt = 0
   Insn 251: point = 708, n_alt = 2
   Insn 249: point = 709, n_alt = 3
   Insn 248: point = 710, n_alt = 5
   Insn 247: point = 711, n_alt = 0
   Insn 246: point = 713, n_alt = 0
   Insn 245: point = 715, n_alt = 3
   Insn 870: point = 716, n_alt = 5
   Insn 244: point = 718, n_alt = 1
   Insn 869: point = 718, n_alt = -2
   Insn 868: point = 720, n_alt = -2
   Insn 243: point = 722, n_alt = 0
   Insn 867: point = 722, n_alt = -2
   Insn 239: point = 723, n_alt = 5
   Insn 238: point = 724, n_alt = 5
   Insn 237: point = 725, n_alt = -2
   Insn 235: point = 727, n_alt = 1
   Insn 233: point = 729, n_alt = 0
   Insn 234: point = 729, n_alt = 2
   Insn 866: point = 730, n_alt = -2
   Insn 232: point = 732, n_alt = 2
   Insn 865: point = 732, n_alt = -2
   Insn 231: point = 733, n_alt = 5
   Insn 230: point = 734, n_alt = 0
   Insn 229: point = 736, n_alt = 0
   Insn 228: point = 738, n_alt = 3
   Insn 864: point = 739, n_alt = -2
   Insn 227: point = 741, n_alt = 0
   Insn 863: point = 742, n_alt = -2
   Insn 225: point = 744, n_alt = 0
   Insn 226: point = 744, n_alt = 2
   Insn 862: point = 745, n_alt = -2
   Insn 224: point = 747, n_alt = 2
   Insn 861: point = 747, n_alt = -2
   Insn 223: point = 748, n_alt = 5
   Insn 222: point = 749, n_alt = 0
   Insn 221: point = 751, n_alt = 0
   Insn 220: point = 753, n_alt = 3
   Insn 860: point = 754, n_alt = -2
   Insn 219: point = 756, n_alt = 0
   Insn 859: point = 757, n_alt = -2
   Insn 217: point = 759, n_alt = 0
   Insn 218: point = 759, n_alt = 2
   Insn 216: point = 760, n_alt = 3
   Insn 215: point = 761, n_alt = 5
   Insn 214: point = 762, n_alt = 0
   Insn 213: point = 764, n_alt = 0
   Insn 212: point = 766, n_alt = 3
   Insn 857: point = 767, n_alt = 5
   Insn 211: point = 769, n_alt = 0
   Insn 858: point = 770, n_alt = -2
   Insn 856: point = 772, n_alt = -2
   Insn 855: point = 774, n_alt = -2
   Insn 210: point = 776, n_alt = 0
   Insn 854: point = 776, n_alt = -2
   Insn 206: point = 778, n_alt = 5
   Insn 205: point = 779, n_alt = 5
   Insn 204: point = 780, n_alt = -2
   Insn 202: point = 782, n_alt = 1
   Insn 200: point = 784, n_alt = 0
   Insn 201: point = 784, n_alt = 2
   Insn 853: point = 785, n_alt = -2
   Insn 199: point = 787, n_alt = 2
   Insn 852: point = 787, n_alt = -2
   Insn 927: point = 788, n_alt = -2
   Insn 198: point = 790, n_alt = 5
   Insn 197: point = 791, n_alt = 0
   Insn 196: point = 793, n_alt = 0
   Insn 195: point = 795, n_alt = 3
   Insn 928: point = 796, n_alt = 5
   Insn 851: point = 797, n_alt = -2
   Insn 194: point = 799, n_alt = 0
   Insn 850: point = 800, n_alt = -2
   Insn 192: point = 802, n_alt = 0
   Insn 193: point = 802, n_alt = 2
   Insn 849: point = 803, n_alt = -2
   Insn 191: point = 805, n_alt = 2
   Insn 848: point = 805, n_alt = -2
   Insn 929: point = 806, n_alt = -2
   Insn 190: point = 808, n_alt = 5
   Insn 189: point = 809, n_alt = 0
   Insn 188: point = 811, n_alt = 0
   Insn 187: point = 813, n_alt = 3
   Insn 930: point = 814, n_alt = 5
   Insn 847: point = 815, n_alt = -2
   Insn 186: point = 817, n_alt = 0
   Insn 846: point = 818, n_alt = -2
   Insn 184: point = 820, n_alt = 0
   Insn 185: point = 820, n_alt = 2
   Insn 183: point = 821, n_alt = 3
   Insn 182: point = 822, n_alt = 5
   Insn 181: point = 823, n_alt = 0
   Insn 180: point = 825, n_alt = 0
   Insn 179: point = 827, n_alt = 3
   Insn 845: point = 828, n_alt = 5
   Insn 178: point = 830, n_alt = 0
   Insn 844: point = 830, n_alt = -2
   Insn 174: point = 832, n_alt = 5
   Insn 173: point = 833, n_alt = 5
   Insn 172: point = 834, n_alt = -2
   Insn 170: point = 836, n_alt = 1
   Insn 168: point = 838, n_alt = 0
   Insn 169: point = 838, n_alt = 2
   Insn 843: point = 839, n_alt = -2
   Insn 167: point = 841, n_alt = 2
   Insn 842: point = 841, n_alt = -2
   Insn 931: point = 842, n_alt = -2
   Insn 166: point = 844, n_alt = 5
   Insn 165: point = 845, n_alt = 0
   Insn 164: point = 847, n_alt = 0
   Insn 163: point = 849, n_alt = 3
   Insn 932: point = 850, n_alt = 5
   Insn 841: point = 851, n_alt = -2
   Insn 162: point = 853, n_alt = 0
   Insn 840: point = 854, n_alt = -2
   Insn 160: point = 856, n_alt = 0
   Insn 161: point = 856, n_alt = 2
   Insn 159: point = 857, n_alt = 3
   Insn 158: point = 858, n_alt = 5
   Insn 157: point = 859, n_alt = 0
   Insn 156: point = 861, n_alt = 0
   Insn 155: point = 863, n_alt = 3
   Insn 151: point = 864, n_alt = 5
   Insn 150: point = 865, n_alt = 5
   Insn 149: point = 866, n_alt = -2
   Insn 147: point = 868, n_alt = 1
   Insn 145: point = 870, n_alt = 0
   Insn 146: point = 870, n_alt = 2
   Insn 144: point = 871, n_alt = 3
   Insn 143: point = 872, n_alt = 5
   Insn 142: point = 873, n_alt = 0
   Insn 141: point = 875, n_alt = 0
   Insn 140: point = 877, n_alt = 3
   Insn 839: point = 878, n_alt = 5
   Insn 139: point = 880, n_alt = 0
   Insn 838: point = 880, n_alt = -2
   Insn 135: point = 881, n_alt = 5
   Insn 134: point = 882, n_alt = 5
   Insn 133: point = 883, n_alt = -2
   Insn 131: point = 885, n_alt = 1
   Insn 129: point = 887, n_alt = 0
   Insn 130: point = 887, n_alt = 2
   Insn 837: point = 888, n_alt = -2
   Insn 128: point = 890, n_alt = 2
   Insn 836: point = 890, n_alt = -2
   Insn 127: point = 891, n_alt = 5
   Insn 126: point = 892, n_alt = 0
   Insn 125: point = 894, n_alt = 0
   Insn 124: point = 896, n_alt = 3
   Insn 835: point = 897, n_alt = -2
   Insn 123: point = 899, n_alt = 0
   Insn 834: point = 900, n_alt = -2
   Insn 121: point = 902, n_alt = 0
   Insn 122: point = 902, n_alt = 2
   Insn 120: point = 903, n_alt = 3
   Insn 119: point = 904, n_alt = 5
   Insn 118: point = 905, n_alt = 0
   Insn 117: point = 907, n_alt = 0
   Insn 116: point = 909, n_alt = 3
   Insn 833: point = 910, n_alt = 5
   Insn 115: point = 912, n_alt = 1
   Insn 832: point = 912, n_alt = -2
   Insn 831: point = 914, n_alt = -2
   Insn 114: point = 916, n_alt = 0
   Insn 830: point = 916, n_alt = -2
   Insn 110: point = 918, n_alt = 5
   Insn 109: point = 919, n_alt = 5
   Insn 108: point = 920, n_alt = -2
   Insn 106: point = 922, n_alt = 1
   Insn 104: point = 924, n_alt = 0
   Insn 105: point = 924, n_alt = 2
   Insn 829: point = 925, n_alt = -2
   Insn 103: point = 927, n_alt = 2
   Insn 828: point = 927, n_alt = -2
   Insn 102: point = 928, n_alt = 5
   Insn 101: point = 929, n_alt = 0
   Insn 100: point = 931, n_alt = 0
   Insn 99: point = 933, n_alt = 3
   Insn 827: point = 934, n_alt = -2
   Insn 98: point = 936, n_alt = 0
   Insn 826: point = 937, n_alt = -2
   Insn 96: point = 939, n_alt = 0
   Insn 97: point = 939, n_alt = 2
   Insn 825: point = 940, n_alt = -2
   Insn 95: point = 942, n_alt = 2
   Insn 824: point = 942, n_alt = -2
   Insn 933: point = 943, n_alt = -2
   Insn 94: point = 945, n_alt = 5
   Insn 93: point = 946, n_alt = 0
   Insn 92: point = 948, n_alt = 0
   Insn 91: point = 950, n_alt = 3
   Insn 934: point = 951, n_alt = 5
   Insn 823: point = 952, n_alt = -2
   Insn 90: point = 954, n_alt = 0
   Insn 822: point = 955, n_alt = -2
   Insn 88: point = 957, n_alt = 0
   Insn 89: point = 957, n_alt = 2
   Insn 87: point = 958, n_alt = 3
   Insn 86: point = 959, n_alt = 5
   Insn 85: point = 960, n_alt = 0
   Insn 84: point = 962, n_alt = 0
   Insn 83: point = 964, n_alt = 3
   Insn 821: point = 965, n_alt = 5
   Insn 82: point = 967, n_alt = 0
   Insn 820: point = 967, n_alt = -2
   Insn 78: point = 968, n_alt = 2
   Insn 77: point = 969, n_alt = 3
   Insn 76: point = 970, n_alt = -2
   Insn 74: point = 972, n_alt = 1
   Insn 72: point = 974, n_alt = 0
   Insn 73: point = 974, n_alt = 2
   Insn 819: point = 975, n_alt = -2
   Insn 71: point = 977, n_alt = 2
   Insn 818: point = 977, n_alt = -2
   Insn 70: point = 978, n_alt = 5
   Insn 69: point = 979, n_alt = 0
   Insn 68: point = 981, n_alt = 0
   Insn 67: point = 983, n_alt = 3
   Insn 817: point = 984, n_alt = -2
   Insn 66: point = 986, n_alt = 0
   Insn 816: point = 987, n_alt = -2
   Insn 64: point = 989, n_alt = 0
   Insn 65: point = 989, n_alt = 2
   Insn 63: point = 990, n_alt = 3
   Insn 62: point = 991, n_alt = 5
   Insn 61: point = 992, n_alt = 0
   Insn 60: point = 994, n_alt = 0
   Insn 59: point = 996, n_alt = 3
   Insn 815: point = 997, n_alt = 5
   Insn 58: point = 999, n_alt = 0
   Insn 814: point = 999, n_alt = -2
   Insn 54: point = 1000, n_alt = 2
   Insn 53: point = 1001, n_alt = 3
   Insn 52: point = 1002, n_alt = -2
   Insn 50: point = 1004, n_alt = 1
   Insn 48: point = 1006, n_alt = 0
   Insn 49: point = 1006, n_alt = 2
   Insn 813: point = 1007, n_alt = -2
   Insn 47: point = 1009, n_alt = 2
   Insn 812: point = 1009, n_alt = -2
   Insn 46: point = 1010, n_alt = 5
   Insn 45: point = 1011, n_alt = 0
   Insn 44: point = 1013, n_alt = 0
   Insn 43: point = 1015, n_alt = 3
   Insn 811: point = 1016, n_alt = -2
   Insn 42: point = 1018, n_alt = 0
   Insn 810: point = 1019, n_alt = -2
   Insn 40: point = 1021, n_alt = 0
   Insn 41: point = 1021, n_alt = 2
   Insn 39: point = 1022, n_alt = 3
   Insn 38: point = 1023, n_alt = 5
   Insn 37: point = 1024, n_alt = 0
   Insn 36: point = 1026, n_alt = 0
   Insn 35: point = 1028, n_alt = 3
   Insn 809: point = 1029, n_alt = 5
   Insn 34: point = 1031, n_alt = 0
   Insn 808: point = 1031, n_alt = -2
   Insn 30: point = 1032, n_alt = 2
   Insn 29: point = 1033, n_alt = 3
   Insn 28: point = 1034, n_alt = -2
   Insn 26: point = 1036, n_alt = 1
   Insn 24: point = 1038, n_alt = 0
   Insn 25: point = 1038, n_alt = 2
   Insn 807: point = 1039, n_alt = -2
   Insn 23: point = 1041, n_alt = 2
   Insn 806: point = 1041, n_alt = -2
   Insn 22: point = 1042, n_alt = 5
   Insn 21: point = 1043, n_alt = 0
   Insn 20: point = 1045, n_alt = 0
   Insn 19: point = 1047, n_alt = 3
   Insn 805: point = 1048, n_alt = -2
   Insn 18: point = 1050, n_alt = 0
   Insn 804: point = 1051, n_alt = -2
   Insn 16: point = 1053, n_alt = 0
   Insn 17: point = 1053, n_alt = 2
   Insn 15: point = 1054, n_alt = 3
   Insn 14: point = 1055, n_alt = 5
   Insn 13: point = 1056, n_alt = 0
   Insn 12: point = 1058, n_alt = 0
   Insn 11: point = 1060, n_alt = 3
   Insn 7: point = 1061, n_alt = 5
   Insn 6: point = 1061, n_alt = 5
   Insn 5: point = 1061, n_alt = 5
   Insn 4: point = 1061, n_alt = 5
   Insn 3: point = 1061, n_alt = 5
   Insn 2: point = 1061, n_alt = 5
 r106: [918..1061]
 r112: [881..1061]
 r116: [864..1061]
 r121: [832..1061]
 r127: [778..1061]
 r134: [723..1061]
 r140: [687..1061]
 r145: [655..1061]
 r150: [623..1061]
 r349: [0..1029]
 r357: [0..997]
 r365: [155..965]
 r367: [155..951]
 r375: [155..910]
 r383: [155..878]
 r390: [155..850]
 r396: [155..828]
 r398: [155..814]
 r400: [155..796]
 r406: [155..767]
 r416: [155..716]
 r424: [155..684]
 r432: [0..652]
 r440: [0..620]
 r446: [155..545]
 r449: [164..540]
Compressing live ranges: from 1062 to 20 - 1%
Ranges after the compression:
 r106: [18..19]
 r112: [16..19]
 r116: [14..19]
 r121: [12..19]
 r127: [10..19]
 r134: [8..19]
 r140: [6..19]
 r145: [4..19]
 r150: [2..19]
 r349: [0..19]
 r357: [0..19]
 r365: [0..19]
 r367: [0..19]
 r375: [0..17]
 r383: [0..15]
 r390: [0..13]
 r396: [0..11]
 r398: [0..11]
 r400: [0..11]
 r406: [0..9]
 r416: [0..7]
 r424: [0..5]
 r432: [0..3]
 r440: [0..1]
 r446: [0..1]
 r449: [0..1]
  Slot 0 regnos (width = 0):	 349
  Slot 1 regnos (width = 0):	 357
  Slot 2 regnos (width = 0):	 365
  Slot 3 regnos (width = 0):	 383	 106
  Slot 4 regnos (width = 0):	 367
  Slot 5 regnos (width = 0):	 375
  Slot 6 regnos (width = 0):	 416	 112
  Slot 7 regnos (width = 0):	 116	 390
  Slot 8 regnos (width = 0):	 121	 396
  Slot 9 regnos (width = 0):	 127	 406
  Slot 10 regnos (width = 0):	 134	 424
  Slot 11 regnos (width = 0):	 140	 432
  Slot 12 regnos (width = 0):	 145	 440
  Slot 13 regnos (width = 0):	 150	 446
  Slot 14 regnos (width = 0):	 398
  Slot 15 regnos (width = 0):	 400
  Slot 16 regnos (width = 0):	 449
Changing spilled pseudos to memory in insn #809
Changing spilled pseudos to memory in insn #815
Changing spilled pseudos to memory in insn #821
Changing spilled pseudos to memory in insn #934
Changing spilled pseudos to memory in insn #109
Changing spilled pseudos to memory in insn #110
Changing spilled pseudos to memory in insn #833
Changing spilled pseudos to memory in insn #134
Changing spilled pseudos to memory in insn #135
Changing spilled pseudos to memory in insn #839
Changing spilled pseudos to memory in insn #150
Changing spilled pseudos to memory in insn #151
Changing spilled pseudos to memory in insn #932
Changing spilled pseudos to memory in insn #173
Changing spilled pseudos to memory in insn #174
Changing spilled pseudos to memory in insn #845
Changing spilled pseudos to memory in insn #930
Changing spilled pseudos to memory in insn #928
Changing spilled pseudos to memory in insn #205
Changing spilled pseudos to memory in insn #206
Changing spilled pseudos to memory in insn #857
Changing spilled pseudos to memory in insn #238
Changing spilled pseudos to memory in insn #239
Changing spilled pseudos to memory in insn #870
Changing spilled pseudos to memory in insn #263
Changing spilled pseudos to memory in insn #264
Changing spilled pseudos to memory in insn #876
Changing spilled pseudos to memory in insn #287
Changing spilled pseudos to memory in insn #288
Changing spilled pseudos to memory in insn #882
Changing spilled pseudos to memory in insn #311
Changing spilled pseudos to memory in insn #312
Changing spilled pseudos to memory in insn #888
Changing spilled pseudos to memory in insn #889
Changing spilled pseudos to memory in insn #890
Changing spilled pseudos to memory in insn #891
Changing spilled pseudos to memory in insn #892
Changing spilled pseudos to memory in insn #893
Changing spilled pseudos to memory in insn #894
Changing spilled pseudos to memory in insn #895
Changing spilled pseudos to memory in insn #896
Changing spilled pseudos to memory in insn #415
Changing spilled pseudos to memory in insn #898
Changing spilled pseudos to memory in insn #899
Changing spilled pseudos to memory in insn #449
Changing spilled pseudos to memory in insn #901
Changing spilled pseudos to memory in insn #475
Changing spilled pseudos to memory in insn #903
Changing spilled pseudos to memory in insn #485
Changing spilled pseudos to memory in insn #905
Changing spilled pseudos to memory in insn #489
Changing spilled pseudos to memory in insn #907
Changing spilled pseudos to memory in insn #938
Changing spilled pseudos to memory in insn #909
Changing spilled pseudos to memory in insn #910
Changing spilled pseudos to memory in insn #911
Changing spilled pseudos to memory in insn #914
Changing spilled pseudos to memory in insn #915
Changing spilled pseudos to memory in insn #918
Changing spilled pseudos to memory in insn #919
Changing spilled pseudos to memory in insn #921
Changing spilled pseudos to memory in insn #940
Changing spilled pseudos to memory in insn #924
Changing spilled pseudos to memory in insn #925
Changing spilled pseudos to memory in insn #926
	   Spilling non-eliminable hard regs: 6

********** Local #4: **********

	   Spilling non-eliminable hard regs: 6
Reusing alternative 3 for insn #926
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 926:  (0) r  (1) rem {*movdi_internal}
Reusing alternative 3 for insn #925
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 925:  (0) r  (1) rem {*movdi_internal}
Reusing alternative 3 for insn #924
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 924:  (0) r  (1) rem {*movdi_internal}
Reusing alternative 3 for insn #940
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 940:  (0) r  (1) rem {*movdi_internal}
Reusing alternative 3 for insn #921
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 921:  (0) r  (1) rem {*movdi_internal}
Reusing alternative 3 for insn #919
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 919:  (0) r  (1) rem {*movdi_internal}
Reusing alternative 3 for insn #918
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 918:  (0) r  (1) rem {*movdi_internal}
Reusing alternative 3 for insn #915
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 915:  (0) r  (1) rem {*movdi_internal}
Reusing alternative 3 for insn #914
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 914:  (0) r  (1) rem {*movdi_internal}
Reusing alternative 3 for insn #911
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 911:  (0) r  (1) rem {*movdi_internal}
Reusing alternative 3 for insn #910
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 910:  (0) r  (1) rem {*movdi_internal}
Reusing alternative 3 for insn #909
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 909:  (0) r  (1) rem {*movdi_internal}
Reusing alternative 3 for insn #938
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 938:  (0) r  (1) rem {*movdi_internal}
Reusing alternative 3 for insn #907
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 907:  (0) r  (1) rem {*movdi_internal}
Reusing alternative 2 for insn #489
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 489:  (0) r  (1) 0  (2) mr {*muldi3_1}
Reusing alternative 3 for insn #905
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 905:  (0) r  (1) rem {*movdi_internal}
Reusing alternative 2 for insn #485
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 485:  (0) r  (1) 0  (2) mr {*muldi3_1}
Reusing alternative 3 for insn #903
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 903:  (0) r  (1) rem {*movdi_internal}
Reusing alternative 2 for insn #475
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 475:  (0) r  (1) 0  (2) mr {*muldi3_1}
Reusing alternative 3 for insn #901
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 901:  (0) r  (1) rem {*movdi_internal}
Reusing alternative 2 for insn #449
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 449:  (0) r  (1) 0  (2) mr {*muldi3_1}
Reusing alternative 3 for insn #899
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 899:  (0) r  (1) rem {*movdi_internal}
Reusing alternative 3 for insn #898
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 898:  (0) r  (1) rem {*movdi_internal}
Reusing alternative 2 for insn #415
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 415:  (0) r  (1) 0  (2) mr {*muldi3_1}
Reusing alternative 3 for insn #896
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 896:  (0) r  (1) rem {*movdi_internal}
Reusing alternative 0 for insn #895
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 895:  (0) =r  (1) g {*movsi_internal}
Reusing alternative 1 for insn #894
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 894:  (0) m  (1) re {*movsi_internal}
Reusing alternative 0 for insn #893
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 893:  (0) =r  (1) g {*movsi_internal}
Reusing alternative 1 for insn #892
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 892:  (0) m  (1) re {*movsi_internal}
Reusing alternative 3 for insn #891
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 891:  (0) r  (1) rem {*movdi_internal}
Reusing alternative 3 for insn #890
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 890:  (0) r  (1) rem {*movdi_internal}
Reusing alternative 3 for insn #889
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 889:  (0) r  (1) rem {*movdi_internal}
Reusing alternative 5 for insn #888
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 888:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 312:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 311:  (0) m  (1) re {*movdi_internal}
Reusing alternative 5 for insn #882
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 882:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 288:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 287:  (0) m  (1) re {*movdi_internal}
Reusing alternative 5 for insn #876
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 876:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 264:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 263:  (0) m  (1) re {*movdi_internal}
Reusing alternative 5 for insn #870
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 870:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 239:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 238:  (0) m  (1) re {*movdi_internal}
Reusing alternative 5 for insn #857
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 857:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 206:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 205:  (0) m  (1) re {*movdi_internal}
Reusing alternative 5 for insn #928
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 928:  (0) m  (1) re {*movdi_internal}
Reusing alternative 5 for insn #930
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 930:  (0) m  (1) re {*movdi_internal}
Reusing alternative 5 for insn #845
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 845:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 174:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 173:  (0) m  (1) re {*movdi_internal}
Reusing alternative 5 for insn #932
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 932:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 151:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 150:  (0) m  (1) re {*movdi_internal}
Reusing alternative 5 for insn #839
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 839:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 135:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 134:  (0) m  (1) re {*movdi_internal}
Reusing alternative 5 for insn #833
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 833:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 110:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 109:  (0) m  (1) re {*movdi_internal}
Reusing alternative 5 for insn #934
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 934:  (0) m  (1) re {*movdi_internal}
Reusing alternative 5 for insn #821
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 821:  (0) m  (1) re {*movdi_internal}
Reusing alternative 5 for insn #815
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 815:  (0) m  (1) re {*movdi_internal}
Reusing alternative 5 for insn #809
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 809:  (0) m  (1) re {*movdi_internal}
	   Spilling non-eliminable hard regs: 6

********** Pseudo live ranges #4: **********

  BB 30
   Insn 764: point = 0, n_alt = -1
  BB 36
   Insn 799: point = 0, n_alt = -1
  BB 21
   Insn 646: point = 0, n_alt = -1
   Insn 645: point = 0, n_alt = 0
   Insn 644: point = 1, n_alt = 0
   Insn 643: point = 3, n_alt = 0
   Insn 642: point = 4, n_alt = 0
  BB 29
   Insn 780: point = 5, n_alt = -1
   Insn 751: point = 5, n_alt = 1
  BB 37
   Insn 802: point = 6, n_alt = -1
  BB 23
   Insn 656: point = 7, n_alt = -1
   Insn 655: point = 7, n_alt = 0
   Insn 654: point = 8, n_alt = 0
   Insn 653: point = 10, n_alt = 0
   Insn 652: point = 11, n_alt = 0
  BB 28
   Insn 778: point = 12, n_alt = -1
   Insn 745: point = 12, n_alt = 1
   Insn 744: point = 12, n_alt = 8
   Insn 743: point = 13, n_alt = 3
   Insn 742: point = 14, n_alt = 0
   Insn 741: point = 16, n_alt = 1
   Insn 740: point = 18, n_alt = 0
   Insn 739: point = 19, n_alt = 3
   Insn 926: point = 21, n_alt = 3
   Insn 738: point = 22, n_alt = 2
   Insn 737: point = 24, n_alt = 1
   Insn 736: point = 26, n_alt = 0
  BB 27
   Insn 733: point = 28, n_alt = 7
  BB 26
   Insn 731: point = 30, n_alt = -1
   Insn 730: point = 30, n_alt = 0
   Insn 729: point = 31, n_alt = 0
   Insn 728: point = 33, n_alt = 0
   Insn 727: point = 35, n_alt = 0
   Insn 726: point = 36, n_alt = 1
   Insn 725: point = 36, n_alt = 0
   Insn 724: point = 38, n_alt = 0
   Insn 723: point = 39, n_alt = 1
   Insn 722: point = 40, n_alt = 7
  BB 25
   Insn 719: point = 42, n_alt = 7
  BB 24
   Insn 717: point = 44, n_alt = -1
   Insn 716: point = 44, n_alt = 0
   Insn 715: point = 45, n_alt = 0
   Insn 714: point = 47, n_alt = 0
   Insn 713: point = 49, n_alt = 0
   Insn 712: point = 50, n_alt = 1
   Insn 711: point = 50, n_alt = 0
   Insn 710: point = 52, n_alt = 0
   Insn 709: point = 53, n_alt = 1
   Insn 708: point = 53, n_alt = -2
   Insn 707: point = 55, n_alt = 2
   Insn 706: point = 57, n_alt = -2
   Insn 705: point = 59, n_alt = 1
   Insn 704: point = 61, n_alt = 7
   Insn 703: point = 62, n_alt = 7
   Insn 702: point = 64, n_alt = 3
   Insn 701: point = 65, n_alt = 0
   Insn 700: point = 67, n_alt = 1
   Insn 699: point = 69, n_alt = 0
   Insn 698: point = 70, n_alt = 3
   Insn 925: point = 72, n_alt = 3
   Insn 697: point = 73, n_alt = 2
   Insn 696: point = 75, n_alt = 1
   Insn 695: point = 77, n_alt = 0
   Insn 694: point = 78, n_alt = 1
   Insn 693: point = 80, n_alt = 7
   Insn 692: point = 82, n_alt = 3
   Insn 691: point = 83, n_alt = 0
   Insn 690: point = 85, n_alt = 1
   Insn 689: point = 87, n_alt = 0
   Insn 688: point = 88, n_alt = 3
   Insn 924: point = 90, n_alt = 3
   Insn 687: point = 91, n_alt = 2
   Insn 686: point = 93, n_alt = 1
   Insn 685: point = 95, n_alt = 0
   Insn 684: point = 96, n_alt = -2
   Insn 683: point = 98, n_alt = 1
   Insn 682: point = 100, n_alt = 1
   Insn 681: point = 102, n_alt = 7
   Insn 680: point = 103, n_alt = -2
   Insn 679: point = 105, n_alt = 2
   Insn 678: point = 107, n_alt = 7
   Insn 677: point = 108, n_alt = 7
   Insn 676: point = 110, n_alt = 3
   Insn 675: point = 111, n_alt = 0
   Insn 674: point = 113, n_alt = 1
   Insn 673: point = 115, n_alt = 0
   Insn 672: point = 116, n_alt = 3
   Insn 923: point = 118, n_alt = -2
   Insn 671: point = 120, n_alt = 2
   Insn 670: point = 122, n_alt = 1
   Insn 669: point = 124, n_alt = 0
   Insn 668: point = 125, n_alt = 1
   Insn 667: point = 127, n_alt = 7
   Insn 666: point = 128, n_alt = 7
   Insn 665: point = 130, n_alt = 3
   Insn 664: point = 131, n_alt = 0
   Insn 663: point = 133, n_alt = 1
   Insn 662: point = 135, n_alt = 0
   Insn 661: point = 136, n_alt = 3
   Insn 922: point = 138, n_alt = -2
   Insn 940: point = 139, n_alt = 3
   Insn 660: point = 140, n_alt = 2
   Insn 659: point = 142, n_alt = 1
   Insn 658: point = 144, n_alt = 0
  BB 22
   Insn 650: point = 146, n_alt = 1
   Insn 649: point = 146, n_alt = 0
   Insn 648: point = 148, n_alt = 3
  BB 20
   Insn 640: point = 150, n_alt = 1
   Insn 639: point = 151, n_alt = 0
   Insn 638: point = 152, n_alt = 0
  BB 33
   Insn 790: point = 154, n_alt = -1
  BB 9
   Insn 387: point = 155, n_alt = -1
   Insn 386: point = 155, n_alt = 0
   Insn 385: point = 156, n_alt = 0
   Insn 384: point = 158, n_alt = 0
   Insn 383: point = 159, n_alt = 0
   Insn 893: point = 160, n_alt = 0
  BB 19
   Insn 776: point = 162, n_alt = -1
   Insn 632: point = 162, n_alt = 1
  BB 34
   Insn 793: point = 163, n_alt = -1
  BB 11
   Insn 397: point = 164, n_alt = -1
   Insn 396: point = 164, n_alt = 0
   Insn 395: point = 165, n_alt = 0
   Insn 394: point = 167, n_alt = 0
   Insn 393: point = 168, n_alt = 0
   Insn 895: point = 169, n_alt = 0
  BB 18
   Insn 774: point = 171, n_alt = -1
   Insn 626: point = 171, n_alt = 1
  BB 35
   Insn 796: point = 172, n_alt = -1
  BB 13
   Insn 407: point = 173, n_alt = -1
   Insn 406: point = 173, n_alt = 0
   Insn 405: point = 174, n_alt = 0
   Insn 404: point = 176, n_alt = 0
   Insn 403: point = 177, n_alt = 0
  BB 17
   Insn 772: point = 178, n_alt = -1
   Insn 620: point = 178, n_alt = 1
   Insn 619: point = 178, n_alt = 8
   Insn 618: point = 179, n_alt = 3
   Insn 617: point = 180, n_alt = 7
   Insn 616: point = 182, n_alt = 3
   Insn 615: point = 183, n_alt = 0
   Insn 614: point = 185, n_alt = 0
   Insn 613: point = 187, n_alt = 0
   Insn 612: point = 188, n_alt = 3
   Insn 921: point = 190, n_alt = 3
   Insn 611: point = 191, n_alt = 2
   Insn 610: point = 193, n_alt = 0
   Insn 609: point = 195, n_alt = 0
   Insn 608: point = 196, n_alt = 3
   Insn 607: point = 198, n_alt = 0
   Insn 606: point = 200, n_alt = 0
   Insn 605: point = 201, n_alt = 3
   Insn 920: point = 203, n_alt = -2
   Insn 604: point = 205, n_alt = 2
   Insn 603: point = 207, n_alt = 0
   Insn 602: point = 209, n_alt = 0
   Insn 601: point = 210, n_alt = 8
   Insn 600: point = 211, n_alt = 3
   Insn 599: point = 212, n_alt = 1
   Insn 598: point = 214, n_alt = 0
   Insn 597: point = 216, n_alt = 0
   Insn 596: point = 218, n_alt = 0
   Insn 595: point = 219, n_alt = 3
   Insn 919: point = 221, n_alt = 3
   Insn 594: point = 222, n_alt = 2
   Insn 593: point = 224, n_alt = 0
   Insn 592: point = 226, n_alt = 0
   Insn 591: point = 227, n_alt = 7
   Insn 590: point = 229, n_alt = 3
   Insn 589: point = 230, n_alt = 0
   Insn 588: point = 232, n_alt = 0
   Insn 587: point = 234, n_alt = 0
   Insn 586: point = 235, n_alt = 3
   Insn 918: point = 237, n_alt = 3
   Insn 585: point = 238, n_alt = 2
   Insn 584: point = 240, n_alt = 0
   Insn 583: point = 242, n_alt = 0
   Insn 917: point = 243, n_alt = -2
   Insn 582: point = 245, n_alt = 1
   Insn 916: point = 245, n_alt = -2
   Insn 581: point = 247, n_alt = 7
   Insn 580: point = 248, n_alt = 8
   Insn 579: point = 249, n_alt = 3
   Insn 578: point = 250, n_alt = 1
   Insn 577: point = 252, n_alt = 0
   Insn 576: point = 254, n_alt = 0
   Insn 575: point = 256, n_alt = 0
   Insn 574: point = 257, n_alt = 3
   Insn 915: point = 259, n_alt = 3
   Insn 573: point = 260, n_alt = 2
   Insn 572: point = 262, n_alt = 0
   Insn 571: point = 264, n_alt = 0
   Insn 570: point = 265, n_alt = 7
   Insn 569: point = 267, n_alt = 3
   Insn 568: point = 268, n_alt = 0
   Insn 567: point = 270, n_alt = 0
   Insn 566: point = 272, n_alt = 0
   Insn 565: point = 273, n_alt = 3
   Insn 914: point = 275, n_alt = 3
   Insn 564: point = 276, n_alt = 2
   Insn 563: point = 278, n_alt = 0
   Insn 562: point = 280, n_alt = 0
   Insn 913: point = 281, n_alt = -2
   Insn 561: point = 283, n_alt = 1
   Insn 912: point = 283, n_alt = -2
   Insn 560: point = 285, n_alt = 1
   Insn 559: point = 287, n_alt = -2
   Insn 558: point = 289, n_alt = 2
   Insn 557: point = 291, n_alt = 7
   Insn 556: point = 293, n_alt = 3
   Insn 555: point = 294, n_alt = 0
   Insn 554: point = 296, n_alt = 0
   Insn 553: point = 298, n_alt = 0
   Insn 552: point = 299, n_alt = 3
   Insn 911: point = 301, n_alt = 3
   Insn 551: point = 302, n_alt = 2
   Insn 550: point = 304, n_alt = 0
   Insn 549: point = 306, n_alt = 0
   Insn 548: point = 307, n_alt = 1
   Insn 547: point = 309, n_alt = 7
   Insn 546: point = 310, n_alt = -2
   Insn 545: point = 312, n_alt = 1
   Insn 544: point = 314, n_alt = 7
   Insn 543: point = 316, n_alt = 3
   Insn 542: point = 317, n_alt = 0
   Insn 541: point = 319, n_alt = 0
   Insn 540: point = 321, n_alt = 0
   Insn 539: point = 322, n_alt = 0
   Insn 538: point = 324, n_alt = 2
   Insn 537: point = 326, n_alt = 0
   Insn 536: point = 328, n_alt = 0
   Insn 535: point = 329, n_alt = 3
   Insn 910: point = 331, n_alt = 3
   Insn 534: point = 332, n_alt = 2
   Insn 533: point = 334, n_alt = 0
   Insn 532: point = 336, n_alt = 0
   Insn 531: point = 338, n_alt = 0
   Insn 530: point = 339, n_alt = 7
   Insn 529: point = 341, n_alt = 3
   Insn 528: point = 342, n_alt = 0
   Insn 527: point = 344, n_alt = 0
   Insn 526: point = 346, n_alt = 0
   Insn 525: point = 347, n_alt = 0
   Insn 524: point = 349, n_alt = 2
   Insn 523: point = 351, n_alt = 0
   Insn 522: point = 353, n_alt = 0
   Insn 521: point = 354, n_alt = 3
   Insn 909: point = 356, n_alt = 3
   Insn 520: point = 357, n_alt = 2
   Insn 519: point = 359, n_alt = 0
   Insn 518: point = 361, n_alt = 0
   Insn 517: point = 362, n_alt = 8
   Insn 516: point = 363, n_alt = 1
   Insn 515: point = 365, n_alt = 7
   Insn 514: point = 367, n_alt = 3
   Insn 513: point = 368, n_alt = 0
   Insn 512: point = 370, n_alt = 0
   Insn 511: point = 372, n_alt = 0
   Insn 510: point = 373, n_alt = 3
   Insn 908: point = 375, n_alt = -2
   Insn 938: point = 376, n_alt = 3
   Insn 509: point = 377, n_alt = 2
   Insn 508: point = 379, n_alt = 0
   Insn 507: point = 381, n_alt = 0
   Insn 506: point = 382, n_alt = 7
   Insn 505: point = 384, n_alt = 3
   Insn 504: point = 385, n_alt = 0
   Insn 503: point = 387, n_alt = 0
   Insn 502: point = 389, n_alt = 0
   Insn 501: point = 390, n_alt = 3
   Insn 907: point = 392, n_alt = 3
   Insn 500: point = 393, n_alt = 2
   Insn 499: point = 395, n_alt = 0
   Insn 498: point = 397, n_alt = 0
   Insn 497: point = 398, n_alt = 8
   Insn 496: point = 399, n_alt = 1
   Insn 495: point = 401, n_alt = 7
   Insn 494: point = 403, n_alt = 3
   Insn 493: point = 404, n_alt = 0
   Insn 492: point = 406, n_alt = 0
   Insn 491: point = 408, n_alt = 0
   Insn 490: point = 409, n_alt = 0
   Insn 489: point = 411, n_alt = 2
   Insn 488: point = 413, n_alt = 0
   Insn 487: point = 415, n_alt = 0
   Insn 486: point = 416, n_alt = 3
   Insn 905: point = 418, n_alt = 3
   Insn 485: point = 419, n_alt = 2
   Insn 484: point = 421, n_alt = 0
   Insn 483: point = 423, n_alt = 0
   Insn 482: point = 424, n_alt = 1
   Insn 481: point = 426, n_alt = 7
   Insn 480: point = 428, n_alt = 3
   Insn 479: point = 429, n_alt = 0
   Insn 478: point = 431, n_alt = 0
   Insn 477: point = 433, n_alt = 0
   Insn 476: point = 434, n_alt = 3
   Insn 903: point = 436, n_alt = 3
   Insn 475: point = 437, n_alt = 2
   Insn 474: point = 439, n_alt = 0
   Insn 473: point = 441, n_alt = 0
   Insn 472: point = 442, n_alt = 7
   Insn 471: point = 444, n_alt = 3
   Insn 470: point = 445, n_alt = 3
   Insn 469: point = 447, n_alt = 0
   Insn 468: point = 449, n_alt = 0
  BB 15
   Insn 770: point = 451, n_alt = -1
   Insn 438: point = 451, n_alt = 8
   Insn 437: point = 452, n_alt = 7
   Insn 436: point = 453, n_alt = 3
   Insn 435: point = 454, n_alt = 0
   Insn 434: point = 456, n_alt = 0
   Insn 433: point = 458, n_alt = 0
   Insn 432: point = 459, n_alt = 3
   Insn 898: point = 461, n_alt = 3
   Insn 431: point = 462, n_alt = 2
   Insn 430: point = 464, n_alt = 0
   Insn 429: point = 466, n_alt = 0
  BB 16
   Insn 465: point = 468, n_alt = 8
   Insn 464: point = 469, n_alt = 3
   Insn 463: point = 470, n_alt = 0
   Insn 462: point = 472, n_alt = 0
   Insn 461: point = 474, n_alt = 0
   Insn 460: point = 476, n_alt = 0
   Insn 459: point = 477, n_alt = 3
   Insn 901: point = 479, n_alt = 3
   Insn 458: point = 480, n_alt = 2
   Insn 457: point = 482, n_alt = 0
   Insn 456: point = 484, n_alt = 0
   Insn 455: point = 485, n_alt = 7
   Insn 454: point = 487, n_alt = 3
   Insn 453: point = 488, n_alt = 0
   Insn 452: point = 490, n_alt = 0
   Insn 451: point = 492, n_alt = 0
   Insn 450: point = 493, n_alt = 0
   Insn 449: point = 495, n_alt = 2
   Insn 448: point = 497, n_alt = 0
   Insn 447: point = 499, n_alt = 0
   Insn 446: point = 500, n_alt = 3
   Insn 899: point = 502, n_alt = 3
   Insn 445: point = 503, n_alt = 2
   Insn 444: point = 505, n_alt = 0
   Insn 443: point = 507, n_alt = 0
  BB 14
   Insn 424: point = 509, n_alt = -1
   Insn 423: point = 509, n_alt = 1
   Insn 422: point = 510, n_alt = 7
   Insn 421: point = 511, n_alt = 7
   Insn 420: point = 513, n_alt = 3
   Insn 419: point = 514, n_alt = 0
   Insn 418: point = 516, n_alt = 0
   Insn 417: point = 518, n_alt = 0
   Insn 416: point = 519, n_alt = 0
   Insn 415: point = 521, n_alt = 2
   Insn 414: point = 523, n_alt = 0
   Insn 413: point = 525, n_alt = 0
   Insn 412: point = 526, n_alt = 3
   Insn 896: point = 528, n_alt = 3
   Insn 411: point = 529, n_alt = 2
   Insn 410: point = 531, n_alt = 0
   Insn 409: point = 533, n_alt = 0
  BB 12
   Insn 401: point = 535, n_alt = 1
   Insn 400: point = 535, n_alt = 0
   Insn 399: point = 537, n_alt = 3
  BB 10
   Insn 391: point = 539, n_alt = 1
   Insn 894: point = 540, n_alt = 1
   Insn 390: point = 541, n_alt = 0
   Insn 389: point = 542, n_alt = 0
  BB 8
   Insn 381: point = 544, n_alt = 1
   Insn 892: point = 544, n_alt = 1
   Insn 380: point = 545, n_alt = 0
   Insn 379: point = 547, n_alt = 3
  BB 31
   Insn 784: point = 549, n_alt = -1
  BB 3
   Insn 325: point = 550, n_alt = -1
   Insn 324: point = 550, n_alt = 0
   Insn 323: point = 551, n_alt = 0
   Insn 322: point = 553, n_alt = 0
   Insn 321: point = 554, n_alt = 0
  BB 7
   Insn 767: point = 555, n_alt = -1
   Insn 373: point = 555, n_alt = 1
  BB 32
   Insn 787: point = 556, n_alt = -1
  BB 5
   Insn 335: point = 557, n_alt = -1
   Insn 334: point = 557, n_alt = 0
   Insn 333: point = 558, n_alt = 0
   Insn 332: point = 560, n_alt = 0
   Insn 331: point = 561, n_alt = 0
  BB 6
   Insn 765: point = 562, n_alt = -1
   Insn 367: point = 562, n_alt = 1
   Insn 366: point = 562, n_alt = 8
   Insn 365: point = 563, n_alt = 7
   Insn 364: point = 564, n_alt = 3
   Insn 363: point = 565, n_alt = 0
   Insn 362: point = 567, n_alt = 0
   Insn 361: point = 569, n_alt = 0
   Insn 360: point = 570, n_alt = 3
   Insn 891: point = 572, n_alt = 3
   Insn 359: point = 573, n_alt = 2
   Insn 358: point = 575, n_alt = 0
   Insn 357: point = 577, n_alt = 0
   Insn 356: point = 578, n_alt = 8
   Insn 355: point = 579, n_alt = 7
   Insn 354: point = 580, n_alt = 3
   Insn 353: point = 581, n_alt = 0
   Insn 352: point = 583, n_alt = 0
   Insn 351: point = 585, n_alt = 0
   Insn 350: point = 586, n_alt = 3
   Insn 890: point = 588, n_alt = 3
   Insn 349: point = 589, n_alt = 2
   Insn 348: point = 591, n_alt = 0
   Insn 347: point = 593, n_alt = 0
   Insn 346: point = 594, n_alt = 8
   Insn 345: point = 595, n_alt = 7
   Insn 344: point = 596, n_alt = 3
   Insn 343: point = 597, n_alt = 0
   Insn 342: point = 599, n_alt = 0
   Insn 341: point = 601, n_alt = 0
   Insn 340: point = 602, n_alt = 3
   Insn 889: point = 604, n_alt = 3
   Insn 339: point = 605, n_alt = 2
   Insn 338: point = 607, n_alt = 0
   Insn 337: point = 609, n_alt = 0
  BB 4
   Insn 329: point = 611, n_alt = 1
   Insn 328: point = 611, n_alt = 0
   Insn 327: point = 613, n_alt = 3
  BB 2
   Insn 319: point = 615, n_alt = 1
   Insn 318: point = 616, n_alt = 0
   Insn 317: point = 617, n_alt = 0
   Insn 888: point = 618, n_alt = 5
   Insn 316: point = 619, n_alt = 0
   Insn 887: point = 619, n_alt = -2
   Insn 312: point = 620, n_alt = 5
   Insn 311: point = 620, n_alt = 5
   Insn 310: point = 621, n_alt = -2
   Insn 308: point = 623, n_alt = 1
   Insn 306: point = 625, n_alt = 0
   Insn 307: point = 625, n_alt = 2
   Insn 886: point = 626, n_alt = -2
   Insn 305: point = 628, n_alt = 2
   Insn 885: point = 628, n_alt = -2
   Insn 304: point = 629, n_alt = 5
   Insn 303: point = 630, n_alt = 0
   Insn 302: point = 632, n_alt = 0
   Insn 301: point = 634, n_alt = 3
   Insn 884: point = 635, n_alt = -2
   Insn 300: point = 637, n_alt = 0
   Insn 883: point = 638, n_alt = -2
   Insn 298: point = 640, n_alt = 0
   Insn 299: point = 640, n_alt = 2
   Insn 297: point = 641, n_alt = 3
   Insn 296: point = 642, n_alt = 5
   Insn 295: point = 643, n_alt = 0
   Insn 294: point = 645, n_alt = 0
   Insn 293: point = 647, n_alt = 3
   Insn 882: point = 648, n_alt = 5
   Insn 292: point = 649, n_alt = 0
   Insn 881: point = 649, n_alt = -2
   Insn 288: point = 650, n_alt = 5
   Insn 287: point = 650, n_alt = 5
   Insn 286: point = 651, n_alt = -2
   Insn 284: point = 653, n_alt = 1
   Insn 282: point = 655, n_alt = 0
   Insn 283: point = 655, n_alt = 2
   Insn 880: point = 656, n_alt = -2
   Insn 281: point = 658, n_alt = 2
   Insn 879: point = 658, n_alt = -2
   Insn 280: point = 659, n_alt = 5
   Insn 279: point = 660, n_alt = 0
   Insn 278: point = 662, n_alt = 0
   Insn 277: point = 664, n_alt = 3
   Insn 878: point = 665, n_alt = -2
   Insn 276: point = 667, n_alt = 0
   Insn 877: point = 668, n_alt = -2
   Insn 274: point = 670, n_alt = 0
   Insn 275: point = 670, n_alt = 2
   Insn 273: point = 671, n_alt = 3
   Insn 272: point = 672, n_alt = 5
   Insn 271: point = 673, n_alt = 0
   Insn 270: point = 675, n_alt = 0
   Insn 269: point = 677, n_alt = 3
   Insn 876: point = 678, n_alt = 5
   Insn 268: point = 679, n_alt = 0
   Insn 875: point = 679, n_alt = -2
   Insn 264: point = 680, n_alt = 5
   Insn 263: point = 680, n_alt = 5
   Insn 262: point = 681, n_alt = -2
   Insn 260: point = 683, n_alt = 1
   Insn 258: point = 685, n_alt = 0
   Insn 259: point = 685, n_alt = 2
   Insn 874: point = 686, n_alt = -2
   Insn 257: point = 688, n_alt = 2
   Insn 873: point = 688, n_alt = -2
   Insn 256: point = 689, n_alt = 5
   Insn 255: point = 690, n_alt = 0
   Insn 254: point = 692, n_alt = 0
   Insn 253: point = 694, n_alt = 3
   Insn 872: point = 695, n_alt = -2
   Insn 252: point = 697, n_alt = 0
   Insn 871: point = 698, n_alt = -2
   Insn 250: point = 700, n_alt = 0
   Insn 251: point = 700, n_alt = 2
   Insn 249: point = 701, n_alt = 3
   Insn 248: point = 702, n_alt = 5
   Insn 247: point = 703, n_alt = 0
   Insn 246: point = 705, n_alt = 0
   Insn 245: point = 707, n_alt = 3
   Insn 870: point = 708, n_alt = 5
   Insn 244: point = 709, n_alt = 1
   Insn 869: point = 709, n_alt = -2
   Insn 868: point = 711, n_alt = -2
   Insn 243: point = 713, n_alt = 0
   Insn 867: point = 713, n_alt = -2
   Insn 239: point = 714, n_alt = 5
   Insn 238: point = 714, n_alt = 5
   Insn 237: point = 715, n_alt = -2
   Insn 235: point = 717, n_alt = 1
   Insn 233: point = 719, n_alt = 0
   Insn 234: point = 719, n_alt = 2
   Insn 866: point = 720, n_alt = -2
   Insn 232: point = 722, n_alt = 2
   Insn 865: point = 722, n_alt = -2
   Insn 231: point = 723, n_alt = 5
   Insn 230: point = 724, n_alt = 0
   Insn 229: point = 726, n_alt = 0
   Insn 228: point = 728, n_alt = 3
   Insn 864: point = 729, n_alt = -2
   Insn 227: point = 731, n_alt = 0
   Insn 863: point = 732, n_alt = -2
   Insn 225: point = 734, n_alt = 0
   Insn 226: point = 734, n_alt = 2
   Insn 862: point = 735, n_alt = -2
   Insn 224: point = 737, n_alt = 2
   Insn 861: point = 737, n_alt = -2
   Insn 223: point = 738, n_alt = 5
   Insn 222: point = 739, n_alt = 0
   Insn 221: point = 741, n_alt = 0
   Insn 220: point = 743, n_alt = 3
   Insn 860: point = 744, n_alt = -2
   Insn 219: point = 746, n_alt = 0
   Insn 859: point = 747, n_alt = -2
   Insn 217: point = 749, n_alt = 0
   Insn 218: point = 749, n_alt = 2
   Insn 216: point = 750, n_alt = 3
   Insn 215: point = 751, n_alt = 5
   Insn 214: point = 752, n_alt = 0
   Insn 213: point = 754, n_alt = 0
   Insn 212: point = 756, n_alt = 3
   Insn 857: point = 757, n_alt = 5
   Insn 211: point = 758, n_alt = 0
   Insn 858: point = 759, n_alt = -2
   Insn 856: point = 761, n_alt = -2
   Insn 855: point = 763, n_alt = -2
   Insn 210: point = 765, n_alt = 0
   Insn 854: point = 765, n_alt = -2
   Insn 206: point = 767, n_alt = 5
   Insn 205: point = 767, n_alt = 5
   Insn 204: point = 768, n_alt = -2
   Insn 202: point = 770, n_alt = 1
   Insn 200: point = 772, n_alt = 0
   Insn 201: point = 772, n_alt = 2
   Insn 853: point = 773, n_alt = -2
   Insn 199: point = 775, n_alt = 2
   Insn 852: point = 775, n_alt = -2
   Insn 927: point = 776, n_alt = -2
   Insn 198: point = 778, n_alt = 5
   Insn 197: point = 779, n_alt = 0
   Insn 196: point = 781, n_alt = 0
   Insn 195: point = 783, n_alt = 3
   Insn 928: point = 784, n_alt = 5
   Insn 851: point = 784, n_alt = -2
   Insn 194: point = 786, n_alt = 0
   Insn 850: point = 787, n_alt = -2
   Insn 192: point = 789, n_alt = 0
   Insn 193: point = 789, n_alt = 2
   Insn 849: point = 790, n_alt = -2
   Insn 191: point = 792, n_alt = 2
   Insn 848: point = 792, n_alt = -2
   Insn 929: point = 793, n_alt = -2
   Insn 190: point = 795, n_alt = 5
   Insn 189: point = 796, n_alt = 0
   Insn 188: point = 798, n_alt = 0
   Insn 187: point = 800, n_alt = 3
   Insn 930: point = 801, n_alt = 5
   Insn 847: point = 801, n_alt = -2
   Insn 186: point = 803, n_alt = 0
   Insn 846: point = 804, n_alt = -2
   Insn 184: point = 806, n_alt = 0
   Insn 185: point = 806, n_alt = 2
   Insn 183: point = 807, n_alt = 3
   Insn 182: point = 808, n_alt = 5
   Insn 181: point = 809, n_alt = 0
   Insn 180: point = 811, n_alt = 0
   Insn 179: point = 813, n_alt = 3
   Insn 845: point = 814, n_alt = 5
   Insn 178: point = 815, n_alt = 0
   Insn 844: point = 815, n_alt = -2
   Insn 174: point = 817, n_alt = 5
   Insn 173: point = 817, n_alt = 5
   Insn 172: point = 818, n_alt = -2
   Insn 170: point = 820, n_alt = 1
   Insn 168: point = 822, n_alt = 0
   Insn 169: point = 822, n_alt = 2
   Insn 843: point = 823, n_alt = -2
   Insn 167: point = 825, n_alt = 2
   Insn 842: point = 825, n_alt = -2
   Insn 931: point = 826, n_alt = -2
   Insn 166: point = 828, n_alt = 5
   Insn 165: point = 829, n_alt = 0
   Insn 164: point = 831, n_alt = 0
   Insn 163: point = 833, n_alt = 3
   Insn 932: point = 834, n_alt = 5
   Insn 841: point = 834, n_alt = -2
   Insn 162: point = 836, n_alt = 0
   Insn 840: point = 837, n_alt = -2
   Insn 160: point = 839, n_alt = 0
   Insn 161: point = 839, n_alt = 2
   Insn 159: point = 840, n_alt = 3
   Insn 158: point = 841, n_alt = 5
   Insn 157: point = 842, n_alt = 0
   Insn 156: point = 844, n_alt = 0
   Insn 155: point = 846, n_alt = 3
   Insn 151: point = 847, n_alt = 5
   Insn 150: point = 847, n_alt = 5
   Insn 149: point = 848, n_alt = -2
   Insn 147: point = 850, n_alt = 1
   Insn 145: point = 852, n_alt = 0
   Insn 146: point = 852, n_alt = 2
   Insn 144: point = 853, n_alt = 3
   Insn 143: point = 854, n_alt = 5
   Insn 142: point = 855, n_alt = 0
   Insn 141: point = 857, n_alt = 0
   Insn 140: point = 859, n_alt = 3
   Insn 839: point = 860, n_alt = 5
   Insn 139: point = 861, n_alt = 0
   Insn 838: point = 861, n_alt = -2
   Insn 135: point = 862, n_alt = 5
   Insn 134: point = 862, n_alt = 5
   Insn 133: point = 863, n_alt = -2
   Insn 131: point = 865, n_alt = 1
   Insn 129: point = 867, n_alt = 0
   Insn 130: point = 867, n_alt = 2
   Insn 837: point = 868, n_alt = -2
   Insn 128: point = 870, n_alt = 2
   Insn 836: point = 870, n_alt = -2
   Insn 127: point = 871, n_alt = 5
   Insn 126: point = 872, n_alt = 0
   Insn 125: point = 874, n_alt = 0
   Insn 124: point = 876, n_alt = 3
   Insn 835: point = 877, n_alt = -2
   Insn 123: point = 879, n_alt = 0
   Insn 834: point = 880, n_alt = -2
   Insn 121: point = 882, n_alt = 0
   Insn 122: point = 882, n_alt = 2
   Insn 120: point = 883, n_alt = 3
   Insn 119: point = 884, n_alt = 5
   Insn 118: point = 885, n_alt = 0
   Insn 117: point = 887, n_alt = 0
   Insn 116: point = 889, n_alt = 3
   Insn 833: point = 890, n_alt = 5
   Insn 115: point = 891, n_alt = 1
   Insn 832: point = 891, n_alt = -2
   Insn 831: point = 893, n_alt = -2
   Insn 114: point = 895, n_alt = 0
   Insn 830: point = 895, n_alt = -2
   Insn 110: point = 897, n_alt = 5
   Insn 109: point = 897, n_alt = 5
   Insn 108: point = 898, n_alt = -2
   Insn 106: point = 900, n_alt = 1
   Insn 104: point = 902, n_alt = 0
   Insn 105: point = 902, n_alt = 2
   Insn 829: point = 903, n_alt = -2
   Insn 103: point = 905, n_alt = 2
   Insn 828: point = 905, n_alt = -2
   Insn 102: point = 906, n_alt = 5
   Insn 101: point = 907, n_alt = 0
   Insn 100: point = 909, n_alt = 0
   Insn 99: point = 911, n_alt = 3
   Insn 827: point = 912, n_alt = -2
   Insn 98: point = 914, n_alt = 0
   Insn 826: point = 915, n_alt = -2
   Insn 96: point = 917, n_alt = 0
   Insn 97: point = 917, n_alt = 2
   Insn 825: point = 918, n_alt = -2
   Insn 95: point = 920, n_alt = 2
   Insn 824: point = 920, n_alt = -2
   Insn 933: point = 921, n_alt = -2
   Insn 94: point = 923, n_alt = 5
   Insn 93: point = 924, n_alt = 0
   Insn 92: point = 926, n_alt = 0
   Insn 91: point = 928, n_alt = 3
   Insn 934: point = 929, n_alt = 5
   Insn 823: point = 929, n_alt = -2
   Insn 90: point = 931, n_alt = 0
   Insn 822: point = 932, n_alt = -2
   Insn 88: point = 934, n_alt = 0
   Insn 89: point = 934, n_alt = 2
   Insn 87: point = 935, n_alt = 3
   Insn 86: point = 936, n_alt = 5
   Insn 85: point = 937, n_alt = 0
   Insn 84: point = 939, n_alt = 0
   Insn 83: point = 941, n_alt = 3
   Insn 821: point = 942, n_alt = 5
   Insn 82: point = 943, n_alt = 0
   Insn 820: point = 943, n_alt = -2
   Insn 78: point = 944, n_alt = 2
   Insn 77: point = 945, n_alt = 3
   Insn 76: point = 946, n_alt = -2
   Insn 74: point = 948, n_alt = 1
   Insn 72: point = 950, n_alt = 0
   Insn 73: point = 950, n_alt = 2
   Insn 819: point = 951, n_alt = -2
   Insn 71: point = 953, n_alt = 2
   Insn 818: point = 953, n_alt = -2
   Insn 70: point = 954, n_alt = 5
   Insn 69: point = 955, n_alt = 0
   Insn 68: point = 957, n_alt = 0
   Insn 67: point = 959, n_alt = 3
   Insn 817: point = 960, n_alt = -2
   Insn 66: point = 962, n_alt = 0
   Insn 816: point = 963, n_alt = -2
   Insn 64: point = 965, n_alt = 0
   Insn 65: point = 965, n_alt = 2
   Insn 63: point = 966, n_alt = 3
   Insn 62: point = 967, n_alt = 5
   Insn 61: point = 968, n_alt = 0
   Insn 60: point = 970, n_alt = 0
   Insn 59: point = 972, n_alt = 3
   Insn 815: point = 973, n_alt = 5
   Insn 58: point = 974, n_alt = 0
   Insn 814: point = 974, n_alt = -2
   Insn 54: point = 975, n_alt = 2
   Insn 53: point = 976, n_alt = 3
   Insn 52: point = 977, n_alt = -2
   Insn 50: point = 979, n_alt = 1
   Insn 48: point = 981, n_alt = 0
   Insn 49: point = 981, n_alt = 2
   Insn 813: point = 982, n_alt = -2
   Insn 47: point = 984, n_alt = 2
   Insn 812: point = 984, n_alt = -2
   Insn 46: point = 985, n_alt = 5
   Insn 45: point = 986, n_alt = 0
   Insn 44: point = 988, n_alt = 0
   Insn 43: point = 990, n_alt = 3
   Insn 811: point = 991, n_alt = -2
   Insn 42: point = 993, n_alt = 0
   Insn 810: point = 994, n_alt = -2
   Insn 40: point = 996, n_alt = 0
   Insn 41: point = 996, n_alt = 2
   Insn 39: point = 997, n_alt = 3
   Insn 38: point = 998, n_alt = 5
   Insn 37: point = 999, n_alt = 0
   Insn 36: point = 1001, n_alt = 0
   Insn 35: point = 1003, n_alt = 3
   Insn 809: point = 1004, n_alt = 5
   Insn 34: point = 1005, n_alt = 0
   Insn 808: point = 1005, n_alt = -2
   Insn 30: point = 1006, n_alt = 2
   Insn 29: point = 1007, n_alt = 3
   Insn 28: point = 1008, n_alt = -2
   Insn 26: point = 1010, n_alt = 1
   Insn 24: point = 1012, n_alt = 0
   Insn 25: point = 1012, n_alt = 2
   Insn 807: point = 1013, n_alt = -2
   Insn 23: point = 1015, n_alt = 2
   Insn 806: point = 1015, n_alt = -2
   Insn 22: point = 1016, n_alt = 5
   Insn 21: point = 1017, n_alt = 0
   Insn 20: point = 1019, n_alt = 0
   Insn 19: point = 1021, n_alt = 3
   Insn 805: point = 1022, n_alt = -2
   Insn 18: point = 1024, n_alt = 0
   Insn 804: point = 1025, n_alt = -2
   Insn 16: point = 1027, n_alt = 0
   Insn 17: point = 1027, n_alt = 2
   Insn 15: point = 1028, n_alt = 3
   Insn 14: point = 1029, n_alt = 5
   Insn 13: point = 1030, n_alt = 0
   Insn 12: point = 1032, n_alt = 0
   Insn 11: point = 1034, n_alt = 3
   Insn 7: point = 1035, n_alt = 5
   Insn 6: point = 1035, n_alt = 5
   Insn 5: point = 1035, n_alt = 5
   Insn 4: point = 1035, n_alt = 5
   Insn 3: point = 1035, n_alt = 5
   Insn 2: point = 1035, n_alt = 5
 r87: [1031..1032]
 r88: [1018..1019]
 r89: [1007..1008]
 r90: [1006..1035]
 r92: [1000..1001]
 r93: [987..988]
 r94: [976..977]
 r95: [975..1035]
 r97: [969..970]
 r98: [956..957]
 r99: [945..946]
 r100: [944..1035]
 r102: [938..939]
 r103: [925..926]
 r104: [908..909]
 r105: [897..898]
 r108: [892..893]
 r109: [886..887]
 r110: [873..874]
 r111: [862..863]
 r114: [856..857]
 r115: [847..848]
 r118: [843..844]
 r119: [830..831]
 r120: [817..818]
 r123: [810..811]
 r124: [797..798]
 r125: [780..781]
 r126: [767..768]
 r129: [762..763]
 r130: [753..754]
 r131: [740..741]
 r132: [725..726]
 r133: [714..715]
 r136: [710..711]
 r137: [704..705]
 r138: [691..692]
 r139: [680..681]
 r142: [674..675]
 r143: [661..662]
 r144: [650..651]
 r147: [644..645]
 r148: [631..632]
 r149: [620..621]
 r152: [606..607]
 r153: [603..605]
 r154: [598..602]
 r155: [598..599]
 r156: [594..597]
 r157: [590..591]
 r158: [587..589]
 r159: [582..586]
 r160: [582..583]
 r161: [578..581]
 r162: [574..575]
 r163: [571..573]
 r164: [566..570]
 r165: [566..567]
 r166: [562..565]
 r167: [530..531]
 r168: [527..529]
 r169: [520..526]
 r170: [522..523]
 r171: [520..521]
 r172: [515..519]
 r173: [515..516]
 r174: [512..514]
 r175: [509..511]
 r176: [463..464]
 r177: [460..462]
 r178: [455..459]
 r179: [455..456]
 r180: [451..454]
 r181: [504..505]
 r182: [501..503]
 r183: [494..500]
 r184: [496..497]
 r185: [494..495]
 r186: [489..493]
 r187: [489..490]
 r188: [486..488]
 r189: [471..485]
 r190: [481..482]
 r191: [478..480]
 r192: [473..477]
 r193: [473..474]
 r194: [468..472]
 r195: [468..470]
 r196: [446..447]
 r197: [443..445]
 r198: [425..442]
 r199: [438..439]
 r200: [435..437]
 r201: [430..434]
 r202: [430..431]
 r203: [427..429]
 r204: [425..426]
 r205: [400..424]
 r206: [420..421]
 r207: [417..419]
 r208: [410..416]
 r209: [412..413]
 r210: [410..411]
 r211: [405..409]
 r212: [405..406]
 r213: [402..404]
 r214: [400..401]
 r215: [394..395]
 r216: [391..393]
 r217: [386..390]
 r218: [386..387]
 r219: [383..385]
 r220: [364..382]
 r221: [378..379]
 r222: [374..377]
 r223: [369..373]
 r224: [369..370]
 r225: [366..368]
 r226: [364..365]
 r227: [362..363]
 r228: [358..359]
 r229: [355..357]
 r230: [348..354]
 r231: [350..351]
 r232: [348..349]
 r233: [343..347]
 r234: [343..344]
 r235: [340..342]
 r236: [313..339]
 r237: [335..336]
 r238: [333..334]
 r239: [330..332]
 r240: [323..329]
 r241: [325..326]
 r242: [323..324]
 r243: [318..322]
 r244: [318..319]
 r245: [315..317]
 r246: [313..314]
 r247: [311..312]
 r248: [308..310]
 r249: [290..307]
 r250: [303..304]
 r251: [300..302]
 r252: [295..299]
 r253: [295..296]
 r254: [292..294]
 r255: [290..291]
 r256: [288..289]
 r257: [286..287]
 r258: [284..285]
 r259: [251..281]
 r260: [277..278]
 r261: [274..276]
 r262: [269..273]
 r263: [269..270]
 r264: [266..268]
 r265: [251..265]
 r266: [261..262]
 r267: [258..260]
 r268: [253..257]
 r269: [253..254]
 r270: [248..252]
 r271: [248..250]
 r272: [213..243]
 r273: [239..240]
 r274: [236..238]
 r275: [231..235]
 r276: [231..232]
 r277: [228..230]
 r278: [213..227]
 r279: [223..224]
 r280: [220..222]
 r281: [215..219]
 r282: [215..216]
 r283: [210..214]
 r284: [210..212]
 r285: [206..207]
 r286: [202..205]
 r287: [197..201]
 r288: [197..198]
 r289: [181..196]
 r290: [192..193]
 r291: [189..191]
 r292: [184..188]
 r293: [184..185]
 r294: [178..183]
 r295: [178..180]
 r296: [141..142]
 r297: [137..140]
 r298: [132..136]
 r299: [132..133]
 r300: [129..131]
 r301: [126..128]
 r302: [99..125]
 r303: [121..122]
 r304: [117..120]
 r305: [112..116]
 r306: [112..113]
 r307: [109..111]
 r308: [106..108]
 r309: [104..105]
 r310: [101..103]
 r311: [99..100]
 r312: [97..98]
 r313: [79..96]
 r314: [92..93]
 r315: [89..91]
 r316: [84..88]
 r317: [84..85]
 r318: [81..83]
 r319: [79..80]
 r320: [56..78]
 r321: [74..75]
 r322: [71..73]
 r323: [66..70]
 r324: [66..67]
 r325: [63..65]
 r326: [60..62]
 r327: [58..59]
 r328: [56..57]
 r329: [54..55]
 r330: [46..50]
 r331: [46..47]
 r332: [44..45]
 r333: [32..36]
 r334: [32..33]
 r335: [30..31]
 r336: [23..24]
 r337: [20..22]
 r338: [15..19]
 r339: [15..16]
 r340: [12..14]
 r341: [44..53] [30..42] [12..28]
 r342: [1024..1028]
 r343: [0..1022]
 r344: [1011..1013]
 r345: [1009..1010]
 r350: [993..997]
 r351: [0..991]
 r352: [980..982]
 r353: [978..979]
 r358: [962..966]
 r359: [155..960]
 r360: [949..951]
 r361: [947..948]
 r366: [931..935]
 r368: [914..918]
 r369: [155..912]
 r370: [901..903]
 r371: [899..900]
 r376: [879..883]
 r377: [155..877]
 r378: [866..868]
 r379: [864..865]
 r384: [851..853]
 r385: [849..850]
 r389: [836..840]
 r391: [821..823]
 r392: [819..820]
 r397: [803..807]
 r399: [786..790]
 r401: [771..773]
 r402: [769..770]
 r407: [746..750]
 r408: [155..744]
 r409: [731..735]
 r410: [155..729]
 r411: [718..720]
 r412: [716..717]
 r417: [697..701]
 r418: [155..695]
 r419: [684..686]
 r420: [682..683]
 r425: [667..671]
 r426: [0..665]
 r427: [654..656]
 r428: [652..653]
 r433: [637..641]
 r434: [0..635]
 r435: [624..626]
 r436: [622..623]
 r441: [615..617]
 r442: [550..616]
 r443: [550..551]
 r444: [557..611]
 r445: [557..558]
 r447: [155..156]
 r448: [539..542]
 r450: [164..165]
 r451: [173..535]
 r452: [173..174]
 r453: [150..152]
 r454: [0..151]
 r455: [0..1]
 r456: [7..146]
 r457: [7..8]
 r458: [1033..1034]
 r459: [1029..1030]
 r460: [1026..1027]
 r461: [1020..1021]
 r462: [1016..1017]
 r463: [1011..1012]
 r464: [1002..1003]
 r465: [998..999]
 r466: [995..996]
 r467: [989..990]
 r468: [985..986]
 r469: [980..981]
 r470: [971..972]
 r471: [967..968]
 r472: [964..965]
 r473: [958..959]
 r474: [954..955]
 r475: [949..950]
 r476: [940..941]
 r477: [936..937]
 r478: [933..934]
 r479: [927..928]
 r480: [923..924]
 r481: [916..917]
 r482: [910..911]
 r483: [906..907]
 r484: [901..902]
 r485: [888..889]
 r486: [884..885]
 r487: [881..882]
 r488: [875..876]
 r489: [871..872]
 r490: [866..867]
 r491: [858..859]
 r492: [854..855]
 r493: [851..852]
 r494: [845..846]
 r495: [841..842]
 r496: [838..839]
 r497: [832..833]
 r498: [828..829]
 r499: [821..822]
 r500: [812..813]
 r501: [808..809]
 r502: [805..806]
 r503: [799..800]
 r504: [795..796]
 r505: [788..789]
 r506: [782..783]
 r507: [778..779]
 r508: [771..772]
 r509: [755..756]
 r510: [751..752]
 r511: [748..749]
 r512: [742..743]
 r513: [738..739]
 r514: [733..734]
 r515: [727..728]
 r516: [723..724]
 r517: [718..719]
 r518: [706..707]
 r519: [702..703]
 r520: [699..700]
 r521: [693..694]
 r522: [689..690]
 r523: [684..685]
 r524: [676..677]
 r525: [672..673]
 r526: [669..670]
 r527: [663..664]
 r528: [659..660]
 r529: [654..655]
 r530: [646..647]
 r531: [642..643]
 r532: [639..640]
 r533: [633..634]
 r534: [629..630]
 r535: [624..625]
 r536: [552..553]
 r537: [612..613]
 r538: [559..560]
 r539: [608..609]
 r540: [600..601]
 r541: [594..596]
 r542: [594..595]
 r543: [592..593]
 r544: [584..585]
 r545: [578..580]
 r546: [578..579]
 r547: [576..577]
 r548: [568..569]
 r549: [562..564]
 r550: [562..563]
 r551: [546..547]
 r552: [157..158]
 r553: [166..167]
 r554: [536..537]
 r555: [175..176]
 r556: [532..533]
 r557: [524..525]
 r558: [517..518]
 r559: [512..513]
 r560: [509..510]
 r561: [465..466]
 r562: [457..458]
 r563: [451..453]
 r564: [451..452]
 r565: [506..507]
 r566: [498..499]
 r567: [491..492]
 r568: [486..487]
 r569: [483..484]
 r570: [475..476]
 r571: [468..469]
 r572: [448..449]
 r573: [443..444]
 r574: [440..441]
 r575: [432..433]
 r576: [427..428]
 r577: [422..423]
 r578: [414..415]
 r579: [407..408]
 r580: [402..403]
 r581: [398..399]
 r582: [396..397]
 r583: [388..389]
 r584: [383..384]
 r585: [380..381]
 r586: [371..372]
 r587: [366..367]
 r588: [360..361]
 r589: [352..353]
 r590: [345..346]
 r591: [340..341]
 r592: [337..338]
 r593: [327..328]
 r594: [320..321]
 r595: [315..316]
 r596: [308..309]
 r597: [305..306]
 r598: [297..298]
 r599: [292..293]
 r600: [279..280]
 r601: [271..272]
 r602: [266..267]
 r603: [263..264]
 r604: [255..256]
 r605: [248..249]
 r606: [246..247]
 r607: [241..242]
 r608: [233..234]
 r609: [228..229]
 r610: [225..226]
 r611: [217..218]
 r612: [210..211]
 r613: [208..209]
 r614: [199..200]
 r615: [194..195]
 r616: [186..187]
 r617: [181..182]
 r618: [178..179]
 r619: [2..3]
 r620: [147..148]
 r621: [9..10]
 r622: [143..144]
 r623: [134..135]
 r624: [129..130]
 r625: [126..127]
 r626: [123..124]
 r627: [114..115]
 r628: [109..110]
 r629: [106..107]
 r630: [101..102]
 r631: [94..95]
 r632: [86..87]
 r633: [81..82]
 r634: [76..77]
 r635: [68..69]
 r636: [63..64]
 r637: [60..61]
 r638: [51..52]
 r639: [48..49]
 r641: [37..38]
 r642: [39..40]
 r643: [34..35]
 r644: [25..26]
 r645: [17..18]
 r646: [12..13]
 r647: [1023..1025]
 r648: [1014..1015]
 r649: [1004..1005]
 r650: [992..994]
 r651: [983..984]
 r652: [973..974]
 r653: [961..963]
 r654: [952..953]
 r655: [942..943]
 r656: [930..932]
 r657: [919..920]
 r658: [913..915]
 r659: [904..905]
 r660: [894..895]
 r661: [890..891]
 r662: [878..880]
 r663: [869..870]
 r664: [860..861]
 r665: [835..837]
 r666: [824..825]
 r667: [814..815]
 r668: [802..804]
 r669: [791..792]
 r670: [785..787]
 r671: [774..775]
 r672: [764..765]
 r673: [757..761]
 r674: [758..759]
 r675: [745..747]
 r676: [736..737]
 r677: [730..732]
 r678: [721..722]
 r679: [712..713]
 r680: [708..709]
 r681: [696..698]
 r682: [687..688]
 r683: [678..679]
 r684: [666..668]
 r685: [657..658]
 r686: [648..649]
 r687: [636..638]
 r688: [627..628]
 r689: [618..619]
 r690: [603..604]
 r691: [587..588]
 r692: [571..572]
 r693: [544..545]
 r694: [159..160]
 r695: [540..541]
 r696: [168..169]
 r697: [527..528]
 r699: [460..461]
 r700: [501..502]
 r702: [478..479]
 r704: [435..436]
 r706: [417..418]
 r708: [391..392]
 r709: [374..375]
 r710: [355..356]
 r711: [330..331]
 r712: [300..301]
 r713: [282..283]
 r714: [274..275]
 r715: [258..259]
 r716: [244..245]
 r717: [236..237]
 r718: [220..221]
 r719: [202..203]
 r720: [189..190]
 r721: [137..138]
 r722: [117..118]
 r723: [89..90]
 r724: [71..72]
 r725: [20..21]
 r726: [760..776]
 r727: [777..784]
 r728: [766..793]
 r729: [794..801]
 r730: [816..826]
 r731: [827..834]
 r732: [896..921]
 r733: [922..929]
 r737: [204..376]
 r739: [119..139]
Compressing live ranges: from 1036 to 816 - 78%
Ranges after the compression:
 r87: [812..813]
 r88: [802..803]
 r89: [792..793]
 r90: [792..815]
 r92: [786..787]
 r93: [776..777]
 r94: [766..767]
 r95: [766..815]
 r97: [760..761]
 r98: [750..751]
 r99: [740..741]
 r100: [740..815]
 r102: [734..735]
 r103: [724..725]
 r104: [712..713]
 r105: [702..703]
 r108: [698..699]
 r109: [692..693]
 r110: [682..683]
 r111: [672..673]
 r114: [666..667]
 r115: [658..659]
 r118: [654..655]
 r119: [644..645]
 r120: [634..635]
 r123: [628..629]
 r124: [618..619]
 r125: [606..607]
 r126: [596..597]
 r129: [592..593]
 r130: [584..585]
 r131: [574..575]
 r132: [562..563]
 r133: [552..553]
 r136: [548..549]
 r137: [542..543]
 r138: [532..533]
 r139: [522..523]
 r142: [516..517]
 r143: [506..507]
 r144: [496..497]
 r147: [490..491]
 r148: [480..481]
 r149: [470..471]
 r152: [460..461]
 r153: [458..459]
 r154: [454..457]
 r155: [454..455]
 r156: [452..453]
 r157: [448..449]
 r158: [446..447]
 r159: [442..445]
 r160: [442..443]
 r161: [440..441]
 r162: [436..437]
 r163: [434..435]
 r164: [430..433]
 r165: [430..431]
 r166: [428..429]
 r167: [408..409]
 r168: [406..407]
 r169: [400..405]
 r170: [402..403]
 r171: [400..401]
 r172: [396..399]
 r173: [396..397]
 r174: [394..395]
 r175: [392..393]
 r176: [356..357]
 r177: [354..355]
 r178: [350..353]
 r179: [350..351]
 r180: [348..349]
 r181: [388..389]
 r182: [386..387]
 r183: [380..385]
 r184: [382..383]
 r185: [380..381]
 r186: [376..379]
 r187: [376..377]
 r188: [374..375]
 r189: [362..373]
 r190: [370..371]
 r191: [368..369]
 r192: [364..367]
 r193: [364..365]
 r194: [360..363]
 r195: [360..361]
 r196: [344..345]
 r197: [342..343]
 r198: [328..341]
 r199: [338..339]
 r200: [336..337]
 r201: [332..335]
 r202: [332..333]
 r203: [330..331]
 r204: [328..329]
 r205: [308..327]
 r206: [324..325]
 r207: [322..323]
 r208: [316..321]
 r209: [318..319]
 r210: [316..317]
 r211: [312..315]
 r212: [312..313]
 r213: [310..311]
 r214: [308..309]
 r215: [302..303]
 r216: [300..301]
 r217: [296..299]
 r218: [296..297]
 r219: [294..295]
 r220: [280..293]
 r221: [290..291]
 r222: [288..289]
 r223: [284..287]
 r224: [284..285]
 r225: [282..283]
 r226: [280..281]
 r227: [278..279]
 r228: [274..275]
 r229: [272..273]
 r230: [266..271]
 r231: [268..269]
 r232: [266..267]
 r233: [262..265]
 r234: [262..263]
 r235: [260..261]
 r236: [238..259]
 r237: [256..257]
 r238: [254..255]
 r239: [252..253]
 r240: [246..251]
 r241: [248..249]
 r242: [246..247]
 r243: [242..245]
 r244: [242..243]
 r245: [240..241]
 r246: [238..239]
 r247: [236..237]
 r248: [234..235]
 r249: [220..233]
 r250: [230..231]
 r251: [228..229]
 r252: [224..227]
 r253: [224..225]
 r254: [222..223]
 r255: [220..221]
 r256: [218..219]
 r257: [216..217]
 r258: [214..215]
 r259: [188..211]
 r260: [208..209]
 r261: [206..207]
 r262: [202..205]
 r263: [202..203]
 r264: [200..201]
 r265: [188..199]
 r266: [196..197]
 r267: [194..195]
 r268: [190..193]
 r269: [190..191]
 r270: [186..189]
 r271: [186..187]
 r272: [158..181]
 r273: [178..179]
 r274: [176..177]
 r275: [172..175]
 r276: [172..173]
 r277: [170..171]
 r278: [158..169]
 r279: [166..167]
 r280: [164..165]
 r281: [160..163]
 r282: [160..161]
 r283: [156..159]
 r284: [156..157]
 r285: [152..153]
 r286: [148..151]
 r287: [144..147]
 r288: [144..145]
 r289: [132..143]
 r290: [140..141]
 r291: [138..139]
 r292: [134..137]
 r293: [134..135]
 r294: [130..133]
 r295: [130..131]
 r296: [106..107]
 r297: [104..105]
 r298: [100..103]
 r299: [100..101]
 r300: [98..99]
 r301: [96..97]
 r302: [74..95]
 r303: [92..93]
 r304: [88..91]
 r305: [84..87]
 r306: [84..85]
 r307: [82..83]
 r308: [80..81]
 r309: [78..79]
 r310: [76..77]
 r311: [74..75]
 r312: [72..73]
 r313: [58..71]
 r314: [68..69]
 r315: [66..67]
 r316: [62..65]
 r317: [62..63]
 r318: [60..61]
 r319: [58..59]
 r320: [40..57]
 r321: [54..55]
 r322: [52..53]
 r323: [48..51]
 r324: [48..49]
 r325: [46..47]
 r326: [44..45]
 r327: [42..43]
 r328: [40..41]
 r329: [38..39]
 r330: [32..35]
 r331: [32..33]
 r332: [30..31]
 r333: [22..25]
 r334: [22..23]
 r335: [20..21]
 r336: [16..17]
 r337: [14..15]
 r338: [10..13]
 r339: [10..11]
 r340: [8..9]
 r341: [8..37]
 r342: [806..809]
 r343: [0..805]
 r344: [796..797]
 r345: [794..795]
 r350: [780..783]
 r351: [0..779]
 r352: [770..771]
 r353: [768..769]
 r358: [754..757]
 r359: [114..753]
 r360: [744..745]
 r361: [742..743]
 r366: [728..731]
 r368: [716..719]
 r369: [114..715]
 r370: [706..707]
 r371: [704..705]
 r376: [686..689]
 r377: [114..685]
 r378: [676..677]
 r379: [674..675]
 r384: [662..663]
 r385: [660..661]
 r389: [648..651]
 r391: [638..639]
 r392: [636..637]
 r397: [622..625]
 r399: [610..613]
 r401: [600..601]
 r402: [598..599]
 r407: [578..581]
 r408: [114..577]
 r409: [566..569]
 r410: [114..565]
 r411: [556..557]
 r412: [554..555]
 r417: [536..539]
 r418: [114..535]
 r419: [526..527]
 r420: [524..525]
 r425: [510..513]
 r426: [0..509]
 r427: [500..501]
 r428: [498..499]
 r433: [484..487]
 r434: [0..483]
 r435: [474..475]
 r436: [472..473]
 r441: [466..467]
 r442: [420..467]
 r443: [420..421]
 r444: [424..463]
 r445: [424..425]
 r447: [114..115]
 r448: [414..415]
 r450: [120..121]
 r451: [126..411]
 r452: [126..127]
 r453: [112..113]
 r454: [0..113]
 r455: [0..1]
 r456: [4..109]
 r457: [4..5]
 r458: [814..815]
 r459: [810..811]
 r460: [808..809]
 r461: [804..805]
 r462: [800..801]
 r463: [796..797]
 r464: [788..789]
 r465: [784..785]
 r466: [782..783]
 r467: [778..779]
 r468: [774..775]
 r469: [770..771]
 r470: [762..763]
 r471: [758..759]
 r472: [756..757]
 r473: [752..753]
 r474: [748..749]
 r475: [744..745]
 r476: [736..737]
 r477: [732..733]
 r478: [730..731]
 r479: [726..727]
 r480: [722..723]
 r481: [718..719]
 r482: [714..715]
 r483: [710..711]
 r484: [706..707]
 r485: [694..695]
 r486: [690..691]
 r487: [688..689]
 r488: [684..685]
 r489: [680..681]
 r490: [676..677]
 r491: [668..669]
 r492: [664..665]
 r493: [662..663]
 r494: [656..657]
 r495: [652..653]
 r496: [650..651]
 r497: [646..647]
 r498: [642..643]
 r499: [638..639]
 r500: [630..631]
 r501: [626..627]
 r502: [624..625]
 r503: [620..621]
 r504: [616..617]
 r505: [612..613]
 r506: [608..609]
 r507: [604..605]
 r508: [600..601]
 r509: [586..587]
 r510: [582..583]
 r511: [580..581]
 r512: [576..577]
 r513: [572..573]
 r514: [568..569]
 r515: [564..565]
 r516: [560..561]
 r517: [556..557]
 r518: [544..545]
 r519: [540..541]
 r520: [538..539]
 r521: [534..535]
 r522: [530..531]
 r523: [526..527]
 r524: [518..519]
 r525: [514..515]
 r526: [512..513]
 r527: [508..509]
 r528: [504..505]
 r529: [500..501]
 r530: [492..493]
 r531: [488..489]
 r532: [486..487]
 r533: [482..483]
 r534: [478..479]
 r535: [474..475]
 r536: [422..423]
 r537: [464..465]
 r538: [426..427]
 r539: [462..463]
 r540: [456..457]
 r541: [452..453]
 r542: [452..453]
 r543: [450..451]
 r544: [444..445]
 r545: [440..441]
 r546: [440..441]
 r547: [438..439]
 r548: [432..433]
 r549: [428..429]
 r550: [428..429]
 r551: [418..419]
 r552: [116..117]
 r553: [122..123]
 r554: [412..413]
 r555: [128..129]
 r556: [410..411]
 r557: [404..405]
 r558: [398..399]
 r559: [394..395]
 r560: [392..393]
 r561: [358..359]
 r562: [352..353]
 r563: [348..349]
 r564: [348..349]
 r565: [390..391]
 r566: [384..385]
 r567: [378..379]
 r568: [374..375]
 r569: [372..373]
 r570: [366..367]
 r571: [360..361]
 r572: [346..347]
 r573: [342..343]
 r574: [340..341]
 r575: [334..335]
 r576: [330..331]
 r577: [326..327]
 r578: [320..321]
 r579: [314..315]
 r580: [310..311]
 r581: [306..307]
 r582: [304..305]
 r583: [298..299]
 r584: [294..295]
 r585: [292..293]
 r586: [286..287]
 r587: [282..283]
 r588: [276..277]
 r589: [270..271]
 r590: [264..265]
 r591: [260..261]
 r592: [258..259]
 r593: [250..251]
 r594: [244..245]
 r595: [240..241]
 r596: [234..235]
 r597: [232..233]
 r598: [226..227]
 r599: [222..223]
 r600: [210..211]
 r601: [204..205]
 r602: [200..201]
 r603: [198..199]
 r604: [192..193]
 r605: [186..187]
 r606: [184..185]
 r607: [180..181]
 r608: [174..175]
 r609: [170..171]
 r610: [168..169]
 r611: [162..163]
 r612: [156..157]
 r613: [154..155]
 r614: [146..147]
 r615: [142..143]
 r616: [136..137]
 r617: [132..133]
 r618: [130..131]
 r619: [2..3]
 r620: [110..111]
 r621: [6..7]
 r622: [108..109]
 r623: [102..103]
 r624: [98..99]
 r625: [96..97]
 r626: [94..95]
 r627: [86..87]
 r628: [82..83]
 r629: [80..81]
 r630: [76..77]
 r631: [70..71]
 r632: [64..65]
 r633: [60..61]
 r634: [56..57]
 r635: [50..51]
 r636: [46..47]
 r637: [44..45]
 r638: [36..37]
 r639: [34..35]
 r641: [26..27]
 r642: [28..29]
 r643: [24..25]
 r644: [18..19]
 r645: [12..13]
 r646: [8..9]
 r647: [806..807]
 r648: [798..799]
 r649: [790..791]
 r650: [780..781]
 r651: [772..773]
 r652: [764..765]
 r653: [754..755]
 r654: [746..747]
 r655: [738..739]
 r656: [728..729]
 r657: [720..721]
 r658: [716..717]
 r659: [708..709]
 r660: [700..701]
 r661: [696..697]
 r662: [686..687]
 r663: [678..679]
 r664: [670..671]
 r665: [648..649]
 r666: [640..641]
 r667: [632..633]
 r668: [622..623]
 r669: [614..615]
 r670: [610..611]
 r671: [602..603]
 r672: [594..595]
 r673: [588..591]
 r674: [588..589]
 r675: [578..579]
 r676: [570..571]
 r677: [566..567]
 r678: [558..559]
 r679: [550..551]
 r680: [546..547]
 r681: [536..537]
 r682: [528..529]
 r683: [520..521]
 r684: [510..511]
 r685: [502..503]
 r686: [494..495]
 r687: [484..485]
 r688: [476..477]
 r689: [468..469]
 r690: [458..459]
 r691: [446..447]
 r692: [434..435]
 r693: [416..417]
 r694: [118..119]
 r695: [414..415]
 r696: [124..125]
 r697: [406..407]
 r699: [354..355]
 r700: [386..387]
 r702: [368..369]
 r704: [336..337]
 r706: [322..323]
 r708: [300..301]
 r709: [288..289]
 r710: [272..273]
 r711: [252..253]
 r712: [228..229]
 r713: [212..213]
 r714: [206..207]
 r715: [194..195]
 r716: [182..183]
 r717: [176..177]
 r718: [164..165]
 r719: [148..149]
 r720: [138..139]
 r721: [104..105]
 r722: [88..89]
 r723: [66..67]
 r724: [52..53]
 r725: [14..15]
 r726: [590..603]
 r727: [604..609]
 r728: [596..615]
 r729: [616..621]
 r730: [634..641]
 r731: [642..647]
 r732: [702..721]
 r733: [722..727]
 r737: [150..289]
 r739: [90..105]

********** Assignment #3: **********


********** Local #5: **********

	   Spilling non-eliminable hard regs: 6
	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=440, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 20 to 7 (offset=376, prev_offset=0)
Can eliminate 20 to 6 (offset=-48, prev_offset=-48)
changing reg in insn 12
changing reg in insn 13
changing reg in insn 20
changing reg in insn 21
changing reg in insn 28
changing reg in insn 29
changing reg in insn 30
changing reg in insn 29
changing reg in insn 36
changing reg in insn 37
changing reg in insn 44
changing reg in insn 45
changing reg in insn 52
changing reg in insn 53
changing reg in insn 54
changing reg in insn 53
changing reg in insn 60
changing reg in insn 61
changing reg in insn 68
changing reg in insn 69
changing reg in insn 76
changing reg in insn 77
changing reg in insn 78
changing reg in insn 77
changing reg in insn 84
changing reg in insn 85
changing reg in insn 92
changing reg in insn 93
changing reg in insn 100
changing reg in insn 101
changing reg in insn 108
changing reg in insn 109
changing reg in insn 117
changing reg in insn 118
changing reg in insn 125
changing reg in insn 126
changing reg in insn 133
changing reg in insn 134
changing reg in insn 141
changing reg in insn 142
changing reg in insn 149
changing reg in insn 150
changing reg in insn 156
changing reg in insn 157
changing reg in insn 164
changing reg in insn 165
changing reg in insn 172
changing reg in insn 173
changing reg in insn 180
changing reg in insn 181
changing reg in insn 188
changing reg in insn 189
changing reg in insn 196
changing reg in insn 197
changing reg in insn 204
changing reg in insn 205
changing reg in insn 213
changing reg in insn 214
changing reg in insn 221
changing reg in insn 222
changing reg in insn 229
changing reg in insn 230
changing reg in insn 237
changing reg in insn 238
changing reg in insn 246
changing reg in insn 247
changing reg in insn 254
changing reg in insn 255
changing reg in insn 262
changing reg in insn 263
changing reg in insn 270
changing reg in insn 271
changing reg in insn 278
changing reg in insn 279
changing reg in insn 286
changing reg in insn 287
changing reg in insn 294
changing reg in insn 295
changing reg in insn 302
changing reg in insn 303
changing reg in insn 310
changing reg in insn 311
changing reg in insn 338
changing reg in insn 339
changing reg in insn 340
changing reg in insn 340
changing reg in insn 343
changing reg in insn 342
changing reg in insn 343
changing reg in insn 343
changing reg in insn 346
changing reg in insn 348
changing reg in insn 349
changing reg in insn 350
changing reg in insn 350
changing reg in insn 353
changing reg in insn 352
changing reg in insn 353
changing reg in insn 353
changing reg in insn 356
changing reg in insn 358
changing reg in insn 359
changing reg in insn 360
changing reg in insn 360
changing reg in insn 363
changing reg in insn 362
changing reg in insn 363
changing reg in insn 363
changing reg in insn 366
changing reg in insn 410
changing reg in insn 411
changing reg in insn 412
changing reg in insn 412
changing reg in insn 416
changing reg in insn 414
changing reg in insn 415
changing reg in insn 416
changing reg in insn 416
changing reg in insn 419
changing reg in insn 418
changing reg in insn 419
changing reg in insn 419
changing reg in insn 421
changing reg in insn 421
changing reg in insn 423
changing reg in insn 430
changing reg in insn 431
changing reg in insn 432
changing reg in insn 432
changing reg in insn 435
changing reg in insn 434
changing reg in insn 435
changing reg in insn 435
changing reg in insn 438
changing reg in insn 444
changing reg in insn 445
changing reg in insn 446
changing reg in insn 446
changing reg in insn 450
changing reg in insn 448
changing reg in insn 449
changing reg in insn 450
changing reg in insn 450
changing reg in insn 453
changing reg in insn 452
changing reg in insn 453
changing reg in insn 453
changing reg in insn 455
changing reg in insn 455
changing reg in insn 463
changing reg in insn 457
changing reg in insn 458
changing reg in insn 459
changing reg in insn 459
changing reg in insn 462
changing reg in insn 461
changing reg in insn 462
changing reg in insn 462
changing reg in insn 465
changing reg in insn 463
changing reg in insn 465
changing reg in insn 469
changing reg in insn 470
changing reg in insn 470
changing reg in insn 472
changing reg in insn 472
changing reg in insn 482
changing reg in insn 474
changing reg in insn 475
changing reg in insn 476
changing reg in insn 476
changing reg in insn 479
changing reg in insn 478
changing reg in insn 479
changing reg in insn 479
changing reg in insn 481
changing reg in insn 481
changing reg in insn 482
changing reg in insn 482
changing reg in insn 484
changing reg in insn 485
changing reg in insn 486
changing reg in insn 486
changing reg in insn 490
changing reg in insn 488
changing reg in insn 489
changing reg in insn 490
changing reg in insn 490
changing reg in insn 493
changing reg in insn 492
changing reg in insn 493
changing reg in insn 493
changing reg in insn 495
changing reg in insn 495
changing reg in insn 499
changing reg in insn 500
changing reg in insn 501
changing reg in insn 501
changing reg in insn 504
changing reg in insn 503
changing reg in insn 504
changing reg in insn 504
changing reg in insn 506
changing reg in insn 506
changing reg in insn 508
changing reg in insn 509
changing reg in insn 510
changing reg in insn 510
changing reg in insn 513
changing reg in insn 512
changing reg in insn 513
changing reg in insn 513
changing reg in insn 515
changing reg in insn 515
changing reg in insn 516
changing reg in insn 517
changing reg in insn 519
changing reg in insn 520
changing reg in insn 521
changing reg in insn 521
changing reg in insn 525
changing reg in insn 523
changing reg in insn 524
changing reg in insn 525
changing reg in insn 525
changing reg in insn 528
changing reg in insn 527
changing reg in insn 528
changing reg in insn 528
changing reg in insn 530
changing reg in insn 530
changing reg in insn 532
changing reg in insn 533
changing reg in insn 533
changing reg in insn 534
changing reg in insn 535
changing reg in insn 535
changing reg in insn 539
changing reg in insn 537
changing reg in insn 538
changing reg in insn 539
changing reg in insn 539
changing reg in insn 542
changing reg in insn 541
changing reg in insn 542
changing reg in insn 542
changing reg in insn 544
changing reg in insn 544
changing reg in insn 545
changing reg in insn 546
changing reg in insn 546
changing reg in insn 548
changing reg in insn 558
changing reg in insn 550
changing reg in insn 551
changing reg in insn 552
changing reg in insn 552
changing reg in insn 555
changing reg in insn 554
changing reg in insn 555
changing reg in insn 555
changing reg in insn 557
changing reg in insn 557
changing reg in insn 558
changing reg in insn 558
changing reg in insn 559
changing reg in insn 559
changing reg in insn 560
changing reg in insn 560
changing reg in insn 563
changing reg in insn 564
changing reg in insn 565
changing reg in insn 565
changing reg in insn 568
changing reg in insn 567
changing reg in insn 568
changing reg in insn 568
changing reg in insn 570
changing reg in insn 570
changing reg in insn 572
changing reg in insn 573
changing reg in insn 574
changing reg in insn 574
changing reg in insn 577
changing reg in insn 576
changing reg in insn 577
changing reg in insn 577
changing reg in insn 580
changing reg in insn 578
changing reg in insn 580
changing reg in insn 584
changing reg in insn 585
changing reg in insn 586
changing reg in insn 586
changing reg in insn 589
changing reg in insn 588
changing reg in insn 589
changing reg in insn 589
changing reg in insn 591
changing reg in insn 591
changing reg in insn 593
changing reg in insn 594
changing reg in insn 595
changing reg in insn 595
changing reg in insn 598
changing reg in insn 597
changing reg in insn 598
changing reg in insn 598
changing reg in insn 601
changing reg in insn 599
changing reg in insn 601
changing reg in insn 603
changing reg in insn 604
changing reg in insn 605
changing reg in insn 605
changing reg in insn 608
changing reg in insn 607
changing reg in insn 608
changing reg in insn 608
changing reg in insn 617
changing reg in insn 610
changing reg in insn 611
changing reg in insn 612
changing reg in insn 612
changing reg in insn 615
changing reg in insn 614
changing reg in insn 615
changing reg in insn 615
changing reg in insn 619
changing reg in insn 617
changing reg in insn 619
changing reg in insn 659
changing reg in insn 660
changing reg in insn 661
changing reg in insn 661
changing reg in insn 664
changing reg in insn 663
changing reg in insn 664
changing reg in insn 664
changing reg in insn 666
changing reg in insn 666
changing reg in insn 668
changing reg in insn 668
changing reg in insn 670
changing reg in insn 671
changing reg in insn 672
changing reg in insn 672
changing reg in insn 675
changing reg in insn 674
changing reg in insn 675
changing reg in insn 675
changing reg in insn 677
changing reg in insn 677
changing reg in insn 679
changing reg in insn 679
changing reg in insn 680
changing reg in insn 680
changing reg in insn 682
changing reg in insn 683
changing reg in insn 684
changing reg in insn 684
changing reg in insn 686
changing reg in insn 687
changing reg in insn 688
changing reg in insn 688
changing reg in insn 691
changing reg in insn 690
changing reg in insn 691
changing reg in insn 691
changing reg in insn 693
changing reg in insn 693
changing reg in insn 694
changing reg in insn 707
changing reg in insn 696
changing reg in insn 697
changing reg in insn 698
changing reg in insn 698
changing reg in insn 701
changing reg in insn 700
changing reg in insn 701
changing reg in insn 701
changing reg in insn 703
changing reg in insn 703
changing reg in insn 705
changing reg in insn 706
changing reg in insn 706
changing reg in insn 707
changing reg in insn 707
changing reg in insn 708
changing reg in insn 711
changing reg in insn 714
changing reg in insn 715
changing reg in insn 716
changing reg in insn 725
changing reg in insn 728
changing reg in insn 729
changing reg in insn 730
changing reg in insn 737
changing reg in insn 738
changing reg in insn 739
changing reg in insn 739
changing reg in insn 742
changing reg in insn 741
changing reg in insn 742
changing reg in insn 742
changing reg in insn 744
changing reg in insn 733
changing reg in insn 719
changing reg in insn 708
changing reg in insn 744
changing reg in insn 726
changing reg in insn 726
changing reg in insn 723
changing reg in insn 712
changing reg in insn 712
changing reg in insn 709
changing reg in insn 15
changing reg in insn 18
changing reg in insn 16
changing reg in insn 26
changing reg in insn 24
changing reg in insn 26
changing reg in insn 28
changing reg in insn 39
changing reg in insn 42
changing reg in insn 40
changing reg in insn 50
changing reg in insn 48
changing reg in insn 50
changing reg in insn 52
changing reg in insn 63
changing reg in insn 66
changing reg in insn 64
changing reg in insn 74
changing reg in insn 72
changing reg in insn 74
changing reg in insn 76
changing reg in insn 87
changing reg in insn 90
changing reg in insn 88
changing reg in insn 98
changing reg in insn 96
changing reg in insn 115
changing reg in insn 106
changing reg in insn 104
changing reg in insn 106
changing reg in insn 108
changing reg in insn 120
changing reg in insn 123
changing reg in insn 121
changing reg in insn 131
changing reg in insn 129
changing reg in insn 131
changing reg in insn 133
changing reg in insn 144
changing reg in insn 147
changing reg in insn 145
changing reg in insn 147
changing reg in insn 149
changing reg in insn 159
changing reg in insn 162
changing reg in insn 160
changing reg in insn 170
changing reg in insn 168
changing reg in insn 170
changing reg in insn 172
changing reg in insn 183
changing reg in insn 186
changing reg in insn 184
changing reg in insn 194
changing reg in insn 192
changing reg in insn 202
changing reg in insn 200
changing reg in insn 202
changing reg in insn 204
changing reg in insn 216
changing reg in insn 219
changing reg in insn 217
changing reg in insn 227
changing reg in insn 225
changing reg in insn 244
changing reg in insn 235
changing reg in insn 233
changing reg in insn 235
changing reg in insn 237
changing reg in insn 249
changing reg in insn 252
changing reg in insn 250
changing reg in insn 260
changing reg in insn 258
changing reg in insn 260
changing reg in insn 262
changing reg in insn 273
changing reg in insn 276
changing reg in insn 274
changing reg in insn 284
changing reg in insn 282
changing reg in insn 284
changing reg in insn 286
changing reg in insn 297
changing reg in insn 300
changing reg in insn 298
changing reg in insn 308
changing reg in insn 306
changing reg in insn 308
changing reg in insn 310
changing reg in insn 317
changing reg in insn 319
changing reg in insn 318
changing reg in insn 321
changing reg in insn 323
changing reg in insn 324
changing reg in insn 328
changing reg in insn 331
changing reg in insn 333
changing reg in insn 334
changing reg in insn 385
changing reg in insn 386
changing reg in insn 389
changing reg in insn 391
changing reg in insn 395
changing reg in insn 396
changing reg in insn 400
changing reg in insn 403
changing reg in insn 405
changing reg in insn 406
changing reg in insn 638
changing reg in insn 640
changing reg in insn 639
changing reg in insn 642
changing reg in insn 644
changing reg in insn 645
changing reg in insn 649
changing reg in insn 652
changing reg in insn 654
changing reg in insn 655
changing reg in insn 11
changing reg in insn 12
changing reg in insn 13
changing reg in insn 14
changing reg in insn 17
changing reg in insn 19
changing reg in insn 20
changing reg in insn 21
changing reg in insn 22
changing reg in insn 25
changing reg in insn 26
changing reg in insn 35
changing reg in insn 36
changing reg in insn 37
changing reg in insn 38
changing reg in insn 41
changing reg in insn 43
changing reg in insn 44
changing reg in insn 45
changing reg in insn 46
changing reg in insn 49
changing reg in insn 50
changing reg in insn 59
changing reg in insn 60
changing reg in insn 61
changing reg in insn 62
changing reg in insn 65
changing reg in insn 67
changing reg in insn 68
changing reg in insn 69
changing reg in insn 70
changing reg in insn 73
changing reg in insn 74
changing reg in insn 83
changing reg in insn 84
changing reg in insn 85
changing reg in insn 86
changing reg in insn 89
changing reg in insn 91
changing reg in insn 92
changing reg in insn 93
changing reg in insn 94
changing reg in insn 97
changing reg in insn 99
changing reg in insn 100
changing reg in insn 101
changing reg in insn 102
changing reg in insn 105
changing reg in insn 106
changing reg in insn 116
changing reg in insn 117
changing reg in insn 118
changing reg in insn 119
changing reg in insn 122
changing reg in insn 124
changing reg in insn 125
changing reg in insn 126
changing reg in insn 127
changing reg in insn 130
changing reg in insn 131
changing reg in insn 140
changing reg in insn 141
changing reg in insn 142
changing reg in insn 143
changing reg in insn 146
changing reg in insn 147
changing reg in insn 155
changing reg in insn 156
changing reg in insn 157
changing reg in insn 158
changing reg in insn 161
changing reg in insn 163
changing reg in insn 164
changing reg in insn 165
changing reg in insn 166
changing reg in insn 169
changing reg in insn 170
changing reg in insn 179
changing reg in insn 180
changing reg in insn 181
changing reg in insn 182
changing reg in insn 185
changing reg in insn 187
changing reg in insn 188
changing reg in insn 189
changing reg in insn 190
changing reg in insn 193
changing reg in insn 195
changing reg in insn 196
changing reg in insn 197
changing reg in insn 198
changing reg in insn 201
changing reg in insn 202
changing reg in insn 212
changing reg in insn 213
changing reg in insn 214
changing reg in insn 215
changing reg in insn 218
changing reg in insn 220
changing reg in insn 221
changing reg in insn 222
changing reg in insn 223
changing reg in insn 226
changing reg in insn 228
changing reg in insn 229
changing reg in insn 230
changing reg in insn 231
changing reg in insn 234
changing reg in insn 235
changing reg in insn 245
changing reg in insn 246
changing reg in insn 247
changing reg in insn 248
changing reg in insn 251
changing reg in insn 253
changing reg in insn 254
changing reg in insn 255
changing reg in insn 256
changing reg in insn 259
changing reg in insn 260
changing reg in insn 269
changing reg in insn 270
changing reg in insn 271
changing reg in insn 272
changing reg in insn 275
changing reg in insn 277
changing reg in insn 278
changing reg in insn 279
changing reg in insn 280
changing reg in insn 283
changing reg in insn 284
changing reg in insn 293
changing reg in insn 294
changing reg in insn 295
changing reg in insn 296
changing reg in insn 299
changing reg in insn 301
changing reg in insn 302
changing reg in insn 303
changing reg in insn 304
changing reg in insn 307
changing reg in insn 308
changing reg in insn 322
changing reg in insn 323
changing reg in insn 327
changing reg in insn 328
changing reg in insn 332
changing reg in insn 333
changing reg in insn 337
changing reg in insn 338
changing reg in insn 341
changing reg in insn 342
changing reg in insn 344
changing reg in insn 346
changing reg in insn 345
changing reg in insn 346
changing reg in insn 347
changing reg in insn 348
changing reg in insn 351
changing reg in insn 352
changing reg in insn 354
changing reg in insn 356
changing reg in insn 355
changing reg in insn 356
changing reg in insn 357
changing reg in insn 358
changing reg in insn 361
changing reg in insn 362
changing reg in insn 364
changing reg in insn 366
changing reg in insn 365
changing reg in insn 366
changing reg in insn 379
changing reg in insn 380
changing reg in insn 384
changing reg in insn 385
changing reg in insn 394
changing reg in insn 395
changing reg in insn 399
changing reg in insn 400
changing reg in insn 404
changing reg in insn 405
changing reg in insn 409
changing reg in insn 410
changing reg in insn 413
changing reg in insn 414
changing reg in insn 417
changing reg in insn 418
changing reg in insn 420
changing reg in insn 421
changing reg in insn 422
changing reg in insn 423
changing reg in insn 429
changing reg in insn 430
changing reg in insn 433
changing reg in insn 434
changing reg in insn 436
changing reg in insn 438
changing reg in insn 437
changing reg in insn 438
changing reg in insn 443
changing reg in insn 444
changing reg in insn 447
changing reg in insn 448
changing reg in insn 451
changing reg in insn 452
changing reg in insn 454
changing reg in insn 455
changing reg in insn 456
changing reg in insn 457
changing reg in insn 460
changing reg in insn 461
changing reg in insn 464
changing reg in insn 465
changing reg in insn 468
changing reg in insn 469
changing reg in insn 471
changing reg in insn 472
changing reg in insn 473
changing reg in insn 474
changing reg in insn 477
changing reg in insn 478
changing reg in insn 480
changing reg in insn 481
changing reg in insn 483
changing reg in insn 484
changing reg in insn 487
changing reg in insn 488
changing reg in insn 491
changing reg in insn 492
changing reg in insn 494
changing reg in insn 495
changing reg in insn 496
changing reg in insn 497
changing reg in insn 498
changing reg in insn 499
changing reg in insn 502
changing reg in insn 503
changing reg in insn 505
changing reg in insn 506
changing reg in insn 507
changing reg in insn 508
changing reg in insn 511
changing reg in insn 512
changing reg in insn 514
changing reg in insn 515
changing reg in insn 518
changing reg in insn 519
changing reg in insn 522
changing reg in insn 523
changing reg in insn 526
changing reg in insn 527
changing reg in insn 529
changing reg in insn 530
changing reg in insn 531
changing reg in insn 532
changing reg in insn 536
changing reg in insn 537
changing reg in insn 540
changing reg in insn 541
changing reg in insn 543
changing reg in insn 544
changing reg in insn 547
changing reg in insn 549
changing reg in insn 550
changing reg in insn 553
changing reg in insn 554
changing reg in insn 556
changing reg in insn 557
changing reg in insn 562
changing reg in insn 563
changing reg in insn 566
changing reg in insn 567
changing reg in insn 569
changing reg in insn 570
changing reg in insn 571
changing reg in insn 572
changing reg in insn 575
changing reg in insn 576
changing reg in insn 579
changing reg in insn 580
changing reg in insn 581
changing reg in insn 583
changing reg in insn 584
changing reg in insn 587
changing reg in insn 588
changing reg in insn 590
changing reg in insn 591
changing reg in insn 592
changing reg in insn 593
changing reg in insn 596
changing reg in insn 597
changing reg in insn 600
changing reg in insn 601
changing reg in insn 602
changing reg in insn 603
changing reg in insn 606
changing reg in insn 607
changing reg in insn 609
changing reg in insn 610
changing reg in insn 613
changing reg in insn 614
changing reg in insn 616
changing reg in insn 617
changing reg in insn 618
changing reg in insn 619
changing reg in insn 643
changing reg in insn 644
changing reg in insn 648
changing reg in insn 649
changing reg in insn 653
changing reg in insn 654
changing reg in insn 658
changing reg in insn 659
changing reg in insn 662
changing reg in insn 663
changing reg in insn 665
changing reg in insn 666
changing reg in insn 667
changing reg in insn 668
changing reg in insn 669
changing reg in insn 670
changing reg in insn 673
changing reg in insn 674
changing reg in insn 676
changing reg in insn 677
changing reg in insn 678
changing reg in insn 679
changing reg in insn 681
changing reg in insn 685
changing reg in insn 686
changing reg in insn 689
changing reg in insn 690
changing reg in insn 692
changing reg in insn 693
changing reg in insn 695
changing reg in insn 696
changing reg in insn 699
changing reg in insn 700
changing reg in insn 702
changing reg in insn 703
changing reg in insn 704
changing reg in insn 710
changing reg in insn 711
changing reg in insn 713
changing reg in insn 714
changing reg in insn 724
changing reg in insn 725
changing reg in insn 722
changing reg in insn 723
changing reg in insn 727
changing reg in insn 728
changing reg in insn 736
changing reg in insn 737
changing reg in insn 740
changing reg in insn 741
changing reg in insn 743
changing reg in insn 744
deleting insn with uid = 805.
deleting insn with uid = 807.
deleting insn with uid = 28.
deleting insn with uid = 810.
deleting insn with uid = 813.
deleting insn with uid = 52.
deleting insn with uid = 816.
deleting insn with uid = 819.
deleting insn with uid = 76.
deleting insn with uid = 823.
deleting insn with uid = 933.
deleting insn with uid = 825.
deleting insn with uid = 826.
deleting insn with uid = 829.
deleting insn with uid = 108.
deleting insn with uid = 831.
deleting insn with uid = 832.
deleting insn with uid = 834.
deleting insn with uid = 837.
deleting insn with uid = 133.
deleting insn with uid = 149.
deleting insn with uid = 841.
deleting insn with uid = 931.
deleting insn with uid = 843.
deleting insn with uid = 172.
deleting insn with uid = 844.
deleting insn with uid = 847.
deleting insn with uid = 929.
deleting insn with uid = 849.
deleting insn with uid = 851.
deleting insn with uid = 927.
deleting insn with uid = 853.
deleting insn with uid = 204.
deleting insn with uid = 855.
deleting insn with uid = 856.
deleting insn with uid = 858.
deleting insn with uid = 859.
deleting insn with uid = 862.
deleting insn with uid = 863.
deleting insn with uid = 866.
deleting insn with uid = 237.
deleting insn with uid = 868.
deleting insn with uid = 869.
deleting insn with uid = 871.
deleting insn with uid = 874.
deleting insn with uid = 262.
deleting insn with uid = 877.
deleting insn with uid = 880.
deleting insn with uid = 286.
deleting insn with uid = 884.
deleting insn with uid = 886.
deleting insn with uid = 310.
deleting insn with uid = 908.
deleting insn with uid = 559.
deleting insn with uid = 913.
deleting insn with uid = 917.
deleting insn with uid = 920.
deleting insn with uid = 922.
deleting insn with uid = 923.
deleting insn with uid = 706.
deleting insn with uid = 708.
starting the processing of deferred insns
ending the processing of deferred insns


clmax

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 17 [flags] 21 [xmm0] 22 [xmm1] 23 [xmm2] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;;  ref usage 	r0={312d,337u} r1={135d,135u} r2={17d,22u} r3={2d,7u} r4={19d,19u} r5={7d,14u} r6={1d,306u} r7={1d,37u} r17={160d,47u} r20={1d,1u,1e} r21={36d,39u} r22={18d,17u} r23={4d,3u} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={2d,7u} r38={2d,5u} r39={2d,4u} r40={2d,6u} r41={2d,3u} r42={2d,5u} r43={2d,3u} r44={3d,6u} 
;;    total ref usage 1759{735d,1023u,1e} in 722{722 regular + 0 call} insns.
(note 1 0 9 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9] 90 95 100
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9] 90 95 100 106 112 116 121 127 134 140 145 150
;; lr  def 	 17 [flags
(note 9 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 9 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -296 [0xfffffffffffffed8])) [4 deta+0 S8 A64])
        (reg:DI 5 di [ deta ])) "CLMAX.f":1 85 {*movdi_internal}
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -304 [0xfffffffffffffed0])) [4 pdsl+0 S8 A64])
        (reg:DI 4 si [ pdsl ])) "CLMAX.f":1 85 {*movdi_internal}
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -312 [0xfffffffffffffec8])) [4 htm+0 S8 A64])
        (reg:DI 1 dx [ htm ])) "CLMAX.f":1 85 {*movdi_internal}
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -320 [0xfffffffffffffec0])) [4 q2+0 S8 A64])
        (reg:DI 2 cx [ q2 ])) "CLMAX.f":1 85 {*movdi_internal}
     (nil))
(insn 6 5 7 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -328 [0xfffffffffffffeb8])) [4 zint+0 S8 A64])
        (reg:DI 37 r8 [ zint ])) "CLMAX.f":1 85 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -336 [0xfffffffffffffeb0])) [4 sm+0 S8 A64])
        (reg:DI 38 r9 [ sm ])) "CLMAX.f":1 85 {*movdi_internal}
     (nil))
(note 8 7 11 2 NOTE_INSN_FUNCTION_BEG)
(insn 11 8 12 2 (set (reg/f:DI 0 ax [458])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 32 [0x20])) [6 im+0 S8 A64])) "CLMAX.f":4 85 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:SI 0 ax [orig:87 _1 ] [87])
        (mem:SI (reg/f:DI 0 ax [458]) [1 *im_273(D)+0 S4 A32])) "CLMAX.f":4 86 {*movsi_internal}
     (nil))
(insn 13 12 14 2 (set (reg:DI 0 ax [459])
        (sign_extend:DI (reg:SI 0 ax [orig:87 _1 ] [87]))) "CLMAX.f":4 149 {*extendsidi2_rex64}
     (nil))
(insn 14 13 15 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [2 ubound.51+0 S8 A64])
        (reg:DI 0 ax [459])) "CLMAX.f":4 85 {*movdi_internal}
     (nil))
(insn 15 14 17 2 (set (reg:DI 0 ax [orig:342 stride.53_275 ] [342])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [2 ubound.51+0 S8 A64])) "CLMAX.f":4 85 {*movdi_internal}
     (nil))
(insn 17 15 16 2 (set (reg:DI 1 dx [460])
        (const_int 0 [0])) "CLMAX.f":4 85 {*movdi_internal}
     (nil))
(insn 16 17 804 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 0 ax [orig:342 stride.53_275 ] [342])
            (const_int 0 [0]))) "CLMAX.f":4 8 {*cmpdi_ccno_1}
     (nil))
(insn 804 16 18 2 (set (reg:DI 3 bx [460])
        (reg:DI 1 dx [460])) "CLMAX.f":4 85 {*movdi_internal}
     (nil))
(insn 18 804 19 2 (set (reg:DI 3 bx [460])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 0 ax [orig:342 stride.53_275 ] [342])
            (reg:DI 3 bx [460]))) "CLMAX.f":4 1003 {*movdicc_noc}
     (nil))
(insn 19 18 20 2 (set (reg/f:DI 0 ax [461])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 40 [0x28])) [6 jm+0 S8 A64])) "CLMAX.f":4 85 {*movdi_internal}
     (nil))
(insn 20 19 21 2 (set (reg:SI 0 ax [orig:88 _2 ] [88])
        (mem:SI (reg/f:DI 0 ax [461]) [1 *jm_277(D)+0 S4 A32])) "CLMAX.f":4 86 {*movsi_internal}
     (nil))
(insn 21 20 22 2 (set (reg:DI 0 ax [462])
        (sign_extend:DI (reg:SI 0 ax [orig:88 _2 ] [88]))) "CLMAX.f":4 149 {*extendsidi2_rex64}
     (nil))
(insn 22 21 806 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -80 [0xffffffffffffffb0])) [2 ubound.52+0 S8 A64])
        (reg:DI 0 ax [462])) "CLMAX.f":4 85 {*movdi_internal}
     (nil))
(insn 806 22 23 2 (set (reg:DI 0 ax [orig:344 size.55_279 ] [344])
        (reg:DI 3 bx [orig:343 stride.53_276 ] [343])) "CLMAX.f":4 85 {*movdi_internal}
     (nil))
(insn 23 806 25 2 (parallel [
            (set (reg:DI 0 ax [orig:344 size.55_279 ] [344])
                (mult:DI (reg:DI 0 ax [orig:344 size.55_279 ] [344])
                    (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                            (const_int -80 [0xffffffffffffffb0])) [2 ubound.52+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) "CLMAX.f":4 349 {*muldi3_1}
     (nil))
(insn 25 23 24 2 (set (reg:DI 1 dx [463])
        (const_int 0 [0])) "CLMAX.f":4 85 {*movdi_internal}
     (nil))
(insn 24 25 26 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 0 ax [orig:344 size.55_279 ] [344])
            (const_int 0 [0]))) "CLMAX.f":4 8 {*cmpdi_ccno_1}
     (nil))
(insn 26 24 29 2 (set (reg:DI 0 ax [orig:345 size.55_280 ] [345])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 0 ax [orig:344 size.55_279 ] [344])
            (reg:DI 1 dx [463]))) "CLMAX.f":4 1003 {*movdicc_noc}
     (nil))
(insn 29 26 30 2 (set (reg:DI 39 r10 [orig:90 _4 ] [90])
        (reg:DI 0 ax [orig:89 size.65_3 ] [89])) "CLMAX.f":4 85 {*movdi_internal}
     (nil))
(insn 30 29 808 2 (set (reg:DI 40 r11 [ _4+8 ])
        (const_int 0 [0])) "CLMAX.f":4 85 {*movdi_internal}
     (nil))
(insn 808 30 34 2 (set (reg:DI 0 ax [orig:349 offset.54_284 ] [349])
        (reg:DI 3 bx [orig:343 stride.53_276 ] [343])) "CLMAX.f":4 85 {*movdi_internal}
     (nil))
(insn 34 808 809 2 (set (reg:DI 0 ax [orig:349 offset.54_284 ] [349])
        (not:DI (reg:DI 0 ax [orig:349 offset.54_284 ] [349]))) "CLMAX.f":4 532 {*one_cmpldi2_1}
     (nil))
(insn 809 34 35 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -344 [0xfffffffffffffea8])) [8 %sfp+-296 S8 A64])
        (reg:DI 0 ax [orig:349 offset.54_284 ] [349])) "CLMAX.f":4 85 {*movdi_internal}
     (nil))
(insn 35 809 36 2 (set (reg/f:DI 0 ax [464])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 32 [0x20])) [6 im+0 S8 A64])) "CLMAX.f":4 85 {*movdi_internal}
     (nil))
(insn 36 35 37 2 (set (reg:SI 0 ax [orig:92 _6 ] [92])
        (mem:SI (reg/f:DI 0 ax [464]) [1 *im_273(D)+0 S4 A32])) "CLMAX.f":4 86 {*movsi_internal}
     (nil))
(insn 37 36 38 2 (set (reg:DI 0 ax [465])
        (sign_extend:DI (reg:SI 0 ax [orig:92 _6 ] [92]))) "CLMAX.f":4 149 {*extendsidi2_rex64}
     (nil))
(insn 38 37 39 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [2 ubound.46+0 S8 A64])
        (reg:DI 0 ax [465])) "CLMAX.f":4 85 {*movdi_internal}
     (nil))
(insn 39 38 41 2 (set (reg:DI 0 ax [orig:350 stride.48_286 ] [350])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [2 ubound.46+0 S8 A64])) "CLMAX.f":4 85 {*movdi_internal}
     (nil))
(insn 41 39 40 2 (set (reg:DI 1 dx [466])
        (const_int 0 [0])) "CLMAX.f":4 85 {*movdi_internal}
     (nil))
(insn 40 41 42 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 0 ax [orig:350 stride.48_286 ] [350])
            (const_int 0 [0]))) "CLMAX.f":4 8 {*cmpdi_ccno_1}
     (nil))
(insn 42 40 811 2 (set (reg:DI 1 dx [466])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 0 ax [orig:350 stride.48_286 ] [350])
            (reg:DI 1 dx [466]))) "CLMAX.f":4 1003 {*movdicc_noc}
     (nil))
(insn 811 42 43 2 (set (reg:DI 40 r11 [orig:351 stride.48_287 ] [351])
        (reg:DI 1 dx [466])) "CLMAX.f":4 85 {*movdi_internal}
     (nil))
(insn 43 811 44 2 (set (reg/f:DI 0 ax [467])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 40 [0x28])) [6 jm+0 S8 A64])) "CLMAX.f":4 85 {*movdi_internal}
     (nil))
(insn 44 43 45 2 (set (reg:SI 0 ax [orig:93 _7 ] [93])
        (mem:SI (reg/f:DI 0 ax [467]) [1 *jm_277(D)+0 S4 A32])) "CLMAX.f":4 86 {*movsi_internal}
     (nil))
(insn 45 44 46 2 (set (reg:DI 0 ax [468])
        (sign_extend:DI (reg:SI 0 ax [orig:93 _7 ] [93]))) "CLMAX.f":4 149 {*extendsidi2_rex64}
     (nil))
(insn 46 45 812 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [2 ubound.47+0 S8 A64])
        (reg:DI 0 ax [468])) "CLMAX.f":4 85 {*movdi_internal}
     (nil))
(insn 812 46 47 2 (set (reg:DI 0 ax [orig:352 size.50_289 ] [352])
        (reg:DI 40 r11 [orig:351 stride.48_287 ] [351])) "CLMAX.f":4 85 {*movdi_internal}
     (nil))
(insn 47 812 49 2 (parallel [
            (set (reg:DI 0 ax [orig:352 size.50_289 ] [352])
                (mult:DI (reg:DI 0 ax [orig:352 size.50_289 ] [352])
                    (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                            (const_int -96 [0xffffffffffffffa0])) [2 ubound.47+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) "CLMAX.f":4 349 {*muldi3_1}
     (nil))
(insn 49 47 48 2 (set (reg:DI 1 dx [469])
        (const_int 0 [0])) "CLMAX.f":4 85 {*movdi_internal}
     (nil))
(insn 48 49 50 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 0 ax [orig:352 size.50_289 ] [352])
            (const_int 0 [0]))) "CLMAX.f":4 8 {*cmpdi_ccno_1}
     (nil))
(insn 50 48 53 2 (set (reg:DI 0 ax [orig:353 size.50_290 ] [353])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 0 ax [orig:352 size.50_289 ] [352])
            (reg:DI 1 dx [469]))) "CLMAX.f":4 1003 {*movdicc_noc}
     (nil))
(insn 53 50 54 2 (set (reg:DI 41 r12 [orig:95 _9 ] [95])
        (reg:DI 0 ax [orig:94 size.67_8 ] [94])) "CLMAX.f":4 85 {*movdi_internal}
     (nil))
(insn 54 53 814 2 (set (reg:DI 42 r13 [ _9+8 ])
        (const_int 0 [0])) "CLMAX.f":4 85 {*movdi_internal}
     (nil))
(insn 814 54 58 2 (set (reg:DI 0 ax [orig:357 offset.49_294 ] [357])
        (reg:DI 40 r11 [orig:351 stride.48_287 ] [351])) "CLMAX.f":4 85 {*movdi_internal}
     (nil))
(insn 58 814 815 2 (set (reg:DI 0 ax [orig:357 offset.49_294 ] [357])
        (not:DI (reg:DI 0 ax [orig:357 offset.49_294 ] [357]))) "CLMAX.f":4 532 {*one_cmpldi2_1}
     (nil))
(insn 815 58 59 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -352 [0xfffffffffffffea0])) [8 %sfp+-304 S8 A64])
        (reg:DI 0 ax [orig:357 offset.49_294 ] [357])) "CLMAX.f":4 85 {*movdi_internal}
     (nil))
(insn 59 815 60 2 (set (reg/f:DI 0 ax [470])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 32 [0x20])) [6 im+0 S8 A64])) "CLMAX.f":4 85 {*movdi_internal}
     (nil))
(insn 60 59 61 2 (set (reg:SI 0 ax [orig:97 _11 ] [97])
        (mem:SI (reg/f:DI 0 ax [470]) [1 *im_273(D)+0 S4 A32])) "CLMAX.f":4 86 {*movsi_internal}
     (nil))
(insn 61 60 62 2 (set (reg:DI 0 ax [471])
        (sign_extend:DI (reg:SI 0 ax [orig:97 _11 ] [97]))) "CLMAX.f":4 149 {*extendsidi2_rex64}
     (nil))
(insn 62 61 63 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [2 ubound.31+0 S8 A64])
        (reg:DI 0 ax [471])) "CLMAX.f":4 85 {*movdi_internal}
     (nil))
(insn 63 62 65 2 (set (reg:DI 0 ax [orig:358 stride.33_296 ] [358])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [2 ubound.31+0 S8 A64])) "CLMAX.f":4 85 {*movdi_internal}
     (nil))
(insn 65 63 64 2 (set (reg:DI 1 dx [472])
        (const_int 0 [0])) "CLMAX.f":4 85 {*movdi_internal}
     (nil))
(insn 64 65 66 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 0 ax [orig:358 stride.33_296 ] [358])
            (const_int 0 [0]))) "CLMAX.f":4 8 {*cmpdi_ccno_1}
     (nil))
(insn 66 64 817 2 (set (reg:DI 1 dx [472])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 0 ax [orig:358 stride.33_296 ] [358])
            (reg:DI 1 dx [472]))) "CLMAX.f":4 1003 {*movdicc_noc}
     (nil))
(insn 817 66 67 2 (set (reg:DI 42 r13 [orig:359 stride.33_297 ] [359])
        (reg:DI 1 dx [472])) "CLMAX.f":4 85 {*movdi_internal}
     (nil))
(insn 67 817 68 2 (set (reg/f:DI 0 ax [473])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 40 [0x28])) [6 jm+0 S8 A64])) "CLMAX.f":4 85 {*movdi_internal}
     (nil))
(insn 68 67 69 2 (set (reg:SI 0 ax [orig:98 _12 ] [98])
        (mem:SI (reg/f:DI 0 ax [473]) [1 *jm_277(D)+0 S4 A32])) "CLMAX.f":4 86 {*movsi_internal}
     (nil))
(insn 69 68 70 2 (set (reg:DI 0 ax [474])
        (sign_extend:DI (reg:SI 0 ax [orig:98 _12 ] [98]))) "CLMAX.f":4 149 {*extendsidi2_rex64}
     (nil))
(insn 70 69 818 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [2 ubound.32+0 S8 A64])
        (reg:DI 0 ax [474])) "CLMAX.f":4 85 {*movdi_internal}
     (nil))
(insn 818 70 71 2 (set (reg:DI 0 ax [orig:360 size.35_299 ] [360])
        (reg:DI 42 r13 [orig:359 stride.33_297 ] [359])) "CLMAX.f":4 85 {*movdi_internal}
     (nil))
(insn 71 818 73 2 (parallel [
            (set (reg:DI 0 ax [orig:360 size.35_299 ] [360])
                (mult:DI (reg:DI 0 ax [orig:360 size.35_299 ] [360])
                    (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                            (const_int -112 [0xffffffffffffff90])) [2 ubound.32+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) "CLMAX.f":4 349 {*muldi3_1}
     (nil))
(insn 73 71 72 2 (set (reg:DI 1 dx [475])
        (const_int 0 [0])) "CLMAX.f":4 85 {*movdi_internal}
     (nil))
(insn 72 73 74 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 0 ax [orig:360 size.35_299 ] [360])
            (const_int 0 [0]))) "CLMAX.f":4 8 {*cmpdi_ccno_1}
     (nil))
(insn 74 72 77 2 (set (reg:DI 0 ax [orig:361 size.35_300 ] [361])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 0 ax [orig:360 size.35_299 ] [360])
            (reg:DI 1 dx [475]))) "CLMAX.f":4 1003 {*movdicc_noc}
     (nil))
(insn 77 74 78 2 (set (reg:DI 43 r14 [orig:100 _14 ] [100])
        (reg:DI 0 ax [orig:99 size.69_13 ] [99])) "CLMAX.f":4 85 {*movdi_internal}
     (nil))
(insn 78 77 820 2 (set (reg:DI 44 r15 [ _14+8 ])
        (const_int 0 [0])) "CLMAX.f":4 85 {*movdi_internal}
     (nil))
(insn 820 78 82 2 (set (reg:DI 0 ax [orig:365 offset.34_304 ] [365])
        (reg:DI 42 r13 [orig:359 stride.33_297 ] [359])) "CLMAX.f":4 85 {*movdi_internal}
     (nil))
(insn 82 820 821 2 (set (reg:DI 0 ax [orig:365 offset.34_304 ] [365])
        (not:DI (reg:DI 0 ax [orig:365 offset.34_304 ] [365]))) "CLMAX.f":4 532 {*one_cmpldi2_1}
     (nil))
(insn 821 82 83 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -360 [0xfffffffffffffe98])) [8 %sfp+-312 S8 A64])
        (reg:DI 0 ax [orig:365 offset.34_304 ] [365])) "CLMAX.f":4 85 {*movdi_internal}
     (nil))
(insn 83 821 84 2 (set (reg/f:DI 0 ax [476])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 32 [0x20])) [6 im+0 S8 A64])) "CLMAX.f":2 85 {*movdi_internal}
     (nil))
(insn 84 83 85 2 (set (reg:SI 0 ax [orig:102 _16 ] [102])
        (mem:SI (reg/f:DI 0 ax [476]) [1 *im_273(D)+0 S4 A32])) "CLMAX.f":2 86 {*movsi_internal}
     (nil))
(insn 85 84 86 2 (set (reg:DI 0 ax [477])
        (sign_extend:DI (reg:SI 0 ax [orig:102 _16 ] [102]))) "CLMAX.f":2 149 {*extendsidi2_rex64}
     (nil))
(insn 86 85 87 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 ubound.24+0 S8 A64])
        (reg:DI 0 ax [477])) "CLMAX.f":2 85 {*movdi_internal}
     (nil))
(insn 87 86 89 2 (set (reg:DI 0 ax [orig:366 stride.26_306 ] [366])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 ubound.24+0 S8 A64])) "CLMAX.f":2 85 {*movdi_internal}
     (nil))
(insn 89 87 88 2 (set (reg:DI 1 dx [478])
        (const_int 0 [0])) "CLMAX.f":2 85 {*movdi_internal}
     (nil))
(insn 88 89 822 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 0 ax [orig:366 stride.26_306 ] [366])
            (const_int 0 [0]))) "CLMAX.f":2 8 {*cmpdi_ccno_1}
     (nil))
(insn 822 88 90 2 (set (reg:DI 5 di [478])
        (reg:DI 1 dx [478])) "CLMAX.f":2 85 {*movdi_internal}
     (nil))
(insn 90 822 934 2 (set (reg:DI 5 di [478])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 0 ax [orig:366 stride.26_306 ] [366])
            (reg:DI 5 di [478]))) "CLMAX.f":2 1003 {*movdicc_noc}
     (nil))
(insn 934 90 91 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -368 [0xfffffffffffffe90])) [8 %sfp+-320 S8 A64])
        (reg:DI 5 di [orig:367 stride.26_307 ] [367])) "CLMAX.f":2 85 {*movdi_internal}
     (nil))
(insn 91 934 92 2 (set (reg/f:DI 0 ax [479])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 40 [0x28])) [6 jm+0 S8 A64])) "CLMAX.f":2 85 {*movdi_internal}
     (nil))
(insn 92 91 93 2 (set (reg:SI 0 ax [orig:103 _17 ] [103])
        (mem:SI (reg/f:DI 0 ax [479]) [1 *jm_277(D)+0 S4 A32])) "CLMAX.f":2 86 {*movsi_internal}
     (nil))
(insn 93 92 94 2 (set (reg:DI 0 ax [480])
        (sign_extend:DI (reg:SI 0 ax [orig:103 _17 ] [103]))) "CLMAX.f":2 149 {*extendsidi2_rex64}
     (nil))
(insn 94 93 824 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -128 [0xffffffffffffff80])) [2 ubound.25+0 S8 A64])
        (reg:DI 0 ax [480])) "CLMAX.f":2 85 {*movdi_internal}
     (nil))
(insn 824 94 95 2 (set (reg:DI 0 ax [orig:368 stride.28_309 ] [368])
        (reg:DI 5 di [orig:367 stride.26_307 ] [367])) "CLMAX.f":2 85 {*movdi_internal}
     (nil))
(insn 95 824 97 2 (parallel [
            (set (reg:DI 0 ax [orig:368 stride.28_309 ] [368])
                (mult:DI (reg:DI 0 ax [orig:368 stride.28_309 ] [368])
                    (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                            (const_int -128 [0xffffffffffffff80])) [2 ubound.25+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) "CLMAX.f":2 349 {*muldi3_1}
     (nil))
(insn 97 95 96 2 (set (reg:DI 1 dx [481])
        (const_int 0 [0])) "CLMAX.f":2 85 {*movdi_internal}
     (nil))
(insn 96 97 98 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 0 ax [orig:368 stride.28_309 ] [368])
            (const_int 0 [0]))) "CLMAX.f":2 8 {*cmpdi_ccno_1}
     (nil))
(insn 98 96 827 2 (set (reg:DI 1 dx [481])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 0 ax [orig:368 stride.28_309 ] [368])
            (reg:DI 1 dx [481]))) "CLMAX.f":2 1003 {*movdicc_noc}
     (nil))
(insn 827 98 99 2 (set (reg:DI 44 r15 [orig:369 stride.28_310 ] [369])
        (reg:DI 1 dx [481])) "CLMAX.f":2 85 {*movdi_internal}
     (nil))
(insn 99 827 100 2 (set (reg/f:DI 0 ax [482])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 48 [0x30])) [6 lm+0 S8 A64])) "CLMAX.f":2 85 {*movdi_internal}
     (nil))
(insn 100 99 101 2 (set (reg:SI 0 ax [orig:104 _18 ] [104])
        (mem:SI (reg/f:DI 0 ax [482]) [1 *lm_311(D)+0 S4 A32])) "CLMAX.f":2 86 {*movsi_internal}
     (nil))
(insn 101 100 102 2 (set (reg:DI 0 ax [483])
        (sign_extend:DI (reg:SI 0 ax [orig:104 _18 ] [104]))) "CLMAX.f":2 149 {*extendsidi2_rex64}
     (nil))
(insn 102 101 828 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -136 [0xffffffffffffff78])) [2 ubound.27+0 S8 A64])
        (reg:DI 0 ax [483])) "CLMAX.f":2 85 {*movdi_internal}
     (nil))
(insn 828 102 103 2 (set (reg:DI 0 ax [orig:370 size.30_313 ] [370])
        (reg:DI 44 r15 [orig:369 stride.28_310 ] [369])) "CLMAX.f":2 85 {*movdi_internal}
     (nil))
(insn 103 828 105 2 (parallel [
            (set (reg:DI 0 ax [orig:370 size.30_313 ] [370])
                (mult:DI (reg:DI 0 ax [orig:370 size.30_313 ] [370])
                    (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                            (const_int -136 [0xffffffffffffff78])) [2 ubound.27+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) "CLMAX.f":2 349 {*muldi3_1}
     (nil))
(insn 105 103 104 2 (set (reg:DI 1 dx [484])
        (const_int 0 [0])) "CLMAX.f":2 85 {*movdi_internal}
     (nil))
(insn 104 105 106 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 0 ax [orig:370 size.30_313 ] [370])
            (const_int 0 [0]))) "CLMAX.f":2 8 {*cmpdi_ccno_1}
     (nil))
(insn 106 104 109 2 (set (reg:DI 0 ax [orig:371 size.30_314 ] [371])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 0 ax [orig:370 size.30_313 ] [370])
            (reg:DI 1 dx [484]))) "CLMAX.f":2 1003 {*movdicc_noc}
     (nil))
(insn 109 106 110 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -384 [0xfffffffffffffe80])) [8 %sfp+-336 S8 A128])
        (reg:DI 0 ax [orig:105 size.71_19 ] [105])) "CLMAX.f":2 85 {*movdi_internal}
     (nil))
(insn 110 109 830 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -376 [0xfffffffffffffe88])) [8 %sfp+-328 S8 A64])
        (const_int 0 [0])) "CLMAX.f":2 85 {*movdi_internal}
     (nil))
(insn 830 110 114 2 (set (reg:DI 0 ax [orig:108 _22 ] [108])
        (reg:DI 5 di [orig:367 stride.26_307 ] [367])) "CLMAX.f":2 85 {*movdi_internal}
     (nil))
(insn 114 830 115 2 (set (reg:DI 0 ax [orig:108 _22 ] [108])
        (not:DI (reg:DI 0 ax [orig:108 _22 ] [108]))) "CLMAX.f":2 532 {*one_cmpldi2_1}
     (nil))
(insn 115 114 833 2 (parallel [
            (set (reg:DI 0 ax [orig:108 _22 ] [108])
                (minus:DI (reg:DI 0 ax [orig:108 _22 ] [108])
                    (reg:DI 44 r15 [orig:369 stride.28_310 ] [369])))
            (clobber (reg:CC 17 flags))
        ]) "CLMAX.f":2 278 {*subdi_1}
     (nil))
(insn 833 115 116 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -392 [0xfffffffffffffe78])) [8 %sfp+-344 S8 A64])
        (reg:DI 0 ax [orig:108 _22 ] [108])) "CLMAX.f":2 85 {*movdi_internal}
     (nil))
(insn 116 833 117 2 (set (reg/f:DI 0 ax [485])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 32 [0x20])) [6 im+0 S8 A64])) "CLMAX.f":4 85 {*movdi_internal}
     (nil))
(insn 117 116 118 2 (set (reg:SI 0 ax [orig:109 _23 ] [109])
        (mem:SI (reg/f:DI 0 ax [485]) [1 *im_273(D)+0 S4 A32])) "CLMAX.f":4 86 {*movsi_internal}
     (nil))
(insn 118 117 119 2 (set (reg:DI 0 ax [486])
        (sign_extend:DI (reg:SI 0 ax [orig:109 _23 ] [109]))) "CLMAX.f":4 149 {*extendsidi2_rex64}
     (nil))
(insn 119 118 120 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -144 [0xffffffffffffff70])) [2 ubound.36+0 S8 A64])
        (reg:DI 0 ax [486])) "CLMAX.f":4 85 {*movdi_internal}
     (nil))
(insn 120 119 122 2 (set (reg:DI 0 ax [orig:376 stride.38_320 ] [376])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -144 [0xffffffffffffff70])) [2 ubound.36+0 S8 A64])) "CLMAX.f":4 85 {*movdi_internal}
     (nil))
(insn 122 120 121 2 (set (reg:DI 1 dx [487])
        (const_int 0 [0])) "CLMAX.f":4 85 {*movdi_internal}
     (nil))
(insn 121 122 123 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 0 ax [orig:376 stride.38_320 ] [376])
            (const_int 0 [0]))) "CLMAX.f":4 8 {*cmpdi_ccno_1}
     (nil))
(insn 123 121 835 2 (set (reg:DI 1 dx [487])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 0 ax [orig:376 stride.38_320 ] [376])
            (reg:DI 1 dx [487]))) "CLMAX.f":4 1003 {*movdicc_noc}
     (nil))
(insn 835 123 124 2 (set (reg:DI 37 r8 [orig:377 stride.38_321 ] [377])
        (reg:DI 1 dx [487])) "CLMAX.f":4 85 {*movdi_internal}
     (nil))
(insn 124 835 125 2 (set (reg/f:DI 0 ax [488])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 40 [0x28])) [6 jm+0 S8 A64])) "CLMAX.f":4 85 {*movdi_internal}
     (nil))
(insn 125 124 126 2 (set (reg:SI 0 ax [orig:110 _24 ] [110])
        (mem:SI (reg/f:DI 0 ax [488]) [1 *jm_277(D)+0 S4 A32])) "CLMAX.f":4 86 {*movsi_internal}
     (nil))
(insn 126 125 127 2 (set (reg:DI 0 ax [489])
        (sign_extend:DI (reg:SI 0 ax [orig:110 _24 ] [110]))) "CLMAX.f":4 149 {*extendsidi2_rex64}
     (nil))
(insn 127 126 836 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -152 [0xffffffffffffff68])) [2 ubound.37+0 S8 A64])
        (reg:DI 0 ax [489])) "CLMAX.f":4 85 {*movdi_internal}
     (nil))
(insn 836 127 128 2 (set (reg:DI 0 ax [orig:378 size.40_323 ] [378])
        (reg:DI 37 r8 [orig:377 stride.38_321 ] [377])) "CLMAX.f":4 85 {*movdi_internal}
     (nil))
(insn 128 836 130 2 (parallel [
            (set (reg:DI 0 ax [orig:378 size.40_323 ] [378])
                (mult:DI (reg:DI 0 ax [orig:378 size.40_323 ] [378])
                    (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                            (const_int -152 [0xffffffffffffff68])) [2 ubound.37+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) "CLMAX.f":4 349 {*muldi3_1}
     (nil))
(insn 130 128 129 2 (set (reg:DI 1 dx [490])
        (const_int 0 [0])) "CLMAX.f":4 85 {*movdi_internal}
     (nil))
(insn 129 130 131 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 0 ax [orig:378 size.40_323 ] [378])
            (const_int 0 [0]))) "CLMAX.f":4 8 {*cmpdi_ccno_1}
     (nil))
(insn 131 129 134 2 (set (reg:DI 0 ax [orig:379 size.40_324 ] [379])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 0 ax [orig:378 size.40_323 ] [378])
            (reg:DI 1 dx [490]))) "CLMAX.f":4 1003 {*movdicc_noc}
     (nil))
(insn 134 131 135 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -416 [0xfffffffffffffe60])) [8 %sfp+-368 S8 A128])
        (reg:DI 0 ax [orig:111 size.73_25 ] [111])) "CLMAX.f":4 85 {*movdi_internal}
     (nil))
(insn 135 134 838 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -408 [0xfffffffffffffe68])) [8 %sfp+-360 S8 A64])
        (const_int 0 [0])) "CLMAX.f":4 85 {*movdi_internal}
     (nil))
(insn 838 135 139 2 (set (reg:DI 0 ax [orig:383 offset.39_328 ] [383])
        (reg:DI 37 r8 [orig:377 stride.38_321 ] [377])) "CLMAX.f":4 85 {*movdi_internal}
     (nil))
(insn 139 838 839 2 (set (reg:DI 0 ax [orig:383 offset.39_328 ] [383])
        (not:DI (reg:DI 0 ax [orig:383 offset.39_328 ] [383]))) "CLMAX.f":4 532 {*one_cmpldi2_1}
     (nil))
(insn 839 139 140 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -384 [0xfffffffffffffe80])) [8 %sfp+-336 S8 A128])
        (reg:DI 0 ax [orig:383 offset.39_328 ] [383])) "CLMAX.f":4 85 {*movdi_internal}
     (nil))
(insn 140 839 141 2 (set (reg/f:DI 0 ax [491])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 48 [0x30])) [6 lm+0 S8 A64])) "CLMAX.f":2 85 {*movdi_internal}
     (nil))
(insn 141 140 142 2 (set (reg:SI 0 ax [orig:114 _28 ] [114])
        (mem:SI (reg/f:DI 0 ax [491]) [1 *lm_311(D)+0 S4 A32])) "CLMAX.f":2 86 {*movsi_internal}
     (nil))
(insn 142 141 143 2 (set (reg:DI 0 ax [492])
        (sign_extend:DI (reg:SI 0 ax [orig:114 _28 ] [114]))) "CLMAX.f":2 149 {*extendsidi2_rex64}
     (nil))
(insn 143 142 144 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -160 [0xffffffffffffff60])) [2 ubound.0+0 S8 A64])
        (reg:DI 0 ax [492])) "CLMAX.f":2 85 {*movdi_internal}
     (nil))
(insn 144 143 146 2 (set (reg:DI 0 ax [orig:384 size.1_330 ] [384])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -160 [0xffffffffffffff60])) [2 ubound.0+0 S8 A64])) "CLMAX.f":2 85 {*movdi_internal}
     (nil))
(insn 146 144 145 2 (set (reg:DI 1 dx [493])
        (const_int 0 [0])) "CLMAX.f":2 85 {*movdi_internal}
     (nil))
(insn 145 146 147 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 0 ax [orig:384 size.1_330 ] [384])
            (const_int 0 [0]))) "CLMAX.f":2 8 {*cmpdi_ccno_1}
     (nil))
(insn 147 145 150 2 (set (reg:DI 0 ax [orig:385 size.1_331 ] [385])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 0 ax [orig:384 size.1_330 ] [384])
            (reg:DI 1 dx [493]))) "CLMAX.f":2 1003 {*movdicc_noc}
     (nil))
(insn 150 147 151 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -432 [0xfffffffffffffe50])) [8 %sfp+-384 S8 A128])
        (reg:DI 0 ax [orig:115 size.75_29 ] [115])) "CLMAX.f":2 85 {*movdi_internal}
     (nil))
(insn 151 150 155 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -424 [0xfffffffffffffe58])) [8 %sfp+-376 S8 A64])
        (const_int 0 [0])) "CLMAX.f":2 85 {*movdi_internal}
     (nil))
(insn 155 151 156 2 (set (reg/f:DI 0 ax [494])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 32 [0x20])) [6 im+0 S8 A64])) "CLMAX.f":2 85 {*movdi_internal}
     (nil))
(insn 156 155 157 2 (set (reg:SI 0 ax [orig:118 _32 ] [118])
        (mem:SI (reg/f:DI 0 ax [494]) [1 *im_273(D)+0 S4 A32])) "CLMAX.f":2 86 {*movsi_internal}
     (nil))
(insn 157 156 158 2 (set (reg:DI 0 ax [495])
        (sign_extend:DI (reg:SI 0 ax [orig:118 _32 ] [118]))) "CLMAX.f":2 149 {*extendsidi2_rex64}
     (nil))
(insn 158 157 159 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [2 ubound.19+0 S8 A64])
        (reg:DI 0 ax [495])) "CLMAX.f":2 85 {*movdi_internal}
     (nil))
(insn 159 158 161 2 (set (reg:DI 0 ax [orig:389 stride.21_336 ] [389])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [2 ubound.19+0 S8 A64])) "CLMAX.f":2 85 {*movdi_internal}
     (nil))
(insn 161 159 160 2 (set (reg:DI 1 dx [496])
        (const_int 0 [0])) "CLMAX.f":2 85 {*movdi_internal}
     (nil))
(insn 160 161 840 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 0 ax [orig:389 stride.21_336 ] [389])
            (const_int 0 [0]))) "CLMAX.f":2 8 {*cmpdi_ccno_1}
     (nil))
(insn 840 160 162 2 (set (reg:DI 2 cx [496])
        (reg:DI 1 dx [496])) "CLMAX.f":2 85 {*movdi_internal}
     (nil))
(insn 162 840 932 2 (set (reg:DI 2 cx [496])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 0 ax [orig:389 stride.21_336 ] [389])
            (reg:DI 2 cx [496]))) "CLMAX.f":2 1003 {*movdicc_noc}
     (nil))
(insn 932 162 163 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -432 [0xfffffffffffffe50])) [8 %sfp+-384 S8 A128])
        (reg:DI 2 cx [orig:390 stride.21_337 ] [390])) "CLMAX.f":2 85 {*movdi_internal}
     (nil))
(insn 163 932 164 2 (set (reg/f:DI 0 ax [497])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 40 [0x28])) [6 jm+0 S8 A64])) "CLMAX.f":2 85 {*movdi_internal}
     (nil))
(insn 164 163 165 2 (set (reg:SI 0 ax [orig:119 _33 ] [119])
        (mem:SI (reg/f:DI 0 ax [497]) [1 *jm_277(D)+0 S4 A32])) "CLMAX.f":2 86 {*movsi_internal}
     (nil))
(insn 165 164 166 2 (set (reg:DI 0 ax [498])
        (sign_extend:DI (reg:SI 0 ax [orig:119 _33 ] [119]))) "CLMAX.f":2 149 {*extendsidi2_rex64}
     (nil))
(insn 166 165 842 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -176 [0xffffffffffffff50])) [2 ubound.20+0 S8 A64])
        (reg:DI 0 ax [498])) "CLMAX.f":2 85 {*movdi_internal}
     (nil))
(insn 842 166 167 2 (set (reg:DI 0 ax [orig:391 size.23_339 ] [391])
        (reg:DI 2 cx [orig:390 stride.21_337 ] [390])) "CLMAX.f":2 85 {*movdi_internal}
     (nil))
(insn 167 842 169 2 (parallel [
            (set (reg:DI 0 ax [orig:391 size.23_339 ] [391])
                (mult:DI (reg:DI 0 ax [orig:391 size.23_339 ] [391])
                    (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                            (const_int -176 [0xffffffffffffff50])) [2 ubound.20+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) "CLMAX.f":2 349 {*muldi3_1}
     (nil))
(insn 169 167 168 2 (set (reg:DI 1 dx [499])
        (const_int 0 [0])) "CLMAX.f":2 85 {*movdi_internal}
     (nil))
(insn 168 169 170 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 0 ax [orig:391 size.23_339 ] [391])
            (const_int 0 [0]))) "CLMAX.f":2 8 {*cmpdi_ccno_1}
     (nil))
(insn 170 168 173 2 (set (reg:DI 0 ax [orig:392 size.23_340 ] [392])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 0 ax [orig:391 size.23_339 ] [391])
            (reg:DI 1 dx [499]))) "CLMAX.f":2 1003 {*movdicc_noc}
     (nil))
(insn 173 170 174 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -448 [0xfffffffffffffe40])) [8 %sfp+-400 S8 A128])
        (reg:DI 0 ax [orig:120 size.77_34 ] [120])) "CLMAX.f":2 85 {*movdi_internal}
     (nil))
(insn 174 173 178 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -440 [0xfffffffffffffe48])) [8 %sfp+-392 S8 A64])
        (const_int 0 [0])) "CLMAX.f":2 85 {*movdi_internal}
     (nil))
(insn 178 174 845 2 (set (reg:DI 2 cx [orig:396 offset.22_344 ] [396])
        (not:DI (reg:DI 2 cx [orig:396 offset.22_344 ] [396]))) "CLMAX.f":2 532 {*one_cmpldi2_1}
     (nil))
(insn 845 178 179 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -448 [0xfffffffffffffe40])) [8 %sfp+-400 S8 A128])
        (reg:DI 2 cx [orig:396 offset.22_344 ] [396])) "CLMAX.f":2 85 {*movdi_internal}
     (nil))
(insn 179 845 180 2 (set (reg/f:DI 0 ax [500])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 32 [0x20])) [6 im+0 S8 A64])) "CLMAX.f":2 85 {*movdi_internal}
     (nil))
(insn 180 179 181 2 (set (reg:SI 0 ax [orig:123 _37 ] [123])
        (mem:SI (reg/f:DI 0 ax [500]) [1 *im_273(D)+0 S4 A32])) "CLMAX.f":2 86 {*movsi_internal}
     (nil))
(insn 181 180 182 2 (set (reg:DI 0 ax [501])
        (sign_extend:DI (reg:SI 0 ax [orig:123 _37 ] [123]))) "CLMAX.f":2 149 {*extendsidi2_rex64}
     (nil))
(insn 182 181 183 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [2 ubound.12+0 S8 A64])
        (reg:DI 0 ax [501])) "CLMAX.f":2 85 {*movdi_internal}
     (nil))
(insn 183 182 185 2 (set (reg:DI 0 ax [orig:397 stride.14_346 ] [397])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [2 ubound.12+0 S8 A64])) "CLMAX.f":2 85 {*movdi_internal}
     (nil))
(insn 185 183 184 2 (set (reg:DI 1 dx [502])
        (const_int 0 [0])) "CLMAX.f":2 85 {*movdi_internal}
     (nil))
(insn 184 185 846 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 0 ax [orig:397 stride.14_346 ] [397])
            (const_int 0 [0]))) "CLMAX.f":2 8 {*cmpdi_ccno_1}
     (nil))
(insn 846 184 186 2 (set (reg:DI 5 di [502])
        (reg:DI 1 dx [502])) "CLMAX.f":2 85 {*movdi_internal}
     (nil))
(insn 186 846 930 2 (set (reg:DI 5 di [502])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 0 ax [orig:397 stride.14_346 ] [397])
            (reg:DI 5 di [502]))) "CLMAX.f":2 1003 {*movdicc_noc}
     (nil))
(insn 930 186 187 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -400 [0xfffffffffffffe70])) [8 %sfp+-352 S8 A64])
        (reg:DI 5 di [orig:398 stride.14_347 ] [398])) "CLMAX.f":2 85 {*movdi_internal}
     (nil))
(insn 187 930 188 2 (set (reg/f:DI 0 ax [503])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 40 [0x28])) [6 jm+0 S8 A64])) "CLMAX.f":2 85 {*movdi_internal}
     (nil))
(insn 188 187 189 2 (set (reg:SI 0 ax [orig:124 _38 ] [124])
        (mem:SI (reg/f:DI 0 ax [503]) [1 *jm_277(D)+0 S4 A32])) "CLMAX.f":2 86 {*movsi_internal}
     (nil))
(insn 189 188 190 2 (set (reg:DI 0 ax [504])
        (sign_extend:DI (reg:SI 0 ax [orig:124 _38 ] [124]))) "CLMAX.f":2 149 {*extendsidi2_rex64}
     (nil))
(insn 190 189 848 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [2 ubound.13+0 S8 A64])
        (reg:DI 0 ax [504])) "CLMAX.f":2 85 {*movdi_internal}
     (nil))
(insn 848 190 191 2 (set (reg:DI 0 ax [orig:399 stride.16_349 ] [399])
        (reg:DI 5 di [orig:398 stride.14_347 ] [398])) "CLMAX.f":2 85 {*movdi_internal}
     (nil))
(insn 191 848 193 2 (parallel [
            (set (reg:DI 0 ax [orig:399 stride.16_349 ] [399])
                (mult:DI (reg:DI 0 ax [orig:399 stride.16_349 ] [399])
                    (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                            (const_int -192 [0xffffffffffffff40])) [2 ubound.13+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) "CLMAX.f":2 349 {*muldi3_1}
     (nil))
(insn 193 191 192 2 (set (reg:DI 1 dx [505])
        (const_int 0 [0])) "CLMAX.f":2 85 {*movdi_internal}
     (nil))
(insn 192 193 850 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 0 ax [orig:399 stride.16_349 ] [399])
            (const_int 0 [0]))) "CLMAX.f":2 8 {*cmpdi_ccno_1}
     (nil))
(insn 850 192 194 2 (set (reg:DI 2 cx [505])
        (reg:DI 1 dx [505])) "CLMAX.f":2 85 {*movdi_internal}
     (nil))
(insn 194 850 928 2 (set (reg:DI 2 cx [505])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 0 ax [orig:399 stride.16_349 ] [399])
            (reg:DI 2 cx [505]))) "CLMAX.f":2 1003 {*movdicc_noc}
     (nil))
(insn 928 194 195 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -536 [0xfffffffffffffde8])) [8 %sfp+-488 S8 A64])
        (reg:DI 2 cx [orig:400 stride.16_350 ] [400])) "CLMAX.f":2 85 {*movdi_internal}
     (nil))
(insn 195 928 196 2 (set (reg/f:DI 0 ax [506])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 48 [0x30])) [6 lm+0 S8 A64])) "CLMAX.f":2 85 {*movdi_internal}
     (nil))
(insn 196 195 197 2 (set (reg:SI 0 ax [orig:125 _39 ] [125])
        (mem:SI (reg/f:DI 0 ax [506]) [1 *lm_311(D)+0 S4 A32])) "CLMAX.f":2 86 {*movsi_internal}
     (nil))
(insn 197 196 198 2 (set (reg:DI 0 ax [507])
        (sign_extend:DI (reg:SI 0 ax [orig:125 _39 ] [125]))) "CLMAX.f":2 149 {*extendsidi2_rex64}
     (nil))
(insn 198 197 852 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [2 ubound.15+0 S8 A64])
        (reg:DI 0 ax [507])) "CLMAX.f":2 85 {*movdi_internal}
     (nil))
(insn 852 198 199 2 (set (reg:DI 0 ax [orig:401 size.18_352 ] [401])
        (reg:DI 2 cx [orig:400 stride.16_350 ] [400])) "CLMAX.f":2 85 {*movdi_internal}
     (nil))
(insn 199 852 201 2 (parallel [
            (set (reg:DI 0 ax [orig:401 size.18_352 ] [401])
                (mult:DI (reg:DI 0 ax [orig:401 size.18_352 ] [401])
                    (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                            (const_int -200 [0xffffffffffffff38])) [2 ubound.15+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) "CLMAX.f":2 349 {*muldi3_1}
     (nil))
(insn 201 199 200 2 (set (reg:DI 1 dx [508])
        (const_int 0 [0])) "CLMAX.f":2 85 {*movdi_internal}
     (nil))
(insn 200 201 202 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 0 ax [orig:401 size.18_352 ] [401])
            (const_int 0 [0]))) "CLMAX.f":2 8 {*cmpdi_ccno_1}
     (nil))
(insn 202 200 205 2 (set (reg:DI 0 ax [orig:402 size.18_353 ] [402])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 0 ax [orig:401 size.18_352 ] [401])
            (reg:DI 1 dx [508]))) "CLMAX.f":2 1003 {*movdicc_noc}
     (nil))
(insn 205 202 206 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -464 [0xfffffffffffffe30])) [8 %sfp+-416 S8 A128])
        (reg:DI 0 ax [orig:126 size.79_40 ] [126])) "CLMAX.f":2 85 {*movdi_internal}
     (nil))
(insn 206 205 854 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -456 [0xfffffffffffffe38])) [8 %sfp+-408 S8 A64])
        (const_int 0 [0])) "CLMAX.f":2 85 {*movdi_internal}
     (nil))
(insn 854 206 210 2 (set (reg:DI 0 ax [orig:129 _43 ] [129])
        (reg:DI 5 di [orig:398 stride.14_347 ] [398])) "CLMAX.f":2 85 {*movdi_internal}
     (nil))
(insn 210 854 211 2 (set (reg:DI 0 ax [orig:129 _43 ] [129])
        (not:DI (reg:DI 0 ax [orig:129 _43 ] [129]))) "CLMAX.f":2 532 {*one_cmpldi2_1}
     (nil))
(insn 211 210 857 2 (parallel [
            (set (reg:DI 0 ax [orig:129 _43 ] [129])
                (minus:DI (reg:DI 0 ax [orig:129 _43 ] [129])
                    (reg:DI 2 cx [orig:400 stride.16_350 ] [400])))
            (clobber (reg:CC 17 flags))
        ]) "CLMAX.f":2 278 {*subdi_1}
     (nil))
(insn 857 211 212 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -464 [0xfffffffffffffe30])) [8 %sfp+-416 S8 A128])
        (reg:DI 0 ax [orig:129 _43 ] [129])) "CLMAX.f":2 85 {*movdi_internal}
     (nil))
(insn 212 857 213 2 (set (reg/f:DI 0 ax [509])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 32 [0x20])) [6 im+0 S8 A64])) "CLMAX.f":2 85 {*movdi_internal}
     (nil))
(insn 213 212 214 2 (set (reg:SI 0 ax [orig:130 _44 ] [130])
        (mem:SI (reg/f:DI 0 ax [509]) [1 *im_273(D)+0 S4 A32])) "CLMAX.f":2 86 {*movsi_internal}
     (nil))
(insn 214 213 215 2 (set (reg:DI 0 ax [510])
        (sign_extend:DI (reg:SI 0 ax [orig:130 _44 ] [130]))) "CLMAX.f":2 149 {*extendsidi2_rex64}
     (nil))
(insn 215 214 216 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -208 [0xffffffffffffff30])) [2 ubound.56+0 S8 A64])
        (reg:DI 0 ax [510])) "CLMAX.f":2 85 {*movdi_internal}
     (nil))
(insn 216 215 218 2 (set (reg:DI 0 ax [orig:407 stride.58_359 ] [407])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -208 [0xffffffffffffff30])) [2 ubound.56+0 S8 A64])) "CLMAX.f":2 85 {*movdi_internal}
     (nil))
(insn 218 216 217 2 (set (reg:DI 1 dx [511])
        (const_int 0 [0])) "CLMAX.f":2 85 {*movdi_internal}
     (nil))
(insn 217 218 219 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 0 ax [orig:407 stride.58_359 ] [407])
            (const_int 0 [0]))) "CLMAX.f":2 8 {*cmpdi_ccno_1}
     (nil))
(insn 219 217 860 2 (set (reg:DI 1 dx [511])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 0 ax [orig:407 stride.58_359 ] [407])
            (reg:DI 1 dx [511]))) "CLMAX.f":2 1003 {*movdicc_noc}
     (nil))
(insn 860 219 220 2 (set (reg:DI 39 r10 [orig:408 stride.58_360 ] [408])
        (reg:DI 1 dx [511])) "CLMAX.f":2 85 {*movdi_internal}
     (nil))
(insn 220 860 221 2 (set (reg/f:DI 0 ax [512])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 40 [0x28])) [6 jm+0 S8 A64])) "CLMAX.f":2 85 {*movdi_internal}
     (nil))
(insn 221 220 222 2 (set (reg:SI 0 ax [orig:131 _45 ] [131])
        (mem:SI (reg/f:DI 0 ax [512]) [1 *jm_277(D)+0 S4 A32])) "CLMAX.f":2 86 {*movsi_internal}
     (nil))
(insn 222 221 223 2 (set (reg:DI 0 ax [513])
        (sign_extend:DI (reg:SI 0 ax [orig:131 _45 ] [131]))) "CLMAX.f":2 149 {*extendsidi2_rex64}
     (nil))
(insn 223 222 861 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -216 [0xffffffffffffff28])) [2 ubound.57+0 S8 A64])
        (reg:DI 0 ax [513])) "CLMAX.f":2 85 {*movdi_internal}
     (nil))
(insn 861 223 224 2 (set (reg:DI 0 ax [orig:409 stride.60_362 ] [409])
        (reg:DI 39 r10 [orig:408 stride.58_360 ] [408])) "CLMAX.f":2 85 {*movdi_internal}
     (nil))
(insn 224 861 226 2 (parallel [
            (set (reg:DI 0 ax [orig:409 stride.60_362 ] [409])
                (mult:DI (reg:DI 0 ax [orig:409 stride.60_362 ] [409])
                    (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                            (const_int -216 [0xffffffffffffff28])) [2 ubound.57+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) "CLMAX.f":2 349 {*muldi3_1}
     (nil))
(insn 226 224 225 2 (set (reg:DI 1 dx [514])
        (const_int 0 [0])) "CLMAX.f":2 85 {*movdi_internal}
     (nil))
(insn 225 226 227 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 0 ax [orig:409 stride.60_362 ] [409])
            (const_int 0 [0]))) "CLMAX.f":2 8 {*cmpdi_ccno_1}
     (nil))
(insn 227 225 864 2 (set (reg:DI 1 dx [514])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 0 ax [orig:409 stride.60_362 ] [409])
            (reg:DI 1 dx [514]))) "CLMAX.f":2 1003 {*movdicc_noc}
     (nil))
(insn 864 227 228 2 (set (reg:DI 38 r9 [orig:410 stride.60_363 ] [410])
        (reg:DI 1 dx [514])) "CLMAX.f":2 85 {*movdi_internal}
     (nil))
(insn 228 864 229 2 (set (reg/f:DI 0 ax [515])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 56 [0x38])) [6 lp1+0 S8 A64])) "CLMAX.f":2 85 {*movdi_internal}
     (nil))
(insn 229 228 230 2 (set (reg:SI 0 ax [orig:132 _46 ] [132])
        (mem:SI (reg/f:DI 0 ax [515]) [1 *lp1_364(D)+0 S4 A32])) "CLMAX.f":2 86 {*movsi_internal}
     (nil))
(insn 230 229 231 2 (set (reg:DI 0 ax [516])
        (sign_extend:DI (reg:SI 0 ax [orig:132 _46 ] [132]))) "CLMAX.f":2 149 {*extendsidi2_rex64}
     (nil))
(insn 231 230 865 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -224 [0xffffffffffffff20])) [2 ubound.59+0 S8 A64])
        (reg:DI 0 ax [516])) "CLMAX.f":2 85 {*movdi_internal}
     (nil))
(insn 865 231 232 2 (set (reg:DI 0 ax [orig:411 size.62_366 ] [411])
        (reg:DI 38 r9 [orig:410 stride.60_363 ] [410])) "CLMAX.f":2 85 {*movdi_internal}
     (nil))
(insn 232 865 234 2 (parallel [
            (set (reg:DI 0 ax [orig:411 size.62_366 ] [411])
                (mult:DI (reg:DI 0 ax [orig:411 size.62_366 ] [411])
                    (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                            (const_int -224 [0xffffffffffffff20])) [2 ubound.59+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) "CLMAX.f":2 349 {*muldi3_1}
     (nil))
(insn 234 232 233 2 (set (reg:DI 1 dx [517])
        (const_int 0 [0])) "CLMAX.f":2 85 {*movdi_internal}
     (nil))
(insn 233 234 235 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 0 ax [orig:411 size.62_366 ] [411])
            (const_int 0 [0]))) "CLMAX.f":2 8 {*cmpdi_ccno_1}
     (nil))
(insn 235 233 238 2 (set (reg:DI 0 ax [orig:412 size.62_367 ] [412])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 0 ax [orig:411 size.62_366 ] [411])
            (reg:DI 1 dx [517]))) "CLMAX.f":2 1003 {*movdicc_noc}
     (nil))
(insn 238 235 239 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -480 [0xfffffffffffffe20])) [8 %sfp+-432 S8 A128])
        (reg:DI 0 ax [orig:133 size.81_47 ] [133])) "CLMAX.f":2 85 {*movdi_internal}
     (nil))
(insn 239 238 867 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -472 [0xfffffffffffffe28])) [8 %sfp+-424 S8 A64])
        (const_int 0 [0])) "CLMAX.f":2 85 {*movdi_internal}
     (nil))
(insn 867 239 243 2 (set (reg:DI 0 ax [orig:136 _50 ] [136])
        (reg:DI 39 r10 [orig:408 stride.58_360 ] [408])) "CLMAX.f":2 85 {*movdi_internal}
     (nil))
(insn 243 867 244 2 (set (reg:DI 0 ax [orig:136 _50 ] [136])
        (not:DI (reg:DI 0 ax [orig:136 _50 ] [136]))) "CLMAX.f":2 532 {*one_cmpldi2_1}
     (nil))
(insn 244 243 870 2 (parallel [
            (set (reg:DI 0 ax [orig:136 _50 ] [136])
                (minus:DI (reg:DI 0 ax [orig:136 _50 ] [136])
                    (reg:DI 38 r9 [orig:410 stride.60_363 ] [410])))
            (clobber (reg:CC 17 flags))
        ]) "CLMAX.f":2 278 {*subdi_1}
     (nil))
(insn 870 244 245 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -416 [0xfffffffffffffe60])) [8 %sfp+-368 S8 A128])
        (reg:DI 0 ax [orig:136 _50 ] [136])) "CLMAX.f":2 85 {*movdi_internal}
     (nil))
(insn 245 870 246 2 (set (reg/f:DI 0 ax [518])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 32 [0x20])) [6 im+0 S8 A64])) "CLMAX.f":2 85 {*movdi_internal}
     (nil))
(insn 246 245 247 2 (set (reg:SI 0 ax [orig:137 _51 ] [137])
        (mem:SI (reg/f:DI 0 ax [518]) [1 *im_273(D)+0 S4 A32])) "CLMAX.f":2 86 {*movsi_internal}
     (nil))
(insn 247 246 248 2 (set (reg:DI 0 ax [519])
        (sign_extend:DI (reg:SI 0 ax [orig:137 _51 ] [137]))) "CLMAX.f":2 149 {*extendsidi2_rex64}
     (nil))
(insn 248 247 249 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -232 [0xffffffffffffff18])) [2 ubound.7+0 S8 A64])
        (reg:DI 0 ax [519])) "CLMAX.f":2 85 {*movdi_internal}
     (nil))
(insn 249 248 251 2 (set (reg:DI 0 ax [orig:417 stride.9_373 ] [417])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -232 [0xffffffffffffff18])) [2 ubound.7+0 S8 A64])) "CLMAX.f":2 85 {*movdi_internal}
     (nil))
(insn 251 249 250 2 (set (reg:DI 1 dx [520])
        (const_int 0 [0])) "CLMAX.f":2 85 {*movdi_internal}
     (nil))
(insn 250 251 252 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 0 ax [orig:417 stride.9_373 ] [417])
            (const_int 0 [0]))) "CLMAX.f":2 8 {*cmpdi_ccno_1}
     (nil))
(insn 252 250 872 2 (set (reg:DI 1 dx [520])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 0 ax [orig:417 stride.9_373 ] [417])
            (reg:DI 1 dx [520]))) "CLMAX.f":2 1003 {*movdicc_noc}
     (nil))
(insn 872 252 253 2 (set (reg:DI 43 r14 [orig:418 stride.9_374 ] [418])
        (reg:DI 1 dx [520])) "CLMAX.f":2 85 {*movdi_internal}
     (nil))
(insn 253 872 254 2 (set (reg/f:DI 0 ax [521])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 40 [0x28])) [6 jm+0 S8 A64])) "CLMAX.f":2 85 {*movdi_internal}
     (nil))
(insn 254 253 255 2 (set (reg:SI 0 ax [orig:138 _52 ] [138])
        (mem:SI (reg/f:DI 0 ax [521]) [1 *jm_277(D)+0 S4 A32])) "CLMAX.f":2 86 {*movsi_internal}
     (nil))
(insn 255 254 256 2 (set (reg:DI 0 ax [522])
        (sign_extend:DI (reg:SI 0 ax [orig:138 _52 ] [138]))) "CLMAX.f":2 149 {*extendsidi2_rex64}
     (nil))
(insn 256 255 873 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -240 [0xffffffffffffff10])) [2 ubound.8+0 S8 A64])
        (reg:DI 0 ax [522])) "CLMAX.f":2 85 {*movdi_internal}
     (nil))
(insn 873 256 257 2 (set (reg:DI 0 ax [orig:419 size.11_376 ] [419])
        (reg:DI 43 r14 [orig:418 stride.9_374 ] [418])) "CLMAX.f":2 85 {*movdi_internal}
     (nil))
(insn 257 873 259 2 (parallel [
            (set (reg:DI 0 ax [orig:419 size.11_376 ] [419])
                (mult:DI (reg:DI 0 ax [orig:419 size.11_376 ] [419])
                    (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                            (const_int -240 [0xffffffffffffff10])) [2 ubound.8+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) "CLMAX.f":2 349 {*muldi3_1}
     (nil))
(insn 259 257 258 2 (set (reg:DI 1 dx [523])
        (const_int 0 [0])) "CLMAX.f":2 85 {*movdi_internal}
     (nil))
(insn 258 259 260 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 0 ax [orig:419 size.11_376 ] [419])
            (const_int 0 [0]))) "CLMAX.f":2 8 {*cmpdi_ccno_1}
     (nil))
(insn 260 258 263 2 (set (reg:DI 0 ax [orig:420 size.11_377 ] [420])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 0 ax [orig:419 size.11_376 ] [419])
            (reg:DI 1 dx [523]))) "CLMAX.f":2 1003 {*movdicc_noc}
     (nil))
(insn 263 260 264 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -496 [0xfffffffffffffe10])) [8 %sfp+-448 S8 A128])
        (reg:DI 0 ax [orig:139 size.83_53 ] [139])) "CLMAX.f":2 85 {*movdi_internal}
     (nil))
(insn 264 263 875 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -488 [0xfffffffffffffe18])) [8 %sfp+-440 S8 A64])
        (const_int 0 [0])) "CLMAX.f":2 85 {*movdi_internal}
     (nil))
(insn 875 264 268 2 (set (reg:DI 0 ax [orig:424 offset.10_381 ] [424])
        (reg:DI 43 r14 [orig:418 stride.9_374 ] [418])) "CLMAX.f":2 85 {*movdi_internal}
     (nil))
(insn 268 875 876 2 (set (reg:DI 0 ax [orig:424 offset.10_381 ] [424])
        (not:DI (reg:DI 0 ax [orig:424 offset.10_381 ] [424]))) "CLMAX.f":2 532 {*one_cmpldi2_1}
     (nil))
(insn 876 268 269 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -480 [0xfffffffffffffe20])) [8 %sfp+-432 S8 A128])
        (reg:DI 0 ax [orig:424 offset.10_381 ] [424])) "CLMAX.f":2 85 {*movdi_internal}
     (nil))
(insn 269 876 270 2 (set (reg/f:DI 0 ax [524])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 32 [0x20])) [6 im+0 S8 A64])) "CLMAX.f":3 85 {*movdi_internal}
     (nil))
(insn 270 269 271 2 (set (reg:SI 0 ax [orig:142 _56 ] [142])
        (mem:SI (reg/f:DI 0 ax [524]) [1 *im_273(D)+0 S4 A32])) "CLMAX.f":3 86 {*movsi_internal}
     (nil))
(insn 271 270 272 2 (set (reg:DI 0 ax [525])
        (sign_extend:DI (reg:SI 0 ax [orig:142 _56 ] [142]))) "CLMAX.f":3 149 {*extendsidi2_rex64}
     (nil))
(insn 272 271 273 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -248 [0xffffffffffffff08])) [2 ubound.2+0 S8 A64])
        (reg:DI 0 ax [525])) "CLMAX.f":3 85 {*movdi_internal}
     (nil))
(insn 273 272 275 2 (set (reg:DI 0 ax [orig:425 stride.4_383 ] [425])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -248 [0xffffffffffffff08])) [2 ubound.2+0 S8 A64])) "CLMAX.f":3 85 {*movdi_internal}
     (nil))
(insn 275 273 274 2 (set (reg:DI 1 dx [526])
        (const_int 0 [0])) "CLMAX.f":3 85 {*movdi_internal}
     (nil))
(insn 274 275 276 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 0 ax [orig:425 stride.4_383 ] [425])
            (const_int 0 [0]))) "CLMAX.f":3 8 {*cmpdi_ccno_1}
     (nil))
(insn 276 274 878 2 (set (reg:DI 1 dx [526])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 0 ax [orig:425 stride.4_383 ] [425])
            (reg:DI 1 dx [526]))) "CLMAX.f":3 1003 {*movdicc_noc}
     (nil))
(insn 878 276 277 2 (set (reg:DI 41 r12 [orig:426 stride.4_384 ] [426])
        (reg:DI 1 dx [526])) "CLMAX.f":3 85 {*movdi_internal}
     (nil))
(insn 277 878 278 2 (set (reg/f:DI 0 ax [527])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 40 [0x28])) [6 jm+0 S8 A64])) "CLMAX.f":3 85 {*movdi_internal}
     (nil))
(insn 278 277 279 2 (set (reg:SI 0 ax [orig:143 _57 ] [143])
        (mem:SI (reg/f:DI 0 ax [527]) [1 *jm_277(D)+0 S4 A32])) "CLMAX.f":3 86 {*movsi_internal}
     (nil))
(insn 279 278 280 2 (set (reg:DI 0 ax [528])
        (sign_extend:DI (reg:SI 0 ax [orig:143 _57 ] [143]))) "CLMAX.f":3 149 {*extendsidi2_rex64}
     (nil))
(insn 280 279 879 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -256 [0xffffffffffffff00])) [2 ubound.3+0 S8 A64])
        (reg:DI 0 ax [528])) "CLMAX.f":3 85 {*movdi_internal}
     (nil))
(insn 879 280 281 2 (set (reg:DI 0 ax [orig:427 size.6_386 ] [427])
        (reg:DI 41 r12 [orig:426 stride.4_384 ] [426])) "CLMAX.f":3 85 {*movdi_internal}
     (nil))
(insn 281 879 283 2 (parallel [
            (set (reg:DI 0 ax [orig:427 size.6_386 ] [427])
                (mult:DI (reg:DI 0 ax [orig:427 size.6_386 ] [427])
                    (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                            (const_int -256 [0xffffffffffffff00])) [2 ubound.3+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) "CLMAX.f":3 349 {*muldi3_1}
     (nil))
(insn 283 281 282 2 (set (reg:DI 1 dx [529])
        (const_int 0 [0])) "CLMAX.f":3 85 {*movdi_internal}
     (nil))
(insn 282 283 284 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 0 ax [orig:427 size.6_386 ] [427])
            (const_int 0 [0]))) "CLMAX.f":3 8 {*cmpdi_ccno_1}
     (nil))
(insn 284 282 287 2 (set (reg:DI 0 ax [orig:428 size.6_387 ] [428])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 0 ax [orig:427 size.6_386 ] [427])
            (reg:DI 1 dx [529]))) "CLMAX.f":3 1003 {*movdicc_noc}
     (nil))
(insn 287 284 288 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -512 [0xfffffffffffffe00])) [8 %sfp+-464 S8 A128])
        (reg:DI 0 ax [orig:144 size.85_58 ] [144])) "CLMAX.f":3 85 {*movdi_internal}
     (nil))
(insn 288 287 881 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -504 [0xfffffffffffffe08])) [8 %sfp+-456 S8 A64])
        (const_int 0 [0])) "CLMAX.f":3 85 {*movdi_internal}
     (nil))
(insn 881 288 292 2 (set (reg:DI 0 ax [orig:432 offset.5_391 ] [432])
        (reg:DI 41 r12 [orig:426 stride.4_384 ] [426])) "CLMAX.f":3 85 {*movdi_internal}
     (nil))
(insn 292 881 882 2 (set (reg:DI 0 ax [orig:432 offset.5_391 ] [432])
        (not:DI (reg:DI 0 ax [orig:432 offset.5_391 ] [432]))) "CLMAX.f":3 532 {*one_cmpldi2_1}
     (nil))
(insn 882 292 293 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -496 [0xfffffffffffffe10])) [8 %sfp+-448 S8 A128])
        (reg:DI 0 ax [orig:432 offset.5_391 ] [432])) "CLMAX.f":3 85 {*movdi_internal}
     (nil))
(insn 293 882 294 2 (set (reg/f:DI 0 ax [530])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 32 [0x20])) [6 im+0 S8 A64])) "CLMAX.f":2 85 {*movdi_internal}
     (nil))
(insn 294 293 295 2 (set (reg:SI 0 ax [orig:147 _61 ] [147])
        (mem:SI (reg/f:DI 0 ax [530]) [1 *im_273(D)+0 S4 A32])) "CLMAX.f":2 86 {*movsi_internal}
     (nil))
(insn 295 294 296 2 (set (reg:DI 0 ax [531])
        (sign_extend:DI (reg:SI 0 ax [orig:147 _61 ] [147]))) "CLMAX.f":2 149 {*extendsidi2_rex64}
     (nil))
(insn 296 295 297 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -264 [0xfffffffffffffef8])) [2 ubound.41+0 S8 A64])
        (reg:DI 0 ax [531])) "CLMAX.f":2 85 {*movdi_internal}
     (nil))
(insn 297 296 299 2 (set (reg:DI 0 ax [orig:433 stride.43_393 ] [433])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -264 [0xfffffffffffffef8])) [2 ubound.41+0 S8 A64])) "CLMAX.f":2 85 {*movdi_internal}
     (nil))
(insn 299 297 298 2 (set (reg:DI 1 dx [532])
        (const_int 0 [0])) "CLMAX.f":2 85 {*movdi_internal}
     (nil))
(insn 298 299 883 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 0 ax [orig:433 stride.43_393 ] [433])
            (const_int 0 [0]))) "CLMAX.f":2 8 {*cmpdi_ccno_1}
     (nil))
(insn 883 298 300 2 (set (reg:DI 5 di [532])
        (reg:DI 1 dx [532])) "CLMAX.f":2 85 {*movdi_internal}
     (nil))
(insn 300 883 301 2 (set (reg:DI 5 di [532])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 0 ax [orig:433 stride.43_393 ] [433])
            (reg:DI 5 di [532]))) "CLMAX.f":2 1003 {*movdicc_noc}
     (nil))
(insn 301 300 302 2 (set (reg/f:DI 0 ax [533])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 40 [0x28])) [6 jm+0 S8 A64])) "CLMAX.f":2 85 {*movdi_internal}
     (nil))
(insn 302 301 303 2 (set (reg:SI 0 ax [orig:148 _62 ] [148])
        (mem:SI (reg/f:DI 0 ax [533]) [1 *jm_277(D)+0 S4 A32])) "CLMAX.f":2 86 {*movsi_internal}
     (nil))
(insn 303 302 304 2 (set (reg:DI 0 ax [534])
        (sign_extend:DI (reg:SI 0 ax [orig:148 _62 ] [148]))) "CLMAX.f":2 149 {*extendsidi2_rex64}
     (nil))
(insn 304 303 885 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -272 [0xfffffffffffffef0])) [2 ubound.42+0 S8 A64])
        (reg:DI 0 ax [534])) "CLMAX.f":2 85 {*movdi_internal}
     (nil))
(insn 885 304 305 2 (set (reg:DI 0 ax [orig:435 size.45_396 ] [435])
        (reg:DI 5 di [orig:434 stride.43_394 ] [434])) "CLMAX.f":2 85 {*movdi_internal}
     (nil))
(insn 305 885 307 2 (parallel [
            (set (reg:DI 0 ax [orig:435 size.45_396 ] [435])
                (mult:DI (reg:DI 0 ax [orig:435 size.45_396 ] [435])
                    (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                            (const_int -272 [0xfffffffffffffef0])) [2 ubound.42+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) "CLMAX.f":2 349 {*muldi3_1}
     (nil))
(insn 307 305 306 2 (set (reg:DI 1 dx [535])
        (const_int 0 [0])) "CLMAX.f":2 85 {*movdi_internal}
     (nil))
(insn 306 307 308 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 0 ax [orig:435 size.45_396 ] [435])
            (const_int 0 [0]))) "CLMAX.f":2 8 {*cmpdi_ccno_1}
     (nil))
(insn 308 306 311 2 (set (reg:DI 0 ax [orig:436 size.45_397 ] [436])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 0 ax [orig:435 size.45_396 ] [435])
            (reg:DI 1 dx [535]))) "CLMAX.f":2 1003 {*movdicc_noc}
     (nil))
(insn 311 308 312 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -528 [0xfffffffffffffdf0])) [8 %sfp+-480 S8 A128])
        (reg:DI 0 ax [orig:149 size.87_63 ] [149])) "CLMAX.f":2 85 {*movdi_internal}
     (nil))
(insn 312 311 887 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -520 [0xfffffffffffffdf8])) [8 %sfp+-472 S8 A64])
        (const_int 0 [0])) "CLMAX.f":2 85 {*movdi_internal}
     (nil))
(insn 887 312 316 2 (set (reg:DI 0 ax [orig:440 offset.44_401 ] [440])
        (reg:DI 5 di [orig:434 stride.43_394 ] [434])) "CLMAX.f":2 85 {*movdi_internal}
     (nil))
(insn 316 887 888 2 (set (reg:DI 0 ax [orig:440 offset.44_401 ] [440])
        (not:DI (reg:DI 0 ax [orig:440 offset.44_401 ] [440]))) "CLMAX.f":2 532 {*one_cmpldi2_1}
     (nil))
(insn 888 316 317 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -512 [0xfffffffffffffe00])) [8 %sfp+-464 S8 A128])
        (reg:DI 0 ax [orig:440 offset.44_401 ] [440])) "CLMAX.f":2 85 {*movdi_internal}
     (nil))
(insn 317 888 318 2 (set (reg:SI 0 ax [orig:441 _402 ] [441])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7fac75ebf900 parallel>)
                    (const_int 8 [0x8]))) [1 parallel.jsta+0 S4 A64])) "CLMAX.f":70 86 {*movsi_internal}
     (nil))
(insn 318 317 319 2 (set (reg:SI 4 si [orig:442 _403 ] [442])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7fac75ebf900 parallel>)
                    (const_int 12 [0xc]))) [1 parallel.jend+0 S4 A32])) "CLMAX.f":70 86 {*movsi_internal}
     (nil))
(insn 319 318 374 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [1 j+0 S4 A32])
        (reg:SI 0 ax [orig:441 _402 ] [441])) "CLMAX.f":70 86 {*movsi_internal}
     (nil))
;;  succ:       3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 343 351 359 369 377 408 410 418 426 434 442

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;;              7 [always] 
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 343 351 359 369 377 408 410 418 426 434 442
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 442
;; lr  def 	 17 [flags] 443 536
(code_label 374 319 320 3 5 (nil) [1 uses])
(note 320 374 321 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 321 320 322 3 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -56 [0xffffffffffffffc8])) [1 j+0 S4 A32])
            (reg:SI 4 si [orig:442 _403 ] [442]))) "CLMAX.f":70 11 {*cmpsi_1}
     (nil))
(insn 322 321 323 3 (set (reg:QI 0 ax [536])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CLMAX.f":70 678 {*setcc_qi}
     (nil))
(insn 323 322 324 3 (set (reg:SI 0 ax [orig:443 _405 ] [443])
        (zero_extend:SI (reg:QI 0 ax [536]))) "CLMAX.f":70 140 {*zero_extendqisi2}
     (nil))
(insn 324 323 325 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:443 _405 ] [443])
            (const_int 0 [0]))) "CLMAX.f":70 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 325 324 326 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 783)
            (pc))) "CLMAX.f":70 682 {*jcc}
     (nil)
 -> 783)
;;  succ:       31
;;              4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 343 351 359 369 377 408 410 418 426 434 442

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 343 351 359 369 377 408 410 418 426 434 442
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 444 537
(note 326 325 327 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 327 326 328 4 (set (reg/f:DI 0 ax [537])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 32 [0x20])) [6 im+0 S8 A64])) "CLMAX.f":71 85 {*movdi_internal}
     (nil))
(insn 328 327 329 4 (set (reg:SI 2 cx [orig:444 _406 ] [444])
        (mem:SI (reg/f:DI 0 ax [537]) [1 *im_273(D)+0 S4 A32])) "CLMAX.f":71 86 {*movsi_internal}
     (nil))
(insn 329 328 368 4 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [1 i+0 S4 A32])
        (const_int 1 [0x1])) "CLMAX.f":71 86 {*movsi_internal}
     (nil))
;;  succ:       5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 343 351 359 369 377 408 410 418 426 434 442 444

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;;              6 [always] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 343 351 359 369 377 408 410 418 426 434 442 444
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 444
;; lr  def 	 17 [flags] 445 538
(code_label 368 329 330 5 4 (nil) [1 uses])
(note 330 368 331 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 331 330 332 5 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -52 [0xffffffffffffffcc])) [1 i+0 S4 A32])
            (reg:SI 2 cx [orig:444 _406 ] [444]))) "CLMAX.f":71 11 {*cmpsi_1}
     (nil))
(insn 332 331 333 5 (set (reg:QI 0 ax [538])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CLMAX.f":71 678 {*setcc_qi}
     (nil))
(insn 333 332 334 5 (set (reg:SI 0 ax [orig:445 _408 ] [445])
        (zero_extend:SI (reg:QI 0 ax [538]))) "CLMAX.f":71 140 {*zero_extendqisi2}
     (nil))
(insn 334 333 335 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:445 _408 ] [445])
            (const_int 0 [0]))) "CLMAX.f":71 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 335 334 336 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 786)
            (pc))) "CLMAX.f":71 682 {*jcc}
     (nil)
 -> 786)
;;  succ:       32
;;              6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 343 351 359 369 377 408 410 418 426 434 442 444

;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 32, flags: (RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 343 351 359 369 377 408 410 418 426 434 442 444
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 343 349 351 357 359 365
;; lr  def 	 17 [flags] 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 539 540 541 542 543 544 545 546 547 548 549 550
(note 336 335 337 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 337 336 338 6 (set (reg:SI 0 ax [539])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [1 j+0 S4 A32])) "CLMAX.f":72 86 {*movsi_internal}
     (nil))
(insn 338 337 339 6 (set (reg:DI 0 ax [orig:152 _66 ] [152])
        (sign_extend:DI (reg:SI 0 ax [539]))) "CLMAX.f":72 149 {*extendsidi2_rex64}
     (nil))
(insn 339 338 889 6 (parallel [
            (set (reg:DI 0 ax [orig:153 _67 ] [153])
                (mult:DI (reg:DI 0 ax [orig:152 _66 ] [152])
                    (reg:DI 3 bx [orig:343 stride.53_276 ] [343])))
            (clobber (reg:CC 17 flags))
        ]) "CLMAX.f":72 349 {*muldi3_1}
     (nil))
(insn 889 339 340 6 (set (reg:DI 1 dx [orig:349 offset.54_284 ] [349])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -344 [0xfffffffffffffea8])) [8 %sfp+-296 S8 A64])) "CLMAX.f":72 85 {*movdi_internal}
     (nil))
(insn 340 889 341 6 (parallel [
            (set (reg:DI 1 dx [orig:154 _68 ] [154])
                (plus:DI (reg:DI 1 dx [orig:349 offset.54_284 ] [349])
                    (reg:DI 0 ax [orig:153 _67 ] [153])))
            (clobber (reg:CC 17 flags))
        ]) "CLMAX.f":72 222 {*adddi_1}
     (nil))
(insn 341 340 342 6 (set (reg:SI 0 ax [540])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [1 i+0 S4 A32])) "CLMAX.f":72 86 {*movsi_internal}
     (nil))
(insn 342 341 343 6 (set (reg:DI 0 ax [orig:155 _69 ] [155])
        (sign_extend:DI (reg:SI 0 ax [540]))) "CLMAX.f":72 149 {*extendsidi2_rex64}
     (nil))
(insn 343 342 344 6 (parallel [
            (set (reg:DI 1 dx [orig:156 _70 ] [156])
                (plus:DI (reg:DI 1 dx [orig:154 _68 ] [154])
                    (reg:DI 0 ax [orig:155 _69 ] [155])))
            (clobber (reg:CC 17 flags))
        ]) "CLMAX.f":72 222 {*adddi_1}
     (nil))
(insn 344 343 345 6 (set (reg/f:DI 0 ax [541])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 72 [0x48])) [4 sqz+0 S8 A64])) "CLMAX.f":72 85 {*movdi_internal}
     (nil))
(insn 345 344 346 6 (set (reg:SF 21 xmm0 [542])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) "CLMAX.f":72 131 {*movsf_internal}
     (nil))
(insn 346 345 347 6 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:156 _70 ] [156])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [541])) [3 *sqz_409(D) S4 A32])
        (reg:SF 21 xmm0 [542])) "CLMAX.f":72 131 {*movsf_internal}
     (nil))
(insn 347 346 348 6 (set (reg:SI 0 ax [543])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [1 j+0 S4 A32])) "CLMAX.f":73 86 {*movsi_internal}
     (nil))
(insn 348 347 349 6 (set (reg:DI 0 ax [orig:157 _71 ] [157])
        (sign_extend:DI (reg:SI 0 ax [543]))) "CLMAX.f":73 149 {*extendsidi2_rex64}
     (nil))
(insn 349 348 890 6 (parallel [
            (set (reg:DI 0 ax [orig:158 _72 ] [158])
                (mult:DI (reg:DI 0 ax [orig:157 _71 ] [157])
                    (reg:DI 40 r11 [orig:351 stride.48_287 ] [351])))
            (clobber (reg:CC 17 flags))
        ]) "CLMAX.f":73 349 {*muldi3_1}
     (nil))
(insn 890 349 350 6 (set (reg:DI 1 dx [orig:357 offset.49_294 ] [357])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -352 [0xfffffffffffffea0])) [8 %sfp+-304 S8 A64])) "CLMAX.f":73 85 {*movdi_internal}
     (nil))
(insn 350 890 351 6 (parallel [
            (set (reg:DI 1 dx [orig:159 _73 ] [159])
                (plus:DI (reg:DI 1 dx [orig:357 offset.49_294 ] [357])
                    (reg:DI 0 ax [orig:158 _72 ] [158])))
            (clobber (reg:CC 17 flags))
        ]) "CLMAX.f":73 222 {*adddi_1}
     (nil))
(insn 351 350 352 6 (set (reg:SI 0 ax [544])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [1 i+0 S4 A32])) "CLMAX.f":73 86 {*movsi_internal}
     (nil))
(insn 352 351 353 6 (set (reg:DI 0 ax [orig:160 _74 ] [160])
        (sign_extend:DI (reg:SI 0 ax [544]))) "CLMAX.f":73 149 {*extendsidi2_rex64}
     (nil))
(insn 353 352 354 6 (parallel [
            (set (reg:DI 1 dx [orig:161 _75 ] [161])
                (plus:DI (reg:DI 1 dx [orig:159 _73 ] [159])
                    (reg:DI 0 ax [orig:160 _74 ] [160])))
            (clobber (reg:CC 17 flags))
        ]) "CLMAX.f":73 222 {*adddi_1}
     (nil))
(insn 354 353 355 6 (set (reg/f:DI 0 ax [545])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 80 [0x50])) [4 sq+0 S8 A64])) "CLMAX.f":73 85 {*movdi_internal}
     (nil))
(insn 355 354 356 6 (set (reg:SF 21 xmm0 [546])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) "CLMAX.f":73 131 {*movsf_internal}
     (nil))
(insn 356 355 357 6 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:161 _75 ] [161])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [545])) [3 *sq_411(D) S4 A32])
        (reg:SF 21 xmm0 [546])) "CLMAX.f":73 131 {*movsf_internal}
     (nil))
(insn 357 356 358 6 (set (reg:SI 0 ax [547])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [1 j+0 S4 A32])) "CLMAX.f":74 86 {*movsi_internal}
     (nil))
(insn 358 357 359 6 (set (reg:DI 0 ax [orig:162 _76 ] [162])
        (sign_extend:DI (reg:SI 0 ax [547]))) "CLMAX.f":74 149 {*extendsidi2_rex64}
     (nil))
(insn 359 358 891 6 (parallel [
            (set (reg:DI 0 ax [orig:163 _77 ] [163])
                (mult:DI (reg:DI 0 ax [orig:162 _76 ] [162])
                    (reg:DI 42 r13 [orig:359 stride.33_297 ] [359])))
            (clobber (reg:CC 17 flags))
        ]) "CLMAX.f":74 349 {*muldi3_1}
     (nil))
(insn 891 359 360 6 (set (reg:DI 1 dx [orig:365 offset.34_304 ] [365])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -360 [0xfffffffffffffe98])) [8 %sfp+-312 S8 A64])) "CLMAX.f":74 85 {*movdi_internal}
     (nil))
(insn 360 891 361 6 (parallel [
            (set (reg:DI 1 dx [orig:164 _78 ] [164])
                (plus:DI (reg:DI 1 dx [orig:365 offset.34_304 ] [365])
                    (reg:DI 0 ax [orig:163 _77 ] [163])))
            (clobber (reg:CC 17 flags))
        ]) "CLMAX.f":74 222 {*adddi_1}
     (nil))
(insn 361 360 362 6 (set (reg:SI 0 ax [548])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [1 i+0 S4 A32])) "CLMAX.f":74 86 {*movsi_internal}
     (nil))
(insn 362 361 363 6 (set (reg:DI 0 ax [orig:165 _79 ] [165])
        (sign_extend:DI (reg:SI 0 ax [548]))) "CLMAX.f":74 149 {*extendsidi2_rex64}
     (nil))
(insn 363 362 364 6 (parallel [
            (set (reg:DI 1 dx [orig:166 _80 ] [166])
                (plus:DI (reg:DI 1 dx [orig:164 _78 ] [164])
                    (reg:DI 0 ax [orig:165 _79 ] [165])))
            (clobber (reg:CC 17 flags))
        ]) "CLMAX.f":74 222 {*adddi_1}
     (nil))
(insn 364 363 365 6 (set (reg/f:DI 0 ax [549])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 96 [0x60])) [4 rq2h+0 S8 A64])) "CLMAX.f":74 85 {*movdi_internal}
     (nil))
(insn 365 364 366 6 (set (reg:SF 21 xmm0 [550])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) "CLMAX.f":74 131 {*movsf_internal}
     (nil))
(insn 366 365 367 6 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:166 _80 ] [166])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [549])) [3 *rq2h_413(D) S4 A32])
        (reg:SF 21 xmm0 [550])) "CLMAX.f":74 131 {*movsf_internal}
     (nil))
(insn 367 366 765 6 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -52 [0xffffffffffffffcc])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -52 [0xffffffffffffffcc])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CLMAX.f":71 221 {*addsi_1}
     (nil))
(jump_insn 765 367 766 6 (set (pc)
        (label_ref 368)) "CLMAX.f":71 683 {jump}
     (nil)
 -> 368)
;;  succ:       5 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 343 351 359 369 377 408 410 418 426 434 442 444

(barrier 766 765 786)
;; basic block 32, loop depth 0, maybe hot
;;  prev block 6, next block 7, flags: (RTL, MODIFIED)
;;  pred:       5
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 343 351 359 369 377 408 410 418 426 434 442
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 786 766 785 32 25 (nil) [1 uses])
(note 785 786 787 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 787 785 371 32 (const_int 0 [0]) "CLMAX.f":74 718 {nop}
     (nil))
;;  succ:       7 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 343 351 359 369 377 408 410 418 426 434 442

;; basic block 7, loop depth 0, maybe hot
;;  prev block 32, next block 31, flags: (RTL, MODIFIED)
;;  pred:       32 [always]  (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 343 351 359 369 377 408 410 418 426 434 442
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 371 787 372 7 3 (nil) [0 uses])
(note 372 371 373 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 373 372 767 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -56 [0xffffffffffffffc8])) [1 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -56 [0xffffffffffffffc8])) [1 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CLMAX.f":70 221 {*addsi_1}
     (nil))
(jump_insn 767 373 768 7 (set (pc)
        (label_ref 374)) "CLMAX.f":70 683 {jump}
     (nil)
 -> 374)
;;  succ:       3 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 343 351 359 369 377 408 410 418 426 434 442

(barrier 768 767 783)
;; basic block 31, loop depth 0, maybe hot
;;  prev block 7, next block 8, flags: (RTL, MODIFIED)
;;  pred:       3
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 343 351 359 369 377 408 410 418 426 434
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 783 768 782 31 24 (nil) [1 uses])
(note 782 783 784 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 784 782 377 31 (const_int 0 [0]) "CLMAX.f":71 718 {nop}
     (nil))
;;  succ:       8 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 343 351 359 369 377 408 410 418 426 434

;; basic block 8, loop depth 0, maybe hot
;;  prev block 31, next block 9, flags: (RTL, MODIFIED)
;;  pred:       31 [always]  (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 343 351 359 369 377 408 410 418 426 434
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 446 551
(code_label 377 784 378 8 2 (nil) [0 uses])
(note 378 377 379 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 379 378 380 8 (set (reg/f:DI 0 ax [551])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 48 [0x30])) [6 lm+0 S8 A64])) "CLMAX.f":78 85 {*movdi_internal}
     (nil))
(insn 380 379 892 8 (set (reg:SI 0 ax [orig:446 _417 ] [446])
        (mem:SI (reg/f:DI 0 ax [551]) [1 *lm_311(D)+0 S4 A32])) "CLMAX.f":78 86 {*movsi_internal}
     (nil))
(insn 892 380 381 8 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -528 [0xfffffffffffffdf0])) [8 %sfp+-480 S4 A128])
        (reg:SI 0 ax [orig:446 _417 ] [446])) "CLMAX.f":78 86 {*movsi_internal}
     (nil))
(insn 381 892 633 8 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [1 l+0 S4 A32])
        (const_int 1 [0x1])) "CLMAX.f":78 86 {*movsi_internal}
     (nil))
;;  succ:       9 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 343 351 359 369 377 408 410 418 426 434

;; basic block 9, loop depth 0, maybe hot
;;  prev block 8, next block 10, flags: (RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;;              19 [always] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 343 351 359 369 377 408 410 418 426 434
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 446
;; lr  def 	 17 [flags] 447 552
(code_label 633 381 382 9 14 (nil) [1 uses])
(note 382 633 893 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 893 382 383 9 (set (reg:SI 0 ax [orig:446 _417 ] [446])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -528 [0xfffffffffffffdf0])) [8 %sfp+-480 S4 A128])) "CLMAX.f":78 86 {*movsi_internal}
     (nil))
(insn 383 893 384 9 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -60 [0xffffffffffffffc4])) [1 l+0 S4 A32])
            (reg:SI 0 ax [orig:446 _417 ] [446]))) "CLMAX.f":78 11 {*cmpsi_1}
     (nil))
(insn 384 383 385 9 (set (reg:QI 0 ax [552])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CLMAX.f":78 678 {*setcc_qi}
     (nil))
(insn 385 384 386 9 (set (reg:SI 0 ax [orig:447 _419 ] [447])
        (zero_extend:SI (reg:QI 0 ax [552]))) "CLMAX.f":78 140 {*zero_extendqisi2}
     (nil))
(insn 386 385 387 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:447 _419 ] [447])
            (const_int 0 [0]))) "CLMAX.f":78 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 387 386 388 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 789)
            (pc))) "CLMAX.f":78 682 {*jcc}
     (nil)
 -> 789)
;;  succ:       33
;;              10 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 343 351 359 369 377 408 410 418 426 434

;; basic block 10, loop depth 0, maybe hot
;;  prev block 9, next block 11, flags: (RTL, MODIFIED)
;;  pred:       9 (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 343 351 359 369 377 408 410 418 426 434
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 448 449
(note 388 387 389 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 389 388 390 10 (set (reg:SI 0 ax [orig:448 _420 ] [448])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7fac75ebf900 parallel>)
                    (const_int 8 [0x8]))) [1 parallel.jsta+0 S4 A64])) "CLMAX.f":81 86 {*movsi_internal}
     (nil))
(insn 390 389 894 10 (set (reg:SI 4 si [orig:449 _421 ] [449])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7fac75ebf900 parallel>)
                    (const_int 12 [0xc]))) [1 parallel.jend+0 S4 A32])) "CLMAX.f":81 86 {*movsi_internal}
     (nil))
(insn 894 390 391 10 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -540 [0xfffffffffffffde4])) [8 %sfp+-492 S4 A32])
        (reg:SI 4 si [orig:449 _421 ] [449])) "CLMAX.f":81 86 {*movsi_internal}
     (nil))
(insn 391 894 627 10 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [1 j+0 S4 A32])
        (reg:SI 0 ax [orig:448 _420 ] [448])) "CLMAX.f":81 86 {*movsi_internal}
     (nil))
;;  succ:       11 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 343 351 359 369 377 408 410 418 426 434

;; basic block 11, loop depth 0, maybe hot
;;  prev block 10, next block 12, flags: (RTL, MODIFIED)
;;  pred:       10 (FALLTHRU)
;;              18 [always] 
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 343 351 359 369 377 408 410 418 426 434
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 449
;; lr  def 	 17 [flags] 450 553
(code_label 627 391 392 11 13 (nil) [1 uses])
(note 392 627 895 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 895 392 393 11 (set (reg:SI 0 ax [orig:449 _421 ] [449])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -540 [0xfffffffffffffde4])) [8 %sfp+-492 S4 A32])) "CLMAX.f":81 86 {*movsi_internal}
     (nil))
(insn 393 895 394 11 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -56 [0xffffffffffffffc8])) [1 j+0 S4 A32])
            (reg:SI 0 ax [orig:449 _421 ] [449]))) "CLMAX.f":81 11 {*cmpsi_1}
     (nil))
(insn 394 393 395 11 (set (reg:QI 0 ax [553])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CLMAX.f":81 678 {*setcc_qi}
     (nil))
(insn 395 394 396 11 (set (reg:SI 0 ax [orig:450 _423 ] [450])
        (zero_extend:SI (reg:QI 0 ax [553]))) "CLMAX.f":81 140 {*zero_extendqisi2}
     (nil))
(insn 396 395 397 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:450 _423 ] [450])
            (const_int 0 [0]))) "CLMAX.f":81 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 397 396 398 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 792)
            (pc))) "CLMAX.f":81 682 {*jcc}
     (nil)
 -> 792)
;;  succ:       34
;;              12 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 343 351 359 369 377 408 410 418 426 434

;; basic block 12, loop depth 0, maybe hot
;;  prev block 11, next block 13, flags: (RTL, MODIFIED)
;;  pred:       11 (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 343 351 359 369 377 408 410 418 426 434
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 451 554
(note 398 397 399 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 399 398 400 12 (set (reg/f:DI 0 ax [554])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 32 [0x20])) [6 im+0 S8 A64])) "CLMAX.f":82 85 {*movdi_internal}
     (nil))
(insn 400 399 401 12 (set (reg:SI 4 si [orig:451 _424 ] [451])
        (mem:SI (reg/f:DI 0 ax [554]) [1 *im_273(D)+0 S4 A32])) "CLMAX.f":82 86 {*movsi_internal}
     (nil))
(insn 401 400 621 12 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [1 i+0 S4 A32])
        (const_int 1 [0x1])) "CLMAX.f":82 86 {*movsi_internal}
     (nil))
;;  succ:       13 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 343 351 359 369 377 408 410 418 426 434 451

;; basic block 13, loop depth 0, maybe hot
;;  prev block 12, next block 14, flags: (RTL, MODIFIED)
;;  pred:       12 (FALLTHRU)
;;              17 [always] 
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 343 351 359 369 377 408 410 418 426 434 451
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 451
;; lr  def 	 17 [flags] 452 555
(code_label 621 401 402 13 12 (nil) [1 uses])
(note 402 621 403 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 403 402 404 13 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -52 [0xffffffffffffffcc])) [1 i+0 S4 A32])
            (reg:SI 4 si [orig:451 _424 ] [451]))) "CLMAX.f":82 11 {*cmpsi_1}
     (nil))
(insn 404 403 405 13 (set (reg:QI 0 ax [555])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CLMAX.f":82 678 {*setcc_qi}
     (nil))
(insn 405 404 406 13 (set (reg:SI 0 ax [orig:452 _426 ] [452])
        (zero_extend:SI (reg:QI 0 ax [555]))) "CLMAX.f":82 140 {*zero_extendqisi2}
     (nil))
(insn 406 405 407 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:452 _426 ] [452])
            (const_int 0 [0]))) "CLMAX.f":82 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 407 406 408 13 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 795)
            (pc))) "CLMAX.f":82 682 {*jcc}
     (nil)
 -> 795)
;;  succ:       35
;;              14 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 343 351 359 369 377 408 410 418 426 434 451

;; basic block 14, loop depth 0, maybe hot
;;  prev block 13, next block 15, flags: (RTL, MODIFIED)
;;  pred:       13 (FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 343 351 359 369 377 408 410 418 426 434 451
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 367 369 375
;; lr  def 	 17 [flags] 167 168 169 170 171 172 173 174 175 556 557 558 559 560
(note 408 407 409 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 409 408 410 14 (set (reg:SI 0 ax [556])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [1 l+0 S4 A32])) "CLMAX.f":83 86 {*movsi_internal}
     (nil))
(insn 410 409 411 14 (set (reg:DI 0 ax [orig:167 _81 ] [167])
        (sign_extend:DI (reg:SI 0 ax [556]))) "CLMAX.f":83 149 {*extendsidi2_rex64}
     (nil))
(insn 411 410 896 14 (parallel [
            (set (reg:DI 0 ax [orig:168 _82 ] [168])
                (mult:DI (reg:DI 0 ax [orig:167 _81 ] [167])
                    (reg:DI 44 r15 [orig:369 stride.28_310 ] [369])))
            (clobber (reg:CC 17 flags))
        ]) "CLMAX.f":83 349 {*muldi3_1}
     (nil))
(insn 896 411 412 14 (set (reg:DI 2 cx [orig:375 offset.29_318 ] [375])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -392 [0xfffffffffffffe78])) [8 %sfp+-344 S8 A64])) "CLMAX.f":83 85 {*movdi_internal}
     (nil))
(insn 412 896 413 14 (parallel [
            (set (reg:DI 1 dx [orig:169 _83 ] [169])
                (plus:DI (reg:DI 2 cx [orig:375 offset.29_318 ] [375])
                    (reg:DI 0 ax [orig:168 _82 ] [168])))
            (clobber (reg:CC 17 flags))
        ]) "CLMAX.f":83 222 {*adddi_1}
     (nil))
(insn 413 412 414 14 (set (reg:SI 0 ax [557])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [1 j+0 S4 A32])) "CLMAX.f":83 86 {*movsi_internal}
     (nil))
(insn 414 413 897 14 (set (reg:DI 0 ax [orig:170 _84 ] [170])
        (sign_extend:DI (reg:SI 0 ax [557]))) "CLMAX.f":83 149 {*extendsidi2_rex64}
     (nil))
(note 897 414 945 14 NOTE_INSN_DELETED)
(note 945 897 415 14 NOTE_INSN_DELETED)
(insn 415 945 416 14 (parallel [
            (set (reg:DI 0 ax [orig:171 _85 ] [171])
                (mult:DI (reg:DI 0 ax [orig:170 _84 ] [170])
                    (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                            (const_int -368 [0xfffffffffffffe90])) [8 %sfp+-320 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) "CLMAX.f":83 349 {*muldi3_1}
     (nil))
(insn 416 415 417 14 (parallel [
            (set (reg:DI 1 dx [orig:172 _86 ] [172])
                (plus:DI (reg:DI 1 dx [orig:169 _83 ] [169])
                    (reg:DI 0 ax [orig:171 _85 ] [171])))
            (clobber (reg:CC 17 flags))
        ]) "CLMAX.f":83 222 {*adddi_1}
     (nil))
(insn 417 416 418 14 (set (reg:SI 0 ax [558])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [1 i+0 S4 A32])) "CLMAX.f":83 86 {*movsi_internal}
     (nil))
(insn 418 417 419 14 (set (reg:DI 0 ax [orig:173 _87 ] [173])
        (sign_extend:DI (reg:SI 0 ax [558]))) "CLMAX.f":83 149 {*extendsidi2_rex64}
     (nil))
(insn 419 418 420 14 (parallel [
            (set (reg:DI 1 dx [orig:174 _88 ] [174])
                (plus:DI (reg:DI 1 dx [orig:172 _86 ] [172])
                    (reg:DI 0 ax [orig:173 _87 ] [173])))
            (clobber (reg:CC 17 flags))
        ]) "CLMAX.f":83 222 {*adddi_1}
     (nil))
(insn 420 419 421 14 (set (reg/f:DI 0 ax [559])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -320 [0xfffffffffffffec0])) [4 q2+0 S8 A64])) "CLMAX.f":83 85 {*movdi_internal}
     (nil))
(insn 421 420 422 14 (set (reg:SF 22 xmm1 [orig:175 _89 ] [175])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:174 _88 ] [174])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [559])) [3 *q2_427(D) S4 A32])) "CLMAX.f":83 131 {*movsf_internal}
     (nil))
(insn 422 421 423 14 (set (reg:SF 21 xmm0 [560])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S4 A32])) "CLMAX.f":83 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 2.0000000298023223876953125e-1 [0x0.cccccdp-2])
        (nil)))
(insn 423 422 424 14 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [560])
            (reg:SF 22 xmm1 [orig:175 _89 ] [175]))) "CLMAX.f":83 53 {*cmpisf}
     (nil))
(jump_insn 424 423 428 14 (set (pc)
        (if_then_else (unlt (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 769)
            (pc))) "CLMAX.f":83 682 {*jcc}
     (nil)
 -> 769)
;;  succ:       15 (FALLTHRU)
;;              16
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 343 351 359 369 377 408 410 418 426 434 451

;; basic block 15, loop depth 0, maybe hot
;;  prev block 14, next block 16, flags: (RTL, MODIFIED)
;;  pred:       14 (FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 343 351 359 369 377 408 410 418 426 434 451
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 377 383
;; lr  def 	 17 [flags] 176 177 178 179 180 561 562 563 564
(note 428 424 429 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 429 428 430 15 (set (reg:SI 0 ax [561])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [1 j+0 S4 A32])) "CLMAX.f":84 86 {*movsi_internal}
     (nil))
(insn 430 429 431 15 (set (reg:DI 0 ax [orig:176 _90 ] [176])
        (sign_extend:DI (reg:SI 0 ax [561]))) "CLMAX.f":84 149 {*extendsidi2_rex64}
     (nil))
(insn 431 430 898 15 (parallel [
            (set (reg:DI 0 ax [orig:177 _91 ] [177])
                (mult:DI (reg:DI 0 ax [orig:176 _90 ] [176])
                    (reg:DI 37 r8 [orig:377 stride.38_321 ] [377])))
            (clobber (reg:CC 17 flags))
        ]) "CLMAX.f":84 349 {*muldi3_1}
     (nil))
(insn 898 431 432 15 (set (reg:DI 2 cx [orig:383 offset.39_328 ] [383])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -384 [0xfffffffffffffe80])) [8 %sfp+-336 S8 A128])) "CLMAX.f":84 85 {*movdi_internal}
     (nil))
(insn 432 898 433 15 (parallel [
            (set (reg:DI 1 dx [orig:178 _92 ] [178])
                (plus:DI (reg:DI 2 cx [orig:383 offset.39_328 ] [383])
                    (reg:DI 0 ax [orig:177 _91 ] [177])))
            (clobber (reg:CC 17 flags))
        ]) "CLMAX.f":84 222 {*adddi_1}
     (nil))
(insn 433 432 434 15 (set (reg:SI 0 ax [562])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [1 i+0 S4 A32])) "CLMAX.f":84 86 {*movsi_internal}
     (nil))
(insn 434 433 435 15 (set (reg:DI 0 ax [orig:179 _93 ] [179])
        (sign_extend:DI (reg:SI 0 ax [562]))) "CLMAX.f":84 149 {*extendsidi2_rex64}
     (nil))
(insn 435 434 436 15 (parallel [
            (set (reg:DI 1 dx [orig:180 _94 ] [180])
                (plus:DI (reg:DI 1 dx [orig:178 _92 ] [178])
                    (reg:DI 0 ax [orig:179 _93 ] [179])))
            (clobber (reg:CC 17 flags))
        ]) "CLMAX.f":84 222 {*adddi_1}
     (nil))
(insn 436 435 437 15 (set (reg/f:DI 0 ax [563])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 88 [0x58])) [4 rq2l+0 S8 A64])) "CLMAX.f":84 85 {*movdi_internal}
     (nil))
(insn 437 436 438 15 (set (reg:SF 21 xmm0 [564])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) "CLMAX.f":84 131 {*movsf_internal}
     (nil))
(insn 438 437 770 15 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:180 _94 ] [180])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [563])) [3 *rq2l_428(D) S4 A32])
        (reg:SF 21 xmm0 [564])) "CLMAX.f":84 131 {*movsf_internal}
     (nil))
(jump_insn 770 438 771 15 (set (pc)
        (label_ref 466)) 683 {jump}
     (nil)
 -> 466)
;;  succ:       17 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 343 351 359 369 377 408 410 418 426 434 451

(barrier 771 770 769)
;; basic block 16, loop depth 0, maybe hot
;;  prev block 15, next block 17, flags: (RTL, MODIFIED)
;;  pred:       14
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 343 351 359 369 377 408 410 418 426 434 451
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 367 369 375 377 383
;; lr  def 	 17 [flags] 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 565 566 567 568 569 570 571
(code_label 769 771 442 16 23 (nil) [1 uses])
(note 442 769 443 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 443 442 444 16 (set (reg:SI 0 ax [565])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [1 l+0 S4 A32])) "CLMAX.f":86 86 {*movsi_internal}
     (nil))
(insn 444 443 445 16 (set (reg:DI 0 ax [orig:181 _95 ] [181])
        (sign_extend:DI (reg:SI 0 ax [565]))) "CLMAX.f":86 149 {*extendsidi2_rex64}
     (nil))
(insn 445 444 899 16 (parallel [
            (set (reg:DI 0 ax [orig:182 _96 ] [182])
                (mult:DI (reg:DI 0 ax [orig:181 _95 ] [181])
                    (reg:DI 44 r15 [orig:369 stride.28_310 ] [369])))
            (clobber (reg:CC 17 flags))
        ]) "CLMAX.f":86 349 {*muldi3_1}
     (nil))
(insn 899 445 446 16 (set (reg:DI 2 cx [orig:375 offset.29_318 ] [375])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -392 [0xfffffffffffffe78])) [8 %sfp+-344 S8 A64])) "CLMAX.f":86 85 {*movdi_internal}
     (nil))
(insn 446 899 447 16 (parallel [
            (set (reg:DI 1 dx [orig:183 _97 ] [183])
                (plus:DI (reg:DI 2 cx [orig:375 offset.29_318 ] [375])
                    (reg:DI 0 ax [orig:182 _96 ] [182])))
            (clobber (reg:CC 17 flags))
        ]) "CLMAX.f":86 222 {*adddi_1}
     (nil))
(insn 447 446 448 16 (set (reg:SI 0 ax [566])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [1 j+0 S4 A32])) "CLMAX.f":86 86 {*movsi_internal}
     (nil))
(insn 448 447 900 16 (set (reg:DI 0 ax [orig:184 _98 ] [184])
        (sign_extend:DI (reg:SI 0 ax [566]))) "CLMAX.f":86 149 {*extendsidi2_rex64}
     (nil))
(note 900 448 944 16 NOTE_INSN_DELETED)
(note 944 900 449 16 NOTE_INSN_DELETED)
(insn 449 944 450 16 (parallel [
            (set (reg:DI 0 ax [orig:185 _99 ] [185])
                (mult:DI (reg:DI 0 ax [orig:184 _98 ] [184])
                    (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                            (const_int -368 [0xfffffffffffffe90])) [8 %sfp+-320 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) "CLMAX.f":86 349 {*muldi3_1}
     (nil))
(insn 450 449 451 16 (parallel [
            (set (reg:DI 1 dx [orig:186 _100 ] [186])
                (plus:DI (reg:DI 1 dx [orig:183 _97 ] [183])
                    (reg:DI 0 ax [orig:185 _99 ] [185])))
            (clobber (reg:CC 17 flags))
        ]) "CLMAX.f":86 222 {*adddi_1}
     (nil))
(insn 451 450 452 16 (set (reg:SI 0 ax [567])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [1 i+0 S4 A32])) "CLMAX.f":86 86 {*movsi_internal}
     (nil))
(insn 452 451 453 16 (set (reg:DI 0 ax [orig:187 _101 ] [187])
        (sign_extend:DI (reg:SI 0 ax [567]))) "CLMAX.f":86 149 {*extendsidi2_rex64}
     (nil))
(insn 453 452 454 16 (parallel [
            (set (reg:DI 1 dx [orig:188 _102 ] [188])
                (plus:DI (reg:DI 1 dx [orig:186 _100 ] [186])
                    (reg:DI 0 ax [orig:187 _101 ] [187])))
            (clobber (reg:CC 17 flags))
        ]) "CLMAX.f":86 222 {*adddi_1}
     (nil))
(insn 454 453 455 16 (set (reg/f:DI 0 ax [568])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -320 [0xfffffffffffffec0])) [4 q2+0 S8 A64])) "CLMAX.f":86 85 {*movdi_internal}
     (nil))
(insn 455 454 456 16 (set (reg:SF 21 xmm0 [orig:189 _103 ] [189])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:188 _102 ] [188])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [568])) [3 *q2_427(D) S4 A32])) "CLMAX.f":86 131 {*movsf_internal}
     (nil))
(insn 456 455 457 16 (set (reg:SI 0 ax [569])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [1 j+0 S4 A32])) "CLMAX.f":86 86 {*movsi_internal}
     (nil))
(insn 457 456 458 16 (set (reg:DI 0 ax [orig:190 _104 ] [190])
        (sign_extend:DI (reg:SI 0 ax [569]))) "CLMAX.f":86 149 {*extendsidi2_rex64}
     (nil))
(insn 458 457 901 16 (parallel [
            (set (reg:DI 0 ax [orig:191 _105 ] [191])
                (mult:DI (reg:DI 0 ax [orig:190 _104 ] [190])
                    (reg:DI 37 r8 [orig:377 stride.38_321 ] [377])))
            (clobber (reg:CC 17 flags))
        ]) "CLMAX.f":86 349 {*muldi3_1}
     (nil))
(insn 901 458 459 16 (set (reg:DI 2 cx [orig:383 offset.39_328 ] [383])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -384 [0xfffffffffffffe80])) [8 %sfp+-336 S8 A128])) "CLMAX.f":86 85 {*movdi_internal}
     (nil))
(insn 459 901 460 16 (parallel [
            (set (reg:DI 1 dx [orig:192 _106 ] [192])
                (plus:DI (reg:DI 2 cx [orig:383 offset.39_328 ] [383])
                    (reg:DI 0 ax [orig:191 _105 ] [191])))
            (clobber (reg:CC 17 flags))
        ]) "CLMAX.f":86 222 {*adddi_1}
     (nil))
(insn 460 459 461 16 (set (reg:SI 0 ax [570])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [1 i+0 S4 A32])) "CLMAX.f":86 86 {*movsi_internal}
     (nil))
(insn 461 460 462 16 (set (reg:DI 0 ax [orig:193 _107 ] [193])
        (sign_extend:DI (reg:SI 0 ax [570]))) "CLMAX.f":86 149 {*extendsidi2_rex64}
     (nil))
(insn 462 461 463 16 (parallel [
            (set (reg:DI 1 dx [orig:194 _108 ] [194])
                (plus:DI (reg:DI 1 dx [orig:192 _106 ] [192])
                    (reg:DI 0 ax [orig:193 _107 ] [193])))
            (clobber (reg:CC 17 flags))
        ]) "CLMAX.f":86 222 {*adddi_1}
     (nil))
(insn 463 462 464 16 (set (reg:SF 21 xmm0 [orig:195 _109 ] [195])
        (sqrt:SF (reg:SF 21 xmm0 [orig:189 _103 ] [189]))) "CLMAX.f":86 872 {*sqrtsf2_sse}
     (nil))
(insn 464 463 465 16 (set (reg/f:DI 0 ax [571])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 88 [0x58])) [4 rq2l+0 S8 A64])) "CLMAX.f":86 85 {*movdi_internal}
     (nil))
(insn 465 464 466 16 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:194 _108 ] [194])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [571])) [3 *rq2l_428(D) S4 A32])
        (reg:SF 21 xmm0 [orig:195 _109 ] [195])) "CLMAX.f":86 131 {*movsf_internal}
     (nil))
;;  succ:       17 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 343 351 359 369 377 408 410 418 426 434 451

;; basic block 17, loop depth 0, maybe hot
;;  prev block 16, next block 35, flags: (RTL, MODIFIED)
;;  pred:       16 (FALLTHRU)
;;              15 [always] 
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 343 351 359 369 377 408 410 418 426 434 451
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 343 349 351 357 359 365 377 383 390 396 398 400 406 408 410 416 418 424
;; lr  def 	 17 [flags
(code_label 466 465 467 17 11 (nil) [1 uses])
(note 467 466 468 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 468 467 469 17 (set (reg:SI 0 ax [572])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [1 l+0 S4 A32])) "CLMAX.f":102 86 {*movsi_internal}
     (nil))
(insn 469 468 470 17 (set (reg:DI 0 ax [orig:196 _110 ] [196])
        (sign_extend:DI (reg:SI 0 ax [572]))) "CLMAX.f":102 149 {*extendsidi2_rex64}
     (nil))
(insn 470 469 471 17 (parallel [
            (set (reg:DI 1 dx [orig:197 _111 ] [197])
                (plus:DI (reg:DI 0 ax [orig:196 _110 ] [196])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CLMAX.f":102 222 {*adddi_1}
     (nil))
(insn 471 470 472 17 (set (reg/f:DI 0 ax [573])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -296 [0xfffffffffffffed8])) [4 deta+0 S8 A64])) "CLMAX.f":102 85 {*movdi_internal}
     (nil))
(insn 472 471 473 17 (set (reg:SF 22 xmm1 [orig:198 _112 ] [198])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:197 _111 ] [197])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [573])) [3 *deta_431(D) S4 A32])) "CLMAX.f":102 131 {*movsf_internal}
     (nil))
(insn 473 472 474 17 (set (reg:SI 0 ax [574])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [1 j+0 S4 A32])) "CLMAX.f":102 86 {*movsi_internal}
     (nil))
(insn 474 473 902 17 (set (reg:DI 0 ax [orig:199 _113 ] [199])
        (sign_extend:DI (reg:SI 0 ax [574]))) "CLMAX.f":102 149 {*extendsidi2_rex64}
     (nil))
(note 902 474 943 17 NOTE_INSN_DELETED)
(note 943 902 475 17 NOTE_INSN_DELETED)
(insn 475 943 903 17 (parallel [
            (set (reg:DI 0 ax [orig:200 _114 ] [200])
                (mult:DI (reg:DI 0 ax [orig:199 _113 ] [199])
                    (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                            (const_int -432 [0xfffffffffffffe50])) [8 %sfp+-384 S8 A128])))
            (clobber (reg:CC 17 flags))
        ]) "CLMAX.f":102 349 {*muldi3_1}
     (nil))
(insn 903 475 476 17 (set (reg:DI 2 cx [orig:396 offset.22_344 ] [396])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -448 [0xfffffffffffffe40])) [8 %sfp+-400 S8 A128])) "CLMAX.f":102 85 {*movdi_internal}
     (nil))
(insn 476 903 477 17 (parallel [
            (set (reg:DI 1 dx [orig:201 _115 ] [201])
                (plus:DI (reg:DI 2 cx [orig:396 offset.22_344 ] [396])
                    (reg:DI 0 ax [orig:200 _114 ] [200])))
            (clobber (reg:CC 17 flags))
        ]) "CLMAX.f":102 222 {*adddi_1}
     (nil))
(insn 477 476 478 17 (set (reg:SI 0 ax [575])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [1 i+0 S4 A32])) "CLMAX.f":102 86 {*movsi_internal}
     (nil))
(insn 478 477 479 17 (set (reg:DI 0 ax [orig:202 _116 ] [202])
        (sign_extend:DI (reg:SI 0 ax [575]))) "CLMAX.f":102 149 {*extendsidi2_rex64}
     (nil))
(insn 479 478 480 17 (parallel [
            (set (reg:DI 1 dx [orig:203 _117 ] [203])
                (plus:DI (reg:DI 1 dx [orig:201 _115 ] [201])
                    (reg:DI 0 ax [orig:202 _116 ] [202])))
            (clobber (reg:CC 17 flags))
        ]) "CLMAX.f":102 222 {*adddi_1}
     (nil))
(insn 480 479 481 17 (set (reg/f:DI 0 ax [576])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -304 [0xfffffffffffffed0])) [4 pdsl+0 S8 A64])) "CLMAX.f":102 85 {*movdi_internal}
     (nil))
(insn 481 480 482 17 (set (reg:SF 21 xmm0 [orig:204 _118 ] [204])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:203 _117 ] [203])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [576])) [3 *pdsl_432(D) S4 A32])) "CLMAX.f":102 131 {*movsf_internal}
     (nil))
(insn 482 481 483 17 (set (reg:SF 22 xmm1 [orig:205 _119 ] [205])
        (mult:SF (reg:SF 22 xmm1 [orig:198 _112 ] [198])
            (reg:SF 21 xmm0 [orig:204 _118 ] [204]))) "CLMAX.f":102 838 {*fop_sf_comm}
     (nil))
(insn 483 482 484 17 (set (reg:SI 0 ax [577])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [1 l+0 S4 A32])) "CLMAX.f":102 86 {*movsi_internal}
     (nil))
(insn 484 483 904 17 (set (reg:DI 0 ax [orig:206 _120 ] [206])
        (sign_extend:DI (reg:SI 0 ax [577]))) "CLMAX.f":102 149 {*extendsidi2_rex64}
     (nil))
(note 904 484 942 17 NOTE_INSN_DELETED)
(note 942 904 485 17 NOTE_INSN_DELETED)
(insn 485 942 905 17 (parallel [
            (set (reg:DI 0 ax [orig:207 _121 ] [207])
                (mult:DI (reg:DI 0 ax [orig:206 _120 ] [206])
                    (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                            (const_int -536 [0xfffffffffffffde8])) [8 %sfp+-488 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) "CLMAX.f":102 349 {*muldi3_1}
     (nil))
(insn 905 485 486 17 (set (reg:DI 2 cx [orig:406 offset.17_357 ] [406])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -464 [0xfffffffffffffe30])) [8 %sfp+-416 S8 A128])) "CLMAX.f":102 85 {*movdi_internal}
     (nil))
(insn 486 905 487 17 (parallel [
            (set (reg:DI 1 dx [orig:208 _122 ] [208])
                (plus:DI (reg:DI 2 cx [orig:406 offset.17_357 ] [406])
                    (reg:DI 0 ax [orig:207 _121 ] [207])))
            (clobber (reg:CC 17 flags))
        ]) "CLMAX.f":102 222 {*adddi_1}
     (nil))
(insn 487 486 488 17 (set (reg:SI 0 ax [578])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [1 j+0 S4 A32])) "CLMAX.f":102 86 {*movsi_internal}
     (nil))
(insn 488 487 906 17 (set (reg:DI 0 ax [orig:209 _123 ] [209])
        (sign_extend:DI (reg:SI 0 ax [578]))) "CLMAX.f":102 149 {*extendsidi2_rex64}
     (nil))
(note 906 488 941 17 NOTE_INSN_DELETED)
(note 941 906 489 17 NOTE_INSN_DELETED)
(insn 489 941 490 17 (parallel [
            (set (reg:DI 0 ax [orig:210 _124 ] [210])
                (mult:DI (reg:DI 0 ax [orig:209 _123 ] [209])
                    (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                            (const_int -400 [0xfffffffffffffe70])) [8 %sfp+-352 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) "CLMAX.f":102 349 {*muldi3_1}
     (nil))
(insn 490 489 491 17 (parallel [
            (set (reg:DI 1 dx [orig:211 _125 ] [211])
                (plus:DI (reg:DI 1 dx [orig:208 _122 ] [208])
                    (reg:DI 0 ax [orig:210 _124 ] [210])))
            (clobber (reg:CC 17 flags))
        ]) "CLMAX.f":102 222 {*adddi_1}
     (nil))
(insn 491 490 492 17 (set (reg:SI 0 ax [579])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [1 i+0 S4 A32])) "CLMAX.f":102 86 {*movsi_internal}
     (nil))
(insn 492 491 493 17 (set (reg:DI 0 ax [orig:212 _126 ] [212])
        (sign_extend:DI (reg:SI 0 ax [579]))) "CLMAX.f":102 149 {*extendsidi2_rex64}
     (nil))
(insn 493 492 494 17 (parallel [
            (set (reg:DI 1 dx [orig:213 _127 ] [213])
                (plus:DI (reg:DI 1 dx [orig:211 _125 ] [211])
                    (reg:DI 0 ax [orig:212 _126 ] [212])))
            (clobber (reg:CC 17 flags))
        ]) "CLMAX.f":102 222 {*adddi_1}
     (nil))
(insn 494 493 495 17 (set (reg/f:DI 0 ax [580])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -312 [0xfffffffffffffec8])) [4 htm+0 S8 A64])) "CLMAX.f":102 85 {*movdi_internal}
     (nil))
(insn 495 494 496 17 (set (reg:SF 21 xmm0 [orig:214 _128 ] [214])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:213 _127 ] [213])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [580])) [3 *htm_433(D) S4 A32])) "CLMAX.f":102 131 {*movsf_internal}
     (nil))
(insn 496 495 497 17 (set (reg:SF 21 xmm0 [581])
        (mult:SF (reg:SF 21 xmm0 [orig:214 _128 ] [214])
            (reg:SF 22 xmm1 [orig:205 _119 ] [205]))) "CLMAX.f":102 838 {*fop_sf_comm}
     (nil))
(insn 497 496 498 17 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -276 [0xfffffffffffffeec])) [3 dp+0 S4 A32])
        (reg:SF 21 xmm0 [581])) "CLMAX.f":102 131 {*movsf_internal}
     (nil))
(insn 498 497 499 17 (set (reg:SI 0 ax [582])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [1 j+0 S4 A32])) "CLMAX.f":106 86 {*movsi_internal}
     (nil))
(insn 499 498 500 17 (set (reg:DI 0 ax [orig:215 _129 ] [215])
        (sign_extend:DI (reg:SI 0 ax [582]))) "CLMAX.f":106 149 {*extendsidi2_rex64}
     (nil))
(insn 500 499 939 17 (parallel [
            (set (reg:DI 0 ax [orig:216 _130 ] [216])
                (mult:DI (reg:DI 0 ax [orig:215 _129 ] [215])
                    (reg:DI 42 r13 [orig:359 stride.33_297 ] [359])))
            (clobber (reg:CC 17 flags))
        ]) "CLMAX.f":106 349 {*muldi3_1}
     (nil))
(note 939 500 949 17 NOTE_INSN_DELETED)
(note 949 939 907 17 NOTE_INSN_DELETED)
(insn 907 949 501 17 (set (reg:DI 2 cx [orig:365 offset.34_304 ] [365])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -360 [0xfffffffffffffe98])) [8 %sfp+-312 S8 A64])) "CLMAX.f":106 85 {*movdi_internal}
     (nil))
(insn 501 907 502 17 (parallel [
            (set (reg:DI 1 dx [orig:217 _131 ] [217])
                (plus:DI (reg:DI 2 cx [orig:365 offset.34_304 ] [365])
                    (reg:DI 0 ax [orig:216 _130 ] [216])))
            (clobber (reg:CC 17 flags))
        ]) "CLMAX.f":106 222 {*adddi_1}
     (nil))
(insn 502 501 503 17 (set (reg:SI 0 ax [583])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [1 i+0 S4 A32])) "CLMAX.f":106 86 {*movsi_internal}
     (nil))
(insn 503 502 504 17 (set (reg:DI 0 ax [orig:218 _132 ] [218])
        (sign_extend:DI (reg:SI 0 ax [583]))) "CLMAX.f":106 149 {*extendsidi2_rex64}
     (nil))
(insn 504 503 505 17 (parallel [
            (set (reg:DI 1 dx [orig:219 _133 ] [219])
                (plus:DI (reg:DI 1 dx [orig:217 _131 ] [217])
                    (reg:DI 0 ax [orig:218 _132 ] [218])))
            (clobber (reg:CC 17 flags))
        ]) "CLMAX.f":106 222 {*adddi_1}
     (nil))
(insn 505 504 506 17 (set (reg/f:DI 0 ax [584])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 96 [0x60])) [4 rq2h+0 S8 A64])) "CLMAX.f":106 85 {*movdi_internal}
     (nil))
(insn 506 505 507 17 (set (reg:SF 22 xmm1 [orig:220 _134 ] [220])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:219 _133 ] [219])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [584])) [3 *rq2h_413(D) S4 A32])) "CLMAX.f":106 131 {*movsf_internal}
     (nil))
(insn 507 506 508 17 (set (reg:SI 0 ax [585])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [1 j+0 S4 A32])) "CLMAX.f":106 86 {*movsi_internal}
     (nil))
(insn 508 507 509 17 (set (reg:DI 0 ax [orig:221 _135 ] [221])
        (sign_extend:DI (reg:SI 0 ax [585]))) "CLMAX.f":106 149 {*extendsidi2_rex64}
     (nil))
(insn 509 508 938 17 (parallel [
            (set (reg:DI 0 ax [orig:222 _136 ] [222])
                (mult:DI (reg:DI 0 ax [orig:221 _135 ] [221])
                    (reg:DI 37 r8 [orig:377 stride.38_321 ] [377])))
            (clobber (reg:CC 17 flags))
        ]) "CLMAX.f":106 349 {*muldi3_1}
     (nil))
(insn 938 509 510 17 (set (reg:DI 2 cx [orig:383 offset.39_328 ] [383])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -384 [0xfffffffffffffe80])) [8 %sfp+-336 S8 A128])) "CLMAX.f":106 85 {*movdi_internal}
     (nil))
(insn 510 938 511 17 (parallel [
            (set (reg:DI 1 dx [orig:223 _137 ] [223])
                (plus:DI (reg:DI 2 cx [orig:383 offset.39_328 ] [383])
                    (reg:DI 0 ax [orig:222 _136 ] [222])))
            (clobber (reg:CC 17 flags))
        ]) "CLMAX.f":106 222 {*adddi_1}
     (nil))
(insn 511 510 512 17 (set (reg:SI 0 ax [586])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [1 i+0 S4 A32])) "CLMAX.f":106 86 {*movsi_internal}
     (nil))
(insn 512 511 513 17 (set (reg:DI 0 ax [orig:224 _138 ] [224])
        (sign_extend:DI (reg:SI 0 ax [586]))) "CLMAX.f":106 149 {*extendsidi2_rex64}
     (nil))
(insn 513 512 514 17 (parallel [
            (set (reg:DI 1 dx [orig:225 _139 ] [225])
                (plus:DI (reg:DI 1 dx [orig:223 _137 ] [223])
                    (reg:DI 0 ax [orig:224 _138 ] [224])))
            (clobber (reg:CC 17 flags))
        ]) "CLMAX.f":106 222 {*adddi_1}
     (nil))
(insn 514 513 515 17 (set (reg/f:DI 0 ax [587])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 88 [0x58])) [4 rq2l+0 S8 A64])) "CLMAX.f":106 85 {*movdi_internal}
     (nil))
(insn 515 514 516 17 (set (reg:SF 21 xmm0 [orig:226 _140 ] [226])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:225 _139 ] [225])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [587])) [3 *rq2l_428(D) S4 A32])) "CLMAX.f":106 131 {*movsf_internal}
     (nil))
(insn 516 515 517 17 (set (reg:SF 21 xmm0 [orig:227 _141 ] [227])
        (plus:SF (reg:SF 21 xmm0 [orig:226 _140 ] [226])
            (reg:SF 22 xmm1 [orig:220 _134 ] [220]))) "CLMAX.f":106 838 {*fop_sf_comm}
     (nil))
(insn 517 516 518 17 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -280 [0xfffffffffffffee8])) [3 rq2m+0 S4 A32])
        (reg:SF 21 xmm0 [orig:227 _141 ] [227])) "CLMAX.f":106 131 {*movsf_internal}
     (nil))
(insn 518 517 519 17 (set (reg:SI 0 ax [588])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [1 l+0 S4 A32])) "CLMAX.f":111 86 {*movsi_internal}
     (nil))
(insn 519 518 520 17 (set (reg:DI 0 ax [orig:228 _142 ] [228])
        (sign_extend:DI (reg:SI 0 ax [588]))) "CLMAX.f":111 149 {*extendsidi2_rex64}
     (nil))
(insn 520 519 937 17 (parallel [
            (set (reg:DI 0 ax [orig:229 _143 ] [229])
                (mult:DI (reg:DI 0 ax [orig:228 _142 ] [228])
                    (reg:DI 38 r9 [orig:410 stride.60_363 ] [410])))
            (clobber (reg:CC 17 flags))
        ]) "CLMAX.f":111 349 {*muldi3_1}
     (nil))
(note 937 520 948 17 NOTE_INSN_DELETED)
(note 948 937 909 17 NOTE_INSN_DELETED)
(insn 909 948 521 17 (set (reg:DI 1 dx [orig:416 offset.61_371 ] [416])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -416 [0xfffffffffffffe60])) [8 %sfp+-368 S8 A128])) "CLMAX.f":111 85 {*movdi_internal}
     (nil))
(insn 521 909 522 17 (parallel [
            (set (reg:DI 1 dx [orig:230 _144 ] [230])
                (plus:DI (reg:DI 1 dx [orig:416 offset.61_371 ] [416])
                    (reg:DI 0 ax [orig:229 _143 ] [229])))
            (clobber (reg:CC 17 flags))
        ]) "CLMAX.f":111 222 {*adddi_1}
     (nil))
(insn 522 521 523 17 (set (reg:SI 0 ax [589])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [1 j+0 S4 A32])) "CLMAX.f":111 86 {*movsi_internal}
     (nil))
(insn 523 522 524 17 (set (reg:DI 0 ax [orig:231 _145 ] [231])
        (sign_extend:DI (reg:SI 0 ax [589]))) "CLMAX.f":111 149 {*extendsidi2_rex64}
     (nil))
(insn 524 523 525 17 (parallel [
            (set (reg:DI 0 ax [orig:232 _146 ] [232])
                (mult:DI (reg:DI 0 ax [orig:231 _145 ] [231])
                    (reg:DI 39 r10 [orig:408 stride.58_360 ] [408])))
            (clobber (reg:CC 17 flags))
        ]) "CLMAX.f":111 349 {*muldi3_1}
     (nil))
(insn 525 524 526 17 (parallel [
            (set (reg:DI 1 dx [orig:233 _147 ] [233])
                (plus:DI (reg:DI 1 dx [orig:230 _144 ] [230])
                    (reg:DI 0 ax [orig:232 _146 ] [232])))
            (clobber (reg:CC 17 flags))
        ]) "CLMAX.f":111 222 {*adddi_1}
     (nil))
(insn 526 525 527 17 (set (reg:SI 0 ax [590])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [1 i+0 S4 A32])) "CLMAX.f":111 86 {*movsi_internal}
     (nil))
(insn 527 526 528 17 (set (reg:DI 0 ax [orig:234 _148 ] [234])
        (sign_extend:DI (reg:SI 0 ax [590]))) "CLMAX.f":111 149 {*extendsidi2_rex64}
     (nil))
(insn 528 527 529 17 (parallel [
            (set (reg:DI 1 dx [orig:235 _149 ] [235])
                (plus:DI (reg:DI 1 dx [orig:233 _147 ] [233])
                    (reg:DI 0 ax [orig:234 _148 ] [234])))
            (clobber (reg:CC 17 flags))
        ]) "CLMAX.f":111 222 {*adddi_1}
     (nil))
(insn 529 528 530 17 (set (reg/f:DI 0 ax [591])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -328 [0xfffffffffffffeb8])) [4 zint+0 S8 A64])) "CLMAX.f":111 85 {*movdi_internal}
     (nil))
(insn 530 529 531 17 (set (reg:SF 22 xmm1 [orig:236 _150 ] [236])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:235 _149 ] [235])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [591])) [3 *zint_436(D) S4 A32])) "CLMAX.f":111 131 {*movsf_internal}
     (nil))
(insn 531 530 532 17 (set (reg:SI 0 ax [592])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [1 l+0 S4 A32])) "CLMAX.f":111 86 {*movsi_internal}
     (nil))
(insn 532 531 533 17 (parallel [
            (set (reg:SI 0 ax [orig:237 _151 ] [237])
                (plus:SI (reg:SI 0 ax [592])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CLMAX.f":111 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 533 532 534 17 (set (reg:DI 0 ax [orig:238 _152 ] [238])
        (sign_extend:DI (reg:SI 0 ax [orig:237 _151 ] [237]))) "CLMAX.f":111 149 {*extendsidi2_rex64}
     (nil))
(insn 534 533 910 17 (parallel [
            (set (reg:DI 0 ax [orig:239 _153 ] [239])
                (mult:DI (reg:DI 0 ax [orig:238 _152 ] [238])
                    (reg:DI 38 r9 [orig:410 stride.60_363 ] [410])))
            (clobber (reg:CC 17 flags))
        ]) "CLMAX.f":111 349 {*muldi3_1}
     (nil))
(insn 910 534 535 17 (set (reg:DI 1 dx [orig:416 offset.61_371 ] [416])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -416 [0xfffffffffffffe60])) [8 %sfp+-368 S8 A128])) "CLMAX.f":111 85 {*movdi_internal}
     (nil))
(insn 535 910 536 17 (parallel [
            (set (reg:DI 1 dx [orig:240 _154 ] [240])
                (plus:DI (reg:DI 1 dx [orig:416 offset.61_371 ] [416])
                    (reg:DI 0 ax [orig:239 _153 ] [239])))
            (clobber (reg:CC 17 flags))
        ]) "CLMAX.f":111 222 {*adddi_1}
     (nil))
(insn 536 535 537 17 (set (reg:SI 0 ax [593])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [1 j+0 S4 A32])) "CLMAX.f":111 86 {*movsi_internal}
     (nil))
(insn 537 536 538 17 (set (reg:DI 0 ax [orig:241 _155 ] [241])
        (sign_extend:DI (reg:SI 0 ax [593]))) "CLMAX.f":111 149 {*extendsidi2_rex64}
     (nil))
(insn 538 537 539 17 (parallel [
            (set (reg:DI 0 ax [orig:242 _156 ] [242])
                (mult:DI (reg:DI 0 ax [orig:241 _155 ] [241])
                    (reg:DI 39 r10 [orig:408 stride.58_360 ] [408])))
            (clobber (reg:CC 17 flags))
        ]) "CLMAX.f":111 349 {*muldi3_1}
     (nil))
(insn 539 538 540 17 (parallel [
            (set (reg:DI 1 dx [orig:243 _157 ] [243])
                (plus:DI (reg:DI 1 dx [orig:240 _154 ] [240])
                    (reg:DI 0 ax [orig:242 _156 ] [242])))
            (clobber (reg:CC 17 flags))
        ]) "CLMAX.f":111 222 {*adddi_1}
     (nil))
(insn 540 539 541 17 (set (reg:SI 0 ax [594])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [1 i+0 S4 A32])) "CLMAX.f":111 86 {*movsi_internal}
     (nil))
(insn 541 540 542 17 (set (reg:DI 0 ax [orig:244 _158 ] [244])
        (sign_extend:DI (reg:SI 0 ax [594]))) "CLMAX.f":111 149 {*extendsidi2_rex64}
     (nil))
(insn 542 541 543 17 (parallel [
            (set (reg:DI 1 dx [orig:245 _159 ] [245])
                (plus:DI (reg:DI 1 dx [orig:243 _157 ] [243])
                    (reg:DI 0 ax [orig:244 _158 ] [244])))
            (clobber (reg:CC 17 flags))
        ]) "CLMAX.f":111 222 {*adddi_1}
     (nil))
(insn 543 542 544 17 (set (reg/f:DI 0 ax [595])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -328 [0xfffffffffffffeb8])) [4 zint+0 S8 A64])) "CLMAX.f":111 85 {*movdi_internal}
     (nil))
(insn 544 543 545 17 (set (reg:SF 21 xmm0 [orig:246 _160 ] [246])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:245 _159 ] [245])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [595])) [3 *zint_436(D) S4 A32])) "CLMAX.f":111 131 {*movsf_internal}
     (nil))
(insn 545 544 546 17 (set (reg:SF 21 xmm0 [orig:247 _161 ] [247])
        (plus:SF (reg:SF 21 xmm0 [orig:246 _160 ] [246])
            (reg:SF 22 xmm1 [orig:236 _150 ] [236]))) "CLMAX.f":111 838 {*fop_sf_comm}
     (nil))
(insn 546 545 547 17 (set (reg:SF 22 xmm1 [orig:248 _162 ] [248])
        (reg:SF 21 xmm0 [orig:247 _161 ] [247])) "CLMAX.f":111 131 {*movsf_internal}
     (nil))
(insn 547 546 548 17 (set (reg:SF 21 xmm0 [596])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0  S4 A32])) "CLMAX.f":111 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 5.0e-1 [0x0.8p+0])
        (nil)))
(insn 548 547 549 17 (set (reg:SF 21 xmm0 [orig:249 _163 ] [249])
        (mult:SF (reg:SF 21 xmm0 [596])
            (reg:SF 22 xmm1 [orig:248 _162 ] [248]))) "CLMAX.f":111 838 {*fop_sf_comm}
     (nil))
(insn 549 548 550 17 (set (reg:SI 0 ax [597])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [1 j+0 S4 A32])) "CLMAX.f":111 86 {*movsi_internal}
     (nil))
(insn 550 549 551 17 (set (reg:DI 0 ax [orig:250 _164 ] [250])
        (sign_extend:DI (reg:SI 0 ax [597]))) "CLMAX.f":111 149 {*extendsidi2_rex64}
     (nil))
(insn 551 550 911 17 (parallel [
            (set (reg:DI 0 ax [orig:251 _165 ] [251])
                (mult:DI (reg:DI 0 ax [orig:250 _164 ] [250])
                    (reg:DI 43 r14 [orig:418 stride.9_374 ] [418])))
            (clobber (reg:CC 17 flags))
        ]) "CLMAX.f":111 349 {*muldi3_1}
     (nil))
(insn 911 551 552 17 (set (reg:DI 1 dx [orig:424 offset.10_381 ] [424])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -480 [0xfffffffffffffe20])) [8 %sfp+-432 S8 A128])) "CLMAX.f":111 85 {*movdi_internal}
     (nil))
(insn 552 911 553 17 (parallel [
            (set (reg:DI 1 dx [orig:252 _166 ] [252])
                (plus:DI (reg:DI 1 dx [orig:424 offset.10_381 ] [424])
                    (reg:DI 0 ax [orig:251 _165 ] [251])))
            (clobber (reg:CC 17 flags))
        ]) "CLMAX.f":111 222 {*adddi_1}
     (nil))
(insn 553 552 554 17 (set (reg:SI 0 ax [598])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [1 i+0 S4 A32])) "CLMAX.f":111 86 {*movsi_internal}
     (nil))
(insn 554 553 555 17 (set (reg:DI 0 ax [orig:253 _167 ] [253])
        (sign_extend:DI (reg:SI 0 ax [598]))) "CLMAX.f":111 149 {*extendsidi2_rex64}
     (nil))
(insn 555 554 556 17 (parallel [
            (set (reg:DI 1 dx [orig:254 _168 ] [254])
                (plus:DI (reg:DI 1 dx [orig:252 _166 ] [252])
                    (reg:DI 0 ax [orig:253 _167 ] [253])))
            (clobber (reg:CC 17 flags))
        ]) "CLMAX.f":111 222 {*adddi_1}
     (nil))
(insn 556 555 557 17 (set (reg/f:DI 0 ax [599])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 16 [0x10])) [4 hgt+0 S8 A64])) "CLMAX.f":111 85 {*movdi_internal}
     (nil))
(insn 557 556 558 17 (set (reg:SF 22 xmm1 [orig:255 _169 ] [255])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:254 _168 ] [254])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [599])) [3 *hgt_437(D) S4 A32])) "CLMAX.f":111 131 {*movsf_internal}
     (nil))
(insn 558 557 560 17 (set (reg:SF 21 xmm0 [orig:256 _170 ] [256])
        (minus:SF (reg:SF 21 xmm0 [orig:249 _163 ] [249])
            (reg:SF 22 xmm1 [orig:255 _169 ] [255]))) "CLMAX.f":111 841 {*fop_sf_1}
     (nil))
(insn 560 558 912 17 (set (reg:SF 21 xmm0 [orig:258 _172 ] [258])
        (mult:SF (reg:SF 21 xmm0 [orig:257 _171 ] [257])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -280 [0xfffffffffffffee8])) [3 rq2m+0 S4 A32]))) "CLMAX.f":111 838 {*fop_sf_comm}
     (nil))
(insn 912 560 561 17 (set (reg:SF 22 xmm1 [orig:258 _172 ] [258])
        (reg:SF 21 xmm0 [orig:258 _172 ] [258])) "CLMAX.f":111 131 {*movsf_internal}
     (nil))
(insn 561 912 562 17 (set (reg:SF 22 xmm1 [orig:258 _172 ] [258])
        (mult:SF (reg:SF 22 xmm1 [orig:258 _172 ] [258])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -276 [0xfffffffffffffeec])) [3 dp+0 S4 A32]))) "CLMAX.f":111 838 {*fop_sf_comm}
     (nil))
(insn 562 561 563 17 (set (reg:SI 0 ax [600])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [1 j+0 S4 A32])) "CLMAX.f":111 86 {*movsi_internal}
     (nil))
(insn 563 562 564 17 (set (reg:DI 0 ax [orig:260 _174 ] [260])
        (sign_extend:DI (reg:SI 0 ax [600]))) "CLMAX.f":111 149 {*extendsidi2_rex64}
     (nil))
(insn 564 563 936 17 (parallel [
            (set (reg:DI 0 ax [orig:261 _175 ] [261])
                (mult:DI (reg:DI 0 ax [orig:260 _174 ] [260])
                    (reg:DI 3 bx [orig:343 stride.53_276 ] [343])))
            (clobber (reg:CC 17 flags))
        ]) "CLMAX.f":111 349 {*muldi3_1}
     (nil))
(note 936 564 947 17 NOTE_INSN_DELETED)
(note 947 936 914 17 NOTE_INSN_DELETED)
(insn 914 947 565 17 (set (reg:DI 1 dx [orig:349 offset.54_284 ] [349])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -344 [0xfffffffffffffea8])) [8 %sfp+-296 S8 A64])) "CLMAX.f":111 85 {*movdi_internal}
     (nil))
(insn 565 914 566 17 (parallel [
            (set (reg:DI 1 dx [orig:262 _176 ] [262])
                (plus:DI (reg:DI 1 dx [orig:349 offset.54_284 ] [349])
                    (reg:DI 0 ax [orig:261 _175 ] [261])))
            (clobber (reg:CC 17 flags))
        ]) "CLMAX.f":111 222 {*adddi_1}
     (nil))
(insn 566 565 567 17 (set (reg:SI 0 ax [601])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [1 i+0 S4 A32])) "CLMAX.f":111 86 {*movsi_internal}
     (nil))
(insn 567 566 568 17 (set (reg:DI 0 ax [orig:263 _177 ] [263])
        (sign_extend:DI (reg:SI 0 ax [601]))) "CLMAX.f":111 149 {*extendsidi2_rex64}
     (nil))
(insn 568 567 569 17 (parallel [
            (set (reg:DI 1 dx [orig:264 _178 ] [264])
                (plus:DI (reg:DI 1 dx [orig:262 _176 ] [262])
                    (reg:DI 0 ax [orig:263 _177 ] [263])))
            (clobber (reg:CC 17 flags))
        ]) "CLMAX.f":111 222 {*adddi_1}
     (nil))
(insn 569 568 570 17 (set (reg/f:DI 0 ax [602])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 72 [0x48])) [4 sqz+0 S8 A64])) "CLMAX.f":111 85 {*movdi_internal}
     (nil))
(insn 570 569 571 17 (set (reg:SF 21 xmm0 [orig:265 _179 ] [265])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:264 _178 ] [264])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [602])) [3 *sqz_409(D) S4 A32])) "CLMAX.f":111 131 {*movsf_internal}
     (nil))
(insn 571 570 572 17 (set (reg:SI 0 ax [603])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [1 j+0 S4 A32])) "CLMAX.f":111 86 {*movsi_internal}
     (nil))
(insn 572 571 573 17 (set (reg:DI 0 ax [orig:266 _180 ] [266])
        (sign_extend:DI (reg:SI 0 ax [603]))) "CLMAX.f":111 149 {*extendsidi2_rex64}
     (nil))
(insn 573 572 915 17 (parallel [
            (set (reg:DI 0 ax [orig:267 _181 ] [267])
                (mult:DI (reg:DI 0 ax [orig:266 _180 ] [266])
                    (reg:DI 3 bx [orig:343 stride.53_276 ] [343])))
            (clobber (reg:CC 17 flags))
        ]) "CLMAX.f":111 349 {*muldi3_1}
     (nil))
(insn 915 573 574 17 (set (reg:DI 1 dx [orig:349 offset.54_284 ] [349])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -344 [0xfffffffffffffea8])) [8 %sfp+-296 S8 A64])) "CLMAX.f":111 85 {*movdi_internal}
     (nil))
(insn 574 915 575 17 (parallel [
            (set (reg:DI 1 dx [orig:268 _182 ] [268])
                (plus:DI (reg:DI 1 dx [orig:349 offset.54_284 ] [349])
                    (reg:DI 0 ax [orig:267 _181 ] [267])))
            (clobber (reg:CC 17 flags))
        ]) "CLMAX.f":111 222 {*adddi_1}
     (nil))
(insn 575 574 576 17 (set (reg:SI 0 ax [604])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [1 i+0 S4 A32])) "CLMAX.f":111 86 {*movsi_internal}
     (nil))
(insn 576 575 577 17 (set (reg:DI 0 ax [orig:269 _183 ] [269])
        (sign_extend:DI (reg:SI 0 ax [604]))) "CLMAX.f":111 149 {*extendsidi2_rex64}
     (nil))
(insn 577 576 578 17 (parallel [
            (set (reg:DI 1 dx [orig:270 _184 ] [270])
                (plus:DI (reg:DI 1 dx [orig:268 _182 ] [268])
                    (reg:DI 0 ax [orig:269 _183 ] [269])))
            (clobber (reg:CC 17 flags))
        ]) "CLMAX.f":111 222 {*adddi_1}
     (nil))
(insn 578 577 579 17 (set (reg:SF 21 xmm0 [orig:271 _185 ] [271])
        (plus:SF (reg:SF 21 xmm0 [orig:265 _179 ] [265])
            (reg:SF 22 xmm1 [orig:259 _173 ] [259]))) "CLMAX.f":111 838 {*fop_sf_comm}
     (nil))
(insn 579 578 580 17 (set (reg/f:DI 0 ax [605])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 72 [0x48])) [4 sqz+0 S8 A64])) "CLMAX.f":111 85 {*movdi_internal}
     (nil))
(insn 580 579 581 17 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:270 _184 ] [270])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [605])) [3 *sqz_409(D) S4 A32])
        (reg:SF 21 xmm0 [orig:271 _185 ] [271])) "CLMAX.f":111 131 {*movsf_internal}
     (nil))
(insn 581 580 916 17 (set (reg:SF 21 xmm0 [606])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -280 [0xfffffffffffffee8])) [3 rq2m+0 S4 A32])) "CLMAX.f":115 131 {*movsf_internal}
     (nil))
(insn 916 581 582 17 (set (reg:SF 22 xmm1 [606])
        (reg:SF 21 xmm0 [606])) "CLMAX.f":115 131 {*movsf_internal}
     (nil))
(insn 582 916 583 17 (set (reg:SF 22 xmm1 [606])
        (mult:SF (reg:SF 22 xmm1 [606])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -276 [0xfffffffffffffeec])) [3 dp+0 S4 A32]))) "CLMAX.f":115 838 {*fop_sf_comm}
     (nil))
(insn 583 582 584 17 (set (reg:SI 0 ax [607])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [1 j+0 S4 A32])) "CLMAX.f":115 86 {*movsi_internal}
     (nil))
(insn 584 583 585 17 (set (reg:DI 0 ax [orig:273 _187 ] [273])
        (sign_extend:DI (reg:SI 0 ax [607]))) "CLMAX.f":115 149 {*extendsidi2_rex64}
     (nil))
(insn 585 584 935 17 (parallel [
            (set (reg:DI 0 ax [orig:274 _188 ] [274])
                (mult:DI (reg:DI 0 ax [orig:273 _187 ] [273])
                    (reg:DI 40 r11 [orig:351 stride.48_287 ] [351])))
            (clobber (reg:CC 17 flags))
        ]) "CLMAX.f":115 349 {*muldi3_1}
     (nil))
(note 935 585 946 17 NOTE_INSN_DELETED)
(note 946 935 918 17 NOTE_INSN_DELETED)
(insn 918 946 586 17 (set (reg:DI 1 dx [orig:357 offset.49_294 ] [357])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -352 [0xfffffffffffffea0])) [8 %sfp+-304 S8 A64])) "CLMAX.f":115 85 {*movdi_internal}
     (nil))
(insn 586 918 587 17 (parallel [
            (set (reg:DI 1 dx [orig:275 _189 ] [275])
                (plus:DI (reg:DI 1 dx [orig:357 offset.49_294 ] [357])
                    (reg:DI 0 ax [orig:274 _188 ] [274])))
            (clobber (reg:CC 17 flags))
        ]) "CLMAX.f":115 222 {*adddi_1}
     (nil))
(insn 587 586 588 17 (set (reg:SI 0 ax [608])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [1 i+0 S4 A32])) "CLMAX.f":115 86 {*movsi_internal}
     (nil))
(insn 588 587 589 17 (set (reg:DI 0 ax [orig:276 _190 ] [276])
        (sign_extend:DI (reg:SI 0 ax [608]))) "CLMAX.f":115 149 {*extendsidi2_rex64}
     (nil))
(insn 589 588 590 17 (parallel [
            (set (reg:DI 1 dx [orig:277 _191 ] [277])
                (plus:DI (reg:DI 1 dx [orig:275 _189 ] [275])
                    (reg:DI 0 ax [orig:276 _190 ] [276])))
            (clobber (reg:CC 17 flags))
        ]) "CLMAX.f":115 222 {*adddi_1}
     (nil))
(insn 590 589 591 17 (set (reg/f:DI 0 ax [609])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 80 [0x50])) [4 sq+0 S8 A64])) "CLMAX.f":115 85 {*movdi_internal}
     (nil))
(insn 591 590 592 17 (set (reg:SF 21 xmm0 [orig:278 _192 ] [278])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:277 _191 ] [277])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [609])) [3 *sq_411(D) S4 A32])) "CLMAX.f":115 131 {*movsf_internal}
     (nil))
(insn 592 591 593 17 (set (reg:SI 0 ax [610])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [1 j+0 S4 A32])) "CLMAX.f":115 86 {*movsi_internal}
     (nil))
(insn 593 592 594 17 (set (reg:DI 0 ax [orig:279 _193 ] [279])
        (sign_extend:DI (reg:SI 0 ax [610]))) "CLMAX.f":115 149 {*extendsidi2_rex64}
     (nil))
(insn 594 593 919 17 (parallel [
            (set (reg:DI 0 ax [orig:280 _194 ] [280])
                (mult:DI (reg:DI 0 ax [orig:279 _193 ] [279])
                    (reg:DI 40 r11 [orig:351 stride.48_287 ] [351])))
            (clobber (reg:CC 17 flags))
        ]) "CLMAX.f":115 349 {*muldi3_1}
     (nil))
(insn 919 594 595 17 (set (reg:DI 1 dx [orig:357 offset.49_294 ] [357])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -352 [0xfffffffffffffea0])) [8 %sfp+-304 S8 A64])) "CLMAX.f":115 85 {*movdi_internal}
     (nil))
(insn 595 919 596 17 (parallel [
            (set (reg:DI 1 dx [orig:281 _195 ] [281])
                (plus:DI (reg:DI 1 dx [orig:357 offset.49_294 ] [357])
                    (reg:DI 0 ax [orig:280 _194 ] [280])))
            (clobber (reg:CC 17 flags))
        ]) "CLMAX.f":115 222 {*adddi_1}
     (nil))
(insn 596 595 597 17 (set (reg:SI 0 ax [611])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [1 i+0 S4 A32])) "CLMAX.f":115 86 {*movsi_internal}
     (nil))
(insn 597 596 598 17 (set (reg:DI 0 ax [orig:282 _196 ] [282])
        (sign_extend:DI (reg:SI 0 ax [611]))) "CLMAX.f":115 149 {*extendsidi2_rex64}
     (nil))
(insn 598 597 599 17 (parallel [
            (set (reg:DI 1 dx [orig:283 _197 ] [283])
                (plus:DI (reg:DI 1 dx [orig:281 _195 ] [281])
                    (reg:DI 0 ax [orig:282 _196 ] [282])))
            (clobber (reg:CC 17 flags))
        ]) "CLMAX.f":115 222 {*adddi_1}
     (nil))
(insn 599 598 600 17 (set (reg:SF 21 xmm0 [orig:284 _198 ] [284])
        (plus:SF (reg:SF 21 xmm0 [orig:278 _192 ] [278])
            (reg:SF 22 xmm1 [orig:272 _186 ] [272]))) "CLMAX.f":115 838 {*fop_sf_comm}
     (nil))
(insn 600 599 601 17 (set (reg/f:DI 0 ax [612])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 80 [0x50])) [4 sq+0 S8 A64])) "CLMAX.f":115 85 {*movdi_internal}
     (nil))
(insn 601 600 602 17 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:283 _197 ] [283])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [612])) [3 *sq_411(D) S4 A32])
        (reg:SF 21 xmm0 [orig:284 _198 ] [284])) "CLMAX.f":115 131 {*movsf_internal}
     (nil))
(insn 602 601 603 17 (set (reg:SI 0 ax [613])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [1 j+0 S4 A32])) "CLMAX.f":116 86 {*movsi_internal}
     (nil))
(insn 603 602 604 17 (set (reg:DI 0 ax [orig:285 _199 ] [285])
        (sign_extend:DI (reg:SI 0 ax [613]))) "CLMAX.f":116 149 {*extendsidi2_rex64}
     (nil))
(insn 604 603 605 17 (parallel [
            (set (reg:DI 0 ax [orig:286 _200 ] [286])
                (mult:DI (reg:DI 0 ax [orig:285 _199 ] [285])
                    (reg:DI 37 r8 [orig:377 stride.38_321 ] [377])))
            (clobber (reg:CC 17 flags))
        ]) "CLMAX.f":116 349 {*muldi3_1}
     (nil))
(insn 605 604 606 17 (parallel [
            (set (reg:DI 1 dx [orig:287 _201 ] [287])
                (plus:DI (reg:DI 2 cx [orig:383 offset.39_328 ] [383])
                    (reg:DI 0 ax [orig:286 _200 ] [286])))
            (clobber (reg:CC 17 flags))
        ]) "CLMAX.f":116 222 {*adddi_1}
     (nil))
(insn 606 605 607 17 (set (reg:SI 0 ax [614])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [1 i+0 S4 A32])) "CLMAX.f":116 86 {*movsi_internal}
     (nil))
(insn 607 606 608 17 (set (reg:DI 0 ax [orig:288 _202 ] [288])
        (sign_extend:DI (reg:SI 0 ax [614]))) "CLMAX.f":116 149 {*extendsidi2_rex64}
     (nil))
(insn 608 607 609 17 (parallel [
            (set (reg:DI 2 cx [orig:289 _203 ] [289])
                (plus:DI (reg:DI 1 dx [orig:287 _201 ] [287])
                    (reg:DI 0 ax [orig:288 _202 ] [288])))
            (clobber (reg:CC 17 flags))
        ]) "CLMAX.f":116 222 {*adddi_1}
     (nil))
(insn 609 608 610 17 (set (reg:SI 0 ax [615])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [1 j+0 S4 A32])) "CLMAX.f":116 86 {*movsi_internal}
     (nil))
(insn 610 609 611 17 (set (reg:DI 0 ax [orig:290 _204 ] [290])
        (sign_extend:DI (reg:SI 0 ax [615]))) "CLMAX.f":116 149 {*extendsidi2_rex64}
     (nil))
(insn 611 610 921 17 (parallel [
            (set (reg:DI 0 ax [orig:291 _205 ] [291])
                (mult:DI (reg:DI 0 ax [orig:290 _204 ] [290])
                    (reg:DI 42 r13 [orig:359 stride.33_297 ] [359])))
            (clobber (reg:CC 17 flags))
        ]) "CLMAX.f":116 349 {*muldi3_1}
     (nil))
(insn 921 611 612 17 (set (reg:DI 1 dx [orig:365 offset.34_304 ] [365])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -360 [0xfffffffffffffe98])) [8 %sfp+-312 S8 A64])) "CLMAX.f":116 85 {*movdi_internal}
     (nil))
(insn 612 921 613 17 (parallel [
            (set (reg:DI 1 dx [orig:292 _206 ] [292])
                (plus:DI (reg:DI 1 dx [orig:365 offset.34_304 ] [365])
                    (reg:DI 0 ax [orig:291 _205 ] [291])))
            (clobber (reg:CC 17 flags))
        ]) "CLMAX.f":116 222 {*adddi_1}
     (nil))
(insn 613 612 614 17 (set (reg:SI 0 ax [616])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [1 i+0 S4 A32])) "CLMAX.f":116 86 {*movsi_internal}
     (nil))
(insn 614 613 615 17 (set (reg:DI 0 ax [orig:293 _207 ] [293])
        (sign_extend:DI (reg:SI 0 ax [616]))) "CLMAX.f":116 149 {*extendsidi2_rex64}
     (nil))
(insn 615 614 616 17 (parallel [
            (set (reg:DI 1 dx [orig:294 _208 ] [294])
                (plus:DI (reg:DI 1 dx [orig:292 _206 ] [292])
                    (reg:DI 0 ax [orig:293 _207 ] [293])))
            (clobber (reg:CC 17 flags))
        ]) "CLMAX.f":116 222 {*adddi_1}
     (nil))
(insn 616 615 617 17 (set (reg/f:DI 0 ax [617])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 88 [0x58])) [4 rq2l+0 S8 A64])) "CLMAX.f":116 85 {*movdi_internal}
     (nil))
(insn 617 616 618 17 (set (reg:SF 21 xmm0 [orig:295 _209 ] [295])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:289 _203 ] [289])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [617])) [3 *rq2l_428(D) S4 A32])) "CLMAX.f":116 131 {*movsf_internal}
     (nil))
(insn 618 617 619 17 (set (reg/f:DI 0 ax [618])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 96 [0x60])) [4 rq2h+0 S8 A64])) "CLMAX.f":116 85 {*movdi_internal}
     (nil))
(insn 619 618 620 17 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:294 _208 ] [294])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [618])) [3 *rq2h_413(D) S4 A32])
        (reg:SF 21 xmm0 [orig:295 _209 ] [295])) "CLMAX.f":116 131 {*movsf_internal}
     (nil))
(insn 620 619 772 17 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -52 [0xffffffffffffffcc])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -52 [0xffffffffffffffcc])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CLMAX.f":82 221 {*addsi_1}
     (nil))
(jump_insn 772 620 773 17 (set (pc)
        (label_ref 621)) "CLMAX.f":82 683 {jump}
     (nil)
 -> 621)
;;  succ:       13 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 343 351 359 369 377 408 410 418 426 434 451

(barrier 773 772 795)
;; basic block 35, loop depth 0, maybe hot
;;  prev block 17, next block 18, flags: (RTL, MODIFIED)
;;  pred:       13
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 343 351 359 369 377 408 410 418 426 434
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 795 773 794 35 28 (nil) [1 uses])
(note 794 795 796 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 796 794 624 35 (const_int 0 [0]) "CLMAX.f":116 718 {nop}
     (nil))
;;  succ:       18 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 343 351 359 369 377 408 410 418 426 434

;; basic block 18, loop depth 0, maybe hot
;;  prev block 35, next block 34, flags: (RTL, MODIFIED)
;;  pred:       35 [always]  (FALLTHRU)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 343 351 359 369 377 408 410 418 426 434
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 624 796 625 18 8 (nil) [0 uses])
(note 625 624 626 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 626 625 774 18 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -56 [0xffffffffffffffc8])) [1 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -56 [0xffffffffffffffc8])) [1 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CLMAX.f":81 221 {*addsi_1}
     (nil))
(jump_insn 774 626 775 18 (set (pc)
        (label_ref 627)) "CLMAX.f":81 683 {jump}
     (nil)
 -> 627)
;;  succ:       11 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 343 351 359 369 377 408 410 418 426 434

(barrier 775 774 792)
;; basic block 34, loop depth 0, maybe hot
;;  prev block 18, next block 19, flags: (RTL, MODIFIED)
;;  pred:       11
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 343 351 359 369 377 408 410 418 426 434
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 792 775 791 34 27 (nil) [1 uses])
(note 791 792 793 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 793 791 630 34 (const_int 0 [0]) "CLMAX.f":82 718 {nop}
     (nil))
;;  succ:       19 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 343 351 359 369 377 408 410 418 426 434

;; basic block 19, loop depth 0, maybe hot
;;  prev block 34, next block 33, flags: (RTL, MODIFIED)
;;  pred:       34 [always]  (FALLTHRU)
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 343 351 359 369 377 408 410 418 426 434
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 630 793 631 19 7 (nil) [0 uses])
(note 631 630 632 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 632 631 776 19 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -60 [0xffffffffffffffc4])) [1 l+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -60 [0xffffffffffffffc4])) [1 l+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CLMAX.f":78 221 {*addsi_1}
     (nil))
(jump_insn 776 632 777 19 (set (pc)
        (label_ref 633)) "CLMAX.f":78 683 {jump}
     (nil)
 -> 633)
;;  succ:       9 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 343 351 359 369 377 408 410 418 426 434

(barrier 777 776 789)
;; basic block 33, loop depth 0, maybe hot
;;  prev block 19, next block 20, flags: (RTL, MODIFIED)
;;  pred:       9
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 343 351 426 434
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 789 777 788 33 26 (nil) [1 uses])
(note 788 789 790 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 790 788 636 33 (const_int 0 [0]) "CLMAX.f":120 718 {nop}
     (nil))
;;  succ:       20 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 343 351 426 434

;; basic block 20, loop depth 0, maybe hot
;;  prev block 33, next block 21, flags: (RTL, MODIFIED)
;;  pred:       33 [always]  (FALLTHRU)
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 343 351 426 434
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 453 454
(code_label 636 790 637 20 6 (nil) [0 uses])
(note 637 636 638 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 638 637 639 20 (set (reg:SI 1 dx [orig:453 _444 ] [453])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7fac75ebf900 parallel>)
                    (const_int 8 [0x8]))) [1 parallel.jsta+0 S4 A64])) "CLMAX.f":126 86 {*movsi_internal}
     (nil))
(insn 639 638 640 20 (set (reg:SI 0 ax [orig:454 _445 ] [454])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7fac75ebf900 parallel>)
                    (const_int 12 [0xc]))) [1 parallel.jend+0 S4 A32])) "CLMAX.f":126 86 {*movsi_internal}
     (nil))
(insn 640 639 752 20 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [1 j+0 S4 A32])
        (reg:SI 1 dx [orig:453 _444 ] [453])) "CLMAX.f":126 86 {*movsi_internal}
     (nil))
;;  succ:       21 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 343 351 426 434 454

;; basic block 21, loop depth 0, maybe hot
;;  prev block 20, next block 22, flags: (RTL, MODIFIED)
;;  pred:       20 (FALLTHRU)
;;              29 [always] 
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 343 351 426 434 454
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 454
;; lr  def 	 17 [flags] 455 619
(code_label 752 640 641 21 20 (nil) [1 uses])
(note 641 752 642 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 642 641 643 21 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -56 [0xffffffffffffffc8])) [1 j+0 S4 A32])
            (reg:SI 0 ax [orig:454 _445 ] [454]))) "CLMAX.f":126 11 {*cmpsi_1}
     (nil))
(insn 643 642 644 21 (set (reg:QI 1 dx [619])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CLMAX.f":126 678 {*setcc_qi}
     (nil))
(insn 644 643 645 21 (set (reg:SI 1 dx [orig:455 _447 ] [455])
        (zero_extend:SI (reg:QI 1 dx [619]))) "CLMAX.f":126 140 {*zero_extendqisi2}
     (nil))
(insn 645 644 646 21 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:455 _447 ] [455])
            (const_int 0 [0]))) "CLMAX.f":126 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 646 645 647 21 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 798)
            (pc))) "CLMAX.f":126 682 {*jcc}
     (nil)
 -> 798)
;;  succ:       36
;;              22 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 343 351 426 434 454

;; basic block 22, loop depth 0, maybe hot
;;  prev block 21, next block 23, flags: (RTL, MODIFIED)
;;  pred:       21 (FALLTHRU)
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 343 351 426 434 454
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 456 620
(note 647 646 648 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 648 647 649 22 (set (reg/f:DI 1 dx [620])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 32 [0x20])) [6 im+0 S8 A64])) "CLMAX.f":127 85 {*movdi_internal}
     (nil))
(insn 649 648 650 22 (set (reg:SI 2 cx [orig:456 _448 ] [456])
        (mem:SI (reg/f:DI 1 dx [620]) [1 *im_273(D)+0 S4 A32])) "CLMAX.f":127 86 {*movsi_internal}
     (nil))
(insn 650 649 746 22 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [1 i+0 S4 A32])
        (const_int 1 [0x1])) "CLMAX.f":127 86 {*movsi_internal}
     (nil))
;;  succ:       23 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 343 351 426 434 454 456

;; basic block 23, loop depth 0, maybe hot
;;  prev block 22, next block 24, flags: (RTL, MODIFIED)
;;  pred:       22 (FALLTHRU)
;;              28 [always] 
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 343 351 426 434 454 456
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 456
;; lr  def 	 17 [flags] 457 621
(code_label 746 650 651 23 19 (nil) [1 uses])
(note 651 746 652 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 652 651 653 23 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -52 [0xffffffffffffffcc])) [1 i+0 S4 A32])
            (reg:SI 2 cx [orig:456 _448 ] [456]))) "CLMAX.f":127 11 {*cmpsi_1}
     (nil))
(insn 653 652 654 23 (set (reg:QI 1 dx [621])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CLMAX.f":127 678 {*setcc_qi}
     (nil))
(insn 654 653 655 23 (set (reg:SI 1 dx [orig:457 _450 ] [457])
        (zero_extend:SI (reg:QI 1 dx [621]))) "CLMAX.f":127 140 {*zero_extendqisi2}
     (nil))
(insn 655 654 656 23 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:457 _450 ] [457])
            (const_int 0 [0]))) "CLMAX.f":127 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 656 655 657 23 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 801)
            (pc))) "CLMAX.f":127 682 {*jcc}
     (nil)
 -> 801)
;;  succ:       37
;;              24 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 343 351 426 434 454 456

;; basic block 24, loop depth 0, maybe hot
;;  prev block 23, next block 25, flags: (RTL, MODIFIED)
;;  pred:       23 (FALLTHRU)
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 343 351 426 434 454 456
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 343 349 351 357 434 440
;; lr  def 	 17 [flags] 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 341 622 623 624 625 626 627 628 629 630 631 632 633 634 635 636 637 638 639
(note 657 656 658 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 658 657 659 24 (set (reg:SI 1 dx [622])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [1 j+0 S4 A32])) "CLMAX.f":131 86 {*movsi_internal}
     (nil))
(insn 659 658 660 24 (set (reg:DI 1 dx [orig:296 _210 ] [296])
        (sign_extend:DI (reg:SI 1 dx [622]))) "CLMAX.f":131 149 {*extendsidi2_rex64}
     (nil))
(insn 660 659 940 24 (parallel [
            (set (reg:DI 1 dx [orig:297 _211 ] [297])
                (mult:DI (reg:DI 1 dx [orig:296 _210 ] [296])
                    (reg:DI 5 di [orig:434 stride.43_394 ] [434])))
            (clobber (reg:CC 17 flags))
        ]) "CLMAX.f":131 349 {*muldi3_1}
     (nil))
(insn 940 660 661 24 (set (reg:DI 44 r15 [orig:440 offset.44_401 ] [440])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -512 [0xfffffffffffffe00])) [8 %sfp+-464 S8 A128])) "CLMAX.f":131 85 {*movdi_internal}
     (nil))
(insn 661 940 662 24 (parallel [
            (set (reg:DI 4 si [orig:298 _212 ] [298])
                (plus:DI (reg:DI 44 r15 [orig:440 offset.44_401 ] [440])
                    (reg:DI 1 dx [orig:297 _211 ] [297])))
            (clobber (reg:CC 17 flags))
        ]) "CLMAX.f":131 222 {*adddi_1}
     (nil))
(insn 662 661 663 24 (set (reg:SI 1 dx [623])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [1 i+0 S4 A32])) "CLMAX.f":131 86 {*movsi_internal}
     (nil))
(insn 663 662 664 24 (set (reg:DI 1 dx [orig:299 _213 ] [299])
        (sign_extend:DI (reg:SI 1 dx [623]))) "CLMAX.f":131 149 {*extendsidi2_rex64}
     (nil))
(insn 664 663 665 24 (parallel [
            (set (reg:DI 4 si [orig:300 _214 ] [300])
                (plus:DI (reg:DI 4 si [orig:298 _212 ] [298])
                    (reg:DI 1 dx [orig:299 _213 ] [299])))
            (clobber (reg:CC 17 flags))
        ]) "CLMAX.f":131 222 {*adddi_1}
     (nil))
(insn 665 664 666 24 (set (reg/f:DI 1 dx [624])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -336 [0xfffffffffffffeb0])) [4 sm+0 S8 A64])) "CLMAX.f":131 85 {*movdi_internal}
     (nil))
(insn 666 665 667 24 (set (reg:SF 22 xmm1 [orig:301 _215 ] [301])
        (mem:SF (plus:DI (mult:DI (reg:DI 4 si [orig:300 _214 ] [300])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [624])) [3 *sm_451(D) S4 A32])) "CLMAX.f":131 131 {*movsf_internal}
     (nil))
(insn 667 666 668 24 (set (reg:SF 21 xmm0 [625])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S4 A32])) "CLMAX.f":131 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 2.0000000298023223876953125e-1 [0x0.cccccdp-2])
        (nil)))
(insn 668 667 669 24 (set (reg:SF 22 xmm1 [orig:302 _216 ] [302])
        (mult:SF (reg:SF 22 xmm1 [orig:301 _215 ] [301])
            (reg:SF 21 xmm0 [625]))) "CLMAX.f":131 838 {*fop_sf_comm}
     (nil))
(insn 669 668 670 24 (set (reg:SI 1 dx [626])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [1 j+0 S4 A32])) "CLMAX.f":131 86 {*movsi_internal}
     (nil))
(insn 670 669 671 24 (set (reg:DI 1 dx [orig:303 _217 ] [303])
        (sign_extend:DI (reg:SI 1 dx [626]))) "CLMAX.f":131 149 {*extendsidi2_rex64}
     (nil))
(insn 671 670 672 24 (parallel [
            (set (reg:DI 1 dx [orig:304 _218 ] [304])
                (mult:DI (reg:DI 1 dx [orig:303 _217 ] [303])
                    (reg:DI 5 di [orig:434 stride.43_394 ] [434])))
            (clobber (reg:CC 17 flags))
        ]) "CLMAX.f":131 349 {*muldi3_1}
     (nil))
(insn 672 671 673 24 (parallel [
            (set (reg:DI 4 si [orig:305 _219 ] [305])
                (plus:DI (reg:DI 44 r15 [orig:440 offset.44_401 ] [440])
                    (reg:DI 1 dx [orig:304 _218 ] [304])))
            (clobber (reg:CC 17 flags))
        ]) "CLMAX.f":131 222 {*adddi_1}
     (nil))
(insn 673 672 674 24 (set (reg:SI 1 dx [627])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [1 i+0 S4 A32])) "CLMAX.f":131 86 {*movsi_internal}
     (nil))
(insn 674 673 675 24 (set (reg:DI 1 dx [orig:306 _220 ] [306])
        (sign_extend:DI (reg:SI 1 dx [627]))) "CLMAX.f":131 149 {*extendsidi2_rex64}
     (nil))
(insn 675 674 676 24 (parallel [
            (set (reg:DI 4 si [orig:307 _221 ] [307])
                (plus:DI (reg:DI 4 si [orig:305 _219 ] [305])
                    (reg:DI 1 dx [orig:306 _220 ] [306])))
            (clobber (reg:CC 17 flags))
        ]) "CLMAX.f":131 222 {*adddi_1}
     (nil))
(insn 676 675 677 24 (set (reg/f:DI 1 dx [628])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -336 [0xfffffffffffffeb0])) [4 sm+0 S8 A64])) "CLMAX.f":131 85 {*movdi_internal}
     (nil))
(insn 677 676 678 24 (set (reg:SF 23 xmm2 [orig:308 _222 ] [308])
        (mem:SF (plus:DI (mult:DI (reg:DI 4 si [orig:307 _221 ] [307])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [628])) [3 *sm_451(D) S4 A32])) "CLMAX.f":131 131 {*movsf_internal}
     (nil))
(insn 678 677 679 24 (set (reg:SF 21 xmm0 [629])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC3") [flags 0x2]) [0  S4 A32])) "CLMAX.f":131 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 679 678 680 24 (set (reg:SF 21 xmm0 [orig:309 _223 ] [309])
        (minus:SF (reg:SF 21 xmm0 [629])
            (reg:SF 23 xmm2 [orig:308 _222 ] [308]))) "CLMAX.f":131 841 {*fop_sf_1}
     (nil))
(insn 680 679 681 24 (set (reg:SF 23 xmm2 [orig:310 _224 ] [310])
        (reg:SF 21 xmm0 [orig:309 _223 ] [309])) "CLMAX.f":131 131 {*movsf_internal}
     (nil))
(insn 681 680 682 24 (set (reg:SF 21 xmm0 [630])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S4 A32])) "CLMAX.f":131 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 2.0000000298023223876953125e-1 [0x0.cccccdp-2])
        (nil)))
(insn 682 681 683 24 (set (reg:SF 21 xmm0 [orig:311 _225 ] [311])
        (mult:SF (reg:SF 21 xmm0 [630])
            (reg:SF 23 xmm2 [orig:310 _224 ] [310]))) "CLMAX.f":131 838 {*fop_sf_comm}
     (nil))
(insn 683 682 684 24 (set (reg:SF 21 xmm0 [orig:312 _226 ] [312])
        (plus:SF (reg:SF 21 xmm0 [orig:311 _225 ] [311])
            (reg:SF 22 xmm1 [orig:302 _216 ] [302]))) "CLMAX.f":131 838 {*fop_sf_comm}
     (nil))
(insn 684 683 685 24 (set (reg:SF 22 xmm1 [orig:313 _227 ] [313])
        (reg:SF 21 xmm0 [orig:312 _226 ] [312])) "CLMAX.f":131 131 {*movsf_internal}
     (nil))
(insn 685 684 686 24 (set (reg:SI 1 dx [631])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [1 j+0 S4 A32])) "CLMAX.f":131 86 {*movsi_internal}
     (nil))
(insn 686 685 687 24 (set (reg:DI 1 dx [orig:314 _228 ] [314])
        (sign_extend:DI (reg:SI 1 dx [631]))) "CLMAX.f":131 149 {*extendsidi2_rex64}
     (nil))
(insn 687 686 924 24 (parallel [
            (set (reg:DI 1 dx [orig:315 _229 ] [315])
                (mult:DI (reg:DI 1 dx [orig:314 _228 ] [314])
                    (reg:DI 3 bx [orig:343 stride.53_276 ] [343])))
            (clobber (reg:CC 17 flags))
        ]) "CLMAX.f":131 349 {*muldi3_1}
     (nil))
(insn 924 687 688 24 (set (reg:DI 4 si [orig:349 offset.54_284 ] [349])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -344 [0xfffffffffffffea8])) [8 %sfp+-296 S8 A64])) "CLMAX.f":131 85 {*movdi_internal}
     (nil))
(insn 688 924 689 24 (parallel [
            (set (reg:DI 4 si [orig:316 _230 ] [316])
                (plus:DI (reg:DI 4 si [orig:349 offset.54_284 ] [349])
                    (reg:DI 1 dx [orig:315 _229 ] [315])))
            (clobber (reg:CC 17 flags))
        ]) "CLMAX.f":131 222 {*adddi_1}
     (nil))
(insn 689 688 690 24 (set (reg:SI 1 dx [632])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [1 i+0 S4 A32])) "CLMAX.f":131 86 {*movsi_internal}
     (nil))
(insn 690 689 691 24 (set (reg:DI 1 dx [orig:317 _231 ] [317])
        (sign_extend:DI (reg:SI 1 dx [632]))) "CLMAX.f":131 149 {*extendsidi2_rex64}
     (nil))
(insn 691 690 692 24 (parallel [
            (set (reg:DI 4 si [orig:318 _232 ] [318])
                (plus:DI (reg:DI 4 si [orig:316 _230 ] [316])
                    (reg:DI 1 dx [orig:317 _231 ] [317])))
            (clobber (reg:CC 17 flags))
        ]) "CLMAX.f":131 222 {*adddi_1}
     (nil))
(insn 692 691 693 24 (set (reg/f:DI 1 dx [633])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 72 [0x48])) [4 sqz+0 S8 A64])) "CLMAX.f":131 85 {*movdi_internal}
     (nil))
(insn 693 692 694 24 (set (reg:SF 21 xmm0 [orig:319 _233 ] [319])
        (mem:SF (plus:DI (mult:DI (reg:DI 4 si [orig:318 _232 ] [318])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [633])) [3 *sqz_409(D) S4 A32])) "CLMAX.f":131 131 {*movsf_internal}
     (nil))
(insn 694 693 695 24 (set (reg:SF 21 xmm0 [orig:320 _234 ] [320])
        (mult:SF (reg:SF 21 xmm0 [orig:319 _233 ] [319])
            (reg:SF 22 xmm1 [orig:313 _227 ] [313]))) "CLMAX.f":131 838 {*fop_sf_comm}
     (nil))
(insn 695 694 696 24 (set (reg:SI 1 dx [634])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [1 j+0 S4 A32])) "CLMAX.f":131 86 {*movsi_internal}
     (nil))
(insn 696 695 697 24 (set (reg:DI 1 dx [orig:321 _235 ] [321])
        (sign_extend:DI (reg:SI 1 dx [634]))) "CLMAX.f":131 149 {*extendsidi2_rex64}
     (nil))
(insn 697 696 925 24 (parallel [
            (set (reg:DI 1 dx [orig:322 _236 ] [322])
                (mult:DI (reg:DI 1 dx [orig:321 _235 ] [321])
                    (reg:DI 40 r11 [orig:351 stride.48_287 ] [351])))
            (clobber (reg:CC 17 flags))
        ]) "CLMAX.f":131 349 {*muldi3_1}
     (nil))
(insn 925 697 698 24 (set (reg:DI 4 si [orig:357 offset.49_294 ] [357])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -352 [0xfffffffffffffea0])) [8 %sfp+-304 S8 A64])) "CLMAX.f":131 85 {*movdi_internal}
     (nil))
(insn 698 925 699 24 (parallel [
            (set (reg:DI 4 si [orig:323 _237 ] [323])
                (plus:DI (reg:DI 4 si [orig:357 offset.49_294 ] [357])
                    (reg:DI 1 dx [orig:322 _236 ] [322])))
            (clobber (reg:CC 17 flags))
        ]) "CLMAX.f":131 222 {*adddi_1}
     (nil))
(insn 699 698 700 24 (set (reg:SI 1 dx [635])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [1 i+0 S4 A32])) "CLMAX.f":131 86 {*movsi_internal}
     (nil))
(insn 700 699 701 24 (set (reg:DI 1 dx [orig:324 _238 ] [324])
        (sign_extend:DI (reg:SI 1 dx [635]))) "CLMAX.f":131 149 {*extendsidi2_rex64}
     (nil))
(insn 701 700 702 24 (parallel [
            (set (reg:DI 4 si [orig:325 _239 ] [325])
                (plus:DI (reg:DI 4 si [orig:323 _237 ] [323])
                    (reg:DI 1 dx [orig:324 _238 ] [324])))
            (clobber (reg:CC 17 flags))
        ]) "CLMAX.f":131 222 {*adddi_1}
     (nil))
(insn 702 701 703 24 (set (reg/f:DI 1 dx [636])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 80 [0x50])) [4 sq+0 S8 A64])) "CLMAX.f":131 85 {*movdi_internal}
     (nil))
(insn 703 702 704 24 (set (reg:SF 23 xmm2 [orig:326 _240 ] [326])
        (mem:SF (plus:DI (mult:DI (reg:DI 4 si [orig:325 _239 ] [325])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [636])) [3 *sq_411(D) S4 A32])) "CLMAX.f":131 131 {*movsf_internal}
     (nil))
(insn 704 703 705 24 (set (reg:SF 22 xmm1 [637])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S4 A32])) "CLMAX.f":131 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 2.0000000298023223876953125e-1 [0x0.cccccdp-2])
        (nil)))
(insn 705 704 707 24 (set (reg:SF 22 xmm1 [orig:327 _241 ] [327])
        (plus:SF (reg:SF 22 xmm1 [637])
            (reg:SF 23 xmm2 [orig:326 _240 ] [326]))) "CLMAX.f":131 838 {*fop_sf_comm}
     (nil))
(insn 707 705 709 24 (set (reg:SF 21 xmm0 [orig:329 _243 ] [329])
        (div:SF (reg:SF 21 xmm0 [orig:320 _234 ] [320])
            (reg:SF 22 xmm1 [orig:328 _242 ] [328]))) "CLMAX.f":131 841 {*fop_sf_1}
     (nil))
(insn 709 707 710 24 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [orig:341 M.63_262 ] [341])
            (mem/u/c:SF (symbol_ref/u:DI ("*.LC4") [flags 0x2]) [0  S4 A32]))) "CLMAX.f":131 53 {*cmpisf}
     (nil))
(insn 710 709 711 24 (set (reg:QI 1 dx [638])
        (gt:QI (reg:CCFP 17 flags)
            (const_int 0 [0]))) "CLMAX.f":131 678 {*setcc_qi}
     (nil))
(insn 711 710 712 24 (set (reg:SI 4 si [orig:330 _244 ] [330])
        (zero_extend:SI (reg:QI 1 dx [638]))) "CLMAX.f":131 140 {*zero_extendqisi2}
     (nil))
(insn 712 711 713 24 (set (reg:CCFP 17 flags)
        (unspec:CCFP [
                (compare:CCFP (reg:SF 21 xmm0 [orig:341 M.63_262 ] [341])
                    (reg:SF 21 xmm0 [orig:341 M.63_262 ] [341]))
            ] UNSPEC_NOTRAP)) "CLMAX.f":131 54 {*cmpiusf}
     (nil))
(insn 713 712 714 24 (set (reg:QI 1 dx [639])
        (unordered:QI (reg:CCFP 17 flags)
            (const_int 0 [0]))) "CLMAX.f":131 678 {*setcc_qi}
     (nil))
(insn 714 713 715 24 (set (reg:SI 1 dx [orig:331 _245 ] [331])
        (zero_extend:SI (reg:QI 1 dx [639]))) "CLMAX.f":131 140 {*zero_extendqisi2}
     (nil))
(insn 715 714 716 24 (parallel [
            (set (reg:SI 1 dx [orig:332 _246 ] [332])
                (ior:SI (reg:SI 1 dx [orig:331 _245 ] [331])
                    (reg:SI 4 si [orig:330 _244 ] [330])))
            (clobber (reg:CC 17 flags))
        ]) "CLMAX.f":131 450 {*iorsi_1}
     (nil))
(insn 716 715 717 24 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:332 _246 ] [332])
            (const_int 0 [0]))) "CLMAX.f":131 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 717 716 718 24 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 720)
            (pc))) "CLMAX.f":131 682 {*jcc}
     (nil)
 -> 720)
;;  succ:       25 (FALLTHRU)
;;              26
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 341 343 351 426 434 454 456

;; basic block 25, loop depth 0, maybe hot
;;  prev block 24, next block 26, flags: (RTL, MODIFIED)
;;  pred:       24 (FALLTHRU)
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 343 351 426 434 454 456
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 341
(note 718 717 719 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 719 718 720 25 (set (reg:SF 21 xmm0 [orig:341 M.63_262 ] [341])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC4") [flags 0x2]) [0  S4 A32])) "CLMAX.f":131 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 3.0e+2 [0x0.96p+9])
        (nil)))
;;  succ:       26 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 341 343 351 426 434 454 456

;; basic block 26, loop depth 0, maybe hot
;;  prev block 25, next block 27, flags: (RTL, MODIFIED)
;;  pred:       24
;;              25 (FALLTHRU)
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 341 343 351 426 434 454 456
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 341
;; lr  def 	 17 [flags] 333 334 335 641 642 643
(code_label 720 719 721 26 17 (nil) [1 uses])
(note 721 720 722 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 722 721 723 26 (set (reg:SF 22 xmm1 [642])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [0  S4 A32])) "CLMAX.f":131 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.1e+1 [0x0.bp+4])
        (nil)))
(insn 723 722 724 26 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 22 xmm1 [642])
            (reg:SF 21 xmm0 [orig:341 M.63_262 ] [341]))) "CLMAX.f":131 53 {*cmpisf}
     (nil))
(insn 724 723 725 26 (set (reg:QI 1 dx [641])
        (gt:QI (reg:CCFP 17 flags)
            (const_int 0 [0]))) "CLMAX.f":131 678 {*setcc_qi}
     (nil))
(insn 725 724 726 26 (set (reg:SI 4 si [orig:333 _247 ] [333])
        (zero_extend:SI (reg:QI 1 dx [641]))) "CLMAX.f":131 140 {*zero_extendqisi2}
     (nil))
(insn 726 725 727 26 (set (reg:CCFP 17 flags)
        (unspec:CCFP [
                (compare:CCFP (reg:SF 21 xmm0 [orig:341 M.63_262 ] [341])
                    (reg:SF 21 xmm0 [orig:341 M.63_262 ] [341]))
            ] UNSPEC_NOTRAP)) "CLMAX.f":131 54 {*cmpiusf}
     (nil))
(insn 727 726 728 26 (set (reg:QI 1 dx [643])
        (unordered:QI (reg:CCFP 17 flags)
            (const_int 0 [0]))) "CLMAX.f":131 678 {*setcc_qi}
     (nil))
(insn 728 727 729 26 (set (reg:SI 1 dx [orig:334 _248 ] [334])
        (zero_extend:SI (reg:QI 1 dx [643]))) "CLMAX.f":131 140 {*zero_extendqisi2}
     (nil))
(insn 729 728 730 26 (parallel [
            (set (reg:SI 1 dx [orig:335 _249 ] [335])
                (ior:SI (reg:SI 1 dx [orig:334 _248 ] [334])
                    (reg:SI 4 si [orig:333 _247 ] [333])))
            (clobber (reg:CC 17 flags))
        ]) "CLMAX.f":131 450 {*iorsi_1}
     (nil))
(insn 730 729 731 26 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:335 _249 ] [335])
            (const_int 0 [0]))) "CLMAX.f":131 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 731 730 732 26 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 734)
            (pc))) "CLMAX.f":131 682 {*jcc}
     (nil)
 -> 734)
;;  succ:       27 (FALLTHRU)
;;              28
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 341 343 351 426 434 454 456

;; basic block 27, loop depth 0, maybe hot
;;  prev block 26, next block 28, flags: (RTL, MODIFIED)
;;  pred:       26 (FALLTHRU)
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 343 351 426 434 454 456
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 341
(note 732 731 733 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 733 732 734 27 (set (reg:SF 21 xmm0 [orig:341 M.63_262 ] [341])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [0  S4 A32])) "CLMAX.f":131 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.1e+1 [0x0.bp+4])
        (nil)))
;;  succ:       28 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 341 343 351 426 434 454 456

;; basic block 28, loop depth 0, maybe hot
;;  prev block 27, next block 37, flags: (RTL, MODIFIED)
;;  pred:       26
;;              27 (FALLTHRU)
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 341 343 351 426 434 454 456
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 341 426 432
;; lr  def 	 17 [flags] 336 337 338 339 340 644 645 646
(code_label 734 733 735 28 18 (nil) [1 uses])
(note 735 734 736 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 736 735 737 28 (set (reg:SI 1 dx [644])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [1 j+0 S4 A32])) "CLMAX.f":131 86 {*movsi_internal}
     (nil))
(insn 737 736 738 28 (set (reg:DI 1 dx [orig:336 _250 ] [336])
        (sign_extend:DI (reg:SI 1 dx [644]))) "CLMAX.f":131 149 {*extendsidi2_rex64}
     (nil))
(insn 738 737 926 28 (parallel [
            (set (reg:DI 1 dx [orig:337 _251 ] [337])
                (mult:DI (reg:DI 1 dx [orig:336 _250 ] [336])
                    (reg:DI 41 r12 [orig:426 stride.4_384 ] [426])))
            (clobber (reg:CC 17 flags))
        ]) "CLMAX.f":131 349 {*muldi3_1}
     (nil))
(insn 926 738 739 28 (set (reg:DI 4 si [orig:432 offset.5_391 ] [432])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -496 [0xfffffffffffffe10])) [8 %sfp+-448 S8 A128])) "CLMAX.f":131 85 {*movdi_internal}
     (nil))
(insn 739 926 740 28 (parallel [
            (set (reg:DI 4 si [orig:338 _252 ] [338])
                (plus:DI (reg:DI 4 si [orig:432 offset.5_391 ] [432])
                    (reg:DI 1 dx [orig:337 _251 ] [337])))
            (clobber (reg:CC 17 flags))
        ]) "CLMAX.f":131 222 {*adddi_1}
     (nil))
(insn 740 739 741 28 (set (reg:SI 1 dx [645])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [1 i+0 S4 A32])) "CLMAX.f":131 86 {*movsi_internal}
     (nil))
(insn 741 740 742 28 (set (reg:DI 1 dx [orig:339 _253 ] [339])
        (sign_extend:DI (reg:SI 1 dx [645]))) "CLMAX.f":131 149 {*extendsidi2_rex64}
     (nil))
(insn 742 741 743 28 (parallel [
            (set (reg:DI 4 si [orig:340 _254 ] [340])
                (plus:DI (reg:DI 4 si [orig:338 _252 ] [338])
                    (reg:DI 1 dx [orig:339 _253 ] [339])))
            (clobber (reg:CC 17 flags))
        ]) "CLMAX.f":131 222 {*adddi_1}
     (nil))
(insn 743 742 744 28 (set (reg/f:DI 1 dx [646])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 64 [0x40])) [4 el0+0 S8 A64])) "CLMAX.f":131 85 {*movdi_internal}
     (nil))
(insn 744 743 745 28 (set (mem:SF (plus:DI (mult:DI (reg:DI 4 si [orig:340 _254 ] [340])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [646])) [3 *el0_457(D) S4 A32])
        (reg:SF 21 xmm0 [orig:341 M.63_262 ] [341])) "CLMAX.f":131 131 {*movsf_internal}
     (nil))
(insn 745 744 778 28 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -52 [0xffffffffffffffcc])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -52 [0xffffffffffffffcc])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CLMAX.f":127 221 {*addsi_1}
     (nil))
(jump_insn 778 745 779 28 (set (pc)
        (label_ref 746)) "CLMAX.f":127 683 {jump}
     (nil)
 -> 746)
;;  succ:       23 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 343 351 426 434 454 456

(barrier 779 778 801)
;; basic block 37, loop depth 0, maybe hot
;;  prev block 28, next block 29, flags: (RTL, MODIFIED)
;;  pred:       23
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 343 351 426 434 454
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 801 779 800 37 30 (nil) [1 uses])
(note 800 801 802 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 802 800 749 37 (const_int 0 [0]) "CLMAX.f":131 718 {nop}
     (nil))
;;  succ:       29 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 343 351 426 434 454

;; basic block 29, loop depth 0, maybe hot
;;  prev block 37, next block 36, flags: (RTL, MODIFIED)
;;  pred:       37 [always]  (FALLTHRU)
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 343 351 426 434 454
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 749 802 750 29 16 (nil) [0 uses])
(note 750 749 751 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 751 750 780 29 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -56 [0xffffffffffffffc8])) [1 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -56 [0xffffffffffffffc8])) [1 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CLMAX.f":126 221 {*addsi_1}
     (nil))
(jump_insn 780 751 781 29 (set (pc)
        (label_ref 752)) "CLMAX.f":126 683 {jump}
     (nil)
 -> 752)
;;  succ:       21 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 343 351 426 434 454

(barrier 781 780 798)
;; basic block 36, loop depth 0, maybe hot
;;  prev block 29, next block 30, flags: (RTL, MODIFIED)
;;  pred:       21
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 798 781 797 36 29 (nil) [1 uses])
(note 797 798 799 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 799 797 755 36 (const_int 0 [0]) "CLMAX.f":127 718 {nop}
     (nil))
;;  succ:       30 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 30, loop depth 0, maybe hot
;;  prev block 36, next block 1, flags: (RTL, MODIFIED)
;;  pred:       36 [always]  (FALLTHRU)
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 755 799 756 30 15 (nil) [0 uses])
(note 756 755 764 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 764 756 803 30 (const_int 0 [0]) "CLMAX.f":135 718 {nop}
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(note 803 764 0 NOTE_INSN_DELETED)
