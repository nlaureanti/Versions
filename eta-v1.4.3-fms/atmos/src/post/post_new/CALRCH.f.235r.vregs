
;; Function calrch (calrch_, funcdef_no=0, decl_uid=3770, cgraph_uid=0, symbol_order=0)

(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -104 [0xffffffffffffff98])) [3 el+0 S8 A64])
        (reg:DI 5 di [ el ])) "CALRCH.f":1 85 {*movdi_internal}
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -112 [0xffffffffffffff90])) [3 richno+0 S8 A64])
        (reg:DI 4 si [ richno ])) "CALRCH.f":1 85 {*movdi_internal}
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 60 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
        (const_int 1 [0x1])) "CALRCH.f":76 86 {*movsi_internal}
     (nil))
;;  succ:       4 (FALLTHRU)

;; basic block 4, loop depth 1, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
;;              11 (DFS_BACK)
(code_label 60 7 8 4 7 (nil) [1 uses])
(note 8 60 9 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 9 8 10 4 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
            (const_int 38 [0x26]))) "CALRCH.f":76 11 {*cmpsi_1}
     (nil))
(insn 10 9 11 4 (set (reg:QI 709)
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALRCH.f":76 678 {*setcc_qi}
     (nil))
(insn 11 10 12 4 (set (reg:SI 673 [ _624 ])
        (zero_extend:SI (reg:QI 709))) "CALRCH.f":76 140 {*zero_extendqisi2}
     (nil))
(insn 12 11 13 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 673 [ _624 ])
            (const_int 0 [0]))) "CALRCH.f":76 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 13 12 14 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 63)
            (pc))) "CALRCH.f":76 682 {*jcc}
     (nil)
 -> 63)
;;  succ:       12
;;              5 (FALLTHRU)

;; basic block 5, loop depth 1, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       4 (FALLTHRU)
(note 14 13 15 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 5 (set (reg:SI 674 [ _625 ])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7fe96ef06630 parallel>)
                    (const_int 8 [0x8]))) [1 parallel.jsta+0 S4 A64])) "CALRCH.f":77 86 {*movsi_internal}
     (nil))
(insn 16 15 17 5 (set (reg:SI 675 [ _626 ])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7fe96ef06630 parallel>)
                    (const_int 12 [0xc]))) [1 parallel.jend+0 S4 A32])) "CALRCH.f":77 86 {*movsi_internal}
     (nil))
(insn 17 16 54 5 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
        (reg:SI 674 [ _625 ])) "CALRCH.f":77 86 {*movsi_internal}
     (nil))
;;  succ:       6 (FALLTHRU)

;; basic block 6, loop depth 2, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       5 (FALLTHRU)
;;              10 (DFS_BACK)
(code_label 54 17 18 6 6 (nil) [1 uses])
(note 18 54 19 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 6 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (reg:SI 675 [ _626 ]))) "CALRCH.f":77 11 {*cmpsi_1}
     (nil))
(insn 20 19 21 6 (set (reg:QI 710)
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALRCH.f":77 678 {*setcc_qi}
     (nil))
(insn 21 20 22 6 (set (reg:SI 676 [ _628 ])
        (zero_extend:SI (reg:QI 710))) "CALRCH.f":77 140 {*zero_extendqisi2}
     (nil))
(insn 22 21 23 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 676 [ _628 ])
            (const_int 0 [0]))) "CALRCH.f":77 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 23 22 24 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 57)
            (pc))) "CALRCH.f":77 682 {*jcc}
     (nil)
 -> 57)
;;  succ:       11
;;              7 (FALLTHRU)

;; basic block 7, loop depth 2, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       6 (FALLTHRU)
(note 24 23 25 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 25 24 48 7 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
        (const_int 1 [0x1])) "CALRCH.f":78 86 {*movsi_internal}
     (nil))
;;  succ:       8 (FALLTHRU)

;; basic block 8, loop depth 3, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       7 (FALLTHRU)
;;              9 (DFS_BACK)
(code_label 48 25 26 8 5 (nil) [1 uses])
(note 26 48 27 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 8 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
            (const_int 119 [0x77]))) "CALRCH.f":78 11 {*cmpsi_1}
     (nil))
(insn 28 27 29 8 (set (reg:QI 711)
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALRCH.f":78 678 {*setcc_qi}
     (nil))
(insn 29 28 30 8 (set (reg:SI 677 [ _630 ])
        (zero_extend:SI (reg:QI 711))) "CALRCH.f":78 140 {*zero_extendqisi2}
     (nil))
(insn 30 29 31 8 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 677 [ _630 ])
            (const_int 0 [0]))) "CALRCH.f":78 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 31 30 32 8 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 51)
            (pc))) "CALRCH.f":78 682 {*jcc}
     (nil)
 -> 51)
;;  succ:       10
;;              9 (FALLTHRU)

;; basic block 9, loop depth 3, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL)
;;  pred:       8 (FALLTHRU)
(note 32 31 33 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 33 32 34 9 (set (reg:SI 712)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALRCH.f":79 86 {*movsi_internal}
     (nil))
(insn 34 33 35 9 (set (reg:DI 87 [ _1 ])
        (sign_extend:DI (reg:SI 712))) "CALRCH.f":79 149 {*extendsidi2_rex64}
     (nil))
(insn 35 34 36 9 (parallel [
            (set (reg:DI 88 [ _2 ])
                (mult:DI (reg:DI 87 [ _1 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":79 349 {*muldi3_1}
     (nil))
(insn 36 35 37 9 (set (reg:SI 713)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":79 86 {*movsi_internal}
     (nil))
(insn 37 36 38 9 (set (reg:DI 89 [ _3 ])
        (sign_extend:DI (reg:SI 713))) "CALRCH.f":79 149 {*extendsidi2_rex64}
     (nil))
(insn 38 37 39 9 (parallel [
            (set (reg:DI 90 [ _4 ])
                (mult:DI (reg:DI 89 [ _3 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":79 349 {*muldi3_1}
     (nil))
(insn 39 38 40 9 (parallel [
            (set (reg:DI 91 [ _5 ])
                (plus:DI (reg:DI 88 [ _2 ])
                    (reg:DI 90 [ _4 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":79 222 {*adddi_1}
     (nil))
(insn 40 39 41 9 (set (reg:SI 714)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALRCH.f":79 86 {*movsi_internal}
     (nil))
(insn 41 40 42 9 (set (reg:DI 92 [ _6 ])
        (sign_extend:DI (reg:SI 714))) "CALRCH.f":79 149 {*extendsidi2_rex64}
     (nil))
(insn 42 41 43 9 (parallel [
            (set (reg:DI 93 [ _7 ])
                (plus:DI (reg:DI 91 [ _5 ])
                    (reg:DI 92 [ _6 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":79 222 {*adddi_1}
     (nil))
(insn 43 42 44 9 (parallel [
            (set (reg:DI 94 [ _8 ])
                (plus:DI (reg:DI 93 [ _7 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":79 222 {*adddi_1}
     (nil))
(insn 44 43 45 9 (set (reg:SF 95 [ _9 ])
        (mem/c:SF (symbol_ref:DI ("options_") [flags 0x2]  <var_decl 0x7fe96ef06240 options>) [2 options.spval+0 S4 A128])) "CALRCH.f":1 131 {*movsf_internal}
     (nil))
(insn 45 44 46 9 (set (reg/f:DI 715)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -112 [0xffffffffffffff90])) [3 richno+0 S8 A64])) "CALRCH.f":79 85 {*movdi_internal}
     (nil))
(insn 46 45 47 9 (set (mem:SF (plus:DI (mult:DI (reg:DI 94 [ _8 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 715)) [2 *richno_631(D) S4 A32])
        (reg:SF 95 [ _9 ])) "CALRCH.f":79 131 {*movsf_internal}
     (nil))
(insn 47 46 49 9 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":78 221 {*addsi_1}
     (nil))
(jump_insn 49 47 50 9 (set (pc)
        (label_ref 48)) "CALRCH.f":78 683 {jump}
     (nil)
 -> 48)
;;  succ:       8 (DFS_BACK)

(barrier 50 49 51)
;; basic block 10, loop depth 2, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL)
;;  pred:       8
(code_label 51 50 52 10 4 (nil) [1 uses])
(note 52 51 53 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 53 52 55 10 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":77 221 {*addsi_1}
     (nil))
(jump_insn 55 53 56 10 (set (pc)
        (label_ref 54)) "CALRCH.f":77 683 {jump}
     (nil)
 -> 54)
;;  succ:       6 (DFS_BACK)

(barrier 56 55 57)
;; basic block 11, loop depth 1, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL)
;;  pred:       6
(code_label 57 56 58 11 3 (nil) [1 uses])
(note 58 57 59 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 59 58 61 11 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":76 221 {*addsi_1}
     (nil))
(jump_insn 61 59 62 11 (set (pc)
        (label_ref 60)) "CALRCH.f":76 683 {jump}
     (nil)
 -> 60)
;;  succ:       4 (DFS_BACK)

(barrier 62 61 63)
;; basic block 12, loop depth 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL)
;;  pred:       4
(code_label 63 62 64 12 2 (nil) [1 uses])
(note 64 63 65 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 65 64 66 12 (set (reg:SI 678 [ _636 ])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7fe96ef06630 parallel>)
                    (const_int 8 [0x8]))) [1 parallel.jsta+0 S4 A64])) "CALRCH.f":85 86 {*movsi_internal}
     (nil))
(insn 66 65 67 12 (set (reg:SI 679 [ _637 ])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7fe96ef06630 parallel>)
                    (const_int 12 [0xc]))) [1 parallel.jend+0 S4 A32])) "CALRCH.f":85 86 {*movsi_internal}
     (nil))
(insn 67 66 111 12 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
        (reg:SI 678 [ _636 ])) "CALRCH.f":85 86 {*movsi_internal}
     (nil))
;;  succ:       13 (FALLTHRU)

;; basic block 13, loop depth 1, maybe hot
;;  prev block 12, next block 14, flags: (NEW, REACHABLE, RTL)
;;  pred:       12 (FALLTHRU)
;;              17 (DFS_BACK)
(code_label 111 67 68 13 11 (nil) [1 uses])
(note 68 111 69 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 69 68 70 13 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (reg:SI 679 [ _637 ]))) "CALRCH.f":85 11 {*cmpsi_1}
     (nil))
(insn 70 69 71 13 (set (reg:QI 716)
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALRCH.f":85 678 {*setcc_qi}
     (nil))
(insn 71 70 72 13 (set (reg:SI 680 [ _639 ])
        (zero_extend:SI (reg:QI 716))) "CALRCH.f":85 140 {*zero_extendqisi2}
     (nil))
(insn 72 71 73 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 680 [ _639 ])
            (const_int 0 [0]))) "CALRCH.f":85 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 73 72 74 13 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 114)
            (pc))) "CALRCH.f":85 682 {*jcc}
     (nil)
 -> 114)
;;  succ:       18
;;              14 (FALLTHRU)

;; basic block 14, loop depth 1, maybe hot
;;  prev block 13, next block 15, flags: (NEW, REACHABLE, RTL)
;;  pred:       13 (FALLTHRU)
(note 74 73 75 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 75 74 105 14 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
        (const_int 1 [0x1])) "CALRCH.f":86 86 {*movsi_internal}
     (nil))
;;  succ:       15 (FALLTHRU)

;; basic block 15, loop depth 2, maybe hot
;;  prev block 14, next block 16, flags: (NEW, REACHABLE, RTL)
;;  pred:       14 (FALLTHRU)
;;              16 (DFS_BACK)
(code_label 105 75 76 15 10 (nil) [1 uses])
(note 76 105 77 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 77 76 78 15 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
            (const_int 119 [0x77]))) "CALRCH.f":86 11 {*cmpsi_1}
     (nil))
(insn 78 77 79 15 (set (reg:QI 717)
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALRCH.f":86 678 {*setcc_qi}
     (nil))
(insn 79 78 80 15 (set (reg:SI 681 [ _641 ])
        (zero_extend:SI (reg:QI 717))) "CALRCH.f":86 140 {*zero_extendqisi2}
     (nil))
(insn 80 79 81 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 681 [ _641 ])
            (const_int 0 [0]))) "CALRCH.f":86 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 81 80 82 15 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 108)
            (pc))) "CALRCH.f":86 682 {*jcc}
     (nil)
 -> 108)
;;  succ:       17
;;              16 (FALLTHRU)

;; basic block 16, loop depth 2, maybe hot
;;  prev block 15, next block 17, flags: (NEW, REACHABLE, RTL)
;;  pred:       15 (FALLTHRU)
(note 82 81 83 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 83 82 84 16 (set (reg:SI 718)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":87 86 {*movsi_internal}
     (nil))
(insn 84 83 85 16 (set (reg:DI 96 [ _10 ])
        (sign_extend:DI (reg:SI 718))) "CALRCH.f":87 149 {*extendsidi2_rex64}
     (nil))
(insn 85 84 86 16 (parallel [
            (set (reg:DI 97 [ _11 ])
                (mult:DI (reg:DI 96 [ _10 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":87 349 {*muldi3_1}
     (nil))
(insn 86 85 87 16 (set (reg:SI 719)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALRCH.f":87 86 {*movsi_internal}
     (nil))
(insn 87 86 88 16 (set (reg:DI 98 [ _12 ])
        (sign_extend:DI (reg:SI 719))) "CALRCH.f":87 149 {*extendsidi2_rex64}
     (nil))
(insn 88 87 89 16 (parallel [
            (set (reg:DI 99 [ _13 ])
                (plus:DI (reg:DI 97 [ _11 ])
                    (reg:DI 98 [ _12 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":87 222 {*adddi_1}
     (nil))
(insn 89 88 90 16 (parallel [
            (set (reg:DI 100 [ _14 ])
                (plus:DI (reg:DI 99 [ _13 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":87 222 {*adddi_1}
     (nil))
(insn 90 89 91 16 (set (reg/f:DI 720)
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7fe96ef1b900 vrbls>)) "CALRCH.f":87 85 {*movdi_internal}
     (nil))
(insn 91 90 92 16 (parallel [
            (set (reg:DI 721)
                (plus:DI (reg:DI 100 [ _14 ])
                    (const_int 59262 [0xe77e])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":87 222 {*adddi_1}
     (nil))
(insn 92 91 93 16 (set (reg:SF 101 [ _15 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 721)
                    (const_int 4 [0x4]))
                (reg/f:DI 720)) [2 vrbls.fis S4 A32])) "CALRCH.f":87 131 {*movsf_internal}
     (nil))
(insn 93 92 94 16 (set (reg:SI 722)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":87 86 {*movsi_internal}
     (nil))
(insn 94 93 95 16 (set (reg:DI 102 [ _16 ])
        (sign_extend:DI (reg:SI 722))) "CALRCH.f":87 149 {*extendsidi2_rex64}
     (nil))
(insn 95 94 96 16 (parallel [
            (set (reg:DI 103 [ _17 ])
                (mult:DI (reg:DI 102 [ _16 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":87 349 {*muldi3_1}
     (nil))
(insn 96 95 97 16 (set (reg:SI 723)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALRCH.f":87 86 {*movsi_internal}
     (nil))
(insn 97 96 98 16 (set (reg:DI 104 [ _18 ])
        (sign_extend:DI (reg:SI 723))) "CALRCH.f":87 149 {*extendsidi2_rex64}
     (nil))
(insn 98 97 99 16 (parallel [
            (set (reg:DI 105 [ _19 ])
                (plus:DI (reg:DI 103 [ _17 ])
                    (reg:DI 104 [ _18 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":87 222 {*adddi_1}
     (nil))
(insn 99 98 100 16 (parallel [
            (set (reg:DI 106 [ _20 ])
                (plus:DI (reg:DI 105 [ _19 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":87 222 {*adddi_1}
     (nil))
(insn 100 99 101 16 (set (reg:SF 724)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) "CALRCH.f":87 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 9.80000019073486328125e+0 [0x0.9ccccdp+4])
        (nil)))
(insn 101 100 102 16 (set (reg:SF 107 [ _21 ])
        (mult:SF (reg:SF 101 [ _15 ])
            (reg:SF 724))) "CALRCH.f":87 838 {*fop_sf_comm}
     (nil))
(insn 102 101 103 16 (set (reg/f:DI 725)
        (symbol_ref:DI ("hgt.4223") [flags 0x202]  <var_decl 0x7fe96ef1e360 hgt>)) "CALRCH.f":87 85 {*movdi_internal}
     (nil))
(insn 103 102 104 16 (set (mem:SF (plus:DI (mult:DI (reg:DI 106 [ _20 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 725)) [2 hgt S4 A32])
        (reg:SF 107 [ _21 ])) "CALRCH.f":87 131 {*movsf_internal}
     (nil))
(insn 104 103 106 16 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":86 221 {*addsi_1}
     (nil))
(jump_insn 106 104 107 16 (set (pc)
        (label_ref 105)) "CALRCH.f":86 683 {jump}
     (nil)
 -> 105)
;;  succ:       15 (DFS_BACK)

(barrier 107 106 108)
;; basic block 17, loop depth 1, maybe hot
;;  prev block 16, next block 18, flags: (NEW, REACHABLE, RTL)
;;  pred:       15
(code_label 108 107 109 17 9 (nil) [1 uses])
(note 109 108 110 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 110 109 112 17 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":85 221 {*addsi_1}
     (nil))
(jump_insn 112 110 113 17 (set (pc)
        (label_ref 111)) "CALRCH.f":85 683 {jump}
     (nil)
 -> 111)
;;  succ:       13 (DFS_BACK)

(barrier 113 112 114)
;; basic block 18, loop depth 0, maybe hot
;;  prev block 17, next block 19, flags: (NEW, REACHABLE, RTL)
;;  pred:       13
(code_label 114 113 115 18 8 (nil) [1 uses])
(note 115 114 116 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 116 115 588 18 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
        (const_int 38 [0x26])) "CALRCH.f":95 86 {*movsi_internal}
     (nil))
;;  succ:       19 (FALLTHRU)

;; basic block 19, loop depth 1, maybe hot
;;  prev block 18, next block 20, flags: (NEW, REACHABLE, RTL)
;;  pred:       18 (FALLTHRU)
;;              44 (DFS_BACK)
(code_label 588 116 117 19 29 (nil) [1 uses])
(note 117 588 118 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 118 117 119 19 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
            (const_int 0 [0]))) "CALRCH.f":95 7 {*cmpsi_ccno_1}
     (nil))
(insn 119 118 120 19 (set (reg:QI 726)
        (le:QI (reg:CCNO 17 flags)
            (const_int 0 [0]))) "CALRCH.f":95 678 {*setcc_qi}
     (nil))
(insn 120 119 121 19 (set (reg:SI 682 [ _646 ])
        (zero_extend:SI (reg:QI 726))) "CALRCH.f":95 140 {*zero_extendqisi2}
     (nil))
(insn 121 120 122 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 682 [ _646 ])
            (const_int 0 [0]))) "CALRCH.f":95 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 122 121 123 19 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 591)
            (pc))) "CALRCH.f":95 682 {*jcc}
     (nil)
 -> 591)
;;  succ:       45
;;              20 (FALLTHRU)

;; basic block 20, loop depth 1, maybe hot
;;  prev block 19, next block 21, flags: (NEW, REACHABLE, RTL)
;;  pred:       19 (FALLTHRU)
(note 123 122 124 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 124 123 125 20 (set (reg:SI 683 [ _647 ])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7fe96ef06630 parallel>)
                    (const_int 8 [0x8]))) [1 parallel.jsta+0 S4 A64])) "CALRCH.f":96 86 {*movsi_internal}
     (nil))
(insn 125 124 126 20 (set (reg:SI 684 [ _648 ])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7fe96ef06630 parallel>)
                    (const_int 12 [0xc]))) [1 parallel.jend+0 S4 A32])) "CALRCH.f":96 86 {*movsi_internal}
     (nil))
(insn 126 125 226 20 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
        (reg:SI 683 [ _647 ])) "CALRCH.f":96 86 {*movsi_internal}
     (nil))
;;  succ:       21 (FALLTHRU)

;; basic block 21, loop depth 2, maybe hot
;;  prev block 20, next block 22, flags: (NEW, REACHABLE, RTL)
;;  pred:       20 (FALLTHRU)
;;              25 (DFS_BACK)
(code_label 226 126 127 21 16 (nil) [1 uses])
(note 127 226 128 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 128 127 129 21 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (reg:SI 684 [ _648 ]))) "CALRCH.f":96 11 {*cmpsi_1}
     (nil))
(insn 129 128 130 21 (set (reg:QI 727)
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALRCH.f":96 678 {*setcc_qi}
     (nil))
(insn 130 129 131 21 (set (reg:SI 685 [ _650 ])
        (zero_extend:SI (reg:QI 727))) "CALRCH.f":96 140 {*zero_extendqisi2}
     (nil))
(insn 131 130 132 21 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 685 [ _650 ])
            (const_int 0 [0]))) "CALRCH.f":96 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 132 131 133 21 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 229)
            (pc))) "CALRCH.f":96 682 {*jcc}
     (nil)
 -> 229)
;;  succ:       26
;;              22 (FALLTHRU)

;; basic block 22, loop depth 2, maybe hot
;;  prev block 21, next block 23, flags: (NEW, REACHABLE, RTL)
;;  pred:       21 (FALLTHRU)
(note 133 132 134 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 134 133 220 22 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
        (const_int 1 [0x1])) "CALRCH.f":97 86 {*movsi_internal}
     (nil))
;;  succ:       23 (FALLTHRU)

;; basic block 23, loop depth 3, maybe hot
;;  prev block 22, next block 24, flags: (NEW, REACHABLE, RTL)
;;  pred:       22 (FALLTHRU)
;;              24 (DFS_BACK)
(code_label 220 134 135 23 15 (nil) [1 uses])
(note 135 220 136 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 136 135 137 23 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
            (const_int 119 [0x77]))) "CALRCH.f":97 11 {*cmpsi_1}
     (nil))
(insn 137 136 138 23 (set (reg:QI 728)
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALRCH.f":97 678 {*setcc_qi}
     (nil))
(insn 138 137 139 23 (set (reg:SI 686 [ _652 ])
        (zero_extend:SI (reg:QI 728))) "CALRCH.f":97 140 {*zero_extendqisi2}
     (nil))
(insn 139 138 140 23 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 686 [ _652 ])
            (const_int 0 [0]))) "CALRCH.f":97 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 140 139 141 23 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 223)
            (pc))) "CALRCH.f":97 682 {*jcc}
     (nil)
 -> 223)
;;  succ:       25
;;              24 (FALLTHRU)

;; basic block 24, loop depth 3, maybe hot
;;  prev block 23, next block 25, flags: (NEW, REACHABLE, RTL)
;;  pred:       23 (FALLTHRU)
(note 141 140 142 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 142 141 143 24 (set (reg:SI 729)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":98 86 {*movsi_internal}
     (nil))
(insn 143 142 144 24 (set (reg:DI 108 [ _22 ])
        (sign_extend:DI (reg:SI 729))) "CALRCH.f":98 149 {*extendsidi2_rex64}
     (nil))
(insn 144 143 145 24 (parallel [
            (set (reg:DI 109 [ _23 ])
                (mult:DI (reg:DI 108 [ _22 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":98 349 {*muldi3_1}
     (nil))
(insn 145 144 146 24 (set (reg:SI 730)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALRCH.f":98 86 {*movsi_internal}
     (nil))
(insn 146 145 147 24 (set (reg:DI 110 [ _24 ])
        (sign_extend:DI (reg:SI 730))) "CALRCH.f":98 149 {*extendsidi2_rex64}
     (nil))
(insn 147 146 148 24 (parallel [
            (set (reg:DI 111 [ _25 ])
                (plus:DI (reg:DI 109 [ _23 ])
                    (reg:DI 110 [ _24 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":98 222 {*adddi_1}
     (nil))
(insn 148 147 149 24 (parallel [
            (set (reg:DI 112 [ _26 ])
                (plus:DI (reg:DI 111 [ _25 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":98 222 {*adddi_1}
     (nil))
(insn 149 148 150 24 (set (reg/f:DI 731)
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7fe96eef8870 extra>)) "CALRCH.f":98 85 {*movdi_internal}
     (nil))
(insn 150 149 151 24 (parallel [
            (set (reg:DI 732)
                (plus:DI (reg:DI 112 [ _26 ])
                    (const_int 4647393 [0x46e9e1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":98 222 {*adddi_1}
     (nil))
(insn 151 150 152 24 (set (reg:SF 113 [ _27 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 732)
                    (const_int 4 [0x4]))
                (reg/f:DI 731)) [2 extra.pdsl S4 A32])) "CALRCH.f":98 131 {*movsf_internal}
     (nil))
(insn 152 151 153 24 (set (reg:SI 733)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALRCH.f":98 86 {*movsi_internal}
     (nil))
(insn 153 152 154 24 (set (reg:DI 114 [ _28 ])
        (sign_extend:DI (reg:SI 733))) "CALRCH.f":98 149 {*extendsidi2_rex64}
     (nil))
(insn 154 153 155 24 (parallel [
            (set (reg:DI 115 [ _29 ])
                (plus:DI (reg:DI 114 [ _28 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":98 222 {*adddi_1}
     (nil))
(insn 155 154 156 24 (set (reg/f:DI 734)
        (symbol_ref:DI ("phys_") [flags 0x202]  <var_decl 0x7fe96ef06ea0 phys>)) "CALRCH.f":98 85 {*movdi_internal}
     (nil))
(insn 156 155 157 24 (parallel [
            (set (reg:DI 735)
                (plus:DI (reg:DI 115 [ _29 ])
                    (const_int 59 [0x3b])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":98 222 {*adddi_1}
     (nil))
(insn 157 156 158 24 (set (reg:SF 116 [ _30 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 735)
                    (const_int 4 [0x4]))
                (reg/f:DI 734)) [2 phys.aeta S4 A32])) "CALRCH.f":98 131 {*movsf_internal}
     (nil))
(insn 158 157 159 24 (set (reg:SF 117 [ _31 ])
        (mult:SF (reg:SF 113 [ _27 ])
            (reg:SF 116 [ _30 ]))) "CALRCH.f":98 838 {*fop_sf_comm}
     (nil))
(insn 159 158 160 24 (set (reg/f:DI 736)
        (symbol_ref:DI ("phys_") [flags 0x202]  <var_decl 0x7fe96ef06ea0 phys>)) "CALRCH.f":1 85 {*movdi_internal}
     (nil))
(insn 160 159 161 24 (set (reg:SF 118 [ _32 ])
        (mem/c:SF (plus:DI (reg/f:DI 736)
                (const_int 4 [0x4])) [2 phys.pt+0 S4 A32])) "CALRCH.f":1 131 {*movsf_internal}
     (nil))
(insn 161 160 162 24 (set (reg:SF 119 [ _33 ])
        (plus:SF (reg:SF 117 [ _31 ])
            (reg:SF 118 [ _32 ]))) "CALRCH.f":98 838 {*fop_sf_comm}
     (nil))
(insn 162 161 163 24 (set (reg:SF 120 [ _34 ])
        (reg:SF 119 [ _33 ])) "CALRCH.f":98 131 {*movsf_internal}
     (nil))
(insn 163 162 164 24 (set (reg:SF 737)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S4 A32])) "CALRCH.f":98 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+5 [0x0.c35p+17])
        (nil)))
(insn 164 163 165 24 (set (reg:SF 121 [ _35 ])
        (div:SF (reg:SF 737)
            (reg:SF 120 [ _34 ]))) "CALRCH.f":98 841 {*fop_sf_1}
     (nil))
(insn 165 164 166 24 (set (reg:SF 687 [ _653 ])
        (reg:SF 121 [ _35 ])) "CALRCH.f":98 131 {*movsf_internal}
     (nil))
(insn 166 165 167 24 (set (reg:SF 22 xmm1)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0  S4 A32])) "CALRCH.f":98 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 2.8589642047882080078125e-1 [0x0.926104p-1])
        (nil)))
(insn 167 166 168 24 (set (reg:SF 21 xmm0)
        (reg:SF 687 [ _653 ])) "CALRCH.f":98 131 {*movsf_internal}
     (nil))
(call_insn/u 168 167 169 24 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("powf") [flags 0x41]  <function_decl 0x7fe96ed74100 __builtin_powf>) [0 __builtin_powf S1 A8])
            (const_int 0 [0]))) "CALRCH.f":98 700 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (expr_list:SF (use (reg:SF 22 xmm1))
            (nil))))
(insn 169 168 170 24 (set (reg:SF 738)
        (reg:SF 21 xmm0)) "CALRCH.f":98 131 {*movsf_internal}
     (nil))
(insn 170 169 171 24 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 ape+0 S4 A32])
        (reg:SF 738)) "CALRCH.f":98 131 {*movsf_internal}
     (nil))
(insn 171 170 172 24 (set (reg:SI 739)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALRCH.f":99 86 {*movsi_internal}
     (nil))
(insn 172 171 173 24 (set (reg:DI 122 [ _36 ])
        (sign_extend:DI (reg:SI 739))) "CALRCH.f":99 149 {*extendsidi2_rex64}
     (nil))
(insn 173 172 174 24 (parallel [
            (set (reg:DI 123 [ _37 ])
                (mult:DI (reg:DI 122 [ _36 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":99 349 {*muldi3_1}
     (nil))
(insn 174 173 175 24 (set (reg:SI 740)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":99 86 {*movsi_internal}
     (nil))
(insn 175 174 176 24 (set (reg:DI 124 [ _38 ])
        (sign_extend:DI (reg:SI 740))) "CALRCH.f":99 149 {*extendsidi2_rex64}
     (nil))
(insn 176 175 177 24 (parallel [
            (set (reg:DI 125 [ _39 ])
                (mult:DI (reg:DI 124 [ _38 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":99 349 {*muldi3_1}
     (nil))
(insn 177 176 178 24 (parallel [
            (set (reg:DI 126 [ _40 ])
                (plus:DI (reg:DI 123 [ _37 ])
                    (reg:DI 125 [ _39 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":99 222 {*adddi_1}
     (nil))
(insn 178 177 179 24 (set (reg:SI 741)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALRCH.f":99 86 {*movsi_internal}
     (nil))
(insn 179 178 180 24 (set (reg:DI 127 [ _41 ])
        (sign_extend:DI (reg:SI 741))) "CALRCH.f":99 149 {*extendsidi2_rex64}
     (nil))
(insn 180 179 181 24 (parallel [
            (set (reg:DI 128 [ _42 ])
                (plus:DI (reg:DI 126 [ _40 ])
                    (reg:DI 127 [ _41 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":99 222 {*adddi_1}
     (nil))
(insn 181 180 182 24 (parallel [
            (set (reg:DI 129 [ _43 ])
                (plus:DI (reg:DI 128 [ _42 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":99 222 {*adddi_1}
     (nil))
(insn 182 181 183 24 (set (reg/f:DI 742)
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7fe96ef1b900 vrbls>)) "CALRCH.f":99 85 {*movdi_internal}
     (nil))
(insn 183 182 184 24 (parallel [
            (set (reg:DI 743)
                (plus:DI (reg:DI 129 [ _43 ])
                    (const_int 3466827 [0x34e64b])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":99 222 {*adddi_1}
     (nil))
(insn 184 183 185 24 (set (reg:SF 130 [ _44 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 743)
                    (const_int 4 [0x4]))
                (reg/f:DI 742)) [2 vrbls.q S4 A32])) "CALRCH.f":99 131 {*movsf_internal}
     (nil))
(insn 185 184 186 24 (set (reg:SF 744)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC3") [flags 0x2]) [0  S4 A32])) "CALRCH.f":99 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 6.07999980449676513671875e-1 [0x0.9ba5e3p+0])
        (nil)))
(insn 186 185 187 24 (set (reg:SF 131 [ _45 ])
        (mult:SF (reg:SF 130 [ _44 ])
            (reg:SF 744))) "CALRCH.f":99 838 {*fop_sf_comm}
     (nil))
(insn 187 186 188 24 (set (reg:SF 745)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC4") [flags 0x2]) [0  S4 A32])) "CALRCH.f":99 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 188 187 189 24 (set (reg:SF 132 [ _46 ])
        (plus:SF (reg:SF 131 [ _45 ])
            (reg:SF 745))) "CALRCH.f":99 838 {*fop_sf_comm}
     (nil))
(insn 189 188 190 24 (set (reg:SF 133 [ _47 ])
        (reg:SF 132 [ _46 ])) "CALRCH.f":99 131 {*movsf_internal}
     (nil))
(insn 190 189 191 24 (set (reg:SI 746)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALRCH.f":99 86 {*movsi_internal}
     (nil))
(insn 191 190 192 24 (set (reg:DI 134 [ _48 ])
        (sign_extend:DI (reg:SI 746))) "CALRCH.f":99 149 {*extendsidi2_rex64}
     (nil))
(insn 192 191 193 24 (parallel [
            (set (reg:DI 135 [ _49 ])
                (mult:DI (reg:DI 134 [ _48 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":99 349 {*muldi3_1}
     (nil))
(insn 193 192 194 24 (set (reg:SI 747)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":99 86 {*movsi_internal}
     (nil))
(insn 194 193 195 24 (set (reg:DI 136 [ _50 ])
        (sign_extend:DI (reg:SI 747))) "CALRCH.f":99 149 {*extendsidi2_rex64}
     (nil))
(insn 195 194 196 24 (parallel [
            (set (reg:DI 137 [ _51 ])
                (mult:DI (reg:DI 136 [ _50 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":99 349 {*muldi3_1}
     (nil))
(insn 196 195 197 24 (parallel [
            (set (reg:DI 138 [ _52 ])
                (plus:DI (reg:DI 135 [ _49 ])
                    (reg:DI 137 [ _51 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":99 222 {*adddi_1}
     (nil))
(insn 197 196 198 24 (set (reg:SI 748)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALRCH.f":99 86 {*movsi_internal}
     (nil))
(insn 198 197 199 24 (set (reg:DI 139 [ _53 ])
        (sign_extend:DI (reg:SI 748))) "CALRCH.f":99 149 {*extendsidi2_rex64}
     (nil))
(insn 199 198 200 24 (parallel [
            (set (reg:DI 140 [ _54 ])
                (plus:DI (reg:DI 138 [ _52 ])
                    (reg:DI 139 [ _53 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":99 222 {*adddi_1}
     (nil))
(insn 200 199 201 24 (parallel [
            (set (reg:DI 141 [ _55 ])
                (plus:DI (reg:DI 140 [ _54 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":99 222 {*adddi_1}
     (nil))
(insn 201 200 202 24 (set (reg/f:DI 749)
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7fe96ef1b900 vrbls>)) "CALRCH.f":99 85 {*movdi_internal}
     (nil))
(insn 202 201 203 24 (parallel [
            (set (reg:DI 750)
                (plus:DI (reg:DI 141 [ _55 ])
                    (const_int 2340849 [0x23b7f1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":99 222 {*adddi_1}
     (nil))
(insn 203 202 204 24 (set (reg:SF 142 [ _56 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 750)
                    (const_int 4 [0x4]))
                (reg/f:DI 749)) [2 vrbls.t S4 A32])) "CALRCH.f":99 131 {*movsf_internal}
     (nil))
(insn 204 203 205 24 (set (reg:SF 143 [ _57 ])
        (mult:SF (reg:SF 133 [ _47 ])
            (reg:SF 142 [ _56 ]))) "CALRCH.f":99 838 {*fop_sf_comm}
     (nil))
(insn 205 204 206 24 (set (reg:SI 751)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALRCH.f":99 86 {*movsi_internal}
     (nil))
(insn 206 205 207 24 (set (reg:DI 144 [ _58 ])
        (sign_extend:DI (reg:SI 751))) "CALRCH.f":99 149 {*extendsidi2_rex64}
     (nil))
(insn 207 206 208 24 (parallel [
            (set (reg:DI 145 [ _59 ])
                (mult:DI (reg:DI 144 [ _58 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":99 349 {*muldi3_1}
     (nil))
(insn 208 207 209 24 (set (reg:SI 752)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":99 86 {*movsi_internal}
     (nil))
(insn 209 208 210 24 (set (reg:DI 146 [ _60 ])
        (sign_extend:DI (reg:SI 752))) "CALRCH.f":99 149 {*extendsidi2_rex64}
     (nil))
(insn 210 209 211 24 (parallel [
            (set (reg:DI 147 [ _61 ])
                (mult:DI (reg:DI 146 [ _60 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":99 349 {*muldi3_1}
     (nil))
(insn 211 210 212 24 (parallel [
            (set (reg:DI 148 [ _62 ])
                (plus:DI (reg:DI 145 [ _59 ])
                    (reg:DI 147 [ _61 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":99 222 {*adddi_1}
     (nil))
(insn 212 211 213 24 (set (reg:SI 753)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALRCH.f":99 86 {*movsi_internal}
     (nil))
(insn 213 212 214 24 (set (reg:DI 149 [ _63 ])
        (sign_extend:DI (reg:SI 753))) "CALRCH.f":99 149 {*extendsidi2_rex64}
     (nil))
(insn 214 213 215 24 (parallel [
            (set (reg:DI 150 [ _64 ])
                (plus:DI (reg:DI 148 [ _62 ])
                    (reg:DI 149 [ _63 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":99 222 {*adddi_1}
     (nil))
(insn 215 214 216 24 (parallel [
            (set (reg:DI 151 [ _65 ])
                (plus:DI (reg:DI 150 [ _64 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":99 222 {*adddi_1}
     (nil))
(insn 216 215 217 24 (set (reg:SF 152 [ _66 ])
        (mult:SF (reg:SF 143 [ _57 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [2 ape+0 S4 A32]))) "CALRCH.f":99 838 {*fop_sf_comm}
     (nil))
(insn 217 216 218 24 (set (reg/f:DI 754)
        (symbol_ref:DI ("thv.4234") [flags 0x202]  <var_decl 0x7fe96ef1e900 thv>)) "CALRCH.f":99 85 {*movdi_internal}
     (nil))
(insn 218 217 219 24 (set (mem:SF (plus:DI (mult:DI (reg:DI 151 [ _65 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 754)) [2 thv S4 A32])
        (reg:SF 152 [ _66 ])) "CALRCH.f":99 131 {*movsf_internal}
     (nil))
(insn 219 218 221 24 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":97 221 {*addsi_1}
     (nil))
(jump_insn 221 219 222 24 (set (pc)
        (label_ref 220)) "CALRCH.f":97 683 {jump}
     (nil)
 -> 220)
;;  succ:       23 (DFS_BACK)

(barrier 222 221 223)
;; basic block 25, loop depth 2, maybe hot
;;  prev block 24, next block 26, flags: (NEW, REACHABLE, RTL)
;;  pred:       23
(code_label 223 222 224 25 14 (nil) [1 uses])
(note 224 223 225 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 225 224 227 25 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":96 221 {*addsi_1}
     (nil))
(jump_insn 227 225 228 25 (set (pc)
        (label_ref 226)) "CALRCH.f":96 683 {jump}
     (nil)
 -> 226)
;;  succ:       21 (DFS_BACK)

(barrier 228 227 229)
;; basic block 26, loop depth 1, maybe hot
;;  prev block 25, next block 27, flags: (NEW, REACHABLE, RTL)
;;  pred:       21
(code_label 229 228 230 26 13 (nil) [1 uses])
(note 230 229 231 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 231 230 232 26 (set (reg:SI 755)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALRCH.f":103 86 {*movsi_internal}
     (nil))
(insn 232 231 233 26 (set (reg:DI 153 [ _67 ])
        (sign_extend:DI (reg:SI 755))) "CALRCH.f":103 149 {*extendsidi2_rex64}
     (nil))
(insn 233 232 234 26 (parallel [
            (set (reg:DI 154 [ _68 ])
                (plus:DI (reg:DI 153 [ _67 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":103 222 {*adddi_1}
     (nil))
(insn 234 233 235 26 (parallel [
            (set (reg:DI 155 [ _69 ])
                (mult:DI (reg:DI 154 [ _68 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":103 349 {*muldi3_1}
     (nil))
(insn 235 234 236 26 (parallel [
            (set (reg:DI 756)
                (ashift:DI (reg:DI 155 [ _69 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":103 551 {*ashldi3_1}
     (nil))
(insn 236 235 237 26 (set (reg:DI 757)
        (symbol_ref:DI ("thv.4234") [flags 0x202]  <var_decl 0x7fe96ef1e900 thv>)) "CALRCH.f":103 85 {*movdi_internal}
     (nil))
(insn 237 236 238 26 (parallel [
            (set (reg/f:DI 156 [ _70 ])
                (plus:DI (reg:DI 756)
                    (reg:DI 757)))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":103 222 {*adddi_1}
     (nil))
(insn 238 237 239 26 (set (reg:DI 5 di)
        (reg/f:DI 156 [ _70 ])) "CALRCH.f":103 85 {*movdi_internal}
     (nil))
(insn 239 238 240 26 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CALRCH.f":103 88 {*movqi_internal}
     (nil))
(call_insn 240 239 241 26 (call (mem:QI (symbol_ref:DI ("exch_") [flags 0x41]  <function_decl 0x7fe96eeef600 exch>) [0 exch S1 A8])
        (const_int 0 [0])) "CALRCH.f":103 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 241 240 242 26 (set (reg:SI 688 [ _659 ])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7fe96ef06630 parallel>)
                    (const_int 8 [0x8]))) [1 parallel.jsta+0 S4 A64])) "CALRCH.f":107 86 {*movsi_internal}
     (nil))
(insn 242 241 243 26 (set (reg:SI 689 [ _660 ])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7fe96ef06630 parallel>)
                    (const_int 20 [0x14]))) [1 parallel.jend_m+0 S4 A32])) "CALRCH.f":107 86 {*movsi_internal}
     (nil))
(insn 243 242 345 26 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
        (reg:SI 688 [ _659 ])) "CALRCH.f":107 86 {*movsi_internal}
     (nil))
;;  succ:       27 (FALLTHRU)

;; basic block 27, loop depth 2, maybe hot
;;  prev block 26, next block 28, flags: (NEW, REACHABLE, RTL)
;;  pred:       26 (FALLTHRU)
;;              31 (DFS_BACK)
(code_label 345 243 244 27 20 (nil) [1 uses])
(note 244 345 245 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 245 244 246 27 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (reg:SI 689 [ _660 ]))) "CALRCH.f":107 11 {*cmpsi_1}
     (nil))
(insn 246 245 247 27 (set (reg:QI 758)
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALRCH.f":107 678 {*setcc_qi}
     (nil))
(insn 247 246 248 27 (set (reg:SI 690 [ _662 ])
        (zero_extend:SI (reg:QI 758))) "CALRCH.f":107 140 {*zero_extendqisi2}
     (nil))
(insn 248 247 249 27 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 690 [ _662 ])
            (const_int 0 [0]))) "CALRCH.f":107 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 249 248 250 27 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 348)
            (pc))) "CALRCH.f":107 682 {*jcc}
     (nil)
 -> 348)
;;  succ:       32
;;              28 (FALLTHRU)

;; basic block 28, loop depth 2, maybe hot
;;  prev block 27, next block 29, flags: (NEW, REACHABLE, RTL)
;;  pred:       27 (FALLTHRU)
(note 250 249 251 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 251 250 339 28 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
        (const_int 1 [0x1])) "CALRCH.f":108 86 {*movsi_internal}
     (nil))
;;  succ:       29 (FALLTHRU)

;; basic block 29, loop depth 3, maybe hot
;;  prev block 28, next block 30, flags: (NEW, REACHABLE, RTL)
;;  pred:       28 (FALLTHRU)
;;              30 (DFS_BACK)
(code_label 339 251 252 29 19 (nil) [1 uses])
(note 252 339 253 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 253 252 254 29 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
            (const_int 118 [0x76]))) "CALRCH.f":108 11 {*cmpsi_1}
     (nil))
(insn 254 253 255 29 (set (reg:QI 759)
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALRCH.f":108 678 {*setcc_qi}
     (nil))
(insn 255 254 256 29 (set (reg:SI 691 [ _664 ])
        (zero_extend:SI (reg:QI 759))) "CALRCH.f":108 140 {*zero_extendqisi2}
     (nil))
(insn 256 255 257 29 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 691 [ _664 ])
            (const_int 0 [0]))) "CALRCH.f":108 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 257 256 258 29 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 342)
            (pc))) "CALRCH.f":108 682 {*jcc}
     (nil)
 -> 342)
;;  succ:       31
;;              30 (FALLTHRU)

;; basic block 30, loop depth 3, maybe hot
;;  prev block 29, next block 31, flags: (NEW, REACHABLE, RTL)
;;  pred:       29 (FALLTHRU)
(note 258 257 259 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 259 258 260 30 (set (reg:SI 760)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":109 86 {*movsi_internal}
     (nil))
(insn 260 259 261 30 (set (reg:DI 157 [ _71 ])
        (sign_extend:DI (reg:SI 760))) "CALRCH.f":109 149 {*extendsidi2_rex64}
     (nil))
(insn 261 260 262 30 (parallel [
            (set (reg:DI 158 [ _72 ])
                (plus:DI (reg:DI 157 [ _71 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":109 222 {*adddi_1}
     (nil))
(insn 262 261 266 30 (set (reg:SI 159 [ _73 ])
        (mem:SI (plus:DI (mult:DI (reg:DI 158 [ _72 ])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("indx_") [flags 0x2]  <var_decl 0x7fe96ef00630 indx>)) [1 indx.ihe S4 A32])) "CALRCH.f":109 86 {*movsi_internal}
     (nil))
(insn 266 262 267 30 (set (reg:SI 764)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALRCH.f":109 86 {*movsi_internal}
     (nil))
(insn 267 266 268 30 (parallel [
            (set (reg:SI 763)
                (plus:SI (reg:SI 159 [ _73 ])
                    (reg:SI 764)))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":109 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (reg:SI 159 [ _73 ])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32]))
        (nil)))
(insn 268 267 269 30 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [1 ie+0 S4 A32])
        (reg:SI 763)) "CALRCH.f":109 86 {*movsi_internal}
     (nil))
(insn 269 268 270 30 (set (reg:SI 765)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALRCH.f":111 86 {*movsi_internal}
     (nil))
(insn 270 269 271 30 (set (reg:DI 160 [ _74 ])
        (sign_extend:DI (reg:SI 765))) "CALRCH.f":111 149 {*extendsidi2_rex64}
     (nil))
(insn 271 270 272 30 (parallel [
            (set (reg:DI 161 [ _75 ])
                (mult:DI (reg:DI 160 [ _74 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":111 349 {*muldi3_1}
     (nil))
(insn 272 271 273 30 (set (reg:SI 766)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":111 86 {*movsi_internal}
     (nil))
(insn 273 272 274 30 (parallel [
            (set (reg:SI 162 [ _76 ])
                (plus:SI (reg:SI 766)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":111 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 274 273 275 30 (set (reg:DI 163 [ _77 ])
        (sign_extend:DI (reg:SI 162 [ _76 ]))) "CALRCH.f":111 149 {*extendsidi2_rex64}
     (nil))
(insn 275 274 276 30 (parallel [
            (set (reg:DI 164 [ _78 ])
                (mult:DI (reg:DI 163 [ _77 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":111 349 {*muldi3_1}
     (nil))
(insn 276 275 277 30 (parallel [
            (set (reg:DI 165 [ _79 ])
                (plus:DI (reg:DI 161 [ _75 ])
                    (reg:DI 164 [ _78 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":111 222 {*adddi_1}
     (nil))
(insn 277 276 278 30 (set (reg:SI 767)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [1 ie+0 S4 A32])) "CALRCH.f":111 86 {*movsi_internal}
     (nil))
(insn 278 277 279 30 (set (reg:DI 166 [ _80 ])
        (sign_extend:DI (reg:SI 767))) "CALRCH.f":111 149 {*extendsidi2_rex64}
     (nil))
(insn 279 278 280 30 (parallel [
            (set (reg:DI 167 [ _81 ])
                (plus:DI (reg:DI 165 [ _79 ])
                    (reg:DI 166 [ _80 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":111 222 {*adddi_1}
     (nil))
(insn 280 279 281 30 (parallel [
            (set (reg:DI 168 [ _82 ])
                (plus:DI (reg:DI 167 [ _81 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":111 222 {*adddi_1}
     (nil))
(insn 281 280 282 30 (set (reg/f:DI 768)
        (symbol_ref:DI ("thv.4234") [flags 0x202]  <var_decl 0x7fe96ef1e900 thv>)) "CALRCH.f":111 85 {*movdi_internal}
     (nil))
(insn 282 281 283 30 (set (reg:SF 169 [ _83 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 168 [ _82 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 768)) [2 thv S4 A32])) "CALRCH.f":111 131 {*movsf_internal}
     (nil))
(insn 283 282 284 30 (set (reg:SI 769)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALRCH.f":111 86 {*movsi_internal}
     (nil))
(insn 284 283 285 30 (set (reg:DI 170 [ _84 ])
        (sign_extend:DI (reg:SI 769))) "CALRCH.f":111 149 {*extendsidi2_rex64}
     (nil))
(insn 285 284 286 30 (parallel [
            (set (reg:DI 171 [ _85 ])
                (mult:DI (reg:DI 170 [ _84 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":111 349 {*muldi3_1}
     (nil))
(insn 286 285 287 30 (set (reg:SI 770)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":111 86 {*movsi_internal}
     (nil))
(insn 287 286 288 30 (set (reg:DI 172 [ _86 ])
        (sign_extend:DI (reg:SI 770))) "CALRCH.f":111 149 {*extendsidi2_rex64}
     (nil))
(insn 288 287 289 30 (parallel [
            (set (reg:DI 173 [ _87 ])
                (mult:DI (reg:DI 172 [ _86 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":111 349 {*muldi3_1}
     (nil))
(insn 289 288 290 30 (parallel [
            (set (reg:DI 174 [ _88 ])
                (plus:DI (reg:DI 171 [ _85 ])
                    (reg:DI 173 [ _87 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":111 222 {*adddi_1}
     (nil))
(insn 290 289 291 30 (set (reg:SI 771)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALRCH.f":111 86 {*movsi_internal}
     (nil))
(insn 291 290 292 30 (set (reg:DI 175 [ _89 ])
        (sign_extend:DI (reg:SI 771))) "CALRCH.f":111 149 {*extendsidi2_rex64}
     (nil))
(insn 292 291 293 30 (parallel [
            (set (reg:DI 176 [ _90 ])
                (plus:DI (reg:DI 174 [ _88 ])
                    (reg:DI 175 [ _89 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":111 222 {*adddi_1}
     (nil))
(insn 293 292 294 30 (parallel [
            (set (reg:DI 177 [ _91 ])
                (plus:DI (reg:DI 176 [ _90 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":111 222 {*adddi_1}
     (nil))
(insn 294 293 295 30 (set (reg/f:DI 772)
        (symbol_ref:DI ("thv.4234") [flags 0x202]  <var_decl 0x7fe96ef1e900 thv>)) "CALRCH.f":111 85 {*movdi_internal}
     (nil))
(insn 295 294 296 30 (set (reg:SF 178 [ _92 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 177 [ _91 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 772)) [2 thv S4 A32])) "CALRCH.f":111 131 {*movsf_internal}
     (nil))
(insn 296 295 297 30 (set (reg:SF 179 [ _93 ])
        (minus:SF (reg:SF 169 [ _83 ])
            (reg:SF 178 [ _92 ]))) "CALRCH.f":111 841 {*fop_sf_1}
     (nil))
(insn 297 296 298 30 (set (reg:SF 180 [ _94 ])
        (reg:SF 179 [ _93 ])) "CALRCH.f":111 131 {*movsf_internal}
     (nil))
(insn 298 297 299 30 (set (reg:SI 773)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALRCH.f":111 86 {*movsi_internal}
     (nil))
(insn 299 298 300 30 (set (reg:DI 181 [ _95 ])
        (sign_extend:DI (reg:SI 773))) "CALRCH.f":111 149 {*extendsidi2_rex64}
     (nil))
(insn 300 299 301 30 (parallel [
            (set (reg:DI 182 [ _96 ])
                (mult:DI (reg:DI 181 [ _95 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":111 349 {*muldi3_1}
     (nil))
(insn 301 300 302 30 (set (reg:SI 774)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":111 86 {*movsi_internal}
     (nil))
(insn 302 301 303 30 (set (reg:DI 183 [ _97 ])
        (sign_extend:DI (reg:SI 774))) "CALRCH.f":111 149 {*extendsidi2_rex64}
     (nil))
(insn 303 302 304 30 (parallel [
            (set (reg:DI 184 [ _98 ])
                (mult:DI (reg:DI 183 [ _97 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":111 349 {*muldi3_1}
     (nil))
(insn 304 303 305 30 (parallel [
            (set (reg:DI 185 [ _99 ])
                (plus:DI (reg:DI 182 [ _96 ])
                    (reg:DI 184 [ _98 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":111 222 {*adddi_1}
     (nil))
(insn 305 304 306 30 (set (reg:SI 775)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALRCH.f":111 86 {*movsi_internal}
     (nil))
(insn 306 305 307 30 (set (reg:DI 186 [ _100 ])
        (sign_extend:DI (reg:SI 775))) "CALRCH.f":111 149 {*extendsidi2_rex64}
     (nil))
(insn 307 306 308 30 (parallel [
            (set (reg:DI 187 [ _101 ])
                (plus:DI (reg:DI 185 [ _99 ])
                    (reg:DI 186 [ _100 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":111 222 {*adddi_1}
     (nil))
(insn 308 307 309 30 (parallel [
            (set (reg:DI 188 [ _102 ])
                (plus:DI (reg:DI 187 [ _101 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":111 222 {*adddi_1}
     (nil))
(insn 309 308 310 30 (set (reg/f:DI 776)
        (symbol_ref:DI ("masks_") [flags 0x202]  <var_decl 0x7fe96ef00d80 masks>)) "CALRCH.f":111 85 {*movdi_internal}
     (nil))
(insn 310 309 311 30 (parallel [
            (set (reg:DI 777)
                (plus:DI (reg:DI 188 [ _102 ])
                    (const_int 148155 [0x242bb])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":111 222 {*adddi_1}
     (nil))
(insn 311 310 312 30 (set (reg:SF 189 [ _103 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 777)
                    (const_int 4 [0x4]))
                (reg/f:DI 776)) [2 masks.htm S4 A32])) "CALRCH.f":111 131 {*movsf_internal}
     (nil))
(insn 312 311 313 30 (set (reg:SF 190 [ _104 ])
        (mult:SF (reg:SF 180 [ _94 ])
            (reg:SF 189 [ _103 ]))) "CALRCH.f":111 838 {*fop_sf_comm}
     (nil))
(insn 313 312 314 30 (set (reg:SI 778)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALRCH.f":111 86 {*movsi_internal}
     (nil))
(insn 314 313 315 30 (set (reg:DI 191 [ _105 ])
        (sign_extend:DI (reg:SI 778))) "CALRCH.f":111 149 {*extendsidi2_rex64}
     (nil))
(insn 315 314 316 30 (parallel [
            (set (reg:DI 192 [ _106 ])
                (mult:DI (reg:DI 191 [ _105 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":111 349 {*muldi3_1}
     (nil))
(insn 316 315 317 30 (set (reg:SI 779)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":111 86 {*movsi_internal}
     (nil))
(insn 317 316 318 30 (parallel [
            (set (reg:SI 193 [ _107 ])
                (plus:SI (reg:SI 779)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":111 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 318 317 319 30 (set (reg:DI 194 [ _108 ])
        (sign_extend:DI (reg:SI 193 [ _107 ]))) "CALRCH.f":111 149 {*extendsidi2_rex64}
     (nil))
(insn 319 318 320 30 (parallel [
            (set (reg:DI 195 [ _109 ])
                (mult:DI (reg:DI 194 [ _108 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":111 349 {*muldi3_1}
     (nil))
(insn 320 319 321 30 (parallel [
            (set (reg:DI 196 [ _110 ])
                (plus:DI (reg:DI 192 [ _106 ])
                    (reg:DI 195 [ _109 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":111 222 {*adddi_1}
     (nil))
(insn 321 320 322 30 (set (reg:SI 780)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [1 ie+0 S4 A32])) "CALRCH.f":111 86 {*movsi_internal}
     (nil))
(insn 322 321 323 30 (set (reg:DI 197 [ _111 ])
        (sign_extend:DI (reg:SI 780))) "CALRCH.f":111 149 {*extendsidi2_rex64}
     (nil))
(insn 323 322 324 30 (parallel [
            (set (reg:DI 198 [ _112 ])
                (plus:DI (reg:DI 196 [ _110 ])
                    (reg:DI 197 [ _111 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":111 222 {*adddi_1}
     (nil))
(insn 324 323 325 30 (parallel [
            (set (reg:DI 199 [ _113 ])
                (plus:DI (reg:DI 198 [ _112 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":111 222 {*adddi_1}
     (nil))
(insn 325 324 326 30 (set (reg/f:DI 781)
        (symbol_ref:DI ("masks_") [flags 0x202]  <var_decl 0x7fe96ef00d80 masks>)) "CALRCH.f":111 85 {*movdi_internal}
     (nil))
(insn 326 325 327 30 (parallel [
            (set (reg:DI 782)
                (plus:DI (reg:DI 199 [ _113 ])
                    (const_int 148155 [0x242bb])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":111 222 {*adddi_1}
     (nil))
(insn 327 326 328 30 (set (reg:SF 200 [ _114 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 782)
                    (const_int 4 [0x4]))
                (reg/f:DI 781)) [2 masks.htm S4 A32])) "CALRCH.f":111 131 {*movsf_internal}
     (nil))
(insn 328 327 329 30 (set (reg:SI 783)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":111 86 {*movsi_internal}
     (nil))
(insn 329 328 330 30 (set (reg:DI 201 [ _115 ])
        (sign_extend:DI (reg:SI 783))) "CALRCH.f":111 149 {*extendsidi2_rex64}
     (nil))
(insn 330 329 331 30 (parallel [
            (set (reg:DI 202 [ _116 ])
                (mult:DI (reg:DI 201 [ _115 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":111 349 {*muldi3_1}
     (nil))
(insn 331 330 332 30 (set (reg:SI 784)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALRCH.f":111 86 {*movsi_internal}
     (nil))
(insn 332 331 333 30 (set (reg:DI 203 [ _117 ])
        (sign_extend:DI (reg:SI 784))) "CALRCH.f":111 149 {*extendsidi2_rex64}
     (nil))
(insn 333 332 334 30 (parallel [
            (set (reg:DI 204 [ _118 ])
                (plus:DI (reg:DI 202 [ _116 ])
                    (reg:DI 203 [ _117 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":111 222 {*adddi_1}
     (nil))
(insn 334 333 335 30 (parallel [
            (set (reg:DI 205 [ _119 ])
                (plus:DI (reg:DI 204 [ _118 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":111 222 {*adddi_1}
     (nil))
(insn 335 334 336 30 (set (reg:SF 206 [ _120 ])
        (mult:SF (reg:SF 190 [ _104 ])
            (reg:SF 200 [ _114 ]))) "CALRCH.f":111 838 {*fop_sf_comm}
     (nil))
(insn 336 335 337 30 (set (reg/f:DI 785)
        (symbol_ref:DI ("egrid1.4217") [flags 0x202]  <var_decl 0x7fe96ef1e120 egrid1>)) "CALRCH.f":111 85 {*movdi_internal}
     (nil))
(insn 337 336 338 30 (set (mem:SF (plus:DI (mult:DI (reg:DI 205 [ _119 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 785)) [2 egrid1 S4 A32])
        (reg:SF 206 [ _120 ])) "CALRCH.f":111 131 {*movsf_internal}
     (nil))
(insn 338 337 340 30 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":108 221 {*addsi_1}
     (nil))
(jump_insn 340 338 341 30 (set (pc)
        (label_ref 339)) "CALRCH.f":108 683 {jump}
     (nil)
 -> 339)
;;  succ:       29 (DFS_BACK)

(barrier 341 340 342)
;; basic block 31, loop depth 2, maybe hot
;;  prev block 30, next block 32, flags: (NEW, REACHABLE, RTL)
;;  pred:       29
(code_label 342 341 343 31 18 (nil) [1 uses])
(note 343 342 344 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 344 343 346 31 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":107 221 {*addsi_1}
     (nil))
(jump_insn 346 344 347 31 (set (pc)
        (label_ref 345)) "CALRCH.f":107 683 {jump}
     (nil)
 -> 345)
;;  succ:       27 (DFS_BACK)

(barrier 347 346 348)
;; basic block 32, loop depth 1, maybe hot
;;  prev block 31, next block 33, flags: (NEW, REACHABLE, RTL)
;;  pred:       27
(code_label 348 347 349 32 17 (nil) [1 uses])
(note 349 348 350 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 350 349 351 32 (set (reg:SI 692 [ _669 ])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7fe96ef06630 parallel>)
                    (const_int 16 [0x10]))) [1 parallel.jsta_m+0 S4 A128])) "CALRCH.f":115 86 {*movsi_internal}
     (nil))
(insn 351 350 352 32 (set (reg:SI 693 [ _670 ])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7fe96ef06630 parallel>)
                    (const_int 12 [0xc]))) [1 parallel.jend+0 S4 A32])) "CALRCH.f":115 86 {*movsi_internal}
     (nil))
(insn 352 351 454 32 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
        (reg:SI 692 [ _669 ])) "CALRCH.f":115 86 {*movsi_internal}
     (nil))
;;  succ:       33 (FALLTHRU)

;; basic block 33, loop depth 2, maybe hot
;;  prev block 32, next block 34, flags: (NEW, REACHABLE, RTL)
;;  pred:       32 (FALLTHRU)
;;              37 (DFS_BACK)
(code_label 454 352 353 33 24 (nil) [1 uses])
(note 353 454 354 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 354 353 355 33 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (reg:SI 693 [ _670 ]))) "CALRCH.f":115 11 {*cmpsi_1}
     (nil))
(insn 355 354 356 33 (set (reg:QI 786)
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALRCH.f":115 678 {*setcc_qi}
     (nil))
(insn 356 355 357 33 (set (reg:SI 694 [ _672 ])
        (zero_extend:SI (reg:QI 786))) "CALRCH.f":115 140 {*zero_extendqisi2}
     (nil))
(insn 357 356 358 33 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 694 [ _672 ])
            (const_int 0 [0]))) "CALRCH.f":115 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 358 357 359 33 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 457)
            (pc))) "CALRCH.f":115 682 {*jcc}
     (nil)
 -> 457)
;;  succ:       38
;;              34 (FALLTHRU)

;; basic block 34, loop depth 2, maybe hot
;;  prev block 33, next block 35, flags: (NEW, REACHABLE, RTL)
;;  pred:       33 (FALLTHRU)
(note 359 358 360 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 360 359 448 34 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
        (const_int 1 [0x1])) "CALRCH.f":116 86 {*movsi_internal}
     (nil))
;;  succ:       35 (FALLTHRU)

;; basic block 35, loop depth 3, maybe hot
;;  prev block 34, next block 36, flags: (NEW, REACHABLE, RTL)
;;  pred:       34 (FALLTHRU)
;;              36 (DFS_BACK)
(code_label 448 360 361 35 23 (nil) [1 uses])
(note 361 448 362 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 362 361 363 35 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
            (const_int 118 [0x76]))) "CALRCH.f":116 11 {*cmpsi_1}
     (nil))
(insn 363 362 364 35 (set (reg:QI 787)
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALRCH.f":116 678 {*setcc_qi}
     (nil))
(insn 364 363 365 35 (set (reg:SI 695 [ _674 ])
        (zero_extend:SI (reg:QI 787))) "CALRCH.f":116 140 {*zero_extendqisi2}
     (nil))
(insn 365 364 366 35 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 695 [ _674 ])
            (const_int 0 [0]))) "CALRCH.f":116 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 366 365 367 35 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 451)
            (pc))) "CALRCH.f":116 682 {*jcc}
     (nil)
 -> 451)
;;  succ:       37
;;              36 (FALLTHRU)

;; basic block 36, loop depth 3, maybe hot
;;  prev block 35, next block 37, flags: (NEW, REACHABLE, RTL)
;;  pred:       35 (FALLTHRU)
(note 367 366 368 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 368 367 369 36 (set (reg:SI 788)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":117 86 {*movsi_internal}
     (nil))
(insn 369 368 370 36 (set (reg:DI 207 [ _121 ])
        (sign_extend:DI (reg:SI 788))) "CALRCH.f":117 149 {*extendsidi2_rex64}
     (nil))
(insn 370 369 371 36 (parallel [
            (set (reg:DI 208 [ _122 ])
                (plus:DI (reg:DI 207 [ _121 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":117 222 {*adddi_1}
     (nil))
(insn 371 370 375 36 (set (reg:SI 209 [ _123 ])
        (mem:SI (plus:DI (mult:DI (reg:DI 208 [ _122 ])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("indx_") [flags 0x2]  <var_decl 0x7fe96ef00630 indx>)) [1 indx.ihe S4 A32])) "CALRCH.f":117 86 {*movsi_internal}
     (nil))
(insn 375 371 376 36 (set (reg:SI 792)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALRCH.f":117 86 {*movsi_internal}
     (nil))
(insn 376 375 377 36 (parallel [
            (set (reg:SI 791)
                (plus:SI (reg:SI 209 [ _123 ])
                    (reg:SI 792)))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":117 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (reg:SI 209 [ _123 ])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32]))
        (nil)))
(insn 377 376 378 36 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [1 ie+0 S4 A32])
        (reg:SI 791)) "CALRCH.f":117 86 {*movsi_internal}
     (nil))
(insn 378 377 379 36 (set (reg:SI 793)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALRCH.f":119 86 {*movsi_internal}
     (nil))
(insn 379 378 380 36 (set (reg:DI 210 [ _124 ])
        (sign_extend:DI (reg:SI 793))) "CALRCH.f":119 149 {*extendsidi2_rex64}
     (nil))
(insn 380 379 381 36 (parallel [
            (set (reg:DI 211 [ _125 ])
                (mult:DI (reg:DI 210 [ _124 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":119 349 {*muldi3_1}
     (nil))
(insn 381 380 382 36 (set (reg:SI 794)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":119 86 {*movsi_internal}
     (nil))
(insn 382 381 383 36 (parallel [
            (set (reg:SI 212 [ _126 ])
                (plus:SI (reg:SI 794)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":119 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 383 382 384 36 (set (reg:DI 213 [ _127 ])
        (sign_extend:DI (reg:SI 212 [ _126 ]))) "CALRCH.f":119 149 {*extendsidi2_rex64}
     (nil))
(insn 384 383 385 36 (parallel [
            (set (reg:DI 214 [ _128 ])
                (mult:DI (reg:DI 213 [ _127 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":119 349 {*muldi3_1}
     (nil))
(insn 385 384 386 36 (parallel [
            (set (reg:DI 215 [ _129 ])
                (plus:DI (reg:DI 211 [ _125 ])
                    (reg:DI 214 [ _128 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":119 222 {*adddi_1}
     (nil))
(insn 386 385 387 36 (set (reg:SI 795)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [1 ie+0 S4 A32])) "CALRCH.f":119 86 {*movsi_internal}
     (nil))
(insn 387 386 388 36 (set (reg:DI 216 [ _130 ])
        (sign_extend:DI (reg:SI 795))) "CALRCH.f":119 149 {*extendsidi2_rex64}
     (nil))
(insn 388 387 389 36 (parallel [
            (set (reg:DI 217 [ _131 ])
                (plus:DI (reg:DI 215 [ _129 ])
                    (reg:DI 216 [ _130 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":119 222 {*adddi_1}
     (nil))
(insn 389 388 390 36 (parallel [
            (set (reg:DI 218 [ _132 ])
                (plus:DI (reg:DI 217 [ _131 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":119 222 {*adddi_1}
     (nil))
(insn 390 389 391 36 (set (reg/f:DI 796)
        (symbol_ref:DI ("thv.4234") [flags 0x202]  <var_decl 0x7fe96ef1e900 thv>)) "CALRCH.f":119 85 {*movdi_internal}
     (nil))
(insn 391 390 392 36 (set (reg:SF 219 [ _133 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 218 [ _132 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 796)) [2 thv S4 A32])) "CALRCH.f":119 131 {*movsf_internal}
     (nil))
(insn 392 391 393 36 (set (reg:SI 797)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALRCH.f":119 86 {*movsi_internal}
     (nil))
(insn 393 392 394 36 (set (reg:DI 220 [ _134 ])
        (sign_extend:DI (reg:SI 797))) "CALRCH.f":119 149 {*extendsidi2_rex64}
     (nil))
(insn 394 393 395 36 (parallel [
            (set (reg:DI 221 [ _135 ])
                (mult:DI (reg:DI 220 [ _134 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":119 349 {*muldi3_1}
     (nil))
(insn 395 394 396 36 (set (reg:SI 798)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":119 86 {*movsi_internal}
     (nil))
(insn 396 395 397 36 (set (reg:DI 222 [ _136 ])
        (sign_extend:DI (reg:SI 798))) "CALRCH.f":119 149 {*extendsidi2_rex64}
     (nil))
(insn 397 396 398 36 (parallel [
            (set (reg:DI 223 [ _137 ])
                (mult:DI (reg:DI 222 [ _136 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":119 349 {*muldi3_1}
     (nil))
(insn 398 397 399 36 (parallel [
            (set (reg:DI 224 [ _138 ])
                (plus:DI (reg:DI 221 [ _135 ])
                    (reg:DI 223 [ _137 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":119 222 {*adddi_1}
     (nil))
(insn 399 398 400 36 (set (reg:SI 799)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALRCH.f":119 86 {*movsi_internal}
     (nil))
(insn 400 399 401 36 (set (reg:DI 225 [ _139 ])
        (sign_extend:DI (reg:SI 799))) "CALRCH.f":119 149 {*extendsidi2_rex64}
     (nil))
(insn 401 400 402 36 (parallel [
            (set (reg:DI 226 [ _140 ])
                (plus:DI (reg:DI 224 [ _138 ])
                    (reg:DI 225 [ _139 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":119 222 {*adddi_1}
     (nil))
(insn 402 401 403 36 (parallel [
            (set (reg:DI 227 [ _141 ])
                (plus:DI (reg:DI 226 [ _140 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":119 222 {*adddi_1}
     (nil))
(insn 403 402 404 36 (set (reg/f:DI 800)
        (symbol_ref:DI ("thv.4234") [flags 0x202]  <var_decl 0x7fe96ef1e900 thv>)) "CALRCH.f":119 85 {*movdi_internal}
     (nil))
(insn 404 403 405 36 (set (reg:SF 228 [ _142 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 227 [ _141 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 800)) [2 thv S4 A32])) "CALRCH.f":119 131 {*movsf_internal}
     (nil))
(insn 405 404 406 36 (set (reg:SF 229 [ _143 ])
        (minus:SF (reg:SF 219 [ _133 ])
            (reg:SF 228 [ _142 ]))) "CALRCH.f":119 841 {*fop_sf_1}
     (nil))
(insn 406 405 407 36 (set (reg:SF 230 [ _144 ])
        (reg:SF 229 [ _143 ])) "CALRCH.f":119 131 {*movsf_internal}
     (nil))
(insn 407 406 408 36 (set (reg:SI 801)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALRCH.f":119 86 {*movsi_internal}
     (nil))
(insn 408 407 409 36 (set (reg:DI 231 [ _145 ])
        (sign_extend:DI (reg:SI 801))) "CALRCH.f":119 149 {*extendsidi2_rex64}
     (nil))
(insn 409 408 410 36 (parallel [
            (set (reg:DI 232 [ _146 ])
                (mult:DI (reg:DI 231 [ _145 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":119 349 {*muldi3_1}
     (nil))
(insn 410 409 411 36 (set (reg:SI 802)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":119 86 {*movsi_internal}
     (nil))
(insn 411 410 412 36 (parallel [
            (set (reg:SI 233 [ _147 ])
                (plus:SI (reg:SI 802)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":119 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 412 411 413 36 (set (reg:DI 234 [ _148 ])
        (sign_extend:DI (reg:SI 233 [ _147 ]))) "CALRCH.f":119 149 {*extendsidi2_rex64}
     (nil))
(insn 413 412 414 36 (parallel [
            (set (reg:DI 235 [ _149 ])
                (mult:DI (reg:DI 234 [ _148 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":119 349 {*muldi3_1}
     (nil))
(insn 414 413 415 36 (parallel [
            (set (reg:DI 236 [ _150 ])
                (plus:DI (reg:DI 232 [ _146 ])
                    (reg:DI 235 [ _149 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":119 222 {*adddi_1}
     (nil))
(insn 415 414 416 36 (set (reg:SI 803)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [1 ie+0 S4 A32])) "CALRCH.f":119 86 {*movsi_internal}
     (nil))
(insn 416 415 417 36 (set (reg:DI 237 [ _151 ])
        (sign_extend:DI (reg:SI 803))) "CALRCH.f":119 149 {*extendsidi2_rex64}
     (nil))
(insn 417 416 418 36 (parallel [
            (set (reg:DI 238 [ _152 ])
                (plus:DI (reg:DI 236 [ _150 ])
                    (reg:DI 237 [ _151 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":119 222 {*adddi_1}
     (nil))
(insn 418 417 419 36 (parallel [
            (set (reg:DI 239 [ _153 ])
                (plus:DI (reg:DI 238 [ _152 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":119 222 {*adddi_1}
     (nil))
(insn 419 418 420 36 (set (reg/f:DI 804)
        (symbol_ref:DI ("masks_") [flags 0x202]  <var_decl 0x7fe96ef00d80 masks>)) "CALRCH.f":119 85 {*movdi_internal}
     (nil))
(insn 420 419 421 36 (parallel [
            (set (reg:DI 805)
                (plus:DI (reg:DI 239 [ _153 ])
                    (const_int 148155 [0x242bb])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":119 222 {*adddi_1}
     (nil))
(insn 421 420 422 36 (set (reg:SF 240 [ _154 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 805)
                    (const_int 4 [0x4]))
                (reg/f:DI 804)) [2 masks.htm S4 A32])) "CALRCH.f":119 131 {*movsf_internal}
     (nil))
(insn 422 421 423 36 (set (reg:SF 241 [ _155 ])
        (mult:SF (reg:SF 230 [ _144 ])
            (reg:SF 240 [ _154 ]))) "CALRCH.f":119 838 {*fop_sf_comm}
     (nil))
(insn 423 422 424 36 (set (reg:SI 806)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALRCH.f":119 86 {*movsi_internal}
     (nil))
(insn 424 423 425 36 (set (reg:DI 242 [ _156 ])
        (sign_extend:DI (reg:SI 806))) "CALRCH.f":119 149 {*extendsidi2_rex64}
     (nil))
(insn 425 424 426 36 (parallel [
            (set (reg:DI 243 [ _157 ])
                (mult:DI (reg:DI 242 [ _156 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":119 349 {*muldi3_1}
     (nil))
(insn 426 425 427 36 (set (reg:SI 807)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":119 86 {*movsi_internal}
     (nil))
(insn 427 426 428 36 (set (reg:DI 244 [ _158 ])
        (sign_extend:DI (reg:SI 807))) "CALRCH.f":119 149 {*extendsidi2_rex64}
     (nil))
(insn 428 427 429 36 (parallel [
            (set (reg:DI 245 [ _159 ])
                (mult:DI (reg:DI 244 [ _158 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":119 349 {*muldi3_1}
     (nil))
(insn 429 428 430 36 (parallel [
            (set (reg:DI 246 [ _160 ])
                (plus:DI (reg:DI 243 [ _157 ])
                    (reg:DI 245 [ _159 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":119 222 {*adddi_1}
     (nil))
(insn 430 429 431 36 (set (reg:SI 808)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALRCH.f":119 86 {*movsi_internal}
     (nil))
(insn 431 430 432 36 (set (reg:DI 247 [ _161 ])
        (sign_extend:DI (reg:SI 808))) "CALRCH.f":119 149 {*extendsidi2_rex64}
     (nil))
(insn 432 431 433 36 (parallel [
            (set (reg:DI 248 [ _162 ])
                (plus:DI (reg:DI 246 [ _160 ])
                    (reg:DI 247 [ _161 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":119 222 {*adddi_1}
     (nil))
(insn 433 432 434 36 (parallel [
            (set (reg:DI 249 [ _163 ])
                (plus:DI (reg:DI 248 [ _162 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":119 222 {*adddi_1}
     (nil))
(insn 434 433 435 36 (set (reg/f:DI 809)
        (symbol_ref:DI ("masks_") [flags 0x202]  <var_decl 0x7fe96ef00d80 masks>)) "CALRCH.f":119 85 {*movdi_internal}
     (nil))
(insn 435 434 436 36 (parallel [
            (set (reg:DI 810)
                (plus:DI (reg:DI 249 [ _163 ])
                    (const_int 148155 [0x242bb])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":119 222 {*adddi_1}
     (nil))
(insn 436 435 437 36 (set (reg:SF 250 [ _164 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 810)
                    (const_int 4 [0x4]))
                (reg/f:DI 809)) [2 masks.htm S4 A32])) "CALRCH.f":119 131 {*movsf_internal}
     (nil))
(insn 437 436 438 36 (set (reg:SI 811)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":119 86 {*movsi_internal}
     (nil))
(insn 438 437 439 36 (set (reg:DI 251 [ _165 ])
        (sign_extend:DI (reg:SI 811))) "CALRCH.f":119 149 {*extendsidi2_rex64}
     (nil))
(insn 439 438 440 36 (parallel [
            (set (reg:DI 252 [ _166 ])
                (mult:DI (reg:DI 251 [ _165 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":119 349 {*muldi3_1}
     (nil))
(insn 440 439 441 36 (set (reg:SI 812)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALRCH.f":119 86 {*movsi_internal}
     (nil))
(insn 441 440 442 36 (set (reg:DI 253 [ _167 ])
        (sign_extend:DI (reg:SI 812))) "CALRCH.f":119 149 {*extendsidi2_rex64}
     (nil))
(insn 442 441 443 36 (parallel [
            (set (reg:DI 254 [ _168 ])
                (plus:DI (reg:DI 252 [ _166 ])
                    (reg:DI 253 [ _167 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":119 222 {*adddi_1}
     (nil))
(insn 443 442 444 36 (parallel [
            (set (reg:DI 255 [ _169 ])
                (plus:DI (reg:DI 254 [ _168 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":119 222 {*adddi_1}
     (nil))
(insn 444 443 445 36 (set (reg:SF 256 [ _170 ])
        (mult:SF (reg:SF 241 [ _155 ])
            (reg:SF 250 [ _164 ]))) "CALRCH.f":119 838 {*fop_sf_comm}
     (nil))
(insn 445 444 446 36 (set (reg/f:DI 813)
        (symbol_ref:DI ("egrid2.4219") [flags 0x202]  <var_decl 0x7fe96ef1e1b0 egrid2>)) "CALRCH.f":119 85 {*movdi_internal}
     (nil))
(insn 446 445 447 36 (set (mem:SF (plus:DI (mult:DI (reg:DI 255 [ _169 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 813)) [2 egrid2 S4 A32])
        (reg:SF 256 [ _170 ])) "CALRCH.f":119 131 {*movsf_internal}
     (nil))
(insn 447 446 449 36 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":116 221 {*addsi_1}
     (nil))
(jump_insn 449 447 450 36 (set (pc)
        (label_ref 448)) "CALRCH.f":116 683 {jump}
     (nil)
 -> 448)
;;  succ:       35 (DFS_BACK)

(barrier 450 449 451)
;; basic block 37, loop depth 2, maybe hot
;;  prev block 36, next block 38, flags: (NEW, REACHABLE, RTL)
;;  pred:       35
(code_label 451 450 452 37 22 (nil) [1 uses])
(note 452 451 453 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 453 452 455 37 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":115 221 {*addsi_1}
     (nil))
(jump_insn 455 453 456 37 (set (pc)
        (label_ref 454)) "CALRCH.f":115 683 {jump}
     (nil)
 -> 454)
;;  succ:       33 (DFS_BACK)

(barrier 456 455 457)
;; basic block 38, loop depth 1, maybe hot
;;  prev block 37, next block 39, flags: (NEW, REACHABLE, RTL)
;;  pred:       33
(code_label 457 456 458 38 21 (nil) [1 uses])
(note 458 457 459 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 459 458 460 38 (set (reg:DI 5 di)
        (symbol_ref:DI ("egrid1.4217") [flags 0x202]  <var_decl 0x7fe96ef1e120 egrid1>)) "CALRCH.f":123 85 {*movdi_internal}
     (nil))
(insn 460 459 461 38 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CALRCH.f":123 88 {*movqi_internal}
     (nil))
(call_insn 461 460 462 38 (call (mem:QI (symbol_ref:DI ("exch_") [flags 0x41]  <function_decl 0x7fe96eeef600 exch>) [0 exch S1 A8])
        (const_int 0 [0])) "CALRCH.f":123 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 462 461 463 38 (set (reg:DI 5 di)
        (symbol_ref:DI ("egrid2.4219") [flags 0x202]  <var_decl 0x7fe96ef1e1b0 egrid2>)) "CALRCH.f":124 85 {*movdi_internal}
     (nil))
(insn 463 462 464 38 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CALRCH.f":124 88 {*movqi_internal}
     (nil))
(call_insn 464 463 465 38 (call (mem:QI (symbol_ref:DI ("exch_") [flags 0x41]  <function_decl 0x7fe96eeef600 exch>) [0 exch S1 A8])
        (const_int 0 [0])) "CALRCH.f":124 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 465 464 466 38 (set (reg:SI 696 [ _681 ])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7fe96ef06630 parallel>)
                    (const_int 24 [0x18]))) [1 parallel.jsta_m2+0 S4 A64])) "CALRCH.f":126 86 {*movsi_internal}
     (nil))
(insn 466 465 467 38 (set (reg:SI 697 [ _682 ])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7fe96ef06630 parallel>)
                    (const_int 28 [0x1c]))) [1 parallel.jend_m2+0 S4 A32])) "CALRCH.f":126 86 {*movsi_internal}
     (nil))
(insn 467 466 582 38 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
        (reg:SI 696 [ _681 ])) "CALRCH.f":126 86 {*movsi_internal}
     (nil))
;;  succ:       39 (FALLTHRU)

;; basic block 39, loop depth 2, maybe hot
;;  prev block 38, next block 40, flags: (NEW, REACHABLE, RTL)
;;  pred:       38 (FALLTHRU)
;;              43 (DFS_BACK)
(code_label 582 467 468 39 28 (nil) [1 uses])
(note 468 582 469 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 469 468 470 39 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (reg:SI 697 [ _682 ]))) "CALRCH.f":126 11 {*cmpsi_1}
     (nil))
(insn 470 469 471 39 (set (reg:QI 814)
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALRCH.f":126 678 {*setcc_qi}
     (nil))
(insn 471 470 472 39 (set (reg:SI 698 [ _684 ])
        (zero_extend:SI (reg:QI 814))) "CALRCH.f":126 140 {*zero_extendqisi2}
     (nil))
(insn 472 471 473 39 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 698 [ _684 ])
            (const_int 0 [0]))) "CALRCH.f":126 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 473 472 474 39 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 585)
            (pc))) "CALRCH.f":126 682 {*jcc}
     (nil)
 -> 585)
;;  succ:       44
;;              40 (FALLTHRU)

;; basic block 40, loop depth 2, maybe hot
;;  prev block 39, next block 41, flags: (NEW, REACHABLE, RTL)
;;  pred:       39 (FALLTHRU)
(note 474 473 475 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 475 474 576 40 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
        (const_int 2 [0x2])) "CALRCH.f":127 86 {*movsi_internal}
     (nil))
;;  succ:       41 (FALLTHRU)

;; basic block 41, loop depth 3, maybe hot
;;  prev block 40, next block 42, flags: (NEW, REACHABLE, RTL)
;;  pred:       40 (FALLTHRU)
;;              42 (DFS_BACK)
(code_label 576 475 476 41 27 (nil) [1 uses])
(note 476 576 477 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 477 476 478 41 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
            (const_int 118 [0x76]))) "CALRCH.f":127 11 {*cmpsi_1}
     (nil))
(insn 478 477 479 41 (set (reg:QI 815)
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALRCH.f":127 678 {*setcc_qi}
     (nil))
(insn 479 478 480 41 (set (reg:SI 699 [ _686 ])
        (zero_extend:SI (reg:QI 815))) "CALRCH.f":127 140 {*zero_extendqisi2}
     (nil))
(insn 480 479 481 41 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 699 [ _686 ])
            (const_int 0 [0]))) "CALRCH.f":127 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 481 480 482 41 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 579)
            (pc))) "CALRCH.f":127 682 {*jcc}
     (nil)
 -> 579)
;;  succ:       43
;;              42 (FALLTHRU)

;; basic block 42, loop depth 3, maybe hot
;;  prev block 41, next block 43, flags: (NEW, REACHABLE, RTL)
;;  pred:       41 (FALLTHRU)
(note 482 481 483 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 483 482 484 42 (set (reg:SI 816)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":128 86 {*movsi_internal}
     (nil))
(insn 484 483 485 42 (set (reg:DI 257 [ _171 ])
        (sign_extend:DI (reg:SI 816))) "CALRCH.f":128 149 {*extendsidi2_rex64}
     (nil))
(insn 485 484 486 42 (parallel [
            (set (reg:DI 258 [ _172 ])
                (plus:DI (reg:DI 257 [ _171 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":128 222 {*adddi_1}
     (nil))
(insn 486 485 487 42 (parallel [
            (set (reg:DI 817)
                (plus:DI (reg:DI 258 [ _172 ])
                    (const_int 249 [0xf9])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":128 222 {*adddi_1}
     (nil))
(insn 487 486 491 42 (set (reg:SI 259 [ _173 ])
        (mem:SI (plus:DI (mult:DI (reg:DI 817)
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("indx_") [flags 0x2]  <var_decl 0x7fe96ef00630 indx>)) [1 indx.ihw S4 A32])) "CALRCH.f":128 86 {*movsi_internal}
     (nil))
(insn 491 487 492 42 (set (reg:SI 821)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALRCH.f":128 86 {*movsi_internal}
     (nil))
(insn 492 491 493 42 (parallel [
            (set (reg:SI 820)
                (plus:SI (reg:SI 259 [ _173 ])
                    (reg:SI 821)))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":128 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (reg:SI 259 [ _173 ])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32]))
        (nil)))
(insn 493 492 494 42 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [1 iw+0 S4 A32])
        (reg:SI 820)) "CALRCH.f":128 86 {*movsi_internal}
     (nil))
(insn 494 493 495 42 (set (reg:SI 822)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALRCH.f":131 86 {*movsi_internal}
     (nil))
(insn 495 494 496 42 (set (reg:DI 260 [ _174 ])
        (sign_extend:DI (reg:SI 822))) "CALRCH.f":131 149 {*extendsidi2_rex64}
     (nil))
(insn 496 495 497 42 (parallel [
            (set (reg:DI 261 [ _175 ])
                (mult:DI (reg:DI 260 [ _174 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":131 349 {*muldi3_1}
     (nil))
(insn 497 496 498 42 (set (reg:SI 823)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":131 86 {*movsi_internal}
     (nil))
(insn 498 497 499 42 (set (reg:DI 262 [ _176 ])
        (sign_extend:DI (reg:SI 823))) "CALRCH.f":131 149 {*extendsidi2_rex64}
     (nil))
(insn 499 498 500 42 (parallel [
            (set (reg:DI 263 [ _177 ])
                (mult:DI (reg:DI 262 [ _176 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":131 349 {*muldi3_1}
     (nil))
(insn 500 499 501 42 (parallel [
            (set (reg:DI 264 [ _178 ])
                (plus:DI (reg:DI 261 [ _175 ])
                    (reg:DI 263 [ _177 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":131 222 {*adddi_1}
     (nil))
(insn 501 500 502 42 (set (reg:SI 824)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALRCH.f":131 86 {*movsi_internal}
     (nil))
(insn 502 501 503 42 (set (reg:DI 265 [ _179 ])
        (sign_extend:DI (reg:SI 824))) "CALRCH.f":131 149 {*extendsidi2_rex64}
     (nil))
(insn 503 502 504 42 (parallel [
            (set (reg:DI 266 [ _180 ])
                (plus:DI (reg:DI 264 [ _178 ])
                    (reg:DI 265 [ _179 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":131 222 {*adddi_1}
     (nil))
(insn 504 503 505 42 (parallel [
            (set (reg:DI 267 [ _181 ])
                (plus:DI (reg:DI 266 [ _180 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":131 222 {*adddi_1}
     (nil))
(insn 505 504 506 42 (set (reg/f:DI 825)
        (symbol_ref:DI ("thv.4234") [flags 0x202]  <var_decl 0x7fe96ef1e900 thv>)) "CALRCH.f":131 85 {*movdi_internal}
     (nil))
(insn 506 505 507 42 (set (reg:SF 268 [ _182 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 267 [ _181 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 825)) [2 thv S4 A32])) "CALRCH.f":131 131 {*movsf_internal}
     (nil))
(insn 507 506 508 42 (set (reg:SI 826)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":131 86 {*movsi_internal}
     (nil))
(insn 508 507 509 42 (set (reg:DI 269 [ _183 ])
        (sign_extend:DI (reg:SI 826))) "CALRCH.f":131 149 {*extendsidi2_rex64}
     (nil))
(insn 509 508 510 42 (parallel [
            (set (reg:DI 270 [ _184 ])
                (mult:DI (reg:DI 269 [ _183 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":131 349 {*muldi3_1}
     (nil))
(insn 510 509 511 42 (set (reg:SI 827)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALRCH.f":131 86 {*movsi_internal}
     (nil))
(insn 511 510 512 42 (set (reg:DI 271 [ _185 ])
        (sign_extend:DI (reg:SI 827))) "CALRCH.f":131 149 {*extendsidi2_rex64}
     (nil))
(insn 512 511 513 42 (parallel [
            (set (reg:DI 272 [ _186 ])
                (plus:DI (reg:DI 270 [ _184 ])
                    (reg:DI 271 [ _185 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":131 222 {*adddi_1}
     (nil))
(insn 513 512 514 42 (parallel [
            (set (reg:DI 273 [ _187 ])
                (plus:DI (reg:DI 272 [ _186 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":131 222 {*adddi_1}
     (nil))
(insn 514 513 515 42 (set (reg/f:DI 828)
        (symbol_ref:DI ("egrid1.4217") [flags 0x202]  <var_decl 0x7fe96ef1e120 egrid1>)) "CALRCH.f":131 85 {*movdi_internal}
     (nil))
(insn 515 514 516 42 (set (reg:SF 274 [ _188 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 273 [ _187 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 828)) [2 egrid1 S4 A32])) "CALRCH.f":131 131 {*movsf_internal}
     (nil))
(insn 516 515 517 42 (set (reg:SI 829)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":131 86 {*movsi_internal}
     (nil))
(insn 517 516 518 42 (parallel [
            (set (reg:SI 275 [ _189 ])
                (plus:SI (reg:SI 829)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":131 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 518 517 519 42 (set (reg:DI 276 [ _190 ])
        (sign_extend:DI (reg:SI 275 [ _189 ]))) "CALRCH.f":131 149 {*extendsidi2_rex64}
     (nil))
(insn 519 518 520 42 (parallel [
            (set (reg:DI 277 [ _191 ])
                (mult:DI (reg:DI 276 [ _190 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":131 349 {*muldi3_1}
     (nil))
(insn 520 519 521 42 (set (reg:SI 830)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [1 iw+0 S4 A32])) "CALRCH.f":131 86 {*movsi_internal}
     (nil))
(insn 521 520 522 42 (set (reg:DI 278 [ _192 ])
        (sign_extend:DI (reg:SI 830))) "CALRCH.f":131 149 {*extendsidi2_rex64}
     (nil))
(insn 522 521 523 42 (parallel [
            (set (reg:DI 279 [ _193 ])
                (plus:DI (reg:DI 277 [ _191 ])
                    (reg:DI 278 [ _192 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":131 222 {*adddi_1}
     (nil))
(insn 523 522 524 42 (parallel [
            (set (reg:DI 280 [ _194 ])
                (plus:DI (reg:DI 279 [ _193 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":131 222 {*adddi_1}
     (nil))
(insn 524 523 525 42 (set (reg/f:DI 831)
        (symbol_ref:DI ("egrid1.4217") [flags 0x202]  <var_decl 0x7fe96ef1e120 egrid1>)) "CALRCH.f":131 85 {*movdi_internal}
     (nil))
(insn 525 524 526 42 (set (reg:SF 281 [ _195 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 280 [ _194 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 831)) [2 egrid1 S4 A32])) "CALRCH.f":131 131 {*movsf_internal}
     (nil))
(insn 526 525 527 42 (set (reg:SF 282 [ _196 ])
        (minus:SF (reg:SF 274 [ _188 ])
            (reg:SF 281 [ _195 ]))) "CALRCH.f":131 841 {*fop_sf_1}
     (nil))
(insn 527 526 528 42 (set (reg:SI 832)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":131 86 {*movsi_internal}
     (nil))
(insn 528 527 529 42 (set (reg:DI 283 [ _197 ])
        (sign_extend:DI (reg:SI 832))) "CALRCH.f":131 149 {*extendsidi2_rex64}
     (nil))
(insn 529 528 530 42 (parallel [
            (set (reg:DI 284 [ _198 ])
                (mult:DI (reg:DI 283 [ _197 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":131 349 {*muldi3_1}
     (nil))
(insn 530 529 531 42 (set (reg:SI 833)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALRCH.f":131 86 {*movsi_internal}
     (nil))
(insn 531 530 532 42 (set (reg:DI 285 [ _199 ])
        (sign_extend:DI (reg:SI 833))) "CALRCH.f":131 149 {*extendsidi2_rex64}
     (nil))
(insn 532 531 533 42 (parallel [
            (set (reg:DI 286 [ _200 ])
                (plus:DI (reg:DI 284 [ _198 ])
                    (reg:DI 285 [ _199 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":131 222 {*adddi_1}
     (nil))
(insn 533 532 534 42 (parallel [
            (set (reg:DI 287 [ _201 ])
                (plus:DI (reg:DI 286 [ _200 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":131 222 {*adddi_1}
     (nil))
(insn 534 533 535 42 (set (reg/f:DI 834)
        (symbol_ref:DI ("egrid2.4219") [flags 0x202]  <var_decl 0x7fe96ef1e1b0 egrid2>)) "CALRCH.f":131 85 {*movdi_internal}
     (nil))
(insn 535 534 536 42 (set (reg:SF 288 [ _202 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 287 [ _201 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 834)) [2 egrid2 S4 A32])) "CALRCH.f":131 131 {*movsf_internal}
     (nil))
(insn 536 535 537 42 (set (reg:SF 289 [ _203 ])
        (plus:SF (reg:SF 282 [ _196 ])
            (reg:SF 288 [ _202 ]))) "CALRCH.f":131 838 {*fop_sf_comm}
     (nil))
(insn 537 536 538 42 (set (reg:SI 835)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":131 86 {*movsi_internal}
     (nil))
(insn 538 537 539 42 (parallel [
            (set (reg:SI 290 [ _204 ])
                (plus:SI (reg:SI 835)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":131 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 539 538 540 42 (set (reg:DI 291 [ _205 ])
        (sign_extend:DI (reg:SI 290 [ _204 ]))) "CALRCH.f":131 149 {*extendsidi2_rex64}
     (nil))
(insn 540 539 541 42 (parallel [
            (set (reg:DI 292 [ _206 ])
                (mult:DI (reg:DI 291 [ _205 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":131 349 {*muldi3_1}
     (nil))
(insn 541 540 542 42 (set (reg:SI 836)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [1 iw+0 S4 A32])) "CALRCH.f":131 86 {*movsi_internal}
     (nil))
(insn 542 541 543 42 (set (reg:DI 293 [ _207 ])
        (sign_extend:DI (reg:SI 836))) "CALRCH.f":131 149 {*extendsidi2_rex64}
     (nil))
(insn 543 542 544 42 (parallel [
            (set (reg:DI 294 [ _208 ])
                (plus:DI (reg:DI 292 [ _206 ])
                    (reg:DI 293 [ _207 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":131 222 {*adddi_1}
     (nil))
(insn 544 543 545 42 (parallel [
            (set (reg:DI 295 [ _209 ])
                (plus:DI (reg:DI 294 [ _208 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":131 222 {*adddi_1}
     (nil))
(insn 545 544 546 42 (set (reg/f:DI 837)
        (symbol_ref:DI ("egrid2.4219") [flags 0x202]  <var_decl 0x7fe96ef1e1b0 egrid2>)) "CALRCH.f":131 85 {*movdi_internal}
     (nil))
(insn 546 545 547 42 (set (reg:SF 296 [ _210 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 295 [ _209 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 837)) [2 egrid2 S4 A32])) "CALRCH.f":131 131 {*movsf_internal}
     (nil))
(insn 547 546 548 42 (set (reg:SF 297 [ _211 ])
        (minus:SF (reg:SF 289 [ _203 ])
            (reg:SF 296 [ _210 ]))) "CALRCH.f":131 841 {*fop_sf_1}
     (nil))
(insn 548 547 549 42 (set (reg:SF 298 [ _212 ])
        (reg:SF 297 [ _211 ])) "CALRCH.f":131 131 {*movsf_internal}
     (nil))
(insn 549 548 550 42 (set (reg:SF 838)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [0  S4 A32])) "CALRCH.f":131 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.25e-1 [0x0.8p-2])
        (nil)))
(insn 550 549 551 42 (set (reg:SF 299 [ _213 ])
        (mult:SF (reg:SF 298 [ _212 ])
            (reg:SF 838))) "CALRCH.f":131 838 {*fop_sf_comm}
     (nil))
(insn 551 550 552 42 (set (reg:SI 839)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":131 86 {*movsi_internal}
     (nil))
(insn 552 551 553 42 (set (reg:DI 300 [ _214 ])
        (sign_extend:DI (reg:SI 839))) "CALRCH.f":131 149 {*extendsidi2_rex64}
     (nil))
(insn 553 552 554 42 (parallel [
            (set (reg:DI 301 [ _215 ])
                (mult:DI (reg:DI 300 [ _214 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":131 349 {*muldi3_1}
     (nil))
(insn 554 553 555 42 (set (reg:SI 840)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALRCH.f":131 86 {*movsi_internal}
     (nil))
(insn 555 554 556 42 (set (reg:DI 302 [ _216 ])
        (sign_extend:DI (reg:SI 840))) "CALRCH.f":131 149 {*extendsidi2_rex64}
     (nil))
(insn 556 555 557 42 (parallel [
            (set (reg:DI 303 [ _217 ])
                (plus:DI (reg:DI 301 [ _215 ])
                    (reg:DI 302 [ _216 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":131 222 {*adddi_1}
     (nil))
(insn 557 556 558 42 (parallel [
            (set (reg:DI 304 [ _218 ])
                (plus:DI (reg:DI 303 [ _217 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":131 222 {*adddi_1}
     (nil))
(insn 558 557 559 42 (set (reg/f:DI 841)
        (symbol_ref:DI ("masks_") [flags 0x202]  <var_decl 0x7fe96ef00d80 masks>)) "CALRCH.f":131 85 {*movdi_internal}
     (nil))
(insn 559 558 560 42 (set (reg:SF 305 [ _219 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 304 [ _218 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 841)) [2 masks.hbm2 S4 A32])) "CALRCH.f":131 131 {*movsf_internal}
     (nil))
(insn 560 559 561 42 (set (reg:SF 306 [ _220 ])
        (mult:SF (reg:SF 299 [ _213 ])
            (reg:SF 305 [ _219 ]))) "CALRCH.f":131 838 {*fop_sf_comm}
     (nil))
(insn 561 560 562 42 (set (reg:SI 842)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALRCH.f":131 86 {*movsi_internal}
     (nil))
(insn 562 561 563 42 (set (reg:DI 307 [ _221 ])
        (sign_extend:DI (reg:SI 842))) "CALRCH.f":131 149 {*extendsidi2_rex64}
     (nil))
(insn 563 562 564 42 (parallel [
            (set (reg:DI 308 [ _222 ])
                (mult:DI (reg:DI 307 [ _221 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":131 349 {*muldi3_1}
     (nil))
(insn 564 563 565 42 (set (reg:SI 843)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":131 86 {*movsi_internal}
     (nil))
(insn 565 564 566 42 (set (reg:DI 309 [ _223 ])
        (sign_extend:DI (reg:SI 843))) "CALRCH.f":131 149 {*extendsidi2_rex64}
     (nil))
(insn 566 565 567 42 (parallel [
            (set (reg:DI 310 [ _224 ])
                (mult:DI (reg:DI 309 [ _223 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":131 349 {*muldi3_1}
     (nil))
(insn 567 566 568 42 (parallel [
            (set (reg:DI 311 [ _225 ])
                (plus:DI (reg:DI 308 [ _222 ])
                    (reg:DI 310 [ _224 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":131 222 {*adddi_1}
     (nil))
(insn 568 567 569 42 (set (reg:SI 844)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALRCH.f":131 86 {*movsi_internal}
     (nil))
(insn 569 568 570 42 (set (reg:DI 312 [ _226 ])
        (sign_extend:DI (reg:SI 844))) "CALRCH.f":131 149 {*extendsidi2_rex64}
     (nil))
(insn 570 569 571 42 (parallel [
            (set (reg:DI 313 [ _227 ])
                (plus:DI (reg:DI 311 [ _225 ])
                    (reg:DI 312 [ _226 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":131 222 {*adddi_1}
     (nil))
(insn 571 570 572 42 (parallel [
            (set (reg:DI 314 [ _228 ])
                (plus:DI (reg:DI 313 [ _227 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":131 222 {*adddi_1}
     (nil))
(insn 572 571 573 42 (set (reg:SF 315 [ _229 ])
        (plus:SF (reg:SF 268 [ _182 ])
            (reg:SF 306 [ _220 ]))) "CALRCH.f":131 838 {*fop_sf_comm}
     (nil))
(insn 573 572 574 42 (set (reg/f:DI 845)
        (symbol_ref:DI ("thv.4234") [flags 0x202]  <var_decl 0x7fe96ef1e900 thv>)) "CALRCH.f":131 85 {*movdi_internal}
     (nil))
(insn 574 573 575 42 (set (mem:SF (plus:DI (mult:DI (reg:DI 314 [ _228 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 845)) [2 thv S4 A32])
        (reg:SF 315 [ _229 ])) "CALRCH.f":131 131 {*movsf_internal}
     (nil))
(insn 575 574 577 42 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":127 221 {*addsi_1}
     (nil))
(jump_insn 577 575 578 42 (set (pc)
        (label_ref 576)) "CALRCH.f":127 683 {jump}
     (nil)
 -> 576)
;;  succ:       41 (DFS_BACK)

(barrier 578 577 579)
;; basic block 43, loop depth 2, maybe hot
;;  prev block 42, next block 44, flags: (NEW, REACHABLE, RTL)
;;  pred:       41
(code_label 579 578 580 43 26 (nil) [1 uses])
(note 580 579 581 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 581 580 583 43 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":126 221 {*addsi_1}
     (nil))
(jump_insn 583 581 584 43 (set (pc)
        (label_ref 582)) "CALRCH.f":126 683 {jump}
     (nil)
 -> 582)
;;  succ:       39 (DFS_BACK)

(barrier 584 583 585)
;; basic block 44, loop depth 1, maybe hot
;;  prev block 43, next block 45, flags: (NEW, REACHABLE, RTL)
;;  pred:       39
(code_label 585 584 586 44 25 (nil) [1 uses])
(note 586 585 587 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 587 586 589 44 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":95 221 {*addsi_1}
     (nil))
(jump_insn 589 587 590 44 (set (pc)
        (label_ref 588)) "CALRCH.f":95 683 {jump}
     (nil)
 -> 588)
;;  succ:       19 (DFS_BACK)

(barrier 590 589 591)
;; basic block 45, loop depth 0, maybe hot
;;  prev block 44, next block 46, flags: (NEW, REACHABLE, RTL)
;;  pred:       19
(code_label 591 590 592 45 12 (nil) [1 uses])
(note 592 591 593 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 593 592 1265 45 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
        (const_int 1 [0x1])) "CALRCH.f":145 86 {*movsi_internal}
     (nil))
;;  succ:       46 (FALLTHRU)

;; basic block 46, loop depth 1, maybe hot
;;  prev block 45, next block 47, flags: (NEW, REACHABLE, RTL)
;;  pred:       45 (FALLTHRU)
;;              68 (DFS_BACK)
(code_label 1265 593 594 46 42 (nil) [1 uses])
(note 594 1265 595 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 595 594 596 46 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
            (const_int 37 [0x25]))) "CALRCH.f":145 11 {*cmpsi_1}
     (nil))
(insn 596 595 597 46 (set (reg:QI 846)
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALRCH.f":145 678 {*setcc_qi}
     (nil))
(insn 597 596 598 46 (set (reg:SI 700 [ _693 ])
        (zero_extend:SI (reg:QI 846))) "CALRCH.f":145 140 {*zero_extendqisi2}
     (nil))
(insn 598 597 599 46 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 700 [ _693 ])
            (const_int 0 [0]))) "CALRCH.f":145 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 599 598 600 46 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1268)
            (pc))) "CALRCH.f":145 682 {*jcc}
     (nil)
 -> 1268)
;;  succ:       69
;;              47 (FALLTHRU)

;; basic block 47, loop depth 1, maybe hot
;;  prev block 46, next block 48, flags: (NEW, REACHABLE, RTL)
;;  pred:       46 (FALLTHRU)
(note 600 599 601 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 601 600 602 47 (set (reg:SI 701 [ _694 ])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7fe96ef06630 parallel>)
                    (const_int 24 [0x18]))) [1 parallel.jsta_m2+0 S4 A64])) "CALRCH.f":149 86 {*movsi_internal}
     (nil))
(insn 602 601 603 47 (set (reg:SI 702 [ _695 ])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7fe96ef06630 parallel>)
                    (const_int 28 [0x1c]))) [1 parallel.jend_m2+0 S4 A32])) "CALRCH.f":149 86 {*movsi_internal}
     (nil))
(insn 603 602 1259 47 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
        (reg:SI 701 [ _694 ])) "CALRCH.f":149 86 {*movsi_internal}
     (nil))
;;  succ:       48 (FALLTHRU)

;; basic block 48, loop depth 2, maybe hot
;;  prev block 47, next block 49, flags: (NEW, REACHABLE, RTL)
;;  pred:       47 (FALLTHRU)
;;              67 (DFS_BACK)
(code_label 1259 603 604 48 41 (nil) [1 uses])
(note 604 1259 605 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 605 604 606 48 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (reg:SI 702 [ _695 ]))) "CALRCH.f":149 11 {*cmpsi_1}
     (nil))
(insn 606 605 607 48 (set (reg:QI 847)
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALRCH.f":149 678 {*setcc_qi}
     (nil))
(insn 607 606 608 48 (set (reg:SI 703 [ _697 ])
        (zero_extend:SI (reg:QI 847))) "CALRCH.f":149 140 {*zero_extendqisi2}
     (nil))
(insn 608 607 609 48 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 703 [ _697 ])
            (const_int 0 [0]))) "CALRCH.f":149 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 609 608 610 48 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1262)
            (pc))) "CALRCH.f":149 682 {*jcc}
     (nil)
 -> 1262)
;;  succ:       68
;;              49 (FALLTHRU)

;; basic block 49, loop depth 2, maybe hot
;;  prev block 48, next block 50, flags: (NEW, REACHABLE, RTL)
;;  pred:       48 (FALLTHRU)
(note 610 609 611 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 611 610 1253 49 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
        (const_int 2 [0x2])) "CALRCH.f":150 86 {*movsi_internal}
     (nil))
;;  succ:       50 (FALLTHRU)

;; basic block 50, loop depth 3, maybe hot
;;  prev block 49, next block 51, flags: (NEW, REACHABLE, RTL)
;;  pred:       49 (FALLTHRU)
;;              66 (DFS_BACK)
(code_label 1253 611 612 50 40 (nil) [1 uses])
(note 612 1253 613 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 613 612 614 50 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
            (const_int 118 [0x76]))) "CALRCH.f":150 11 {*cmpsi_1}
     (nil))
(insn 614 613 615 50 (set (reg:QI 848)
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALRCH.f":150 678 {*setcc_qi}
     (nil))
(insn 615 614 616 50 (set (reg:SI 704 [ _699 ])
        (zero_extend:SI (reg:QI 848))) "CALRCH.f":150 140 {*zero_extendqisi2}
     (nil))
(insn 616 615 617 50 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 704 [ _699 ])
            (const_int 0 [0]))) "CALRCH.f":150 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 617 616 618 50 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1256)
            (pc))) "CALRCH.f":150 682 {*jcc}
     (nil)
 -> 1256)
;;  succ:       67
;;              51 (FALLTHRU)

;; basic block 51, loop depth 3, maybe hot
;;  prev block 50, next block 52, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       50 (FALLTHRU)
(note 618 617 619 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 619 618 620 51 (set (reg:SI 849)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":151 86 {*movsi_internal}
     (nil))
(insn 620 619 621 51 (set (reg:DI 316 [ _230 ])
        (sign_extend:DI (reg:SI 849))) "CALRCH.f":151 149 {*extendsidi2_rex64}
     (nil))
(insn 621 620 622 51 (parallel [
            (set (reg:DI 317 [ _231 ])
                (plus:DI (reg:DI 316 [ _230 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":151 222 {*adddi_1}
     (nil))
(insn 622 621 626 51 (set (reg:SI 318 [ _232 ])
        (mem:SI (plus:DI (mult:DI (reg:DI 317 [ _231 ])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("indx_") [flags 0x2]  <var_decl 0x7fe96ef00630 indx>)) [1 indx.ihe S4 A32])) "CALRCH.f":151 86 {*movsi_internal}
     (nil))
(insn 626 622 627 51 (set (reg:SI 853)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALRCH.f":151 86 {*movsi_internal}
     (nil))
(insn 627 626 628 51 (parallel [
            (set (reg:SI 852)
                (plus:SI (reg:SI 318 [ _232 ])
                    (reg:SI 853)))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":151 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (reg:SI 318 [ _232 ])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32]))
        (nil)))
(insn 628 627 629 51 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [1 ie+0 S4 A32])
        (reg:SI 852)) "CALRCH.f":151 86 {*movsi_internal}
     (nil))
(insn 629 628 630 51 (set (reg:SI 854)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":152 86 {*movsi_internal}
     (nil))
(insn 630 629 631 51 (set (reg:DI 319 [ _233 ])
        (sign_extend:DI (reg:SI 854))) "CALRCH.f":152 149 {*extendsidi2_rex64}
     (nil))
(insn 631 630 632 51 (parallel [
            (set (reg:DI 320 [ _234 ])
                (plus:DI (reg:DI 319 [ _233 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":152 222 {*adddi_1}
     (nil))
(insn 632 631 633 51 (parallel [
            (set (reg:DI 855)
                (plus:DI (reg:DI 320 [ _234 ])
                    (const_int 249 [0xf9])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":152 222 {*adddi_1}
     (nil))
(insn 633 632 637 51 (set (reg:SI 321 [ _235 ])
        (mem:SI (plus:DI (mult:DI (reg:DI 855)
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("indx_") [flags 0x2]  <var_decl 0x7fe96ef00630 indx>)) [1 indx.ihw S4 A32])) "CALRCH.f":152 86 {*movsi_internal}
     (nil))
(insn 637 633 638 51 (set (reg:SI 859)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALRCH.f":152 86 {*movsi_internal}
     (nil))
(insn 638 637 639 51 (parallel [
            (set (reg:SI 858)
                (plus:SI (reg:SI 321 [ _235 ])
                    (reg:SI 859)))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":152 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (reg:SI 321 [ _235 ])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32]))
        (nil)))
(insn 639 638 640 51 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [1 iw+0 S4 A32])
        (reg:SI 858)) "CALRCH.f":152 86 {*movsi_internal}
     (nil))
(insn 640 639 641 51 (set (reg:SI 860)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALRCH.f":160 86 {*movsi_internal}
     (nil))
(insn 641 640 642 51 (set (reg:DI 322 [ _236 ])
        (sign_extend:DI (reg:SI 860))) "CALRCH.f":160 149 {*extendsidi2_rex64}
     (nil))
(insn 642 641 643 51 (parallel [
            (set (reg:DI 323 [ _237 ])
                (mult:DI (reg:DI 322 [ _236 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":160 349 {*muldi3_1}
     (nil))
(insn 643 642 644 51 (set (reg:SI 861)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":160 86 {*movsi_internal}
     (nil))
(insn 644 643 645 51 (parallel [
            (set (reg:SI 324 [ _238 ])
                (plus:SI (reg:SI 861)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":160 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 645 644 646 51 (set (reg:DI 325 [ _239 ])
        (sign_extend:DI (reg:SI 324 [ _238 ]))) "CALRCH.f":160 149 {*extendsidi2_rex64}
     (nil))
(insn 646 645 647 51 (parallel [
            (set (reg:DI 326 [ _240 ])
                (mult:DI (reg:DI 325 [ _239 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":160 349 {*muldi3_1}
     (nil))
(insn 647 646 648 51 (parallel [
            (set (reg:DI 327 [ _241 ])
                (plus:DI (reg:DI 323 [ _237 ])
                    (reg:DI 326 [ _240 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":160 222 {*adddi_1}
     (nil))
(insn 648 647 649 51 (set (reg:SI 862)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALRCH.f":160 86 {*movsi_internal}
     (nil))
(insn 649 648 650 51 (set (reg:DI 328 [ _242 ])
        (sign_extend:DI (reg:SI 862))) "CALRCH.f":160 149 {*extendsidi2_rex64}
     (nil))
(insn 650 649 651 51 (parallel [
            (set (reg:DI 329 [ _243 ])
                (plus:DI (reg:DI 327 [ _241 ])
                    (reg:DI 328 [ _242 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":160 222 {*adddi_1}
     (nil))
(insn 651 650 652 51 (parallel [
            (set (reg:DI 330 [ _244 ])
                (plus:DI (reg:DI 329 [ _243 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":160 222 {*adddi_1}
     (nil))
(insn 652 651 653 51 (set (reg/f:DI 863)
        (symbol_ref:DI ("masks_") [flags 0x202]  <var_decl 0x7fe96ef00d80 masks>)) "CALRCH.f":160 85 {*movdi_internal}
     (nil))
(insn 653 652 654 51 (parallel [
            (set (reg:DI 864)
                (plus:DI (reg:DI 330 [ _244 ])
                    (const_int 1274133 [0x137115])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":160 222 {*adddi_1}
     (nil))
(insn 654 653 655 51 (set (reg:SF 331 [ _245 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 864)
                    (const_int 4 [0x4]))
                (reg/f:DI 863)) [2 masks.vtm S4 A32])) "CALRCH.f":160 131 {*movsf_internal}
     (nil))
(insn 655 654 656 51 (set (reg:SI 865)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALRCH.f":160 86 {*movsi_internal}
     (nil))
(insn 656 655 657 51 (set (reg:DI 332 [ _246 ])
        (sign_extend:DI (reg:SI 865))) "CALRCH.f":160 149 {*extendsidi2_rex64}
     (nil))
(insn 657 656 658 51 (parallel [
            (set (reg:DI 333 [ _247 ])
                (mult:DI (reg:DI 332 [ _246 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":160 349 {*muldi3_1}
     (nil))
(insn 658 657 659 51 (set (reg:SI 866)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":160 86 {*movsi_internal}
     (nil))
(insn 659 658 660 51 (set (reg:DI 334 [ _248 ])
        (sign_extend:DI (reg:SI 866))) "CALRCH.f":160 149 {*extendsidi2_rex64}
     (nil))
(insn 660 659 661 51 (parallel [
            (set (reg:DI 335 [ _249 ])
                (mult:DI (reg:DI 334 [ _248 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":160 349 {*muldi3_1}
     (nil))
(insn 661 660 662 51 (parallel [
            (set (reg:DI 336 [ _250 ])
                (plus:DI (reg:DI 333 [ _247 ])
                    (reg:DI 335 [ _249 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":160 222 {*adddi_1}
     (nil))
(insn 662 661 663 51 (set (reg:SI 867)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [1 iw+0 S4 A32])) "CALRCH.f":160 86 {*movsi_internal}
     (nil))
(insn 663 662 664 51 (set (reg:DI 337 [ _251 ])
        (sign_extend:DI (reg:SI 867))) "CALRCH.f":160 149 {*extendsidi2_rex64}
     (nil))
(insn 664 663 665 51 (parallel [
            (set (reg:DI 338 [ _252 ])
                (plus:DI (reg:DI 336 [ _250 ])
                    (reg:DI 337 [ _251 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":160 222 {*adddi_1}
     (nil))
(insn 665 664 666 51 (parallel [
            (set (reg:DI 339 [ _253 ])
                (plus:DI (reg:DI 338 [ _252 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":160 222 {*adddi_1}
     (nil))
(insn 666 665 667 51 (set (reg/f:DI 868)
        (symbol_ref:DI ("masks_") [flags 0x202]  <var_decl 0x7fe96ef00d80 masks>)) "CALRCH.f":160 85 {*movdi_internal}
     (nil))
(insn 667 666 668 51 (parallel [
            (set (reg:DI 869)
                (plus:DI (reg:DI 339 [ _253 ])
                    (const_int 1274133 [0x137115])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":160 222 {*adddi_1}
     (nil))
(insn 668 667 669 51 (set (reg:SF 340 [ _254 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 869)
                    (const_int 4 [0x4]))
                (reg/f:DI 868)) [2 masks.vtm S4 A32])) "CALRCH.f":160 131 {*movsf_internal}
     (nil))
(insn 669 668 670 51 (set (reg:SF 341 [ _255 ])
        (plus:SF (reg:SF 331 [ _245 ])
            (reg:SF 340 [ _254 ]))) "CALRCH.f":160 838 {*fop_sf_comm}
     (nil))
(insn 670 669 671 51 (set (reg:SI 870)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALRCH.f":160 86 {*movsi_internal}
     (nil))
(insn 671 670 672 51 (set (reg:DI 342 [ _256 ])
        (sign_extend:DI (reg:SI 870))) "CALRCH.f":160 149 {*extendsidi2_rex64}
     (nil))
(insn 672 671 673 51 (parallel [
            (set (reg:DI 343 [ _257 ])
                (mult:DI (reg:DI 342 [ _256 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":160 349 {*muldi3_1}
     (nil))
(insn 673 672 674 51 (set (reg:SI 871)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":160 86 {*movsi_internal}
     (nil))
(insn 674 673 675 51 (set (reg:DI 344 [ _258 ])
        (sign_extend:DI (reg:SI 871))) "CALRCH.f":160 149 {*extendsidi2_rex64}
     (nil))
(insn 675 674 676 51 (parallel [
            (set (reg:DI 345 [ _259 ])
                (mult:DI (reg:DI 344 [ _258 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":160 349 {*muldi3_1}
     (nil))
(insn 676 675 677 51 (parallel [
            (set (reg:DI 346 [ _260 ])
                (plus:DI (reg:DI 343 [ _257 ])
                    (reg:DI 345 [ _259 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":160 222 {*adddi_1}
     (nil))
(insn 677 676 678 51 (set (reg:SI 872)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [1 ie+0 S4 A32])) "CALRCH.f":160 86 {*movsi_internal}
     (nil))
(insn 678 677 679 51 (set (reg:DI 347 [ _261 ])
        (sign_extend:DI (reg:SI 872))) "CALRCH.f":160 149 {*extendsidi2_rex64}
     (nil))
(insn 679 678 680 51 (parallel [
            (set (reg:DI 348 [ _262 ])
                (plus:DI (reg:DI 346 [ _260 ])
                    (reg:DI 347 [ _261 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":160 222 {*adddi_1}
     (nil))
(insn 680 679 681 51 (parallel [
            (set (reg:DI 349 [ _263 ])
                (plus:DI (reg:DI 348 [ _262 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":160 222 {*adddi_1}
     (nil))
(insn 681 680 682 51 (set (reg/f:DI 873)
        (symbol_ref:DI ("masks_") [flags 0x202]  <var_decl 0x7fe96ef00d80 masks>)) "CALRCH.f":160 85 {*movdi_internal}
     (nil))
(insn 682 681 683 51 (parallel [
            (set (reg:DI 874)
                (plus:DI (reg:DI 349 [ _263 ])
                    (const_int 1274133 [0x137115])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":160 222 {*adddi_1}
     (nil))
(insn 683 682 684 51 (set (reg:SF 350 [ _264 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 874)
                    (const_int 4 [0x4]))
                (reg/f:DI 873)) [2 masks.vtm S4 A32])) "CALRCH.f":160 131 {*movsf_internal}
     (nil))
(insn 684 683 685 51 (set (reg:SF 351 [ _265 ])
        (plus:SF (reg:SF 341 [ _255 ])
            (reg:SF 350 [ _264 ]))) "CALRCH.f":160 838 {*fop_sf_comm}
     (nil))
(insn 685 684 686 51 (set (reg:SI 875)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALRCH.f":160 86 {*movsi_internal}
     (nil))
(insn 686 685 687 51 (set (reg:DI 352 [ _266 ])
        (sign_extend:DI (reg:SI 875))) "CALRCH.f":160 149 {*extendsidi2_rex64}
     (nil))
(insn 687 686 688 51 (parallel [
            (set (reg:DI 353 [ _267 ])
                (mult:DI (reg:DI 352 [ _266 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":160 349 {*muldi3_1}
     (nil))
(insn 688 687 689 51 (set (reg:SI 876)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":160 86 {*movsi_internal}
     (nil))
(insn 689 688 690 51 (parallel [
            (set (reg:SI 354 [ _268 ])
                (plus:SI (reg:SI 876)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":160 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 690 689 691 51 (set (reg:DI 355 [ _269 ])
        (sign_extend:DI (reg:SI 354 [ _268 ]))) "CALRCH.f":160 149 {*extendsidi2_rex64}
     (nil))
(insn 691 690 692 51 (parallel [
            (set (reg:DI 356 [ _270 ])
                (mult:DI (reg:DI 355 [ _269 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":160 349 {*muldi3_1}
     (nil))
(insn 692 691 693 51 (parallel [
            (set (reg:DI 357 [ _271 ])
                (plus:DI (reg:DI 353 [ _267 ])
                    (reg:DI 356 [ _270 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":160 222 {*adddi_1}
     (nil))
(insn 693 692 694 51 (set (reg:SI 877)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALRCH.f":160 86 {*movsi_internal}
     (nil))
(insn 694 693 695 51 (set (reg:DI 358 [ _272 ])
        (sign_extend:DI (reg:SI 877))) "CALRCH.f":160 149 {*extendsidi2_rex64}
     (nil))
(insn 695 694 696 51 (parallel [
            (set (reg:DI 359 [ _273 ])
                (plus:DI (reg:DI 357 [ _271 ])
                    (reg:DI 358 [ _272 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":160 222 {*adddi_1}
     (nil))
(insn 696 695 697 51 (parallel [
            (set (reg:DI 360 [ _274 ])
                (plus:DI (reg:DI 359 [ _273 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":160 222 {*adddi_1}
     (nil))
(insn 697 696 698 51 (set (reg/f:DI 878)
        (symbol_ref:DI ("masks_") [flags 0x202]  <var_decl 0x7fe96ef00d80 masks>)) "CALRCH.f":160 85 {*movdi_internal}
     (nil))
(insn 698 697 699 51 (parallel [
            (set (reg:DI 879)
                (plus:DI (reg:DI 360 [ _274 ])
                    (const_int 1274133 [0x137115])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":160 222 {*adddi_1}
     (nil))
(insn 699 698 700 51 (set (reg:SF 361 [ _275 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 879)
                    (const_int 4 [0x4]))
                (reg/f:DI 878)) [2 masks.vtm S4 A32])) "CALRCH.f":160 131 {*movsf_internal}
     (nil))
(insn 700 699 701 51 (set (reg:SF 880)
        (plus:SF (reg:SF 351 [ _265 ])
            (reg:SF 361 [ _275 ]))) "CALRCH.f":160 838 {*fop_sf_comm}
     (nil))
(insn 701 700 702 51 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -28 [0xffffffffffffffe4])) [2 wndsl+0 S4 A32])
        (reg:SF 880)) "CALRCH.f":160 131 {*movsf_internal}
     (nil))
(insn 702 701 703 51 (set (reg:SI 881)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALRCH.f":162 86 {*movsi_internal}
     (nil))
(insn 703 702 704 51 (parallel [
            (set (reg:SI 362 [ _276 ])
                (plus:SI (reg:SI 881)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":162 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 704 703 705 51 (set (reg:DI 363 [ _277 ])
        (sign_extend:DI (reg:SI 362 [ _276 ]))) "CALRCH.f":162 149 {*extendsidi2_rex64}
     (nil))
(insn 705 704 706 51 (parallel [
            (set (reg:DI 364 [ _278 ])
                (mult:DI (reg:DI 363 [ _277 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":162 349 {*muldi3_1}
     (nil))
(insn 706 705 707 51 (set (reg:SI 882)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":162 86 {*movsi_internal}
     (nil))
(insn 707 706 708 51 (parallel [
            (set (reg:SI 365 [ _279 ])
                (plus:SI (reg:SI 882)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":162 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 708 707 709 51 (set (reg:DI 366 [ _280 ])
        (sign_extend:DI (reg:SI 365 [ _279 ]))) "CALRCH.f":162 149 {*extendsidi2_rex64}
     (nil))
(insn 709 708 710 51 (parallel [
            (set (reg:DI 367 [ _281 ])
                (mult:DI (reg:DI 366 [ _280 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":162 349 {*muldi3_1}
     (nil))
(insn 710 709 711 51 (parallel [
            (set (reg:DI 368 [ _282 ])
                (plus:DI (reg:DI 364 [ _278 ])
                    (reg:DI 367 [ _281 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":162 222 {*adddi_1}
     (nil))
(insn 711 710 712 51 (set (reg:SI 883)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALRCH.f":162 86 {*movsi_internal}
     (nil))
(insn 712 711 713 51 (set (reg:DI 369 [ _283 ])
        (sign_extend:DI (reg:SI 883))) "CALRCH.f":162 149 {*extendsidi2_rex64}
     (nil))
(insn 713 712 714 51 (parallel [
            (set (reg:DI 370 [ _284 ])
                (plus:DI (reg:DI 368 [ _282 ])
                    (reg:DI 369 [ _283 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":162 222 {*adddi_1}
     (nil))
(insn 714 713 715 51 (parallel [
            (set (reg:DI 371 [ _285 ])
                (plus:DI (reg:DI 370 [ _284 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":162 222 {*adddi_1}
     (nil))
(insn 715 714 716 51 (set (reg/f:DI 884)
        (symbol_ref:DI ("masks_") [flags 0x202]  <var_decl 0x7fe96ef00d80 masks>)) "CALRCH.f":162 85 {*movdi_internal}
     (nil))
(insn 716 715 717 51 (parallel [
            (set (reg:DI 885)
                (plus:DI (reg:DI 371 [ _285 ])
                    (const_int 1274133 [0x137115])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":162 222 {*adddi_1}
     (nil))
(insn 717 716 718 51 (set (reg:SF 372 [ _286 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 885)
                    (const_int 4 [0x4]))
                (reg/f:DI 884)) [2 masks.vtm S4 A32])) "CALRCH.f":162 131 {*movsf_internal}
     (nil))
(insn 718 717 719 51 (set (reg:SI 886)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALRCH.f":162 86 {*movsi_internal}
     (nil))
(insn 719 718 720 51 (parallel [
            (set (reg:SI 373 [ _287 ])
                (plus:SI (reg:SI 886)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":162 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 720 719 721 51 (set (reg:DI 374 [ _288 ])
        (sign_extend:DI (reg:SI 373 [ _287 ]))) "CALRCH.f":162 149 {*extendsidi2_rex64}
     (nil))
(insn 721 720 722 51 (parallel [
            (set (reg:DI 375 [ _289 ])
                (mult:DI (reg:DI 374 [ _288 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":162 349 {*muldi3_1}
     (nil))
(insn 722 721 723 51 (set (reg:SI 887)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":162 86 {*movsi_internal}
     (nil))
(insn 723 722 724 51 (set (reg:DI 376 [ _290 ])
        (sign_extend:DI (reg:SI 887))) "CALRCH.f":162 149 {*extendsidi2_rex64}
     (nil))
(insn 724 723 725 51 (parallel [
            (set (reg:DI 377 [ _291 ])
                (mult:DI (reg:DI 376 [ _290 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":162 349 {*muldi3_1}
     (nil))
(insn 725 724 726 51 (parallel [
            (set (reg:DI 378 [ _292 ])
                (plus:DI (reg:DI 375 [ _289 ])
                    (reg:DI 377 [ _291 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":162 222 {*adddi_1}
     (nil))
(insn 726 725 727 51 (set (reg:SI 888)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [1 iw+0 S4 A32])) "CALRCH.f":162 86 {*movsi_internal}
     (nil))
(insn 727 726 728 51 (set (reg:DI 379 [ _293 ])
        (sign_extend:DI (reg:SI 888))) "CALRCH.f":162 149 {*extendsidi2_rex64}
     (nil))
(insn 728 727 729 51 (parallel [
            (set (reg:DI 380 [ _294 ])
                (plus:DI (reg:DI 378 [ _292 ])
                    (reg:DI 379 [ _293 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":162 222 {*adddi_1}
     (nil))
(insn 729 728 730 51 (parallel [
            (set (reg:DI 381 [ _295 ])
                (plus:DI (reg:DI 380 [ _294 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":162 222 {*adddi_1}
     (nil))
(insn 730 729 731 51 (set (reg/f:DI 889)
        (symbol_ref:DI ("masks_") [flags 0x202]  <var_decl 0x7fe96ef00d80 masks>)) "CALRCH.f":162 85 {*movdi_internal}
     (nil))
(insn 731 730 732 51 (parallel [
            (set (reg:DI 890)
                (plus:DI (reg:DI 381 [ _295 ])
                    (const_int 1274133 [0x137115])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":162 222 {*adddi_1}
     (nil))
(insn 732 731 733 51 (set (reg:SF 382 [ _296 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 890)
                    (const_int 4 [0x4]))
                (reg/f:DI 889)) [2 masks.vtm S4 A32])) "CALRCH.f":162 131 {*movsf_internal}
     (nil))
(insn 733 732 734 51 (set (reg:SF 383 [ _297 ])
        (plus:SF (reg:SF 372 [ _286 ])
            (reg:SF 382 [ _296 ]))) "CALRCH.f":162 838 {*fop_sf_comm}
     (nil))
(insn 734 733 735 51 (set (reg:SI 891)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALRCH.f":162 86 {*movsi_internal}
     (nil))
(insn 735 734 736 51 (parallel [
            (set (reg:SI 384 [ _298 ])
                (plus:SI (reg:SI 891)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":162 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 736 735 737 51 (set (reg:DI 385 [ _299 ])
        (sign_extend:DI (reg:SI 384 [ _298 ]))) "CALRCH.f":162 149 {*extendsidi2_rex64}
     (nil))
(insn 737 736 738 51 (parallel [
            (set (reg:DI 386 [ _300 ])
                (mult:DI (reg:DI 385 [ _299 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":162 349 {*muldi3_1}
     (nil))
(insn 738 737 739 51 (set (reg:SI 892)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":162 86 {*movsi_internal}
     (nil))
(insn 739 738 740 51 (set (reg:DI 387 [ _301 ])
        (sign_extend:DI (reg:SI 892))) "CALRCH.f":162 149 {*extendsidi2_rex64}
     (nil))
(insn 740 739 741 51 (parallel [
            (set (reg:DI 388 [ _302 ])
                (mult:DI (reg:DI 387 [ _301 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":162 349 {*muldi3_1}
     (nil))
(insn 741 740 742 51 (parallel [
            (set (reg:DI 389 [ _303 ])
                (plus:DI (reg:DI 386 [ _300 ])
                    (reg:DI 388 [ _302 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":162 222 {*adddi_1}
     (nil))
(insn 742 741 743 51 (set (reg:SI 893)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [1 ie+0 S4 A32])) "CALRCH.f":162 86 {*movsi_internal}
     (nil))
(insn 743 742 744 51 (set (reg:DI 390 [ _304 ])
        (sign_extend:DI (reg:SI 893))) "CALRCH.f":162 149 {*extendsidi2_rex64}
     (nil))
(insn 744 743 745 51 (parallel [
            (set (reg:DI 391 [ _305 ])
                (plus:DI (reg:DI 389 [ _303 ])
                    (reg:DI 390 [ _304 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":162 222 {*adddi_1}
     (nil))
(insn 745 744 746 51 (parallel [
            (set (reg:DI 392 [ _306 ])
                (plus:DI (reg:DI 391 [ _305 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":162 222 {*adddi_1}
     (nil))
(insn 746 745 747 51 (set (reg/f:DI 894)
        (symbol_ref:DI ("masks_") [flags 0x202]  <var_decl 0x7fe96ef00d80 masks>)) "CALRCH.f":162 85 {*movdi_internal}
     (nil))
(insn 747 746 748 51 (parallel [
            (set (reg:DI 895)
                (plus:DI (reg:DI 392 [ _306 ])
                    (const_int 1274133 [0x137115])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":162 222 {*adddi_1}
     (nil))
(insn 748 747 749 51 (set (reg:SF 393 [ _307 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 895)
                    (const_int 4 [0x4]))
                (reg/f:DI 894)) [2 masks.vtm S4 A32])) "CALRCH.f":162 131 {*movsf_internal}
     (nil))
(insn 749 748 750 51 (set (reg:SF 394 [ _308 ])
        (plus:SF (reg:SF 383 [ _297 ])
            (reg:SF 393 [ _307 ]))) "CALRCH.f":162 838 {*fop_sf_comm}
     (nil))
(insn 750 749 751 51 (set (reg:SI 896)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALRCH.f":162 86 {*movsi_internal}
     (nil))
(insn 751 750 752 51 (parallel [
            (set (reg:SI 395 [ _309 ])
                (plus:SI (reg:SI 896)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":162 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 752 751 753 51 (set (reg:DI 396 [ _310 ])
        (sign_extend:DI (reg:SI 395 [ _309 ]))) "CALRCH.f":162 149 {*extendsidi2_rex64}
     (nil))
(insn 753 752 754 51 (parallel [
            (set (reg:DI 397 [ _311 ])
                (mult:DI (reg:DI 396 [ _310 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":162 349 {*muldi3_1}
     (nil))
(insn 754 753 755 51 (set (reg:SI 897)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":162 86 {*movsi_internal}
     (nil))
(insn 755 754 756 51 (parallel [
            (set (reg:SI 398 [ _312 ])
                (plus:SI (reg:SI 897)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":162 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 756 755 757 51 (set (reg:DI 399 [ _313 ])
        (sign_extend:DI (reg:SI 398 [ _312 ]))) "CALRCH.f":162 149 {*extendsidi2_rex64}
     (nil))
(insn 757 756 758 51 (parallel [
            (set (reg:DI 400 [ _314 ])
                (mult:DI (reg:DI 399 [ _313 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":162 349 {*muldi3_1}
     (nil))
(insn 758 757 759 51 (parallel [
            (set (reg:DI 401 [ _315 ])
                (plus:DI (reg:DI 397 [ _311 ])
                    (reg:DI 400 [ _314 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":162 222 {*adddi_1}
     (nil))
(insn 759 758 760 51 (set (reg:SI 898)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALRCH.f":162 86 {*movsi_internal}
     (nil))
(insn 760 759 761 51 (set (reg:DI 402 [ _316 ])
        (sign_extend:DI (reg:SI 898))) "CALRCH.f":162 149 {*extendsidi2_rex64}
     (nil))
(insn 761 760 762 51 (parallel [
            (set (reg:DI 403 [ _317 ])
                (plus:DI (reg:DI 401 [ _315 ])
                    (reg:DI 402 [ _316 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":162 222 {*adddi_1}
     (nil))
(insn 762 761 763 51 (parallel [
            (set (reg:DI 404 [ _318 ])
                (plus:DI (reg:DI 403 [ _317 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":162 222 {*adddi_1}
     (nil))
(insn 763 762 764 51 (set (reg/f:DI 899)
        (symbol_ref:DI ("masks_") [flags 0x202]  <var_decl 0x7fe96ef00d80 masks>)) "CALRCH.f":162 85 {*movdi_internal}
     (nil))
(insn 764 763 765 51 (parallel [
            (set (reg:DI 900)
                (plus:DI (reg:DI 404 [ _318 ])
                    (const_int 1274133 [0x137115])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":162 222 {*adddi_1}
     (nil))
(insn 765 764 766 51 (set (reg:SF 405 [ _319 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 900)
                    (const_int 4 [0x4]))
                (reg/f:DI 899)) [2 masks.vtm S4 A32])) "CALRCH.f":162 131 {*movsf_internal}
     (nil))
(insn 766 765 767 51 (set (reg:SF 901)
        (plus:SF (reg:SF 394 [ _308 ])
            (reg:SF 405 [ _319 ]))) "CALRCH.f":162 838 {*fop_sf_comm}
     (nil))
(insn 767 766 768 51 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [2 wndslp+0 S4 A32])
        (reg:SF 901)) "CALRCH.f":162 131 {*movsf_internal}
     (nil))
(insn 768 767 769 51 (set (reg:SF 902)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC6") [flags 0x2]) [0  S4 A32])) "CALRCH.f":163 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 769 768 770 51 (set (reg:CCFP 17 flags)
        (unspec:CCFP [
                (compare:CCFP (reg:SF 902)
                    (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                            (const_int -28 [0xffffffffffffffe4])) [2 wndsl+0 S4 A32]))
            ] UNSPEC_NOTRAP)) "CALRCH.f":163 54 {*cmpiusf}
     (nil))
(jump_insn 770 769 1274 51 (set (pc)
        (if_then_else (unordered (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1280)
            (pc))) "CALRCH.f":163 682 {*jcc}
     (nil)
 -> 1280)
;;  succ:       54
;;              52 (FALLTHRU)

;; basic block 52, loop depth 3, maybe hot
;;  prev block 51, next block 53, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       51 (FALLTHRU)
(note 1274 770 771 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 771 1274 772 52 (set (reg:SF 903)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC6") [flags 0x2]) [0  S4 A32])) "CALRCH.f":163 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 772 771 773 52 (set (reg:CCFP 17 flags)
        (unspec:CCFP [
                (compare:CCFP (reg:SF 903)
                    (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                            (const_int -28 [0xffffffffffffffe4])) [2 wndsl+0 S4 A32]))
            ] UNSPEC_NOTRAP)) "CALRCH.f":163 54 {*cmpiusf}
     (nil))
(jump_insn 773 772 1275 52 (set (pc)
        (if_then_else (uneq (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref 1250)
            (pc))) "CALRCH.f":163 682 {*jcc}
     (nil)
 -> 1250)
;;  succ:       66
;;              53 (FALLTHRU)

;; basic block 53, loop depth 3, maybe hot
;;  prev block 52, next block 54, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       52 (FALLTHRU)
(note 1275 773 1280 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
;;  succ:       54 [always]  (FALLTHRU)

;; basic block 54, loop depth 3, maybe hot
;;  prev block 53, next block 55, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       53 [always]  (FALLTHRU)
;;              51
(code_label 1280 1275 775 54 44 (nil) [1 uses])
(note 775 1280 776 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(insn 776 775 777 54 (set (reg:SF 904)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC6") [flags 0x2]) [0  S4 A32])) "CALRCH.f":163 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 777 776 778 54 (set (reg:CCFP 17 flags)
        (unspec:CCFP [
                (compare:CCFP (reg:SF 904)
                    (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                            (const_int -32 [0xffffffffffffffe0])) [2 wndslp+0 S4 A32]))
            ] UNSPEC_NOTRAP)) "CALRCH.f":163 54 {*cmpiusf}
     (nil))
(jump_insn 778 777 1276 54 (set (pc)
        (if_then_else (unordered (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1281)
            (pc))) "CALRCH.f":163 682 {*jcc}
     (nil)
 -> 1281)
;;  succ:       57
;;              55 (FALLTHRU)

;; basic block 55, loop depth 3, maybe hot
;;  prev block 54, next block 56, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       54 (FALLTHRU)
(note 1276 778 779 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(insn 779 1276 780 55 (set (reg:SF 905)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC6") [flags 0x2]) [0  S4 A32])) "CALRCH.f":163 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 780 779 781 55 (set (reg:CCFP 17 flags)
        (unspec:CCFP [
                (compare:CCFP (reg:SF 905)
                    (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                            (const_int -32 [0xffffffffffffffe0])) [2 wndslp+0 S4 A32]))
            ] UNSPEC_NOTRAP)) "CALRCH.f":163 54 {*cmpiusf}
     (nil))
(jump_insn 781 780 1277 55 (set (pc)
        (if_then_else (uneq (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref 1250)
            (pc))) "CALRCH.f":163 682 {*jcc}
     (nil)
 -> 1250)
;;  succ:       66
;;              56 (FALLTHRU)

;; basic block 56, loop depth 3, maybe hot
;;  prev block 55, next block 57, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       55 (FALLTHRU)
(note 1277 781 1281 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
;;  succ:       57 [always]  (FALLTHRU)

;; basic block 57, loop depth 3, maybe hot
;;  prev block 56, next block 58, flags: (NEW, REACHABLE, RTL)
;;  pred:       56 [always]  (FALLTHRU)
;;              54
(code_label 1281 1277 783 57 45 (nil) [1 uses])
(note 783 1281 784 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(insn 784 783 785 57 (set (reg:SI 906)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALRCH.f":164 86 {*movsi_internal}
     (nil))
(insn 785 784 786 57 (set (reg:DI 406 [ _320 ])
        (sign_extend:DI (reg:SI 906))) "CALRCH.f":164 149 {*extendsidi2_rex64}
     (nil))
(insn 786 785 787 57 (parallel [
            (set (reg:DI 407 [ _321 ])
                (mult:DI (reg:DI 406 [ _320 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":164 349 {*muldi3_1}
     (nil))
(insn 787 786 788 57 (set (reg:SI 907)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":164 86 {*movsi_internal}
     (nil))
(insn 788 787 789 57 (parallel [
            (set (reg:SI 408 [ _322 ])
                (plus:SI (reg:SI 907)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":164 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 789 788 790 57 (set (reg:DI 409 [ _323 ])
        (sign_extend:DI (reg:SI 408 [ _322 ]))) "CALRCH.f":164 149 {*extendsidi2_rex64}
     (nil))
(insn 790 789 791 57 (parallel [
            (set (reg:DI 410 [ _324 ])
                (mult:DI (reg:DI 409 [ _323 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":164 349 {*muldi3_1}
     (nil))
(insn 791 790 792 57 (parallel [
            (set (reg:DI 411 [ _325 ])
                (plus:DI (reg:DI 407 [ _321 ])
                    (reg:DI 410 [ _324 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":164 222 {*adddi_1}
     (nil))
(insn 792 791 793 57 (set (reg:SI 908)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALRCH.f":164 86 {*movsi_internal}
     (nil))
(insn 793 792 794 57 (set (reg:DI 412 [ _326 ])
        (sign_extend:DI (reg:SI 908))) "CALRCH.f":164 149 {*extendsidi2_rex64}
     (nil))
(insn 794 793 795 57 (parallel [
            (set (reg:DI 413 [ _327 ])
                (plus:DI (reg:DI 411 [ _325 ])
                    (reg:DI 412 [ _326 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":164 222 {*adddi_1}
     (nil))
(insn 795 794 796 57 (parallel [
            (set (reg:DI 414 [ _328 ])
                (plus:DI (reg:DI 413 [ _327 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":164 222 {*adddi_1}
     (nil))
(insn 796 795 797 57 (set (reg/f:DI 909)
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7fe96ef1b900 vrbls>)) "CALRCH.f":164 85 {*movdi_internal}
     (nil))
(insn 797 796 798 57 (parallel [
            (set (reg:DI 910)
                (plus:DI (reg:DI 414 [ _328 ])
                    (const_int 88893 [0x15b3d])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":164 222 {*adddi_1}
     (nil))
(insn 798 797 799 57 (set (reg:SF 415 [ _329 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 910)
                    (const_int 4 [0x4]))
                (reg/f:DI 909)) [2 vrbls.u S4 A32])) "CALRCH.f":164 131 {*movsf_internal}
     (nil))
(insn 799 798 800 57 (set (reg:SI 911)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALRCH.f":164 86 {*movsi_internal}
     (nil))
(insn 800 799 801 57 (set (reg:DI 416 [ _330 ])
        (sign_extend:DI (reg:SI 911))) "CALRCH.f":164 149 {*extendsidi2_rex64}
     (nil))
(insn 801 800 802 57 (parallel [
            (set (reg:DI 417 [ _331 ])
                (mult:DI (reg:DI 416 [ _330 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":164 349 {*muldi3_1}
     (nil))
(insn 802 801 803 57 (set (reg:SI 912)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":164 86 {*movsi_internal}
     (nil))
(insn 803 802 804 57 (set (reg:DI 418 [ _332 ])
        (sign_extend:DI (reg:SI 912))) "CALRCH.f":164 149 {*extendsidi2_rex64}
     (nil))
(insn 804 803 805 57 (parallel [
            (set (reg:DI 419 [ _333 ])
                (mult:DI (reg:DI 418 [ _332 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":164 349 {*muldi3_1}
     (nil))
(insn 805 804 806 57 (parallel [
            (set (reg:DI 420 [ _334 ])
                (plus:DI (reg:DI 417 [ _331 ])
                    (reg:DI 419 [ _333 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":164 222 {*adddi_1}
     (nil))
(insn 806 805 807 57 (set (reg:SI 913)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [1 iw+0 S4 A32])) "CALRCH.f":164 86 {*movsi_internal}
     (nil))
(insn 807 806 808 57 (set (reg:DI 421 [ _335 ])
        (sign_extend:DI (reg:SI 913))) "CALRCH.f":164 149 {*extendsidi2_rex64}
     (nil))
(insn 808 807 809 57 (parallel [
            (set (reg:DI 422 [ _336 ])
                (plus:DI (reg:DI 420 [ _334 ])
                    (reg:DI 421 [ _335 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":164 222 {*adddi_1}
     (nil))
(insn 809 808 810 57 (parallel [
            (set (reg:DI 423 [ _337 ])
                (plus:DI (reg:DI 422 [ _336 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":164 222 {*adddi_1}
     (nil))
(insn 810 809 811 57 (set (reg/f:DI 914)
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7fe96ef1b900 vrbls>)) "CALRCH.f":164 85 {*movdi_internal}
     (nil))
(insn 811 810 812 57 (parallel [
            (set (reg:DI 915)
                (plus:DI (reg:DI 423 [ _337 ])
                    (const_int 88893 [0x15b3d])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":164 222 {*adddi_1}
     (nil))
(insn 812 811 813 57 (set (reg:SF 424 [ _338 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 915)
                    (const_int 4 [0x4]))
                (reg/f:DI 914)) [2 vrbls.u S4 A32])) "CALRCH.f":164 131 {*movsf_internal}
     (nil))
(insn 813 812 814 57 (set (reg:SF 425 [ _339 ])
        (plus:SF (reg:SF 415 [ _329 ])
            (reg:SF 424 [ _338 ]))) "CALRCH.f":164 838 {*fop_sf_comm}
     (nil))
(insn 814 813 815 57 (set (reg:SI 916)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALRCH.f":164 86 {*movsi_internal}
     (nil))
(insn 815 814 816 57 (set (reg:DI 426 [ _340 ])
        (sign_extend:DI (reg:SI 916))) "CALRCH.f":164 149 {*extendsidi2_rex64}
     (nil))
(insn 816 815 817 57 (parallel [
            (set (reg:DI 427 [ _341 ])
                (mult:DI (reg:DI 426 [ _340 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":164 349 {*muldi3_1}
     (nil))
(insn 817 816 818 57 (set (reg:SI 917)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":164 86 {*movsi_internal}
     (nil))
(insn 818 817 819 57 (set (reg:DI 428 [ _342 ])
        (sign_extend:DI (reg:SI 917))) "CALRCH.f":164 149 {*extendsidi2_rex64}
     (nil))
(insn 819 818 820 57 (parallel [
            (set (reg:DI 429 [ _343 ])
                (mult:DI (reg:DI 428 [ _342 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":164 349 {*muldi3_1}
     (nil))
(insn 820 819 821 57 (parallel [
            (set (reg:DI 430 [ _344 ])
                (plus:DI (reg:DI 427 [ _341 ])
                    (reg:DI 429 [ _343 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":164 222 {*adddi_1}
     (nil))
(insn 821 820 822 57 (set (reg:SI 918)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [1 ie+0 S4 A32])) "CALRCH.f":164 86 {*movsi_internal}
     (nil))
(insn 822 821 823 57 (set (reg:DI 431 [ _345 ])
        (sign_extend:DI (reg:SI 918))) "CALRCH.f":164 149 {*extendsidi2_rex64}
     (nil))
(insn 823 822 824 57 (parallel [
            (set (reg:DI 432 [ _346 ])
                (plus:DI (reg:DI 430 [ _344 ])
                    (reg:DI 431 [ _345 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":164 222 {*adddi_1}
     (nil))
(insn 824 823 825 57 (parallel [
            (set (reg:DI 433 [ _347 ])
                (plus:DI (reg:DI 432 [ _346 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":164 222 {*adddi_1}
     (nil))
(insn 825 824 826 57 (set (reg/f:DI 919)
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7fe96ef1b900 vrbls>)) "CALRCH.f":164 85 {*movdi_internal}
     (nil))
(insn 826 825 827 57 (parallel [
            (set (reg:DI 920)
                (plus:DI (reg:DI 433 [ _347 ])
                    (const_int 88893 [0x15b3d])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":164 222 {*adddi_1}
     (nil))
(insn 827 826 828 57 (set (reg:SF 434 [ _348 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 920)
                    (const_int 4 [0x4]))
                (reg/f:DI 919)) [2 vrbls.u S4 A32])) "CALRCH.f":164 131 {*movsf_internal}
     (nil))
(insn 828 827 829 57 (set (reg:SF 435 [ _349 ])
        (plus:SF (reg:SF 425 [ _339 ])
            (reg:SF 434 [ _348 ]))) "CALRCH.f":164 838 {*fop_sf_comm}
     (nil))
(insn 829 828 830 57 (set (reg:SI 921)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALRCH.f":164 86 {*movsi_internal}
     (nil))
(insn 830 829 831 57 (set (reg:DI 436 [ _350 ])
        (sign_extend:DI (reg:SI 921))) "CALRCH.f":164 149 {*extendsidi2_rex64}
     (nil))
(insn 831 830 832 57 (parallel [
            (set (reg:DI 437 [ _351 ])
                (mult:DI (reg:DI 436 [ _350 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":164 349 {*muldi3_1}
     (nil))
(insn 832 831 833 57 (set (reg:SI 922)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":164 86 {*movsi_internal}
     (nil))
(insn 833 832 834 57 (parallel [
            (set (reg:SI 438 [ _352 ])
                (plus:SI (reg:SI 922)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":164 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 834 833 835 57 (set (reg:DI 439 [ _353 ])
        (sign_extend:DI (reg:SI 438 [ _352 ]))) "CALRCH.f":164 149 {*extendsidi2_rex64}
     (nil))
(insn 835 834 836 57 (parallel [
            (set (reg:DI 440 [ _354 ])
                (mult:DI (reg:DI 439 [ _353 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":164 349 {*muldi3_1}
     (nil))
(insn 836 835 837 57 (parallel [
            (set (reg:DI 441 [ _355 ])
                (plus:DI (reg:DI 437 [ _351 ])
                    (reg:DI 440 [ _354 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":164 222 {*adddi_1}
     (nil))
(insn 837 836 838 57 (set (reg:SI 923)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALRCH.f":164 86 {*movsi_internal}
     (nil))
(insn 838 837 839 57 (set (reg:DI 442 [ _356 ])
        (sign_extend:DI (reg:SI 923))) "CALRCH.f":164 149 {*extendsidi2_rex64}
     (nil))
(insn 839 838 840 57 (parallel [
            (set (reg:DI 443 [ _357 ])
                (plus:DI (reg:DI 441 [ _355 ])
                    (reg:DI 442 [ _356 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":164 222 {*adddi_1}
     (nil))
(insn 840 839 841 57 (parallel [
            (set (reg:DI 444 [ _358 ])
                (plus:DI (reg:DI 443 [ _357 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":164 222 {*adddi_1}
     (nil))
(insn 841 840 842 57 (set (reg/f:DI 924)
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7fe96ef1b900 vrbls>)) "CALRCH.f":164 85 {*movdi_internal}
     (nil))
(insn 842 841 843 57 (parallel [
            (set (reg:DI 925)
                (plus:DI (reg:DI 444 [ _358 ])
                    (const_int 88893 [0x15b3d])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":164 222 {*adddi_1}
     (nil))
(insn 843 842 844 57 (set (reg:SF 445 [ _359 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 925)
                    (const_int 4 [0x4]))
                (reg/f:DI 924)) [2 vrbls.u S4 A32])) "CALRCH.f":164 131 {*movsf_internal}
     (nil))
(insn 844 843 845 57 (set (reg:SF 446 [ _360 ])
        (plus:SF (reg:SF 435 [ _349 ])
            (reg:SF 445 [ _359 ]))) "CALRCH.f":164 838 {*fop_sf_comm}
     (nil))
(insn 845 844 846 57 (set (reg:SF 447 [ _361 ])
        (reg:SF 446 [ _360 ])) "CALRCH.f":164 131 {*movsf_internal}
     (nil))
(insn 846 845 847 57 (set (reg:SF 926)
        (div:SF (reg:SF 447 [ _361 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -28 [0xffffffffffffffe4])) [2 wndsl+0 S4 A32]))) "CALRCH.f":164 841 {*fop_sf_1}
     (nil))
(insn 847 846 848 57 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [2 uhkl+0 S4 A32])
        (reg:SF 926)) "CALRCH.f":164 131 {*movsf_internal}
     (nil))
(insn 848 847 849 57 (set (reg:SI 927)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALRCH.f":166 86 {*movsi_internal}
     (nil))
(insn 849 848 850 57 (parallel [
            (set (reg:SI 448 [ _362 ])
                (plus:SI (reg:SI 927)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":166 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 850 849 851 57 (set (reg:DI 449 [ _363 ])
        (sign_extend:DI (reg:SI 448 [ _362 ]))) "CALRCH.f":166 149 {*extendsidi2_rex64}
     (nil))
(insn 851 850 852 57 (parallel [
            (set (reg:DI 450 [ _364 ])
                (mult:DI (reg:DI 449 [ _363 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":166 349 {*muldi3_1}
     (nil))
(insn 852 851 853 57 (set (reg:SI 928)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":166 86 {*movsi_internal}
     (nil))
(insn 853 852 854 57 (parallel [
            (set (reg:SI 451 [ _365 ])
                (plus:SI (reg:SI 928)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":166 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 854 853 855 57 (set (reg:DI 452 [ _366 ])
        (sign_extend:DI (reg:SI 451 [ _365 ]))) "CALRCH.f":166 149 {*extendsidi2_rex64}
     (nil))
(insn 855 854 856 57 (parallel [
            (set (reg:DI 453 [ _367 ])
                (mult:DI (reg:DI 452 [ _366 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":166 349 {*muldi3_1}
     (nil))
(insn 856 855 857 57 (parallel [
            (set (reg:DI 454 [ _368 ])
                (plus:DI (reg:DI 450 [ _364 ])
                    (reg:DI 453 [ _367 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":166 222 {*adddi_1}
     (nil))
(insn 857 856 858 57 (set (reg:SI 929)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALRCH.f":166 86 {*movsi_internal}
     (nil))
(insn 858 857 859 57 (set (reg:DI 455 [ _369 ])
        (sign_extend:DI (reg:SI 929))) "CALRCH.f":166 149 {*extendsidi2_rex64}
     (nil))
(insn 859 858 860 57 (parallel [
            (set (reg:DI 456 [ _370 ])
                (plus:DI (reg:DI 454 [ _368 ])
                    (reg:DI 455 [ _369 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":166 222 {*adddi_1}
     (nil))
(insn 860 859 861 57 (parallel [
            (set (reg:DI 457 [ _371 ])
                (plus:DI (reg:DI 456 [ _370 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":166 222 {*adddi_1}
     (nil))
(insn 861 860 862 57 (set (reg/f:DI 930)
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7fe96ef1b900 vrbls>)) "CALRCH.f":166 85 {*movdi_internal}
     (nil))
(insn 862 861 863 57 (parallel [
            (set (reg:DI 931)
                (plus:DI (reg:DI 457 [ _371 ])
                    (const_int 88893 [0x15b3d])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":166 222 {*adddi_1}
     (nil))
(insn 863 862 864 57 (set (reg:SF 458 [ _372 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 931)
                    (const_int 4 [0x4]))
                (reg/f:DI 930)) [2 vrbls.u S4 A32])) "CALRCH.f":166 131 {*movsf_internal}
     (nil))
(insn 864 863 865 57 (set (reg:SI 932)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALRCH.f":166 86 {*movsi_internal}
     (nil))
(insn 865 864 866 57 (parallel [
            (set (reg:SI 459 [ _373 ])
                (plus:SI (reg:SI 932)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":166 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 866 865 867 57 (set (reg:DI 460 [ _374 ])
        (sign_extend:DI (reg:SI 459 [ _373 ]))) "CALRCH.f":166 149 {*extendsidi2_rex64}
     (nil))
(insn 867 866 868 57 (parallel [
            (set (reg:DI 461 [ _375 ])
                (mult:DI (reg:DI 460 [ _374 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":166 349 {*muldi3_1}
     (nil))
(insn 868 867 869 57 (set (reg:SI 933)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":166 86 {*movsi_internal}
     (nil))
(insn 869 868 870 57 (set (reg:DI 462 [ _376 ])
        (sign_extend:DI (reg:SI 933))) "CALRCH.f":166 149 {*extendsidi2_rex64}
     (nil))
(insn 870 869 871 57 (parallel [
            (set (reg:DI 463 [ _377 ])
                (mult:DI (reg:DI 462 [ _376 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":166 349 {*muldi3_1}
     (nil))
(insn 871 870 872 57 (parallel [
            (set (reg:DI 464 [ _378 ])
                (plus:DI (reg:DI 461 [ _375 ])
                    (reg:DI 463 [ _377 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":166 222 {*adddi_1}
     (nil))
(insn 872 871 873 57 (set (reg:SI 934)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [1 iw+0 S4 A32])) "CALRCH.f":166 86 {*movsi_internal}
     (nil))
(insn 873 872 874 57 (set (reg:DI 465 [ _379 ])
        (sign_extend:DI (reg:SI 934))) "CALRCH.f":166 149 {*extendsidi2_rex64}
     (nil))
(insn 874 873 875 57 (parallel [
            (set (reg:DI 466 [ _380 ])
                (plus:DI (reg:DI 464 [ _378 ])
                    (reg:DI 465 [ _379 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":166 222 {*adddi_1}
     (nil))
(insn 875 874 876 57 (parallel [
            (set (reg:DI 467 [ _381 ])
                (plus:DI (reg:DI 466 [ _380 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":166 222 {*adddi_1}
     (nil))
(insn 876 875 877 57 (set (reg/f:DI 935)
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7fe96ef1b900 vrbls>)) "CALRCH.f":166 85 {*movdi_internal}
     (nil))
(insn 877 876 878 57 (parallel [
            (set (reg:DI 936)
                (plus:DI (reg:DI 467 [ _381 ])
                    (const_int 88893 [0x15b3d])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":166 222 {*adddi_1}
     (nil))
(insn 878 877 879 57 (set (reg:SF 468 [ _382 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 936)
                    (const_int 4 [0x4]))
                (reg/f:DI 935)) [2 vrbls.u S4 A32])) "CALRCH.f":166 131 {*movsf_internal}
     (nil))
(insn 879 878 880 57 (set (reg:SF 469 [ _383 ])
        (plus:SF (reg:SF 458 [ _372 ])
            (reg:SF 468 [ _382 ]))) "CALRCH.f":166 838 {*fop_sf_comm}
     (nil))
(insn 880 879 881 57 (set (reg:SI 937)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALRCH.f":166 86 {*movsi_internal}
     (nil))
(insn 881 880 882 57 (parallel [
            (set (reg:SI 470 [ _384 ])
                (plus:SI (reg:SI 937)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":166 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 882 881 883 57 (set (reg:DI 471 [ _385 ])
        (sign_extend:DI (reg:SI 470 [ _384 ]))) "CALRCH.f":166 149 {*extendsidi2_rex64}
     (nil))
(insn 883 882 884 57 (parallel [
            (set (reg:DI 472 [ _386 ])
                (mult:DI (reg:DI 471 [ _385 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":166 349 {*muldi3_1}
     (nil))
(insn 884 883 885 57 (set (reg:SI 938)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":166 86 {*movsi_internal}
     (nil))
(insn 885 884 886 57 (set (reg:DI 473 [ _387 ])
        (sign_extend:DI (reg:SI 938))) "CALRCH.f":166 149 {*extendsidi2_rex64}
     (nil))
(insn 886 885 887 57 (parallel [
            (set (reg:DI 474 [ _388 ])
                (mult:DI (reg:DI 473 [ _387 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":166 349 {*muldi3_1}
     (nil))
(insn 887 886 888 57 (parallel [
            (set (reg:DI 475 [ _389 ])
                (plus:DI (reg:DI 472 [ _386 ])
                    (reg:DI 474 [ _388 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":166 222 {*adddi_1}
     (nil))
(insn 888 887 889 57 (set (reg:SI 939)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [1 ie+0 S4 A32])) "CALRCH.f":166 86 {*movsi_internal}
     (nil))
(insn 889 888 890 57 (set (reg:DI 476 [ _390 ])
        (sign_extend:DI (reg:SI 939))) "CALRCH.f":166 149 {*extendsidi2_rex64}
     (nil))
(insn 890 889 891 57 (parallel [
            (set (reg:DI 477 [ _391 ])
                (plus:DI (reg:DI 475 [ _389 ])
                    (reg:DI 476 [ _390 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":166 222 {*adddi_1}
     (nil))
(insn 891 890 892 57 (parallel [
            (set (reg:DI 478 [ _392 ])
                (plus:DI (reg:DI 477 [ _391 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":166 222 {*adddi_1}
     (nil))
(insn 892 891 893 57 (set (reg/f:DI 940)
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7fe96ef1b900 vrbls>)) "CALRCH.f":166 85 {*movdi_internal}
     (nil))
(insn 893 892 894 57 (parallel [
            (set (reg:DI 941)
                (plus:DI (reg:DI 478 [ _392 ])
                    (const_int 88893 [0x15b3d])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":166 222 {*adddi_1}
     (nil))
(insn 894 893 895 57 (set (reg:SF 479 [ _393 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 941)
                    (const_int 4 [0x4]))
                (reg/f:DI 940)) [2 vrbls.u S4 A32])) "CALRCH.f":166 131 {*movsf_internal}
     (nil))
(insn 895 894 896 57 (set (reg:SF 480 [ _394 ])
        (plus:SF (reg:SF 469 [ _383 ])
            (reg:SF 479 [ _393 ]))) "CALRCH.f":166 838 {*fop_sf_comm}
     (nil))
(insn 896 895 897 57 (set (reg:SI 942)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALRCH.f":166 86 {*movsi_internal}
     (nil))
(insn 897 896 898 57 (parallel [
            (set (reg:SI 481 [ _395 ])
                (plus:SI (reg:SI 942)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":166 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 898 897 899 57 (set (reg:DI 482 [ _396 ])
        (sign_extend:DI (reg:SI 481 [ _395 ]))) "CALRCH.f":166 149 {*extendsidi2_rex64}
     (nil))
(insn 899 898 900 57 (parallel [
            (set (reg:DI 483 [ _397 ])
                (mult:DI (reg:DI 482 [ _396 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":166 349 {*muldi3_1}
     (nil))
(insn 900 899 901 57 (set (reg:SI 943)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":166 86 {*movsi_internal}
     (nil))
(insn 901 900 902 57 (parallel [
            (set (reg:SI 484 [ _398 ])
                (plus:SI (reg:SI 943)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":166 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 902 901 903 57 (set (reg:DI 485 [ _399 ])
        (sign_extend:DI (reg:SI 484 [ _398 ]))) "CALRCH.f":166 149 {*extendsidi2_rex64}
     (nil))
(insn 903 902 904 57 (parallel [
            (set (reg:DI 486 [ _400 ])
                (mult:DI (reg:DI 485 [ _399 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":166 349 {*muldi3_1}
     (nil))
(insn 904 903 905 57 (parallel [
            (set (reg:DI 487 [ _401 ])
                (plus:DI (reg:DI 483 [ _397 ])
                    (reg:DI 486 [ _400 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":166 222 {*adddi_1}
     (nil))
(insn 905 904 906 57 (set (reg:SI 944)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALRCH.f":166 86 {*movsi_internal}
     (nil))
(insn 906 905 907 57 (set (reg:DI 488 [ _402 ])
        (sign_extend:DI (reg:SI 944))) "CALRCH.f":166 149 {*extendsidi2_rex64}
     (nil))
(insn 907 906 908 57 (parallel [
            (set (reg:DI 489 [ _403 ])
                (plus:DI (reg:DI 487 [ _401 ])
                    (reg:DI 488 [ _402 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":166 222 {*adddi_1}
     (nil))
(insn 908 907 909 57 (parallel [
            (set (reg:DI 490 [ _404 ])
                (plus:DI (reg:DI 489 [ _403 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":166 222 {*adddi_1}
     (nil))
(insn 909 908 910 57 (set (reg/f:DI 945)
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7fe96ef1b900 vrbls>)) "CALRCH.f":166 85 {*movdi_internal}
     (nil))
(insn 910 909 911 57 (parallel [
            (set (reg:DI 946)
                (plus:DI (reg:DI 490 [ _404 ])
                    (const_int 88893 [0x15b3d])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":166 222 {*adddi_1}
     (nil))
(insn 911 910 912 57 (set (reg:SF 491 [ _405 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 946)
                    (const_int 4 [0x4]))
                (reg/f:DI 945)) [2 vrbls.u S4 A32])) "CALRCH.f":166 131 {*movsf_internal}
     (nil))
(insn 912 911 913 57 (set (reg:SF 492 [ _406 ])
        (plus:SF (reg:SF 480 [ _394 ])
            (reg:SF 491 [ _405 ]))) "CALRCH.f":166 838 {*fop_sf_comm}
     (nil))
(insn 913 912 914 57 (set (reg:SF 493 [ _407 ])
        (reg:SF 492 [ _406 ])) "CALRCH.f":166 131 {*movsf_internal}
     (nil))
(insn 914 913 915 57 (set (reg:SF 947)
        (div:SF (reg:SF 493 [ _407 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -32 [0xffffffffffffffe0])) [2 wndslp+0 S4 A32]))) "CALRCH.f":166 841 {*fop_sf_1}
     (nil))
(insn 915 914 916 57 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [2 ulkl+0 S4 A32])
        (reg:SF 947)) "CALRCH.f":166 131 {*movsf_internal}
     (nil))
(insn 916 915 917 57 (set (reg:SI 948)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALRCH.f":167 86 {*movsi_internal}
     (nil))
(insn 917 916 918 57 (set (reg:DI 494 [ _408 ])
        (sign_extend:DI (reg:SI 948))) "CALRCH.f":167 149 {*extendsidi2_rex64}
     (nil))
(insn 918 917 919 57 (parallel [
            (set (reg:DI 495 [ _409 ])
                (mult:DI (reg:DI 494 [ _408 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":167 349 {*muldi3_1}
     (nil))
(insn 919 918 920 57 (set (reg:SI 949)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":167 86 {*movsi_internal}
     (nil))
(insn 920 919 921 57 (parallel [
            (set (reg:SI 496 [ _410 ])
                (plus:SI (reg:SI 949)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":167 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 921 920 922 57 (set (reg:DI 497 [ _411 ])
        (sign_extend:DI (reg:SI 496 [ _410 ]))) "CALRCH.f":167 149 {*extendsidi2_rex64}
     (nil))
(insn 922 921 923 57 (parallel [
            (set (reg:DI 498 [ _412 ])
                (mult:DI (reg:DI 497 [ _411 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":167 349 {*muldi3_1}
     (nil))
(insn 923 922 924 57 (parallel [
            (set (reg:DI 499 [ _413 ])
                (plus:DI (reg:DI 495 [ _409 ])
                    (reg:DI 498 [ _412 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":167 222 {*adddi_1}
     (nil))
(insn 924 923 925 57 (set (reg:SI 950)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALRCH.f":167 86 {*movsi_internal}
     (nil))
(insn 925 924 926 57 (set (reg:DI 500 [ _414 ])
        (sign_extend:DI (reg:SI 950))) "CALRCH.f":167 149 {*extendsidi2_rex64}
     (nil))
(insn 926 925 927 57 (parallel [
            (set (reg:DI 501 [ _415 ])
                (plus:DI (reg:DI 499 [ _413 ])
                    (reg:DI 500 [ _414 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":167 222 {*adddi_1}
     (nil))
(insn 927 926 928 57 (parallel [
            (set (reg:DI 502 [ _416 ])
                (plus:DI (reg:DI 501 [ _415 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":167 222 {*adddi_1}
     (nil))
(insn 928 927 929 57 (set (reg/f:DI 951)
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7fe96ef1b900 vrbls>)) "CALRCH.f":167 85 {*movdi_internal}
     (nil))
(insn 929 928 930 57 (parallel [
            (set (reg:DI 952)
                (plus:DI (reg:DI 502 [ _416 ])
                    (const_int 1214871 [0x128997])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":167 222 {*adddi_1}
     (nil))
(insn 930 929 931 57 (set (reg:SF 503 [ _417 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 952)
                    (const_int 4 [0x4]))
                (reg/f:DI 951)) [2 vrbls.v S4 A32])) "CALRCH.f":167 131 {*movsf_internal}
     (nil))
(insn 931 930 932 57 (set (reg:SI 953)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALRCH.f":167 86 {*movsi_internal}
     (nil))
(insn 932 931 933 57 (set (reg:DI 504 [ _418 ])
        (sign_extend:DI (reg:SI 953))) "CALRCH.f":167 149 {*extendsidi2_rex64}
     (nil))
(insn 933 932 934 57 (parallel [
            (set (reg:DI 505 [ _419 ])
                (mult:DI (reg:DI 504 [ _418 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":167 349 {*muldi3_1}
     (nil))
(insn 934 933 935 57 (set (reg:SI 954)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":167 86 {*movsi_internal}
     (nil))
(insn 935 934 936 57 (set (reg:DI 506 [ _420 ])
        (sign_extend:DI (reg:SI 954))) "CALRCH.f":167 149 {*extendsidi2_rex64}
     (nil))
(insn 936 935 937 57 (parallel [
            (set (reg:DI 507 [ _421 ])
                (mult:DI (reg:DI 506 [ _420 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":167 349 {*muldi3_1}
     (nil))
(insn 937 936 938 57 (parallel [
            (set (reg:DI 508 [ _422 ])
                (plus:DI (reg:DI 505 [ _419 ])
                    (reg:DI 507 [ _421 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":167 222 {*adddi_1}
     (nil))
(insn 938 937 939 57 (set (reg:SI 955)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [1 iw+0 S4 A32])) "CALRCH.f":167 86 {*movsi_internal}
     (nil))
(insn 939 938 940 57 (set (reg:DI 509 [ _423 ])
        (sign_extend:DI (reg:SI 955))) "CALRCH.f":167 149 {*extendsidi2_rex64}
     (nil))
(insn 940 939 941 57 (parallel [
            (set (reg:DI 510 [ _424 ])
                (plus:DI (reg:DI 508 [ _422 ])
                    (reg:DI 509 [ _423 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":167 222 {*adddi_1}
     (nil))
(insn 941 940 942 57 (parallel [
            (set (reg:DI 511 [ _425 ])
                (plus:DI (reg:DI 510 [ _424 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":167 222 {*adddi_1}
     (nil))
(insn 942 941 943 57 (set (reg/f:DI 956)
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7fe96ef1b900 vrbls>)) "CALRCH.f":167 85 {*movdi_internal}
     (nil))
(insn 943 942 944 57 (parallel [
            (set (reg:DI 957)
                (plus:DI (reg:DI 511 [ _425 ])
                    (const_int 1214871 [0x128997])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":167 222 {*adddi_1}
     (nil))
(insn 944 943 945 57 (set (reg:SF 512 [ _426 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 957)
                    (const_int 4 [0x4]))
                (reg/f:DI 956)) [2 vrbls.v S4 A32])) "CALRCH.f":167 131 {*movsf_internal}
     (nil))
(insn 945 944 946 57 (set (reg:SF 513 [ _427 ])
        (plus:SF (reg:SF 503 [ _417 ])
            (reg:SF 512 [ _426 ]))) "CALRCH.f":167 838 {*fop_sf_comm}
     (nil))
(insn 946 945 947 57 (set (reg:SI 958)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALRCH.f":167 86 {*movsi_internal}
     (nil))
(insn 947 946 948 57 (set (reg:DI 514 [ _428 ])
        (sign_extend:DI (reg:SI 958))) "CALRCH.f":167 149 {*extendsidi2_rex64}
     (nil))
(insn 948 947 949 57 (parallel [
            (set (reg:DI 515 [ _429 ])
                (mult:DI (reg:DI 514 [ _428 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":167 349 {*muldi3_1}
     (nil))
(insn 949 948 950 57 (set (reg:SI 959)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":167 86 {*movsi_internal}
     (nil))
(insn 950 949 951 57 (set (reg:DI 516 [ _430 ])
        (sign_extend:DI (reg:SI 959))) "CALRCH.f":167 149 {*extendsidi2_rex64}
     (nil))
(insn 951 950 952 57 (parallel [
            (set (reg:DI 517 [ _431 ])
                (mult:DI (reg:DI 516 [ _430 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":167 349 {*muldi3_1}
     (nil))
(insn 952 951 953 57 (parallel [
            (set (reg:DI 518 [ _432 ])
                (plus:DI (reg:DI 515 [ _429 ])
                    (reg:DI 517 [ _431 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":167 222 {*adddi_1}
     (nil))
(insn 953 952 954 57 (set (reg:SI 960)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [1 ie+0 S4 A32])) "CALRCH.f":167 86 {*movsi_internal}
     (nil))
(insn 954 953 955 57 (set (reg:DI 519 [ _433 ])
        (sign_extend:DI (reg:SI 960))) "CALRCH.f":167 149 {*extendsidi2_rex64}
     (nil))
(insn 955 954 956 57 (parallel [
            (set (reg:DI 520 [ _434 ])
                (plus:DI (reg:DI 518 [ _432 ])
                    (reg:DI 519 [ _433 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":167 222 {*adddi_1}
     (nil))
(insn 956 955 957 57 (parallel [
            (set (reg:DI 521 [ _435 ])
                (plus:DI (reg:DI 520 [ _434 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":167 222 {*adddi_1}
     (nil))
(insn 957 956 958 57 (set (reg/f:DI 961)
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7fe96ef1b900 vrbls>)) "CALRCH.f":167 85 {*movdi_internal}
     (nil))
(insn 958 957 959 57 (parallel [
            (set (reg:DI 962)
                (plus:DI (reg:DI 521 [ _435 ])
                    (const_int 1214871 [0x128997])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":167 222 {*adddi_1}
     (nil))
(insn 959 958 960 57 (set (reg:SF 522 [ _436 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 962)
                    (const_int 4 [0x4]))
                (reg/f:DI 961)) [2 vrbls.v S4 A32])) "CALRCH.f":167 131 {*movsf_internal}
     (nil))
(insn 960 959 961 57 (set (reg:SF 523 [ _437 ])
        (plus:SF (reg:SF 513 [ _427 ])
            (reg:SF 522 [ _436 ]))) "CALRCH.f":167 838 {*fop_sf_comm}
     (nil))
(insn 961 960 962 57 (set (reg:SI 963)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALRCH.f":167 86 {*movsi_internal}
     (nil))
(insn 962 961 963 57 (set (reg:DI 524 [ _438 ])
        (sign_extend:DI (reg:SI 963))) "CALRCH.f":167 149 {*extendsidi2_rex64}
     (nil))
(insn 963 962 964 57 (parallel [
            (set (reg:DI 525 [ _439 ])
                (mult:DI (reg:DI 524 [ _438 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":167 349 {*muldi3_1}
     (nil))
(insn 964 963 965 57 (set (reg:SI 964)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":167 86 {*movsi_internal}
     (nil))
(insn 965 964 966 57 (parallel [
            (set (reg:SI 526 [ _440 ])
                (plus:SI (reg:SI 964)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":167 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 966 965 967 57 (set (reg:DI 527 [ _441 ])
        (sign_extend:DI (reg:SI 526 [ _440 ]))) "CALRCH.f":167 149 {*extendsidi2_rex64}
     (nil))
(insn 967 966 968 57 (parallel [
            (set (reg:DI 528 [ _442 ])
                (mult:DI (reg:DI 527 [ _441 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":167 349 {*muldi3_1}
     (nil))
(insn 968 967 969 57 (parallel [
            (set (reg:DI 529 [ _443 ])
                (plus:DI (reg:DI 525 [ _439 ])
                    (reg:DI 528 [ _442 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":167 222 {*adddi_1}
     (nil))
(insn 969 968 970 57 (set (reg:SI 965)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALRCH.f":167 86 {*movsi_internal}
     (nil))
(insn 970 969 971 57 (set (reg:DI 530 [ _444 ])
        (sign_extend:DI (reg:SI 965))) "CALRCH.f":167 149 {*extendsidi2_rex64}
     (nil))
(insn 971 970 972 57 (parallel [
            (set (reg:DI 531 [ _445 ])
                (plus:DI (reg:DI 529 [ _443 ])
                    (reg:DI 530 [ _444 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":167 222 {*adddi_1}
     (nil))
(insn 972 971 973 57 (parallel [
            (set (reg:DI 532 [ _446 ])
                (plus:DI (reg:DI 531 [ _445 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":167 222 {*adddi_1}
     (nil))
(insn 973 972 974 57 (set (reg/f:DI 966)
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7fe96ef1b900 vrbls>)) "CALRCH.f":167 85 {*movdi_internal}
     (nil))
(insn 974 973 975 57 (parallel [
            (set (reg:DI 967)
                (plus:DI (reg:DI 532 [ _446 ])
                    (const_int 1214871 [0x128997])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":167 222 {*adddi_1}
     (nil))
(insn 975 974 976 57 (set (reg:SF 533 [ _447 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 967)
                    (const_int 4 [0x4]))
                (reg/f:DI 966)) [2 vrbls.v S4 A32])) "CALRCH.f":167 131 {*movsf_internal}
     (nil))
(insn 976 975 977 57 (set (reg:SF 534 [ _448 ])
        (plus:SF (reg:SF 523 [ _437 ])
            (reg:SF 533 [ _447 ]))) "CALRCH.f":167 838 {*fop_sf_comm}
     (nil))
(insn 977 976 978 57 (set (reg:SF 535 [ _449 ])
        (reg:SF 534 [ _448 ])) "CALRCH.f":167 131 {*movsf_internal}
     (nil))
(insn 978 977 979 57 (set (reg:SF 968)
        (div:SF (reg:SF 535 [ _449 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -28 [0xffffffffffffffe4])) [2 wndsl+0 S4 A32]))) "CALRCH.f":167 841 {*fop_sf_1}
     (nil))
(insn 979 978 980 57 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -44 [0xffffffffffffffd4])) [2 vhkl+0 S4 A32])
        (reg:SF 968)) "CALRCH.f":167 131 {*movsf_internal}
     (nil))
(insn 980 979 981 57 (set (reg:SI 969)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALRCH.f":169 86 {*movsi_internal}
     (nil))
(insn 981 980 982 57 (parallel [
            (set (reg:SI 536 [ _450 ])
                (plus:SI (reg:SI 969)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":169 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 982 981 983 57 (set (reg:DI 537 [ _451 ])
        (sign_extend:DI (reg:SI 536 [ _450 ]))) "CALRCH.f":169 149 {*extendsidi2_rex64}
     (nil))
(insn 983 982 984 57 (parallel [
            (set (reg:DI 538 [ _452 ])
                (mult:DI (reg:DI 537 [ _451 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":169 349 {*muldi3_1}
     (nil))
(insn 984 983 985 57 (set (reg:SI 970)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":169 86 {*movsi_internal}
     (nil))
(insn 985 984 986 57 (parallel [
            (set (reg:SI 539 [ _453 ])
                (plus:SI (reg:SI 970)
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":169 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 986 985 987 57 (set (reg:DI 540 [ _454 ])
        (sign_extend:DI (reg:SI 539 [ _453 ]))) "CALRCH.f":169 149 {*extendsidi2_rex64}
     (nil))
(insn 987 986 988 57 (parallel [
            (set (reg:DI 541 [ _455 ])
                (mult:DI (reg:DI 540 [ _454 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":169 349 {*muldi3_1}
     (nil))
(insn 988 987 989 57 (parallel [
            (set (reg:DI 542 [ _456 ])
                (plus:DI (reg:DI 538 [ _452 ])
                    (reg:DI 541 [ _455 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":169 222 {*adddi_1}
     (nil))
(insn 989 988 990 57 (set (reg:SI 971)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALRCH.f":169 86 {*movsi_internal}
     (nil))
(insn 990 989 991 57 (set (reg:DI 543 [ _457 ])
        (sign_extend:DI (reg:SI 971))) "CALRCH.f":169 149 {*extendsidi2_rex64}
     (nil))
(insn 991 990 992 57 (parallel [
            (set (reg:DI 544 [ _458 ])
                (plus:DI (reg:DI 542 [ _456 ])
                    (reg:DI 543 [ _457 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":169 222 {*adddi_1}
     (nil))
(insn 992 991 993 57 (parallel [
            (set (reg:DI 545 [ _459 ])
                (plus:DI (reg:DI 544 [ _458 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":169 222 {*adddi_1}
     (nil))
(insn 993 992 994 57 (set (reg/f:DI 972)
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7fe96ef1b900 vrbls>)) "CALRCH.f":169 85 {*movdi_internal}
     (nil))
(insn 994 993 995 57 (parallel [
            (set (reg:DI 973)
                (plus:DI (reg:DI 545 [ _459 ])
                    (const_int 1214871 [0x128997])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":169 222 {*adddi_1}
     (nil))
(insn 995 994 996 57 (set (reg:SF 546 [ _460 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 973)
                    (const_int 4 [0x4]))
                (reg/f:DI 972)) [2 vrbls.v S4 A32])) "CALRCH.f":169 131 {*movsf_internal}
     (nil))
(insn 996 995 997 57 (set (reg:SI 974)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALRCH.f":169 86 {*movsi_internal}
     (nil))
(insn 997 996 998 57 (parallel [
            (set (reg:SI 547 [ _461 ])
                (plus:SI (reg:SI 974)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":169 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 998 997 999 57 (set (reg:DI 548 [ _462 ])
        (sign_extend:DI (reg:SI 547 [ _461 ]))) "CALRCH.f":169 149 {*extendsidi2_rex64}
     (nil))
(insn 999 998 1000 57 (parallel [
            (set (reg:DI 549 [ _463 ])
                (mult:DI (reg:DI 548 [ _462 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":169 349 {*muldi3_1}
     (nil))
(insn 1000 999 1001 57 (set (reg:SI 975)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":169 86 {*movsi_internal}
     (nil))
(insn 1001 1000 1002 57 (set (reg:DI 550 [ _464 ])
        (sign_extend:DI (reg:SI 975))) "CALRCH.f":169 149 {*extendsidi2_rex64}
     (nil))
(insn 1002 1001 1003 57 (parallel [
            (set (reg:DI 551 [ _465 ])
                (mult:DI (reg:DI 550 [ _464 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":169 349 {*muldi3_1}
     (nil))
(insn 1003 1002 1004 57 (parallel [
            (set (reg:DI 552 [ _466 ])
                (plus:DI (reg:DI 549 [ _463 ])
                    (reg:DI 551 [ _465 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":169 222 {*adddi_1}
     (nil))
(insn 1004 1003 1005 57 (set (reg:SI 976)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [1 iw+0 S4 A32])) "CALRCH.f":169 86 {*movsi_internal}
     (nil))
(insn 1005 1004 1006 57 (set (reg:DI 553 [ _467 ])
        (sign_extend:DI (reg:SI 976))) "CALRCH.f":169 149 {*extendsidi2_rex64}
     (nil))
(insn 1006 1005 1007 57 (parallel [
            (set (reg:DI 554 [ _468 ])
                (plus:DI (reg:DI 552 [ _466 ])
                    (reg:DI 553 [ _467 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":169 222 {*adddi_1}
     (nil))
(insn 1007 1006 1008 57 (parallel [
            (set (reg:DI 555 [ _469 ])
                (plus:DI (reg:DI 554 [ _468 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":169 222 {*adddi_1}
     (nil))
(insn 1008 1007 1009 57 (set (reg/f:DI 977)
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7fe96ef1b900 vrbls>)) "CALRCH.f":169 85 {*movdi_internal}
     (nil))
(insn 1009 1008 1010 57 (parallel [
            (set (reg:DI 978)
                (plus:DI (reg:DI 555 [ _469 ])
                    (const_int 1214871 [0x128997])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":169 222 {*adddi_1}
     (nil))
(insn 1010 1009 1011 57 (set (reg:SF 556 [ _470 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 978)
                    (const_int 4 [0x4]))
                (reg/f:DI 977)) [2 vrbls.v S4 A32])) "CALRCH.f":169 131 {*movsf_internal}
     (nil))
(insn 1011 1010 1012 57 (set (reg:SF 557 [ _471 ])
        (plus:SF (reg:SF 546 [ _460 ])
            (reg:SF 556 [ _470 ]))) "CALRCH.f":169 838 {*fop_sf_comm}
     (nil))
(insn 1012 1011 1013 57 (set (reg:SI 979)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALRCH.f":169 86 {*movsi_internal}
     (nil))
(insn 1013 1012 1014 57 (parallel [
            (set (reg:SI 558 [ _472 ])
                (plus:SI (reg:SI 979)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":169 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 1014 1013 1015 57 (set (reg:DI 559 [ _473 ])
        (sign_extend:DI (reg:SI 558 [ _472 ]))) "CALRCH.f":169 149 {*extendsidi2_rex64}
     (nil))
(insn 1015 1014 1016 57 (parallel [
            (set (reg:DI 560 [ _474 ])
                (mult:DI (reg:DI 559 [ _473 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":169 349 {*muldi3_1}
     (nil))
(insn 1016 1015 1017 57 (set (reg:SI 980)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":169 86 {*movsi_internal}
     (nil))
(insn 1017 1016 1018 57 (set (reg:DI 561 [ _475 ])
        (sign_extend:DI (reg:SI 980))) "CALRCH.f":169 149 {*extendsidi2_rex64}
     (nil))
(insn 1018 1017 1019 57 (parallel [
            (set (reg:DI 562 [ _476 ])
                (mult:DI (reg:DI 561 [ _475 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":169 349 {*muldi3_1}
     (nil))
(insn 1019 1018 1020 57 (parallel [
            (set (reg:DI 563 [ _477 ])
                (plus:DI (reg:DI 560 [ _474 ])
                    (reg:DI 562 [ _476 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":169 222 {*adddi_1}
     (nil))
(insn 1020 1019 1021 57 (set (reg:SI 981)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -20 [0xffffffffffffffec])) [1 ie+0 S4 A32])) "CALRCH.f":169 86 {*movsi_internal}
     (nil))
(insn 1021 1020 1022 57 (set (reg:DI 564 [ _478 ])
        (sign_extend:DI (reg:SI 981))) "CALRCH.f":169 149 {*extendsidi2_rex64}
     (nil))
(insn 1022 1021 1023 57 (parallel [
            (set (reg:DI 565 [ _479 ])
                (plus:DI (reg:DI 563 [ _477 ])
                    (reg:DI 564 [ _478 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":169 222 {*adddi_1}
     (nil))
(insn 1023 1022 1024 57 (parallel [
            (set (reg:DI 566 [ _480 ])
                (plus:DI (reg:DI 565 [ _479 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":169 222 {*adddi_1}
     (nil))
(insn 1024 1023 1025 57 (set (reg/f:DI 982)
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7fe96ef1b900 vrbls>)) "CALRCH.f":169 85 {*movdi_internal}
     (nil))
(insn 1025 1024 1026 57 (parallel [
            (set (reg:DI 983)
                (plus:DI (reg:DI 566 [ _480 ])
                    (const_int 1214871 [0x128997])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":169 222 {*adddi_1}
     (nil))
(insn 1026 1025 1027 57 (set (reg:SF 567 [ _481 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 983)
                    (const_int 4 [0x4]))
                (reg/f:DI 982)) [2 vrbls.v S4 A32])) "CALRCH.f":169 131 {*movsf_internal}
     (nil))
(insn 1027 1026 1028 57 (set (reg:SF 568 [ _482 ])
        (plus:SF (reg:SF 557 [ _471 ])
            (reg:SF 567 [ _481 ]))) "CALRCH.f":169 838 {*fop_sf_comm}
     (nil))
(insn 1028 1027 1029 57 (set (reg:SI 984)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALRCH.f":169 86 {*movsi_internal}
     (nil))
(insn 1029 1028 1030 57 (parallel [
            (set (reg:SI 569 [ _483 ])
                (plus:SI (reg:SI 984)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":169 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 1030 1029 1031 57 (set (reg:DI 570 [ _484 ])
        (sign_extend:DI (reg:SI 569 [ _483 ]))) "CALRCH.f":169 149 {*extendsidi2_rex64}
     (nil))
(insn 1031 1030 1032 57 (parallel [
            (set (reg:DI 571 [ _485 ])
                (mult:DI (reg:DI 570 [ _484 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":169 349 {*muldi3_1}
     (nil))
(insn 1032 1031 1033 57 (set (reg:SI 985)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":169 86 {*movsi_internal}
     (nil))
(insn 1033 1032 1034 57 (parallel [
            (set (reg:SI 572 [ _486 ])
                (plus:SI (reg:SI 985)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":169 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 1034 1033 1035 57 (set (reg:DI 573 [ _487 ])
        (sign_extend:DI (reg:SI 572 [ _486 ]))) "CALRCH.f":169 149 {*extendsidi2_rex64}
     (nil))
(insn 1035 1034 1036 57 (parallel [
            (set (reg:DI 574 [ _488 ])
                (mult:DI (reg:DI 573 [ _487 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":169 349 {*muldi3_1}
     (nil))
(insn 1036 1035 1037 57 (parallel [
            (set (reg:DI 575 [ _489 ])
                (plus:DI (reg:DI 571 [ _485 ])
                    (reg:DI 574 [ _488 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":169 222 {*adddi_1}
     (nil))
(insn 1037 1036 1038 57 (set (reg:SI 986)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALRCH.f":169 86 {*movsi_internal}
     (nil))
(insn 1038 1037 1039 57 (set (reg:DI 576 [ _490 ])
        (sign_extend:DI (reg:SI 986))) "CALRCH.f":169 149 {*extendsidi2_rex64}
     (nil))
(insn 1039 1038 1040 57 (parallel [
            (set (reg:DI 577 [ _491 ])
                (plus:DI (reg:DI 575 [ _489 ])
                    (reg:DI 576 [ _490 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":169 222 {*adddi_1}
     (nil))
(insn 1040 1039 1041 57 (parallel [
            (set (reg:DI 578 [ _492 ])
                (plus:DI (reg:DI 577 [ _491 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":169 222 {*adddi_1}
     (nil))
(insn 1041 1040 1042 57 (set (reg/f:DI 987)
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7fe96ef1b900 vrbls>)) "CALRCH.f":169 85 {*movdi_internal}
     (nil))
(insn 1042 1041 1043 57 (parallel [
            (set (reg:DI 988)
                (plus:DI (reg:DI 578 [ _492 ])
                    (const_int 1214871 [0x128997])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":169 222 {*adddi_1}
     (nil))
(insn 1043 1042 1044 57 (set (reg:SF 579 [ _493 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 988)
                    (const_int 4 [0x4]))
                (reg/f:DI 987)) [2 vrbls.v S4 A32])) "CALRCH.f":169 131 {*movsf_internal}
     (nil))
(insn 1044 1043 1045 57 (set (reg:SF 580 [ _494 ])
        (plus:SF (reg:SF 568 [ _482 ])
            (reg:SF 579 [ _493 ]))) "CALRCH.f":169 838 {*fop_sf_comm}
     (nil))
(insn 1045 1044 1046 57 (set (reg:SF 581 [ _495 ])
        (reg:SF 580 [ _494 ])) "CALRCH.f":169 131 {*movsf_internal}
     (nil))
(insn 1046 1045 1047 57 (set (reg:SF 989)
        (div:SF (reg:SF 581 [ _495 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -32 [0xffffffffffffffe0])) [2 wndslp+0 S4 A32]))) "CALRCH.f":169 841 {*fop_sf_1}
     (nil))
(insn 1047 1046 1048 57 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [2 vlkl+0 S4 A32])
        (reg:SF 989)) "CALRCH.f":169 131 {*movsf_internal}
     (nil))
(insn 1048 1047 1049 57 (set (reg:SI 990)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALRCH.f":170 86 {*movsi_internal}
     (nil))
(insn 1049 1048 1050 57 (set (reg:DI 582 [ _496 ])
        (sign_extend:DI (reg:SI 990))) "CALRCH.f":170 149 {*extendsidi2_rex64}
     (nil))
(insn 1050 1049 1051 57 (parallel [
            (set (reg:DI 583 [ _497 ])
                (mult:DI (reg:DI 582 [ _496 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":170 349 {*muldi3_1}
     (nil))
(insn 1051 1050 1052 57 (set (reg:SI 991)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":170 86 {*movsi_internal}
     (nil))
(insn 1052 1051 1053 57 (set (reg:DI 584 [ _498 ])
        (sign_extend:DI (reg:SI 991))) "CALRCH.f":170 149 {*extendsidi2_rex64}
     (nil))
(insn 1053 1052 1054 57 (parallel [
            (set (reg:DI 585 [ _499 ])
                (mult:DI (reg:DI 584 [ _498 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":170 349 {*muldi3_1}
     (nil))
(insn 1054 1053 1055 57 (parallel [
            (set (reg:DI 586 [ _500 ])
                (plus:DI (reg:DI 583 [ _497 ])
                    (reg:DI 585 [ _499 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":170 222 {*adddi_1}
     (nil))
(insn 1055 1054 1056 57 (set (reg:SI 992)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALRCH.f":170 86 {*movsi_internal}
     (nil))
(insn 1056 1055 1057 57 (set (reg:DI 587 [ _501 ])
        (sign_extend:DI (reg:SI 992))) "CALRCH.f":170 149 {*extendsidi2_rex64}
     (nil))
(insn 1057 1056 1058 57 (parallel [
            (set (reg:DI 588 [ _502 ])
                (plus:DI (reg:DI 586 [ _500 ])
                    (reg:DI 587 [ _501 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":170 222 {*adddi_1}
     (nil))
(insn 1058 1057 1059 57 (parallel [
            (set (reg:DI 589 [ _503 ])
                (plus:DI (reg:DI 588 [ _502 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":170 222 {*adddi_1}
     (nil))
(insn 1059 1058 1060 57 (set (reg/f:DI 993)
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7fe96eef8870 extra>)) "CALRCH.f":170 85 {*movdi_internal}
     (nil))
(insn 1060 1059 1061 57 (parallel [
            (set (reg:DI 994)
                (plus:DI (reg:DI 589 [ _503 ])
                    (const_int 2311218 [0x234432])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":170 222 {*adddi_1}
     (nil))
(insn 1061 1060 1062 57 (set (reg:SF 590 [ _504 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 994)
                    (const_int 4 [0x4]))
                (reg/f:DI 993)) [2 extra.zint S4 A32])) "CALRCH.f":170 131 {*movsf_internal}
     (nil))
(insn 1062 1061 1063 57 (set (reg:SI 995)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALRCH.f":170 86 {*movsi_internal}
     (nil))
(insn 1063 1062 1064 57 (parallel [
            (set (reg:SI 591 [ _505 ])
                (plus:SI (reg:SI 995)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":170 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
            (const_int 2 [0x2]))
        (nil)))
(insn 1064 1063 1065 57 (set (reg:DI 592 [ _506 ])
        (sign_extend:DI (reg:SI 591 [ _505 ]))) "CALRCH.f":170 149 {*extendsidi2_rex64}
     (nil))
(insn 1065 1064 1066 57 (parallel [
            (set (reg:DI 593 [ _507 ])
                (mult:DI (reg:DI 592 [ _506 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":170 349 {*muldi3_1}
     (nil))
(insn 1066 1065 1067 57 (set (reg:SI 996)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":170 86 {*movsi_internal}
     (nil))
(insn 1067 1066 1068 57 (set (reg:DI 594 [ _508 ])
        (sign_extend:DI (reg:SI 996))) "CALRCH.f":170 149 {*extendsidi2_rex64}
     (nil))
(insn 1068 1067 1069 57 (parallel [
            (set (reg:DI 595 [ _509 ])
                (mult:DI (reg:DI 594 [ _508 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":170 349 {*muldi3_1}
     (nil))
(insn 1069 1068 1070 57 (parallel [
            (set (reg:DI 596 [ _510 ])
                (plus:DI (reg:DI 593 [ _507 ])
                    (reg:DI 595 [ _509 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":170 222 {*adddi_1}
     (nil))
(insn 1070 1069 1071 57 (set (reg:SI 997)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALRCH.f":170 86 {*movsi_internal}
     (nil))
(insn 1071 1070 1072 57 (set (reg:DI 597 [ _511 ])
        (sign_extend:DI (reg:SI 997))) "CALRCH.f":170 149 {*extendsidi2_rex64}
     (nil))
(insn 1072 1071 1073 57 (parallel [
            (set (reg:DI 598 [ _512 ])
                (plus:DI (reg:DI 596 [ _510 ])
                    (reg:DI 597 [ _511 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":170 222 {*adddi_1}
     (nil))
(insn 1073 1072 1074 57 (parallel [
            (set (reg:DI 599 [ _513 ])
                (plus:DI (reg:DI 598 [ _512 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":170 222 {*adddi_1}
     (nil))
(insn 1074 1073 1075 57 (set (reg/f:DI 998)
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7fe96eef8870 extra>)) "CALRCH.f":170 85 {*movdi_internal}
     (nil))
(insn 1075 1074 1076 57 (parallel [
            (set (reg:DI 999)
                (plus:DI (reg:DI 599 [ _513 ])
                    (const_int 2311218 [0x234432])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":170 222 {*adddi_1}
     (nil))
(insn 1076 1075 1077 57 (set (reg:SF 600 [ _514 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 999)
                    (const_int 4 [0x4]))
                (reg/f:DI 998)) [2 extra.zint S4 A32])) "CALRCH.f":170 131 {*movsf_internal}
     (nil))
(insn 1077 1076 1078 57 (set (reg:SF 601 [ _515 ])
        (minus:SF (reg:SF 590 [ _504 ])
            (reg:SF 600 [ _514 ]))) "CALRCH.f":170 841 {*fop_sf_1}
     (nil))
(insn 1078 1077 1079 57 (set (reg:SF 602 [ _516 ])
        (reg:SF 601 [ _515 ])) "CALRCH.f":170 131 {*movsf_internal}
     (nil))
(insn 1079 1078 1080 57 (set (reg:SF 1001)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC7") [flags 0x2]) [0  S4 A32])) "CALRCH.f":170 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 5.0e-1 [0x0.8p+0])
        (nil)))
(insn 1080 1079 1081 57 (set (reg:SF 1000)
        (mult:SF (reg:SF 602 [ _516 ])
            (reg:SF 1001))) "CALRCH.f":170 838 {*fop_sf_comm}
     (nil))
(insn 1081 1080 1082 57 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -52 [0xffffffffffffffcc])) [2 dzkl+0 S4 A32])
        (reg:SF 1000)) "CALRCH.f":170 131 {*movsf_internal}
     (nil))
(insn 1082 1081 1083 57 (set (reg:SF 1003)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC4") [flags 0x2]) [0  S4 A32])) "CALRCH.f":171 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 1083 1082 1084 57 (set (reg:SF 1002)
        (div:SF (reg:SF 1003)
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -52 [0xffffffffffffffcc])) [2 dzkl+0 S4 A32]))) "CALRCH.f":171 841 {*fop_sf_1}
     (nil))
(insn 1084 1083 1085 57 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [2 rdzkl+0 S4 A32])
        (reg:SF 1002)) "CALRCH.f":171 131 {*movsf_internal}
     (nil))
(insn 1085 1084 1086 57 (set (reg:SI 1004)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALRCH.f":172 86 {*movsi_internal}
     (nil))
(insn 1086 1085 1087 57 (set (reg:DI 603 [ _517 ])
        (sign_extend:DI (reg:SI 1004))) "CALRCH.f":172 149 {*extendsidi2_rex64}
     (nil))
(insn 1087 1086 1088 57 (parallel [
            (set (reg:DI 604 [ _518 ])
                (mult:DI (reg:DI 603 [ _517 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":172 349 {*muldi3_1}
     (nil))
(insn 1088 1087 1089 57 (set (reg:SI 1005)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":172 86 {*movsi_internal}
     (nil))
(insn 1089 1088 1090 57 (set (reg:DI 605 [ _519 ])
        (sign_extend:DI (reg:SI 1005))) "CALRCH.f":172 149 {*extendsidi2_rex64}
     (nil))
(insn 1090 1089 1091 57 (parallel [
            (set (reg:DI 606 [ _520 ])
                (mult:DI (reg:DI 605 [ _519 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":172 349 {*muldi3_1}
     (nil))
(insn 1091 1090 1092 57 (parallel [
            (set (reg:DI 607 [ _521 ])
                (plus:DI (reg:DI 604 [ _518 ])
                    (reg:DI 606 [ _520 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":172 222 {*adddi_1}
     (nil))
(insn 1092 1091 1093 57 (set (reg:SI 1006)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALRCH.f":172 86 {*movsi_internal}
     (nil))
(insn 1093 1092 1094 57 (set (reg:DI 608 [ _522 ])
        (sign_extend:DI (reg:SI 1006))) "CALRCH.f":172 149 {*extendsidi2_rex64}
     (nil))
(insn 1094 1093 1095 57 (parallel [
            (set (reg:DI 609 [ _523 ])
                (plus:DI (reg:DI 607 [ _521 ])
                    (reg:DI 608 [ _522 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":172 222 {*adddi_1}
     (nil))
(insn 1095 1094 1096 57 (parallel [
            (set (reg:DI 610 [ _524 ])
                (plus:DI (reg:DI 609 [ _523 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":172 222 {*adddi_1}
     (nil))
(insn 1096 1095 1097 57 (set (reg/f:DI 1007)
        (symbol_ref:DI ("pvrbls_") [flags 0x202]  <var_decl 0x7fe96ef14cf0 pvrbls>)) "CALRCH.f":172 85 {*movdi_internal}
     (nil))
(insn 1097 1096 1098 57 (parallel [
            (set (reg:DI 1008)
                (plus:DI (reg:DI 610 [ _524 ])
                    (const_int 562989 [0x8972d])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":172 222 {*adddi_1}
     (nil))
(insn 1098 1097 1099 57 (set (reg:SF 671 [ M.0_602 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 1008)
                    (const_int 4 [0x4]))
                (reg/f:DI 1007)) [2 pvrbls.q2 S4 A32])) "CALRCH.f":172 131 {*movsf_internal}
     (nil))
(insn 1099 1098 1100 57 (set (reg:SF 1011)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC8") [flags 0x2]) [0  S4 A32])) "CALRCH.f":172 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 9.99999974737875163555145263671875e-6 [0x0.a7c5acp-16])
        (nil)))
(insn 1100 1099 1101 57 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 1011)
            (reg:SF 671 [ M.0_602 ]))) "CALRCH.f":172 53 {*cmpisf}
     (nil))
(insn 1101 1100 1102 57 (set (reg:QI 1010)
        (gt:QI (reg:CCFP 17 flags)
            (const_int 0 [0]))) "CALRCH.f":172 678 {*setcc_qi}
     (nil))
(insn 1102 1101 1103 57 (set (reg:SI 611 [ _525 ])
        (zero_extend:SI (reg:QI 1010))) "CALRCH.f":172 140 {*zero_extendqisi2}
     (nil))
(insn 1103 1102 1104 57 (set (reg:CCFP 17 flags)
        (unspec:CCFP [
                (compare:CCFP (reg:SF 671 [ M.0_602 ])
                    (reg:SF 671 [ M.0_602 ]))
            ] UNSPEC_NOTRAP)) "CALRCH.f":172 54 {*cmpiusf}
     (nil))
(insn 1104 1103 1105 57 (set (reg:QI 1012)
        (unordered:QI (reg:CCFP 17 flags)
            (const_int 0 [0]))) "CALRCH.f":172 678 {*setcc_qi}
     (nil))
(insn 1105 1104 1106 57 (set (reg:SI 612 [ _526 ])
        (zero_extend:SI (reg:QI 1012))) "CALRCH.f":172 140 {*zero_extendqisi2}
     (nil))
(insn 1106 1105 1107 57 (parallel [
            (set (reg:SI 613 [ _527 ])
                (ior:SI (reg:SI 611 [ _525 ])
                    (reg:SI 612 [ _526 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":172 450 {*iorsi_1}
     (nil))
(insn 1107 1106 1108 57 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 613 [ _527 ])
            (const_int 0 [0]))) "CALRCH.f":172 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1108 1107 1109 57 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1111)
            (pc))) "CALRCH.f":172 682 {*jcc}
     (nil)
 -> 1111)
;;  succ:       58 (FALLTHRU)
;;              59

;; basic block 58, loop depth 3, maybe hot
;;  prev block 57, next block 59, flags: (NEW, REACHABLE, RTL)
;;  pred:       57 (FALLTHRU)
(note 1109 1108 1110 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(insn 1110 1109 1111 58 (set (reg:SF 671 [ M.0_602 ])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC8") [flags 0x2]) [0  S4 A32])) "CALRCH.f":172 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 9.99999974737875163555145263671875e-6 [0x0.a7c5acp-16])
        (nil)))
;;  succ:       59 (FALLTHRU)

;; basic block 59, loop depth 3, maybe hot
;;  prev block 58, next block 60, flags: (NEW, REACHABLE, RTL)
;;  pred:       57
;;              58 (FALLTHRU)
(code_label 1111 1110 1112 59 36 (nil) [1 uses])
(note 1112 1111 1113 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(insn 1113 1112 1114 59 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -60 [0xffffffffffffffc4])) [2 q2kl+0 S4 A32])
        (reg:SF 671 [ M.0_602 ])) "CALRCH.f":172 131 {*movsf_internal}
     (nil))
(insn 1114 1113 1115 59 (set (reg:SF 1013)
        (sqrt:SF (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -60 [0xffffffffffffffc4])) [2 q2kl+0 S4 A32]))) "CALRCH.f":173 872 {*sqrtsf2_sse}
     (nil))
(insn 1115 1114 1116 59 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -64 [0xffffffffffffffc0])) [2 qroot+0 S4 A32])
        (reg:SF 1013)) "CALRCH.f":173 131 {*movsf_internal}
     (nil))
(insn 1116 1115 1117 59 (set (reg:SI 1014)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALRCH.f":174 86 {*movsi_internal}
     (nil))
(insn 1117 1116 1118 59 (set (reg:DI 614 [ _528 ])
        (sign_extend:DI (reg:SI 1014))) "CALRCH.f":174 149 {*extendsidi2_rex64}
     (nil))
(insn 1118 1117 1119 59 (parallel [
            (set (reg:DI 615 [ _529 ])
                (mult:DI (reg:DI 614 [ _528 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":174 349 {*muldi3_1}
     (nil))
(insn 1119 1118 1120 59 (set (reg:SI 1015)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":174 86 {*movsi_internal}
     (nil))
(insn 1120 1119 1121 59 (set (reg:DI 616 [ _530 ])
        (sign_extend:DI (reg:SI 1015))) "CALRCH.f":174 149 {*extendsidi2_rex64}
     (nil))
(insn 1121 1120 1122 59 (parallel [
            (set (reg:DI 617 [ _531 ])
                (mult:DI (reg:DI 616 [ _530 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":174 349 {*muldi3_1}
     (nil))
(insn 1122 1121 1123 59 (parallel [
            (set (reg:DI 618 [ _532 ])
                (plus:DI (reg:DI 615 [ _529 ])
                    (reg:DI 617 [ _531 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":174 222 {*adddi_1}
     (nil))
(insn 1123 1122 1124 59 (set (reg:SI 1016)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALRCH.f":174 86 {*movsi_internal}
     (nil))
(insn 1124 1123 1125 59 (set (reg:DI 619 [ _533 ])
        (sign_extend:DI (reg:SI 1016))) "CALRCH.f":174 149 {*extendsidi2_rex64}
     (nil))
(insn 1125 1124 1126 59 (parallel [
            (set (reg:DI 620 [ _534 ])
                (plus:DI (reg:DI 618 [ _532 ])
                    (reg:DI 619 [ _533 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":174 222 {*adddi_1}
     (nil))
(insn 1126 1125 1127 59 (parallel [
            (set (reg:DI 621 [ _535 ])
                (plus:DI (reg:DI 620 [ _534 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":174 222 {*adddi_1}
     (nil))
(insn 1127 1126 1128 59 (set (reg/f:DI 1017)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -104 [0xffffffffffffff98])) [3 el+0 S8 A64])) "CALRCH.f":174 85 {*movdi_internal}
     (nil))
(insn 1128 1127 1129 59 (set (reg:SF 1018)
        (mem:SF (plus:DI (mult:DI (reg:DI 621 [ _535 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 1017)) [2 *el_715(D) S4 A32])) "CALRCH.f":174 131 {*movsf_internal}
     (nil))
(insn 1129 1128 1130 59 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -68 [0xffffffffffffffbc])) [2 elkl+0 S4 A32])
        (reg:SF 1018)) "CALRCH.f":174 131 {*movsf_internal}
     (nil))
(insn 1130 1129 1131 59 (set (reg:SF 672 [ M.1_603 ])
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -68 [0xffffffffffffffbc])) [2 elkl+0 S4 A32])) "CALRCH.f":175 131 {*movsf_internal}
     (nil))
(insn 1131 1130 1132 59 (set (reg:SF 1021)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC9") [flags 0x2]) [0  S4 A32])) "CALRCH.f":175 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 2.0000000298023223876953125e-1 [0x0.cccccdp-2])
        (nil)))
(insn 1132 1131 1133 59 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 1021)
            (reg:SF 672 [ M.1_603 ]))) "CALRCH.f":175 53 {*cmpisf}
     (nil))
(insn 1133 1132 1134 59 (set (reg:QI 1020)
        (gt:QI (reg:CCFP 17 flags)
            (const_int 0 [0]))) "CALRCH.f":175 678 {*setcc_qi}
     (nil))
(insn 1134 1133 1135 59 (set (reg:SI 622 [ _536 ])
        (zero_extend:SI (reg:QI 1020))) "CALRCH.f":175 140 {*zero_extendqisi2}
     (nil))
(insn 1135 1134 1136 59 (set (reg:CCFP 17 flags)
        (unspec:CCFP [
                (compare:CCFP (reg:SF 672 [ M.1_603 ])
                    (reg:SF 672 [ M.1_603 ]))
            ] UNSPEC_NOTRAP)) "CALRCH.f":175 54 {*cmpiusf}
     (nil))
(insn 1136 1135 1137 59 (set (reg:QI 1022)
        (unordered:QI (reg:CCFP 17 flags)
            (const_int 0 [0]))) "CALRCH.f":175 678 {*setcc_qi}
     (nil))
(insn 1137 1136 1138 59 (set (reg:SI 623 [ _537 ])
        (zero_extend:SI (reg:QI 1022))) "CALRCH.f":175 140 {*zero_extendqisi2}
     (nil))
(insn 1138 1137 1139 59 (parallel [
            (set (reg:SI 624 [ _538 ])
                (ior:SI (reg:SI 622 [ _536 ])
                    (reg:SI 623 [ _537 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":175 450 {*iorsi_1}
     (nil))
(insn 1139 1138 1140 59 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 624 [ _538 ])
            (const_int 0 [0]))) "CALRCH.f":175 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1140 1139 1141 59 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1143)
            (pc))) "CALRCH.f":175 682 {*jcc}
     (nil)
 -> 1143)
;;  succ:       60 (FALLTHRU)
;;              61

;; basic block 60, loop depth 3, maybe hot
;;  prev block 59, next block 61, flags: (NEW, REACHABLE, RTL)
;;  pred:       59 (FALLTHRU)
(note 1141 1140 1142 60 [bb 60] NOTE_INSN_BASIC_BLOCK)
(insn 1142 1141 1143 60 (set (reg:SF 672 [ M.1_603 ])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC9") [flags 0x2]) [0  S4 A32])) "CALRCH.f":175 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 2.0000000298023223876953125e-1 [0x0.cccccdp-2])
        (nil)))
;;  succ:       61 (FALLTHRU)

;; basic block 61, loop depth 3, maybe hot
;;  prev block 60, next block 62, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       59
;;              60 (FALLTHRU)
(code_label 1143 1142 1144 61 37 (nil) [1 uses])
(note 1144 1143 1145 61 [bb 61] NOTE_INSN_BASIC_BLOCK)
(insn 1145 1144 1146 61 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -68 [0xffffffffffffffbc])) [2 elkl+0 S4 A32])
        (reg:SF 672 [ M.1_603 ])) "CALRCH.f":175 131 {*movsf_internal}
     (nil))
(insn 1146 1145 1147 61 (set (reg:SF 1024)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -68 [0xffffffffffffffbc])) [2 elkl+0 S4 A32])) "CALRCH.f":176 131 {*movsf_internal}
     (nil))
(insn 1147 1146 1148 61 (set (reg:SF 1023)
        (mult:SF (reg:SF 1024)
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -68 [0xffffffffffffffbc])) [2 elkl+0 S4 A32]))) "CALRCH.f":176 838 {*fop_sf_comm}
     (nil))
(insn 1148 1147 1149 61 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [2 elklsq+0 S4 A32])
        (reg:SF 1023)) "CALRCH.f":176 131 {*movsf_internal}
     (nil))
(insn 1149 1148 1150 61 (set (reg:SI 1025)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALRCH.f":177 86 {*movsi_internal}
     (nil))
(insn 1150 1149 1151 61 (set (reg:DI 625 [ _539 ])
        (sign_extend:DI (reg:SI 1025))) "CALRCH.f":177 149 {*extendsidi2_rex64}
     (nil))
(insn 1151 1150 1152 61 (parallel [
            (set (reg:DI 626 [ _540 ])
                (mult:DI (reg:DI 625 [ _539 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":177 349 {*muldi3_1}
     (nil))
(insn 1152 1151 1153 61 (set (reg:SI 1026)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":177 86 {*movsi_internal}
     (nil))
(insn 1153 1152 1154 61 (set (reg:DI 627 [ _541 ])
        (sign_extend:DI (reg:SI 1026))) "CALRCH.f":177 149 {*extendsidi2_rex64}
     (nil))
(insn 1154 1153 1155 61 (parallel [
            (set (reg:DI 628 [ _542 ])
                (mult:DI (reg:DI 627 [ _541 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":177 349 {*muldi3_1}
     (nil))
(insn 1155 1154 1156 61 (parallel [
            (set (reg:DI 629 [ _543 ])
                (plus:DI (reg:DI 626 [ _540 ])
                    (reg:DI 628 [ _542 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":177 222 {*adddi_1}
     (nil))
(insn 1156 1155 1157 61 (set (reg:SI 1027)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALRCH.f":177 86 {*movsi_internal}
     (nil))
(insn 1157 1156 1158 61 (set (reg:DI 630 [ _544 ])
        (sign_extend:DI (reg:SI 1027))) "CALRCH.f":177 149 {*extendsidi2_rex64}
     (nil))
(insn 1158 1157 1159 61 (parallel [
            (set (reg:DI 631 [ _545 ])
                (plus:DI (reg:DI 629 [ _543 ])
                    (reg:DI 630 [ _544 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":177 222 {*adddi_1}
     (nil))
(insn 1159 1158 1160 61 (parallel [
            (set (reg:DI 632 [ _546 ])
                (plus:DI (reg:DI 631 [ _545 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":177 222 {*adddi_1}
     (nil))
(insn 1160 1159 1161 61 (set (reg/f:DI 1028)
        (symbol_ref:DI ("thv.4234") [flags 0x202]  <var_decl 0x7fe96ef1e900 thv>)) "CALRCH.f":177 85 {*movdi_internal}
     (nil))
(insn 1161 1160 1162 61 (set (reg:SF 633 [ _547 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 632 [ _546 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 1028)) [2 thv S4 A32])) "CALRCH.f":177 131 {*movsf_internal}
     (nil))
(insn 1162 1161 1163 61 (set (reg:SI 1029)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALRCH.f":177 86 {*movsi_internal}
     (nil))
(insn 1163 1162 1164 61 (parallel [
            (set (reg:SI 634 [ _548 ])
                (plus:SI (reg:SI 1029)
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":177 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 1164 1163 1165 61 (set (reg:DI 635 [ _549 ])
        (sign_extend:DI (reg:SI 634 [ _548 ]))) "CALRCH.f":177 149 {*extendsidi2_rex64}
     (nil))
(insn 1165 1164 1166 61 (parallel [
            (set (reg:DI 636 [ _550 ])
                (mult:DI (reg:DI 635 [ _549 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":177 349 {*muldi3_1}
     (nil))
(insn 1166 1165 1167 61 (set (reg:SI 1030)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":177 86 {*movsi_internal}
     (nil))
(insn 1167 1166 1168 61 (set (reg:DI 637 [ _551 ])
        (sign_extend:DI (reg:SI 1030))) "CALRCH.f":177 149 {*extendsidi2_rex64}
     (nil))
(insn 1168 1167 1169 61 (parallel [
            (set (reg:DI 638 [ _552 ])
                (mult:DI (reg:DI 637 [ _551 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":177 349 {*muldi3_1}
     (nil))
(insn 1169 1168 1170 61 (parallel [
            (set (reg:DI 639 [ _553 ])
                (plus:DI (reg:DI 636 [ _550 ])
                    (reg:DI 638 [ _552 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":177 222 {*adddi_1}
     (nil))
(insn 1170 1169 1171 61 (set (reg:SI 1031)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALRCH.f":177 86 {*movsi_internal}
     (nil))
(insn 1171 1170 1172 61 (set (reg:DI 640 [ _554 ])
        (sign_extend:DI (reg:SI 1031))) "CALRCH.f":177 149 {*extendsidi2_rex64}
     (nil))
(insn 1172 1171 1173 61 (parallel [
            (set (reg:DI 641 [ _555 ])
                (plus:DI (reg:DI 639 [ _553 ])
                    (reg:DI 640 [ _554 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":177 222 {*adddi_1}
     (nil))
(insn 1173 1172 1174 61 (parallel [
            (set (reg:DI 642 [ _556 ])
                (plus:DI (reg:DI 641 [ _555 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":177 222 {*adddi_1}
     (nil))
(insn 1174 1173 1175 61 (set (reg/f:DI 1032)
        (symbol_ref:DI ("thv.4234") [flags 0x202]  <var_decl 0x7fe96ef1e900 thv>)) "CALRCH.f":177 85 {*movdi_internal}
     (nil))
(insn 1175 1174 1176 61 (set (reg:SF 643 [ _557 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 642 [ _556 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 1032)) [2 thv S4 A32])) "CALRCH.f":177 131 {*movsf_internal}
     (nil))
(insn 1176 1175 1177 61 (set (reg:SF 1033)
        (minus:SF (reg:SF 633 [ _547 ])
            (reg:SF 643 [ _557 ]))) "CALRCH.f":177 841 {*fop_sf_1}
     (nil))
(insn 1177 1176 1178 61 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -76 [0xffffffffffffffb4])) [2 dthvkl+0 S4 A32])
        (reg:SF 1033)) "CALRCH.f":177 131 {*movsf_internal}
     (nil))
(insn 1178 1177 1179 61 (set (reg:SF 1034)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -36 [0xffffffffffffffdc])) [2 uhkl+0 S4 A32])) "CALRCH.f":178 131 {*movsf_internal}
     (nil))
(insn 1179 1178 1180 61 (set (reg:SF 644 [ _558 ])
        (minus:SF (reg:SF 1034)
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -40 [0xffffffffffffffd8])) [2 ulkl+0 S4 A32]))) "CALRCH.f":178 841 {*fop_sf_1}
     (nil))
(insn 1180 1179 1181 61 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [2 dukl+0 S4 A32])
        (reg:SF 644 [ _558 ])) "CALRCH.f":178 131 {*movsf_internal}
     (nil))
(insn 1181 1180 1182 61 (set (reg:SF 1035)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -44 [0xffffffffffffffd4])) [2 vhkl+0 S4 A32])) "CALRCH.f":179 131 {*movsf_internal}
     (nil))
(insn 1182 1181 1183 61 (set (reg:SF 645 [ _559 ])
        (minus:SF (reg:SF 1035)
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])) [2 vlkl+0 S4 A32]))) "CALRCH.f":179 841 {*fop_sf_1}
     (nil))
(insn 1183 1182 1184 61 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -84 [0xffffffffffffffac])) [2 dvkl+0 S4 A32])
        (reg:SF 645 [ _559 ])) "CALRCH.f":179 131 {*movsf_internal}
     (nil))
(insn 1184 1183 1185 61 (set (reg:SF 1036)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [2 dukl+0 S4 A32])) "CALRCH.f":180 131 {*movsf_internal}
     (nil))
(insn 1185 1184 1186 61 (set (reg:SF 646 [ _560 ])
        (mult:SF (reg:SF 1036)
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -56 [0xffffffffffffffc8])) [2 rdzkl+0 S4 A32]))) "CALRCH.f":180 838 {*fop_sf_comm}
     (nil))
(insn 1186 1185 1187 61 (set (reg:SF 705 [ _724 ])
        (reg:SF 646 [ _560 ])) "CALRCH.f":180 131 {*movsf_internal}
     (nil))
(insn 1187 1186 1188 61 (set (reg:SF 706 [ _725 ])
        (mult:SF (reg:SF 705 [ _724 ])
            (reg:SF 705 [ _724 ]))) "CALRCH.f":180 838 {*fop_sf_comm}
     (nil))
(insn 1188 1187 1189 61 (set (reg:SF 1037)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -84 [0xffffffffffffffac])) [2 dvkl+0 S4 A32])) "CALRCH.f":180 131 {*movsf_internal}
     (nil))
(insn 1189 1188 1190 61 (set (reg:SF 647 [ _561 ])
        (mult:SF (reg:SF 1037)
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -56 [0xffffffffffffffc8])) [2 rdzkl+0 S4 A32]))) "CALRCH.f":180 838 {*fop_sf_comm}
     (nil))
(insn 1190 1189 1191 61 (set (reg:SF 707 [ _726 ])
        (reg:SF 647 [ _561 ])) "CALRCH.f":180 131 {*movsf_internal}
     (nil))
(insn 1191 1190 1192 61 (set (reg:SF 708 [ _727 ])
        (mult:SF (reg:SF 707 [ _726 ])
            (reg:SF 707 [ _726 ]))) "CALRCH.f":180 838 {*fop_sf_comm}
     (nil))
(insn 1192 1191 1193 61 (set (reg:SF 648 [ _562 ])
        (plus:SF (reg:SF 706 [ _725 ])
            (reg:SF 708 [ _727 ]))) "CALRCH.f":180 838 {*fop_sf_comm}
     (nil))
(insn 1193 1192 1194 61 (set (reg/f:DI 1038)
        (symbol_ref:DI ("phys_") [flags 0x202]  <var_decl 0x7fe96ef06ea0 phys>)) "CALRCH.f":180 85 {*movdi_internal}
     (nil))
(insn 1194 1193 1195 61 (set (mem/c:SF (plus:DI (reg/f:DI 1038)
                (const_int 28 [0x1c])) [2 phys.cs+0 S4 A32])
        (reg:SF 648 [ _562 ])) "CALRCH.f":180 131 {*movsf_internal}
     (nil))
(insn 1195 1194 1196 61 (set (reg/f:DI 1039)
        (symbol_ref:DI ("phys_") [flags 0x202]  <var_decl 0x7fe96ef06ea0 phys>)) "CALRCH.f":1 85 {*movdi_internal}
     (nil))
(insn 1196 1195 1197 61 (set (reg:SF 649 [ _563 ])
        (mem/c:SF (plus:DI (reg/f:DI 1039)
                (const_int 28 [0x1c])) [2 phys.cs+0 S4 A32])) "CALRCH.f":1 131 {*movsf_internal}
     (nil))
(insn 1197 1196 1198 61 (set (reg:SF 1040)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC10") [flags 0x2]) [0  S4 A32])) "CALRCH.f":184 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 9.99999993922529029077850282192230224609375e-9 [0x0.abcc77p-26])
        (nil)))
(insn 1198 1197 1199 61 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 1040)
            (reg:SF 649 [ _563 ]))) "CALRCH.f":184 53 {*cmpisf}
     (nil))
(jump_insn 1199 1198 1278 61 (set (pc)
        (if_then_else (ge (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1282)
            (pc))) "CALRCH.f":184 682 {*jcc}
     (nil)
 -> 1282)
;;  succ:       64
;;              62 (FALLTHRU)

;; basic block 62, loop depth 3, maybe hot
;;  prev block 61, next block 64, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       61 (FALLTHRU)
(note 1278 1199 1200 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1200 1278 1201 62 (set (pc)
        (label_ref 1220)) "CALRCH.f":184 683 {jump}
     (nil)
 -> 1220)
;;  succ:       65

(barrier 1201 1200 1282)
;; basic block 64, loop depth 3, maybe hot
;;  prev block 62, next block 65, flags: (NEW, REACHABLE, RTL)
;;  pred:       61
(code_label 1282 1201 1203 64 46 (nil) [1 uses])
(note 1203 1282 1204 64 [bb 64] NOTE_INSN_BASIC_BLOCK)
(insn 1204 1203 1205 64 (set (reg:SI 1041)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALRCH.f":189 86 {*movsi_internal}
     (nil))
(insn 1205 1204 1206 64 (set (reg:DI 650 [ _564 ])
        (sign_extend:DI (reg:SI 1041))) "CALRCH.f":189 149 {*extendsidi2_rex64}
     (nil))
(insn 1206 1205 1207 64 (parallel [
            (set (reg:DI 651 [ _565 ])
                (mult:DI (reg:DI 650 [ _564 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":189 349 {*muldi3_1}
     (nil))
(insn 1207 1206 1208 64 (set (reg:SI 1042)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":189 86 {*movsi_internal}
     (nil))
(insn 1208 1207 1209 64 (set (reg:DI 652 [ _566 ])
        (sign_extend:DI (reg:SI 1042))) "CALRCH.f":189 149 {*extendsidi2_rex64}
     (nil))
(insn 1209 1208 1210 64 (parallel [
            (set (reg:DI 653 [ _567 ])
                (mult:DI (reg:DI 652 [ _566 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":189 349 {*muldi3_1}
     (nil))
(insn 1210 1209 1211 64 (parallel [
            (set (reg:DI 654 [ _568 ])
                (plus:DI (reg:DI 651 [ _565 ])
                    (reg:DI 653 [ _567 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":189 222 {*adddi_1}
     (nil))
(insn 1211 1210 1212 64 (set (reg:SI 1043)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALRCH.f":189 86 {*movsi_internal}
     (nil))
(insn 1212 1211 1213 64 (set (reg:DI 655 [ _569 ])
        (sign_extend:DI (reg:SI 1043))) "CALRCH.f":189 149 {*extendsidi2_rex64}
     (nil))
(insn 1213 1212 1214 64 (parallel [
            (set (reg:DI 656 [ _570 ])
                (plus:DI (reg:DI 654 [ _568 ])
                    (reg:DI 655 [ _569 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":189 222 {*adddi_1}
     (nil))
(insn 1214 1213 1215 64 (parallel [
            (set (reg:DI 657 [ _571 ])
                (plus:DI (reg:DI 656 [ _570 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":189 222 {*adddi_1}
     (nil))
(insn 1215 1214 1216 64 (set (reg:SF 658 [ _572 ])
        (mem/c:SF (symbol_ref:DI ("options_") [flags 0x2]  <var_decl 0x7fe96ef06240 options>) [2 options.spval+0 S4 A128])) "CALRCH.f":1 131 {*movsf_internal}
     (nil))
(insn 1216 1215 1217 64 (set (reg/f:DI 1044)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -112 [0xffffffffffffff90])) [3 richno+0 S8 A64])) "CALRCH.f":189 85 {*movdi_internal}
     (nil))
(insn 1217 1216 1218 64 (set (mem:SF (plus:DI (mult:DI (reg:DI 657 [ _571 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 1044)) [2 *richno_631(D) S4 A32])
        (reg:SF 658 [ _572 ])) "CALRCH.f":189 131 {*movsf_internal}
     (nil))
(jump_insn 1218 1217 1219 64 (set (pc)
        (label_ref 1250)) 683 {jump}
     (nil)
 -> 1250)
;;  succ:       66

(barrier 1219 1218 1220)
;; basic block 65, loop depth 3, maybe hot
;;  prev block 64, next block 66, flags: (NEW, REACHABLE, RTL)
;;  pred:       62
(code_label 1220 1219 1221 65 38 (nil) [1 uses])
(note 1221 1220 1222 65 [bb 65] NOTE_INSN_BASIC_BLOCK)
(insn 1222 1221 1223 65 (set (reg:SF 1045)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -76 [0xffffffffffffffb4])) [2 dthvkl+0 S4 A32])) "CALRCH.f":195 131 {*movsf_internal}
     (nil))
(insn 1223 1222 1224 65 (set (reg:SF 1046)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC11") [flags 0x2]) [0  S4 A32])) "CALRCH.f":195 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 3.5966001451015472412109375e-2 [0x0.935116p-4])
        (nil)))
(insn 1224 1223 1225 65 (set (reg:SF 659 [ _573 ])
        (mult:SF (reg:SF 1045)
            (reg:SF 1046))) "CALRCH.f":195 838 {*fop_sf_comm}
     (nil))
(insn 1225 1224 1226 65 (set (reg:SF 660 [ _574 ])
        (mult:SF (reg:SF 659 [ _573 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -56 [0xffffffffffffffc8])) [2 rdzkl+0 S4 A32]))) "CALRCH.f":195 838 {*fop_sf_comm}
     (nil))
(insn 1226 1225 1227 65 (set (reg:V4SF 1048)
        (mem/u/c:V4SF (symbol_ref/u:DI ("*.LC12") [flags 0x2]) [0  S16 A128])) "CALRCH.f":195 1282 {movv4sf_internal}
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF -0.0 [-0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 1227 1226 1228 65 (parallel [
            (set (reg:SF 1047)
                (neg:SF (reg:SF 660 [ _574 ])))
            (use (reg:V4SF 1048))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":195 507 {*absnegsf2}
     (expr_list:REG_EQUAL (neg:SF (reg:SF 660 [ _574 ]))
        (nil)))
(insn 1228 1227 1229 65 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -88 [0xffffffffffffffa8])) [2 ct+0 S4 A32])
        (reg:SF 1047)) "CALRCH.f":195 131 {*movsf_internal}
     (nil))
(insn 1229 1228 1230 65 (set (reg/f:DI 1049)
        (symbol_ref:DI ("phys_") [flags 0x202]  <var_decl 0x7fe96ef06ea0 phys>)) "CALRCH.f":1 85 {*movdi_internal}
     (nil))
(insn 1230 1229 1231 65 (set (reg:SF 661 [ _575 ])
        (mem/c:SF (plus:DI (reg/f:DI 1049)
                (const_int 28 [0x1c])) [2 phys.cs+0 S4 A32])) "CALRCH.f":1 131 {*movsf_internal}
     (nil))
(insn 1231 1230 1232 65 (set (reg:SF 1050)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -88 [0xffffffffffffffa8])) [2 ct+0 S4 A32])) "CALRCH.f":196 131 {*movsf_internal}
     (nil))
(insn 1232 1231 1233 65 (set (reg:SF 662 [ _576 ])
        (div:SF (reg:SF 1050)
            (reg:SF 661 [ _575 ]))) "CALRCH.f":196 841 {*fop_sf_1}
     (nil))
(insn 1233 1232 1234 65 (set (reg:V4SF 1052)
        (mem/u/c:V4SF (symbol_ref/u:DI ("*.LC12") [flags 0x2]) [0  S16 A128])) "CALRCH.f":196 1282 {movv4sf_internal}
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF -0.0 [-0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 1234 1233 1235 65 (parallel [
            (set (reg:SF 1051)
                (neg:SF (reg:SF 662 [ _576 ])))
            (use (reg:V4SF 1052))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":196 507 {*absnegsf2}
     (expr_list:REG_EQUAL (neg:SF (reg:SF 662 [ _576 ]))
        (nil)))
(insn 1235 1234 1236 65 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -92 [0xffffffffffffffa4])) [2 ri+0 S4 A32])
        (reg:SF 1051)) "CALRCH.f":196 131 {*movsf_internal}
     (nil))
(insn 1236 1235 1237 65 (set (reg:SI 1053)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])) "CALRCH.f":197 86 {*movsi_internal}
     (nil))
(insn 1237 1236 1238 65 (set (reg:DI 663 [ _577 ])
        (sign_extend:DI (reg:SI 1053))) "CALRCH.f":197 149 {*extendsidi2_rex64}
     (nil))
(insn 1238 1237 1239 65 (parallel [
            (set (reg:DI 664 [ _578 ])
                (mult:DI (reg:DI 663 [ _577 ])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":197 349 {*muldi3_1}
     (nil))
(insn 1239 1238 1240 65 (set (reg:SI 1054)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALRCH.f":197 86 {*movsi_internal}
     (nil))
(insn 1240 1239 1241 65 (set (reg:DI 665 [ _579 ])
        (sign_extend:DI (reg:SI 1054))) "CALRCH.f":197 149 {*extendsidi2_rex64}
     (nil))
(insn 1241 1240 1242 65 (parallel [
            (set (reg:DI 666 [ _580 ])
                (mult:DI (reg:DI 665 [ _579 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":197 349 {*muldi3_1}
     (nil))
(insn 1242 1241 1243 65 (parallel [
            (set (reg:DI 667 [ _581 ])
                (plus:DI (reg:DI 664 [ _578 ])
                    (reg:DI 666 [ _580 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":197 222 {*adddi_1}
     (nil))
(insn 1243 1242 1244 65 (set (reg:SI 1055)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALRCH.f":197 86 {*movsi_internal}
     (nil))
(insn 1244 1243 1245 65 (set (reg:DI 668 [ _582 ])
        (sign_extend:DI (reg:SI 1055))) "CALRCH.f":197 149 {*extendsidi2_rex64}
     (nil))
(insn 1245 1244 1246 65 (parallel [
            (set (reg:DI 669 [ _583 ])
                (plus:DI (reg:DI 667 [ _581 ])
                    (reg:DI 668 [ _582 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":197 222 {*adddi_1}
     (nil))
(insn 1246 1245 1247 65 (parallel [
            (set (reg:DI 670 [ _584 ])
                (plus:DI (reg:DI 669 [ _583 ])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":197 222 {*adddi_1}
     (nil))
(insn 1247 1246 1248 65 (set (reg/f:DI 1056)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -112 [0xffffffffffffff90])) [3 richno+0 S8 A64])) "CALRCH.f":197 85 {*movdi_internal}
     (nil))
(insn 1248 1247 1249 65 (set (reg:SF 1057)
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -92 [0xffffffffffffffa4])) [2 ri+0 S4 A32])) "CALRCH.f":197 131 {*movsf_internal}
     (nil))
(insn 1249 1248 1250 65 (set (mem:SF (plus:DI (mult:DI (reg:DI 670 [ _584 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 1056)) [2 *richno_631(D) S4 A32])
        (reg:SF 1057)) "CALRCH.f":197 131 {*movsf_internal}
     (nil))
;;  succ:       66 (FALLTHRU)

;; basic block 66, loop depth 3, maybe hot
;;  prev block 65, next block 67, flags: (NEW, REACHABLE, RTL)
;;  pred:       65 (FALLTHRU)
;;              64
;;              52
;;              55
(code_label 1250 1249 1251 66 33 (nil) [3 uses])
(note 1251 1250 1252 66 [bb 66] NOTE_INSN_BASIC_BLOCK)
(insn 1252 1251 1254 66 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":150 221 {*addsi_1}
     (nil))
(jump_insn 1254 1252 1255 66 (set (pc)
        (label_ref 1253)) "CALRCH.f":150 683 {jump}
     (nil)
 -> 1253)
;;  succ:       50 (DFS_BACK)

(barrier 1255 1254 1256)
;; basic block 67, loop depth 2, maybe hot
;;  prev block 66, next block 68, flags: (NEW, REACHABLE, RTL)
;;  pred:       50
(code_label 1256 1255 1257 67 32 (nil) [1 uses])
(note 1257 1256 1258 67 [bb 67] NOTE_INSN_BASIC_BLOCK)
(insn 1258 1257 1260 67 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":149 221 {*addsi_1}
     (nil))
(jump_insn 1260 1258 1261 67 (set (pc)
        (label_ref 1259)) "CALRCH.f":149 683 {jump}
     (nil)
 -> 1259)
;;  succ:       48 (DFS_BACK)

(barrier 1261 1260 1262)
;; basic block 68, loop depth 1, maybe hot
;;  prev block 67, next block 69, flags: (NEW, REACHABLE, RTL)
;;  pred:       48
(code_label 1262 1261 1263 68 31 (nil) [1 uses])
(note 1263 1262 1264 68 [bb 68] NOTE_INSN_BASIC_BLOCK)
(insn 1264 1263 1266 68 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRCH.f":145 221 {*addsi_1}
     (nil))
(jump_insn 1266 1264 1267 68 (set (pc)
        (label_ref 1265)) "CALRCH.f":145 683 {jump}
     (nil)
 -> 1265)
;;  succ:       46 (DFS_BACK)

(barrier 1267 1266 1268)
;; basic block 69, loop depth 0, maybe hot
;;  prev block 68, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       46
(code_label 1268 1267 1269 69 30 (nil) [1 uses])
(note 1269 1268 1283 69 [bb 69] NOTE_INSN_BASIC_BLOCK)
(insn 1283 1269 0 69 (const_int 0 [0]) "CALRCH.f":207 718 {nop}
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)

